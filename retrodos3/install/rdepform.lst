     1                                  ; ****************************************************************************
     2                                  ; EPFORMAT.ASM (EPFORMAT.COM) - Retro DOS v4 Hard Disk Formatting Utility
     3                                  ; (RDEPFORM.S - RDEPFORM.COM)
     4                                  ; ----------------------------------------------------------------------------
     5                                  ; Extended DOS Partition (FAT File System) Format Utility for Retro DOS v4 OS.
     6                                  ; ----------------------------------------------------------------------------
     7                                  ; Last Update: 28/10/2023
     8                                  ; ----------------------------------------------------------------------------
     9                                  ; Beginning: 28/10/2023
    10                                  ; ----------------------------------------------------------------------------
    11                                  ; Assembler: NASM version 2.15 (rdepform.s)
    12                                  ; ----------------------------------------------------------------------------
    13                                  ; Modified from 'epformat.s'(EPFORMAT.COM) source code by Erdogan Tan
    14                                  ; (28/10/2023) - TRDOS 386 hard disk extended partition formatting utility -
    15                                  ; ----------------------------------------------------------------------------
    16                                  ; Derived from TRDOS Operating System v2.0 (80386) source code by Erdogan Tan
    17                                  ; hdformat.s (14/09/2020)
    18                                  ; ****************************************************************************
    19                                  ; Copyright (C) 2020-2023  Erdogan TAN 
    20                                  ; ****************************************************************************
    21                                  ; assembling: nasm epformat.s -l epformat.lst -o EPFORMAT.COM -Z error.txt
    22                                  
    23                                  ; Note: Only for formatting logical DOS drives in extended DOS partitions.
    24                                  
    25                                  ; ----------------------------------------------------------------------------
    26                                  ; equations
    27                                  ; ----------------------------------------------------------------------------
    28                                  
    29                                  ; boot sector parameters
    30                                  
    31                                  bsOemName	equ 3
    32                                  bsBytesPerSec	equ 11 ; 512 (word)
    33                                  bsSecPerClust	equ 13
    34                                  bsResSectors	equ 14
    35                                  bsFATs		equ 16
    36                                  bsRootDirEnts	equ 17
    37                                  bsSectors	equ 19
    38                                  bsMedia		equ 21
    39                                  bsFATsecs	equ 22
    40                                  bsSecPerTrack	equ 24 ; 18 (word)
    41                                  bsHeads		equ 26 ; 2 (word)
    42                                  bsHidden1	equ 28
    43                                  bsHidden2	equ 30
    44                                  bsHugeSectors	equ 32
    45                                  bsDriveNumber	equ 36
    46                                  bsReserved1	equ 37
    47                                  bsBpbSignature	equ 38 ; 29h (byte)
    48                                  bsVolumeID	equ 39
    49                                  bsVolumeLabel	equ 43
    50                                  bsFileSysType	equ 54 ; 'FAT12   '  (8 bytes)
    51                                  ;
    52                                  bsReserved2	equ 62
    53                                  ; TRDOS 386 v2.0 2018 Extensions
    54                                  bsDataStart	equ 64
    55                                  bsRootDirStart	equ 66
    56                                  bsRootDirSects	equ 68
    57                                  bsDirEntsPerSec equ 70
    58                                  
    59                                  ; FAT32 bs
    60                                  BPB_FATSz32	equ 36
    61                                  BPB_ExtFlags	equ 40
    62                                  BPB_FSVer	equ 42
    63                                  BPB_RootClus	equ 44
    64                                  BPB_FSInfo	equ 48
    65                                  BPB_BkBootSec	equ 50
    66                                  BPB_Reserved	equ 52
    67                                  BS_DrvNum	equ 64	; 80h
    68                                  BS_Reserved1	equ 65
    69                                  BS_BootSig	equ 66	; 29h (byte)
    70                                  BS_VolID	equ 67
    71                                  BS_VolLab	equ 71
    72                                  BS_FilSysType	equ 82	; 'FAT32   '  (8 bytes) 
    73                                  
    74                                  ; Masterboot / Partition Table at Beginning+1BEh
    75                                  ptBootable      equ 0
    76                                  ptBeginHead     equ 1
    77                                  ptBeginSector   equ 2
    78                                  ptBeginCylinder equ 3
    79                                  ptFileSystemID	equ 4
    80                                  ptEndHead       equ 5
    81                                  ptEndSector     equ 6
    82                                  ptEndCylinder   equ 7
    83                                  ptStartSector   equ 8
    84                                  ptSectors       equ 12
    85                                  
    86                                  partition_table equ 1BEh    
    87                                  
    88                                  ; ----------------------------------------------------------------------------
    89                                  ; code
    90                                  ; ----------------------------------------------------------------------------
    91                                  
    92                                  [BITS 16]
    93                                  [ORG 100h]
    94                                  
    95 00000000 FA                      	cli
    96 00000001 FC                      	cld
    97 00000002 0E                      	push	cs
    98 00000003 17                      	pop	ss
    99 00000004 BCFEFF                  	mov	sp, 0FFFEh
   100 00000007 FB                      	sti
   101                                  
   102                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   103                                  ; see if drive specified
   104                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   105                                  
   106 00000008 BE8000                  	mov	si, 80h			; PSP command tail
   107 0000000B 8A0C                    	mov	cl, [si]
   108 0000000D 08C9                    	or	cl, cl                               
   109 0000000F 7424                    	jz	short T_3		; jump if zero
   110                                  T_1:
   111 00000011 46                      	inc	si
   112                                  
   113 00000012 8A04                    	mov	al, [si]
   114 00000014 3C20                    	cmp	al, ' '			; is it SPACE ?
   115 00000016 7506                    	jne	short T_2
   116                                  
   117 00000018 FEC9                    	dec	cl                                  
   118 0000001A 75F5                    	jnz	short T_1                  
   119 0000001C EB17                    	jmp	short T_3
   120                                  T_2:
   121 0000001E 46                      	inc	si
   122                                  
   123 0000001F 3C68                    	cmp	al, 'h'
   124 00000021 7512                    	jne	short T_3 	
   125 00000023 803C64                  	cmp	byte [si], 'd'
   126 00000026 750D                    	jne	short T_3
   127 00000028 46                      	inc	si
   128 00000029 8A04                    	mov	al, [si]
   129 0000002B 3C30                    	cmp	al, '0'
   130 0000002D 740F                    	je	short T_4
   131 0000002F 7204                    	jb	short T_3
   132 00000031 3C33                    	cmp	al, '3'
   133 00000033 7609                    	jna	short T_4
   134                                  
   135                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   136                                  ; Write message
   137                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   138                                  
   139                                  T_3:
   140 00000035 BE[5A15]                	mov	si, RD_Welcome
   141 00000038 E85403                  	call	print_msg
   142                                  	;cmp	cl, 0
   143                                          ;ja	short T_44
   144 0000003B E93A03                  	jmp	T_44
   145                                  
   146                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   147                                  ; get drive code
   148                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   149                                  
   150                                  T_4:
   151 0000003E 46                      	inc	si
   152 0000003F 803C20                  	cmp	byte [si], ' '
   153 00000042 77F1                    	ja	short T_3		
   154                                  
   155                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   156                                  ; get drive parameters
   157                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   158                                  
   159 00000044 A2[CC17]                	mov	[RD_Drive], al	; '0' .. '3'
   160                                  
   161 00000047 A2[FF18]                	mov	[drv_str], al
   162                                  
   163 0000004A B408                    	mov	ah, 08h
   164 0000004C 88C2                    	mov	dl, al
   165 0000004E 80C250                  	add	dl, 80h -'0'		; make it 80h based 
   166 00000051 8816[5315]              	mov	[drv], dl
   167 00000055 CD13                    	int	13h			; return disk parameters
   168                                  
   169 00000057 0E                      	push	cs
   170 00000058 07                      	pop	es			; restore es
   171                                  
   172 00000059 08E4                    	or	ah, ah
   173 0000005B 7542                    	jnz	short T_6		; error
   174                                  	
   175 0000005D 88C8                    	mov	al, cl
   176 0000005F 243F                    	and	al, 63
   177 00000061 A2[5415]                	mov	[sectors], al
   178 00000064 C0E906                  	shr	cl, 6 
   179 00000067 86E9                    	xchg	ch, cl
   180 00000069 41                      	inc	cx
   181 0000006A 890E[5815]              	mov	[cylinders], cx
   182 0000006E FEC6                    	inc	dh
   183 00000070 8836[5615]              	mov	[heads], dh
   184 00000074 F6E6                    	mul	dh
   185                                  		; ax = heads * spt
   186 00000076 A3[AE20]                	mov	[csize], ax
   187 00000079 F7E1                    	mul	cx ; * cylinders
   188                                  		; dx:ax = chs limit
   189 0000007B A3[C818]                	mov	[CHS_limit], ax
   190 0000007E 8916[CA18]              	mov	[CHS_limit+2], dx
   191                                  
   192                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   193                                  ; read MBR
   194                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   195                                  
   196                                  	; check for (valid) extended dos partition
   197                                  
   198                                  	;mov	byte [RetryCount], 4
   199 00000082 BF0500                  	mov	di, 5
   200                                  
   201                                  	;mov	ax, 0201h		; read disk
   202 00000085 BB[B820]                	mov	bx, MBR			; location of masterboot code
   203                                  
   204 00000088 B90100                  	mov	cx, 1			; cylinder = 0
   205                                  					; sector = 1
   206 0000008B B600                    	mov	dh, 0			; head = 0
   207                                  	;mov	dl, [RD_Drive]	; drive 
   208                                  	;add	dl, 80h -'0'		; make it 80h based 
   209 0000008D 8A16[5315]              	mov	dl, [drv]
   210                                  T_5:
   211 00000091 B80102                  	mov	ax, 0201h
   212 00000094 CD13                    	int	13h
   213                                  	;jc	short T_46	
   214 00000096 7312                    	jnc	short T_7		; read masterboot sector, OK
   215                                  	
   216                                   	; reset hard disk(s)
   217 00000098 30E4                    	xor	ah, ah
   218                                  	;mov	dl, [drv]
   219 0000009A CD13                    	int	13h
   220                                  
   221                                  	;dec	byte [RetryCount]
   222 0000009C 4F                      	dec	di
   223 0000009D 75F2                    	jnz	short T_5
   224                                  
   225                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   226                                  ; write disk error message and terminate
   227                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   228                                  
   229                                  T_6:
   230 0000009F C606[F217]00            	mov	byte [zbyte], 0 ; message without (Y/N) question 
   231                                  
   232 000000A4 E8E502                  	call	T_46			; write error message
   233 000000A7 E9CE02                  	jmp	T_44 			; terminate
   234                                  
   235                                  T_7:
   236 000000AA 813E[B622]55AA          	cmp	word [MBR+510], 0AA55h 
   237 000000B0 75ED                            jne	short T_6
   238                                  
   239 000000B2 BE[7A22]                	mov	si, MBR+(partition_table+ptFileSystemID)
   240                                  T_8:
   241 000000B5 E80703                  	call	validate_extended_dos_partition
   242 000000B8 730F                    	jnc	short T_10	
   243                                   
   244 000000BA 83C610                  	add	si, 16
   245 000000BD 81FE[BA22]              	cmp	si, MBR+partition_table+ptFileSystemID+64
   246 000000C1 72F2                    	jb	short T_8
   247                                  T_9:
   248 000000C3 BE[8118]                	mov	si, RD_fatp_notfound
   249                                  	;call	print_msg
   250                                  	;jmp	T_44
   251 000000C6 E95802                  	jmp	T_40
   252                                  T_10:
   253                                  	; AL = EP type (05h or 0Fh)
   254 000000C9 3C0F                    	cmp	al, 0Fh
   255 000000CB 7604                    	jna	short T_11
   256 000000CD FE06[5215]              	inc	byte [lba]
   257                                  T_11: 
   258 000000D1 A1[F822]                	mov	ax, [EP_Start]
   259 000000D4 8B16[FA22]              	mov	dx, [EP_Start+2]
   260                                  T_12:
   261 000000D8 A3[FC22]                	mov	[EP_Start_x], ax
   262 000000DB 8916[FE22]              	mov	[EP_Start_x+2], dx
   263                                  T_13:
   264 000000DF BB[B820]                	mov	bx, bootsector
   265 000000E2 E8AE03                  	call	read_hd_sector
   266 000000E5 7309                    	jnc	short T_14
   267                                  	
   268 000000E7 803E[8018]00            	cmp	byte [ldd_count], 0
   269 000000EC 7771                    	ja	short T_18	
   270 000000EE EBAF                    	jmp	short T_6
   271                                  T_14:
   272 000000F0 813E[B622]55AA          	cmp	word [bootsector+510], 0AA55h 
   273 000000F6 7409                            je	short T_15
   274                                  
   275 000000F8 803E[8018]00            	cmp	byte [ldd_count], 0
   276 000000FD 7760                    	ja	short T_18	
   277 000000FF EBC2                    	jmp	short T_9 ; there is not a valid extd dos part.
   278                                  T_15:
   279 00000101 BE[7A22]                	mov	si, bootsector+(partition_table+ptFileSystemID)
   280 00000104 E8D302                  	call	validate_dos_partition
   281 00000107 730D                    	jnc	short T_16
   282                                  
   283 00000109 803E[8018]00            	cmp	byte [ldd_count], 0
   284 0000010E 774F                    	ja	short T_18	
   285                                  
   286 00000110 BE[5918]                	mov	si, RD_ep_ldd_defect ; not a logical dos drive
   287 00000113 E90B02                  	jmp	T_40
   288                                  
   289                                  T_16:
   290 00000116 FE06[8018]              	inc	byte [ldd_count]
   291 0000011A 83EE04                  	sub	si, ptFileSystemID
   292 0000011D A1[FC22]                	mov	ax, [EP_Start_x]
   293 00000120 8B16[FE22]              	mov	dx, [EP_Start_x+2]
   294 00000124 014408                  	add	[si+ptStartSector], ax
   295 00000127 11540A                  	adc	[si+ptStartSector+2], dx
   296                                  
   297 0000012A 8B3E[AA20]              	mov	di, [lddt_ptr]
   298 0000012E B90800                  	mov	cx, 8
   299 00000131 F3A5                    	rep 	movsw
   300                                  
   301 00000133 8A4C04                  	mov	cl, [si+ptFileSystemID]
   302 00000136 80F905                  	cmp	cl, 05h
   303 00000139 7409                    	je	short T_17
   304 0000013B 80F90F                  	cmp	cl, 0Fh
   305 0000013E 751F                    	jne	short T_18 ; there is not a next logical dos drive	
   306 00000140 FE06[5215]              	inc	byte [lba] ; LBA type disk r/w
   307                                  T_17:
   308 00000144 803E[8018]03            	cmp	byte [ldd_count], 3
   309 00000149 7714                    	ja	short T_18  ; max. 4 logical dos drive
   310 0000014B 893E[AA20]              	mov	[lddt_ptr], di
   311 0000014F A1[F822]                	mov	ax, [EP_Start]
   312 00000152 8B16[FA22]              	mov	dx, [EP_Start+2]
   313 00000156 034408                  	add	ax, [si+ptStartSector]
   314 00000159 13540A                  	adc	dx, [si+ptStartSector+2]
   315 0000015C E979FF                  	jmp	T_12
   316                                  
   317                                  T_18:
   318 0000015F BE[CC18]                	mov	si, ldd_table
   319 00000162 E82A02                  	call	print_msg
   320                                  
   321 00000165 30FF                    	xor	bh, bh
   322                                  
   323 00000167 B301                    	mov	bl, 1
   324 00000169 E88E02                  	call	fill_ldd_row
   325 0000016C BE[9C19]                	mov	si, ldd_row
   326 0000016F E81D02                  	call	print_msg
   327 00000172 B302                    	mov	bl, 2 
   328 00000174 381E[8018]              	cmp	[ldd_count], bl  ; 2
   329 00000178 722B                    	jb	short T_19 ; direct question (only one ldd)
   330 0000017A E87D02                  	call	fill_ldd_row
   331 0000017D BE[9C19]                	mov	si, ldd_row
   332 00000180 E80C02                  	call	print_msg
   333 00000183 B303                    	mov	bl, 3 
   334 00000185 381E[8018]              	cmp	[ldd_count], bl  ; 3
   335 00000189 721A                    	jb	short T_19 ; select menu
   336 0000018B E86C02                  	call	fill_ldd_row
   337 0000018E BE[9C19]                	mov	si, ldd_row
   338 00000191 E8FB01                  	call	print_msg
   339 00000194 B304                    	mov	bl, 4
   340 00000196 381E[8018]              	cmp	[ldd_count], bl  ; 4
   341 0000019A 7209                    	jb	short T_19 ; select menu
   342 0000019C E85B02                  	call	fill_ldd_row
   343 0000019F BE[9C19]                	mov	si, ldd_row
   344 000001A2 E8EA01                  	call	print_msg
   345                                  
   346                                  T_19:
   347 000001A5 BE[C619]                	mov	si, ldd_dline  ; print bottom line
   348 000001A8 E8E401                  	call	print_msg	
   349                                  
   350 000001AB 803E[8018]01            	cmp	byte [ldd_count], 1
   351 000001B0 7705                    	ja	short T_20
   352                                  
   353                                  	; the first logical dos partition in extended dos partition
   354 000001B2 BB[B822]                	mov	bx, lddt  ; start of logical dos drives
   355                                  			  ; (dos partitiona) table
   356                                  	
   357 000001B5 EB4C                    	jmp	short T_25	; pass select menu
   358                                  T_20:
   359 000001B7 A0[8018]                	mov	al, [ldd_count]
   360 000001BA 0430                    	add	al, '0'
   361 000001BC A2[1A1A]                	mov	[ldd_select_pn], al ; last logical dos drive number
   362                                  
   363                                  T_21:
   364 000001BF BE[F019]                	mov	si, ldd_select_msg
   365 000001C2 E8CA01                  	call	print_msg
   366                                  	
   367                                  T_22:
   368 000001C5 31C0                    	xor	ax, ax
   369 000001C7 CD16                    	int	16h			; wait for keyboard command
   370                                  	
   371 000001C9 3C1B                    	cmp	al, 27 ; ESC key
   372 000001CB 0F84A901                	je	T_44 ; CRLF and Exit
   373                                  
   374 000001CF 3C20                    	cmp	al, 32 ; SPACE key (or control keys or CR key etc.)
   375 000001D1 7711                    	ja	short T_24
   376 000001D3 7404                    	je	short T_23
   377                                  
   378 000001D5 3C0D                    	cmp	al, 13 ; CR/ENTER key
   379 000001D7 75EC                    	jne	short T_22  ; don't beep 
   380                                  
   381                                  	; Beeper
   382                                  T_23:	
   383 000001D9 B007                    	mov	al, 07h  ; beep
   384 000001DB B40E                    	mov	ah, 0Eh			
   385 000001DD BB0700                  	mov	bx, 07h             
   386 000001E0 CD10                    	int	10h
   387                                  	
   388 000001E2 EBE1                    	jmp	short T_22
   389                                  
   390                                  T_24:
   391 000001E4 8A26[8018]              	mov	ah, [ldd_count]
   392 000001E8 80C430                  	add	ah, '0'
   393 000001EB 3C31                    	cmp	al, '1'
   394 000001ED 72D0                    	jb	short T_21
   395 000001EF 38E0                    	cmp	al, ah
   396 000001F1 77CC                    	ja	short T_21
   397                                  	
   398 000001F3 A2[C517]                	mov	[RD_ldn], al
   399                                  
   400 000001F6 2C31                    	sub	al, '1'
   401 000001F8 C0E004                  	shl	al, 4 ; * 16
   402 000001FB 88C3                    	mov	bl, al
   403 000001FD 30FF                    	xor	bh, bh
   404 000001FF 81C3[B822]              	add	bx, lddt ; logical dos drive (partition) table
   405                                  T_25:
   406 00000203 891E[2023]              	mov	[lddt_save], bx
   407 00000207 B401                    	mov	ah, 1
   408 00000209 8A4704                  	mov	al, [bx+ptFileSystemID]  ; Partition ID
   409 0000020C 38E0                    	cmp	al, ah  ; 1 ; FAT12 file system
   410 0000020E 760E                    	jna	short T_26	
   411 00000210 FEC4                    	inc	ah  ; 2
   412 00000212 3C06                    	cmp	al, 6	; FAT 16 file system (>32MB)
   413 00000214 7408                    	je	short T_26
   414 00000216 7206                    	jb	short T_26 ; 4 ; FAT16 file sytem (<=32MB)
   415 00000218 3C0E                    	cmp	al, 0Eh
   416 0000021A 7402                    	je	short T_26 ; FAT16 LBA file sytem (>32MB)
   417 0000021C FEC4                    	inc	ah ; 3
   418                                  	; FAT32 CHS or FAT 32 LBA file system
   419                                  T_26:
   420 0000021E 8826[B418]              	mov	byte [fattype], ah
   421 00000222 A2[AC20]                	mov	[fsID], al
   422                                  
   423 00000225 80FC02                  	cmp	ah, 2
   424 00000228 7421                    	je	short T_29 ; FAT16 BS (default offset addr)
   425 0000022A 7214                    	jb	short T_28
   426                                  	; set format code pointer to FAT32 format code
   427 0000022C C706[4E0D][2B05]        	mov	word [trdos386fc], format_FAT32_fs
   428                                  	; set FS type string
   429 00000232 C706[7717]3332          	mov	word [fattype_str],'32'	; 'FAT32'
   430                                  	; ok.. read boot sector
   431 00000238 EB11                    	jmp	short T_29
   432                                  
   433                                  T_27:
   434                                  	; Partition size defect 
   435                                  	; (less than the minimum number of sectors required)
   436 0000023A BE[0518]                	mov	si, RD_psize_defect
   437                                  	;call	print_msg
   438                                  	;jmp	T_44
   439 0000023D E9E100                  	jmp	T_40
   440                                  
   441                                  T_28:
   442                                  	; set format code pointer to FAT12 format code
   443 00000240 C706[4E0D][E50A]        	mov	word [trdos386fc], format_FAT12_fs
   444 00000246 C606[7817]32            	mov	byte [fattype_str+1],'2' ; 'FAT12'
   445                                  
   446                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   447                                  ; read primary dos partition's boot sector
   448                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   449                                  
   450                                  T_29:	
   451                                  	;mov	byte [RetryCount], 5
   452                                  
   453 0000024B 8B36[2023]              	mov	si, [lddt_save] ; pt row for logical dos drive
   454                                  
   455 0000024F 8B4408                  	mov	ax, [si+ptStartSector]
   456 00000252 8B540A                  	mov	dx, [si+ptStartSector+2]
   457 00000255 A3[B020]                	mov	[dosp_start], ax
   458 00000258 8916[B220]              	mov	[dosp_start+2], dx
   459 0000025C 8B4C0C                  	mov	cx, [si+ptSectors]
   460 0000025F 8B5C0E                  	mov	bx, [si+ptSectors+2]
   461 00000262 890E[B420]              	mov	[dosp_size], cx
   462 00000266 891E[B620]              	mov	[dosp_size+2], bx
   463                                  
   464                                  	; check minimum partition size
   465 0000026A 803E[B418]03            	cmp	byte [fattype], 3 ;  FAT32 FS
   466 0000026F 730C                    	jnb	short T_31 ; yes
   467                                  T_30:
   468 00000271 09DB                    	or	bx, bx
   469 00000273 7515                    	jnz	short T_32
   470                                  
   471 00000275 3B0E[AE20]              	cmp	cx, [csize] ; sectors per cylinder
   472 00000279 730F                    	jnb	short T_32
   473 0000027B EBBD                    	jmp	short T_27
   474                                  T_31:
   475 0000027D 83FB01                  	cmp	bx, 1 ; >= 32MB ?
   476 00000280 7708                    	ja	short T_32
   477 00000282 72B6                    	jb	short T_27
   478                                  
   479 00000284 81F91504                	cmp	cx, 0415h  ; must be >= 66581 sectors
   480 00000288 72B0                    	jb	short T_27
   481                                  T_32:
   482 0000028A 01C1                    	add	cx, ax
   483 0000028C 11D3                    	adc	bx, dx
   484 0000028E 0F820DFE                	jc	T_6
   485                                  
   486 00000292 3B1E[CA18]              	cmp	bx, [CHS_limit+2]	
   487 00000296 BB[B820]                	mov	bx, bootsector
   488 00000299 7711                    	ja	short T_34 ; LBA read/write
   489 0000029B 7206                    	jb	short T_33
   490 0000029D 3B0E[C818]              	cmp	cx, [CHS_limit]
   491 000002A1 7709                    	ja	short T_34
   492                                  T_33:
   493                                  	; CHS read
   494                                  
   495                                  	;mov	ax, [dosp_start]
   496                                  	;mov	dx, [dosp_start+2]
   497                                  
   498 000002A3 E8F401                  	call	read_chs_sector
   499 000002A6 0F82F5FD                	jc	T_6
   500 000002AA EB0C                    	jmp	short T_35
   501                                  T_34:
   502 000002AC C606[5215]01            	mov	byte [lba], 1 ; LBA r/w is required
   503                                  
   504                                  	;mov	ax, [dosp_start]
   505                                  	;mov	dx, [dosp_start+2]
   506                                  	
   507 000002B1 E83402                  	call	read_lba_sector
   508 000002B4 0F82E7FD                	jc	T_6	 
   509                                  T_35:
   510 000002B8 813E[B622]55AA          	cmp	word [bootsector+510], 0AA55h
   511 000002BE 7551                    	jne	short T_38
   512                                  
   513 000002C0 813E[C320]0002          	cmp	word [bootsector+bsBytesPerSec], 512
   514 000002C6 7549                    	jne	short T_38
   515                                  
   516 000002C8 C606[CD20]F8            	mov	byte [bootsector+bsMedia], 0F8h
   517 000002CD 7542                    	jne	short T_38
   518                                  
   519 000002CF 803E[B418]02            	cmp	byte [fattype], 2
   520 000002D4 7722                    	ja	short T_37
   521                                  
   522 000002D6 803E[DE20]29            	cmp	byte [bootsector+bsBpbSignature], 29h
   523 000002DB 7534                    	jne	short T_38
   524 000002DD 66813E[EE20]464154-     	cmp	dword [bootsector+bsFileSysType], 'FAT1'
   524 000002E5 31                 
   525 000002E6 7529                    	jne	short T_38
   526                                  
   527 000002E8 A0[F220]                	mov	al, [bootsector+bsFileSysType+4]
   528 000002EB 3C36                    	cmp	al, '6'
   529 000002ED 7404                    	je	short T_36
   530                                  
   531 000002EF 3C32                    	cmp	al, '2'
   532 000002F1 751E                    	jne	short T_38
   533                                  
   534                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   535                                  ; format question (and warning msg)
   536                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   537                                  
   538                                  T_36:
   539 000002F3 BE[E216]                	mov	si, RD_Format_warning ; warning is required
   540 000002F6 EB1C                    	jmp	short T_39
   541                                  T_37:
   542 000002F8 803E[FA20]29            	cmp	byte [bootsector+BS_BootSig], 29h
   543 000002FD 7512                    	jne	short T_38
   544 000002FF 66813E[0A21]464154-     	cmp	dword [bootsector+BS_FilSysType], 'FAT3'
   544 00000307 33                 
   545 00000308 7507                    	jne	short T_38
   546 0000030A 803E[0E21]32            	cmp	byte [bootsector+BS_FilSysType+4], '2'
   547 0000030F 74E2                    	je	short T_36
   548                                  T_38:
   549 00000311 BE[3817]                	mov	si, RD_Do_you_want ; no need to warning
   550                                  T_39:
   551 00000314 E87800                  	call	print_msg
   552                                  
   553 00000317 E88400                  	call	get_answer
   554 0000031A 3C59                    	cmp	al, 'Y'
   555 0000031C 7408                    	je	short T_41
   556                                  
   557 0000031E BE[8D17]                	mov	si, _no_str
   558                                  T_40:
   559 00000321 E86B00                  	call	print_msg
   560                                  
   561 00000324 EB52                    	jmp	short T_44
   562                                  T_41:
   563 00000326 BE[8617]                	mov	si, _yes_str
   564 00000329 E86300                  	call	print_msg
   565                                  
   566 0000032C BE[9B17]                	mov	si, RD_PressKeyWhenReady
   567 0000032F E85D00                  	call	print_msg
   568                                  T_42:
   569 00000332 31C0                    	xor	ax, ax
   570 00000334 CD16                    	int	16h			; wait for keyboard command
   571 00000336 3C0D                    	cmp	al, 'M'-40h		; Enter (OK) key
   572                                  	;je	short T_43		; write
   573 00000338 740A                    	je	short T_49 ; 28/10/2023
   574 0000033A 3C03                    	cmp	al, 'C'-40h
   575 0000033C 743A                    	je	short T_44		; no write (exit)
   576 0000033E 3C1B                    	cmp	al, 27
   577 00000340 7436                    	je	short T_44
   578 00000342 EBEE                    	jmp	short T_42
   579                                  
   580                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   581                                  ; clear fat buffer and start formatting
   582                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   583                                  
   584                                  	; 28/10/2023
   585                                  T_49:
   586 00000344 803E[B418]03            	cmp	byte [fattype], 3 ; FAT32  ?
   587 00000349 750E                    	jne	short T_43
   588                                  
   589                                  	; Temporary FAT32 note for Retro DOS v4
   590                                  	; (This code will be removed when the Retro DOS v5
   591                                  	;  FAT32 boot sector code will be ready.)" ; 28/10/2023
   592                                  
   593 0000034B BE[E01A]                	mov	si, FAT32_note
   594 0000034E E83E00                  	call	print_msg
   595 00000351 30E4                    	xor	ah, ah
   596 00000353 CD16                    	int	16h	
   597 00000355 3C0D                    	cmp	al, 'M'-40h ; Enter (OK) key
   598 00000357 751F                    	jne	short T_44
   599                                  T_43:
   600 00000359 BE[9817]                	mov	si, RD_CRLF
   601 0000035C E83000                  	call	print_msg
   602                                  
   603                                  	; Clear buffer in BSS 
   604 0000035F BF[B820]                	mov	di, HDFORMAT_FATBUFFER
   605 00000362 31C0                    	xor	ax, ax
   606 00000364 B90001                  	mov	cx, 256
   607 00000367 F3AB                    	rep	stosw
   608                                  
   609                                  	; Clear volume name field
   610 00000369 BF[1423]                	mov	di, StrVolumeName
   611 0000036C B10C                    	mov	cl, 12
   612 0000036E F3AA                    	rep	stosb
   613                                  
   614 00000370 8A16[AC20]              	mov	dl, [fsID] ; Partition ID
   615                                  
   616 00000374 FF26[4E0D]              	jmp	word [trdos386fc]
   617                                  
   618                                  T_44:
   619 00000378 BE[9817]                	mov	si, RD_CRLF
   620                                  Exit:
   621 0000037B E81100                  	call	print_msg
   622 0000037E B8004C                  	mov	ax, 4C00h		; terminate
   623 00000381 CD21                    	int	21h
   624                                  T_45:
   625 00000383 E81800                  	call	get_answer
   626 00000386 3C59                    	cmp	al, 'Y'
   627 00000388 74CF                    	je	short T_43
   628 0000038A EBEC                    	jmp	short T_44
   629                                  
   630                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   631                                  ; disk r/w error or disk not ready
   632                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   633                                  
   634                                  T_46:
   635 0000038C BE[D017]                	mov	si, RD_disk_NotReadyOrError
   636                                  	;;call	print_msg
   637                                  	;;jmp	short T_45
   638                                  	;jmp	short print_msg
   639                                  
   640                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   641                                  ; print message
   642                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   643                                  
   644                                  print_msg:
   645                                  T_47:
   646 0000038F AC                      	lodsb				; Load byte at DS:SI to AL
   647 00000390 20C0                    	and	al, al            
   648 00000392 7409                    	jz	short T_48       
   649 00000394 B40E                    	mov	ah, 0Eh			
   650 00000396 BB0700                  	mov	bx, 07h             
   651 00000399 CD10                    	int	10h			; BIOS Service func ( ah ) = 0Eh
   652                                  					; Write char as TTY
   653                                  					; AL-char BH-page BL-color
   654 0000039B EBF2                    	jmp     short T_47         
   655                                  T_48:
   656                                  _NO_:
   657 0000039D C3                      	retn
   658                                  
   659                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   660                                  ; Yes/No
   661                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   662                                  
   663                                  get_answer:
   664 0000039E 31C0                    	xor	ax, ax
   665 000003A0 CD16                    	int	16h			; wait for keyboard command
   666 000003A2 3C79                    	cmp	al, 'y'
   667 000003A4 7416                    	je	short _yes		; retry
   668 000003A6 3C59                    	cmp	al, 'Y'
   669 000003A8 7414                    	je	short _YES_
   670 000003AA 3C6E                    	cmp	al, 'n'
   671 000003AC 74EF                    	je	short _NO_ 		; exit
   672 000003AE 3C4E                    	cmp	al, 'N'
   673 000003B0 74EB                    	je	short _NO_
   674 000003B2 3C03                    	cmp	al, 'C'-40h
   675 000003B4 74E7                    	je	short _NO_                 
   676 000003B6 3C1B                    	cmp	al, 27
   677 000003B8 74E3                    	je	short _NO_
   678 000003BA EBE2                    	jmp	short get_answer
   679                                  _yes:
   680 000003BC B059                    	mov	al, 'Y'
   681                                  _YES_:
   682 000003BE C3                      	retn
   683                                  
   684                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   685                                  ; get and set partition type for formatting
   686                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   687                                  
   688                                  validate_extended_dos_partition:
   689                                  	
   690                                  	; INPUT:
   691                                  	;   si = partition table entry offset + file system ID 
   692                                  	; OUTPUT:
   693                                  	;   cf = 0 -> al = extended DOS partition ID
   694                                  	;			 (05h,0Fh)		
   695                                  	;	      ;ah = 0
   696                                  	;
   697                                  	;	[EP_Start] is set
   698                                  	;
   699                                  	;   cf = 1 -> not an extended DOS partition	
   700                                  	;
   701                                  	; Modified registers: ax, cx
   702                                  
   703                                  	;sub	ah, ah ; mov ah, 0
   704                                  
   705 000003BF 8A04                    	mov 	al, [si]
   706                                  
   707 000003C1 3C05                    	cmp	al, 05h	; Extended DOS partition (CHS)
   708 000003C3 7406                    	je	short VEP_clc
   709                                  	
   710 000003C5 3C0F                    	cmp	al, 0Fh	; Extended DOS partition (CHS)
   711 000003C7 7402                    	je	short VEP_clc
   712                                  VEP_stc:
   713 000003C9 F9                      	stc
   714 000003CA C3                      	retn
   715                                  VEP_clc:
   716 000003CB 8B4C04                  	mov	cx, [si+ptStartSector-ptFileSystemID]
   717 000003CE 890E[F822]              	mov	[EP_Start], cx
   718 000003D2 8B4C06                  	mov	cx, [si+2+ptStartSector-ptFileSystemID]
   719 000003D5 890E[FA22]              	mov	[EP_Start+2], cx
   720                                  	;mov	cx, [si+2+ptSectors-ptFileSystemID]
   721                                  	;mov	[EP_Size+2], cx
   722                                  	;mov	cx, [si+ptSectors-ptFileSystemID]
   723                                  	;mov	[EP_Size], cx
   724 000003D9 C3                      	retn 
   725                                  
   726                                  validate_dos_partition:
   727                                  	
   728                                  	; INPUT:
   729                                  	;   si = partition table entry, partition ID offset
   730                                  	; OUTPUT:
   731                                  	;   cf = 0 -> al = primary DOS partition ID
   732                                  	;			 (01h,04h,06h,0Bh,0Ch,0Eh)		
   733                                  	;
   734                                  	;   cf = 1 -> not a primary DOS partition	
   735                                  
   736 000003DA 8A04                    	mov 	al, [si]
   737                                  
   738 000003DC 3C01                    	cmp	al, 01h	; FAT12 partition
   739 000003DE 7613                    	jna	short V_2
   740                                  
   741 000003E0 3C06                    	cmp 	al, 06h ; FAT16 CHS partition (>=32MB)
   742 000003E2 7707                    	ja	short V_1
   743 000003E4 740D                    	je	short V_2
   744                                  
   745 000003E6 3C04                    	cmp	al, 04h	; FAT16 CHS partition (< 32MB)
   746 000003E8 770E                    	ja	short V_4
   747 000003EA C3                      	retn
   748                                  V_1:
   749 000003EB 3C0C                    	cmp	al, 0Ch	; FAT32 LBA partition
   750 000003ED 7404                    	je	short V_2
   751 000003EF 7703                    	ja	short V_3
   752                                  
   753 000003F1 3C0B                    	cmp	al, 0Bh	; FAT32 CHS partition 
   754                                  V_2:
   755 000003F3 C3                      	retn 
   756                                  V_3:
   757 000003F4 3C0E                    	cmp	al, 0Eh	; FAT16 LBA partition
   758 000003F6 74FB                    	je	short V_2
   759                                  V_4:
   760 000003F8 F9                      	stc
   761 000003F9 C3                      	retn
   762                                  
   763                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   764                                  ; preparing text row for logical dos drive
   765                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   766                                  
   767                                  fill_ldd_row:
   768                                  	; bl = selected logical drive number 
   769                                  	; bh = 0
   770                                  
   771                                  	;xor	bh, bh
   772                                  	
   773 000003FA 88D8                    	mov	al, bl
   774 000003FC 0430                    	add	al, '0'
   775 000003FE A2[AD19]                	mov	[ldd_row_dn], al
   776 00000401 FECB                    	dec	bl
   777 00000403 7403                    	jz	short flddtr_0
   778 00000405 C0E304                  	shl	bl, 4 ; * 16
   779                                  flddtr_0:
   780 00000408 81C3[B822]              	add	bx, lddt
   781 0000040C 8A4704                  	mov	al, [bx+ptFileSystemID]
   782 0000040F 3C01                    	cmp 	al, 1				
   783 00000411 7508                    	jne	short flddtr_1
   784 00000413 C706[B419]3132          	mov	word [ldd_row_fs], "12"
   785 00000419 EB16                    	jmp	short flddtr_4
   786                                  flddtr_1:
   787 0000041B 3C06                    	cmp	al, 06h		
   788 0000041D 7700                    	ja	short flddtr_2
   789                                  flddtr_2:
   790 0000041F C706[B419]3136          	mov	word [ldd_row_fs], "16"
   791 00000425 EB0A                    	jmp	short flddtr_4
   792                                  flddtr_3:
   793 00000427 3C0E                    	cmp	al, 0Eh
   794 00000429 75F4                    	jne	short flddtr_2
   795                                  	; al = 0Bh or 0Ch
   796 0000042B C706[B419]3332          	mov	word [ldd_row_fs], "32"	
   797                                  flddtr_4:
   798 00000431 8B470C                  	mov	ax, [bx+ptSectors]
   799 00000434 8B570E                  	mov	dx, [bx+ptSectors+2]	
   800 00000437 81FA0001                	cmp	dx, 100h ; 8GB limit
   801 0000043B 720D                    	jb	short flddtr_6 ; display size as MB or KB
   802                                  flddtr_5:
   803 0000043D 89D0                    	mov	ax, dx
   804 0000043F C1E805                  	shr	ax, 5 ; / 32
   805                                  	; GB
   806 00000442 E83400                  	call	convert_to_decimal	
   807 00000445 B84742                  	mov	ax, 'GB'
   808 00000448 EB26                    	jmp	short flddtr_9
   809                                  flddtr_6:
   810 0000044A 09D2                    	or	dx, dx
   811 0000044C 750F                    	jnz	short flddtr_7 ; MB
   812 0000044E 3D0008                  	cmp	ax, 2048
   813 00000451 7312                    	jnb	short flddtr_8 ; MB
   814 00000453 D1E8                    	shr	ax, 1 ; / 2
   815                                  	; KB
   816 00000455 E82100                  	call	convert_to_decimal
   817                                  	; di points to unit location
   818 00000458 B84B42                  	mov	ax, 'KB' 		
   819 0000045B EB13                    	jmp	short flddtr_9
   820                                  flddtr_7:
   821 0000045D F6C21F                  	test	dl, 1Fh ; flat ? 
   822 00000460 74DB                    	jz	short flddtr_5
   823 00000462 C1E205                  	shl	dx, 5  ; convert GB to MB
   824                                  flddtr_8:
   825 00000465 C1E80B                  	shr	ax, 11 ; / 2048 
   826 00000468 09D0                    	or	ax, dx ; MB
   827                                  	; MB
   828 0000046A E80C00                  	call	convert_to_decimal	
   829 0000046D B84D42                  	mov	ax, 'MB'
   830                                  flddtr_9:
   831 00000470 AB                      	stosw	; volume size unit (KB,MB,GB)
   832                                  	 ;CRLF
   833 00000471 B80D0A                  	mov	ax, 0A0Dh ; al = 0Dh, ah = 0Ah
   834 00000474 AB                      	stosw
   835 00000475 28C0                    	sub al, al ; 0
   836 00000477 AA                      	stosb
   837 00000478 C3                      	retn
   838                                  
   839                                  convert_to_decimal:
   840 00000479 89E5                    	mov	bp, sp
   841 0000047B B90A00                  	mov	cx, 10
   842                                  cvd_loop1:
   843 0000047E 31D2                    	xor	dx, dx
   844 00000480 F7F1                    	div	cx
   845 00000482 52                      	push	dx
   846 00000483 09C0                    	or	ax, ax
   847 00000485 75F7                    	jnz	short cvd_loop1	
   848 00000487 BF[BB19]                	mov	di, ldd_row_sz	
   849                                  cvd_loop2:
   850 0000048A 58                      	pop	ax
   851 0000048B 0430                    	add	al, '0'
   852 0000048D AA                      	stosb
   853 0000048E 39EC                    	cmp	sp, bp
   854 00000490 75F8                    	jne	short cvd_loop2
   855                                  
   856                                  	; di points to unit location
   857 00000492 C3                      	retn
   858                                  
   859                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   860                                  ; disk read
   861                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   862                                  
   863                                  read_hd_sector:
   864 00000493 803E[5215]00            	cmp	byte [lba], 0
   865 00000498 774E                    	ja	short  read_lba_sector
   866                                  
   867                                  read_chs_sector:
   868                                  	; Derived from 'proc_write_chs_sector' in HDFORMAT.ASM (30/07/2011)
   869                                  	; (TRDOS v1, Singlix FS formatting utility)
   870 0000049A C606[AD20]02            	mov	byte [rw], 2 ; read
   871 0000049F EB05                    	jmp	short chs_rw
   872                                  
   873                                  write_chs_sector:
   874                                  	; Derived from 'proc_write_chs_sector' in HDFORMAT.ASM (30/07/2011)
   875                                  	; (TRDOS v1, Singlix FS formatting utility)
   876 000004A1 C606[AD20]03            	mov	byte [rw], 3 ; write
   877                                  	;jmp	short chs_rw
   878                                  chs_rw:
   879 000004A6 56                      	push	si
   880 000004A7 51                              push	cx        
   881                                  chs_rw_0:
   882 000004A8 BF0500                  	mov	di, 5                    
   883                                  chs_rw_1:               
   884 000004AB 52                      	push	dx	; Linear sector #
   885 000004AC 50                      	push	ax	; DX_AX = Linear address (sectors)
   886 000004AD 8B0E[5415]              	mov	cx, [sectors]
   887 000004B1 53                      	push	bx
   888                                  
   889 000004B2 E85C08                  	call    div32	; 32 bit divide
   890                                  
   891 000004B5 89D9                    	mov	cx, bx	; Sector (zero based)
   892 000004B7 41                      	inc	cx	; To make it 1 based
   893 000004B8 51                      	push	cx
   894 000004B9 8B0E[5615]              	mov     cx, [heads]
   895 000004BD E85108                  	call	div32	; Convert track to head & cyl
   896 000004C0 88DE                    	mov	dh, bl	; BX = Head (max. FFh)
   897 000004C2 59                      	pop	cx	; AX=Cyl, DH=Head, CX=Sector
   898 000004C3 5B                      	pop     bx	; ES:BX = Buffer
   899                                  
   900 000004C4 8A16[5315]              	mov	dl, [drv]
   901 000004C8 88C5                    	mov	ch, al                   
   902 000004CA D0CC                    	ror	ah, 1	; Rotate right
   903 000004CC D0CC                    	ror	ah, 1                   
   904 000004CE 08E1                    	or	cl, ah                   
   905                                  chs_rw_2:
   906 000004D0 8A26[AD20]              	mov	ah, [rw] ; 02h = read, 03h = write
   907 000004D4 B001                    	mov	al, 01h
   908 000004D6 CD13                    	int	13h	; BIOS Service func (ah) = 2/3
   909                                  			; Read/Write disk sectors
   910                                  			; AL-sec num CH-track CL-sec
   911                                  			; DH-head DL-drive ES:BX-buffer
   912                                  			; CF-flag AH-status AL-sectors written/read
   913                                  			; If CF = 1 then AH = Error code (>0) 
   914                                          
   915                                  	;mov	[error], ah
   916 000004D8 7309                    	jnc     short chs_rw_3
   917 000004DA 4F                      	dec	di                 
   918 000004DB 7406                    	jz	short chs_rw_3 
   919                                          
   920 000004DD 30E4                    	xor	ah, ah                   
   921                                  	;mov	dl, [drv]
   922 000004DF CD13                    	int	13h	; BIOS Service func (ah) = 0
   923                                  			; Reset disk system
   924 000004E1 EBED                    	jmp	short chs_rw_2
   925                                  
   926                                  chs_rw_3:
   927 000004E3 58                      	pop	ax
   928 000004E4 5A                      	pop	dx
   929 000004E5 59                      	pop	cx
   930 000004E6 5E                      	pop	si	
   931 000004E7 C3                      	retn		; db 0C3h
   932                                  
   933                                  read_lba_sector:
   934                                  	; trhdboot.s (2020), hdformat.asm (2011)
   935 000004E8 C606[AD20]42            	mov	byte [rw], 42h
   936 000004ED EB0C                    	jmp	short lba_rw
   937                                  
   938                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   939                                  ; disk write
   940                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   941                                  
   942                                  write_hd_sector:
   943 000004EF 803E[5215]00            	cmp	byte [lba], 0
   944 000004F4 76AB                    	jna	short  write_chs_sector
   945                                  
   946                                  write_lba_sector:
   947                                  	; trhdboot.s (2020), hdformat.asm (2011)
   948 000004F6 C606[AD20]43            	mov	byte [rw], 43h
   949                                  	;jmp	short lba_rw
   950                                  lba_rw:
   951 000004FB BF0500                  	mov	di, 5
   952                                  lba_rw_1:
   953                                  	;pusha				; db 60h
   954 000004FE 60                      	db	60h
   955                                  	;push 	0                       ; db 6Ah, 00h
   956 000004FF 6A00                    	db	6Ah, 0
   957                                  	;push	0                       ; db 6Ah, 00h
   958 00000501 6A00                    	db	6Ah, 0
   959 00000503 52                      	push    dx
   960 00000504 50                      	push    ax
   961 00000505 06                      	push    es
   962 00000506 53                      	push    bx
   963                                  	;push	1			; db 6Ah, 01h
   964 00000507 6A01                    	db	6Ah, 01h                     
   965                                  	;push	10h                     ; db 6Ah, 10h
   966 00000509 6A10                    	db	6Ah, 10h
   967                                  
   968 0000050B 89E6                    	mov     si, sp
   969 0000050D 8A16[5315]              	mov     dl, [drv]
   970 00000511 30C0                    	xor	al, al	; verify off 
   971                                  lba_rw_2:
   972 00000513 8A26[AD20]              	mov     ah, [rw] ; 42h = LBA read, 43h = LBA write
   973                                  	;xor	al, al	; verify off 
   974 00000517 CD13                    	int     13h
   975                                  
   976                                  	;mov	[error], ah
   977 00000519 730D                    	jnc     short lba_rw_3
   978                                  
   979 0000051B 4F                      	dec	di                 
   980 0000051C 740A                    	jz	short lba_rw_3 
   981                                          
   982 0000051E 30E4                    	xor	ah, ah                   
   983                                  	;mov	dl, [drv]
   984 00000520 CD13                    	int	13h	; BIOS Service func (ah) = 0
   985                                  			; Reset disk system
   986                                  
   987                                  	;mov	word [si+2], 1 ; set r/w count to 1 again
   988 00000522 C6440201                	mov	byte [si+2], 1
   989                                  
   990 00000526 EBEB                    	jmp	short lba_rw_2
   991                                  
   992                                  lba_rw_3:
   993                                  	;popa
   994 00000528 61                      	db	61h
   995                                  	;popa
   996 00000529 61                      	db	61h
   997 0000052A C3                      	retn
   998                                  
   999                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1000                                  ; FAT32 FORMATTING
  1001                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1002                                  
  1003                                  ; ((TRDOS 386 criter))
  1004                                  ; Minimum size of FAT32 FS = 65525 + 512 + 512 + 32
  1005                                  ; >= 66581 sectors (or >= 65525 data clusters)
  1006                                  	
  1007                                  format_FAT32_fs:
  1008                                  	;mov	ax, 000Ch ; db 0Ch, 00h ; 'or al, 0'
  1009                                  	;cmp	dl, al ; 0Ch
  1010                                  	;je	short FAT32_lba_format
  1011                                  	;mov	ax, 0C00Bh ; db 0Bh, 0C0h ; 'or ax, ax'
  1012                                  ;FAT32_lba_format:
  1013                                  	; Put TRDOS 386 FAT32 partition magic word 
  1014                                  	; at offset 5Ah, in TRDOS386 FAT32 boot sector 0.
  1015 0000052B BD[520D]                	mov	bp, RD_FAT32_hd_bs
  1016 0000052E 8D7E03                  	lea	di, [bp+3]
  1017 00000531 BE[521A]                	mov	si, bs_oem_name
  1018 00000534 B90400                  	mov	cx, 4
  1019 00000537 F3A5                    	rep	movsw 
  1020                                  	;mov	[bp+5Ah], ax	; [loc_5A]
  1021 00000539 C7465A0BC0              	mov	word [bp+5Ah], 0C00Bh
  1022 0000053E A1[5415]                	mov	ax, [sectors]
  1023 00000541 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
  1024 00000544 A1[5615]                	mov	ax, [heads]
  1025 00000547 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
  1026 0000054A A1[B020]                	mov	ax, [dosp_start]
  1027 0000054D 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
  1028 00000550 A1[B220]                	mov	ax, [dosp_start+2]
  1029 00000553 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
  1030 00000556 A1[B420]                	mov	ax, [dosp_size]
  1031 00000559 894620                  	mov	[bp+20h], ax	; [BPB_TotSec32]
  1032 0000055C 8B16[B620]              	mov	dx, [dosp_size+2]
  1033 00000560 895622                  	mov	[bp+22h], dx	; [BPB_TotSec32+2]
  1034                                  	
  1035                                  	; Sectors per cluster calculation
  1036                                  	; (According to MS FAT32 FS specification.)
  1037 00000563 B108                    	mov	cl, 8  ; 8 sectors per cluster
  1038 00000565 83FA08                  	cmp	dx, 8  ; >= 532480 sectors
  1039 00000568 7709                    	ja	short FAT32_f_2 ; 8 sectors per cluster
  1040 0000056A 7205                    	jb	short FAT32_f_1 ; 1 sector per cluster	
  1041 0000056C 3D0020                  	cmp	ax, 2000h ; dx_ax = (8*65536)+8192
  1042 0000056F 7302                    	jnb	short FAT32_f_2
  1043                                  FAT32_f_1:
  1044 00000571 B101                    	mov	cl, 1	; 1 sector per cluster		
  1045                                  FAT32_f_2:
  1046 00000573 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
  1047                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
  1048                                  	;mov	word [bp+0Eh], 32 ; [BPB_RsvdSecCnt] 
  1049                                  
  1050                                  	; Calculating FAT size in sectors
  1051                                  	; (According to MS FAT32 FS Specification, 2000)
  1052                                  
  1053                                  	; DX_AX = partition (volume) size in sectors
  1054 00000576 2B460E                  	sub	ax, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 32
  1055 00000579 83DA00                  	sbb	dx, 0
  1056                                  		; TmpVal1 = DiskSize - (BPB_ResvdSecCnt +
  1057                                  		;	     		RootDirsectors)
  1058                                  		; RootDirSectors = 0 (for FAT32 FS)
  1059 0000057C 89CB                    	mov	bx, cx ; ch = 0
  1060 0000057E C1E308                  	shl	bx, 8 ; * 256
  1061 00000581 8A4E10                  	mov	cl, [bp+10h] ; [BPB_NumFATs] 
  1062 00000584 01CB                    	add	bx, cx	
  1063                                  		; TmpVal2 = (256*BPB_SecPerClus)+BPB_NumFATs
  1064 00000586 D1EB                    	shr	bx, 1
  1065                                  		; TmpVal2 = TmpVal2/2
  1066 00000588 89D9                    	mov	cx, bx
  1067 0000058A 4B                      	dec	bx  ; TmpVal2-1
  1068 0000058B 01D8                    	add	ax, bx
  1069 0000058D 83D200                  	adc	dx, 0
  1070 00000590 E87E07                  	call	div32
  1071                                  		; FATSz = (TmpVal1+(TmpVal2-1))/TmpVal2
  1072                                  	; DX_AX = FAT size in sectors
  1073 00000593 894624                  	mov	[bp+24h], ax	; [BPB_FATSz32]
  1074 00000596 895626                  	mov	[bp+26h], dx	; [BPB_FATSz32+2]
  1075                                  	; * 2
  1076 00000599 89D3                    	mov	bx, dx
  1077 0000059B 01C0                    	add	ax, ax
  1078 0000059D 11D3                    	adc	bx, dx
  1079                                  	; BX_AX = [BPB_NumFATs] * [BPB_FATSz32]
  1080 0000059F 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 32
  1081 000005A2 01C1                    	add	cx, ax
  1082 000005A4 83D300                  	adc	bx, 0
  1083                                  	; BX_CX = [BPB_RsvdSecCnt]+[BPB_NumFATs]*[BPB_FATSz32]
  1084 000005A7 8B4620                  	mov	ax, [bp+20h]	; [BPB_TotSec32]
  1085 000005AA 8B5622                  	mov	dx, [bp+22h]	; [BPB_TotSec32+2]
  1086 000005AD 29C8                    	sub	ax, cx
  1087 000005AF 19DA                    	sbb	dx, bx
  1088 000005B1 890E[0023]              	mov	[data_start], cx
  1089 000005B5 891E[0223]              	mov	[data_start+2], bx
  1090                                  	; DX_AX = Data sectors
  1091 000005B9 A3[0423]                	mov	[data_sectors], ax
  1092 000005BC 8916[0623]              	mov	[data_sectors+2], dx
  1093 000005C0 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1094 000005C3 30ED                    	xor	ch, ch
  1095 000005C5 E84907                  	call	div32 ; DX_AX/CX
  1096                                  	; DX_AX = Count of clusters (rounded down)
  1097 000005C8 A3[0823]                	mov	[cluster_count], ax
  1098 000005CB 8916[0A23]              	mov	[cluster_count+2], dx
  1099                                  		
  1100 000005CF 8D7E47                  	lea	di, [bp+71] ; [BS_VolLab]
  1101 000005D2 E89B01                  	call	write_volume_name
  1102 000005D5 8D7643                  	lea	si, [bp+67] ; [BS_VolID]
  1103 000005D8 E8F401                  	call	write_volume_serial
  1104 000005DB E8F402                  	call	write_cluster_count
  1105                                  
  1106 000005DE E87502                  	call	write_formatting_msg
  1107 000005E1 B000                    	mov	al, 0
  1108 000005E3 E8CD02                  	call	write_format_percent_x
  1109                                  
  1110 000005E6 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
  1111 000005E9 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1112 000005EC 0106[0023]              	add	[data_start], ax
  1113 000005F0 1116[0223]              	adc	[data_start+2], dx
  1114                                  FAT32_f_3:
  1115                                  	; DX_AX = FAT32 Boot Sector address
  1116 000005F4 BB[520D]                	mov	bx, RD_FAT32_hd_bs
  1117                                  	; ES:BX = Boot Sector 1 Buffer
  1118 000005F7 E8F5FE                  	call	write_hd_sector
  1119 000005FA 0F82BC02                	jc	formatting_error
  1120 000005FE E87902                  	call	write_format_percent
  1121 00000601 83C001                  	add	ax, 1
  1122 00000604 83D200                  	adc	dx, 0
  1123 00000607 BB[AA1E]                	mov	bx, HDFORMAT_FSINFO_BUFF
  1124                                  	; ES:BX = FS INFO Sector Buffer (= BS+1)
  1125 0000060A E8E2FE                  	call	write_hd_sector
  1126 0000060D 0F82A902                	jc	formatting_error
  1127 00000611 E86602                  	call	write_format_percent	
  1128 00000614 83C001                  	add	ax, 1
  1129 00000617 83D200                  	adc	dx, 0	
  1130 0000061A BB[520F]                	mov	bx, RD_FAT32_hd_bs + 512
  1131                                  	; ES:BX = Boot Sector 2 Buffer
  1132 0000061D E8CFFE                  	call	write_hd_sector
  1133 00000620 0F829602                	jc	formatting_error
  1134 00000624 E85302                  	call	write_format_percent
  1135 00000627 B90300                  	mov	cx, 3
  1136                                  FAT32_f_4:
  1137 0000062A 51                      	push	cx
  1138 0000062B 83C001                  	add	ax, 1
  1139 0000062E 83D200                  	adc	dx, 0
  1140 00000631 BB[B820]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1141 00000634 E8B8FE                  	call	write_hd_sector
  1142 00000637 0F827F02                	jc	formatting_error
  1143 0000063B E83C02                  	call	write_format_percent
  1144 0000063E 59                      	pop	cx
  1145 0000063F FEC9                    	dec	cl
  1146 00000641 75E7                    	jnz	short FAT32_f_4
  1147 00000643 83C001                  	add	ax, 1
  1148 00000646 83D200                  	adc	dx, 0
  1149 00000649 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  1150 0000064C 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  1151 0000064F 83C10C                  	add	cx, 12
  1152 00000652 83D300                  	adc	bx, 0
  1153                                  	; write BACKUP sectors
  1154                                  	; (6,7,8 boot+fsi and 9,10,11 empty sectors) 
  1155 00000655 39DA                    	cmp	dx, bx
  1156 00000657 729B                    	jb	short FAT32_f_3
  1157 00000659 39C8                    	cmp	ax, cx
  1158 0000065B 7297                    	jb	short FAT32_f_3
  1159                                  	; write remain part of reserved sectors
  1160 0000065D 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt]
  1161 00000660 83E90C                  	sub	cx, 12
  1162 00000663 7618                    	jna	short FAT32_f_6
  1163                                  FAT32_f_5:
  1164 00000665 51                      	push	cx
  1165 00000666 BB[B820]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1166 00000669 E883FE                  	call	write_hd_sector
  1167 0000066C 0F824A02                	jc	formatting_error
  1168 00000670 E80702                  	call	write_format_percent
  1169 00000673 83C001                  	add	ax, 1
  1170 00000676 83D200                  	adc	dx, 0
  1171 00000679 59                      	pop	cx
  1172 0000067A 49                      	dec	cx
  1173 0000067B 75E8                    	jnz	short FAT32_f_5
  1174                                  FAT32_f_6:
  1175                                  	; write FAT sectors
  1176 0000067D 8B0E[0023]              	mov	cx, [data_start] ; lba/abs addr
  1177 00000681 8B1E[0223]              	mov	bx, [data_start+2] ; lba/abs addr
  1178 00000685 53                      	push	bx
  1179 00000686 51                      	push	cx
  1180 00000687 BB[B820]                	mov	bx, HDFORMAT_FATBUFFER
  1181                                  	; ES:BX = FAT Sector Buffer
  1182 0000068A 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
  1183 0000068D B5FF                    	mov	ch, 0FFh
  1184 0000068F 890F                    	mov	[bx], cx
  1185 00000691 88E9                    	mov	cl, ch ; cx = 0FFFFh
  1186 00000693 894F02                  	mov	[bx+2], cx
  1187 00000696 894F04                  	mov	[bx+4], cx
  1188 00000699 894F06                  	mov	[bx+6], cx
  1189                                  	; Root dir cluster number = 2
  1190                                  	; 0FFFFFFFh = end of cluster chain 
  1191 0000069C 894F08                  	mov	[bx+8], cx  ; 0FFFFh
  1192 0000069F 80E50F                  	and	ch, 0Fh
  1193 000006A2 894F0A                  	mov	[bx+10], cx ; 0FFFh
  1194                                  	;inc	cx
  1195 000006A5 E847FE                  	call	write_hd_sector
  1196 000006A8 0F820E02                	jc	formatting_error
  1197 000006AC E8CB01                  	call	write_format_percent
  1198                                  	;mov	bx, HDFORMAT_FATBUFFER
  1199 000006AF B90000                  	mov	cx, 0
  1200 000006B2 890F                    	mov	[bx], cx
  1201 000006B4 894F02                  	mov	[bx+2], cx
  1202 000006B7 894F04                  	mov	[bx+4], cx
  1203 000006BA 894F06                  	mov	[bx+6], cx
  1204 000006BD 894F08                  	mov	[bx+8], cx
  1205 000006C0 894F0A                  	mov	[bx+10], cx
  1206 000006C3 EB0F                    	jmp	short FAT32_f_8
  1207                                  FAT32_f_7:	
  1208 000006C5 53                      	push	bx
  1209 000006C6 51                      	push	cx	
  1210 000006C7 BB[B820]                	mov	bx, HDFORMAT_FATBUFFER
  1211 000006CA E822FE                  	call	write_hd_sector
  1212 000006CD 0F82E901                	jc	formatting_error
  1213 000006D1 E8A601                  	call	write_format_percent
  1214                                  FAT32_f_8:	
  1215 000006D4 59                      	pop	cx
  1216 000006D5 5B                      	pop	bx
  1217 000006D6 83C001                  	add	ax, 1
  1218 000006D9 83D200                  	adc	dx, 0
  1219 000006DC 39DA                    	cmp	dx, bx
  1220 000006DE 72E5                    	jb	short FAT32_f_7
  1221 000006E0 39C8                    	cmp	ax, cx
  1222 000006E2 72E1                    	jb	short FAT32_f_7
  1223                                  
  1224                                  	; write	root directory (1st cluster)
  1225                                  	; as empty sectors
  1226 000006E4 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1227 000006E7 30ED                    	xor	ch, ch
  1228 000006E9 290E[0423]              	sub	[data_sectors], cx
  1229 000006ED 831E[0623]00            	sbb	word [data_sectors+2], 0
  1230                                  FAT32_f_9:
  1231 000006F2 51                      	push	cx
  1232 000006F3 BB[B820]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1233 000006F6 E8F6FD                  	call	write_hd_sector
  1234 000006F9 0F82BD01                	jc	formatting_error
  1235 000006FD E87A01                  	call	write_format_percent
  1236 00000700 83C001                  	add	ax, 1
  1237 00000703 83D200                  	adc	dx, 0
  1238 00000706 59                      	pop	cx
  1239 00000707 FEC9                    	dec	cl
  1240 00000709 75E7                    	jnz	short FAT32_f_9
  1241                                  
  1242                                  	; write DATA sectors 
  1243                                  	; (after root directory 1st cluster)
  1244 0000070B 8B0E[0423]              	mov	cx, [data_sectors]
  1245 0000070F 8B1E[0623]              	mov	bx, [data_sectors+2] 
  1246                                  			; NOTE: Partition size must be >= 512 MB
  1247                                  			;	for FAT32 FS  ((BX >= 15))		
  1248                                  FAT32_f_10:	
  1249 00000713 53                      	push	bx
  1250 00000714 51                      	push	cx	
  1251 00000715 BB[AA1C]                	mov	bx, HDFORMAT_SECBUFFER
  1252 00000718 E8D4FD                  	call	write_hd_sector
  1253 0000071B 0F829B01                	jc	formatting_error
  1254 0000071F E85801                  	call	write_format_percent
  1255 00000722 59                      	pop	cx
  1256 00000723 5B                      	pop	bx
  1257 00000724 83C001                  	add	ax, 1
  1258 00000727 83D200                  	adc	dx, 0
  1259 0000072A 49                      	dec	cx
  1260 0000072B 75E6                    	jnz	short FAT32_f_10
  1261 0000072D 4B                      	dec	bx
  1262 0000072E 75E3                    	jnz	short FAT32_f_10
  1263                                  
  1264                                  	; If there are, format remain sectors which are
  1265                                  	; at beyond of data clusters, with zero bytes.
  1266                                  	
  1267 00000730 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  1268 00000733 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  1269                                  FAT16_f_18:	
  1270 00000736 034E20                  	add	cx, [bp+20h]	; [BPB_TotSec32]
  1271 00000739 135E22                  	adc	bx, [bp+22h]	; [BPB_TotSec32+2]
  1272                                  FAT16_f_19:
  1273                                  FAT12_f_8:
  1274                                  	; are there remain sectors (in partition) ?
  1275 0000073C 29C1                    	sub	cx, ax
  1276 0000073E 19D3                    	sbb	bx, dx
  1277                                  	; 11/02/2019
  1278                                  	; BX must be 0 (Because, 1 cluster <= 32KB. So, 
  1279                                  	;	        remain sectors must not be more than 32K)
  1280 00000740 751C                    	jnz	short FAT32_f_12 ; There is a wrong thing !!!
  1281                                  				 ; If BX is not zero,	
  1282                                  				 ; it is better to skip this stage...)
  1283 00000742 09C9                    	or	cx, cx		
  1284 00000744 7418                    	jz	short FAT32_f_12 ; no.. 
  1285                                  				 ; (good! FAT contains all data sectors)
  1286                                  FAT32_f_11:
  1287 00000746 51                      	push	cx
  1288 00000747 BB[B820]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1289 0000074A E8A2FD                  	call	write_hd_sector
  1290 0000074D 0F826901                	jc	formatting_error
  1291 00000751 E82601                  	call	write_format_percent
  1292 00000754 59                      	pop	cx
  1293 00000755 83C001                  	add	ax, 1
  1294 00000758 83D200                  	adc	dx, 0
  1295 0000075B 49                      	dec	cx
  1296 0000075C 75E8                    	jnz	short FAT32_f_11
  1297                                  
  1298                                  FAT32_f_12:
  1299                                  	; End of FAT format routine...
  1300                                  end_of_formatting:
  1301 0000075E B064                    	mov	al, 100
  1302 00000760 E85001                  	call	write_format_percent_x
  1303                                  	;mov	si, CRLF
  1304                                  	;call	print_msg
  1305 00000763 BE[9317]                	mov	si, _msg_OK
  1306                                  	;call	print_msg
  1307 00000766 E912FC                  	jmp	Exit
  1308                                  
  1309                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1310                                  ; set & write volume name
  1311                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1312                                  
  1313                                  write_fs_volume_name:
  1314 00000769 C606[511A]40            	mov	byte [vname_length], 64
  1315 0000076E EB05                    	jmp	short svn_fs
  1316                                  
  1317                                  write_volume_name:
  1318 00000770 C606[511A]0B            	mov	byte [vname_length], 11
  1319                                  svn_fs:
  1320                                  	; DI = (BS) Volume Label address
  1321 00000775 BE[681A]                	mov	si, Msg_Volume_Name
  1322 00000778 E814FC                  	call	print_msg
  1323                                  
  1324                                  	; get cursor position
  1325                                  	; bh = 0  ; video page
  1326 0000077B B403                    	mov     ah, 3 ; get cursor pos
  1327 0000077D CD10                    	int     10h
  1328 0000077F 8916[C818]              	mov	[Cursor_Pos], dx
  1329                                  
  1330 00000783 E8F904                  	call	rw_char
  1331 00000786 7207                    	jc	short svn_1
  1332                                  svn_0:
  1333 00000788 AC                      	lodsb
  1334 00000789 3C20                    	cmp	al, 20h
  1335 0000078B 7706                    	ja	short svn_2
  1336 0000078D 74F9                    	je	short svn_0 
  1337                                  svn_1:
  1338 0000078F BE[5C1A]                	mov	si, no_name
  1339 00000792 AC                      	lodsb
  1340                                  svn_2:
  1341                                  	;mov	di, [bp+47h) ; [BS_VolLab] ; FAT32
  1342                                  	;mov	di, [bp+2Bh) ; [BS_VolLab] ; FAT16 (&FAT12)
  1343 00000793 89FB                    	mov	bx, di ; *
  1344 00000795 30ED                    	xor	ch, ch
  1345 00000797 8A0E[511A]              	mov	cl, [vname_length] ; 11
  1346 0000079B EB05                    	jmp	short svn_4
  1347                                  svn_3:
  1348 0000079D AC                      	lodsb
  1349 0000079E 3C20                    	cmp	al, 20h
  1350 000007A0 7226                    	jb	short svn_6
  1351                                  svn_4:
  1352 000007A2 AA                      	stosb
  1353 000007A3 E2F8                    	loop	svn_3
  1354                                  svn_5:
  1355 000007A5 8A0E[511A]              	mov	cl, [vname_length] ; 11
  1356 000007A9 89DE                    	mov	si, bx ; *
  1357 000007AB BF[1423]                	mov	di, StrVolumeName
  1358 000007AE F3A4                    	rep	movsb
  1359                                  	;mov	byte [di], 0
  1360                                  
  1361 000007B0 8B16[C818]              	mov	dx, [Cursor_Pos]
  1362 000007B4 BB0700                  	mov	bx, 7
  1363 000007B7 B402                    	mov	ah, 2
  1364 000007B9 CD10                    	int	10h  ; Set Cursor Position
  1365                                  
  1366 000007BB BE[1423]                	mov	si, StrVolumeName
  1367 000007BE E8CEFB                  	call	print_msg
  1368 000007C1 BE[CA1A]                	mov	si, CRLF
  1369 000007C4 E8C8FB                  	call	print_msg
  1370 000007C7 C3                      	retn
  1371                                  svn_6:
  1372 000007C8 B020                    	mov	al, 20h
  1373                                  svn_7:
  1374 000007CA AA                      	stosb
  1375 000007CB E2FD                    	loop	svn_7
  1376 000007CD EBD6                    	jmp	short svn_5
  1377                                  
  1378                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1379                                  ; set & write volume serial number (volume ID)
  1380                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1381                                  
  1382                                  write_volume_serial:
  1383                                  	; SI = (BS) Volume Serial Number (binary) address
  1384                                  
  1385                                  	;xor	ax, ax
  1386                                  	;int	1Ah			; get time of day
  1387                                  
  1388                                  	;mov	[si], dx
  1389                                  	;mov	[si+2], cx		; set unique volume ID
  1390                                  
  1391                                  	;mov	ah, 02h			; Return Current Time
  1392                                  	;int	1Ah
  1393                                  	;xchg	ch, cl
  1394                                  	;xchg	dh, dl
  1395                                  
  1396                                  	;add	cx, dx  
  1397                                  	;add	[si+2], cx
  1398                                                 
  1399                                  	;mov	ah, 04h			; Return Current Date
  1400                                  	;int	1Ah
  1401                                  
  1402                                  	;xchg	ch,cl
  1403                                  	;xchg	dh,dl
  1404                                  
  1405                                  	;add	cx, dx  
  1406                                  	;add	[si+2], cx
  1407                                  
  1408                                  	; According to Microsoft DOS 6.0 serial number
  1409                                  	; production method...
  1410                                  	; < Create unique 32 bit serial number >
  1411                                  
  1412                                  	; Create_Serial_ID (MSDOS 6.0 Source code, MSFOR.ASM)
  1413                                  	; (20/04/1987)
  1414                                  	;
  1415                                  	;  Get date (INT 21h, AH=2Bh)
  1416                                  	;  Get time (INT 21h, AH=2Ch)
  1417                                  	;  Serial_ID+0 = DX reg date + DX reg time
  1418                                  	;  Serial_ID+2 = CX reg date + CX reg time
  1419                                  	;  Serial_Num_Low = Serial_ID+2
  1420                                  	;  Serial_Num_High = Serial_ID+0
  1421                                  
  1422 000007CF B404                    	mov	ah, 04h		; Return Current Date
  1423 000007D1 CD1A                    	int	1Ah
  1424                                  
  1425                                  	; DL = Day (BCD)	(20h) 	
  1426                                  	; DH = Month (BCD)	(12h)
  1427                                  	; CH = Century (BCD)	(20h)
  1428                                  	; CL = Year (BCD) 	(17h)
  1429                                  
  1430 000007D3 88D0                    	mov	al, dl
  1431 000007D5 E87100                  	call	bcd_to_bin
  1432 000007D8 88C2                    	mov	dl, al 
  1433 000007DA 88F0                    	mov	al, dh
  1434 000007DC E86A00                  	call	bcd_to_bin
  1435 000007DF 88C6                    	mov	dh, al 
  1436 000007E1 88C8                    	mov	al, cl
  1437 000007E3 E86300                  	call	bcd_to_bin
  1438 000007E6 88C1                    	mov	cl, al 
  1439 000007E8 88E8                    	mov	al, ch
  1440 000007EA E85C00                  	call	bcd_to_bin
  1441 000007ED 88C5                    	mov	ch, al
  1442                                  
  1443                                  	; DH = Month (1-10)
  1444                                  	; DL = Day (1-31)
  1445                                  	; CX = Year (1900-2099)
  1446                                  
  1447 000007EF 52                      	push	dx 
  1448 000007F0 51                      	push	cx
  1449                                  
  1450 000007F1 B402                    	mov	ah, 02h		; Return Current Time
  1451 000007F3 CD1A                    	int	1Ah
  1452                                  	
  1453                                  	; DH = Seconds (BCD)	(59h) 	
  1454                                  	; CL = Minutes (BCD)	(59h)
  1455                                  	; CH = Hours (BCD)	(23h)
  1456                                  	; DL = Daylight savings time option (1=yes)
  1457                                  
  1458 000007F5 88F0                    	mov	al, dh
  1459 000007F7 E84F00                  	call	bcd_to_bin
  1460 000007FA 88C6                    	mov	dh, al 
  1461 000007FC 88C8                    	mov	al, cl
  1462 000007FE E84800                  	call	bcd_to_bin
  1463 00000801 88C1                    	mov	cl, al 
  1464 00000803 88E8                    	mov	al, ch
  1465 00000805 E84100                  	call	bcd_to_bin
  1466 00000808 88C5                    	mov	ch, al 
  1467                                  
  1468                                  	; CH = Hour (0-23)
  1469                                  	; CL = Minutes (0-59)
  1470                                  	; DH = Seconds (0-59)
  1471                                  	; ((DL = Hundredths (0-99) - MSDOS!))
  1472                                  	; DL = 0 or 1 (here!)
  1473                                  
  1474 0000080A 89C8                    	mov	ax, cx
  1475 0000080C 59                      	pop	cx
  1476 0000080D 01C8                    	add	ax, cx
  1477                                  
  1478 0000080F 894402                  	mov	[si+2], ax
  1479                                  
  1480 00000812 89D0                    	mov	ax, dx
  1481 00000814 5A                      	pop	dx
  1482 00000815 01D0                    	add	ax, dx
  1483                                  
  1484 00000817 8904                    	mov	[si], ax
  1485                                  
  1486 00000819 30E4                    	xor	ah, ah		; Read time counter
  1487 0000081B CD1A                    	int	1Ah
  1488                                  
  1489                                  	; CX = High word of clock count
  1490                                  	; DX = Low word of clock count
  1491                                  	; AL = 0 if 24 hours has not passed, else 1
  1492                                  
  1493                                  	; NOTES: 
  1494                                  	; (Ref: vitaly_filatov.tripod.com/ng/asm/asT_3029.1.html)
  1495                                  	;
  1496                                     	; Following formulas convert the clock count to
  1497                                          ; the time of day:
  1498                                   	;	Hour      = Clock / 65543 (1007h)
  1499                                  	;	Remainder = Clock MOD 65543
  1500                                   	;
  1501                                  	;	Minutes   = Remainder / 1092 (444h)
  1502                                  	;	Remainder = Remainder MOD 1092
  1503                                  	;
  1504                                  	;	Second    = Remainder / 18.21
  1505                                  	;	Remainder = Remainder MOD 18.21
  1506                                  	;
  1507                                  	;	Hundredths = CINT(Remainder * 100)
  1508                                  
  1509 0000081D 0014                    	add	[si], dl
  1510                                  
  1511                                  	; SI = Volume serial number address (4 bytes) 
  1512 0000081F 8A04                    	mov	al, [si]
  1513 00000821 E81205                  	call	bin_to_hex
  1514 00000824 A3[931A]                	mov	[Vol_Serial2+2], ax	
  1515 00000827 8A4401                  	mov	al, [si+1]
  1516 0000082A E80905                  	call	bin_to_hex
  1517 0000082D A3[911A]                	mov	[Vol_Serial2], ax
  1518 00000830 8A4402                  	mov	al, [si+2]
  1519 00000833 E80005                  	call	bin_to_hex
  1520 00000836 A3[8E1A]                	mov	[Vol_Serial1+2], ax	
  1521 00000839 8A4403                  	mov	al, [si+3]
  1522 0000083C E8F704                  	call	bin_to_hex
  1523 0000083F A3[8C1A]                	mov	[Vol_Serial1], ax
  1524                                  
  1525 00000842 BE[7A1A]                	mov	si, Msg_Volume_Serial
  1526 00000845 E847FB                  	call	print_msg
  1527                                  
  1528 00000848 C3                      	retn
  1529                                  
  1530                                  bcd_to_bin:
  1531 00000849 53                      	push	bx
  1532 0000084A D410                    	db	0D4h,10h  ; Undocumented inst. AAM
  1533                                  			  ; AH = AL / 10h
  1534                                  			  ; AL = AL MOD 10h
  1535 0000084C 88C3                    	mov	bl, al
  1536 0000084E B00A                    	mov	al, 10
  1537 00000850 F6E4                    	mul	ah
  1538 00000852 00D8                    	add	al, bl
  1539 00000854 5B                      	pop	bx
  1540 00000855 C3                      	retn
  1541                                  
  1542                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1543                                  ; write formatting percentage
  1544                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1545                                  
  1546                                  write_formatting_msg:
  1547 00000856 A1[B420]                	mov	ax, [dosp_size]
  1548 00000859 8B16[B620]              	mov	dx, [dosp_size+2]
  1549                                  
  1550                                  	; DX_AX = Total sectors for percentage  
  1551 0000085D B96400                  	mov	cx, 100	
  1552 00000860 E8AE04                  	call	div32
  1553 00000863 A3[0E23]                	mov	[format_percent], ax
  1554                                  
  1555 00000866 BE[B21A]                	mov	si, msg_formatting
  1556 00000869 E823FB                  	call	print_msg
  1557                                  
  1558                                  	; get cursor position
  1559                                  	; bh = 0  ; video page
  1560 0000086C B403                    	mov     ah, 3 ; get cursor pos
  1561 0000086E CD10                    	int     10h
  1562 00000870 8916[C818]              	mov	[Cursor_Pos], dx
  1563                                  
  1564 00000874 C606[1023]FF            	mov	byte [prev_percent], 255
  1565                                  
  1566 00000879 C3                      	retn
  1567                                  
  1568                                  write_format_percent:
  1569                                  	; DX_AX = Current sector (which has been written)
  1570                                  
  1571 0000087A 50                      	push	ax
  1572 0000087B 52                      	push	dx
  1573 0000087C 53                      	push	bx
  1574 0000087D 51                      	push	cx
  1575 0000087E 56                      	push	si
  1576                                  
  1577 0000087F 2B461C                  	sub	ax, [bp+1Ch]	; [BPB_HiddSec]
  1578 00000882 1B561E                  	sbb	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1579                                  wpc_t:
  1580 00000885 8B0E[0E23]              	mov	cx, [format_percent]
  1581 00000889 E88504                  	call	div32
  1582                                  	; AL = percentage value between 1 to 100
  1583                                  wpc_x:
  1584 0000088C 3A06[1023]              	cmp	al, [prev_percent]
  1585 00000890 741B                    	je	short wpc_y
  1586 00000892 A2[1023]                	mov	[prev_percent], al
  1587 00000895 8B16[C818]              	mov	dx, [Cursor_Pos]
  1588 00000899 BB0700                  	mov	bx, 7
  1589 0000089C B402                    	mov	ah, 2
  1590 0000089E CD10                    	int	10h  ; Set Cursor Position
  1591 000008A0 31D2                    	xor	dx, dx
  1592 000008A2 30E4                    	xor	ah, ah
  1593                                  	;mov	al, [prev_percent]
  1594 000008A4 BE[C01A]                	mov	si, format_percent_str + 2
  1595 000008A7 E87504                  	call	bin_to_decimal
  1596 000008AA E8E2FA                  	call	print_msg
  1597                                  wpc_y:
  1598 000008AD 5E                      	pop	si
  1599 000008AE 59                      	pop	cx
  1600 000008AF 5B                      	pop	bx
  1601 000008B0 5A                      	pop	dx
  1602 000008B1 58                      	pop	ax
  1603 000008B2 C3                      	retn
  1604                                  
  1605                                  write_format_percent_x:
  1606                                  	; AL = % number
  1607                                  
  1608 000008B3 50                      	push	ax
  1609 000008B4 52                      	push	dx
  1610 000008B5 53                      	push	bx
  1611 000008B6 51                      	push	cx
  1612 000008B7 56                      	push	si
  1613                                  
  1614 000008B8 EBD2                    	jmp	short wpc_x
  1615                                  
  1616                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1617                                  ; format error 
  1618                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1619                                  
  1620                                  formatting_error:
  1621 000008BA 8B26[1223]              	mov	sp, [old_sp]
  1622                                  
  1623 000008BE 88E0                    	mov	al, ah ;  error code
  1624 000008C0 E87304                  	call	bin_to_hex
  1625 000008C3 A3[D81A]                	mov 	[error_code], ax
  1626                                  
  1627 000008C6 BE[CA1A]                	mov	si, CRLF
  1628 000008C9 E8C3FA                  	call	print_msg
  1629                                  
  1630 000008CC BE[CD1A]                	mov	si, Msg_Error
  1631                                  	;call	print_msg
  1632 000008CF E9A9FA                  	jmp	Exit
  1633                                  
  1634                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1635                                  ; write cluster count
  1636                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1637                                  
  1638                                  write_cluster_count:
  1639 000008D2 BE[981A]                	mov	si, msg_cluster_count
  1640 000008D5 E8B7FA                  	call	print_msg
  1641 000008D8 A1[0823]                	mov	ax, [cluster_count]
  1642 000008DB 8B16[0A23]              	mov	dx, [cluster_count+2]
  1643 000008DF BE[AE1A]                	mov	si, cluster_count_str+6
  1644 000008E2 E83A04                  	call	bin_to_decimal
  1645 000008E5 E8A7FA                  	call	print_msg
  1646 000008E8 C3                      	retn 
  1647                                  
  1648                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1649                                  ; FAT16 FORMATTING
  1650                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1651                                  
  1652                                  ; ((TRDOS 386 criter))
  1653                                  ; Minimum size of FAT16 FS = [heads]*[sectors]
  1654                                  ; (1 cylinder) or 4096 sectors (for TRDOS 386)
  1655                                  
  1656                                  format_FAT16_fs:
  1657 000008E9 B80607                  	mov	ax, 0706h ; db 06h, 07h ; 'push es, pop es'
  1658 000008EC 38C2                    	cmp	dl, al ; 06h ; Big CHS partition (>= 32MB)
  1659 000008EE 7403                    	je	short FAT16_big_chs_format
  1660                                  	;mov	ax, 070Eh ; db 0Eh, 07h	; 'push cs, pop es'
  1661                                  	;cmp	dl, al ; 0Eh ; LBA partition
  1662                                  	;je	short FAT16_lba_format
  1663                                  FAT16_chs_format:  
  1664                                  	; Partition Type: 04h, CHS (<32 MB) partition
  1665 000008F0 B80400                  	mov	ax, 0004h ; db 04h, 00h ; 'add al, 0'
  1666                                  FAT16_big_chs_format:
  1667                                  ;FAT16_lba_format:
  1668                                  	; Put TRDOS 386 FAT16 partition magic word 
  1669                                  	; at offset 3Eh, in TRDOS386 FAT16 boot sector.
  1670 000008F3 BD[5211]                	mov	bp, RD_FAT16_hd_bs
  1671 000008F6 8D7E03                  	lea	di, [bp+3]
  1672 000008F9 BE[521A]                	mov	si, bs_oem_name
  1673 000008FC B90400                  	mov	cx, 4
  1674 000008FF F3A5                    	rep	movsw 
  1675 00000901 89463E                  	mov	[bp+3Eh], ax	; [loc_3E]
  1676                                  
  1677 00000904 A1[5415]                	mov	ax, [sectors]
  1678 00000907 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
  1679 0000090A A1[5615]                	mov	ax, [heads]
  1680 0000090D 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
  1681 00000910 A1[B020]                	mov	ax, [dosp_start]
  1682 00000913 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
  1683 00000916 A1[B220]                	mov	ax, [dosp_start+2]
  1684 00000919 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
  1685 0000091C A1[B420]                	mov	ax, [dosp_size]
  1686 0000091F 8B16[B620]              	mov	dx, [dosp_size+2]
  1687 00000923 21D2                    	and	dx, dx
  1688 00000925 7505                    	jnz	short FAT16_f_0
  1689 00000927 894613                  	mov	[bp+13h], ax	; [BPB_TotSec16]
  1690                                  	; CX = 0
  1691                                  	;mov	[bp+20h], cx	; [BPB_TotSec32] =  0
  1692                                  	;mov	[bp+22h], cx	; [BPB_TotSec32+2] = 0
  1693 0000092A EB06                    	jmp	short FAT16_f_1
  1694                                  FAT16_f_0:
  1695 0000092C 894620                  	mov	[bp+20h], ax	; [BPB_TotSec32]
  1696 0000092F 895622                  	mov	[bp+22h], dx	; [BPB_TotSec32+2]
  1697                                  	; CX = 0
  1698                                  	;mov	[bp+13h], cx ; [BPB_TotSec16] = 0
  1699                                  FAT16_f_1:
  1700                                  	; Sectors per cluster calculation
  1701                                  	; (According to MS FAT32 FS specification.)
  1702 00000932 B102                    	mov	cl, 2  ; 2 sectors per cluster
  1703 00000934 09D2                    	or	dx, dx
  1704 00000936 7507                    	jnz	short FAT16_f_2 ; >2 sectors (>16MB)
  1705 00000938 3DA87F                  	cmp	ax, 32680
  1706 0000093B 763C                    	jna	short FAT16_f_10 ; 2 sectors, <=16MB
  1707                                  	; > 16MB
  1708 0000093D EB38                    	jmp	short FAT16_f_9 ; 4 sectors per cluster
  1709                                  FAT16_f_2:
  1710 0000093F 83FA04                  	cmp	dx, 4  ; >= 262144 sectors ; >=128MB
  1711 00000942 7708                    	ja	short FAT16_f_3 ; >4 sectors per cluster
  1712 00000944 7231                    	jb	short FAT16_f_9 ; 4 sectors per cluster	
  1713 00000946 09C0                    	or	ax, ax ; dx_ax = (4*65536)+0
  1714 00000948 742D                    	jz	short FAT16_f_9 ; 4 sectors per cluster
  1715 0000094A EB29                    	jmp	short FAT16_f_8 ; 8 sectors per cluster
  1716                                  FAT16_f_3:
  1717 0000094C 83FA08                  	cmp	dx, 8  ; >= 524288 sectors ; >=256MB
  1718 0000094F 7708                    	ja	short FAT16_f_4 ; >8 sectors per cluster
  1719 00000951 7222                    	jb	short FAT16_f_8 ; 8 sectors per cluster	
  1720 00000953 21C0                    	and	ax, ax ; dx_ax = (8*65536)+0
  1721 00000955 741E                    	jz	short FAT16_f_8 ; 8 sectors per cluster
  1722 00000957 EB1A                    	jmp	short FAT16_f_7 ; 16 sectors per cluster
  1723                                  FAT16_f_4:
  1724 00000959 83FA10                  	cmp	dx, 16 ; >= 1048576 sectors ; >=512MB
  1725 0000095C 7708                    	ja	short FAT16_f_5 ; >16 sectors per cluster
  1726 0000095E 7213                    	jb	short FAT16_f_7 ; 16 sectors per cluster	
  1727 00000960 21C0                    	and	ax, ax ; dx_ax = (16*65536)+0
  1728 00000962 740F                    	jz	short FAT16_f_7 ; 16 sectors per cluster
  1729 00000964 EB0B                    	jmp	short FAT16_f_6 ; 32 sectors per cluster
  1730                                  FAT16_f_5:
  1731 00000966 83FA20                  	cmp	dx, 32 ; >= 2097152 sectors ; >=1GB
  1732 00000969 7206                    	jb	short FAT16_f_6 ; 32 sectors per cluster
  1733 0000096B 09C0                    	or	ax, ax		; dx_ax = (32*65536)+0
  1734 0000096D 7402                    	jz	short FAT16_f_6 ; 32 sectors per cluster
  1735                                  	; >1GB (<=2GB)
  1736                                  	; 64 sectors per cluster
  1737 0000096F D0E1                    	shl	cl, 1
  1738                                  FAT16_f_6:
  1739                                  	; 32 sectors per cluster (for <= 2GB volumes)
  1740 00000971 D0E1                    	shl	cl, 1	
  1741                                  FAT16_f_7:
  1742                                  	; 16 sectors per cluster (for <= 1GB volumes)
  1743 00000973 D0E1                    	shl	cl, 1
  1744                                  FAT16_f_8:
  1745                                  	; 8 sectors per cluster (for <= 512MB volumes)
  1746 00000975 D0E1                    	shl	cl, 1	
  1747                                  FAT16_f_9:
  1748                                  	; 4 sectors per cluster (for <= 256MB volumes)
  1749 00000977 D0E1                    	shl	cl, 1	
  1750                                  FAT16_f_10:	
  1751                                  	; 2 sectors per cluster (for <= 128MB volumes)
  1752 00000979 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
  1753                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
  1754                                  	;mov	word [bp+0Eh], 1 ; [BPB_RsvdSecCnt] 
  1755                                  	;mov	word [bp+11h], 512 ; [BPB_RootEntCnt]
  1756                                  	
  1757                                  	; Calculating FAT size in sectors
  1758                                  	; (According to MS FAT32 FS Specification, 2000)
  1759                                  
  1760                                  	; DX_AX = partition (volume) size in sectors
  1761 0000097C 8B5E11                  	mov	bx, [bp+11h]	; [BPB_RootEntCnt] = 512
  1762 0000097F 83C30F                  	add	bx, 15 ; bx = 527
  1763 00000982 C1EB04                  	shr	bx, 4 ; /16 = 527/16 = 32
  1764                                  		; ((32*BX)+511)/512
  1765 00000985 891E[0C23]              	mov	[root_dir_secs], bx
  1766 00000989 035E0E                  	add	bx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1767 0000098C 29D8                    	sub	ax, bx
  1768 0000098E 83DA00                  	sbb	dx, 0
  1769                                  		; TmpVal1 = DiskSize - (BPB_ResvdSecCnt +
  1770                                  		;	     		RootDirsectors)
  1771                                  	;mov	bx, cx ; ch = 0
  1772                                  	;shl	bx, 8 ; * 256
  1773 00000991 88CF                    	mov	bh, cl
  1774 00000993 30DB                    	xor	bl, bl
  1775 00000995 B102                    	mov	cl, 2 ; [BPB_NumFATs] 
  1776 00000997 01CB                    	add	bx, cx	
  1777                                  		; TmpVal2 = (256*BPB_SecPerClus)+BPB_NumFATs
  1778 00000999 89D9                    	mov	cx, bx
  1779 0000099B 4B                      	dec	bx  ; TmpVal2-1
  1780 0000099C 01D8                    	add	ax, bx
  1781 0000099E 83D200                  	adc	dx, 0
  1782 000009A1 E86D03                  	call	div32
  1783                                  		; FATSz = (TmpVal1+(TmpVal2-1))/TmpVal2
  1784                                  	; AX = FAT size in sectors
  1785                                  	; DX = 0
  1786 000009A4 894616                  	mov	[bp+16h], ax	; [BPB_FATSz16]
  1787                                  	; * 2
  1788 000009A7 D1E0                    	shl	ax, 1
  1789                                  	; AX = [BPB_NumFATs] * [BPB_FATSz16]
  1790 000009A9 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1791 000009AC 01C1                    	add	cx, ax
  1792                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1793 000009AE 030E[0C23]              	add	cx, [root_dir_secs] ; + RootDirsectors
  1794 000009B2 29DB                    	sub	bx, bx ; BX = 0
  1795                                  	; BX_CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1796                                  	;	  + RootDirSectors
  1797 000009B4 8B4613                  	mov	ax, [bp+13h]	; [BPB_TotSec16]
  1798                                  	;sub	dx, dx 
  1799                                  	; DX = 0
  1800 000009B7 21C0                    	and	ax, ax
  1801 000009B9 7506                    	jnz	short FAT16_f_11
  1802 000009BB 8B4620                  	mov	ax, [bp+20h]	; [BPB_TotSec32]
  1803 000009BE 8B5622                  	mov	dx, [bp+22h]	; [BPB_TotSec32+2]
  1804                                  FAT16_f_11:
  1805 000009C1 29C8                    	sub	ax, cx
  1806 000009C3 19DA                    	sbb	dx, bx
  1807 000009C5 890E[0023]              	mov	[data_start], cx
  1808 000009C9 891E[0223]              	mov	[data_start+2], bx
  1809                                  	; DX_AX = Data sectors
  1810 000009CD A3[0423]                	mov	[data_sectors], ax
  1811 000009D0 8916[0623]              	mov	[data_sectors+2], dx
  1812 000009D4 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1813 000009D7 30ED                    	xor	ch, ch
  1814 000009D9 E83503                  	call	div32 ; DX_AX/CX
  1815                                  	; AX = Count of clusters (rounded down)
  1816                                  	; DX = 0
  1817 000009DC A3[0823]                	mov	[cluster_count], ax
  1818 000009DF 8916[0A23]              	mov	[cluster_count+2], dx
  1819                                  
  1820 000009E3 8D7E2B                  	lea	di, [bp+43] ; [BS_VolLab]
  1821 000009E6 E887FD                  	call	write_volume_name
  1822 000009E9 8D7627                  	lea	si, [bp+39] ; [BS_VolID]
  1823 000009EC E8E0FD                  	call	write_volume_serial
  1824 000009EF E8E0FE                  	call	write_cluster_count	
  1825                                  
  1826 000009F2 E861FE                  	call	write_formatting_msg
  1827 000009F5 B000                    	mov	al, 0
  1828 000009F7 E8B9FE                  	call	write_format_percent_x
  1829                                  
  1830 000009FA 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
  1831 000009FD 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1832                                  
  1833 00000A00 0106[0023]              	add	[data_start], ax
  1834 00000A04 1116[0223]              	adc	[data_start+2], dx
  1835                                  
  1836                                  	; DX_AX = FAT16 Boot Sector address
  1837 00000A08 BB[5211]                	mov	bx, RD_FAT16_hd_bs
  1838                                  	; ES:BX = Boot Sector Buffer
  1839 00000A0B E8E1FA                  	call	write_hd_sector
  1840 00000A0E 0F82A8FE                	jc	formatting_error
  1841 00000A12 E865FE                  	call	write_format_percent
  1842 00000A15 83C001                  	add	ax, 1
  1843 00000A18 83D200                  	adc	dx, 0
  1844                                  	; write remain part of reserved sectors
  1845 00000A1B 8B4E0E                  	mov	cx, [bp+0Eh] ; [BPB_RsvdSecCnt]
  1846                                  	;sub	cx, 1
  1847                                  	;jna	short FAT16_f_13
  1848 00000A1E 49                      	dec	cx
  1849 00000A1F 7418                    	jz	short FAT16_f_13
  1850                                  FAT16_f_12:
  1851 00000A21 51                      	push	cx
  1852 00000A22 BB[B820]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1853 00000A25 E8C7FA                  	call	write_hd_sector
  1854 00000A28 0F828EFE                	jc	formatting_error
  1855 00000A2C E84BFE                  	call	write_format_percent
  1856 00000A2F 83C001                  	add	ax, 1
  1857 00000A32 83D200                  	adc	dx, 0
  1858 00000A35 59                      	pop	cx
  1859 00000A36 49                      	dec	cx ; dec cl
  1860 00000A37 75E8                    	jnz	short FAT16_f_12
  1861                                  FAT16_f_13:
  1862                                  	; write FAT sectors
  1863 00000A39 8B0E[0023]              	mov	cx, [data_start] ; lba/abs addr
  1864 00000A3D 8B1E[0223]              	mov	bx, [data_start+2] ; lba/abs addr
  1865                                  
  1866 00000A41 2B0E[0C23]              	sub	cx, [root_dir_secs]
  1867 00000A45 83DB00                  	sbb	bx, 0
  1868                                  
  1869 00000A48 53                      	push	bx
  1870 00000A49 51                      	push	cx
  1871 00000A4A BB[B820]                	mov	bx, HDFORMAT_FATBUFFER
  1872                                  	; ES:BX = FAT Sector Buffer
  1873 00000A4D 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
  1874 00000A50 B5FF                    	mov	ch, 0FFh
  1875 00000A52 890F                    	mov	[bx], cx ; 0FFF8h
  1876 00000A54 88E9                    	mov	cl, ch ; cx = 0FFFFh
  1877 00000A56 894F02                  	mov	[bx+2], cx
  1878                                  	;inc	cx
  1879 00000A59 E893FA                  	call	write_hd_sector
  1880 00000A5C 0F825AFE                	jc	formatting_error
  1881 00000A60 E817FE                  	call	write_format_percent
  1882                                  	;mov	bx, HDFORMAT_FATBUFFER
  1883 00000A63 B90000                  	mov	cx, 0
  1884 00000A66 890F                    	mov	[bx], cx
  1885 00000A68 894F02                  	mov	[bx+2], cx
  1886 00000A6B EB0F                    	jmp	short FAT16_f_15
  1887                                  FAT16_f_14:	
  1888 00000A6D 53                      	push	bx
  1889 00000A6E 51                      	push	cx	
  1890 00000A6F BB[B820]                	mov	bx, HDFORMAT_FATBUFFER
  1891 00000A72 E87AFA                  	call	write_hd_sector
  1892 00000A75 0F8241FE                	jc	formatting_error
  1893 00000A79 E8FEFD                  	call	write_format_percent
  1894                                  FAT16_f_15:	
  1895 00000A7C 59                      	pop	cx
  1896 00000A7D 5B                      	pop	bx
  1897 00000A7E 83C001                  	add	ax, 1
  1898 00000A81 83D200                  	adc	dx, 0
  1899 00000A84 39DA                    	cmp	dx, bx
  1900 00000A86 72E5                    	jb	short FAT16_f_14
  1901 00000A88 39C8                    	cmp	ax, cx
  1902 00000A8A 72E1                    	jb	short FAT16_f_14
  1903                                  
  1904                                  	; write	root directory sectors
  1905                                  	; as empty sectors
  1906 00000A8C 8B0E[0C23]              	mov	cx, [root_dir_secs]
  1907                                  FAT16_f_16:
  1908 00000A90 51                      	push	cx
  1909 00000A91 BB[B820]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1910 00000A94 E858FA                  	call	write_hd_sector
  1911 00000A97 0F821FFE                	jc	formatting_error
  1912 00000A9B E8DCFD                  	call	write_format_percent
  1913 00000A9E 83C001                  	add	ax, 1
  1914 00000AA1 83D200                  	adc	dx, 0
  1915 00000AA4 59                      	pop	cx
  1916 00000AA5 49                      	dec	cx
  1917 00000AA6 75E8                    	jnz	short FAT16_f_16	
  1918                                  
  1919                                  	; write DATA sectors 
  1920                                  	; (after root directory sectors)
  1921 00000AA8 8B0E[0423]              	mov	cx, [data_sectors]
  1922 00000AAC 8B1E[0623]              	mov	bx, [data_sectors+2]
  1923 00000AB0 43                      	inc	bx ; 0 -> 1, 1-> 2
  1924                                  FAT16_f_17:	
  1925 00000AB1 53                      	push	bx
  1926 00000AB2 51                      	push	cx	
  1927 00000AB3 BB[AA1C]                	mov	bx, HDFORMAT_SECBUFFER
  1928 00000AB6 E836FA                  	call	write_hd_sector
  1929 00000AB9 0F82FDFD                	jc	formatting_error
  1930 00000ABD E8BAFD                  	call	write_format_percent
  1931 00000AC0 59                      	pop	cx
  1932 00000AC1 5B                      	pop	bx
  1933 00000AC2 83C001                  	add	ax, 1
  1934 00000AC5 83D200                  	adc	dx, 0
  1935 00000AC8 49                      	dec	cx
  1936 00000AC9 75E6                    	jnz	short FAT16_f_17
  1937 00000ACB 4B                      	dec	bx
  1938 00000ACC 75E3                    	jnz	short FAT16_f_17
  1939                                  
  1940                                  	; If there are, format remain sectors which are
  1941                                  	; at beyond of data clusters, with zero bytes.
  1942                                  	
  1943 00000ACE 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  1944 00000AD1 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  1945                                  
  1946 00000AD4 837E1300                	cmp	word [bp+13h], 0 ; [BPB_TotSec16]
  1947 00000AD8 0F845AFC                	jz	FAT16_f_18
  1948 00000ADC 034E13                  	add	cx, [bp+13h]	; [BPB_TotSec16]
  1949 00000ADF 83D300                  	adc	bx, 0
  1950 00000AE2 E957FC                  	jmp	FAT16_f_19
  1951                                  
  1952                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1953                                  ; FAT12 FORMATTING
  1954                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1955                                  
  1956                                  ; ((TRDOS 386 criter))
  1957                                  ; Minimum size of FAT12 FS = [heads]*[sectors]
  1958                                  ; (1 cylinder) 
  1959                                  
  1960                                  format_FAT12_fs:
  1961 00000AE5 BD[5213]                	mov	bp, RD_FAT12_hd_bs
  1962 00000AE8 8D7E03                  	lea	di, [bp+3]
  1963 00000AEB BE[521A]                	mov	si, bs_oem_name
  1964 00000AEE B90400                  	mov	cx, 4
  1965 00000AF1 F3A5                    	rep	movsw 
  1966 00000AF3 A1[5415]                	mov	ax, [sectors]
  1967 00000AF6 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
  1968 00000AF9 A1[5615]                	mov	ax, [heads]
  1969 00000AFC 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
  1970 00000AFF A1[B020]                	mov	ax, [dosp_start]
  1971 00000B02 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
  1972 00000B05 A1[B220]                	mov	ax, [dosp_start+2]
  1973 00000B08 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
  1974 00000B0B A1[B420]                	mov	ax, [dosp_size]
  1975 00000B0E 894613                  	mov	[bp+13h], ax	; [BPB_TotSec16]
  1976                                  
  1977 00000B11 31F6                    	xor	si, si ; reset (FAT size fix) flag
  1978 00000B13 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1979 00000B16 8B5611                  	mov	dx, [bp+11h]	; [BPB_RootEntCnt] = 512
  1980 00000B19 83C20F                  	add	dx, 15	; (16-1) (512-1)
  1981 00000B1C C1EA04                  	shr	dx, 4	; /16  (*32/512)
  1982                                  	; AX = Root dir sectors
  1983                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1984 00000B1F 01D1                    	add	cx, dx ; + RootDirsectors ; + 32
  1985 00000B21 890E[0C23]              	mov	[root_dir_secs], cx ; = 33
  1986                                  
  1987                                  	;sub	ax, 33  ; 1 reserved sector, 32 root dir sectors
  1988                                  			; .. now AX has number of data sectors
  1989                                  			;	 		+ 2* (FAT sectors)
  1990 00000B25 29C8                    	sub	ax, cx	
  1991                                  FAT12_f_10:
  1992                                  	; Sectors per cluster calculation
  1993                                  	; (According to MS FAT32 FS specification.)
  1994                                  	;mov	cx, 1  ; 1 sector per cluster
  1995 00000B27 B101                    	mov	cl, 1  ; CH = 0
  1996                                  	; 28/10/2023 ; (BugFix)
  1997 00000B29 50                      	push	ax
  1998                                  FAT12_f_0:
  1999 00000B2A 3DF50F                  	cmp	ax, 4085 ; Max. cluster count for FAT12
  2000 00000B2D 7206                    	jb	short FAT12_f_1
  2001 00000B2F D0E1                    	shl	cl, 1 ; *2
  2002 00000B31 D1E8                    	shr	ax, 1 ; /2
  2003 00000B33 EBF5                    	jmp	short FAT12_f_0
  2004                                  FAT12_f_1:
  2005                                  	; 28/10/2023
  2006 00000B35 58                      	pop	ax
  2007 00000B36 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
  2008                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
  2009                                  	;mov	word [bp+0Eh], 1 ; [BPB_RsvdSecCnt] 
  2010                                  	;mov	word [bp+11h], 512 ; [BPB_RootEntCnt]
  2011                                  	
  2012                                  	; Calculating FAT size in sectors
  2013                                  	; AX = partition (volume, data) size in sectors
  2014                                  	; CX = sectors per clusters
  2015 00000B39 31D2                    	xor	dx, dx
  2016 00000B3B F7F1                    	div	cx
  2017                                  	; AX = cluster count (only for FAT size calc)
  2018                                  	; DX = 0
  2019 00000B3D 83C002                  	add	ax, 2  ; cluster 2 to ...
  2020 00000B40 89C2                    	mov	dx, ax
  2021 00000B42 D1E2                    	shl	dx, 1
  2022 00000B44 01D0                    	add	ax, dx ; *3
  2023 00000B46 D1E8                    	shr	ax, 1  ; /2
  2024 00000B48 83D000                  	adc	ax, 0  ; +0.5 -> +1
  2025                                  
  2026                                  	; AX = FAT bytes for 12 bit cluster numbers
  2027                                  	
  2028 00000B4B B90002                  	mov	cx, 512		; [BPB_BytesPerSec]
  2029 00000B4E 01C8                    	add	ax, cx		
  2030 00000B50 48                      	dec	ax		; [BPB_BytesPerSec] - 1
  2031 00000B51 29D2                    	sub	dx, dx
  2032 00000B53 F7F1                    	div	cx
  2033 00000B55 894616                  	mov	[bp+16h], ax	; [BPB_FATSz16]
  2034                                  	; * 2
  2035 00000B58 D1E0                    	shl	ax, 1
  2036                                  	; AX = [BPB_NumFATs] * [BPB_FATSz16]
  2037                                  
  2038                                  	;mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  2039                                  	;add	cx, ax
  2040                                  	;mov	ax, [bp+11h]	; [BPB_RootEntCnt] = 512
  2041                                  	;add	ax, 15	; (16-1) (512-1)
  2042                                  	;shr	ax, 4	; /16  (*32/512)
  2043                                  	;; AX = Root dir sectors
  2044                                  	;; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  2045                                  	;add	cx, ax ; + RootDirsectors
  2046                                  	;mov	[root_dir_secs], ax
  2047                                  
  2048                                  	;mov	cx, 33
  2049 00000B5A 8B0E[0C23]              	mov	cx, [root_dir_secs]
  2050 00000B5E 034E0E                  	add	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  2051                                  		; cx = root directory sectors + reserved sectors
  2052 00000B61 01C1                    	add	cx, ax
  2053                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  2054                                  	;	  + RootDirSectors
  2055 00000B63 8B4613                  	mov	ax, [bp+13h]	; [BPB_TotSec16]
  2056 00000B66 29C8                    	sub	ax, cx
  2057                                  		 ; AX = data sectors
  2058                                  		 ; cH = 0
  2059                                  
  2060                                  	; fix FAT size (better method)
  2061 00000B68 09F6                    	or	si, si
  2062 00000B6A 7504                    	jnz	short FAT12_f_9
  2063                                  
  2064 00000B6C 89C6                    	mov	si, ax  ; ax = data sectors
  2065 00000B6E EBB7                    	jmp	short FAT12_f_10
  2066                                  
  2067                                  FAT12_f_9:
  2068 00000B70 31D2                    	xor	dx, dx
  2069 00000B72 890E[0023]              	mov	[data_start], cx
  2070 00000B76 8916[0223]              	mov	[data_start+2], dx ; 0
  2071                                  	; DX_AX = Data sectors
  2072 00000B7A A3[0423]                	mov	[data_sectors], ax
  2073 00000B7D 8916[0623]              	mov	[data_sectors+2], dx ; 0
  2074 00000B81 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  2075 00000B84 28ED                    	sub	ch, ch
  2076 00000B86 F7F1                    	div	cx
  2077                                  	; AX = Count of clusters (rounded down)
  2078 00000B88 29D2                    	sub	dx, dx ; 0
  2079 00000B8A A3[0823]                	mov	[cluster_count], ax
  2080 00000B8D 8916[0A23]              	mov	[cluster_count+2], dx ; 0
  2081                                  
  2082 00000B91 8D7E2B                  	lea	di, [bp+43] ; [BS_VolLab]
  2083 00000B94 E8D9FB                  	call	write_volume_name
  2084 00000B97 8D7627                  	lea	si, [bp+39] ; [BS_VolID]
  2085 00000B9A E832FC                  	call	write_volume_serial
  2086 00000B9D E832FD                  	call	write_cluster_count	
  2087                                  
  2088 00000BA0 E8B3FC                  	call	write_formatting_msg
  2089 00000BA3 B000                    	mov	al, 0
  2090 00000BA5 E80BFD                  	call	write_format_percent_x
  2091                                  
  2092 00000BA8 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
  2093 00000BAB 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  2094                                  
  2095 00000BAE 0106[0023]              	add	[data_start], ax
  2096 00000BB2 1116[0223]              	adc	[data_start+2], dx
  2097                                  
  2098                                  	; DX_AX = FAT12 Boot Sector address
  2099 00000BB6 BB[5213]                	mov	bx, RD_FAT12_hd_bs
  2100                                  	; ES:BX = Boot Sector Buffer
  2101 00000BB9 E833F9                  	call	write_hd_sector
  2102 00000BBC 0F82FAFC                	jc	formatting_error
  2103 00000BC0 E8B7FC                  	call	write_format_percent
  2104 00000BC3 83C001                  	add	ax, 1
  2105 00000BC6 83D200                  	adc	dx, 0
  2106                                  	; write remain part of reserved sectors
  2107 00000BC9 8B4E0E                  	mov	cx, [bp+0Eh] ; [BPB_RsvdSecCnt]
  2108                                  	;sub	cx, 1
  2109                                  	;jna	short FAT12_f_3
  2110 00000BCC 49                      	dec	cx
  2111 00000BCD 7418                    	jz	short FAT12_f_3
  2112                                  FAT12_f_2:
  2113 00000BCF 51                      	push	cx
  2114 00000BD0 BB[B820]                	mov	bx, HDFORMAT_EMPTY_BUFF
  2115 00000BD3 E819F9                  	call	write_hd_sector
  2116 00000BD6 0F82E0FC                	jc	formatting_error
  2117 00000BDA E89DFC                  	call	write_format_percent
  2118 00000BDD 83C001                  	add	ax, 1
  2119 00000BE0 83D200                  	adc	dx, 0
  2120 00000BE3 59                      	pop	cx
  2121 00000BE4 49                      	dec	cx ; dec cl
  2122 00000BE5 75E8                    	jnz	short FAT12_f_2
  2123                                  FAT12_f_3:
  2124                                  	; write FAT sectors
  2125 00000BE7 8B0E[0023]              	mov	cx, [data_start] ; lba/abs addr
  2126 00000BEB 8B1E[0223]              	mov	bx, [data_start+2] ; lba/abs addr
  2127                                  
  2128 00000BEF 2B0E[0C23]              	sub	cx, [root_dir_secs]
  2129 00000BF3 83DB00                  	sbb	bx, 0
  2130                                  
  2131 00000BF6 53                      	push	bx
  2132 00000BF7 51                      	push	cx
  2133 00000BF8 BB[B820]                	mov	bx, HDFORMAT_FATBUFFER
  2134                                  	; ES:BX = FAT Sector Buffer
  2135 00000BFB 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
  2136 00000BFE B5FF                    	mov	ch, 0FFh
  2137 00000C00 890F                    	mov	[bx], cx ; 0FFF8h
  2138 00000C02 886F02                  	mov	[bx+2], ch ; 0FFFFF8h
  2139                                  	;xor	cx, cx
  2140 00000C05 E8E7F8                  	call	write_hd_sector
  2141 00000C08 0F82AEFC                	jc	formatting_error
  2142 00000C0C E86BFC                  	call	write_format_percent
  2143                                  	;mov	bx, HDFORMAT_FATBUFFER
  2144 00000C0F B90000                  	mov	cx, 0
  2145 00000C12 890F                    	mov	[bx], cx
  2146 00000C14 884F02                  	mov	[bx+2], cl
  2147 00000C17 EB0F                    	jmp	short FAT12_f_5
  2148                                  FAT12_f_4:	
  2149 00000C19 53                      	push	bx
  2150 00000C1A 51                      	push	cx	
  2151 00000C1B BB[B820]                	mov	bx, HDFORMAT_FATBUFFER
  2152 00000C1E E8CEF8                  	call	write_hd_sector
  2153 00000C21 0F8295FC                	jc	formatting_error
  2154 00000C25 E852FC                  	call	write_format_percent
  2155                                  FAT12_f_5:	
  2156 00000C28 59                      	pop	cx
  2157 00000C29 5B                      	pop	bx
  2158 00000C2A 83C001                  	add	ax, 1
  2159 00000C2D 83D200                  	adc	dx, 0
  2160 00000C30 39DA                    	cmp	dx, bx
  2161 00000C32 72E5                    	jb	short FAT12_f_4
  2162 00000C34 39C8                    	cmp	ax, cx
  2163 00000C36 72E1                    	jb	short FAT12_f_4
  2164                                  
  2165                                  	; write	root directory sectors
  2166                                  	; as empty sectors
  2167 00000C38 8B0E[0C23]              	mov	cx, [root_dir_secs]
  2168                                  FAT12_f_6:
  2169 00000C3C 51                      	push	cx
  2170 00000C3D BB[B820]                	mov	bx, HDFORMAT_EMPTY_BUFF
  2171 00000C40 E8ACF8                  	call	write_hd_sector
  2172 00000C43 0F8273FC                	jc	formatting_error
  2173 00000C47 E830FC                  	call	write_format_percent
  2174 00000C4A 83C001                  	add	ax, 1
  2175 00000C4D 83D200                  	adc	dx, 0
  2176 00000C50 59                      	pop	cx
  2177 00000C51 49                      	dec	cx ; dec cl
  2178 00000C52 75E8                    	jnz	short FAT12_f_6
  2179                                  
  2180                                  	; write DATA sectors 
  2181                                  	; (after root directory sectors)
  2182 00000C54 8B0E[0423]              	mov	cx, [data_sectors]
  2183                                  	;mov	bx, [data_sectors+2]
  2184                                  	;inc	bx
  2185                                  FAT12_f_7:	
  2186                                  	;push	bx
  2187 00000C58 51                      	push	cx	
  2188 00000C59 BB[AA1C]                	mov	bx, HDFORMAT_SECBUFFER
  2189 00000C5C E890F8                  	call	write_hd_sector
  2190 00000C5F 0F8257FC                	jc	formatting_error
  2191 00000C63 E814FC                  	call	write_format_percent
  2192 00000C66 59                      	pop	cx
  2193                                  	;pop	bx
  2194 00000C67 83C001                  	add	ax, 1
  2195 00000C6A 83D200                  	adc	dx, 0
  2196 00000C6D 49                      	dec	cx
  2197 00000C6E 75E8                    	jnz	short FAT12_f_7
  2198                                  	;dec	bx
  2199                                  	;jnz	short FAT12_f_7
  2200                                  
  2201                                  	; If there are, format remain sectors which are
  2202                                  	; at beyond of data clusters, with zero bytes.
  2203                                  	
  2204 00000C70 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  2205 00000C73 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  2206                                  
  2207 00000C76 034E13                  	add	cx, [bp+13h]	; [BPB_TotSec16]
  2208 00000C79 83D300                  	adc	bx, 0
  2209 00000C7C E9BDFA                  	jmp	FAT12_f_8
  2210                                  
  2211                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2212                                  ; Read & Write characters
  2213                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2214                                  
  2215                                  rw_char:
  2216                                  	; OUTPUT -> DS:SI = Entered String (ASCIIZ)
  2217 00000C7F BE[1423]                	mov     si, StrVolumeName
  2218 00000C82 BB0700                  	mov     bx, 7
  2219 00000C85 B403                    	mov     ah, 3
  2220 00000C87 CD10                    	int     10h
  2221 00000C89 8916[C818]              	mov     [Cursor_Pos], dx
  2222                                  read_next_char:
  2223 00000C8D 30E4                    	xor     ah, ah
  2224 00000C8F CD16                    	int     16h
  2225 00000C91 20C0                    	and     al, al
  2226 00000C93 7439                    	jz      short loc_arrow    
  2227 00000C95 3CE0                    	cmp     al, 0E0h          
  2228 00000C97 7435                    	je      short loc_arrow
  2229 00000C99 3C08                    	cmp     al, 8
  2230 00000C9B 753D                    	jne     short char_return
  2231                                  loc_back:
  2232 00000C9D B403                    	mov     ah, 3
  2233 00000C9F CD10                    	int     10h
  2234 00000CA1 3A16[C818]              	cmp     dl, byte [Cursor_Pos]
  2235 00000CA5 761F                    	jna     short loc_beep
  2236                                  prev_column:
  2237 00000CA7 FECA                    	dec     dl
  2238                                  set_cursor_pos:
  2239 00000CA9 B402                    	mov     ah, 2
  2240 00000CAB CD10                    	int     10h
  2241 00000CAD 88D3                    	mov     bl, dl
  2242 00000CAF 2A1E[C818]              	sub     bl, byte [Cursor_Pos] 
  2243 00000CB3 B90100                  	mov     cx, 1
  2244 00000CB6 B409                    	mov     ah, 9
  2245 00000CB8 B020                    	mov     al, 20h
  2246 00000CBA 8800                    	mov     [si+bx], al
  2247                                  loc_write_it:
  2248 00000CBC B307                    	mov     bl, 7
  2249 00000CBE CD10                    	int     10h
  2250 00000CC0 8B16[C818]              	mov     dx, [Cursor_Pos]
  2251 00000CC4 EBC7                    	jmp     short read_next_char
  2252                                  loc_beep:
  2253 00000CC6 B40E                    	mov     ah, 0Eh
  2254 00000CC8 B007                    	mov     al, 7
  2255 00000CCA CD10                    	int     10h
  2256 00000CCC EBBF                    	jmp     short read_next_char
  2257                                  loc_arrow:    
  2258 00000CCE 80FC4B                  	cmp     ah, 4Bh
  2259 00000CD1 74CA                    	je      short loc_back
  2260 00000CD3 80FC53                  	cmp     ah, 53h
  2261 00000CD6 74C5                    	je      short loc_back
  2262 00000CD8 EBB3                    	jmp     short read_next_char
  2263                                  char_return:
  2264 00000CDA B403                    	mov     ah, 3
  2265 00000CDC CD10                    	int     10h
  2266                                  check_char_type:
  2267 00000CDE 3C20                    	cmp     al, 20h
  2268 00000CE0 7229                    	jb      short loc_escape
  2269 00000CE2 88D4                    	mov     ah, dl
  2270 00000CE4 2A26[C818]              	sub     ah, byte [Cursor_Pos]
  2271                                  	;cmp	ah, 10 
  2272                                  	;ja	short loc_beep
  2273 00000CE8 3A26[511A]              	cmp     ah, [vname_length]
  2274 00000CEC 73D8                    	jnb	short loc_beep
  2275 00000CEE 3C7A                    	cmp     al, 'z'
  2276 00000CF0 779B                    	ja      short read_next_char
  2277 00000CF2 3C61                    	cmp     al, 'a'
  2278 00000CF4 7202                    	jb      short pass_capitalize
  2279 00000CF6 24DF                    	and     al, 0DFh
  2280                                  pass_capitalize:
  2281 00000CF8 88E3                    	mov     bl, ah 
  2282 00000CFA 30E4                    	xor     ah, ah
  2283 00000CFC 8900                    	mov     [si+bx], ax
  2284 00000CFE B307                    	mov     bl, 7
  2285 00000D00 B40E                    	mov     ah, 0Eh
  2286 00000D02 CD10                    	int     10h
  2287 00000D04 EB87                    	jmp     short read_next_char
  2288                                  pass_escape:
  2289 00000D06 3C0D                    	cmp     al, 0Dh	; 13 ; ENTER
  2290 00000D08 7583                    	jne     short read_next_char
  2291                                  	;mov	ah, 0Eh
  2292                                  	;int	10h
  2293                                  	;mov	al, 0Ah
  2294                                  	;int	10h
  2295 00000D0A C3                      	retn
  2296                                  loc_escape:
  2297 00000D0B 3C1B                    	cmp     al, 1Bh	; 27 ; ESC
  2298 00000D0D 75F7                    	jne     short pass_escape
  2299 00000D0F F9                      	stc
  2300 00000D10 C3                      	retn
  2301                                  
  2302                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2303                                  ; 32 bit division
  2304                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2305                                  
  2306                                  div32:
  2307                                  	; DX_AX/CX
  2308                                  	; Result: DX_AX, BX (remainder) 
  2309 00000D11 89C3                    	mov	bx, ax
  2310                                  	;or	dx, ax ; * DX_AX = 0 ?       
  2311                                  	;jz	short div32_retn ; yes, do not divide! 
  2312 00000D13 89D0                    	mov	ax, dx
  2313 00000D15 31D2                            xor	dx, dx
  2314 00000D17 F7F1                            div	cx	; at first, divide DX
  2315                                  			; remainder is in DX 
  2316 00000D19 93                      	xchg	ax, bx	; now quotient is in BX
  2317                                    			; and initial AX value is in AX
  2318 00000D1A F7F1                    	div	cx	; now, DX_AX has been divided and
  2319                                  			; AX has quotient
  2320                                  			; DX has remainder
  2321 00000D1C 87D3                    	xchg	dx, bx	; finally, BX has remainder
  2322                                  ;div32_retn:
  2323 00000D1E C3                              retn
  2324                                  
  2325                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2326                                  ; Convert byte to decimal number
  2327                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2328                                  
  2329                                  bin_to_decimal:
  2330                                  	; INPUT: DS:SI = Target location
  2331                                  	;        DX_AX = Binary Number (Integer)
  2332                                  	; OUTPUT: Decimal char at DS:SI
  2333                                  	; 	 SI decremented after every division
  2334                                  	; 	 till AX<10.
  2335                                  	; CX, DX, BX will be changed.
  2336                                  	;
  2337 00000D1F B90A00                  	mov	cx, 10
  2338                                  btd_0:
  2339                                  	; DX_AX = Dividend
  2340                                  	; CX = Divisor
  2341 00000D22 E8ECFF                  	call	div32
  2342                                  	; DX_AX = Quotient
  2343                                  	; BX = remainder
  2344 00000D25 80C330                  	add	bl, '0'
  2345 00000D28 881C                    	mov	[si], bl
  2346 00000D2A 21D2                    	and	dx, dx
  2347 00000D2C 7403                    	jz	short btd_2
  2348                                  btd_1:
  2349 00000D2E 4E                      	dec	si
  2350 00000D2F EBF1                    	jmp	short btd_0
  2351                                  btd_2:
  2352 00000D31 09C0                    	or	ax, ax
  2353 00000D33 75F9                    	jnz	short btd_1
  2354                                  
  2355 00000D35 C3                      	retn
  2356                                  
  2357                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2358                                  ; Convert byte to hexadecimal number
  2359                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2360                                  
  2361                                  byte_to_hex:
  2362                                  bin_to_hex:
  2363                                  	; INPUT ->
  2364                                  	; 	AL = byte (binary number)
  2365                                  	; OUTPUT ->
  2366                                  	;	AX = hexadecimal string
  2367                                  	;
  2368 00000D36 53                      	push	bx
  2369 00000D37 31DB                    	xor	bx, bx
  2370 00000D39 88C3                    	mov	bl, al
  2371 00000D3B C0EB04                  	shr	bl, 4
  2372 00000D3E 8A9F[B818]              	mov	bl, [bx+hexchrs] 	 	
  2373 00000D42 86D8                    	xchg	bl, al
  2374 00000D44 80E30F                  	and	bl, 0Fh
  2375 00000D47 8AA7[B818]              	mov	ah, [bx+hexchrs] 
  2376 00000D4B 5B                      	pop	bx	
  2377 00000D4C C3                      	retn
  2378                                  
  2379                                  ; ----------------------------------------------------------------------------
  2380                                  ; initialized data
  2381                                  ; ----------------------------------------------------------------------------
  2382                                  
  2383 00000D4D 90                      align 2
  2384                                  
  2385                                  trdos386fc:
  2386 00000D4E [E908]                  	dw format_FAT16_fs
  2387 00000D50 0000                    	dw 0
  2388                                  
  2389                                  ;volume_id:
  2390                                  ;	dd 0
  2391                                  
  2392                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2393                                  ;  FAT boot sector code
  2394                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2395                                  
  2396                                  RD_FAT32_hd_bs:
  2397 00000D52 <bin 400h>              	incbin	'FAT32_BS.BIN'
  2398                                  RD_FAT16_hd_bs: 
  2399 00001152 <bin 200h>              	incbin	'RD4HDBS.BIN'
  2400                                  RD_FAT12_hd_bs: 
  2401 00001352 <bin 200h>              	incbin	'RD2HDBS.BIN'
  2402                                  
  2403                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2404                                  ;  messages
  2405                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2406                                  
  2407 00001552 00                      lba:	db 0
  2408                                  
  2409 00001553 00                      drv:	db 0
  2410                                  
  2411 00001554 00                      sectors: db 0
  2412 00001555 00                      	 db 0
  2413 00001556 00                      heads:	 db 0
  2414 00001557 00                      	 db 0
  2415 00001558 0000                    cylinders: dw 0
  2416                                  
  2417                                  RD_Welcome:
  2418 0000155A 0D0A                    	db 0Dh, 0Ah
  2419 0000155C 526574726F20444F53-     	db 'Retro DOS v4 Hard Disk Partition Formatting Utility '
  2419 00001565 207634204861726420-
  2419 0000156E 4469736B2050617274-
  2419 00001577 6974696F6E20466F72-
  2419 00001580 6D617474696E672055-
  2419 00001589 74696C69747920     
  2420 00001590 0D0A                    	db 0Dh, 0Ah
  2421 00001592 28666F72206C6F6769-     	db '(for logical dos drives in extended dos partitions)	'
  2421 0000159B 63616C20646F732064-
  2421 000015A4 726976657320696E20-
  2421 000015AD 657874656E64656420-
  2421 000015B6 646F73207061727469-
  2421 000015BF 74696F6E732909     
  2422 000015C6 0D0A                    	db 0Dh, 0Ah
  2423 000015C8 0D0A                    	db 0Dh, 0Ah
  2424 000015CA 286329204572646F67-     	db '(c) Erdogan TAN 2020-2023'
  2424 000015D3 616E2054414E203230-
  2424 000015DC 32302D32303233     
  2425 000015E3 0D0A                    	db 0Dh,0Ah
  2426 000015E5 0D0A                    	db 0Dh,0Ah
  2427 000015E7 55736167653A206570-     	db 'Usage: epformat <drive> '
  2427 000015F0 666F726D6174203C64-
  2427 000015F9 726976653E20       
  2428 000015FF 0D0A0D0A                	db 0Dh,0Ah, 0Dh, 0Ah
  2429 00001603 4472697665206E616D-     	db 'Drive names: '
  2429 0000160C 65733A20           
  2430 00001610 0D0A                    	db 0Dh, 0Ah
  2431 00001612 2020686430202E2E66-     	db '  hd0 ..for extended dos partition on 1st disk '
  2431 0000161B 6F7220657874656E64-
  2431 00001624 656420646F73207061-
  2431 0000162D 72746974696F6E206F-
  2431 00001636 6E2031737420646973-
  2431 0000163F 6B20               
  2432 00001641 0D0A                    	db 0Dh, 0Ah
  2433 00001643 2020686431202E2E66-     	db '  hd1 ..for extended dos partition on 2nd disk '
  2433 0000164C 6F7220657874656E64-
  2433 00001655 656420646F73207061-
  2433 0000165E 72746974696F6E206F-
  2433 00001667 6E20326E6420646973-
  2433 00001670 6B20               
  2434 00001672 0D0A                    	db 0Dh, 0Ah
  2435 00001674 2020686432202E2E66-     	db '  hd2 ..for extended dos partition on 3rd disk '
  2435 0000167D 6F7220657874656E64-
  2435 00001686 656420646F73207061-
  2435 0000168F 72746974696F6E206F-
  2435 00001698 6E2033726420646973-
  2435 000016A1 6B20               
  2436 000016A3 0D0A                    	db 0Dh, 0Ah
  2437 000016A5 2020686433202E2E66-     	db '  hd3 ..for extended dos partition on 4th disk '
  2437 000016AE 6F7220657874656E64-
  2437 000016B7 656420646F73207061-
  2437 000016C0 72746974696F6E206F-
  2437 000016C9 6E2034746820646973-
  2437 000016D2 6B20               
  2438 000016D4 0D0A00                  	db 0Dh, 0Ah, 0
  2439                                  
  2440 000016D7 32352F30392F323032-     	db '25/09/2020'
  2440 000016E0 30                 
  2441 000016E1 00                      	db 0
  2442                                  
  2443                                  RD_Format_warning:
  2444 000016E2 0D0A                    	db 0Dh, 0Ah
  2445 000016E4 5741524E494E472021-     	db "WARNING ! ", 0Dh, 0Ah 
  2445 000016ED 200D0A             
  2446 000016F0 28496620796F752073-     	db "(If you say 'Yes', all of data in the logical DOS drive will be lost !) "
  2446 000016F9 61792027596573272C-
  2446 00001702 20616C6C206F662064-
  2446 0000170B 61746120696E207468-
  2446 00001714 65206C6F676963616C-
  2446 0000171D 20444F532064726976-
  2446 00001726 652077696C6C206265-
  2446 0000172F 206C6F737420212920 
  2447                                  RD_Do_you_want:
  2448 00001738 0D0A                    	db 0Dh, 0Ah
  2449 0000173A 0D0A                    	db 0Dh, 0Ah
  2450 0000173C 446F20796F75207761-     	db "Do you want to format logical DOS drive as Retro DOS v4 FAT" 
  2450 00001745 6E7420746F20666F72-
  2450 0000174E 6D6174206C6F676963-
  2450 00001757 616C20444F53206472-
  2450 00001760 697665206173205265-
  2450 00001769 74726F20444F532076-
  2450 00001772 3420464154         
  2451                                  fattype_str:
  2452 00001777 3136206673203F2028-     	db "16 fs ? (Y/N) "
  2452 00001780 592F4E2920         
  2453 00001785 00                      	db 0
  2454                                  
  2455                                  _yes_str:
  2456 00001786 59455320                	db 'YES '
  2457 0000178A 0D0A00                  	db 0Dh, 0Ah, 0
  2458                                  _no_str:
  2459 0000178D 4E4F20                  	db 'NO '
  2460 00001790 0D0A00                  	db 0Dh, 0Ah, 0
  2461                                  
  2462                                  _msg_OK:
  2463                                  	;db	07h
  2464 00001793 0D0A                    	db	0Dh, 0Ah
  2465 00001795 4F4B2E                  	db	"OK."
  2466                                  RD_CRLF:
  2467 00001798 0D0A00                  	db	0Dh, 0Ah, 0
  2468                                  
  2469                                  RD_PressKeyWhenReady:
  2470 0000179B 0D0A                    	db 0Dh, 0Ah
  2471 0000179D 507265737320456E74-     	db 'Press Enter to format logical DOS drive '
  2471 000017A6 657220746F20666F72-
  2471 000017AF 6D6174206C6F676963-
  2471 000017B8 616C20444F53206472-
  2471 000017C1 69766520           
  2472                                  RD_ldn:
  2473 000017C5 31206F6E206864          	db '1 on hd'
  2474                                  RD_Drive:
  2475 000017CC 3F2E2000                	db '?. ', 0
  2476                                  
  2477                                  RD_disk_NotReadyOrError:
  2478 000017D0 0D0A                    	db 0Dh, 0Ah
  2479 000017D2 4469736B206572726F-     	db 'Disk error or drive not ready ! '
  2479 000017DB 72206F722064726976-
  2479 000017E4 65206E6F7420726561-
  2479 000017ED 6479202120         
  2480 000017F2 54727920616761696E-     zbyte:	db 'Try again ? (Y/N) '
  2480 000017FB 203F2028592F4E2920 
  2481 00001804 00                      	db 0
  2482                                  
  2483                                  RD_psize_defect:
  2484 00001805 0D0A                    	db 0Dh, 0Ah
  2485 00001807 4D4252207061727469-     	db 'MBR partition size defect ! '
  2485 00001810 74696F6E2073697A65-
  2485 00001819 206465666563742021-
  2485 00001822 20                 
  2486 00001823 0D0A                    	db 0Dh, 0Ah
  2487 00001825 286C65737320746861-     	db '(less than the minimum number of sectors required) '	
  2487 0000182E 6E20746865206D696E-
  2487 00001837 696D756D206E756D62-
  2487 00001840 6572206F6620736563-
  2487 00001849 746F72732072657175-
  2487 00001852 697265642920       
  2488 00001858 00                      	db 0
  2489                                  
  2490                                  RD_ep_ldd_defect:
  2491 00001859 0D0A                    	db 0Dh, 0Ah
  2492 0000185B 546865726520697320-     	db 'There is not a logical DOS drive ! '
  2492 00001864 6E6F742061206C6F67-
  2492 0000186D 6963616C20444F5320-
  2492 00001876 6472697665202120   
  2493 0000187E 0D0A                    	db 0Dh, 0Ah
  2494                                  ldd_count:
  2495 00001880 00                      	db 0
  2496                                  
  2497                                  RD_fatp_notfound:
  2498 00001881 0D0A                    	db 0Dh, 0Ah
  2499 00001883 4D425220646F657320-     	db 'MBR does not contain an extended DOS partition ! '	
  2499 0000188C 6E6F7420636F6E7461-
  2499 00001895 696E20616E20657874-
  2499 0000189E 656E64656420444F53-
  2499 000018A7 20706172746974696F-
  2499 000018B0 6E202120           
  2500                                  fattype:
  2501 000018B4 00                      	db 0
  2502                                  ;RetryCount:
  2503                                  ;	db 4
  2504                                  
  2505                                  ;error: db 0
  2506                                  
  2507                                  ;align 2
  2508 000018B5 90<rep 3h>              align 4
  2509                                  
  2510                                  hexchrs:
  2511 000018B8 303132333435363738-     	db	'0123456789ABCDEF'
  2511 000018C1 39414243444546     
  2512                                  
  2513                                  Cursor_Pos: ; dw 0
  2514                                  CHS_limit:  ; dword	 
  2515 000018C8 0000                    	dw	0
  2516                                  	;dw	0
  2517                                  
  2518 000018CA A101                    sign:	dw	417	; magic word
  2519                                  
  2520                                  ldd_table:
  2521 000018CC 0D0A                    	db	0Dh, 0Ah
  2522 000018CE 3D3D3D3D3D3D3D3D3D-     	db	"=======================================", 0Dh, 0Ah
  2522 000018D7 3D3D3D3D3D3D3D3D3D-
  2522 000018E0 3D3D3D3D3D3D3D3D3D-
  2522 000018E9 3D3D3D3D3D3D3D3D3D-
  2522 000018F2 3D3D3D0D0A         
  2523 000018F7 2020202020204844        	db	"      HD"
  2524                                  drv_str:
  2525 000018FF 3020455854454E4445-     	db	"0 EXTENDED DOS PARTITION       ", 0Dh, 0Ah
  2525 00001908 4420444F5320504152-
  2525 00001911 544954494F4E202020-
  2525 0000191A 202020200D0A       
  2526 00001920 3D3D3D3D3D3D3D3D3D-     	db	"=======================================", 0Dh, 0Ah
  2526 00001929 3D3D3D3D3D3D3D3D3D-
  2526 00001932 3D3D3D3D3D3D3D3D3D-
  2526 0000193B 3D3D3D3D3D3D3D3D3D-
  2526 00001944 3D3D3D0D0A         
  2527 00001949 204C6F676963616C20-     	db	" Logical DOS Drive   Type      SIZE    ", 0Dh, 0Ah
  2527 00001952 444F53204472697665-
  2527 0000195B 202020547970652020-
  2527 00001964 2020202053495A4520-
  2527 0000196D 2020200D0A         
  2528 00001972 2D2D2D2D2D2D2D2D2D-     	db	"---------------------------------------", 0Dh, 0Ah, 0
  2528 0000197B 2D2D2D2D2D2D2D2D2D-
  2528 00001984 2D2D2D2D2D2D2D2D2D-
  2528 0000198D 2D2D2D2D2D2D2D2D2D-
  2528 00001996 2D2D2D0D0A00       
  2529                                  ldd_row:
  2530 0000199C 202020202020202020-     	db	"                 "
  2530 000019A5 2020202020202020   
  2531                                  ldd_row_dn:
  2532 000019AD 31202020464154          	db	"1   FAT"
  2533                                  ldd_row_fs:
  2534 000019B4 31322020202020          	db	"12     "
  2535                                  ldd_row_sz:
  2536 000019BB 31323847422020200D-     	db	"128GB   ", 0Dh, 0Ah, 0
  2536 000019C4 0A00               
  2537                                  ldd_dline:
  2538 000019C6 3D3D3D3D3D3D3D3D3D-     	db	"=======================================", 0Dh, 0Ah	
  2538 000019CF 3D3D3D3D3D3D3D3D3D-
  2538 000019D8 3D3D3D3D3D3D3D3D3D-
  2538 000019E1 3D3D3D3D3D3D3D3D3D-
  2538 000019EA 3D3D3D0D0A         
  2539 000019EF 00                      	db	0
  2540                                  
  2541                                  ldd_select_msg:
  2542 000019F0 0D0A0D0A                	db	0Dh, 0Ah, 0Dh, 0Ah
  2543 000019F4 53656C656374206C6F-     	db	"Select logical DOS drive number (1 to " 
  2543 000019FD 676963616C20444F53-
  2543 00001A06 206472697665206E75-
  2543 00001A0F 6D6265722028312074-
  2543 00001A18 6F20               
  2544                                  ldd_select_pn:
  2545 00001A1A 342920746F20666F72-     	db	"4) to format. " 	
  2545 00001A23 6D61742E20         
  2546 00001A28 0D0A                    	db 	0Dh, 0Ah
  2547 00001A2A 286F72207072657373-     	db	"(or press ESC to cancel) ", 0Dh, 0Ah, 0
  2547 00001A33 2045534320746F2063-
  2547 00001A3C 616E63656C29200D0A-
  2547 00001A45 00                 
  2548                                  
  2549                                  ;align 4 
  2550                                  
  2551                                  msg_sectors_crlf:
  2552 00001A46 20736563746F72          	db	" sector"
  2553                                  msg_sectors_crlf_s:
  2554 00001A4D 73                      	db	"s"
  2555 00001A4E 0D0A00                  	db	0Dh, 0Ah, 0
  2556                                  
  2557                                  vname_length:
  2558 00001A51 00                      	db	0
  2559                                  
  2560                                  bs_oem_name:
  2561                                  	;db	'TRDOS2.0', 0
  2562                                  	; 28/10/2023
  2563 00001A52 524554524F444F5300      	db	'RETRODOS', 0
  2564                                  
  2565 00001A5B 90                      align 2
  2566                                  
  2567                                  no_name:
  2568 00001A5C 4E4F204E414D452020-     	db 	'NO NAME    ', 0
  2568 00001A65 202000             
  2569                                  
  2570                                  Msg_Volume_Name:
  2571 00001A68 0D0A                    	db	0Dh, 0Ah
  2572 00001A6A 0D0A                    	db	0Dh, 0Ah
  2573 00001A6C 566F6C756D65204E61-     	db	"Volume Name: ", 0
  2573 00001A75 6D653A2000         
  2574                                  
  2575                                  Msg_Volume_Serial:
  2576 00001A7A 566F6C756D65205365-     	db	"Volume Serial No: "
  2576 00001A83 7269616C204E6F3A20 
  2577                                  Vol_Serial1:
  2578 00001A8C 30303030                	db	"0000"
  2579 00001A90 2D                      	db	"-"
  2580                                  Vol_Serial2:
  2581 00001A91 30303030                	db	"0000"
  2582 00001A95 0D0A00                  	db	0Dh, 0Ah, 0
  2583                                  
  2584                                  msg_cluster_count:
  2585 00001A98 436C75737465722043-     	db	"Cluster Count: ", 0
  2585 00001AA1 6F756E743A2000     
  2586                                  cluster_count_str:
  2587 00001AA8 30303030303030          	db	"0000000"
  2588 00001AAF 0D0A00                  	db	0Dh, 0Ah, 0
  2589                                  msg_formatting:
  2590 00001AB2 466F726D617474696E-     	db	"Formatting ", 0
  2590 00001ABB 672000             
  2591                                  format_percent_str:
  2592 00001ABE 30303025                	db	"000%"
  2593 00001AC2 00                      	db	0					
  2594                                  
  2595                                  Msg_3dot_OK:
  2596 00001AC3 2E2E2E                  	db	'...'
  2597                                  Msg_OK:
  2598 00001AC6 204F4B2E                	db	' OK.'
  2599                                  CRLF:
  2600 00001ACA 0D0A00                  	db	0Dh, 0Ah, 0
  2601                                  
  2602                                  Msg_Error:
  2603 00001ACD 0D0A                    	db	0Dh, 0Ah
  2604 00001ACF 4572726F72202120        	db	'Error ! '
  2605 00001AD7 28                      	db	'('
  2606                                  error_code:
  2607 00001AD8 3030                    	dw	3030h
  2608 00001ADA 68                      	db	'h'
  2609 00001ADB 2920                    	db	') '
  2610 00001ADD 0D0A                    	db	0Dh, 0Ah
  2611 00001ADF 00                      	db	0
  2612                                  
  2613                                  	; 28/10/2023
  2614                                  FAT32_note:
  2615 00001AE0 0D0A                    	db	0Dh, 0Ah
  2616 00001AE2 0D0A                    	db	0Dh, 0Ah
  2617 00001AE4 4E4F54453A20            	db	'NOTE: '
  2618 00001AEA 0D0A                    	db	0Dh, 0Ah
  2619 00001AEC 0D0A                    	db	0Dh, 0Ah
  2620 00001AEE 526574726F20444F53-     	db	'Retro DOS v4.2 -MSDOS 6.22- does not recognize FAT32 file system.'
  2620 00001AF7 2076342E32202D4D53-
  2620 00001B00 444F5320362E32322D-
  2620 00001B09 20646F6573206E6F74-
  2620 00001B12 207265636F676E697A-
  2620 00001B1B 652046415433322066-
  2620 00001B24 696C65207379737465-
  2620 00001B2D 6D2E               
  2621 00001B2F 0D0A                    	db 	0Dh, 0Ah
  2622 00001B31 526574726F20444F53-     	db	'Retro DOS v5 -PCDOS 7.1- FAT32 boot sector code is not ready (in 2023).'
  2622 00001B3A 207635202D5043444F-
  2622 00001B43 5320372E312D204641-
  2622 00001B4C 54333220626F6F7420-
  2622 00001B55 736563746F7220636F-
  2622 00001B5E 6465206973206E6F74-
  2622 00001B67 207265616479202869-
  2622 00001B70 6E2032303233292E   
  2623 00001B78 0D0A                    	db	0Dh, 0Ah
  2624 00001B7A 0D0A                    	db	0Dh, 0Ah
  2625 00001B7C 4275742C205452444F-     	db	'But, TRDOS386 recognizes FAT32 file system and its boot sector'
  2625 00001B85 53333836207265636F-
  2625 00001B8E 676E697A6573204641-
  2625 00001B97 5433322066696C6520-
  2625 00001BA0 73797374656D20616E-
  2625 00001BA9 642069747320626F6F-
  2625 00001BB2 7420736563746F72   
  2626 00001BBA 0D0A                    	db	0Dh, 0Ah
  2627 00001BBC 77696C6C2062652075-     	db	'will be used to format the new FAT32 partition/volume.'
  2627 00001BC5 73656420746F20666F-
  2627 00001BCE 726D61742074686520-
  2627 00001BD7 6E6577204641543332-
  2627 00001BE0 20706172746974696F-
  2627 00001BE9 6E2F766F6C756D652E 
  2628 00001BF2 0D0A                    	db	0Dh, 0Ah
  2629 00001BF4 0D0A                    	db	0Dh, 0Ah
  2630 00001BF6 546865206B65726E65-     	db	'The kernel file name of the FAT32 boot sector is ', 34,'TRDOS386.SYS', 34,'.'
  2630 00001BFF 6C2066696C65206E61-
  2630 00001C08 6D65206F6620746865-
  2630 00001C11 20464154333220626F-
  2630 00001C1A 6F7420736563746F72-
  2630 00001C23 20697320225452444F-
  2630 00001C2C 533338362E53595322-
  2630 00001C35 2E                 
  2631 00001C36 0D0A                    	db	0Dh, 0Ah
  2632 00001C38 526574726F20444F53-     	db	'Retro DOS v5 kernel file name will be ', 34, 'PCDOS.SYS', 34,'.'
  2632 00001C41 207635206B65726E65-
  2632 00001C4A 6C2066696C65206E61-
  2632 00001C53 6D652077696C6C2062-
  2632 00001C5C 6520225043444F532E-
  2632 00001C65 535953222E         
  2633 00001C6A 0D0A                    	db	0Dh, 0Ah
  2634 00001C6C 0D0A                    	db	0Dh, 0Ah 
  2635 00001C6E 507265737320454E54-     	db	'Press ENTER to CONTINUE or press another key to CANCEL.'
  2635 00001C77 455220746F20434F4E-
  2635 00001C80 54494E5545206F7220-
  2635 00001C89 707265737320616E6F-
  2635 00001C92 74686572206B657920-
  2635 00001C9B 746F2043414E43454C-
  2635 00001CA4 2E                 
  2636 00001CA5 0D0A0D0A00              	db	0Dh, 0Ah, 0Dh, 0Ah, 0
  2637                                  
  2638                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2639                                  ;  initialized buffers
  2640                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2641                                  
  2642                                  HDFORMAT_SECBUFFER:
  2643 00001CAA F6<rep 200h>            	times	512 db 0F6h
  2644                                  HDFORMAT_FSINFO_BUFF:
  2645 00001EAA 52526141                	dd	41615252h  ; FSI_LeadSig
  2646 00001EAE 00<rep 1E0h>            	times	480 db 0   ; FSI_Reserved1
  2647 0000208E 72724161                	dd	61417272h  ; FSI_StrucSig
  2648 00002092 FFFFFFFF                	dd	0FFFFFFFFh ; FSI_Free_Count
  2649 00002096 02000000                	dd	000000002h ; FSI_Nxt_Free
  2650 0000209A 00<rep Ch>              	times	12 db 0	   ; FSI_Reserved2
  2651 000020A6 000055AA                	dd	0AA550000h ; FSI_TrailSig
  2652                                  
  2653                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2654                                  
  2655 000020AA [B822]                  lddt_ptr dw lddt	
  2656                                  
  2657                                  ;SizeOfFile equ $-100	  	
  2658                                  
  2659                                  ; ----------------------------------------------------------------------------
  2660                                  ; uninitialized data
  2661                                  ; ----------------------------------------------------------------------------
  2662                                  
  2663                                  bss_start:
  2664                                  
  2665                                  ABSOLUTE bss_start
  2666                                  
  2667                                  alignb 4
  2668                                  
  2669 000020AC ??                      fsID:	resb 1
  2670 000020AD ??                      rw:	resb 1
  2671 000020AE ????                    csize:	resw 1 ; heads*spt (sectors per cylinder)
  2672                                  
  2673 000020B0 ????????                dosp_start: resd 1 ; start sector of the (primary) dos partition
  2674 000020B4 ????????                dosp_size:  resd 1 ; partition size in sectors	 
  2675                                  
  2676                                  MBR:
  2677                                  bootsector:
  2678                                  ; 	resb 512
  2679                                  HDFORMAT_FATBUFFER:
  2680                                  HDFORMAT_EMPTY_BUFF:
  2681 000020B8 <res 200h>              	resb 512
  2682                                  
  2683                                  ;HDFORMAT_FATBUFFER:
  2684                                  ;HDFORMAT_EMPTY_BUFF:
  2685                                  ;	resb 512
  2686                                  
  2687                                  ; logical dos drives table
  2688 000022B8 <res 40h>               lddt:	resb 4*16 ; 64 bytes	
  2689                                  
  2690 000022F8 ????????                EP_Start:	resd 1
  2691 000022FC ????????                EP_Start_x:	resd 1
  2692                                  
  2693 00002300 ????????                data_start:	resd 1
  2694 00002304 ????????                data_sectors:	resd 1
  2695 00002308 ????????                cluster_count:	resd 1
  2696 0000230C ????                    root_dir_secs:	resw 1
  2697 0000230E ????                    format_percent: resw 1
  2698 00002310 ??                      prev_percent:	resb 1
  2699 00002311 ??                      rsvdbyte:	resb 1
  2700                                  
  2701 00002312 ????                    old_sp:		resw 1
  2702                                  
  2703 00002314 <res Ch>                StrVolumeName:	resb 12
  2704                                  
  2705 00002320 ????                    lddt_save:	resw 1
  2706                                  
  2707                                  end_bss:
