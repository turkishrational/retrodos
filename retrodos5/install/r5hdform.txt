     1                                  ; ****************************************************************************
     2                                  ; HDFORMAT.ASM (HDFORMAT.COM) - Retro DOS v5 Hard Disk Formatting Utility
     3                                  ; (R5HDFORM.S - R5HDFORM.COM)
     4                                  ; ----------------------------------------------------------------------------
     5                                  ; Primary DOS Partition (FAT File System) Format Utility for Retro DOS v5 OS.
     6                                  ; ----------------------------------------------------------------------------
     7                                  ; Last Update: 15/07/2024
     8                                  ; ----------------------------------------------------------------------------
     9                                  ; Beginning: 28/10/2023
    10                                  ; ----------------------------------------------------------------------------
    11                                  ; Assembler: NASM version 2.15 (r5hdform.s)
    12                                  ; ----------------------------------------------------------------------------
    13                                  ; Modified from 'rdhdform.s'(RDHDFORM.COM) source code by Erdogan Tan
    14                                  ; (04/05/2024) - Retro DOS v4 hard/fixed disk formatting utility -
    15                                  ; ****************************************************************************
    16                                  ; Copyright (C) 2020-2024 Erdogan TAN 
    17                                  ; ****************************************************************************
    18                                  ; assembling: nasm r5hdform.s -l r5hdform.txt -o R5HDFORM.COM -Z error.txt
    19                                  
    20                                  ; Note: Logical DOS drives in extended DOS partitions are excluded.
    21                                  
    22                                  ; ----------------------------------------------------------------------------
    23                                  ; equations
    24                                  ; ----------------------------------------------------------------------------
    25                                  
    26                                  ; boot sector parameters
    27                                  
    28                                  bsOemName	equ 3
    29                                  bsBytesPerSec	equ 11 ; 512 (word)
    30                                  bsSecPerClust	equ 13
    31                                  bsResSectors	equ 14
    32                                  bsFATs		equ 16
    33                                  bsRootDirEnts	equ 17
    34                                  bsSectors	equ 19
    35                                  bsMedia		equ 21
    36                                  bsFATsecs	equ 22
    37                                  bsSecPerTrack	equ 24 ; 18 (word)
    38                                  bsHeads		equ 26 ; 2 (word)
    39                                  bsHidden1	equ 28
    40                                  bsHidden2	equ 30
    41                                  bsHugeSectors	equ 32
    42                                  bsDriveNumber	equ 36
    43                                  bsReserved1	equ 37
    44                                  bsBpbSignature	equ 38 ; 29h (byte)
    45                                  bsVolumeID	equ 39
    46                                  bsVolumeLabel	equ 43
    47                                  bsFileSysType	equ 54 ; 'FAT12   '  (8 bytes)
    48                                  ;
    49                                  bsReserved2	equ 62
    50                                  ; TRDOS 386 v2.0 2018 Extensions
    51                                  bsDataStart	equ 64
    52                                  bsRootDirStart	equ 66
    53                                  bsRootDirSects	equ 68
    54                                  bsDirEntsPerSec equ 70
    55                                  
    56                                  ; FAT32 bs
    57                                  BPB_FATSz32	equ 36
    58                                  BPB_ExtFlags	equ 40
    59                                  BPB_FSVer	equ 42
    60                                  BPB_RootClus	equ 44
    61                                  BPB_FSInfo	equ 48
    62                                  BPB_BkBootSec	equ 50
    63                                  BPB_Reserved	equ 52
    64                                  BS_DrvNum	equ 64	; 80h
    65                                  BS_Reserved1	equ 65
    66                                  BS_BootSig	equ 66	; 29h (byte)
    67                                  BS_VolID	equ 67
    68                                  BS_VolLab	equ 71
    69                                  BS_FilSysType	equ 82	; 'FAT32   '  (8 bytes) 
    70                                  
    71                                  ; Masterboot / Partition Table at Beginning+1BEh
    72                                  ptBootable      equ 0
    73                                  ptBeginHead     equ 1
    74                                  ptBeginSector   equ 2
    75                                  ptBeginCylinder equ 3
    76                                  ptFileSystemID	equ 4
    77                                  ptEndHead       equ 5
    78                                  ptEndSector     equ 6
    79                                  ptEndCylinder   equ 7
    80                                  ptStartSector   equ 8
    81                                  ptSectors       equ 12
    82                                  
    83                                  partition_table equ 1BEh
    84                                  
    85                                  ; ----------------------------------------------------------------------------
    86                                  ; code
    87                                  ; ----------------------------------------------------------------------------
    88                                  
    89                                  [BITS 16]
    90                                  [ORG 100h]
    91                                  
    92 00000000 FA                      	cli
    93 00000001 FC                      	cld
    94 00000002 0E                      	push	cs
    95 00000003 17                      	pop	ss
    96 00000004 BCFEFF                  	mov	sp, 0FFFEh
    97 00000007 FB                      	sti
    98                                  
    99                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   100                                  ; see if drive specified
   101                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   102                                  
   103 00000008 BE8000                  	mov	si, 80h			; PSP command tail
   104 0000000B 8A0C                    	mov	cl, [si]
   105 0000000D 08C9                    	or	cl, cl
   106 0000000F 7503                    	jnz	short T_1
   107 00000011 E99100                  	jmp	T_9			; jump if zero
   108                                  T_1:
   109 00000014 46                      	inc	si  ; (+)
   110                                  
   111 00000015 8A04                    	mov	al, [si]
   112 00000017 3C20                    	cmp	al, ' '			; is it SPACE ?
   113 00000019 7507                    	jne	short T_2
   114                                  R_1:
   115 0000001B FEC9                    	dec	cl
   116 0000001D 75F5                    	jnz	short T_1
   117 0000001F E98300                  	jmp	T_9
   118                                  T_2:
   119 00000022 46                      	inc	si	; (*)
   120                                  
   121 00000023 3C2D                    	cmp	al, '-'
   122 00000025 7523                    	jne	short R_2
   123                                  
   124 00000027 FEC9                    	dec	cl ; 1st 'inc si' (+)
   125 00000029 FEC9                    	dec	cl ; previous 'inc si' (*)
   126 0000002B 7E78                    	jng	short T_9  ; cl < 1
   127                                  
   128 0000002D 38E0                    	cmp	al, ah
   129 0000002F 7474                    	je	short T_9
   130                                  
   131 00000031 88C4                    	mov	ah, al ; '-'
   132 00000033 8A04                    	mov	al, [si]
   133                                  	; cl > 0
   134 00000035 46                      	inc	si	; (**)
   135 00000036 803C20                  	cmp	byte [si], ' '
   136 00000039 756A                    	jne	short T_9
   137 0000003B 3C30                    	cmp	al, '0'
   138 0000003D 7266                    	jb	short T_9
   139 0000003F 3C34                    	cmp	al, '4'
   140 00000041 7762                    	ja	short T_9
   141 00000043 2C30                    	sub	al, '0'
   142 00000045 A2[7816]                	mov	[partition], al
   143 00000048 EBD1                    	jmp	short R_1  
   144                                  		; dec cl for previous 'inc si' (**)
   145                                  R_2:
   146 0000004A FEC9                    	dec	cl ; 1st 'inc si' (+)
   147 0000004C 7430                    	jz	short R_3
   148                                  
   149 0000004E 803C3A                  	cmp	byte [si], ':'
   150 00000051 7421                    	je	short T_3
   151                                  	
   152 00000053 803C20                  	cmp	byte [si], ' '
   153 00000056 7626                    	jna	short R_3
   154                                  
   155 00000058 FEC9                    	dec	cl ; following 'inc si' (*)
   156 0000005A 7422                    	jz	short R_3
   157                                  
   158 0000005C 3C68                    	cmp	al, 'h'
   159 0000005E 7545                    	jne	short T_9
   160 00000060 803C64                  	cmp	byte [si], 'd'
   161 00000063 7540                    	jne	short T_9
   162 00000065 46                      	inc	si	; (*)
   163 00000066 8A04                    	mov	al, [si]
   164 00000068 3C30                    	cmp	al, '0'
   165 0000006A 7433                    	je	short T_8
   166 0000006C 7237                    	jb	short T_9
   167 0000006E 3C33                    	cmp	al, '3'
   168 00000070 762D                    	jna	short T_8
   169 00000072 EB31                    	jmp	short T_9
   170                                  T_3:
   171 00000074 FEC9                    	dec	cl ; following 'inc si' (**)
   172 00000076 7406                    	jz	short R_3
   173                                  	; cl > 0
   174 00000078 46                      	inc	si	; (**)
   175 00000079 803C20                  	cmp	byte [si], ' '
   176 0000007C 7727                    	ja	short T_9
   177                                  R_3:
   178 0000007E 3C43                    	cmp	al, 'C'
   179 00000080 7223                    	jb	short T_9
   180 00000082 7414                    	je	short T_6
   181                                  	;cmp	al, 'Z'			; A - Z
   182                                  	;jna	short T_6
   183 00000084 3C44                    	cmp	al, 'D'
   184 00000086 7610                    	jna	short T_6
   185 00000088 3C5A                    	cmp	al, 'Z'
   186 0000008A 7619                    	jna	short T_9
   187                                  T_4:	
   188 0000008C 3C63                    	cmp	al, 'c'			; a - z 
   189 0000008E 7215                    	jb	short T_9
   190 00000090 7404                    	je	short T_5
   191                                  	;cmp	al, 'z'
   192                                  	;ja	short T_9
   193 00000092 3C64                    	cmp	al, 'd'
   194 00000094 770F                    	ja	short T_9
   195                                  T_5:
   196 00000096 2C20                    	sub	al, 'a'-'A'		; to upper case
   197                                  
   198                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   199                                  ; get drive code
   200                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   201                                  
   202                                  T_6:
   203 00000098 2C13                    	sub	al, 'C'-'0'
   204                                  T_7:
   205 0000009A A2[6217]                	mov	[RD_Drive], al	; '0' .. '4'
   206 0000009D EB0F                    	jmp	short T_10
   207                                  T_8:
   208 0000009F 46                      	inc	si
   209 000000A0 803C20                  	cmp	byte [si], ' '
   210 000000A3 76F5                    	jna	short T_7
   211                                  
   212                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   213                                  ; Write message
   214                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   215                                  
   216                                  T_9:
   217 000000A5 BE[E813]                	mov	si, RD_Welcome
   218 000000A8 E80502                  	call	print_msg
   219                                  	;cmp	cl, 0
   220                                          ;ja	short T_35
   221 000000AB E9EB01                  	jmp	T_35
   222                                  
   223                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   224                                  ; get drive parameters
   225                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   226                                  
   227                                  T_10:
   228 000000AE B408                    	mov	ah, 08h
   229                                  	;mov	dl, [RD_Drive]	; drive
   230 000000B0 88C2                    	mov	dl, al
   231 000000B2 80C250                  	add	dl, 80h -'0'		; make it 80h based 
   232 000000B5 8816[E113]              	mov	[drv], dl
   233 000000B9 CD13                    	int	13h			; return disk parameters
   234                                  
   235 000000BB 0E                      	push	cs
   236 000000BC 07                      	pop	es			; restore es
   237                                  
   238 000000BD 08E4                    	or	ah, ah
   239 000000BF 7542                    	jnz	short T_12		; error
   240                                  	
   241 000000C1 88C8                    	mov	al, cl
   242 000000C3 243F                    	and	al, 63
   243 000000C5 A2[E213]                	mov	[sectors], al
   244 000000C8 C0E906                  	shr	cl, 6 
   245 000000CB 86E9                    	xchg	ch, cl
   246 000000CD 41                      	inc	cx
   247 000000CE 890E[E613]              	mov	[cylinders], cx
   248 000000D2 FEC6                    	inc	dh
   249 000000D4 8836[E413]              	mov	[heads], dh
   250 000000D8 F6E6                    	mul	dh
   251                                  		; ax = heads * spt
   252 000000DA A3[F21C]                	mov	[csize], ax
   253 000000DD F7E1                    	mul	cx ; * cylinders
   254                                  		; dx:ax = chs limit
   255 000000DF A3[5018]                	mov	[CHS_limit], ax
   256 000000E2 8916[5218]              	mov	[CHS_limit+2], dx
   257                                  
   258                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   259                                  ; read MBR
   260                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   261                                  
   262                                  	; check for (valid) primary dos partition
   263                                  
   264                                  	;mov	byte [RetryCount], 4
   265 000000E6 BF0500                  	mov	di, 5
   266                                  
   267                                  	;mov	ax, 0201h		; read disk
   268 000000E9 BB[FC1C]                	mov	bx, MBR			; location of masterboot code
   269                                  
   270 000000EC B90100                  	mov	cx, 1			; cylinder = 0
   271                                  					; sector = 1
   272 000000EF B600                    	mov	dh, 0			; head = 0
   273                                  	;mov	dl, [RD_Drive]	; drive 
   274                                  	;add	dl, 80h -'0'		; make it 80h based 
   275 000000F1 8A16[E113]              	mov	dl, [drv]
   276                                  T_11:
   277 000000F5 B80102                  	mov	ax, 0201h
   278 000000F8 CD13                    	int	13h
   279                                  	;jc	short T_37
   280 000000FA 7312                    	jnc	short T_13		; read masterboot sector, OK
   281                                  	
   282                                   	; reset hard disk(s)
   283 000000FC 30E4                    	xor	ah, ah
   284                                  	;mov	dl, [drv]
   285 000000FE CD13                    	int	13h
   286                                  
   287                                  	;dec	byte [RetryCount]
   288 00000100 4F                      	dec	di
   289 00000101 75F2                    	jnz	short T_11
   290                                  
   291                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   292                                  ; write disk error message and terminate
   293                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   294                                  
   295                                  T_12:
   296 00000103 C606[8817]00            	mov	byte [zbyte], 0 ; message without (Y/N) question 
   297                                  
   298 00000108 E8A201                  	call	T_37			; write error message
   299 0000010B E98B01                  	jmp	T_35 			; terminate
   300                                  
   301                                  T_13:
   302 0000010E 813E[FA1E]55AA          	cmp	word [MBR+510], 0AA55h
   303 00000114 75ED                            jne	short T_12
   304                                  
   305 00000116 BE[BE1E]                	mov	si, MBR+(partition_table+ptFileSystemID)
   306                                  	
   307                                  	; ah = 0
   308 00000119 A0[7816]                	mov	al, [partition]
   309 0000011C 20C0                    	and	al, al	; 0 ?
   310 0000011E 7409                    	jz	short T_14
   311 00000120 FEC8                    	dec	al
   312 00000122 7405                    	jz	short T_14
   313 00000124 C0E004                  	shl	al, 4 ; * 16
   314 00000127 01C6                    	add	si, ax 
   315                                  T_14:
   316 00000129 E8B401                  	call	validate_primary_dos_partition
   317 0000012C 7326                    	jnc	short T_15	
   318                                  	
   319 0000012E 803E[7816]00            	cmp	byte [partition], 0
   320 00000133 770F                    	ja	short R_5
   321                                   
   322 00000135 83C610                  	add	si, 16
   323 00000138 81FE[FE1E]              	cmp	si, MBR+partition_table+ptFileSystemID+64
   324 0000013C 72EB                    	jb	short T_14
   325                                  
   326 0000013E BE[EF17]                	mov	si, RD_fatp_notfound
   327                                  	;call	print_msg
   328                                  	;jmp	T_35
   329                                  R_4:
   330 00000141 E91301                  	jmp	M_3
   331                                  R_5:
   332 00000144 BE[2118]                	mov	si, not_primary_dos_p
   333 00000147 E86601                  	call	print_msg
   334 0000014A BE[0618]                	mov	si, a_p_d_p
   335 0000014D EBF2                    	jmp	short R_4
   336                                  M_2:
   337                                  	; Partition size defect 
   338                                  	; (less than the minimum number of sectors required)
   339 0000014F BE[9B17]                	mov	si, RD_psize_defect
   340                                  	;call	print_msg
   341                                  	;jmp	T_35
   342 00000152 EBED                    	jmp	short R_4
   343                                  
   344                                  T_15:
   345                                  	; valid primary dos partition
   346                                  	; al = FAT type (1,2,3)
   347                                  	; ah = partition type
   348                                  
   349 00000154 A2[2018]                	mov	byte [fattype], al
   350 00000157 8826[F01C]              	mov	[fsID], ah
   351                                  
   352 0000015B 3C02                    	cmp	al, 2
   353 0000015D 741B                    	je	short T_17 ; FAT16 BS (default offset addr)
   354 0000015F 720E                    	jb	short T_16
   355                                  
   356                                  	; set format code pointer to FAT32 format code
   357 00000161 C706[DC0B][AA03]        	mov	word [trdos386fc], format_FAT32_fs
   358                                  	; set FS type string
   359 00000167 C706[0B17]3332          	mov	word [fattype_str],'32'	; 'FAT32'
   360                                  	; ok.. read boot sector
   361 0000016D EB0B                    	jmp	short T_17
   362                                  T_16:
   363                                  	; set format code pointer to FAT12 format code
   364 0000016F C706[DC0B][6B09]        	mov	word [trdos386fc], format_FAT12_fs
   365 00000175 C606[0C17]32            	mov	byte [fattype_str+1],'2' ; 'FAT12'
   366                                  
   367                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   368                                  ; read primary dos partition's boot sector
   369                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   370                                  
   371                                  T_17:	
   372                                  	;mov	byte [RetryCount], 5
   373                                  
   374 0000017A 83C604                  	add	si, ptStartSector-ptFileSystemID
   375 0000017D 8B04                    	mov	ax, [si]
   376 0000017F 8B5402                  	mov	dx, [si+2]
   377 00000182 A3[F41C]                	mov	[dosp_start], ax
   378 00000185 8916[F61C]              	mov	[dosp_start+2], dx
   379 00000189 83C604                  	add	si, ptSectors-ptStartSector
   380 0000018C 8B0C                    	mov	cx, [si]
   381 0000018E 8B5C02                  	mov	bx, [si+2]
   382 00000191 890E[F81C]              	mov	[dosp_size], cx
   383 00000195 891E[FA1C]              	mov	[dosp_size+2], bx
   384                                  
   385                                  	; check minimum partition size
   386 00000199 803E[2018]03            	cmp	byte [fattype], 3 ; FAT32 FS
   387 0000019E 730C                    	jnb	short M_1 ; yes
   388                                  M_0:
   389 000001A0 09DB                    	or	bx, bx
   390 000001A2 7515                    	jnz	short T_19
   391                                  
   392 000001A4 3B0E[F21C]              	cmp	cx, [csize] ; sectors per cylinder
   393 000001A8 730F                    	jnb	short T_19
   394 000001AA EBA3                    	jmp	short M_2
   395                                  M_1:
   396 000001AC 83FB01                  	cmp	bx, 1 ; >= 32MB ?
   397 000001AF 7708                    	ja	short T_19
   398 000001B1 729C                    	jb	short M_2
   399                                  
   400 000001B3 81F91504                	cmp	cx, 0415h  ; must be >= 66581 sectors
   401 000001B7 7296                    	jb	short M_2
   402                                  T_19:
   403 000001B9 01C1                    	add	cx, ax
   404 000001BB 11D3                    	adc	bx, dx
   405 000001BD 0F8242FF                	jc	T_12
   406                                  
   407 000001C1 3B1E[5218]              	cmp	bx, [CHS_limit+2]
   408 000001C5 BB[FC1C]                	mov	bx, bootsector
   409 000001C8 7711                    	ja	short T_20 ; LBA read/write
   410 000001CA 7206                    	jb	short T_18
   411 000001CC 3B0E[5018]              	cmp	cx, [CHS_limit]
   412 000001D0 7709                    	ja	short T_20
   413                                  T_18:
   414                                  	; CHS read
   415                                  
   416                                  	;mov	ax, [dosp_start]
   417                                  	;mov	dx, [dosp_start+2]
   418                                  
   419 000001D2 E84401                  	call	read_chs_sector
   420 000001D5 0F822AFF                	jc	T_12
   421 000001D9 EB0C                    	jmp	short T_22
   422                                  T_20:
   423 000001DB C606[E013]01            	mov	byte [lba], 1 ; LBA r/w is required
   424                                  
   425                                  	;mov	ax, [dosp_start]
   426                                  	;mov	dx, [dosp_start+2]
   427                                  	
   428 000001E0 E88401                  	call	read_lba_sector
   429 000001E3 0F821CFF                	jc	T_12
   430                                  T_22:
   431 000001E7 813E[FA1E]55AA          	cmp	word [bootsector+510], 0AA55h
   432 000001ED 7558                    	jne	short T_23
   433                                  
   434 000001EF 813E[071D]0002          	cmp	word [bootsector+bsBytesPerSec], 512
   435 000001F5 7550                    	jne	short T_23
   436                                  
   437                                  	; 04/05/2024 (BugFix)
   438 000001F7 803E[111D]F8            	cmp	byte [bootsector+bsMedia], 0F8h
   439 000001FC 7549                    	jne	short T_23
   440                                  
   441 000001FE 803E[2018]02            	cmp	byte [fattype], 2
   442 00000203 7722                    	ja	short T_24
   443                                  
   444 00000205 803E[221D]29            	cmp	byte [bootsector+bsBpbSignature], 29h
   445 0000020A 753B                    	jne	short T_23
   446 0000020C 66813E[321D]464154-     	cmp	dword [bootsector+bsFileSysType], 'FAT1'
   446 00000214 31                 
   447 00000215 7530                    	jne	short T_23
   448                                  
   449 00000217 A0[361D]                	mov	al, [bootsector+bsFileSysType+4]
   450 0000021A 3C36                    	cmp	al, '6'
   451 0000021C 7404                    	je	short T_25
   452                                  
   453 0000021E 3C32                    	cmp	al, '2'
   454 00000220 7525                    	jne	short T_23
   455                                  
   456                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   457                                  ; format question (and warning msg)
   458                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   459                                  
   460                                  T_25:
   461 00000222 BE[7916]                	mov	si, RD_Format_warning ; warning is required
   462 00000225 EB23                    	jmp	short T_26
   463                                  T_24:
   464                                  	; 04/05/2024
   465 00000227 833E[121D]00            	cmp	word [bootsector+bsFATsecs], 0
   466 0000022C 7719                    	ja	short T_23	; not FAT32 fs
   467                                  
   468 0000022E 803E[3E1D]29            	cmp	byte [bootsector+BS_BootSig], 29h
   469 00000233 7512                    	jne	short T_23
   470                                  	
   471 00000235 66813E[4E1D]464154-     	cmp	dword [bootsector+BS_FilSysType], 'FAT3'
   471 0000023D 33                 
   472 0000023E 7507                    	jne	short T_23
   473 00000240 803E[521D]32            	cmp	byte [bootsector+BS_FilSysType+4], '2'
   474 00000245 74DB                    	je	short T_25
   475                                  T_23:
   476 00000247 BE[D316]                	mov	si, RD_Do_you_want ; no need to warning
   477                                  T_26:
   478 0000024A E86300                  	call	print_msg
   479                                  
   480 0000024D E86F00                  	call	get_answer
   481 00000250 3C59                    	cmp	al, 'Y'
   482 00000252 7408                    	je	short T_27
   483                                  
   484 00000254 BE[2117]                	mov	si, _no_str
   485                                  M_3:
   486 00000257 E85600                  	call	print_msg
   487                                  
   488 0000025A EB3D                    	jmp	short T_35
   489                                  T_27:
   490 0000025C BE[1A17]                	mov	si, _yes_str
   491 0000025F E84E00                  	call	print_msg
   492                                  
   493 00000262 BE[2F17]                	mov	si, RD_PressKeyWhenReady
   494 00000265 E84800                  	call	print_msg
   495                                  T_28:
   496 00000268 31C0                    	xor	ax, ax
   497 0000026A CD16                    	int	16h			; wait for keyboard command
   498 0000026C 3C0D                    	cmp	al, 'M'-40h		; Enter (OK) key
   499                                  	;je	short T_29		; write
   500 0000026E 740A                    	je	short R_6
   501 00000270 3C03                    	cmp	al, 'C'-40h
   502 00000272 7425                    	je	short T_35		; no write (exit)
   503 00000274 3C1B                    	cmp	al, 27
   504 00000276 7421                    	je	short T_35
   505 00000278 EBEE                    	jmp	short T_28
   506                                  
   507                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   508                                  ; clear fat buffer and start formatting
   509                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   510                                  
   511                                  R_6:
   512                                  	; 04/05/2024
   513                                  T_29:
   514 0000027A BE[2C17]                	mov	si, RD_CRLF
   515 0000027D E83000                  	call	print_msg
   516                                  
   517                                  	; Clear buffer in BSS 
   518 00000280 BF[FC1C]                	mov	di, HDFORMAT_FATBUFFER
   519 00000283 31C0                    	xor	ax, ax
   520 00000285 B90001                  	mov	cx, 256
   521 00000288 F3AB                    	rep	stosw
   522                                  
   523                                  	; Clear volume name field
   524 0000028A BF[101F]                	mov	di, StrVolumeName
   525 0000028D B10C                    	mov	cl, 12
   526 0000028F F3AA                    	rep	stosb
   527                                  
   528 00000291 8A16[F01C]              	mov	dl, [fsID] ; Partition ID
   529                                  
   530 00000295 FF26[DC0B]              	jmp	word [trdos386fc]
   531                                  
   532                                  T_35:
   533 00000299 BE[2C17]                	mov	si, RD_CRLF
   534                                  Exit:
   535 0000029C E81100                  	call	print_msg
   536 0000029F B8004C                  	mov	ax, 4C00h		; terminate
   537 000002A2 CD21                    	int	21h
   538                                  T_36:
   539 000002A4 E81800                  	call	get_answer
   540 000002A7 3C59                    	cmp	al, 'Y'
   541 000002A9 74CF                    	je	short T_29
   542 000002AB EBEC                    	jmp	short T_35
   543                                  
   544                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   545                                  ; disk r/w error or disk not ready
   546                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   547                                  
   548                                  T_37:
   549 000002AD BE[6617]                	mov	si, RD_disk_NotReadyOrError
   550                                  	;;call	print_msg
   551                                  	;;jmp	short T_36
   552                                  	;jmp	short print_msg
   553                                  
   554                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   555                                  ; print message
   556                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   557                                  
   558                                  print_msg:
   559                                  T_38:
   560 000002B0 AC                      	lodsb				; Load byte at DS:SI to AL
   561 000002B1 20C0                    	and	al, al
   562 000002B3 7409                    	jz	short T_39
   563 000002B5 B40E                    	mov	ah, 0Eh
   564 000002B7 BB0700                  	mov	bx, 07h
   565 000002BA CD10                    	int	10h			; BIOS Service func ( ah ) = 0Eh
   566                                  					; Write char as TTY
   567                                  					; AL-char BH-page BL-color
   568 000002BC EBF2                    	jmp     short T_38
   569                                  T_39:
   570                                  _NO_:
   571 000002BE C3                      	retn
   572                                  
   573                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   574                                  ; Yes/No
   575                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   576                                  
   577                                  get_answer:
   578 000002BF 31C0                    	xor	ax, ax
   579 000002C1 CD16                    	int	16h			; wait for keyboard command
   580 000002C3 3C79                    	cmp	al, 'y'
   581 000002C5 7416                    	je	short _yes		; retry
   582 000002C7 3C59                    	cmp	al, 'Y'
   583 000002C9 7414                    	je	short _YES_
   584 000002CB 3C6E                    	cmp	al, 'n'
   585 000002CD 74EF                    	je	short _NO_ 		; exit
   586 000002CF 3C4E                    	cmp	al, 'N'
   587 000002D1 74EB                    	je	short _NO_
   588 000002D3 3C03                    	cmp	al, 'C'-40h
   589 000002D5 74E7                    	je	short _NO_
   590 000002D7 3C1B                    	cmp	al, 27
   591 000002D9 74E3                    	je	short _NO_
   592 000002DB EBE2                    	jmp	short get_answer
   593                                  _yes:
   594 000002DD B059                    	mov	al, 'Y'
   595                                  _YES_:
   596 000002DF C3                      	retn
   597                                  
   598                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   599                                  ; get and set partition type for formatting
   600                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   601                                  
   602                                  validate_primary_dos_partition:
   603                                  	
   604                                  	; INPUT:
   605                                  	;   si = partition table entry offset + file system ID 
   606                                  	; OUTPUT:
   607                                  	;   cf = 0 -> ah = primary DOS partition ID
   608                                  	;			 (01h,04h,06h,0Bh,0Ch,0Eh)
   609                                  	;	      al = FAT type 
   610                                  	;			1 = FAT12
   611                                  	;			2 = FAT16
   612                                  	;			3 = FAT32
   613                                  	;
   614                                  	;   cf = 1 -> not a primary DOS partition
   615                                  
   616 000002E0 28C0                    	sub	al, al ; mov al, 0
   617                                  
   618 000002E2 8A24                    	mov 	ah, [si]
   619                                  
   620 000002E4 80FC01                  	cmp	ah, 01h	; FAT12 partition
   621 000002E7 7228                    	jb	short V_5 ; 0
   622 000002E9 741E                    	je	short V_3
   623                                  V_0:
   624 000002EB FEC0                    	inc	al  ; mov al, 1
   625                                  
   626 000002ED 80FC06                  	cmp 	ah, 06h ; FAT16 CHS partition (>=32MB)
   627 000002F0 7709                    	ja	short V_2
   628 000002F2 7415                    	je	short V_3
   629                                  
   630 000002F4 80FC04                  	cmp	ah, 04h	; FAT16 CHS partition (< 32MB)
   631 000002F7 7410                    	je	short V_3
   632                                  V_1:
   633 000002F9 F9                      	stc
   634 000002FA C3                      	retn
   635                                  V_2:
   636 000002FB FEC0                    	inc	al ; mov al, 2
   637                                  
   638 000002FD 80FC0C                  	cmp	ah, 0Ch	; FAT32 LBA partition
   639 00000300 7407                    	je	short V_3
   640 00000302 7708                    	ja	short V_4
   641                                  
   642 00000304 80FC0B                  	cmp	ah, 0Bh	; FAT32 CHS partition 
   643 00000307 7208                    	jb	short V_5
   644                                  V_3:
   645 00000309 FEC0                    	inc	al ; 0->1, 1->2, 2->3
   646 0000030B C3                      	retn 
   647                                  V_4:
   648 0000030C 80FC0E                  	cmp	ah, 0Eh	; FAT16 LBA partition
   649 0000030F 75E8                    	jne	short V_1
   650                                  	;mov	al, 2
   651                                  V_5:
   652 00000311 C3                      	retn
   653                                  
   654                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   655                                  ; disk read
   656                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   657                                  
   658                                  read_hd_sector:
   659 00000312 803E[E013]00            	cmp	byte [lba], 0
   660 00000317 774E                    	ja	short  read_lba_sector
   661                                  
   662                                  read_chs_sector:
   663                                  	; Derived from 'proc_write_chs_sector' in HDFORMAT.ASM (30/07/2011)
   664                                  	; (TRDOS v1, Singlix FS formatting utility)
   665 00000319 C606[F11C]02            	mov	byte [rw], 2 ; read
   666 0000031E EB05                    	jmp	short chs_rw
   667                                  
   668                                  write_chs_sector:
   669                                  	; Derived from 'proc_write_chs_sector' in HDFORMAT.ASM (30/07/2011)
   670                                  	; (TRDOS v1, Singlix FS formatting utility)
   671 00000320 C606[F11C]03            	mov	byte [rw], 3 ; write
   672                                  	;jmp	short chs_rw
   673                                  chs_rw:
   674 00000325 56                      	push	si
   675 00000326 51                              push	cx        
   676                                  chs_rw_0:
   677 00000327 BF0500                  	mov	di, 5                    
   678                                  chs_rw_1:               
   679 0000032A 52                      	push	dx	; Linear sector #
   680 0000032B 50                      	push	ax	; DX_AX = Linear address (sectors)
   681 0000032C 8B0E[E213]              	mov	cx, [sectors]
   682 00000330 53                      	push	bx
   683                                  
   684 00000331 E86C08                  	call    div32	; 32 bit divide
   685                                  
   686 00000334 89D9                    	mov	cx, bx	; Sector (zero based)
   687 00000336 41                      	inc	cx	; To make it 1 based
   688 00000337 51                      	push	cx
   689 00000338 8B0E[E413]              	mov     cx, [heads]
   690 0000033C E86108                  	call	div32	; Convert track to head & cyl
   691 0000033F 88DE                    	mov	dh, bl	; BX = Head (max. FFh)
   692 00000341 59                      	pop	cx	; AX=Cyl, DH=Head, CX=Sector
   693 00000342 5B                      	pop     bx	; ES:BX = Buffer
   694                                  
   695 00000343 8A16[E113]              	mov	dl, [drv]
   696 00000347 88C5                    	mov	ch, al
   697 00000349 D0CC                    	ror	ah, 1	; Rotate right
   698 0000034B D0CC                    	ror	ah, 1
   699 0000034D 08E1                    	or	cl, ah
   700                                  chs_rw_2:
   701 0000034F 8A26[F11C]              	mov	ah, [rw] ; 02h = read, 03h = write
   702 00000353 B001                    	mov	al, 01h
   703 00000355 CD13                    	int	13h	; BIOS Service func (ah) = 2/3
   704                                  			; Read/Write disk sectors
   705                                  			; AL-sec num CH-track CL-sec
   706                                  			; DH-head DL-drive ES:BX-buffer
   707                                  			; CF-flag AH-status AL-sectors written/read
   708                                  			; If CF = 1 then AH = Error code (>0) 
   709                                          
   710                                  	;mov	[error], ah
   711 00000357 7309                    	jnc     short chs_rw_3
   712 00000359 4F                      	dec	di
   713 0000035A 7406                    	jz	short chs_rw_3 
   714                                          
   715 0000035C 30E4                    	xor	ah, ah
   716                                  	;mov	dl, [drv]
   717 0000035E CD13                    	int	13h	; BIOS Service func (ah) = 0
   718                                  			; Reset disk system
   719 00000360 EBED                    	jmp	short chs_rw_2
   720                                  
   721                                  chs_rw_3:
   722 00000362 58                      	pop	ax
   723 00000363 5A                      	pop	dx
   724 00000364 59                      	pop	cx
   725 00000365 5E                      	pop	si
   726 00000366 C3                      	retn		; db 0C3h
   727                                  
   728                                  read_lba_sector:
   729                                  	; trhdboot.s (2020), hdformat.asm (2011)
   730 00000367 C606[F11C]42            	mov	byte [rw], 42h
   731 0000036C EB0C                    	jmp	short lba_rw
   732                                  
   733                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   734                                  ; disk write
   735                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   736                                  
   737                                  write_hd_sector:
   738 0000036E 803E[E013]00            	cmp	byte [lba], 0
   739 00000373 76AB                    	jna	short  write_chs_sector
   740                                  
   741                                  write_lba_sector:
   742                                  	; trhdboot.s (2020), hdformat.asm (2011)
   743 00000375 C606[F11C]43            	mov	byte [rw], 43h
   744                                  	;jmp	short lba_rw
   745                                  lba_rw:
   746 0000037A BF0500                  	mov	di, 5
   747                                  lba_rw_1:
   748                                  	;pusha				; db 60h
   749 0000037D 60                      	db	60h
   750                                  	;push 	0                       ; db 6Ah, 00h
   751 0000037E 6A00                    	db	6Ah, 0
   752                                  	;push	0                       ; db 6Ah, 00h
   753 00000380 6A00                    	db	6Ah, 0
   754 00000382 52                      	push    dx
   755 00000383 50                      	push    ax
   756 00000384 06                      	push    es
   757 00000385 53                      	push    bx
   758                                  	;push	1			; db 6Ah, 01h
   759 00000386 6A01                    	db	6Ah, 01h                     
   760                                  	;push	10h                     ; db 6Ah, 10h
   761 00000388 6A10                    	db	6Ah, 10h
   762                                  
   763 0000038A 89E6                    	mov     si, sp
   764 0000038C 8A16[E113]              	mov     dl, [drv]
   765 00000390 30C0                    	xor	al, al	; verify off 
   766                                  lba_rw_2:
   767 00000392 8A26[F11C]              	mov     ah, [rw] ; 42h = LBA read, 43h = LBA write
   768                                  	;xor	al, al	; verify off 
   769 00000396 CD13                    	int     13h
   770                                  
   771                                  	;mov	[error], ah
   772 00000398 730D                    	jnc     short lba_rw_3
   773                                  
   774 0000039A 4F                      	dec	di
   775 0000039B 740A                    	jz	short lba_rw_3 
   776                                          
   777 0000039D 30E4                    	xor	ah, ah
   778                                  	;mov	dl, [drv]
   779 0000039F CD13                    	int	13h	; BIOS Service func (ah) = 0
   780                                  			; Reset disk system
   781                                  
   782                                  	;mov	word [si+2], 1 ; set r/w count to 1 again
   783 000003A1 C6440201                	mov	byte [si+2], 1
   784                                  
   785 000003A5 EBEB                    	jmp	short lba_rw_2
   786                                  
   787                                  lba_rw_3:
   788                                  	;popa
   789 000003A7 61                      	db	61h
   790                                  	;popa
   791 000003A8 61                      	db	61h
   792 000003A9 C3                      	retn
   793                                  
   794                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   795                                  ; FAT32 FORMATTING
   796                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   797                                  
   798                                  ; ((TRDOS 386 criter))
   799                                  ; Minimum size of FAT32 FS = 65525 + 512 + 512 + 32
   800                                  ; >= 66581 sectors (or >= 65525 data clusters)
   801                                  	
   802                                  format_FAT32_fs:
   803                                  	;mov	ax, 000Ch ; db 0Ch, 00h ; 'or al, 0'
   804                                  	;cmp	dl, al ; 0Ch
   805                                  	;je	short FAT32_lba_format
   806                                  	;mov	ax, 0C00Bh ; db 0Bh, 0C0h ; 'or ax, ax'
   807                                  ;FAT32_lba_format:
   808                                  	; Put TRDOS 386 FAT32 partition magic word 
   809                                  	; at offset 5Ah, in TRDOS386 FAT32 boot sector 0.
   810 000003AA BD[E00F]                	mov	bp, RD_FAT32_hd_bs
   811 000003AD 8D7E03                  	lea	di, [bp+3]
   812 000003B0 BE[6018]                	mov	si, bs_oem_name
   813 000003B3 B90400                  	mov	cx, 4
   814 000003B6 F3A5                    	rep	movsw 
   815                                  	;mov	[bp+5Ah], ax	; [loc_5A]
   816 000003B8 C7465A0BC0              	mov	word [bp+5Ah], 0C00Bh
   817 000003BD A1[E213]                	mov	ax, [sectors]
   818 000003C0 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
   819 000003C3 A1[E413]                	mov	ax, [heads]
   820 000003C6 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
   821 000003C9 A1[F41C]                	mov	ax, [dosp_start]
   822 000003CC 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
   823 000003CF A1[F61C]                	mov	ax, [dosp_start+2]
   824 000003D2 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
   825 000003D5 A1[F81C]                	mov	ax, [dosp_size]
   826 000003D8 894620                  	mov	[bp+20h], ax	; [BPB_TotSec32]
   827 000003DB 8B16[FA1C]              	mov	dx, [dosp_size+2]
   828 000003DF 895622                  	mov	[bp+22h], dx	; [BPB_TotSec32+2]
   829                                  	
   830                                  	; Sectors per cluster calculation
   831                                  	; (According to MS FAT32 FS specification.)
   832 000003E2 B108                    	mov	cl, 8  ; 8 sectors per cluster
   833 000003E4 83FA08                  	cmp	dx, 8  ; >= 532480 sectors
   834 000003E7 7709                    	ja	short FAT32_f_2 ; 8 sectors per cluster
   835 000003E9 7205                    	jb	short FAT32_f_1 ; 1 sector per cluster	
   836 000003EB 3D0020                  	cmp	ax, 2000h ; dx_ax = (8*65536)+8192
   837 000003EE 7302                    	jnb	short FAT32_f_2
   838                                  FAT32_f_1:
   839 000003F0 B101                    	mov	cl, 1	; 1 sector per cluster		
   840                                  FAT32_f_2:
   841 000003F2 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
   842                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
   843                                  	;mov	word [bp+0Eh], 32 ; [BPB_RsvdSecCnt] 
   844                                  
   845                                  	; Calculating FAT size in sectors
   846                                  	; (According to MS FAT32 FS Specification, 2000)
   847                                  
   848                                  	; DX_AX = partition (volume) size in sectors
   849 000003F5 2B460E                  	sub	ax, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 32
   850 000003F8 83DA00                  	sbb	dx, 0
   851                                  		; TmpVal1 = DiskSize - (BPB_ResvdSecCnt +
   852                                  		;	     		RootDirsectors)
   853                                  		; RootDirSectors = 0 (for FAT32 FS)
   854 000003FB 89CB                    	mov	bx, cx ; ch = 0
   855 000003FD C1E308                  	shl	bx, 8 ; * 256
   856 00000400 8A4E10                  	mov	cl, [bp+10h] ; [BPB_NumFATs]
   857 00000403 01CB                    	add	bx, cx	
   858                                  		; TmpVal2 = (256*BPB_SecPerClus)+BPB_NumFATs
   859 00000405 D1EB                    	shr	bx, 1
   860                                  		; TmpVal2 = TmpVal2/2
   861 00000407 89D9                    	mov	cx, bx
   862 00000409 4B                      	dec	bx  ; TmpVal2-1
   863 0000040A 01D8                    	add	ax, bx
   864 0000040C 83D200                  	adc	dx, 0
   865 0000040F E88E07                  	call	div32
   866                                  		; FATSz = (TmpVal1+(TmpVal2-1))/TmpVal2
   867                                  	; DX_AX = FAT size in sectors
   868 00000412 894624                  	mov	[bp+24h], ax	; [BPB_FATSz32]
   869 00000415 895626                  	mov	[bp+26h], dx	; [BPB_FATSz32+2]
   870                                  	; * 2
   871 00000418 89D3                    	mov	bx, dx
   872 0000041A 01C0                    	add	ax, ax
   873 0000041C 11D3                    	adc	bx, dx
   874                                  	; BX_AX = [BPB_NumFATs] * [BPB_FATSz32]
   875 0000041E 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 32
   876 00000421 01C1                    	add	cx, ax
   877 00000423 83D300                  	adc	bx, 0
   878                                  	; BX_CX = [BPB_RsvdSecCnt]+[BPB_NumFATs]*[BPB_FATSz32]
   879 00000426 8B4620                  	mov	ax, [bp+20h]	; [BPB_TotSec32]
   880 00000429 8B5622                  	mov	dx, [bp+22h]	; [BPB_TotSec32+2]
   881 0000042C 29C8                    	sub	ax, cx
   882 0000042E 19DA                    	sbb	dx, bx
   883 00000430 890E[FC1E]              	mov	[data_start], cx
   884 00000434 891E[FE1E]              	mov	[data_start+2], bx
   885                                  	; DX_AX = Data sectors
   886 00000438 A3[001F]                	mov	[data_sectors], ax
   887 0000043B 8916[021F]              	mov	[data_sectors+2], dx
   888 0000043F 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
   889 00000442 30ED                    	xor	ch, ch
   890 00000444 E85907                  	call	div32 ; DX_AX/CX
   891                                  	; DX_AX = Count of clusters (rounded down)
   892 00000447 A3[041F]                	mov	[cluster_count], ax
   893 0000044A 8916[061F]              	mov	[cluster_count+2], dx
   894                                  		
   895 0000044E 8D7E47                  	lea	di, [bp+71] ; [BS_VolLab]
   896 00000451 E89B01                  	call	write_volume_name
   897 00000454 8D7643                  	lea	si, [bp+67] ; [BS_VolID]
   898 00000457 E8F401                  	call	write_volume_serial
   899 0000045A E8F402                  	call	write_cluster_count
   900                                  
   901 0000045D E87502                  	call	write_formatting_msg
   902 00000460 B000                    	mov	al, 0
   903 00000462 E8CD02                  	call	write_format_percent_x
   904                                  
   905 00000465 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
   906 00000468 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
   907 0000046B 0106[FC1E]              	add	[data_start], ax
   908 0000046F 1116[FE1E]              	adc	[data_start+2], dx
   909                                  FAT32_f_3:
   910                                  	; DX_AX = FAT32 Boot Sector address
   911 00000473 BB[E00F]                	mov	bx, RD_FAT32_hd_bs
   912                                  	; ES:BX = Boot Sector 1 Buffer
   913 00000476 E8F5FE                  	call	write_hd_sector
   914 00000479 0F82BC02                	jc	formatting_error
   915 0000047D E87902                  	call	write_format_percent
   916 00000480 83C001                  	add	ax, 1
   917 00000483 83D200                  	adc	dx, 0
   918 00000486 BB[EE1A]                	mov	bx, HDFORMAT_FSINFO_BUFF
   919                                  	; ES:BX = FS INFO Sector Buffer (= BS+1)
   920 00000489 E8E2FE                  	call	write_hd_sector
   921 0000048C 0F82A902                	jc	formatting_error
   922 00000490 E86602                  	call	write_format_percent
   923 00000493 83C001                  	add	ax, 1
   924 00000496 83D200                  	adc	dx, 0	
   925 00000499 BB[E011]                	mov	bx, RD_FAT32_hd_bs + 512
   926                                  	; ES:BX = Boot Sector 2 Buffer
   927 0000049C E8CFFE                  	call	write_hd_sector
   928 0000049F 0F829602                	jc	formatting_error
   929 000004A3 E85302                  	call	write_format_percent
   930 000004A6 B90300                  	mov	cx, 3
   931                                  FAT32_f_4:
   932 000004A9 51                      	push	cx
   933 000004AA 83C001                  	add	ax, 1
   934 000004AD 83D200                  	adc	dx, 0
   935 000004B0 BB[FC1C]                	mov	bx, HDFORMAT_EMPTY_BUFF
   936 000004B3 E8B8FE                  	call	write_hd_sector
   937 000004B6 0F827F02                	jc	formatting_error
   938 000004BA E83C02                  	call	write_format_percent
   939 000004BD 59                      	pop	cx
   940 000004BE FEC9                    	dec	cl
   941 000004C0 75E7                    	jnz	short FAT32_f_4
   942 000004C2 83C001                  	add	ax, 1
   943 000004C5 83D200                  	adc	dx, 0
   944 000004C8 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
   945 000004CB 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
   946 000004CE 83C10C                  	add	cx, 12
   947 000004D1 83D300                  	adc	bx, 0
   948                                  	; write BACKUP sectors
   949                                  	; (6,7,8 boot+fsi and 9,10,11 empty sectors)
   950 000004D4 39DA                    	cmp	dx, bx
   951 000004D6 729B                    	jb	short FAT32_f_3
   952 000004D8 39C8                    	cmp	ax, cx
   953 000004DA 7297                    	jb	short FAT32_f_3
   954                                  	; write remain part of reserved sectors
   955 000004DC 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt]
   956 000004DF 83E90C                  	sub	cx, 12
   957 000004E2 7618                    	jna	short FAT32_f_6
   958                                  FAT32_f_5:
   959 000004E4 51                      	push	cx
   960 000004E5 BB[FC1C]                	mov	bx, HDFORMAT_EMPTY_BUFF
   961 000004E8 E883FE                  	call	write_hd_sector
   962 000004EB 0F824A02                	jc	formatting_error
   963 000004EF E80702                  	call	write_format_percent
   964 000004F2 83C001                  	add	ax, 1
   965 000004F5 83D200                  	adc	dx, 0
   966 000004F8 59                      	pop	cx
   967 000004F9 49                      	dec	cx
   968 000004FA 75E8                    	jnz	short FAT32_f_5
   969                                  FAT32_f_6:
   970                                  	; write FAT sectors
   971 000004FC 8B0E[FC1E]              	mov	cx, [data_start] ; lba/abs addr
   972 00000500 8B1E[FE1E]              	mov	bx, [data_start+2] ; lba/abs addr
   973 00000504 53                      	push	bx
   974 00000505 51                      	push	cx
   975 00000506 BB[FC1C]                	mov	bx, HDFORMAT_FATBUFFER
   976                                  	; ES:BX = FAT Sector Buffer
   977 00000509 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
   978 0000050C B5FF                    	mov	ch, 0FFh
   979 0000050E 890F                    	mov	[bx], cx
   980 00000510 88E9                    	mov	cl, ch ; cx = 0FFFFh
   981 00000512 894F02                  	mov	[bx+2], cx
   982 00000515 894F04                  	mov	[bx+4], cx
   983 00000518 894F06                  	mov	[bx+6], cx
   984                                  	; Root dir cluster number = 2
   985                                  	; 0FFFFFFFh = end of cluster chain
   986 0000051B 894F08                  	mov	[bx+8], cx  ; 0FFFFh
   987 0000051E 80E50F                  	and	ch, 0Fh
   988 00000521 894F0A                  	mov	[bx+10], cx ; 0FFFh
   989                                  	;inc	cx
   990 00000524 E847FE                  	call	write_hd_sector
   991 00000527 0F820E02                	jc	formatting_error
   992 0000052B E8CB01                  	call	write_format_percent
   993                                  	;mov	bx, HDFORMAT_FATBUFFER
   994 0000052E B90000                  	mov	cx, 0
   995 00000531 890F                    	mov	[bx], cx
   996 00000533 894F02                  	mov	[bx+2], cx
   997 00000536 894F04                  	mov	[bx+4], cx
   998 00000539 894F06                  	mov	[bx+6], cx
   999 0000053C 894F08                  	mov	[bx+8], cx
  1000 0000053F 894F0A                  	mov	[bx+10], cx
  1001 00000542 EB0F                    	jmp	short FAT32_f_8
  1002                                  FAT32_f_7:	
  1003 00000544 53                      	push	bx
  1004 00000545 51                      	push	cx	
  1005 00000546 BB[FC1C]                	mov	bx, HDFORMAT_FATBUFFER
  1006 00000549 E822FE                  	call	write_hd_sector
  1007 0000054C 0F82E901                	jc	formatting_error
  1008 00000550 E8A601                  	call	write_format_percent
  1009                                  FAT32_f_8:	
  1010 00000553 59                      	pop	cx
  1011 00000554 5B                      	pop	bx
  1012 00000555 83C001                  	add	ax, 1
  1013 00000558 83D200                  	adc	dx, 0
  1014 0000055B 39DA                    	cmp	dx, bx
  1015 0000055D 72E5                    	jb	short FAT32_f_7
  1016 0000055F 39C8                    	cmp	ax, cx
  1017 00000561 72E1                    	jb	short FAT32_f_7
  1018                                  
  1019                                  	; write	root directory (1st cluster)
  1020                                  	; as empty sectors
  1021 00000563 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1022 00000566 30ED                    	xor	ch, ch
  1023 00000568 290E[001F]              	sub	[data_sectors], cx
  1024 0000056C 831E[021F]00            	sbb	word [data_sectors+2], 0
  1025                                  FAT32_f_9:
  1026 00000571 51                      	push	cx
  1027 00000572 BB[FC1C]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1028 00000575 E8F6FD                  	call	write_hd_sector
  1029 00000578 0F82BD01                	jc	formatting_error
  1030 0000057C E87A01                  	call	write_format_percent
  1031 0000057F 83C001                  	add	ax, 1
  1032 00000582 83D200                  	adc	dx, 0
  1033 00000585 59                      	pop	cx
  1034 00000586 FEC9                    	dec	cl
  1035 00000588 75E7                    	jnz	short FAT32_f_9
  1036                                  
  1037                                  	; write DATA sectors 
  1038                                  	; (after root directory 1st cluster)
  1039 0000058A 8B0E[001F]              	mov	cx, [data_sectors]
  1040 0000058E 8B1E[021F]              	mov	bx, [data_sectors+2] 
  1041                                  			; NOTE: Partition size must be >= 512 MB
  1042                                  			;	for FAT32 FS  ((BX >= 15))
  1043                                  FAT32_f_10:	
  1044 00000592 53                      	push	bx
  1045 00000593 51                      	push	cx	
  1046 00000594 BB[EE18]                	mov	bx, HDFORMAT_SECBUFFER
  1047 00000597 E8D4FD                  	call	write_hd_sector
  1048 0000059A 0F829B01                	jc	formatting_error
  1049 0000059E E85801                  	call	write_format_percent
  1050 000005A1 59                      	pop	cx
  1051 000005A2 5B                      	pop	bx
  1052 000005A3 83C001                  	add	ax, 1
  1053 000005A6 83D200                  	adc	dx, 0
  1054 000005A9 49                      	dec	cx
  1055 000005AA 75E6                    	jnz	short FAT32_f_10
  1056 000005AC 4B                      	dec	bx
  1057 000005AD 75E3                    	jnz	short FAT32_f_10
  1058                                  
  1059                                  	; If there are, format remain sectors which are
  1060                                  	; at beyond of data clusters, with zero bytes.
  1061                                  	
  1062 000005AF 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  1063 000005B2 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  1064                                  FAT16_f_18:	
  1065 000005B5 034E20                  	add	cx, [bp+20h]	; [BPB_TotSec32]
  1066 000005B8 135E22                  	adc	bx, [bp+22h]	; [BPB_TotSec32+2]
  1067                                  FAT16_f_19:
  1068                                  FAT12_f_8:
  1069                                  	; are there remain sectors (in partition) ?
  1070 000005BB 29C1                    	sub	cx, ax
  1071 000005BD 19D3                    	sbb	bx, dx
  1072                                  	; 11/02/2019
  1073                                  	; BX must be 0 (Because, 1 cluster <= 32KB. So,
  1074                                  	;	        remain sectors must not be more than 32K)
  1075 000005BF 751C                    	jnz	short FAT32_f_12 ; There is a wrong thing !!!
  1076                                  				 ; If BX is not zero,
  1077                                  				 ; it is better to skip this stage...)
  1078 000005C1 09C9                    	or	cx, cx
  1079 000005C3 7418                    	jz	short FAT32_f_12 ; no.. 
  1080                                  				 ; (good! FAT contains all data sectors)
  1081                                  FAT32_f_11:
  1082 000005C5 51                      	push	cx
  1083 000005C6 BB[FC1C]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1084 000005C9 E8A2FD                  	call	write_hd_sector
  1085 000005CC 0F826901                	jc	formatting_error
  1086 000005D0 E82601                  	call	write_format_percent
  1087 000005D3 59                      	pop	cx
  1088 000005D4 83C001                  	add	ax, 1
  1089 000005D7 83D200                  	adc	dx, 0
  1090 000005DA 49                      	dec	cx
  1091 000005DB 75E8                    	jnz	short FAT32_f_11
  1092                                  
  1093                                  FAT32_f_12:
  1094                                  	; End of FAT format routine...
  1095                                  end_of_formatting:
  1096 000005DD B064                    	mov	al, 100
  1097 000005DF E85001                  	call	write_format_percent_x
  1098                                  	;mov	si, CRLF
  1099                                  	;call	print_msg
  1100 000005E2 BE[2717]                	mov	si, _msg_OK
  1101                                  	;call	print_msg
  1102 000005E5 E9B4FC                  	jmp	Exit
  1103                                  
  1104                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1105                                  ; set & write volume name
  1106                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1107                                  
  1108                                  write_fs_volume_name:
  1109 000005E8 C606[5F18]40            	mov	byte [vname_length], 64
  1110 000005ED EB05                    	jmp	short svn_fs
  1111                                  
  1112                                  write_volume_name:
  1113 000005EF C606[5F18]0B            	mov	byte [vname_length], 11
  1114                                  svn_fs:
  1115                                  	; DI = (BS) Volume Label address
  1116 000005F4 BE[7618]                	mov	si, Msg_Volume_Name
  1117 000005F7 E8B6FC                  	call	print_msg
  1118                                  
  1119                                  	; get cursor position
  1120                                  	; bh = 0  ; video page
  1121 000005FA B403                    	mov     ah, 3 ; get cursor pos
  1122 000005FC CD10                    	int     10h
  1123 000005FE 8916[5018]              	mov	[Cursor_Pos], dx
  1124                                  
  1125 00000602 E80905                  	call	rw_char
  1126 00000605 7207                    	jc	short svn_1
  1127                                  svn_0:
  1128 00000607 AC                      	lodsb
  1129 00000608 3C20                    	cmp	al, 20h
  1130 0000060A 7706                    	ja	short svn_2
  1131 0000060C 74F9                    	je	short svn_0 
  1132                                  svn_1:
  1133 0000060E BE[6A18]                	mov	si, no_name
  1134 00000611 AC                      	lodsb
  1135                                  svn_2:
  1136                                  	;mov	di, [bp+47h) ; [BS_VolLab] ; FAT32
  1137                                  	;mov	di, [bp+2Bh) ; [BS_VolLab] ; FAT16 (&FAT12)
  1138 00000612 89FB                    	mov	bx, di ; *
  1139 00000614 30ED                    	xor	ch, ch
  1140 00000616 8A0E[5F18]              	mov	cl, [vname_length] ; 11
  1141 0000061A EB05                    	jmp	short svn_4
  1142                                  svn_3:
  1143 0000061C AC                      	lodsb
  1144 0000061D 3C20                    	cmp	al, 20h
  1145 0000061F 7226                    	jb	short svn_6
  1146                                  svn_4:
  1147 00000621 AA                      	stosb
  1148 00000622 E2F8                    	loop	svn_3
  1149                                  svn_5:
  1150 00000624 8A0E[5F18]              	mov	cl, [vname_length] ; 11
  1151 00000628 89DE                    	mov	si, bx ; *
  1152 0000062A BF[101F]                	mov	di, StrVolumeName
  1153 0000062D F3A4                    	rep	movsb
  1154                                  	;mov	byte [di], 0
  1155                                  
  1156 0000062F 8B16[5018]              	mov	dx, [Cursor_Pos]
  1157 00000633 BB0700                  	mov	bx, 7
  1158 00000636 B402                    	mov	ah, 2
  1159 00000638 CD10                    	int	10h  ; Set Cursor Position
  1160                                  
  1161 0000063A BE[101F]                	mov	si, StrVolumeName
  1162 0000063D E870FC                  	call	print_msg
  1163 00000640 BE[D818]                	mov	si, CRLF
  1164 00000643 E86AFC                  	call	print_msg
  1165 00000646 C3                      	retn
  1166                                  svn_6:
  1167 00000647 B020                    	mov	al, 20h
  1168                                  svn_7:
  1169 00000649 AA                      	stosb
  1170 0000064A E2FD                    	loop	svn_7
  1171 0000064C EBD6                    	jmp	short svn_5
  1172                                  
  1173                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1174                                  ; set & write volume serial number (volume ID)
  1175                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1176                                  
  1177                                  write_volume_serial:
  1178                                  	; SI = (BS) Volume Serial Number (binary) address
  1179                                  
  1180                                  	;xor	ax, ax
  1181                                  	;int	1Ah			; get time of day
  1182                                  
  1183                                  	;mov	[si], dx
  1184                                  	;mov	[si+2], cx		; set unique volume ID
  1185                                  
  1186                                  	;mov	ah, 02h			; Return Current Time
  1187                                  	;int	1Ah
  1188                                  	;xchg	ch, cl
  1189                                  	;xchg	dh, dl
  1190                                  
  1191                                  	;add	cx, dx
  1192                                  	;add	[si+2], cx
  1193                                                 
  1194                                  	;mov	ah, 04h			; Return Current Date
  1195                                  	;int	1Ah
  1196                                  
  1197                                  	;xchg	ch,cl
  1198                                  	;xchg	dh,dl
  1199                                  
  1200                                  	;add	cx, dx
  1201                                  	;add	[si+2], cx
  1202                                  
  1203                                  	; According to Microsoft DOS 6.0 serial number
  1204                                  	; production method...
  1205                                  	; < Create unique 32 bit serial number >
  1206                                  
  1207                                  	; Create_Serial_ID (MSDOS 6.0 Source code, MSFOR.ASM)
  1208                                  	; (20/04/1987)
  1209                                  	;
  1210                                  	;  Get date (INT 21h, AH=2Bh)
  1211                                  	;  Get time (INT 21h, AH=2Ch)
  1212                                  	;  Serial_ID+0 = DX reg date + DX reg time
  1213                                  	;  Serial_ID+2 = CX reg date + CX reg time
  1214                                  	;  Serial_Num_Low = Serial_ID+2
  1215                                  	;  Serial_Num_High = Serial_ID+0
  1216                                  
  1217 0000064E B404                    	mov	ah, 04h		; Return Current Date
  1218 00000650 CD1A                    	int	1Ah
  1219                                  
  1220                                  	; DL = Day (BCD)	(20h)
  1221                                  	; DH = Month (BCD)	(12h)
  1222                                  	; CH = Century (BCD)	(20h)
  1223                                  	; CL = Year (BCD) 	(17h)
  1224                                  
  1225 00000652 88D0                    	mov	al, dl
  1226 00000654 E87100                  	call	bcd_to_bin
  1227 00000657 88C2                    	mov	dl, al 
  1228 00000659 88F0                    	mov	al, dh
  1229 0000065B E86A00                  	call	bcd_to_bin
  1230 0000065E 88C6                    	mov	dh, al 
  1231 00000660 88C8                    	mov	al, cl
  1232 00000662 E86300                  	call	bcd_to_bin
  1233 00000665 88C1                    	mov	cl, al 
  1234 00000667 88E8                    	mov	al, ch
  1235 00000669 E85C00                  	call	bcd_to_bin
  1236 0000066C 88C5                    	mov	ch, al
  1237                                  
  1238                                  	; DH = Month (1-10)
  1239                                  	; DL = Day (1-31)
  1240                                  	; CX = Year (1900-2099)
  1241                                  
  1242 0000066E 52                      	push	dx 
  1243 0000066F 51                      	push	cx
  1244                                  
  1245 00000670 B402                    	mov	ah, 02h		; Return Current Time
  1246 00000672 CD1A                    	int	1Ah
  1247                                  	
  1248                                  	; DH = Seconds (BCD)	(59h)
  1249                                  	; CL = Minutes (BCD)	(59h)
  1250                                  	; CH = Hours (BCD)	(23h)
  1251                                  	; DL = Daylight savings time option (1=yes)
  1252                                  
  1253 00000674 88F0                    	mov	al, dh
  1254 00000676 E84F00                  	call	bcd_to_bin
  1255 00000679 88C6                    	mov	dh, al 
  1256 0000067B 88C8                    	mov	al, cl
  1257 0000067D E84800                  	call	bcd_to_bin
  1258 00000680 88C1                    	mov	cl, al 
  1259 00000682 88E8                    	mov	al, ch
  1260 00000684 E84100                  	call	bcd_to_bin
  1261 00000687 88C5                    	mov	ch, al 
  1262                                  
  1263                                  	; CH = Hour (0-23)
  1264                                  	; CL = Minutes (0-59)
  1265                                  	; DH = Seconds (0-59)
  1266                                  	; ((DL = Hundredths (0-99) - MSDOS!))
  1267                                  	; DL = 0 or 1 (here!)
  1268                                  
  1269 00000689 89C8                    	mov	ax, cx
  1270 0000068B 59                      	pop	cx
  1271 0000068C 01C8                    	add	ax, cx
  1272                                  
  1273 0000068E 894402                  	mov	[si+2], ax
  1274                                  
  1275 00000691 89D0                    	mov	ax, dx
  1276 00000693 5A                      	pop	dx
  1277 00000694 01D0                    	add	ax, dx
  1278                                  
  1279 00000696 8904                    	mov	[si], ax
  1280                                  
  1281 00000698 30E4                    	xor	ah, ah		; Read time counter
  1282 0000069A CD1A                    	int	1Ah
  1283                                  
  1284                                  	; CX = High word of clock count
  1285                                  	; DX = Low word of clock count
  1286                                  	; AL = 0 if 24 hours has not passed, else 1
  1287                                  
  1288                                  	; NOTES: 
  1289                                  	; (Ref: vitaly_filatov.tripod.com/ng/asm/asm_029.1.html)
  1290                                  	;
  1291                                     	; Following formulas convert the clock count to
  1292                                          ; the time of day:
  1293                                   	;	Hour      = Clock / 65543 (1007h)
  1294                                  	;	Remainder = Clock MOD 65543
  1295                                   	;
  1296                                  	;	Minutes   = Remainder / 1092 (444h)
  1297                                  	;	Remainder = Remainder MOD 1092
  1298                                  	;
  1299                                  	;	Second    = Remainder / 18.21
  1300                                  	;	Remainder = Remainder MOD 18.21
  1301                                  	;
  1302                                  	;	Hundredths = CINT(Remainder * 100)
  1303                                  
  1304 0000069C 0014                    	add	[si], dl
  1305                                  
  1306                                  	; SI = Volume serial number address (4 bytes)
  1307 0000069E 8A04                    	mov	al, [si]
  1308 000006A0 E82205                  	call	bin_to_hex
  1309 000006A3 A3[A118]                	mov	[Vol_Serial2+2], ax
  1310 000006A6 8A4401                  	mov	al, [si+1]
  1311 000006A9 E81905                  	call	bin_to_hex
  1312 000006AC A3[9F18]                	mov	[Vol_Serial2], ax
  1313 000006AF 8A4402                  	mov	al, [si+2]
  1314 000006B2 E81005                  	call	bin_to_hex
  1315 000006B5 A3[9C18]                	mov	[Vol_Serial1+2], ax
  1316 000006B8 8A4403                  	mov	al, [si+3]
  1317 000006BB E80705                  	call	bin_to_hex
  1318 000006BE A3[9A18]                	mov	[Vol_Serial1], ax
  1319                                  
  1320 000006C1 BE[8818]                	mov	si, Msg_Volume_Serial
  1321 000006C4 E8E9FB                  	call	print_msg
  1322                                  
  1323 000006C7 C3                      	retn
  1324                                  
  1325                                  bcd_to_bin:
  1326 000006C8 53                      	push	bx
  1327 000006C9 D410                    	db	0D4h,10h  ; Undocumented inst. AAM
  1328                                  			  ; AH = AL / 10h
  1329                                  			  ; AL = AL MOD 10h
  1330 000006CB 88C3                    	mov	bl, al
  1331 000006CD B00A                    	mov	al, 10
  1332 000006CF F6E4                    	mul	ah
  1333 000006D1 00D8                    	add	al, bl
  1334 000006D3 5B                      	pop	bx
  1335 000006D4 C3                      	retn
  1336                                  
  1337                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1338                                  ; write formatting percentage
  1339                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1340                                  
  1341                                  write_formatting_msg:
  1342 000006D5 A1[F81C]                	mov	ax, [dosp_size]
  1343 000006D8 8B16[FA1C]              	mov	dx, [dosp_size+2]
  1344                                  
  1345                                  	; DX_AX = Total sectors for percentage
  1346 000006DC B96400                  	mov	cx, 100	
  1347 000006DF E8BE04                  	call	div32
  1348 000006E2 A3[0A1F]                	mov	[format_percent], ax
  1349                                  
  1350 000006E5 BE[C018]                	mov	si, msg_formatting
  1351 000006E8 E8C5FB                  	call	print_msg
  1352                                  
  1353                                  	; get cursor position
  1354                                  	; bh = 0  ; video page
  1355 000006EB B403                    	mov     ah, 3 ; get cursor pos
  1356 000006ED CD10                    	int     10h
  1357 000006EF 8916[5018]              	mov	[Cursor_Pos], dx
  1358                                  
  1359 000006F3 C606[0C1F]FF            	mov	byte [prev_percent], 255
  1360                                  
  1361 000006F8 C3                      	retn
  1362                                  
  1363                                  write_format_percent:
  1364                                  	; DX_AX = Current sector (which has been written)
  1365                                  
  1366 000006F9 50                      	push	ax
  1367 000006FA 52                      	push	dx
  1368 000006FB 53                      	push	bx
  1369 000006FC 51                      	push	cx
  1370 000006FD 56                      	push	si
  1371                                  
  1372 000006FE 2B461C                  	sub	ax, [bp+1Ch]	; [BPB_HiddSec]
  1373 00000701 1B561E                  	sbb	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1374                                  wpc_t:
  1375 00000704 8B0E[0A1F]              	mov	cx, [format_percent]
  1376 00000708 E89504                  	call	div32
  1377                                  	; AL = percentage value between 1 to 100
  1378                                  wpc_x:
  1379 0000070B 3A06[0C1F]              	cmp	al, [prev_percent]
  1380 0000070F 741B                    	je	short wpc_y
  1381 00000711 A2[0C1F]                	mov	[prev_percent], al
  1382 00000714 8B16[5018]              	mov	dx, [Cursor_Pos]
  1383 00000718 BB0700                  	mov	bx, 7
  1384 0000071B B402                    	mov	ah, 2
  1385 0000071D CD10                    	int	10h  ; Set Cursor Position
  1386 0000071F 31D2                    	xor	dx, dx
  1387 00000721 30E4                    	xor	ah, ah
  1388                                  	;mov	al, [prev_percent]
  1389 00000723 BE[CE18]                	mov	si, format_percent_str + 2
  1390 00000726 E88504                  	call	bin_to_decimal
  1391 00000729 E884FB                  	call	print_msg
  1392                                  wpc_y:
  1393 0000072C 5E                      	pop	si
  1394 0000072D 59                      	pop	cx
  1395 0000072E 5B                      	pop	bx
  1396 0000072F 5A                      	pop	dx
  1397 00000730 58                      	pop	ax
  1398 00000731 C3                      	retn
  1399                                  
  1400                                  write_format_percent_x:
  1401                                  	; AL = % number
  1402                                  
  1403 00000732 50                      	push	ax
  1404 00000733 52                      	push	dx
  1405 00000734 53                      	push	bx
  1406 00000735 51                      	push	cx
  1407 00000736 56                      	push	si
  1408                                  
  1409 00000737 EBD2                    	jmp	short wpc_x
  1410                                  
  1411                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1412                                  ; format error 
  1413                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1414                                  
  1415                                  formatting_error:
  1416 00000739 8B26[0E1F]              	mov	sp, [old_sp]
  1417                                  
  1418 0000073D 88E0                    	mov	al, ah ;  error code
  1419 0000073F E88304                  	call	bin_to_hex
  1420 00000742 A3[E618]                	mov 	[error_code], ax
  1421                                  
  1422 00000745 BE[D818]                	mov	si, CRLF
  1423 00000748 E865FB                  	call	print_msg
  1424                                  
  1425 0000074B BE[DB18]                	mov	si, Msg_Error
  1426                                  	;call	print_msg
  1427 0000074E E94BFB                  	jmp	Exit
  1428                                  
  1429                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1430                                  ; write cluster count
  1431                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1432                                  
  1433                                  write_cluster_count:
  1434 00000751 BE[A618]                	mov	si, msg_cluster_count
  1435 00000754 E859FB                  	call	print_msg
  1436 00000757 A1[041F]                	mov	ax, [cluster_count]
  1437 0000075A 8B16[061F]              	mov	dx, [cluster_count+2]
  1438 0000075E BE[BC18]                	mov	si, cluster_count_str+6
  1439 00000761 E84A04                  	call	bin_to_decimal
  1440 00000764 E849FB                  	call	print_msg
  1441 00000767 C3                      	retn 
  1442                                  
  1443                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1444                                  ; FAT16 FORMATTING
  1445                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1446                                  
  1447                                  ; ((TRDOS 386 criter))
  1448                                  ; Minimum size of FAT16 FS = [heads]*[sectors]
  1449                                  ; (1 cylinder) or 4096 sectors (for TRDOS 386)
  1450                                  
  1451                                  format_FAT16_fs:
  1452                                  ; 04/05/2024 (BugFix)
  1453                                  ; DL = Partition (FS) ID
  1454                                  ;	mov	ax, 0706h ; db 06h, 07h ; 'push es, pop es'
  1455                                  ;	cmp	dl, al ; 06h ; Big CHS partition (>= 32MB)
  1456                                  ;	je	short FAT16_big_chs_format
  1457                                  ;	;mov	ax, 070Eh ; db 0Eh, 07h	; 'push cs, pop es'
  1458                                  ;	;cmp	dl, al ; 0Eh ; LBA partition
  1459                                  ;	;je	short FAT16_lba_format
  1460                                  ;FAT16_chs_format:  
  1461                                  ;	; Partition Type: 04h, CHS (<32 MB) partition
  1462                                  ;	mov	ax, 0004h ; db 04h, 00h ; 'add al, 0'
  1463                                  ;FAT16_big_chs_format:
  1464                                  ;;;
  1465                                  ;FAT16_lba_format:
  1466                                  	; Put TRDOS 386 FAT16 partition magic word 
  1467                                  	; at offset 3Eh, in TRDOS386 FAT16 boot sector.
  1468 00000768 BD[E00D]                	mov	bp, RD_FAT16_hd_bs
  1469 0000076B 8D7E03                  	lea	di, [bp+3]
  1470 0000076E BE[6018]                	mov	si, bs_oem_name
  1471 00000771 B90400                  	mov	cx, 4
  1472 00000774 F3A5                    	rep	movsw
  1473                                   
  1474                                  	;mov	[bp+3Eh], ax	; [loc_3E]
  1475                                  	; 04/05/2024 (BugFix)
  1476 00000776 80FA06                  	cmp	dl, 6
  1477 00000779 7404                    	je	short FAT16_f_x ; skip ; db 'RDv5 FAT16 06h', 0
  1478                                  	; dl = 04h or 0Eh
  1479 0000077B 8896CE01                	mov	[bp+1CEh], dl	; Retro DOS v5 boot sect off 1CEh
  1480                                  				; (see: 'rd5hdbs.txt' for 1CEh)
  1481                                  FAT16_f_x:
  1482 0000077F A1[E213]                	mov	ax, [sectors]
  1483 00000782 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
  1484 00000785 A1[E413]                	mov	ax, [heads]
  1485 00000788 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
  1486 0000078B A1[F41C]                	mov	ax, [dosp_start]
  1487 0000078E 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
  1488 00000791 A1[F61C]                	mov	ax, [dosp_start+2]
  1489 00000794 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
  1490 00000797 A1[F81C]                	mov	ax, [dosp_size]
  1491 0000079A 8B16[FA1C]              	mov	dx, [dosp_size+2]
  1492 0000079E 21D2                    	and	dx, dx
  1493 000007A0 7505                    	jnz	short FAT16_f_0
  1494 000007A2 894613                  	mov	[bp+13h], ax	; [BPB_TotSec16]
  1495                                  	; CX = 0
  1496                                  	;mov	[bp+20h], cx	; [BPB_TotSec32] =  0
  1497                                  	;mov	[bp+22h], cx	; [BPB_TotSec32+2] = 0
  1498 000007A5 EB06                    	jmp	short FAT16_f_1
  1499                                  FAT16_f_0:
  1500 000007A7 894620                  	mov	[bp+20h], ax	; [BPB_TotSec32]
  1501 000007AA 895622                  	mov	[bp+22h], dx	; [BPB_TotSec32+2]
  1502                                  	; CX = 0
  1503                                  	;mov	[bp+13h], cx ; [BPB_TotSec16] = 0
  1504                                  FAT16_f_1:
  1505                                  	; Sectors per cluster calculation
  1506                                  	; (According to MS FAT32 FS specification.)
  1507 000007AD B102                    	mov	cl, 2  ; 2 sectors per cluster
  1508 000007AF 09D2                    	or	dx, dx
  1509 000007B1 7507                    	jnz	short FAT16_f_2 ; >2 sectors (>16MB)
  1510 000007B3 3DA87F                  	cmp	ax, 32680
  1511 000007B6 763C                    	jna	short FAT16_f_10 ; 2 sectors, <=16MB
  1512                                  	; > 16MB
  1513 000007B8 EB38                    	jmp	short FAT16_f_9 ; 4 sectors per cluster
  1514                                  FAT16_f_2:
  1515 000007BA 83FA04                  	cmp	dx, 4  ; >= 262144 sectors ; >=128MB
  1516 000007BD 7708                    	ja	short FAT16_f_3 ; >4 sectors per cluster
  1517 000007BF 7231                    	jb	short FAT16_f_9 ; 4 sectors per cluster	
  1518 000007C1 09C0                    	or	ax, ax ; dx_ax = (4*65536)+0
  1519 000007C3 742D                    	jz	short FAT16_f_9 ; 4 sectors per cluster
  1520 000007C5 EB29                    	jmp	short FAT16_f_8 ; 8 sectors per cluster
  1521                                  FAT16_f_3:
  1522 000007C7 83FA08                  	cmp	dx, 8  ; >= 524288 sectors ; >=256MB
  1523 000007CA 7708                    	ja	short FAT16_f_4 ; >8 sectors per cluster
  1524 000007CC 7222                    	jb	short FAT16_f_8 ; 8 sectors per cluster	
  1525 000007CE 21C0                    	and	ax, ax ; dx_ax = (8*65536)+0
  1526 000007D0 741E                    	jz	short FAT16_f_8 ; 8 sectors per cluster
  1527 000007D2 EB1A                    	jmp	short FAT16_f_7 ; 16 sectors per cluster
  1528                                  FAT16_f_4:
  1529 000007D4 83FA10                  	cmp	dx, 16 ; >= 1048576 sectors ; >=512MB
  1530 000007D7 7708                    	ja	short FAT16_f_5 ; >16 sectors per cluster
  1531 000007D9 7213                    	jb	short FAT16_f_7 ; 16 sectors per cluster
  1532 000007DB 21C0                    	and	ax, ax ; dx_ax = (16*65536)+0
  1533 000007DD 740F                    	jz	short FAT16_f_7 ; 16 sectors per cluster
  1534 000007DF EB0B                    	jmp	short FAT16_f_6 ; 32 sectors per cluster
  1535                                  FAT16_f_5:
  1536 000007E1 83FA20                  	cmp	dx, 32 ; >= 2097152 sectors ; >=1GB
  1537 000007E4 7206                    	jb	short FAT16_f_6 ; 32 sectors per cluster
  1538 000007E6 09C0                    	or	ax, ax		; dx_ax = (32*65536)+0
  1539 000007E8 7402                    	jz	short FAT16_f_6 ; 32 sectors per cluster
  1540                                  	; >1GB (<=2GB)
  1541                                  	; 64 sectors per cluster
  1542 000007EA D0E1                    	shl	cl, 1
  1543                                  FAT16_f_6:
  1544                                  	; 32 sectors per cluster (for <= 2GB volumes)
  1545 000007EC D0E1                    	shl	cl, 1	
  1546                                  FAT16_f_7:
  1547                                  	; 16 sectors per cluster (for <= 1GB volumes)
  1548 000007EE D0E1                    	shl	cl, 1
  1549                                  FAT16_f_8:
  1550                                  	; 8 sectors per cluster (for <= 512MB volumes)
  1551 000007F0 D0E1                    	shl	cl, 1	
  1552                                  FAT16_f_9:
  1553                                  	; 4 sectors per cluster (for <= 256MB volumes)
  1554 000007F2 D0E1                    	shl	cl, 1	
  1555                                  FAT16_f_10:	
  1556                                  	; 2 sectors per cluster (for <= 128MB volumes)
  1557 000007F4 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
  1558                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
  1559                                  	;mov	word [bp+0Eh], 1 ; [BPB_RsvdSecCnt] 
  1560                                  	;mov	word [bp+11h], 512 ; [BPB_RootEntCnt]
  1561                                  	
  1562                                  	; Calculating FAT size in sectors
  1563                                  	; (According to MS FAT32 FS Specification, 2000)
  1564                                  
  1565                                  	; DX_AX = partition (volume) size in sectors
  1566 000007F7 8B5E11                  	mov	bx, [bp+11h]	; [BPB_RootEntCnt] = 512
  1567 000007FA 83C30F                  	add	bx, 15 ; bx = 527
  1568 000007FD C1EB04                  	shr	bx, 4 ; /16 = 527/16 = 32
  1569                                  		; ((32*BX)+511)/512
  1570 00000800 891E[081F]              	mov	[root_dir_secs], bx
  1571 00000804 035E0E                  	add	bx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1572 00000807 29D8                    	sub	ax, bx
  1573 00000809 83DA00                  	sbb	dx, 0
  1574                                  		; TmpVal1 = DiskSize - (BPB_ResvdSecCnt +
  1575                                  		;	     		RootDirsectors)
  1576                                  	;mov	bx, cx ; ch = 0
  1577                                  	;shl	bx, 8 ; * 256
  1578 0000080C 88CF                    	mov	bh, cl
  1579 0000080E 30DB                    	xor	bl, bl
  1580 00000810 B102                    	mov	cl, 2 ; [BPB_NumFATs] 
  1581 00000812 01CB                    	add	bx, cx	
  1582                                  		; TmpVal2 = (256*BPB_SecPerClus)+BPB_NumFATs
  1583 00000814 89D9                    	mov	cx, bx
  1584 00000816 4B                      	dec	bx  ; TmpVal2-1
  1585 00000817 01D8                    	add	ax, bx
  1586 00000819 83D200                  	adc	dx, 0
  1587 0000081C E88103                  	call	div32
  1588                                  		; FATSz = (TmpVal1+(TmpVal2-1))/TmpVal2
  1589                                  	; AX = FAT size in sectors
  1590                                  	; DX = 0
  1591 0000081F 894616                  	mov	[bp+16h], ax	; [BPB_FATSz16]
  1592                                  	; * 2
  1593 00000822 D1E0                    	shl	ax, 1
  1594                                  	; AX = [BPB_NumFATs] * [BPB_FATSz16]
  1595 00000824 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1596 00000827 01C1                    	add	cx, ax
  1597                                  	
  1598                                  	; 15/07/2024 (bugfix)
  1599 00000829 894E42                  	mov	[bp+42h], cx	; bsRootDirStart
  1600 0000082C 8B1E[081F]              	mov	bx, [root_dir_secs]
  1601 00000830 895E44                  	mov	[bp+44h], bx	; bsRootDirSects
  1602                                  	;mov	word [bp+46h], 16 ; bsDirEntsPerSec
  1603                                  
  1604                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1605                                  	;add	cx, [root_dir_secs] ; + RootDirsectors
  1606                                  	; 15/07/2024
  1607 00000833 01D9                    	add	cx, bx
  1608 00000835 29DB                    	sub	bx, bx ; BX = 0
  1609                                  	; BX_CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1610                                  	;	  + RootDirSectors
  1611 00000837 8B4613                  	mov	ax, [bp+13h]	; [BPB_TotSec16]
  1612                                  	;sub	dx, dx 
  1613                                  	; DX = 0
  1614 0000083A 21C0                    	and	ax, ax
  1615 0000083C 7506                    	jnz	short FAT16_f_11
  1616 0000083E 8B4620                  	mov	ax, [bp+20h]	; [BPB_TotSec32]
  1617 00000841 8B5622                  	mov	dx, [bp+22h]	; [BPB_TotSec32+2]
  1618                                  FAT16_f_11:
  1619 00000844 29C8                    	sub	ax, cx
  1620 00000846 19DA                    	sbb	dx, bx
  1621 00000848 890E[FC1E]              	mov	[data_start], cx
  1622 0000084C 891E[FE1E]              	mov	[data_start+2], bx
  1623                                  
  1624                                  	; 15/07/2024 (bugfix)
  1625 00000850 894E40                  	mov	 [bp+40h], cx	; bsDataStart
  1626                                  
  1627                                  	; DX_AX = Data sectors
  1628 00000853 A3[001F]                	mov	[data_sectors], ax
  1629 00000856 8916[021F]              	mov	[data_sectors+2], dx
  1630 0000085A 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1631 0000085D 30ED                    	xor	ch, ch
  1632 0000085F E83E03                  	call	div32 ; DX_AX/CX
  1633                                  	; AX = Count of clusters (rounded down)
  1634                                  	; DX = 0
  1635 00000862 A3[041F]                	mov	[cluster_count], ax
  1636 00000865 8916[061F]              	mov	[cluster_count+2], dx
  1637                                  
  1638 00000869 8D7E2B                  	lea	di, [bp+43] ; [BS_VolLab]
  1639 0000086C E880FD                  	call	write_volume_name
  1640 0000086F 8D7627                  	lea	si, [bp+39] ; [BS_VolID]
  1641 00000872 E8D9FD                  	call	write_volume_serial
  1642 00000875 E8D9FE                  	call	write_cluster_count	
  1643                                  
  1644 00000878 E85AFE                  	call	write_formatting_msg
  1645 0000087B B000                    	mov	al, 0
  1646 0000087D E8B2FE                  	call	write_format_percent_x
  1647                                  
  1648 00000880 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
  1649 00000883 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1650                                  
  1651 00000886 0106[FC1E]              	add	[data_start], ax
  1652 0000088A 1116[FE1E]              	adc	[data_start+2], dx
  1653                                  
  1654                                  	; DX_AX = FAT16 Boot Sector address
  1655 0000088E BB[E00D]                	mov	bx, RD_FAT16_hd_bs
  1656                                  	; ES:BX = Boot Sector Buffer
  1657 00000891 E8DAFA                  	call	write_hd_sector
  1658 00000894 0F82A1FE                	jc	formatting_error
  1659 00000898 E85EFE                  	call	write_format_percent
  1660 0000089B 83C001                  	add	ax, 1
  1661 0000089E 83D200                  	adc	dx, 0
  1662                                  	; write remain part of reserved sectors
  1663 000008A1 8B4E0E                  	mov	cx, [bp+0Eh] ; [BPB_RsvdSecCnt]
  1664                                  	;sub	cx, 1
  1665                                  	;jna	short FAT16_f_13
  1666 000008A4 49                      	dec	cx
  1667 000008A5 7418                    	jz	short FAT16_f_13
  1668                                  FAT16_f_12:
  1669 000008A7 51                      	push	cx
  1670 000008A8 BB[FC1C]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1671 000008AB E8C0FA                  	call	write_hd_sector
  1672 000008AE 0F8287FE                	jc	formatting_error
  1673 000008B2 E844FE                  	call	write_format_percent
  1674 000008B5 83C001                  	add	ax, 1
  1675 000008B8 83D200                  	adc	dx, 0
  1676 000008BB 59                      	pop	cx
  1677 000008BC 49                      	dec	cx ; dec cl
  1678 000008BD 75E8                    	jnz	short FAT16_f_12
  1679                                  FAT16_f_13:
  1680                                  	; write FAT sectors
  1681 000008BF 8B0E[FC1E]              	mov	cx, [data_start] ; lba/abs addr
  1682 000008C3 8B1E[FE1E]              	mov	bx, [data_start+2] ; lba/abs addr
  1683                                  
  1684 000008C7 2B0E[081F]              	sub	cx, [root_dir_secs]
  1685 000008CB 83DB00                  	sbb	bx, 0
  1686                                  
  1687 000008CE 53                      	push	bx
  1688 000008CF 51                      	push	cx
  1689 000008D0 BB[FC1C]                	mov	bx, HDFORMAT_FATBUFFER
  1690                                  	; ES:BX = FAT Sector Buffer
  1691 000008D3 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
  1692 000008D6 B5FF                    	mov	ch, 0FFh
  1693 000008D8 890F                    	mov	[bx], cx ; 0FFF8h
  1694 000008DA 88E9                    	mov	cl, ch ; cx = 0FFFFh
  1695 000008DC 894F02                  	mov	[bx+2], cx
  1696                                  	;inc	cx
  1697 000008DF E88CFA                  	call	write_hd_sector
  1698 000008E2 0F8253FE                	jc	formatting_error
  1699 000008E6 E810FE                  	call	write_format_percent
  1700                                  	;mov	bx, HDFORMAT_FATBUFFER
  1701 000008E9 B90000                  	mov	cx, 0
  1702 000008EC 890F                    	mov	[bx], cx
  1703 000008EE 894F02                  	mov	[bx+2], cx
  1704 000008F1 EB0F                    	jmp	short FAT16_f_15
  1705                                  FAT16_f_14:	
  1706 000008F3 53                      	push	bx
  1707 000008F4 51                      	push	cx	
  1708 000008F5 BB[FC1C]                	mov	bx, HDFORMAT_FATBUFFER
  1709 000008F8 E873FA                  	call	write_hd_sector
  1710 000008FB 0F823AFE                	jc	formatting_error
  1711 000008FF E8F7FD                  	call	write_format_percent
  1712                                  FAT16_f_15:	
  1713 00000902 59                      	pop	cx
  1714 00000903 5B                      	pop	bx
  1715 00000904 83C001                  	add	ax, 1
  1716 00000907 83D200                  	adc	dx, 0
  1717 0000090A 39DA                    	cmp	dx, bx
  1718 0000090C 72E5                    	jb	short FAT16_f_14
  1719 0000090E 39C8                    	cmp	ax, cx
  1720 00000910 72E1                    	jb	short FAT16_f_14
  1721                                  
  1722                                  	; write	root directory sectors
  1723                                  	; as empty sectors
  1724 00000912 8B0E[081F]              	mov	cx, [root_dir_secs]
  1725                                  FAT16_f_16:
  1726 00000916 51                      	push	cx
  1727 00000917 BB[FC1C]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1728 0000091A E851FA                  	call	write_hd_sector
  1729 0000091D 0F8218FE                	jc	formatting_error
  1730 00000921 E8D5FD                  	call	write_format_percent
  1731 00000924 83C001                  	add	ax, 1
  1732 00000927 83D200                  	adc	dx, 0
  1733 0000092A 59                      	pop	cx
  1734 0000092B 49                      	dec	cx
  1735 0000092C 75E8                    	jnz	short FAT16_f_16
  1736                                  
  1737                                  	; write DATA sectors 
  1738                                  	; (after root directory sectors)
  1739 0000092E 8B0E[001F]              	mov	cx, [data_sectors]
  1740 00000932 8B1E[021F]              	mov	bx, [data_sectors+2]
  1741 00000936 43                      	inc	bx ; 0 -> 1, 1-> 2
  1742                                  FAT16_f_17:	
  1743 00000937 53                      	push	bx
  1744 00000938 51                      	push	cx	
  1745 00000939 BB[EE18]                	mov	bx, HDFORMAT_SECBUFFER
  1746 0000093C E82FFA                  	call	write_hd_sector
  1747 0000093F 0F82F6FD                	jc	formatting_error
  1748 00000943 E8B3FD                  	call	write_format_percent
  1749 00000946 59                      	pop	cx
  1750 00000947 5B                      	pop	bx
  1751 00000948 83C001                  	add	ax, 1
  1752 0000094B 83D200                  	adc	dx, 0
  1753 0000094E 49                      	dec	cx
  1754 0000094F 75E6                    	jnz	short FAT16_f_17
  1755 00000951 4B                      	dec	bx
  1756 00000952 75E3                    	jnz	short FAT16_f_17
  1757                                  
  1758                                  	; If there are, format remain sectors which are
  1759                                  	; at beyond of data clusters, with zero bytes.
  1760                                  	
  1761 00000954 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  1762 00000957 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  1763                                  
  1764 0000095A 837E1300                	cmp	word [bp+13h], 0 ; [BPB_TotSec16]
  1765 0000095E 0F8453FC                	jz	FAT16_f_18
  1766 00000962 034E13                  	add	cx, [bp+13h]	; [BPB_TotSec16]
  1767 00000965 83D300                  	adc	bx, 0
  1768 00000968 E950FC                  	jmp	FAT16_f_19
  1769                                  
  1770                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1771                                  ; FAT12 FORMATTING
  1772                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1773                                  
  1774                                  ; ((TRDOS 386 criter))
  1775                                  ; Minimum size of FAT12 FS = [heads]*[sectors]
  1776                                  ; (1 cylinder) 
  1777                                  
  1778                                  format_FAT12_fs:
  1779 0000096B BD[E00B]                	mov	bp, RD_FAT12_hd_bs
  1780 0000096E 8D7E03                  	lea	di, [bp+3]
  1781 00000971 BE[6018]                	mov	si, bs_oem_name
  1782 00000974 B90400                  	mov	cx, 4
  1783 00000977 F3A5                    	rep	movsw 
  1784 00000979 A1[E213]                	mov	ax, [sectors]
  1785 0000097C 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
  1786 0000097F A1[E413]                	mov	ax, [heads]
  1787 00000982 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
  1788 00000985 A1[F41C]                	mov	ax, [dosp_start]
  1789 00000988 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
  1790 0000098B A1[F61C]                	mov	ax, [dosp_start+2]
  1791 0000098E 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
  1792 00000991 A1[F81C]                	mov	ax, [dosp_size]
  1793 00000994 894613                  	mov	[bp+13h], ax	; [BPB_TotSec16]
  1794                                  
  1795 00000997 31F6                    	xor	si, si ; reset (FAT size fix) flag
  1796 00000999 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1797 0000099C 8B5611                  	mov	dx, [bp+11h]	; [BPB_RootEntCnt] = 512
  1798 0000099F 83C20F                  	add	dx, 15	; (16-1) (512-1)
  1799 000009A2 C1EA04                  	shr	dx, 4	; /16  (*32/512)
  1800                                  	; AX = Root dir sectors
  1801                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1802 000009A5 01D1                    	add	cx, dx ; + RootDirsectors ; + 32
  1803 000009A7 890E[081F]              	mov	[root_dir_secs], cx ; = 33
  1804                                  
  1805                                  	;sub	ax, 33  ; 1 reserved sector, 32 root dir sectors
  1806                                  			; .. now AX has number of data sectors
  1807                                  			;	 		+ 2* (FAT sectors)
  1808 000009AB 29C8                    	sub	ax, cx
  1809                                  FAT12_f_10:
  1810                                  	; Sectors per cluster calculation
  1811                                  	; (According to MS FAT32 FS specification.)
  1812                                  	;mov	cx, 1  ; 1 sector per cluster
  1813 000009AD B101                    	mov	cl, 1  ; CH = 0
  1814                                  	; 28/10/2023 ; (BugFix)
  1815 000009AF 50                      	push	ax
  1816                                  FAT12_f_0:
  1817 000009B0 3DF50F                  	cmp	ax, 4085 ; Max. cluster count for FAT12
  1818 000009B3 7206                    	jb	short FAT12_f_1
  1819 000009B5 D0E1                    	shl	cl, 1 ; *2
  1820 000009B7 D1E8                    	shr	ax, 1 ; /2
  1821 000009B9 EBF5                    	jmp	short FAT12_f_0
  1822                                  FAT12_f_1:
  1823                                  	; 28/10/2023
  1824 000009BB 58                      	pop	ax
  1825 000009BC 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
  1826                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
  1827                                  	;mov	word [bp+0Eh], 1 ; [BPB_RsvdSecCnt] 
  1828                                  	;mov	word [bp+11h], 512 ; [BPB_RootEntCnt]
  1829                                  	
  1830                                  	; Calculating FAT size in sectors
  1831                                  	; AX = partition (volume) size in sectors
  1832                                  	; CX = sectors per clusters
  1833 000009BF 31D2                    	xor	dx, dx
  1834 000009C1 F7F1                    	div	cx
  1835                                  	; AX = cluster count (only for FAT size calc)
  1836                                  	; DX = 0
  1837 000009C3 83C002                  	add	ax, 2  ; cluster 2 to ...
  1838 000009C6 89C2                    	mov	dx, ax
  1839 000009C8 D1E2                    	shl	dx, 1
  1840 000009CA 01D0                    	add	ax, dx ; *3
  1841 000009CC D1E8                    	shr	ax, 1  ; /2
  1842 000009CE 83D000                  	adc	ax, 0  ; +0.5 -> +1
  1843                                  
  1844                                  	; AX = FAT bytes for 12 bit cluster numbers
  1845                                  	
  1846 000009D1 B90002                  	mov	cx, 512		; [BPB_BytesPerSec]
  1847 000009D4 01C8                    	add	ax, cx		
  1848 000009D6 48                      	dec	ax		; [BPB_BytesPerSec] - 1
  1849 000009D7 29D2                    	sub	dx, dx
  1850 000009D9 F7F1                    	div	cx
  1851 000009DB 894616                  	mov	[bp+16h], ax	; [BPB_FATSz16]
  1852                                  	; * 2
  1853 000009DE D1E0                    	shl	ax, 1
  1854                                  	; AX = [BPB_NumFATs] * [BPB_FATSz16]
  1855                                  
  1856                                  	;mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1857                                  	;add	cx, ax
  1858                                  	;mov	ax, [bp+11h]	; [BPB_RootEntCnt] = 512
  1859                                  	;add	ax, 15	; (16-1) (512-1)
  1860                                  	;shr	ax, 4	; /16  (*32/512)
  1861                                  	;; AX = Root dir sectors
  1862                                  	;; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1863                                  	;add	cx, ax ; + RootDirsectors
  1864                                  	;mov	[root_dir_secs], ax
  1865                                  
  1866                                  	;mov	cx, 33
  1867 000009E0 8B0E[081F]              	mov	cx, [root_dir_secs]
  1868                                  
  1869                                  	; 15/07/2024 (bugfix)
  1870                                  	; ax = 2 * FAT size (in sectors)
  1871 000009E4 03460E                  	add	ax, [bp+0Eh] ; total FAT sectors + reserved sectors
  1872 000009E7 894642                  	mov	[bp+42h], ax	; bsRootDirStart
  1873 000009EA 894E44                  	mov	[bp+44h], cx	; bsRootDirSects
  1874                                  	;mov	word [bp+46h], 16 ; bsDirEntsPerSec
  1875                                  
  1876                                  	; 15/07/2024
  1877                                  	;add	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1878                                  		; cx = root directory sectors + reserved sectors
  1879 000009ED 01C1                    	add	cx, ax
  1880                                  		; cx = root dir sects + rsvd sects + total FAT sects
  1881                                  
  1882                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1883                                  	;	  + RootDirSectors
  1884 000009EF 8B4613                  	mov	ax, [bp+13h]	; [BPB_TotSec16]
  1885 000009F2 29C8                    	sub	ax, cx
  1886                                  		 ; AX = data sectors
  1887                                  		 ; cH = 0
  1888                                  
  1889                                  	; fix FAT size (better method)
  1890 000009F4 09F6                    	or	si, si
  1891 000009F6 7504                    	jnz	short FAT12_f_9
  1892                                  
  1893 000009F8 89C6                    	mov	si, ax  ; ax = data sectors
  1894 000009FA EBB1                    	jmp	short FAT12_f_10
  1895                                  
  1896                                  FAT12_f_9:
  1897 000009FC 31D2                    	xor	dx, dx
  1898 000009FE 890E[FC1E]              	mov	[data_start], cx
  1899 00000A02 8916[FE1E]              	mov	[data_start+2], dx ; 0
  1900                                  	
  1901                                  	; 15/07/2024 (bugfix)
  1902 00000A06 894E40                  	mov	 [bp+40h], cx	; bsDataStart
  1903                                  
  1904                                  	; DX_AX = Data sectors
  1905 00000A09 A3[001F]                	mov	[data_sectors], ax
  1906 00000A0C 8916[021F]              	mov	[data_sectors+2], dx ; 0
  1907 00000A10 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1908 00000A13 28ED                    	sub	ch, ch
  1909 00000A15 F7F1                    	div	cx
  1910                                  	; AX = Count of clusters (rounded down)
  1911 00000A17 29D2                    	sub	dx, dx ; 0
  1912 00000A19 A3[041F]                	mov	[cluster_count], ax
  1913 00000A1C 8916[061F]              	mov	[cluster_count+2], dx ; 0
  1914                                  
  1915 00000A20 8D7E2B                  	lea	di, [bp+43] ; [BS_VolLab]
  1916 00000A23 E8C9FB                  	call	write_volume_name
  1917 00000A26 8D7627                  	lea	si, [bp+39] ; [BS_VolID]
  1918 00000A29 E822FC                  	call	write_volume_serial
  1919 00000A2C E822FD                  	call	write_cluster_count
  1920                                  
  1921 00000A2F E8A3FC                  	call	write_formatting_msg
  1922 00000A32 B000                    	mov	al, 0
  1923 00000A34 E8FBFC                  	call	write_format_percent_x
  1924                                  
  1925 00000A37 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
  1926 00000A3A 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1927                                  
  1928 00000A3D 0106[FC1E]              	add	[data_start], ax
  1929 00000A41 1116[FE1E]              	adc	[data_start+2], dx
  1930                                  
  1931                                  	; DX_AX = FAT12 Boot Sector address
  1932 00000A45 BB[E00B]                	mov	bx, RD_FAT12_hd_bs
  1933                                  	; ES:BX = Boot Sector Buffer
  1934 00000A48 E823F9                  	call	write_hd_sector
  1935 00000A4B 0F82EAFC                	jc	formatting_error
  1936 00000A4F E8A7FC                  	call	write_format_percent
  1937 00000A52 83C001                  	add	ax, 1
  1938 00000A55 83D200                  	adc	dx, 0
  1939                                  	; write remain part of reserved sectors
  1940 00000A58 8B4E0E                  	mov	cx, [bp+0Eh] ; [BPB_RsvdSecCnt]
  1941                                  	;sub	cx, 1
  1942                                  	;jna	short FAT12_f_3
  1943 00000A5B 49                      	dec	cx
  1944 00000A5C 7418                    	jz	short FAT12_f_3
  1945                                  FAT12_f_2:
  1946 00000A5E 51                      	push	cx
  1947 00000A5F BB[FC1C]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1948 00000A62 E809F9                  	call	write_hd_sector
  1949 00000A65 0F82D0FC                	jc	formatting_error
  1950 00000A69 E88DFC                  	call	write_format_percent
  1951 00000A6C 83C001                  	add	ax, 1
  1952 00000A6F 83D200                  	adc	dx, 0
  1953 00000A72 59                      	pop	cx
  1954 00000A73 49                      	dec	cx ; dec cl
  1955 00000A74 75E8                    	jnz	short FAT12_f_2
  1956                                  FAT12_f_3:
  1957                                  	; write FAT sectors
  1958 00000A76 8B0E[FC1E]              	mov	cx, [data_start] ; lba/abs addr
  1959 00000A7A 8B1E[FE1E]              	mov	bx, [data_start+2] ; lba/abs addr
  1960                                  
  1961 00000A7E 2B0E[081F]              	sub	cx, [root_dir_secs]
  1962 00000A82 83DB00                  	sbb	bx, 0
  1963                                  
  1964 00000A85 53                      	push	bx
  1965 00000A86 51                      	push	cx
  1966 00000A87 BB[FC1C]                	mov	bx, HDFORMAT_FATBUFFER
  1967                                  	; ES:BX = FAT Sector Buffer
  1968 00000A8A 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
  1969 00000A8D B5FF                    	mov	ch, 0FFh
  1970 00000A8F 890F                    	mov	[bx], cx ; 0FFF8h
  1971 00000A91 886F02                  	mov	[bx+2], ch ; 0FFFFF8h
  1972                                  	;xor	cx, cx
  1973 00000A94 E8D7F8                  	call	write_hd_sector
  1974 00000A97 0F829EFC                	jc	formatting_error
  1975 00000A9B E85BFC                  	call	write_format_percent
  1976                                  	;mov	bx, HDFORMAT_FATBUFFER
  1977 00000A9E B90000                  	mov	cx, 0
  1978 00000AA1 890F                    	mov	[bx], cx
  1979 00000AA3 884F02                  	mov	[bx+2], cl
  1980 00000AA6 EB0F                    	jmp	short FAT12_f_5
  1981                                  FAT12_f_4:	
  1982 00000AA8 53                      	push	bx
  1983 00000AA9 51                      	push	cx	
  1984 00000AAA BB[FC1C]                	mov	bx, HDFORMAT_FATBUFFER
  1985 00000AAD E8BEF8                  	call	write_hd_sector
  1986 00000AB0 0F8285FC                	jc	formatting_error
  1987 00000AB4 E842FC                  	call	write_format_percent
  1988                                  FAT12_f_5:	
  1989 00000AB7 59                      	pop	cx
  1990 00000AB8 5B                      	pop	bx
  1991 00000AB9 83C001                  	add	ax, 1
  1992 00000ABC 83D200                  	adc	dx, 0
  1993 00000ABF 39DA                    	cmp	dx, bx
  1994 00000AC1 72E5                    	jb	short FAT12_f_4
  1995 00000AC3 39C8                    	cmp	ax, cx
  1996 00000AC5 72E1                    	jb	short FAT12_f_4
  1997                                  
  1998                                  	; write	root directory sectors
  1999                                  	; as empty sectors
  2000 00000AC7 8B0E[081F]              	mov	cx, [root_dir_secs]
  2001                                  FAT12_f_6:
  2002 00000ACB 51                      	push	cx
  2003 00000ACC BB[FC1C]                	mov	bx, HDFORMAT_EMPTY_BUFF
  2004 00000ACF E89CF8                  	call	write_hd_sector
  2005 00000AD2 0F8263FC                	jc	formatting_error
  2006 00000AD6 E820FC                  	call	write_format_percent
  2007 00000AD9 83C001                  	add	ax, 1
  2008 00000ADC 83D200                  	adc	dx, 0
  2009 00000ADF 59                      	pop	cx
  2010 00000AE0 49                      	dec	cx ; dec cl
  2011 00000AE1 75E8                    	jnz	short FAT12_f_6
  2012                                  
  2013                                  	; write DATA sectors 
  2014                                  	; (after root directory sectors)
  2015 00000AE3 8B0E[001F]              	mov	cx, [data_sectors]
  2016                                  	;mov	bx, [data_sectors+2]
  2017                                  	;inc	bx
  2018                                  FAT12_f_7:	
  2019                                  	;push	bx
  2020 00000AE7 51                      	push	cx	
  2021 00000AE8 BB[EE18]                	mov	bx, HDFORMAT_SECBUFFER
  2022 00000AEB E880F8                  	call	write_hd_sector
  2023 00000AEE 0F8247FC                	jc	formatting_error
  2024 00000AF2 E804FC                  	call	write_format_percent
  2025 00000AF5 59                      	pop	cx
  2026                                  	;pop	bx
  2027 00000AF6 83C001                  	add	ax, 1
  2028 00000AF9 83D200                  	adc	dx, 0
  2029 00000AFC 49                      	dec	cx
  2030 00000AFD 75E8                    	jnz	short FAT12_f_7
  2031                                  	;dec	bx
  2032                                  	;jnz	short FAT12_f_7
  2033                                  
  2034                                  	; If there are, format remain sectors which are
  2035                                  	; at beyond of data clusters, with zero bytes.
  2036                                  	
  2037 00000AFF 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  2038 00000B02 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  2039                                  
  2040 00000B05 034E13                  	add	cx, [bp+13h]	; [BPB_TotSec16]
  2041 00000B08 83D300                  	adc	bx, 0
  2042 00000B0B E9ADFA                  	jmp	FAT12_f_8
  2043                                  
  2044                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2045                                  ; Read & Write characters
  2046                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2047                                  
  2048                                  rw_char:
  2049                                  	; OUTPUT -> DS:SI = Entered String (ASCIIZ)
  2050 00000B0E BE[101F]                	mov     si, StrVolumeName
  2051 00000B11 BB0700                  	mov     bx, 7
  2052 00000B14 B403                    	mov     ah, 3
  2053 00000B16 CD10                    	int     10h
  2054 00000B18 8916[5018]              	mov     [Cursor_Pos], dx
  2055                                  read_next_char:
  2056 00000B1C 30E4                    	xor     ah, ah
  2057 00000B1E CD16                    	int     16h
  2058 00000B20 20C0                    	and     al, al
  2059 00000B22 7439                    	jz      short loc_arrow
  2060 00000B24 3CE0                    	cmp     al, 0E0h
  2061 00000B26 7435                    	je      short loc_arrow
  2062 00000B28 3C08                    	cmp     al, 8
  2063 00000B2A 753D                    	jne     short char_return
  2064                                  loc_back:
  2065 00000B2C B403                    	mov     ah, 3
  2066 00000B2E CD10                    	int     10h
  2067 00000B30 3A16[5018]              	cmp     dl, byte [Cursor_Pos]
  2068 00000B34 761F                    	jna     short loc_beep
  2069                                  prev_column:
  2070 00000B36 FECA                    	dec     dl
  2071                                  set_cursor_pos:
  2072 00000B38 B402                    	mov     ah, 2
  2073 00000B3A CD10                    	int     10h
  2074 00000B3C 88D3                    	mov     bl, dl
  2075 00000B3E 2A1E[5018]              	sub     bl, byte [Cursor_Pos]
  2076 00000B42 B90100                  	mov     cx, 1
  2077 00000B45 B409                    	mov     ah, 9
  2078 00000B47 B020                    	mov     al, 20h
  2079 00000B49 8800                    	mov     [si+bx], al
  2080                                  loc_write_it:
  2081 00000B4B B307                    	mov     bl, 7
  2082 00000B4D CD10                    	int     10h
  2083 00000B4F 8B16[5018]              	mov     dx, [Cursor_Pos]
  2084 00000B53 EBC7                    	jmp     short read_next_char
  2085                                  loc_beep:
  2086 00000B55 B40E                    	mov     ah, 0Eh
  2087 00000B57 B007                    	mov     al, 7
  2088 00000B59 CD10                    	int     10h
  2089 00000B5B EBBF                    	jmp     short read_next_char
  2090                                  loc_arrow:    
  2091 00000B5D 80FC4B                  	cmp     ah, 4Bh
  2092 00000B60 74CA                    	je      short loc_back
  2093 00000B62 80FC53                  	cmp     ah, 53h
  2094 00000B65 74C5                    	je      short loc_back
  2095 00000B67 EBB3                    	jmp     short read_next_char
  2096                                  char_return:
  2097 00000B69 B403                    	mov     ah, 3
  2098 00000B6B CD10                    	int     10h
  2099                                  check_char_type:
  2100 00000B6D 3C20                    	cmp     al, 20h
  2101 00000B6F 7229                    	jb      short loc_escape
  2102 00000B71 88D4                    	mov     ah, dl
  2103 00000B73 2A26[5018]              	sub     ah, byte [Cursor_Pos]
  2104                                  	;cmp	ah, 10 
  2105                                  	;ja	short loc_beep
  2106 00000B77 3A26[5F18]              	cmp     ah, [vname_length]
  2107 00000B7B 73D8                    	jnb	short loc_beep
  2108 00000B7D 3C7A                    	cmp     al, 'z'
  2109 00000B7F 779B                    	ja      short read_next_char
  2110 00000B81 3C61                    	cmp     al, 'a'
  2111 00000B83 7202                    	jb      short pass_capitalize
  2112 00000B85 24DF                    	and     al, 0DFh
  2113                                  pass_capitalize:
  2114 00000B87 88E3                    	mov     bl, ah 
  2115 00000B89 30E4                    	xor     ah, ah
  2116 00000B8B 8900                    	mov     [si+bx], ax
  2117 00000B8D B307                    	mov     bl, 7
  2118 00000B8F B40E                    	mov     ah, 0Eh
  2119 00000B91 CD10                    	int     10h
  2120 00000B93 EB87                    	jmp     short read_next_char
  2121                                  pass_escape:
  2122 00000B95 3C0D                    	cmp     al, 0Dh	; 13 ; ENTER
  2123 00000B97 7583                    	jne     short read_next_char
  2124                                  	;mov	ah, 0Eh
  2125                                  	;int	10h
  2126                                  	;mov	al, 0Ah
  2127                                  	;int	10h
  2128 00000B99 C3                      	retn
  2129                                  loc_escape:
  2130 00000B9A 3C1B                    	cmp     al, 1Bh	; 27 ; ESC
  2131 00000B9C 75F7                    	jne     short pass_escape
  2132 00000B9E F9                      	stc
  2133 00000B9F C3                      	retn
  2134                                  
  2135                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2136                                  ; 32 bit division
  2137                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2138                                  
  2139                                  div32:
  2140                                  	; DX_AX/CX
  2141                                  	; Result: DX_AX, BX (remainder)
  2142 00000BA0 89C3                    	mov	bx, ax
  2143                                  	;or	dx, ax ; * DX_AX = 0 ?
  2144                                  	;jz	short div32_retn ; yes, do not divide! 
  2145 00000BA2 89D0                    	mov	ax, dx
  2146 00000BA4 31D2                            xor	dx, dx
  2147 00000BA6 F7F1                            div	cx	; at first, divide DX
  2148                                  			; remainder is in DX 
  2149 00000BA8 93                      	xchg	ax, bx	; now quotient is in BX
  2150                                    			; and initial AX value is in AX
  2151 00000BA9 F7F1                    	div	cx	; now, DX_AX has been divided and
  2152                                  			; AX has quotient
  2153                                  			; DX has remainder
  2154 00000BAB 87D3                    	xchg	dx, bx	; finally, BX has remainder
  2155                                  ;div32_retn:
  2156 00000BAD C3                              retn
  2157                                  
  2158                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2159                                  ; Convert byte to decimal number
  2160                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2161                                  
  2162                                  bin_to_decimal:
  2163                                  	; INPUT: DS:SI = Target location
  2164                                  	;        DX_AX = Binary Number (Integer)
  2165                                  	; OUTPUT: Decimal char at DS:SI
  2166                                  	; 	 SI decremented after every division
  2167                                  	; 	 till AX<10.
  2168                                  	; CX, DX, BX will be changed.
  2169                                  	;
  2170 00000BAE B90A00                  	mov	cx, 10
  2171                                  btd_0:
  2172                                  	; DX_AX = Dividend
  2173                                  	; CX = Divisor
  2174 00000BB1 E8ECFF                  	call	div32
  2175                                  	; DX_AX = Quotient
  2176                                  	; BX = remainder
  2177 00000BB4 80C330                  	add	bl, '0'
  2178 00000BB7 881C                    	mov	[si], bl
  2179 00000BB9 21D2                    	and	dx, dx
  2180 00000BBB 7403                    	jz	short btd_2
  2181                                  btd_1:
  2182 00000BBD 4E                      	dec	si
  2183 00000BBE EBF1                    	jmp	short btd_0
  2184                                  btd_2:
  2185 00000BC0 09C0                    	or	ax, ax
  2186 00000BC2 75F9                    	jnz	short btd_1
  2187                                  
  2188 00000BC4 C3                      	retn
  2189                                  
  2190                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2191                                  ; Convert byte to hexadecimal number
  2192                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2193                                  
  2194                                  byte_to_hex:
  2195                                  bin_to_hex:
  2196                                  	; INPUT ->
  2197                                  	; 	AL = byte (binary number)
  2198                                  	; OUTPUT ->
  2199                                  	;	AX = hexadecimal string
  2200                                  	;
  2201 00000BC5 53                      	push	bx
  2202 00000BC6 31DB                    	xor	bx, bx
  2203 00000BC8 88C3                    	mov	bl, al
  2204 00000BCA C0EB04                  	shr	bl, 4
  2205 00000BCD 8A9F[4018]              	mov	bl, [bx+hexchrs]
  2206 00000BD1 86D8                    	xchg	bl, al
  2207 00000BD3 80E30F                  	and	bl, 0Fh
  2208 00000BD6 8AA7[4018]              	mov	ah, [bx+hexchrs]
  2209 00000BDA 5B                      	pop	bx	
  2210 00000BDB C3                      	retn
  2211                                  
  2212                                  ; ----------------------------------------------------------------------------
  2213                                  ; initialized data
  2214                                  ; ----------------------------------------------------------------------------
  2215                                  
  2216                                  align 2
  2217                                  
  2218                                  trdos386fc:
  2219 00000BDC [6807]                  	dw format_FAT16_fs
  2220 00000BDE 0000                    	dw 0
  2221                                  
  2222                                  ;volume_id:
  2223                                  ;	dd 0
  2224                                  
  2225                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2226                                  ;  FAT boot sector code
  2227                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2228                                  
  2229                                  RD_FAT12_hd_bs:
  2230 00000BE0 <bin 200h>              	incbin	'RD5HDBS1.BIN' ; 20/04/2024
  2231                                  RD_FAT16_hd_bs: 
  2232 00000DE0 <bin 200h>              	incbin	'RD5HDBS2.BIN' ; 20/04/2024
  2233                                  RD_FAT32_hd_bs: 
  2234 00000FE0 <bin 400h>              	incbin	'RD5HDBS3.BIN' ; 29/04/2024
  2235                                  
  2236                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2237                                  ;  messages
  2238                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2239                                  
  2240 000013E0 00                      lba:	db 0
  2241                                  
  2242 000013E1 00                      drv:	db 0
  2243                                  
  2244 000013E2 00                      sectors: db 0
  2245 000013E3 00                      	 db 0
  2246 000013E4 00                      heads:	 db 0
  2247 000013E5 00                      	 db 0
  2248 000013E6 0000                    cylinders: dw 0
  2249                                  
  2250                                  RD_Welcome:
  2251 000013E8 0D0A                    	db 0Dh, 0Ah
  2252 000013EA 526574726F20444F53-     	db 'Retro DOS v5 Hard Disk Partition Formatting Utility '
  2252 000013F3 207635204861726420-
  2252 000013FC 4469736B2050617274-
  2252 00001405 6974696F6E20466F72-
  2252 0000140E 6D617474696E672055-
  2252 00001417 74696C69747920     
  2253 0000141E 0D0A                    	db 0Dh, 0Ah
  2254 00001420 52444844464F524D20-     	db 'RDHDFORM v2.0.240715 (c) Erdogan TAN 2020-2024 '
  2254 00001429 76322E302E32343037-
  2254 00001432 313520286329204572-
  2254 0000143B 646F67616E2054414E-
  2254 00001444 20323032302D323032-
  2254 0000144D 3420               
  2255 0000144F 0D0A                    	db 0Dh,0Ah
  2256 00001451 0D0A                    	db 0Dh,0Ah
  2257 00001453 55736167653A207235-     	db 'Usage: r5hdform <drive> '
  2257 0000145C 6864666F726D203C64-
  2257 00001465 726976653E20       
  2258 0000146B 0D0A0D0A                	db 0Dh,0Ah, 0Dh, 0Ah
  2259 0000146F 4472697665206E616D-     	db 'Drive names: '
  2259 00001478 65733A20           
  2260 0000147C 0D0A                    	db 0Dh, 0Ah
  2261 0000147E 20686430206F722043-     	db ' hd0 or C: ..for primary dos partition on 1st disk '
  2261 00001487 3A202E2E666F722070-
  2261 00001490 72696D61727920646F-
  2261 00001499 732070617274697469-
  2261 000014A2 6F6E206F6E20317374-
  2261 000014AB 206469736B20       
  2262 000014B1 0D0A                    	db 0Dh, 0Ah
  2263 000014B3 20686431206F722044-     	db ' hd1 or D: ..for primary dos partition on 2nd disk '
  2263 000014BC 3A202E2E666F722070-
  2263 000014C5 72696D61727920646F-
  2263 000014CE 732070617274697469-
  2263 000014D7 6F6E206F6E20326E64-
  2263 000014E0 206469736B20       
  2264 000014E6 0D0A                    	db 0Dh, 0Ah
  2265 000014E8 206864322020202020-     	db ' hd2       ..for primary dos partition on 3rd disk '
  2265 000014F1 20202E2E666F722070-
  2265 000014FA 72696D61727920646F-
  2265 00001503 732070617274697469-
  2265 0000150C 6F6E206F6E20337264-
  2265 00001515 206469736B20       
  2266 0000151B 0D0A                    	db 0Dh, 0Ah
  2267 0000151D 206864332020202020-     	db ' hd3       ..for primary dos partition on 4th disk '
  2267 00001526 20202E2E666F722070-
  2267 0000152F 72696D61727920646F-
  2267 00001538 732070617274697469-
  2267 00001541 6F6E206F6E20347468-
  2267 0000154A 206469736B20       
  2268 00001550 0D0A                    	db 0Dh, 0Ah
  2269 00001552 0D0A                    	db 0Dh, 0Ah
  2270 00001554 204578616D706C653A-     	db ' Example: hdformat hd0 ', 0Dh, 0Ah
  2270 0000155D 206864666F726D6174-
  2270 00001566 20686430200D0A     
  2271 0000156D 0D0A                    	db 0Dh, 0Ah	
  2272 0000156F 4F7074696F6E616C3A-     	db 'Optional: hdformat -partition <drive> ', 0Dh, 0Ah
  2272 00001578 206864666F726D6174-
  2272 00001581 202D70617274697469-
  2272 0000158A 6F6E203C6472697665-
  2272 00001593 3E200D0A           
  2273 00001597 0D0A                    	db 0Dh, 0Ah
  2274 00001599 204578616D706C653A-     	db ' Example: hdformat -1 hd1 (partition 1 on 2nd disk) '
  2274 000015A2 206864666F726D6174-
  2274 000015AB 202D31206864312028-
  2274 000015B4 706172746974696F6E-
  2274 000015BD 2031206F6E20326E64-
  2274 000015C6 206469736B2920     
  2275 000015CD 0D0A                    	db 0Dh, 0Ah
  2276 000015CF 202020202020202020-     	db '          hdformat -2 hd0 (partition 2 on 1st disk) '
  2276 000015D8 206864666F726D6174-
  2276 000015E1 202D32206864302028-
  2276 000015EA 706172746974696F6E-
  2276 000015F3 2032206F6E20317374-
  2276 000015FC 206469736B2920     
  2277 00001603 0D0A                    	db 0Dh, 0Ah
  2278 00001605 0D0A                    	db 0Dh, 0Ah
  2279 00001607 4F7074696F6E733A20-     	db 'Options: 1  (partition 1) '
  2279 00001610 312020287061727469-
  2279 00001619 74696F6E20312920   
  2280 00001621 0D0A                    	db 0Dh, 0Ah
  2281 00001623 202020202020202020-     	db '         2  (partition 2) '
  2281 0000162C 322020287061727469-
  2281 00001635 74696F6E20322920   
  2282 0000163D 0D0A                    	db 0Dh, 0Ah
  2283 0000163F 202020202020202020-     	db '         3  (partition 3) '
  2283 00001648 332020287061727469-
  2283 00001651 74696F6E20332920   
  2284 00001659 0D0A                      	db 0Dh, 0Ah
  2285 0000165B 202020202020202020-     	db '         4  (partition 4) '
  2285 00001664 342020287061727469-
  2285 0000166D 74696F6E20342920   
  2286 00001675 0D0A00                  	db 0Dh, 0Ah, 0
  2287                                  
  2288                                  partition:  ; selected partition (0 = primary dos partition)
  2289 00001678 00                      	db 0
  2290                                  
  2291                                  RD_Format_warning:
  2292 00001679 0D0A                    	db 0Dh, 0Ah
  2293 0000167B 5741524E494E472021-     	db "WARNING ! ", 0Dh, 0Ah 
  2293 00001684 200D0A             
  2294 00001687 28496620796F752073-     	db "(If you say 'Yes', all of data in the primary DOS partition will be lost !) "
  2294 00001690 61792027596573272C-
  2294 00001699 20616C6C206F662064-
  2294 000016A2 61746120696E207468-
  2294 000016AB 65207072696D617279-
  2294 000016B4 20444F532070617274-
  2294 000016BD 6974696F6E2077696C-
  2294 000016C6 6C206265206C6F7374-
  2294 000016CF 20212920           
  2295                                  RD_Do_you_want:
  2296 000016D3 0D0A                    	db 0Dh, 0Ah
  2297 000016D5 0D0A                    	db 0Dh, 0Ah
  2298 000016D7 446F20796F75207761-     	db "Do you want to format DOS partition as Retro DOS FAT" 
  2298 000016E0 6E7420746F20666F72-
  2298 000016E9 6D617420444F532070-
  2298 000016F2 6172746974696F6E20-
  2298 000016FB 617320526574726F20-
  2298 00001704 444F5320464154     
  2299                                  fattype_str:
  2300 0000170B 3136206673203F2028-     	db "16 fs ? (Y/N) "
  2300 00001714 592F4E2920         
  2301 00001719 00                      	db 0
  2302                                  
  2303                                  _yes_str:
  2304 0000171A 59455320                	db 'YES '
  2305 0000171E 0D0A00                  	db 0Dh, 0Ah, 0
  2306                                  _no_str:
  2307 00001721 4E4F20                  	db 'NO '
  2308 00001724 0D0A00                  	db 0Dh, 0Ah, 0
  2309                                  
  2310                                  _msg_OK:
  2311                                  	;db	07h
  2312 00001727 0D0A                    	db	0Dh, 0Ah
  2313 00001729 4F4B2E                  	db	"OK."
  2314                                  RD_CRLF:
  2315 0000172C 0D0A00                  	db	0Dh, 0Ah, 0
  2316                                  
  2317                                  RD_PressKeyWhenReady:
  2318 0000172F 0D0A                    	db 0Dh, 0Ah
  2319 00001731 507265737320456E74-     	db 'Press Enter to format primary dos partition on hd'
  2319 0000173A 657220746F20666F72-
  2319 00001743 6D6174207072696D61-
  2319 0000174C 727920646F73207061-
  2319 00001755 72746974696F6E206F-
  2319 0000175E 6E206864           
  2320                                  RD_Drive:
  2321 00001762 3F2E2000                	db '?. ', 0
  2322                                  
  2323                                  RD_disk_NotReadyOrError:
  2324 00001766 0D0A                    	db 0Dh, 0Ah
  2325 00001768 4469736B206572726F-     	db 'Disk error or drive not ready ! '
  2325 00001771 72206F722064726976-
  2325 0000177A 65206E6F7420726561-
  2325 00001783 6479202120         
  2326 00001788 54727920616761696E-     zbyte:	db 'Try again ? (Y/N) '
  2326 00001791 203F2028592F4E2920 
  2327 0000179A 00                      	db 0
  2328                                  
  2329                                  RD_psize_defect:
  2330 0000179B 0D0A                    	db 0Dh, 0Ah
  2331 0000179D 4D4252207061727469-     	db 'MBR partition size defect ! '
  2331 000017A6 74696F6E2073697A65-
  2331 000017AF 206465666563742021-
  2331 000017B8 20                 
  2332 000017B9 0D0A                    	db 0Dh, 0Ah
  2333 000017BB 286C65737320746861-     	db '(less than the minimum number of sectors required) '
  2333 000017C4 6E20746865206D696E-
  2333 000017CD 696D756D206E756D62-
  2333 000017D6 6572206F6620736563-
  2333 000017DF 746F72732072657175-
  2333 000017E8 697265642920       
  2334 000017EE 00                      	db 0
  2335                                  
  2336                                  RD_fatp_notfound:
  2337 000017EF 0D0A                    	db 0Dh, 0Ah
  2338 000017F1 4D425220646F657320-     	db 'MBR does not contain '
  2338 000017FA 6E6F7420636F6E7461-
  2338 00001803 696E20             
  2339                                  a_p_d_p:
  2340 00001806 61207072696D617279-     	db 'a primary DOS partition ! '
  2340 0000180F 20444F532070617274-
  2340 00001818 6974696F6E202120   
  2341                                  fattype:
  2342 00001820 00                      	db 0
  2343                                  ;RetryCount:
  2344                                  ;	db 4
  2345                                  
  2346                                  ;error: db 0
  2347                                  
  2348                                  not_primary_dos_p:
  2349 00001821 0D0A                    	db 0Dh, 0Ah
  2350 00001823 53656C656374656420-     	db 'Selected partition is not '
  2350 0000182C 706172746974696F6E-
  2350 00001835 206973206E6F7420   
  2351 0000183D 00                      	db 0
  2352                                  
  2353                                  ;align 2
  2354 0000183E 90<rep 2h>              align 4
  2355                                  
  2356                                  hexchrs:
  2357 00001840 303132333435363738-     	db	'0123456789ABCDEF'
  2357 00001849 39414243444546     
  2358                                  
  2359                                  Cursor_Pos: ; dw 0
  2360                                  CHS_limit:  ; dword	 
  2361 00001850 0000                    	dw 0
  2362                                  	;dw 0
  2363                                  
  2364 00001852 A101                    sign:	dw 417	; magic word
  2365                                  
  2366                                  ;align 4 
  2367                                  
  2368                                  msg_sectors_crlf:
  2369 00001854 20736563746F72          	db	" sector"
  2370                                  msg_sectors_crlf_s:
  2371 0000185B 73                      	db	"s"
  2372 0000185C 0D0A00                  	db	0Dh, 0Ah, 0
  2373                                  
  2374                                  vname_length:
  2375 0000185F 00                      	db	0
  2376                                  
  2377                                  bs_oem_name:
  2378                                  	;db	'TRDOS2.0', 0
  2379                                  	; 28/10/2023
  2380 00001860 524554524F444F5300      	db	'RETRODOS', 0
  2381                                  
  2382 00001869 90                      align 2
  2383                                  
  2384                                  no_name:
  2385 0000186A 4E4F204E414D452020-     	db 	'NO NAME    ', 0
  2385 00001873 202000             
  2386                                  
  2387                                  Msg_Volume_Name:
  2388 00001876 0D0A                    	db	0Dh, 0Ah
  2389 00001878 0D0A                    	db	0Dh, 0Ah
  2390 0000187A 566F6C756D65204E61-     	db	"Volume Name: ", 0
  2390 00001883 6D653A2000         
  2391                                  
  2392                                  Msg_Volume_Serial:
  2393 00001888 566F6C756D65205365-     	db	"Volume Serial No: "
  2393 00001891 7269616C204E6F3A20 
  2394                                  Vol_Serial1:
  2395 0000189A 30303030                	db	"0000"
  2396 0000189E 2D                      	db	"-"
  2397                                  Vol_Serial2:
  2398 0000189F 30303030                	db	"0000"
  2399 000018A3 0D0A00                  	db	0Dh, 0Ah, 0
  2400                                  
  2401                                  msg_cluster_count:
  2402 000018A6 436C75737465722043-     	db	"Cluster Count: ", 0
  2402 000018AF 6F756E743A2000     
  2403                                  cluster_count_str:
  2404 000018B6 30303030303030          	db	"0000000"
  2405 000018BD 0D0A00                  	db	0Dh, 0Ah, 0
  2406                                  msg_formatting:
  2407 000018C0 466F726D617474696E-     	db	"Formatting ", 0
  2407 000018C9 672000             
  2408                                  format_percent_str:
  2409 000018CC 30303025                	db	"000%"
  2410 000018D0 00                      	db	0
  2411                                  
  2412                                  Msg_3dot_OK:
  2413 000018D1 2E2E2E                  	db	'...'
  2414                                  Msg_OK:
  2415 000018D4 204F4B2E                	db	' OK.'
  2416                                  CRLF:
  2417 000018D8 0D0A00                  	db	0Dh, 0Ah, 0
  2418                                  
  2419                                  Msg_Error:
  2420 000018DB 0D0A                    	db	0Dh, 0Ah
  2421 000018DD 4572726F72202120        	db	'Error ! '
  2422 000018E5 28                      	db	'('
  2423                                  error_code:
  2424 000018E6 3030                    	dw	3030h
  2425 000018E8 68                      	db	'h'
  2426 000018E9 2920                    	db	') '
  2427 000018EB 0D0A                    	db	0Dh, 0Ah
  2428 000018ED 00                      	db	0
  2429                                  
  2430                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2431                                  ;  initialized buffers
  2432                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2433                                  
  2434                                  HDFORMAT_SECBUFFER:
  2435 000018EE F6<rep 200h>            	times	512 db 0F6h
  2436                                  HDFORMAT_FSINFO_BUFF:
  2437 00001AEE 52526141                	dd	41615252h  ; FSI_LeadSig
  2438 00001AF2 00<rep 1E0h>            	times	480 db 0   ; FSI_Reserved1
  2439 00001CD2 72724161                	dd	61417272h  ; FSI_StrucSig
  2440 00001CD6 FFFFFFFF                	dd	0FFFFFFFFh ; FSI_Free_Count
  2441 00001CDA 02000000                	dd	000000002h ; FSI_Nxt_Free
  2442 00001CDE 00<rep Ch>              	times	12 db 0	   ; FSI_Reserved2
  2443 00001CEA 000055AA                	dd	0AA550000h ; FSI_TrailSig
  2444                                  
  2445                                  ;SizeOfFile equ $-100
  2446                                  
  2447                                  ; ----------------------------------------------------------------------------
  2448                                  ; uninitialized data
  2449                                  ; ----------------------------------------------------------------------------
  2450                                  
  2451                                  bss_start:
  2452                                  
  2453                                  ABSOLUTE bss_start
  2454                                  
  2455 00001CEE ????                    alignb 4
  2456                                  
  2457 00001CF0 ??                      fsID:	resb 1
  2458 00001CF1 ??                      rw:	resb 1
  2459 00001CF2 ????                    csize:	resw 1 ; heads*spt (sectors per cylinder)
  2460                                  
  2461 00001CF4 ????????                dosp_start: resd 1 ; start sector of the (primary) dos partition
  2462 00001CF8 ????????                dosp_size:  resd 1 ; partition size in sectors
  2463                                  
  2464                                  MBR:
  2465                                  bootsector:
  2466                                  ; 	resb 512
  2467                                  HDFORMAT_FATBUFFER:
  2468                                  HDFORMAT_EMPTY_BUFF:
  2469 00001CFC <res 200h>              	resb 512
  2470                                  
  2471                                  ;HDFORMAT_FATBUFFER:
  2472                                  ;HDFORMAT_EMPTY_BUFF:
  2473                                  ;	resb 512
  2474                                  
  2475 00001EFC ????????                data_start:	resd 1
  2476 00001F00 ????????                data_sectors:	resd 1
  2477 00001F04 ????????                cluster_count:	resd 1
  2478 00001F08 ????                    root_dir_secs:	resw 1
  2479 00001F0A ????                    format_percent: resw 1
  2480 00001F0C ??                      prev_percent:	resb 1
  2481 00001F0D ??                      rsvdbyte:	resb 1
  2482                                  
  2483 00001F0E ????                    old_sp:		resw 1
  2484                                  
  2485 00001F10 <res Ch>                StrVolumeName:	resb 12
  2486                                  
  2487                                  end_bss:
