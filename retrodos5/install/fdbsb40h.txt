     1                                  ; ****************************************************************************
     2                                  ; FDBSB40H.ASM - Retro DOS v5.0 - FAT12 FD BOOT SECTOR (3 1/2", 2.88 MB)
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; Last Update: 20/04/2024
     5                                  ; ----------------------------------------------------------------------------
     6                                  ; Beginning: 20/04/2024
     7                                  ; ----------------------------------------------------------------------------
     8                                  ; Assembler: NASM version 2.15 (fdbsb40h.s)
     9                                  ; ----------------------------------------------------------------------------
    10                                  ; Retro DOS Operating System Project by ERDOGAN TAN (Beginning: 04/02/2018)
    11                                  ; ----------------------------------------------------------------------------
    12                                  ; Modified from Retro DOS v2.0-v4.2 boot sector code, 'fdbs2880.s', 25/10/2023
    13                                  ; ****************************************************************************
    14                                  
    15                                  ; fdbs2880.s - 25/10/2023
    16                                  
    17                                  notvalidfmask   equ	0018h
    18                                  
    19                                  root_dir_buff   equ	7E00h
    20                                  
    21                                  rts_segment     equ	1000h  ; Retro DOS 2.0 ; 27/03/2018
    22                                  
    23                                  ;rts_segment	equ	0060h  ; Retro DOS 1.0
    24                                  
    25                                  FAT_Buffer      equ	7E00h
    26                                  
    27                                  ; 24/10/2023
    28                                  root_FAT_buffer equ	7E00h
    29                                  
    30                                  [BITS 16]
    31                                  [ORG 7C00h]
    32                                  
    33 00000000 EB46                    		jmp	short BS_01
    34 00000002 90                      		nop
    35                                  
    36                                  ; BootSector Identification (Data) Block
    37                                  
    38 00000003 524554524F444F53        bsOemName:      db 'RETRODOS'          
    39 0000000B 0002                    bsBytesPerSec:  dw 512
    40 0000000D 02                      bsSecPerClust:  db 2
    41 0000000E 0100                    bsResSectors:   dw 1
    42 00000010 02                      bsFATs:         db 2
    43 00000011 F000                    bsRootDirEnts:  dw 240
    44 00000013 8016                    bsSectors:      dw 5760
    45 00000015 F0                      bsMedia:        db 0F0h
    46 00000016 0900                    bsFATsecs:      dw 9
    47 00000018 2400                    bsSecPerTrack:  dw 36
    48 0000001A 0200                    bsHeads:        dw 2
    49 0000001C 0000                    bsHidden1:      dw 0
    50 0000001E 0000                    bsHidden2:      dw 0
    51 00000020 80160000                bsHugeSectors:  dd 5760
    52 00000024 00                      bsDriveNumber:  db 0
    53 00000025 00                      bsReserved1:    db 0
    54 00000026 29                      bsBpbSignature: db 29h		 
    55 00000027 00000000                bsVolumeID:     dd 0
    56 0000002B 4E4F204E414D452020-     bsVolumeLabel:  db 'NO NAME    '
    56 00000034 2020               
    57 00000036 4641543132202020        bsFileSysType:  db 'FAT12   '
    58                                  ;;bsReserved2:	dw 'v2'	; Retro DOS 2.0 ; 27/03/2018
    59                                  ;bsReserved2:	dw 'v4'	; Retro DOS 4.0 ; 24/10/2023
    60 0000003E 7635                    bsReserved2:	dw 'v5'	; Retro DOS 5.0 ; 20/04/2024
    61                                  ; Retro DOS 1.0 Extensions
    62                                  ;bsReserved2:	dw 'v1'
    63 00000040 2200                    bsDataStart:    dw 34
    64 00000042 1300                    bsRootDirStart:	dw 19
    65 00000044 0F00                    bsRootDirSects:	dw 15
    66                                  
    67                                  ; 24/10/2023
    68 00000046 1000                    bsDirEntsPerSec: dw 16        
    69                                  
    70                                  BS_01:          
    71 00000048 8CC8                    		mov	ax, cs
    72 0000004A 8ED8                    		mov	ds, ax
    73 0000004C 8EC0                    		mov	es, ax
    74                                  		
    75 0000004E FA                      		cli
    76 0000004F 8ED0                    		mov	ss, ax ; 0
    77 00000051 BCFEFF                  		mov	sp, 0FFFEh
    78 00000054 FB                      		sti
    79                                  
    80                                  		; 24/10/2023
    81                                  		; check for 2.88MB only
    82                                  		; (sectors per cluster value must be 2)
    83                                  		; ((it is necessary for accessing all of 5760 sectors))
    84                                  		;
    85                                  		;cmp	byte [bsSecPerClust], 2	; !*+
    86                                  		;jne	short BS_04_ERR	; write "replace disk .." message
    87                                  
    88                                  		; 24/10/2023
    89                                  		;mov	bp, sp
    90                                  
    91                                  		; 25/10/2023
    92                                  		; (DL = boot drive number -from INT 19h-
    93                                  		; DL value is not changed in this boot sector code.
    94                                  		; No need to save boot drive number.)
    95                                  		;
    96                                  		; overwrite fd drive number !
    97                                  		;mov	[bsDriveNumber], dl 	; drive number from INT 19h
    98                                  ;BS_02:
    99 00000055 A1[4200]                		mov	ax, [bsRootDirStart]	; Root Dir Location
   100                                  		; 24/10/2023
   101 00000058 8B2E[4400]              		mov	bp, [bsRootDirSects]
   102                                  BS_02:
   103 0000005C E88100                  		call	fd_read_1
   104 0000005F 7227                    		jc	short BS_05		; Disk read error message
   105                                  
   106                                  		; 24/10/2023
   107                                  		;;mov	ax, 19			; Root Dir Location
   108                                  		;mov	ax, [bsRootDirStart]
   109                                  		;;mov	cx, 15			; Root Directory Sectors
   110                                  		;mov	cx, [bsRootDirSects]
   111                                  		;mov	bx, root_dir_buff       ; Destination offset = 7E00h
   112                                  		;mov	si, bx
   113                                  		;call	fd_read
   114                                  		;jc	short BS_04		; Disk read error message
   115                                  
   116                                  		; 24/10/2023
   117                                  		; ax = next root directory sector
   118                                  
   119                                  		; 24/10/2023
   120                                  		;mov	bx, 240
   121                                  		;mov	bx, [bsRootDirEnts]	; Number of root dir entries
   122 00000061 8B1E[4600]              		mov	bx, [bsDirEntsPerSec]
   123 00000065 BE007E                  		mov	si, root_dir_buff
   124                                  BS_03:          
   125                                  		; 24/10/2023
   126 00000068 383C                    		cmp	byte [si], bh ; 0
   127                                  		;cmp	byte [si], 0		; Is it null entry?
   128 0000006A 7417                    		je	short BS_04_ERR		; Jump if zero ( = )
   129 0000006C B90B00                  		mov	cx, 11			; Size of file/directory name
   130 0000006F 56                      		push	si
   131 00000070 BF[EB01]                		mov	di, rtsfilename   
   132 00000073 F3A6                    		repe	cmpsb			; Repeat if ZF = 1, CX > 0
   133                                  						; Cmp byte DS:SI with ES:DI
   134 00000075 5E                      		pop	si
   135 00000076 741C                    		je	short BS_07		; If the file name found
   136 00000078 4B                      		dec	bx		    
   137 00000079 7405                    		jz	short BS_04		; Jump if no next entry
   138 0000007B 83C620                  		add	si, 32			; To next directory entry
   139 0000007E EBE8                    		jmp	short BS_03             ; Jump for next sector
   140                                  BS_04:
   141                                  		; 24/10/2023
   142                                  		;dec	word [bsRootDirSects]
   143                                  		;jz	short BS_04_ERR
   144                                  		;inc	word [bsRootDirStart]
   145                                  		;jmp	short BS_02
   146 00000080 4D                      		dec	bp
   147 00000081 75D9                    		jnz	short BS_02
   148                                  BS_04_ERR:
   149 00000083 BE[9601]                		mov	si, Replace_Msg
   150 00000086 EB03                    		jmp	short BS_06
   151                                  BS_05:      
   152 00000088 BE[8E01]                		mov	si, Error_Msg
   153                                  BS_06:          
   154 0000008B E83700                  		call	print_msg
   155                                  
   156 0000008E 31C0                    		xor	ax, ax
   157 00000090 CD16                    		int	16h			; BIOS Service func ( ah ) = 0
   158                                  						; Read next kbd char
   159                                  						; AH-scan code AL-char code
   160 00000092 CD19                    		int	19h			; Reboot
   161                                  
   162                                  BS_07:
   163                                  		;mov	al, [si+0Bh]		; Move attributes byte to BL
   164                                  		;and	al, notvalidfmask       ; Is it a file, really?
   165                                  		; 24/10/2023
   166 00000094 F6440B18                		test	byte [si+0Bh], notvalidfmask
   167 00000098 75E9                    		jnz	short BS_04_ERR		; Jump if not
   168 0000009A 8B441A                  		mov	ax, [si+1Ah]		; First cluster of the file
   169 0000009D 83F802                  		cmp	ax, 2			; Start cluster
   170 000000A0 72E6                    		jb	short BS_05
   171                                  		
   172                                  		;mov	[bsReserved2], ax	; Save the first cluster
   173                                  		; 24/10/2023
   174 000000A2 50                      		push	ax
   175                                  
   176                                  		; Load  RTS (Kernel) file
   177 000000A3 BE[C801]                		mov	si, Loading_Msg
   178 000000A6 E81C00                  		call	print_msg
   179                                      
   180                                  		; 24/10/2023
   181                                  		;; Load FAT
   182                                  		;;mov	ax, 1			; FAT Location
   183                                  		;mov	ax, [bsResSectors]
   184                                  		;;mov	cx, 9			; FAT Sectors
   185                                  		;mov	cx, [bsFATsecs]
   186                                  		;mov	bx, FAT_Buffer    
   187                                  		;call	fd_read
   188                                  		;jc	short BS_05
   189                                  		
   190                                  		; 24/10/2023
   191                                  		;; Load  RTS (Kernel) file
   192                                  		;mov	si, Loading_Msg
   193                                  		;call	print_msg
   194                                  
   195 000000A9 58                      		pop	ax
   196                                  		;mov	ax, [bsReserved2]	; The First cluster
   197 000000AA BB0010                  		mov	bx, rts_segment
   198 000000AD 8EC3                    		mov	es, bx
   199 000000AF 31DB                    		xor	bx, bx
   200 000000B1 E86500                  		call	load_file
   201 000000B4 72CA                    		jc	short BS_04
   202                                  
   203                                  		; Launch RTS (Kernel)
   204                                     		;mov	ax, es
   205                                  		;cli
   206                                  		;mov	ss, ax
   207                                  		;mov	sp, 0FFFEh
   208                                  		;sti
   209                                  		;mov	dl, [bsDriveNumber]
   210                                  		;mov	ax, rts_segment ; 60h
   211                                  		;mov	ds, ax
   212                                  		;mov	es, ax
   213                                               
   214 000000B6 BD007C                  		mov	bp, 7C00h
   215                                  
   216                                  		; Retro DOS 2.0 ; 27/03/2018
   217 000000B9 8A36[1500]              		mov	dh, [bsMedia]
   218 000000BD A1[1300]                		mov	ax, [bsSectors] ; 5760 sectors, 2.88 MB
   219                                  
   220 000000C0 EA00000010              		jmp	rts_segment:0
   221                                  
   222                                  		;db	0EAh
   223                                  		;dw	0
   224                                  		;dw	rts_segment
   225                                  
   226                                  print_msg:
   227                                  BS_08:
   228 000000C5 AC                      		lodsb				; Load byte at DS:SI to AL
   229 000000C6 20C0                    		and	al, al            
   230 000000C8 7415                    		jz	short BS_10		; If AL = 00h then stop
   231                                  
   232 000000CA B40E                    		mov	ah, 0Eh
   233 000000CC BB0700                  		mov	bx, 07h             
   234 000000CF CD10                    		int	10h			; BIOS Service func ( ah ) = 0Eh
   235                                  						; Write char as TTY
   236                                  						; AL-char BH-page BL-color
   237 000000D1 EBF2                    		jmp	short BS_08
   238                                  
   239                                  BS_09:	
   240                                  		; 24/10/2023   
   241 000000D3 FECD                    		dec	ch
   242                                  		;dec	byte [RetryCount]
   243 000000D5 7408                    		jz	short BS_10 ; cf = 1
   244                                  
   245                                  		; 24/10/2023
   246                                  		;; Reset disk system
   247                                  		;push	ax
   248                                  		;xor	ah, ah
   249                                  		;;mov	dl, [bsDriveNumber]
   250                                  		;int	13h
   251                                  		;pop	ax
   252                                  		;jnc	short BS_12
   253                                  
   254                                  		; 24/10/2023
   255 000000D7 50                      		push	ax
   256 000000D8 31C0                    		xor	ax, ax 
   257                                  		; ah = 0 ; INT 13h reset function
   258 000000DA CD13                    		int	13h
   259 000000DC 58                      		pop	ax
   260 000000DD 7308                    		jnc	short BS_11
   261                                  BS_10:
   262 000000DF C3                      		retn
   263                                   
   264                                  fd_read_1:
   265                                  		; 24/10/2023
   266 000000E0 B101                    		mov	cl, 1	; read 1 sector (only)
   267 000000E2 BB007E                  		mov	bx, root_FAT_buffer ; *-* ; 7E00h
   268                                  fd_read_2:
   269                                  ;fd_read:
   270                                  		; Only for FAT12 Floppy Disks
   271                                  		
   272                                  		; 24/10/2023
   273 000000E5 B504                    		mov	ch, 4
   274                                  		;mov	byte [RetryCount], 4
   275                                  BS_11:
   276 000000E7 51                      		push	cx
   277 000000E8 50                      		push	ax			; PHYSICAL ADRESS CALCULATION
   278                                  		;mov	cl, 36			; Sectors per track
   279 000000E9 8A0E[1800]              		mov	cl, [bsSecPerTrack]
   280 000000ED F6F1                    		div	cl		      
   281 000000EF 88E1                    		mov	cl, ah		  	; Sector (zero based)
   282 000000F1 FEC1                    		inc	cl			; To make it 1 based
   283                                  		;xor	ah, ah
   284                                  		;mov	dl, 2			; Heads 
   285                                  		;div	dl
   286                                  						; AL=cyl, AH=head, CL=sector
   287                                  		;mov	dh, ah
   288 000000F3 28F6                    		sub	dh, dh
   289 000000F5 D0E8                    		shr	al, 1
   290 000000F7 80D600                  		adc	dh, 0
   291 000000FA 88C5                    		mov	ch, al            
   292                                  
   293                                  		;mov	dl, [bsDriveNumber]	; (!DL has not been changed!)
   294                                  		; 24/10/2023
   295                                  		; dl = [bsDriveNumber]
   296                                  
   297 000000FC B80102                  		mov	ax, 0201h
   298                                  		
   299 000000FF CD13                    		int	13h			; BIOS Service func ( ah ) = 2
   300                                  						; Read disk sectors
   301                                  						; AL-sec num CH-track CL-sec
   302                                  						; DH-head DL-drive ES:BX-buffer
   303                                  						; CF-flag AH-stat AL-sec read
   304 00000101 58                      		pop	ax			
   305 00000102 59                      		pop	cx
   306 00000103 72CE                    		jc	short BS_09
   307 00000105 40                      		inc	ax
   308                                  			
   309                                  		;add	bx, 512
   310 00000106 80C702                  		add	bh, 2
   311 00000109 7309                    		jnc	short BS_12
   312 0000010B 53                      		push	bx
   313 0000010C 8CC3                    		mov	bx, es
   314                                  		;add	bx, 1000h
   315 0000010E 80C710                  		add	bh, 10h
   316 00000111 8EC3                    		mov	es, bx
   317 00000113 5B                      		pop	bx
   318                                  BS_12:
   319                                  		;dec	cx
   320 00000114 FEC9                    		dec	cl
   321 00000116 75CD                    		jnz	short fd_read_2	; 24/10/2023
   322 00000118 C3                      		retn
   323                                  
   324                                  load_file:
   325                                  		; ES:BX = File Buffer
   326                                  		; AX = First Cluster Number
   327                                  		; Only for FAT12 Floppy Disks
   328                                  
   329                                  		; 24/10/2023
   330                                  		; bp = 0FFFEh (sp)
   331                                  		; 24/10/2023
   332 00000119 89E5                    		mov	bp, sp ; 0FFFEh
   333                                  BS_13:
   334                                  		;mov	[File_Cluster], ax
   335                                  		; 24/10/2023
   336 0000011B 89C7                    		mov	di, ax ; file (current) cluster
   337                                  
   338 0000011D 48                      		dec	ax			; First cluster is cluster 2
   339 0000011E 48                      		dec	ax
   340                                  		
   341                                  		; 24/10/2023				
   342                                  		;mov	cl, [bsSecPerClust]
   343                                  		;; ch = 0
   344                                  		;test	cl, 2
   345                                  		;jz	short BS_14
   346                                  
   347                                  		; 24/10/2023               
   348 0000011F B102                    		mov	cl, 2	; !*+		; Sector count
   349                                  						; (sectors per cluster)
   350 00000121 D1E0                    		shl	ax, 1
   351                                  
   352                                  		;;add	ax, 12			; Beginning sector of Data
   353                                  BS_14:
   354 00000123 0306[4000]              		add	ax, [bsDataStart]
   355                                  		;call	fd_read
   356                                  		; 24/10/2023
   357 00000127 E8BBFF                  		call	fd_read_2
   358 0000012A 7242                    		jc	short BS_16
   359                                  get_next_cluster:
   360                                  		; 24/10/2023
   361                                  		;push	bx
   362                                  		;mov	ax, [File_Cluster]
   363                                  		;mov	bx, ax
   364                                  		;; Multiply by 3
   365                                  		;;mov	dx, 3
   366                                  		;;mul	dx
   367                                                 	;add	ax, ax
   368                                  		;add	ax, bx
   369                                  
   370                                  		; 24/10/2023
   371 0000012C 52                      		push	dx
   372 0000012D 31D2                    		xor	dx, dx ; 0	
   373 0000012F 89F8                    		mov	ax, di ; file (current) cluster
   374 00000131 D1E8                    		shr	ax, 1  ; Divide by 2
   375 00000133 01F8                    		add	ax, di ; AX * 1.5 = AX + AX/2
   376                                  		; dx = 0
   377                                  		; ax = byte offset in the FAT
   378 00000135 F736[0B00]              		div	word [bsBytesPerSec]
   379                                  		; ax = FAT sector (index) number
   380                                  		; dx = offset in FAT sector buffer
   381 00000139 89D6                    		mov	si, dx
   382 0000013B 5A                      		pop	dx		
   383                                  
   384 0000013C 39E8                    		cmp	ax, bp ; previous FAT sector in the FAT buffer
   385 0000013E 7405                    		je	short SplitChk ; no need to read it again
   386 00000140 E83100                  		call	NextFATSec1 ; 25/10/2023
   387 00000143 7229                            	jc	short BS_16
   388                                  SplitChk:
   389 00000145 B9FF7D                  		mov	cx, FAT_Buffer-1
   390 00000148 46                      		inc	si
   391 00000149 3B36[0B00]              		cmp	si, [bsBytesPerSec] ; 512 ?
   392 0000014D 750F                    		jne	short ClusterOk ; jb short ClusterOk
   393                                  		
   394                                  		; 24/10/2023
   395 0000014F 01CE                    		add	si, cx
   396                                  		;lodsb
   397 00000151 8A34                    		mov	dh, [si]
   398 00000153 89CE                    		mov	si, cx
   399                                  		;mov	[si], al ; mov [7DFFh], al
   400 00000155 8834                    		mov	[si], dh
   401                                  
   402                                  		; read next sector and then
   403                                  		; use first byte of the next sector (as AH)
   404                                  		
   405                                  		; 24/10/2023
   406                                  		;;mov	ax, bp	; 2 byte opcode
   407                                  		;xchg	ax, bp  ; 1 byte opcode
   408                                  		;inc	ax ; next FAT sector
   409                                  
   410                                  		; 25/10/2023
   411 00000157 45                      		inc	bp
   412                                  
   413 00000158 E81F00                  		call	NextFATSec2 ; 25/10/2023
   414 0000015B 7303                    		jnc	short EvenOdd  ; si = 7DFFh
   415 0000015D C3                      		retn
   416                                  ClusterOk:
   417                                  		; si = 1 to 511
   418                                  		; cx = FAT_Buffer-1
   419 0000015E 01CE                    		add	si, cx
   420                                  EvenOdd:
   421 00000160 AD                      		lodsw		
   422                                  
   423                                  		; di = current cluster
   424 00000161 D1EF                    		shr	di, 1
   425 00000163 730A                    		jnc	short BS_17
   426 00000165 B104                    		mov	cl, 4
   427 00000167 D3E8                                   	shr	ax, cl
   428                                  
   429                                  		; 24/10/2023
   430                                  		;shr	ax, 1 ; Divide by 2
   431                                  		;xchg	bx, ax
   432                                  		;; BX = Buffer Byte Offset
   433                                  		;; AX = Current Cluster
   434                                  		;mov	ax, [FAT_Buffer+bx]
   435                                  		;jnc	short BS_17
   436                                  		;shr	ax, 4
   437                                  BS_15:
   438                                  		; 24/10/2023
   439                                  		;pop	bx
   440                                  		
   441 00000169 3DF70F                  		cmp	ax, 0FF7h
   442 0000016C 72AD                    		jb	short BS_13	; 25/10/2023
   443                                  		; EOCC (kernel file has been loaded successfully)
   444                                  BS_16:
   445 0000016E C3                      		retn
   446                                  BS_17:
   447 0000016F 80E40F                  		and	ah, 0Fh
   448 00000172 EBF5                    		jmp	short BS_15
   449                                  
   450                                  		; 24/10/2023
   451                                  NextFATSec1:
   452 00000174 89C5                    		mov	bp, ax
   453                                  		; 25/10/2023
   454 00000176 0306[0E00]              		add	ax, [bsResSectors]	; FAT sector LBA
   455                                  NextFATSec2:
   456 0000017A 06                      		push	es ; +  ; kernel file buffer segment
   457 0000017B 53                      		push	bx ; ++ ; save kernel file buffer address
   458                                  
   459 0000017C 1E                      		push	ds
   460 0000017D 07                      		pop	es
   461                                  
   462                                  		; 24/10/2023 ; *-*
   463                                  		;mov	bx, FAT_Buffer	
   464                                  
   465                                  		; 25/10/2023
   466                                  		;add	ax, [bsResSectors]	; FAT sector LBA
   467                                  		;mov	cl, 1			; Read 1 FAT Sector
   468 0000017E E85FFF                  		call	fd_read_1
   469 00000181 5B                       		pop	bx ; ++ ; restore kernel file buffer address
   470 00000182 07                      		pop	es ; +  ; kernel file buffer segment
   471                                  
   472 00000183 C3                      		retn
   473                                  
   474                                  		; 24/10/2023 ; Filler
   475 00000184 0000                    		dw	0
   476 00000186 1400                    		dw	20
   477 00000188 0400                    		dw	4
   478 0000018A E807                    		dw	2024	; 20/04/2024
   479 0000018C 0000                    		dw	0
   480                                  Error_Msg:
   481 0000018E 0D0A                    		db	0Dh, 0Ah
   482                                  		;db	'DOS Kernel Loading Error!'
   483                                  		; 24/10/2023
   484 00000190 4572726F7221            		db	'Error!'
   485                                  Replace_Msg:    
   486 00000196 0D0A                    		db	0Dh, 0Ah
   487 00000198 5265706C6163652074-     		db	'Replace the disk and press any key to reboot.'
   487 000001A1 6865206469736B2061-
   487 000001AA 6E6420707265737320-
   487 000001B3 616E79206B65792074-
   487 000001BC 6F207265626F6F742E 
   488 000001C5 0D0A00                  		db	0Dh, 0Ah,0
   489                                  
   490                                  Loading_Msg:    
   491 000001C8 0D0A                    		db	0Dh, 0Ah
   492                                  		;db	"Loading Kernel MSDOS.SYS ..."
   493 000001CA 4C6F6164696E67204B-     		db	"Loading Kernel PCDOS.SYS ..." ; 20/04/2024
   493 000001D3 65726E656C20504344-
   493 000001DC 4F532E535953202E2E-
   493 000001E5 2E                 
   494 000001E6 0D0A00                  		db	0Dh, 0Ah, 0
   495                                  
   496                                  ;File_Cluster: 
   497 000001E9 A101                    		dw	417	; (filler)
   498                                  
   499                                  rtsfilename:
   500                                  		;db	'MSDOS   SYS'
   501 000001EB 5043444F5320202053-     		db	"PCDOS   SYS"	; 20/04/2024
   501 000001F4 5953               
   502 000001F6 00                      		db	0
   503                                  
   504 000001F7 00<rep 7h>              		times	510 - ($ - $$) db 0
   505                                  
   506 000001FE 55AA                    bootsignature:  db	55h, 0AAh
