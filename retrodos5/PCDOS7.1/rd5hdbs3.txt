     1                                  ; ****************************************************************************
     2                                  ; RD5HDBS3.ASM - Retro DOS v5 FAT 32 (Hard Disk) FS BOOT SECTOR code
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; Last Update: 29/04/2024
     5                                  ; ----------------------------------------------------------------------------
     6                                  ; Beginning: 27/04/2024
     7                                  ; ----------------------------------------------------------------------------
     8                                  ; Assembler: NASM version 2.15
     9                                  ; ----------------------------------------------------------------------------
    10                                  ;	    ((nasm rd5hdbs3.s -l rd5hdbs3.txt -o RD5HDBS3.BIN))
    11                                  ; ----------------------------------------------------------------------------
    12                                  ; Modified from 'fat32_bs.s' TRDOS 386 v2 FAT32 hd boot sector source code
    13                                  ; by Erdogan Tan (31/01/2028). 	
    14                                  ; ----------------------------------------------------------------------------
    15                                  ; incbin "RD5HDBS3.BIN" (in 'rd5hdi3.s')
    16                                  
    17                                  ; fat32_bs.s 
    18                                  ; ****************************************************************************
    19                                  ; Turkish Rational DOS
    20                                  ; Operating System Project v2.0 by ERDOGAN TAN (Beginning: 04/01/2016)
    21                                  ;
    22                                  ; This boot sector code occupies 2 sectors.. as below:
    23                                  ; * Boot Sector 1:
    24                                  ; The 1st 512 bytes of this boot code will be on sector 0 (of the partition).
    25                                  ; * Boot Sector 2:
    26                                  ; Remain bytes of this boot code will be sector 2 (just after FSINFO sector)
    27                                  ; of the (FAT32) partition.	
    28                                  ;
    29                                  ; NOTE:	This code has some tricks and TRDOS 386 specific modifications
    30                                  ; which are not a part of original Microsoft Windows (XP) FAT32 BS code.
    31                                  ; (Purpose of TRDOS 386 specific modifications and tricks is
    32                                  ; to load 'TRDOS386.SYS' kernel file as easy and as correct,
    33                                  ; without affecting FAT32 FS recognization for other operating systems.) 
    34                                  ;
    35                                  ; Note: Modifications (on WINDOWS 98 FAT32 boot sector code)
    36                                  ;	are based on WINDOWS XP FAT32 boot sector(s) code (2 sectors), 
    37                                  ;	which is disassembled by Erdogan Tan (12/12/2017)
    38                                  ;	by using BINFILEHEX (Erdogan Tan) & IDA PRO FREE (Hex-Rays SA)
    39                                  ;	programs.
    40                                  ;
    41                                  ; Derived from Microsoft WINDOWS 98 FAT 32 boot sector code
    42                                  ; 	  which is edited/disassembled by Erdogan Tan (04/10/2003).
    43                                  ;
    44                                  ; Derived from 'trfdbs.s' TRDOS 386 FAT12 (3.5") floppy disk boot sector
    45                                  ; source code by Erdogan Tan (06/07/2017).
    46                                  ; ****************************************************************************
    47                                  ; incbin "FAT32_BS.BIN" (in 'hdimage.s' & 'hdformat.s')
    48                                  
    49                                  rts_segment     equ	1000h
    50                                  
    51                                  [BITS 16]
    52                                  [ORG 7C00h]
    53                                  BS_jmpBoot:
    54 00000000 EB58                                    jmp     short loc_5A  ; jmp short start
    55                                  BS_jmpBoot_nop:
    56 00000002 90                                      nop
    57                                  
    58                                  ; BootSector Identification (Data) Block
    59                                  BS_OEMName:
    60 00000003 524554524F444F53        		db	'RETRODOS'	; bp+3
    61 0000000B 0002                    BPB_BytesPerSec: dw	512		; bp+11
    62 0000000D 08                      BPB_SecPerClus:	db	8		; bp+13
    63 0000000E 2000                    BPB_RsvdSecCnt:	dw	32		; bp+14
    64 00000010 02                      BPB_NumFATs:	db	2		; bp+16
    65 00000011 0000                    BPB_RootEntCnt: dw	0		; bp+17
    66 00000013 0000                    BPB_TotSec16:	dw	0		; bp+19
    67 00000015 F8                      BPB_Media:	db	0F8h		; bp+21
    68 00000016 0000                    BPB_FATSz16:	dw	0		; bp+22
    69 00000018 3F00                    BPB_SecPerTrk:	dw	63		; bp+24
    70 0000001A FF00                    BPB_NumHeads:	dw	255		; bp+26
    71 0000001C 01000000                BPB_HiddSec:	dd	1		; bp+28
    72 00000020 00000000                BPB_TotSec32:	dd	0		; bp+32
    73 00000024 00000000                BPB_FATSz32:	dd	0		; bp+36
    74 00000028 0000                    BPB_ExtFlags:	dw	0		; bp+40
    75 0000002A 0000                    BPB_FSVer:	dw	0		; bp+42
    76 0000002C 02000000                BPB_RootClus:	dd	2		; bp+44
    77 00000030 0100                    BPB_FSInfo:	dw	1		; bp+48
    78 00000032 0600                    BPB_BkBootSec:	dw	6		; bp+50
    79 00000034 00<rep Ch>              BPB_Reserved:	times	12 db 0		; bp+52
    80 00000040 80                      BS_DrvNum:	db	80h		; bp+64
    81 00000041 00                      BS_Reserved1:	db	0		; bp+65
    82 00000042 29                      BS_BootSig:	db	29h		; bp+66
    83 00000043 00000000                BS_VolID:	dd	0		; bp+67
    84 00000047 4E4F204E414D452020-     BS_VolLab:	db	'NO NAME    '	; bp+71
    84 00000050 2020               
    85 00000052 4641543332202020        BS_FilSysType:	db	'FAT32   '	; bp+82
    86                                  
    87                                  start:
    88                                  loc_5A:
    89 0000005A 09C0                    		OR	AX, AX ; db 09h, C0h  (db 0Bh, C0h)
    90                                  			 ; TRDOS 386 (FAT32 BS) LBA check trick!!
    91                                  
    92 0000005C BD007C                  		mov	bp, 7C00h
    93                                  
    94                                  		; ((WINDOWS XP FAT 32 boot sector code checks Masterboot
    95                                  		; partition table for partition type, if it is 0Ch 
    96                                  		; -FAT32 LBA-, the boot code changes 90h at BS offset 2
    97                                  		; to 0Eh. Then a 0Eh at this addr is used as identifier,
    98                                  		; for reading disk sector by using INT 13h -LBA read-
    99                                  		; extension.))
   100                                  
   101 0000005F 3DA101                  		cmp	ax, 417  ; If AX=417, the masterboot sector
   102                                  				 ; has a SINGLIX FS (& TRDOS 386)
   103                                  				 ; masterboot code; and...
   104                                  				 ; DX=ES=SS=0, BP=7C00h
   105                                  				 ; SP=7C00h ... masterboot sector has
   106                                  				 ; been loaded at 0:600h, it has
   107                                  				 ; CHS parameters at offset 600h+420.
   108                                  				 ; (There is a 01A1h in offset 600h+417)
   109                                  	
   110 00000062 740F                    		je	short bs_01 ; no need to following assignments !
   111                                  
   112 00000064 31C0                    		xor	ax, ax
   113 00000066 8ED8                    		mov	ds, ax
   114 00000068 8EC0                    		mov	es, ax
   115 0000006A FA                      		cli
   116 0000006B 8ED0                    		mov	ss, ax
   117 0000006D 89EC                    		mov	sp, bp
   118 0000006F FB                      		sti
   119 00000070 8A5640                  		mov	dl, [bp+40h] ; [BS_DrvNum]
   120                                  bs_01:
   121 00000073 8936[FC01]              		mov	[bsReserved1], si ; Partition entry address..
   122                                  		; 24/12/2017		  ; (from Singlix FS MBR)
   123                                  					  ; (7BEh,7CEh,7DEh,7EEh)
   124                                  
   125                                  		; Check Bytes/Sector value
   126                                  		; It must be 512 !? (at least, for TRDOS386) 
   127 00000077 817E0B0002              		cmp	word [bp+0Bh], 512 ; [BPB_BytesPerSec]
   128 0000007C 757E                    		jne	short invalid_system_disk
   129                                  
   130                                  		; Following validation checks (*!*)
   131                                  		; are done according to 
   132                                  		; 	Microsoft Extensible Firmware Initiative
   133                                  		;	FAT32 File System Specification, 
   134                                  		;				Version 1.03 (2000).
   135                                  		
   136                                                  ; [BPB_FATSz16] must be 0 (!*!) ; [bp+16h]
   137 0000007E 29C9                    		sub	cx, cx ; 0 ; * ; 27/04/2024
   138                                                  ;cmp	[BPB_FATSz16], cx ; 0	; sectors/fat for FAT16
   139 00000080 394E16                                  cmp	[bp+16h], cx
   140 00000083 7577                    		jne	short invalid_system_disk
   141                                  
   142                                  		; [BPB_FSVer] must be 0 for current FAT32 version (!*!)
   143                                  		;cmp	[BPB_FSVer], cx   ; 0 	; [bp+2Ah], FAT32 version
   144 00000085 394E2A                  		cmp	[bp+2Ah], cx
   145 00000088 7572                    		jne	short invalid_system_disk
   146                                  
   147                                  		;mov	dh, [bp+5Ah]    ; 0Ch (FAT32 LBA) or 0Bh (FAT32 CHS)
   148                                  			; NOTE: 09h at bp+5Ah (at loc_5A) will be overwritten
   149                                  			; by TRDOS 386 disk format program.
   150                                  			; (0BC0h -or AX,AX- is written for FAT32 CHS partition,
   151                                  			; 0C00h -or AL,0- is written for FAT32 LBA partition.)
   152                                  
   153                                  		; overwrite hd drive number !
   154                                                  ;mov	[BS_DrvNum], dl		; drive number from INT 19h
   155 0000008A 885640                  		mov	[bp+40h], dl
   156                                  		;mov	[bp+41h], dh	; [BS_Reserved1] = Partition ID !!!
   157                                  		;mov	[bp+40h], dx
   158                                  
   159                                  		; 27/04/2024
   160                                  		; reset FAT32 FS reading pointers and set SP to 7BF4h
   161                                  		;xor	cx, cx ; *
   162                                  		;sub	cx, cx ; *
   163 0000008D 51                      		push	cx 	
   164 0000008E 51                      		push	cx	; [bp-4] = 0   ; CHS limit (8.4GB)
   165 0000008F 51                      		push	cx	
   166 00000090 51                      		push	cx	; [bp-8] = 0   ; Address of Cluster 2
   167 00000091 49                      		dec	cx 	; 0FFFFh
   168 00000092 51                      		push	cx	
   169 00000093 51                      		push	cx	; [bp-12] = -1	; FAT sector in FAT buffer
   170 00000094 41                      		inc	cx	; 0
   171                                  
   172                                  		; SP = 7BF4h
   173                                  
   174                                  		; check for ROMBIOS INT 13h extensions
   175 00000095 B441                    		mov	ah, 41h
   176 00000097 BBAA55                  		mov	bx, 55AAh
   177                                  		;mov	dl, [BS_DrvNum]
   178                                  		;mov	dl, [bp+40h]
   179 0000009A CD13                    		int	13h
   180 0000009C 721A                    		jc	short bs_02
   181 0000009E 81FB55AA                		cmp	bx, 0AA55h
   182 000000A2 7514                    		jne	short bs_02
   183 000000A4 F6C101                  		test	cl, 1
   184 000000A7 740F                    		jz	short bs_02
   185                                  
   186                                  		; ROMBIOS INT 13h extentions are present...
   187                                  
   188 000000A9 B8424A                  		mov	ax, 4A42h
   189                                  		;mov	[BS_jmpBoot+2], al ; 42h ; 'LBA mode is available'
   190 000000AC 884602                  		mov	[bp+2], al ; 42h
   191                                  		;cmp	dh, 0Ch ; is this BS of a FAT32 LBA partition?
   192 000000AF 807E5A0C                		cmp	byte [bp+5Ah], 0Ch
   193 000000B3 7503                    		jne	short bs_02 ; no..
   194                                  		; yes, put sign for disk read subroutine (for LBA read)
   195                                  		;mov	[loc_5A], ax
   196 000000B5 89465A                  		mov	[bp+5Ah], ax ; INC DX (FAT32 LBA read), DEC DX
   197                                  bs_02:
   198                                  		; ..CHS limit setup..
   199                                  
   200                                  		; Get drive parameters (CHS parameters)
   201                                  		;mov	dl, [BS_DrvNum]
   202                                  		;mov	dl, [bp+40h]
   203 000000B8 B408                    		mov	ah, 08h
   204 000000BA CD13                    		int	13h
   205 000000BC 724A                    		jc	short disk_io_error
   206                                  
   207                                  		; CX = maximum value for cylinder and sector
   208                                  		; DH = maximum value for head
   209                                  		; DL = number of harddisks on first controller
   210                                  		; ES:DI = address of hard disk parameters table
   211                                  		; (Bits 6&7 of CL is high 2 bits of 10 bit clinder value
   212                                  		; which is low 8 bits are in CH.)
   213                                  
   214 000000BE 1E                      		push	ds
   215 000000BF 07                      		pop	es
   216                                  
   217                                  		; 27/04/2024
   218                                  		; convert CHS values to CHS limit (as LBA)
   219 000000C0 31C0                    		xor	ax, ax
   220 000000C2 88F0                    		mov	al, dh
   221 000000C4 40                      		inc	ax
   222 000000C5 88CA                    		mov	dl, cl
   223                                  		;and	dl, 3Fh
   224 000000C7 83E23F                  		and	dx, 3Fh
   225 000000CA F7E2                    		mul	dx
   226                                  		; ax <= 16128
   227                                  		;shr	cl, 6
   228 000000CC 86CD                    		xchg	cl, ch
   229 000000CE 80E5C0                  		and	ch, 0C0h
   230 000000D1 D0C5                    		rol	ch, 1
   231 000000D3 D0C5                    		rol	ch, 1
   232 000000D5 41                      		inc	cx
   233 000000D6 F7E1                    		mul	cx
   234 000000D8 8946FC                  		mov	[bp-4], ax ; dword [7BFCh] ; CHS limit
   235 000000DB 8956FE                  		mov	[bp-2], dx
   236                                  
   237                                  		; Load the second half (remain bytes) of this boot code
   238                                  		; at 7E00h.
   239                                  
   240                                  		; 27/04/2024
   241 000000DE 8B461C                  		mov	ax, [bp+1Ch] ; [BPB_HiddSec]
   242 000000E1 8B561E                  		mov	dx, [bp+1Eh]
   243 000000E4 83C002                  		add	ax, 2 ; Second half of boot code is in BS 2
   244 000000E7 83D200                  		adc	dx, 0
   245 000000EA BB007E                  		mov	bx, 7E00h
   246                                  		;mov	cx, 1
   247                                  		;call	disk_read
   248 000000ED E83100                  		call	read_sector ; 25/12/2017 (Read 1 sector)
   249 000000F0 7216                    		jc	short disk_io_error
   250                                  
   251                                  		; Boot sector 2 validation check 
   252 000000F2 813EA17FA101            		cmp	word [7FA1h], 417 ; The magic word !
   253 000000F8 0F840601                		je	check_root_dir_entries
   254                                  		; 27/04/2024
   255                                  		;jne	short invalid_system_disk
   256                                  		;jmp	check_root_dir_entries
   257                                  
   258                                  invalid_system_disk:
   259 000000FC BE[A801]                		mov	si, Inv_disk_Msg
   260                                  getchar_reboot:		; 27/04/2024
   261 000000FF E81100                  		call	print_msg
   262                                  ;getchar_reboot:
   263                                  		; Wait for a keystroke just before reboot
   264 00000102 30E4                    		xor	ah, ah
   265 00000104 CD16                    		int	16h
   266                                  		
   267 00000106 CD19                    		int	19h	; disk boot
   268                                  				; causes reboot of disk system
   269                                  disk_io_error:
   270 00000108 BE[9701]                		mov	si, Diskio_err_Msg
   271 0000010B E80500                  		call	print_msg
   272                                  ;replace_disk:
   273                                  ;		mov	si, Replace_Msg	
   274                                  replace_disk:	
   275 0000010E BE[BD01]                		mov	si, Disk_err_replace_Msg
   276                                  		; 27/04/2024
   277                                  		;call	print_msg
   278 00000111 EBEC                    		jmp	short getchar_reboot
   279                                  
   280                                  print_msg:
   281                                  		; DS:SI = Error message address (ASCIIZ string)
   282 00000113 B40E                    		mov	ah, 0Eh
   283 00000115 BB0700                  		mov	bx, 7
   284                                  bs_03:
   285 00000118 AC                      		lodsb
   286 00000119 84C0                    		test	al, al
   287 0000011B 7424                    		jz	short bs_04
   288 0000011D CD10                    		int	10h
   289 0000011F EBF7                    		jmp	short bs_03
   290                                  
   291                                  		; 27/04/2024
   292                                  ;bs_04:
   293                                  ;		retn
   294                                  
   295                                  read_sector:	; 25/12/2017 (Read 1 sector)
   296 00000121 B90100                  		mov	cx, 1
   297                                  disk_read:
   298                                  		;mov	byte [bp+retry_count-7C00h], 4
   299 00000124 BF0400                  		mov	di, 4 ; retry count
   300                                  disk_read_0:
   301 00000127 60                      		pusha
   302                                  		;cmp	byte [loc_5A], 42h ; FAT32 LBA availability
   303 00000128 807E5A42                		cmp	byte [bp+5Ah], 42h ; FAT32 LBA partition & LBA ready
   304 0000012C 7414                    		je	short lba_read
   305                                  		; Jump to lba_read if sector addr overs CHS limit
   306                                  
   307                                  		; 27/04/2024
   308 0000012E 3B56FE                  		cmp	dx, [bp-2] ; hw of CHS limit
   309 00000131 7707                    		ja	short disk_read_3
   310 00000133 7227                    		jb	short chs_read	
   311 00000135 3B46FC                  		cmp	ax, [bp-4] ; CHS limit ([7BFCh])
   312 00000138 7222                    		jb	short chs_read
   313                                  disk_read_3:
   314                                  		; Disk I/O error if Int 13h LBA read func is not usable
   315                                  		; byte [BS_jmpBoot+2] = 'LBA read function is ready' sign 
   316                                  		;cmp	byte [[BS_jmpBoot+2], 42h ; FAT32 LBA availability
   317 0000013A 807E0242                		cmp	byte [bp+2], 42h ; is LBA mode ready ? 
   318 0000013E 7402                    		je	short lba_read ; LBA mode is usable/available
   319 00000140 F9                      		stc ; cf = 1
   320                                  bs_04:		;	 27/04/2024
   321 00000141 C3                      		retn
   322                                  lba_read:
   323                                  		; 27/04/2024
   324                                  		;pusha
   325                                  
   326 00000142 6A00                    		push	word 0
   327 00000144 6A00                    		push	word 0
   328 00000146 52                      		push	dx
   329 00000147 50                      		push	ax
   330 00000148 06                      		push	es
   331 00000149 53                      		push	bx
   332 0000014A 6A01                    		push 	byte 1
   333 0000014C 6A10                    		push	byte 16 ; 10h
   334 0000014E B442                    		mov	ah, 42h
   335                                  		;mov	dl, [BS_DrvNum]
   336 00000150 8A5640                  		mov	dl, [bp+40h]
   337 00000153 89E6                    		mov	si, sp
   338 00000155 CD13                    		int	13h
   339                                  
   340 00000157 83C410                  		add	sp, 16
   341 0000015A EB29                    		jmp	short disk_read_1
   342                                  chs_read:
   343                                  		; 27/04/2024
   344                                  		;pusha
   345                                  
   346                                  		; Convert LBA to CHS
   347 0000015C 50                      		push	ax ; lw of the LBA
   348 0000015D 89D0                    		mov	ax, dx ; hw of the LBA
   349 0000015F 31D2                    		xor	dx, dx
   350 00000161 8B4E18                  		mov	cx, [bp+18h]  ; [BPB_SecPerTrk] ; [bp+18h]
   351                                  				; sectors per track (17 or 63)
   352 00000164 F7F1                    		div	cx
   353 00000166 89C6                    		mov	si, ax	; hw of the quotient
   354 00000168 58                      		pop	ax
   355 00000169 F7F1                    		div	cx
   356                                  		; si:ax = (heads * cylinder) + head number
   357                                  		; dl = sector (0 based)
   358 0000016B FEC2                    		inc	dl	; sector number (1 based)
   359 0000016D 88D1                    		mov	cl, dl
   360 0000016F 89F2                    		mov	dx, si 
   361                                  		;div	word [BPB_NumHeads] ; [bp+1Ah]
   362                                  				 ; number of heads (2 to 255)
   363 00000171 F7761A                  		div	word [bp+1Ah]
   364                                  		; AX = cylinder (0 to 1023)
   365                                  		; DX = head number (in DL)
   366 00000174 88D6                    		mov	dh, dl	 ; head number in DH
   367                                  		;mov	dl, [BS_DrvNum] ; [bp+40h] ; Drive number (80h)
   368 00000176 8A5640                  		mov	dl, [bp+40h]
   369 00000179 88C5                    		mov	ch, al ; Low 8 bits of cylinder number (0 to 7)
   370 0000017B C0E406                  		shl	ah, 6  ; High 2 bits of cylinder is in bit 7&8
   371 0000017E 08E1                    		or	cl, ah ; High two bits of CL is cylinder bits 8&9
   372 00000180 B80102                  		mov	ax, 201h ; Read 1 sector
   373 00000183 CD13                    		int	13h
   374                                  disk_read_1:
   375                                  		; 27/04/2024
   376 00000185 61                      		popa
   377 00000186 7304                    		jnc	short disk_read_2
   378                                  		; cf = 1
   379                                  		;dec	byte [retry_count]
   380                                  		;dec	byte [bp+retry_count-7C00h]
   381                                  		; 27/04/2024
   382 00000188 4F                      		dec	di ; Retry count
   383 00000189 759C                    		jnz	short disk_read_0 ; Retry
   384                                  		; cf = 1
   385 0000018B C3                      		retn
   386                                  disk_read_2:
   387                                  		;add	bx, [bp+0Bh] ; [BPB_BytesPerSec] ; 512
   388                                  		;add	bx, 512
   389 0000018C 80C702                  		add	bh, 2 ; **
   390                                  		; 27/04/2024
   391 0000018F 40                      		inc	ax
   392 00000190 7501                    		jnz	short disk_read_4
   393 00000192 42                      		inc	dx
   394                                  disk_read_4: 
   395 00000193 49                      		dec	cx
   396 00000194 758E                    		jnz	short disk_read
   397                                  		;clc 	; ** (128 sectors/cluster!?)
   398 00000196 C3                      		retn
   399                                  
   400                                  		; Filler
   401                                  		;db	07h
   402                                  		;db	14h
   403                                  
   404                                  Diskio_err_Msg:
   405 00000197 0D0A                    		db	0Dh, 0Ah
   406 00000199 4469736B20492F4F20-     		db	'Disk I/O error'
   406 000001A2 6572726F72         
   407                                  		;db	'!'
   408 000001A7 00                      		db	0
   409                                  Inv_disk_Msg:
   410 000001A8 0D0A                    		db	0Dh, 0Ah
   411 000001AA 496E76616C69642073-     		db	'Invalid system disk'
   411 000001B3 797374656D20646973-
   411 000001BC 6B                 
   412                                  Disk_err_replace_Msg:
   413 000001BD 21                      		db	'!'
   414                                  Replace_Msg:
   415 000001BE 0D0A                    		db	0Dh, 0Ah
   416 000001C0 5265706C6163652074-     		db	'Replace the disk and press any key to reboot.'
   416 000001C9 6865206469736B2061-
   416 000001D2 6E6420707265737320-
   416 000001DB 616E79206B65792074-
   416 000001E4 6F207265626F6F742E 
   417 000001ED 0D0A00                  		db	0Dh, 0Ah, 0
   418                                  
   419                                  		; Boot sector code writing date (by Erdogan Tan)
   420                                  		;;db	31
   421                                  		;;db	01
   422                                  		;;dw	2018
   423                                  		;
   424                                  		;db	27
   425                                  		;db	04
   426                                  		;dw	2024
   427                                  
   428                                  		; TRDOS 386 FAT32 boot sector code version
   429                                  		;db	'v1.0'
   430                                  		; 27/04/2024
   431                                  		; Retro DOS v5 FAT32 boot sector code
   432                                  		;db	'v5.0'
   433                                  
   434                                  		times	(508+rtsfilename-bsReserved1) - ($ - $$) db 0
   435                                  rtsfilename:
   436                                  		;db	'TRDOS386SYS'
   437                                  		; 27/04/2024 - Retro DOS v5.0
   438 000001F0 5043444F5320202053-     		db	'PCDOS   SYS'
   438 000001F9 5953               
   439 000001FB 00                                      db      0
   440                                  bsReserved1:
   441 000001FC 5452                    		db	'TR'  ; 'Turkish Rational DOS' feature identifier.
   442                                  bootsignature1:
   443 000001FE 55AA                    		db	55h, 0AAh
   444                                  
   445                                  bsReserved2:
   446 00000200 5254                    		db	'RT'  ; 'Turkish Rational DOS' feature identifier
   447                                  
   448                                  check_root_dir_entries:
   449                                  		; load root directory and check directory entries 
   450                                  
   451                                  		; 28/04/2024
   452                                  		; calculate total size of FAT area
   453                                                  ;mov	cl, byte [BPB_NumFATs] ; [bp+10h] ; number of FATs
   454 00000202 8A4E10                    		mov	cl, [bp+10h]
   455                                  		;add	ax, [BPB_FATSz32] ; [bp+24h] ; sectors per FAT
   456                                                  ;adc	dx, [BPB_FATSz32+2] ; [bp+26h]
   457                                  
   458 00000205 31C0                    		xor	ax, ax
   459 00000207 31D2                    		xor	dx, dx
   460                                  crde_fat_secs:
   461                                  		;add	ax, [BPB_FATSz32] ; [bp+24h] ; sectors per FAT
   462                                                  ;adc	dx, [BPB_FATSz32+2] ; [bp+26h]
   463 00000209 034624                  		add	ax, [bp+24h]
   464 0000020C 135626                  		adc	dx, [bp+26h]
   465                                  		
   466 0000020F 49                      		dec	cx
   467 00000210 75F7                    		jnz	short crde_fat_secs
   468                                  
   469                                  		; add hidden sectors
   470                                  		;add	ax, [BPB_HiddSec] ; [bp+1Ch]
   471                                  		;adc	dx, [BPB_HiddSec+2] ; [bp+1Eh]
   472 00000212 03461C                  		add	ax, [bp+1Ch]
   473 00000215 13561E                  		adc	dx, [bp+1Eh]
   474                                  
   475                                  		; add reserved sectors
   476                                                  ;add	ax, [BPB_RsvdSecCnt] ; [bp+0Eh]
   477 00000218 03460E                  		add	ax, [bp+0Eh]
   478 0000021B 83D200                  		adc	dx, 0
   479                                  
   480                                  		; Save address of cluster 2 into 7BF8h 
   481 0000021E 8946F8                  		mov     [bp-8], ax	; DX:AX = Data Area (Cluster 2)
   482                                                                          ; (Data) Start Address in 7BF8h
   483 00000221 8956FA                  		mov	[bp-6], dx
   484                                  
   485                                  		; Reset FAT sector address pointer (7BF4h) 
   486                                  		; 	which points to FAT sectors in the FAT buffer
   487                                  		;	(8000h) 
   488                                  		;	
   489                                  		;mov	dword [bp-12], 0FFFFFFFFh ; invalid address
   490                                  						 ; (for now)
   491                                  
   492                                  		; Check Root Directory Start Cluster is valid or not.
   493                                  		;mov	ax, [BPB_RootClus] ; [bp+2Ch]
   494                                  		;mov	dx, [BPB_RootClus+2] ; [bp+2Eh]
   495 00000224 8B462C                  		mov	ax, [bp+2Ch]
   496 00000227 8B562E                  		mov	dx, [bp+2Eh]
   497                                  
   498                                  load_root_dir_sector:
   499                                  		; 28/04/2024
   500                                  		; DX:AX = Cluster Number
   501                                  
   502                                  		; Cluster number must not be less than 2
   503 0000022A 09D2                    		or	dx, dx
   504 0000022C 7507                    		jnz	short lrds_1
   505 0000022E 83F802                  		cmp	ax, 2			; Is it Cluster 2?
   506 00000231 0F82C7FE                		jb	invalid_system_disk	; error if less than 2
   507                                  lrds_1:
   508                                                 	; Is it End Of Cluster Chain marker or something above?
   509                                                  ;cmp	dx, 0FFFh
   510                                  		;jb	short lrds_2
   511                                  		;cmp	ax, 0FFF8h	; clust 2 to 0FFFFFF7h is valid
   512                                                  ;jnb	invalid_system_disk ; invalid cluster num
   513                                  					      ; or end of cluster chain
   514                                  		; 23/12/2017
   515                                  		; Note: Bad Cluster number is 0FFFFFF7h !
   516                                  		; (According to MS FAT32 Specification, 2000, page 18)
   517                                  		; "It is not possible for the bad cluster mark to be
   518                                  		; an allocatable cluster number on FAT12 and FAT16 volumes,
   519                                  		; but it is feasible for 0x0FFFFFF7 to be an allocatable
   520                                  		; cluster number on FAT32 volumes.
   521                                  		; To avoid possible confusion by disk utilities, 
   522                                  		; no FAT32 volume should ever be configured such that
   523                                  		; 0x0FFFFFF7 is an allocatable cluster number."
   524                                  		
   525                                                 	; Is it End Of Cluster Chain marker or something above?
   526                                                  ; 28/04/2024
   527 00000235 81FAFF0F                		cmp	dx, 0FFFh
   528 00000239 7207                    		jb	short lrds_2
   529 0000023B 83F8F7                  		cmp	ax, 0FFF7h	; clust 2 to 0FFFFFF6h is valid
   530 0000023E 0F83BAFE                                jnb	invalid_system_disk   ; invalid cluster num
   531                                  					      ; or end of cluster chain
   532                                  lrds_2:
   533 00000242 52                      		push	dx ; ++
   534 00000243 50                      		push	ax ; +
   535                                  
   536 00000244 31DB                    		xor	bx, bx
   537 00000246 83E802                  		sub	ax, 2	; 0 based cluster number
   538                                  		;sbb	dx, 0
   539 00000249 19DA                    		sbb	dx, bx
   540 0000024B 52                      		push	dx ; hw	
   541                                  		;mov	bl, [BPB_SecPerClus] ; [bp+13]
   542 0000024C 8A5E0D                  		mov	bl, [bp+0Dh]
   543 0000024F 89DE                    		mov	si, bx	; save sector per cluster in SI
   544 00000251 F7E6                    		mul	si
   545 00000253 89C3                    		mov	bx, ax ; multiplication result lw
   546 00000255 58                      		pop	ax ; multiplicand hw
   547 00000256 52                      		push	dx ; carry
   548 00000257 F7E6                    		mul	si
   549 00000259 5A                      		pop	dx
   550 0000025A 01C2                    		add	dx, ax	; multiplication result hw
   551 0000025C 89D8                    		mov	ax, bx
   552                                  
   553                                  		; DX:AX = relative sector of the 1st part of root dir
   554 0000025E 0346F8                  		add	ax, [bp-8]  ; add 'start address of data area'
   555                                  				    ; (in 7BF8h) to relative address
   556 00000261 1356FA                  		adc	dx, [bp-6]
   557                                  bs_05:
   558 00000264 BB0082                  		mov	bx, 8200h  ; Root directory buffer (1 sector)
   559                                  		;mov	cx, 1
   560                                  		;call	disk_read
   561 00000267 E8B7FE                  		call	read_sector ; 25/12/2017 (Read 1 sector)
   562 0000026A 0F829AFE                		jc	disk_io_error
   563                                  
   564                                  		; BX = 8400h
   565                                  
   566                                  		; 29/04/2024
   567 0000026E BF0082                  		mov	di, 8200h
   568                                  search_startup_file: 
   569                                  		; check/compare root dir entry for/with kernel file
   570 00000271 382D                    		cmp	[di], ch ; 0
   571 00000273 0F8485FE                		je	invalid_system_disk ; kernel not found!
   572 00000277 B10B                    		mov	cl, 11 ; 0Bh
   573                                  		; SI = count down value from 'sectors per cluster'
   574 00000279 56                      		push	si ; SPC to 1
   575 0000027A BE[F001]                		mov	si, rtsfilename ; Run Time System file name
   576                                  					; or Kernel file name
   577                                  					; (or Startup file name)
   578                                  					; (or Standalone file name)
   579                                  					; in MSDOS directory entry
   580                                  					; format. ('TRDOS386SYS')
   581                                  					; It is 'TRDOS386.SYS'
   582                                  					; for TRDOS 386 OS.
   583 0000027D F3A6                    		repe	cmpsb ; compare dir entry and kernel's name
   584 0000027F 5E                      		pop	si
   585 00000280 0F849900                		jz	load_startup_file ; kernel is there!
   586 00000284 01CF                    		add	di, cx
   587 00000286 83C715                  		add	di, 21 ; 15h (11+21=32)
   588 00000289 39DF                    		cmp	di, bx ; 8400h
   589 0000028B 72E4                    		jb	short search_startup_file ; chk next entry
   590                                  		; 28/04/2024
   591                                  		; Sector Per Cluster countdown
   592 0000028D 4E                      		dec	si 
   593 0000028E 75D4                    		jnz	short bs_05 ; next sector in same cluster
   594                                  
   595 00000290 58                      		pop	ax ; +
   596 00000291 5A                      		pop	dx ; ++
   597                                  
   598 00000292 E80600                  		call	get_next_cluster
   599 00000295 0F826FFE                		jc	disk_io_error
   600                                  
   601                                  		;; DX:AX = 32 bit cluster number (32 bit FAT entry)
   602                                  		;and	dx, 0FFFh ; 28 bit cluster number
   603 00000299 EB8F                    		jmp	short load_root_dir_sector
   604                                  
   605                                  get_next_cluster:	; get next (FAT32) directory/file cluster
   606                                  		; EAX = current cluster number (28 bit, zero based)
   607 0000029B D1E2                    		shl	dx, 1
   608 0000029D D1E0                    		shl	ax, 1
   609 0000029F 83D200                  		adc	dx, 0
   610 000002A2 D1E2                    		shl	dx, 1
   611 000002A4 D1E0                    		shl	ax, 1 ; 32 bit FAT entry offset
   612 000002A6 83D200                  		adc	dx, 0
   613                                  
   614 000002A9 E80C00                  		call	get_fat32_entry
   615 000002AC 7209                    		jc	short bs_06 ; Disk read error!
   616                                  		
   617                                  		; 29/04/2024
   618                                  		; ds = es = 0
   619                                  		; si = cluster entry offset
   620 000002AE 8B04                    		mov	ax, [si]	; 32 bit clust entry number
   621 000002B0 8B5402                  		mov	dx, [si+2]
   622 000002B3 81E2FF0F                		and	dx, 0FFFh	; 28 bit cluster number
   623                                  bs_06:
   624 000002B7 C3                      		retn
   625                                  
   626                                  get_fat32_entry:
   627                                  		; DX:AX = 32 bit FAT entry (dword) offset
   628                                  		;mov	cx, [BPB_BytesPerSec]
   629                                  		;mov	cx, [bp+0Bh]
   630 000002B8 B90002                  		mov	cx, 512
   631 000002BB 50                      		push	ax  ; lw
   632 000002BC 89D0                    		mov	ax, dx ; hw
   633 000002BE 31D2                    		xor	dx, dx
   634 000002C0 F7F1                    		div	cx
   635 000002C2 89C3                    		mov	bx, ax
   636 000002C4 58                      		pop	ax  ; lw
   637 000002C5 F7F1                    		div	cx
   638 000002C7 89D6                    		mov	si, dx	; offset in the buffer
   639                                  		; BX:AX = FAT sector number (relative)
   640                                  		; Check FAT sector number if it is already
   641                                  		; in FAT buffer at 8000h.
   642                                  		; Current FAT sector is in 7BF4h. 
   643                                  		; (Note: initial FAT sector value in 7BF4h is
   644                                  		;	 0FFFFFFFFh which means the buff 
   645                                  		;	 is not loaded yet..)
   646 000002C9 3B5EF2                  		cmp	bx, [bp-0Eh] ; [7BF6h]
   647 000002CC 7505                    		jne	short g_fat32_e_1
   648 000002CE 3B46F4                  		cmp	ax, [bp-0Ch] ; [7BF4h]
   649 000002D1 7440                    		je	short bs_08 ; same sector in FAT buffer
   650                                  g_fat32_e_1:
   651                                  		; 29/04/2024
   652 000002D3 8946F4                  		mov	[bp-0Ch], ax ; save FAT sector number
   653 000002D6 895EF2                  		mov	[bp-0Eh], bx ; save FAT sector number
   654 000002D9 31D2                    		xor	dx, dx ; 0
   655                                  		; Calculate absolute (LBA) address of FAT sector
   656                                  		; by adding hidden (partition's start sector)
   657                                  		; and reserved sectors (between BS and FAT).
   658                                  		;add	ax, [BPB_HiddSec] ; [bp+1Ch]
   659                                  		;adc	bx, [BPB_HiddSec+2]
   660 000002DB 03461C                  		add	ax, [bp+1Ch]
   661 000002DE 135E1E                  		adc	bx, [bp+1Eh]
   662                                  		;add	ax, [BPB_RsvdSecCnt] ; = 32 (typically)
   663 000002E1 03460E                  		add	ax, [bp+0Eh]
   664 000002E4 11DA                    		adc	dx, bx	; LBA of the FAT sector
   665                                  		; Check FAT mirroring flag..
   666                                  		;	bits 0 to 3 are used for active FAT number
   667                                  		;	If bit 7 is 1, only one (active) FAT copy
   668                                  		;	is updated (written without mirroring).
   669                                  		;  (Default active FAT is 0 and default option
   670                                  		;   is to mirror the active FAT -at runtime- into
   671                                  		;	all FAT copies -generally 2 FATs-.
   672                                  		;mov	bx, [BPB_ExtFlags]
   673 000002E6 8B5E28                  		mov	bx, [bp+28h]
   674 000002E9 83E30F                  		and	bx, 0Fh
   675 000002EC 741F                    		jz	short bs_07	; FAT number 0 is active
   676                                  					; (as default)
   677                                  		; compare active FAT number with number of FATs	
   678                                  		;cmp	bl, [BPB_NumFATs] ; [bp+10h]
   679 000002EE 3A5E10                  		cmp	bl, [bp+10h]
   680 000002F1 7325                    		jnb	short bs_09 ; invalid parameter!
   681 000002F3 52                      		push	dx ; **
   682 000002F4 50                      		push	ax ; *
   683 000002F5 89C1                    		mov	cx, ax
   684                                  		; multiply zero based FAT number with FAT size
   685                                  		;mov	ax, [BPB_FATSz32] ; [bp+24h]
   686 000002F7 8B4624                  		mov	ax, [bp+24h]
   687 000002FA F7E3                    		mul	bx
   688 000002FC 89C1                    		mov	cx, ax ; multiplication result lw
   689                                  		;mov	ax, [BPB_FATSz32+2] ; [bp+26h]
   690 000002FE 8B4626                  		mov	ax, [bp+26h]
   691 00000301 52                      		push	dx ; carry
   692 00000302 F7E3                    		mul	bx
   693 00000304 5A                      		pop	dx ; carry
   694 00000305 01C2                    		add	dx, ax ; multiplication result hw
   695 00000307 58                      		pop	ax ; *
   696 00000308 5B                      		pop	bx ; **
   697 00000309 01C8                    		add	ax, cx   ; start of active FAT copy
   698 0000030B 11DA                    		adc	dx, bx
   699                                  bs_07:
   700 0000030D BB0080                  		mov	bx, 8000h ; FAT (sector) buffer
   701                                  		;mov	cx, 1
   702                                  		;call	disk_read
   703 00000310 E80EFE                  		call	read_sector ; 25/12/2017 (Read 1 sector)
   704                                  		; If cf = 1 -> Disk I/O err, not invalid sys disk!
   705                                  bs_08:
   706 00000313 81C60080                		add	si, 8000h ; add cluster offset to buffer addr
   707 00000317 C3                      		retn
   708                                  bs_09:
   709                                  		; Invalid boot sector parameter/data
   710                                  		;add	sp, 4
   711 00000318 58                      		pop	ax ; return to 'get_next_cluster'
   712 00000319 58                      		pop	ax ; return to 'search_startup_file'
   713 0000031A E9DFFD                  		jmp	invalid_system_disk
   714                                  
   715                                  load_startup_file:
   716                                  		; DI = directory entry offset 9 (of 32 bytes)
   717                                  		; 29/04/2024
   718 0000031D 58                      		pop	ax ; +
   719 0000031E 58                      		pop	ax ; ++ ; dx 
   720                                  		; High word of First Cluster
   721 0000031F 8B5509                  		mov	dx, [di+9] ; [di+DIR_FstClusHI-11]
   722                                  		; Low word of First Cluster
   723 00000322 8B450F                  		mov	ax, [di+0Fh] ; [di+DIR_FstClusLO-11]
   724                                  		; Valid cluster number must not be less than 2
   725                                  		; and it (a first cluster value in directory entry)
   726                                  		; must not be greater than 0FFFFFF6h. 
   727 00000325 21D2                    		and	dx,dx
   728 00000327 7507                    		jnz	short lsf_1
   729 00000329 83F802                  		cmp	ax, 2
   730 0000032C 0F82CCFD                		jb	invalid_system_disk
   731                                  lsf_1:		; 29/04/2024		
   732 00000330 81FAFF0F                		cmp	dx, 0FFFh
   733 00000334 720B                    		jb	short lsf_2
   734 00000336 0F87C2FD                		ja	invalid_system_disk
   735 0000033A 83F8F7                  		cmp	ax, 0FFF7h ; 0FFFFFF7h ; 23/12/2017
   736 0000033D 0F83BBFD                		jnb	invalid_system_disk
   737                                  lsf_2:
   738 00000341 50                      		push	ax ; save first cluster number (lw)
   739                                  
   740                                  		; Load  RTS (Kernel) file
   741 00000342 BE[B003]                                mov     si, Loading_Msg
   742 00000345 E8CBFD                                  call    print_msg
   743                                                  
   744 00000348 58                      		pop	ax ; restore first cluster number (lw)
   745                                  		
   746                                  		;mov	bx, rts_segment ; 1000h
   747                                  		;mov	[next_segment], bx
   748                                  bs_10:
   749                                  		; 29/04/2024
   750                                  		; cx = 0 
   751 00000349 52                      		push	dx
   752 0000034A 50                      		push	ax ; 28 bit cluster num, starts from 2
   753 0000034B 83E802                  		sub	ax, 2 ; now, cluster num starts from 0
   754 0000034E 83DA00                  		sbb	dx, 0
   755 00000351 52                      		push	dx ; hw
   756                                  		;mov	cl, [BPB_SecPerClus] ; [bp+0Dh]
   757 00000352 8A4E0D                  		mov	cl, [bp+0Dh]
   758 00000355 F7E1                    		mul	cx
   759 00000357 89C3                    		mov	bx, ax ; multiplication result lw
   760 00000359 58                      		pop	ax ; multiplicand hw
   761 0000035A 52                      		push	dx ; carry
   762 0000035B F7E1                    		mul	cx
   763 0000035D 5A                      		pop	dx
   764 0000035E 01C2                    		add	dx, ax ; multiplication result hw
   765 00000360 89D8                    		mov	ax, bx
   766                                  		; dx:ax = sector offset (from start of data area)
   767 00000362 0346F8                  		add	ax, [bp-8] ; add data area (start) addr
   768 00000365 1356FA                  		adc	dx, [bp-6]
   769 00000368 8B1E[9E03]              		mov	bx, [next_segment]
   770 0000036C 06                      		push	es
   771 0000036D 8EC3                    		mov	es, bx ; segment = 1000h +
   772 0000036F 31DB                    		xor	bx, bx ; offset = 0 
   773                                  		; CX = num of sectors to read (= sectors/cluster)
   774 00000371 E8B0FD                  		call	disk_read
   775 00000374 07                      		pop	es
   776 00000375 58                      		pop	ax
   777 00000376 5A                      		pop	dx ; 28 bit cluster num, starts from 2
   778                                  		;shr	bx, 4 ; bh = 2, bl = 0
   779                                  		;add	[next_segment], bx
   780 00000377 8306[9E03]20            		add	word [next_segment], 32 ; paragraph count
   781 0000037C E81CFF                  		call	get_next_cluster
   782                                  		;jc	short diskio_error
   783 0000037F 7214                    		jc	short retrodos_loading_error
   784                                  
   785                                  		; 29/04/2024
   786 00000381 09D2                    		or	dx, dx
   787 00000383 740B                    		jz	short lsf_3
   788 00000385 81FAFF0F                		cmp	dx, 0FFFh
   789 00000389 72BE                    		jb	short bs_10 
   790                                  
   791                                  		;cmp	ax, 0FFF8h
   792 0000038B 83F8F7                  		cmp	ax, 0FFF7h ; 0FFFFFF7h ; 23/12/2017
   793 0000038E 735E                    		jnb	short bs_11 ; Startup file has been loaded.
   794                                  lsf_3:
   795 00000390 83F802                  		cmp	ax, 2
   796                                  		;jb	invalid_system_disk 
   797                                  		;jmp	short bs_10 ; load next clust of the file
   798 00000393 73B4                    		jnb	short bs_10
   799                                  
   800                                  retrodos_loading_error:
   801 00000395 BE[D103]                		mov	si, Load_err_Msg
   802 00000398 E878FD                  		call	print_msg
   803 0000039B E970FD                  		jmp	replace_disk
   804                                  
   805                                  next_segment:
   806 0000039E 0010                    		dw	rts_segment
   807                                  
   808                                  		; 29/04/2024
   809 000003A0 00                      		db	0
   810 000003A1 A101                    loc_3A1:	dw	417
   811                                  
   812                                  		;db	'TR-DOS' ; Filler
   813                                  		; 29/04/2024
   814 000003A3 526574726F20444F53-     		db	'Retro DOS v5', 0
   814 000003AC 20763500           
   815                                  
   816                                  		; 29/04/2024		
   817 000003B0 0D0A                    Loading_Msg:    db	0Dh, 0Ah
   818                                  		;db	'Loading Kernel TRDOS386.SYS ...'
   819 000003B2 4C6F6164696E67204B-     		db	'Loading Kernel PCDOS.SYS ...'
   819 000003BB 65726E656C20504344-
   819 000003C4 4F532E535953202E2E-
   819 000003CD 2E                 
   820 000003CE 0D0A00                                  db 	0Dh, 0Ah, 0
   821                                  Load_err_Msg:
   822 000003D1 0D0A                    		db	0Dh, 0Ah
   823                                  		;db	'TRDOS Loading Error'
   824 000003D3 5043444F53204B6572-     		db	'PCDOS Kernel Loading Error' ; 29/04/2024
   824 000003DC 6E656C204C6F616469-
   824 000003E5 6E67204572726F72   
   825                                  		;db	'!'
   826 000003ED 00                      		db	0
   827                                  
   828                                  bs_11:
   829                                  ; 29/04/2024
   830                                  %if 0
   831                                  		; Set TRDOS 386 kernel specific parameters (& signs)
   832                                  		; and
   833                                  		; Launch TRDOS 386 Kernel (Startup/RTS file)
   834                                  
   835                                  		;mov	dl, [BS_DrvNum]
   836                                                  mov	dx, [bp+40h] ; DL = Drive number, DH = 0
   837                                  		inc	dh  ; TRDOS 386 FAT32 BS major version = 1
   838                                     		
   839                                  		mov	ax, [next_segment] ; 16 paragraphs after the
   840                                  					  ; start of the last segment
   841                                  					  ; of the kernel file loading
   842                                  					  ; space.
   843                                  					  ; So, (top of) stack will have
   844                                  					  ; 256 bytes or more distance
   845                                  					  ; from the last byte
   846                                  					  ; of the kernel file.
   847                                  					  ; (This will be enough for
   848                                  					  ; TRDOS 386 kernel before
   849                                  					  ; entering protected mode.)
   850                                  		cli
   851                                  		mov	ss, ax
   852                                  		mov	sp, 0FFFEh
   853                                  		sti
   854                                  
   855                                  		mov     bx, rts_segment ; 1000h
   856                                                  mov     ds, bx
   857                                                  mov     es, bx
   858                                  		;mov	fs, bx
   859                                  		;mov	gs, bx
   860                                  
   861                                  		;xor	ebx, ebx
   862                                  		;xor	ecx, ecx
   863                                  		;xor	edx, edx
   864                                  		;xor	esi, esi
   865                                  		;xor	edi, edi
   866                                  		;xor	ebp, ebp
   867                                  
   868                                  		; bp = 7C00h
   869                                  
   870                                  		; NOTE: Offset 417 in boot sector 2 (the 2nd half of VBR)
   871                                  		; is also FAT32 boot record validation check address and
   872                                  		; boot sector 2 must have 417 here for boot sector 1 code
   873                                  		; (the 1st half of volume boot record).
   874                                  		; ((So, 'mov eax, 417' has double meaning here.))
   875                                  loc_39F:
   876                                  		mov	eax, 417 ; TRDOS boot sector sign for TRDOS386.SYS
   877                                  
   878                                  		jmp	rts_segment:0
   879                                  
   880                                  %else
   881                                  		; 29/04/2024
   882                                  
   883                                  		; 10/12/2023 - Retro DOS v5.0 Kernel INIT (retrodos5.s)
   884                                  		; ------------------------------------------------------------
   885                                  		; INPUT (registers from Retro DOS v4-v5 boot sector):
   886                                  		;  DL = [bsDriveNumber]
   887                                  		;  DH = [bsMedia]
   888                                  		;  SS = 0
   889                                  		;  BP = 7C00h (boot sector address)
   890                                  		;
   891                                  		; If the boot drive is a CD (CDROM) or DVD
   892                                  		;    and CD boot option is enabled/requested:
   893                                  		;    AX = 'CD'
   894                                  		; If the boot drive is a FD or HD 
   895                                  		;    or CD boot option is not enabled/requested:
   896                                  		;    AX <> 'CD'
   897                                  
   898                                  		; 29/04/2024
   899                                  		;mov	dl, [BS_DrvNum]
   900 000003EE 8A5640                                  mov	dl, [bp+40h] ; DL = Drive number
   901                                  		;mov	dh, [BPB_Media]
   902 000003F1 8A7615                  		mov	dh, [bp+15h] ; DH = 0F8h
   903 000003F4 31C0                    		xor	ax, ax
   904                                  		; ax = 0 (means 32 bit total sectors, big file system)
   905                                  		;	((only requirement here is AX must not be 'CD'))
   906                                  		; bp = 7C00h (but, not used by RETRODOS v5 kernel INIT)
   907                                  
   908 000003F6 EA00000010              		jmp	rts_segment:0		
   909                                  %endif
   910                                  
   911 000003FB 00                      		times	1020 - ($ - $$) db 0
   912                                  bsReserved3:
   913 000003FC 5452                    		db	'TR'	; 'Turkish Rational DOS' feature identifier
   914                                  bootsignature2:
   915 000003FE 55AA                    		db	55h, 0AAh
