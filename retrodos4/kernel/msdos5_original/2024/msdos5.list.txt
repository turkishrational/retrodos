     1                                  ; MSDOS.SYS
     2                                  ; Original MSDOS 5.0 Kernel (Source Code in NASM syntax)
     3                                  ;
     4                                  ; - Assembler: NASM 2.15 - 
     5                                  ; ((nasm msdos5.asm -l msdos5.lst -o MSDOS5.BIN -Z error.txt))
     6                                  ;				  -o MSDOS.SYS
     7                                  ;	
     8                                  ; (Disassembled and re-written by Erdogan Tan for finding the reason of
     9                                  ;  the AutoCAD R12 running problem of Retro DOS v4.0-v4.1-v4.2-v5.0 Kernels)
    10                                  ; 
    11                                  ; Erdogan Tan - 09/07/2024 - Istanbul
    12                                  ;
    13                                  ; +-------------------------------------------------------------------------+
    14                                  ; |   This file	has been generated by The Interactive Disassembler (IDA)    |
    15                                  ; |	      Copyright	(c) 2013 Hex-Rays, <support@hex-rays.com>	    |
    16                                  ; +-------------------------------------------------------------------------+
    17                                  ;
    18                                  ; Input	MD5   :	926BAF897B78FE053F29FC8FF8CFD7C5
    19                                  ; Input	CRC32 :	64D3C385
    20                                  
    21                                  ; ---------------------------------------------------------------------------
    22                                  ; File Name   :	C:\Users\Erdoðan\Desktop\MSDOS5.SYS
    23                                  ; Format      :	Binary file
    24                                  ; Base Address:	0000h Range: 0000h - 9212h Loaded length: 9212h
    25                                  
    26                                  ; ----------------------------------------------------------------------------
    27                                  ; 06/12/2022 - Retro DOS v4.0 (Modified MSDOS 5.0 MSDOS.SYS)
    28                                  ; ----------------------------------------------------------------------------
    29                                  
    30                                  segment .code vstart=3DD0h ; 06/12/2022
    31                                  								
    32                                  ; ============================================================================
    33                                  
    34                                  	; 05/12/2022 - RetroDOS v4.0 (Modified MSDOS 5.0 MSDOS.SYS)
    35                                  	PARASTART equ 3DD0h ; BIOSDATASTART+BIOSDATASIZE
    36                                  			    ; +BIOSCODESIZE+DOSDATASIZE (rounded up)
    37                                  
    38					******************************************************************************	  
    39
    40                                  	;[ORG PARASTART]	
    41                                  
    42                                  _$STARTCODE:				; ...
    43 00003DD0 E9A679                  		jmp	DOSINIT
    44                                  ; ---------------------------------------------------------------------------
    45 00003DD3 [D03D]                  		dw _$STARTCODE		; PARASTART
    46 00003DD5 7000                    BioDataSeg	dw 70h
    47 00003DD7 0000                    DosDSeg		dw 0			; ...
    48 00003DD9 05                      MSMAJOR		db 5			; MAJOR_VERSION
    49 00003DDA 00                      MSMINOR		db 0			; MINOR_VERSION
    50 00003DDB 38020102                I21_MAP_E_TAB	db 38h,	2, 1, 2		; ...
    51 00003DDF 3903030205              		db 39h,	3, 3, 2, 5
    52 00003DE4 3A0410030205            		db 3Ah,	4, 10h,	3, 2, 5
    53 00003DEA 3B020203                		db 3Bh,	2, 2, 3
    54 00003DEE 3C0403020405            		db 3Ch,	4, 3, 2, 4, 5
    55 00003DF4 3D0603020C041A05        		db 3Dh,	6, 3, 2, 0Ch, 4, 1Ah, 5
    56 00003DFC 3E0106                  		db 3Eh,	1, 6
    57 00003DFF 3F020605                		db 3Fh,	2, 6, 5
    58 00003E03 40020605                		db 40h,	2, 6, 5
    59 00003E07 4103030205              		db 41h,	3, 3, 2, 5
    60 00003E0C 42020601                		db 42h,	2, 6, 1
    61 00003E10 430403020105            		db 43h,	4, 3, 2, 1, 5
    62 00003E16 44050F0D010605          		db 44h,	5, 0Fh,	0Dh, 1,	6, 5
    63 00003E1D 45020604                		db 45h,	2, 6, 4
    64 00003E21 46020604                		db 46h,	2, 6, 4
    65 00003E25 47021A0F                		db 47h,	2, 1Ah,	0Fh
    66 00003E29 48020708                		db 48h,	2, 7, 8
    67 00003E2D 49020709                		db 49h,	2, 7, 9
    68 00003E31 4A03070908              		db 4Ah,	3, 7, 9, 8
    69 00003E36 4B08030102040B0A08-     		db 4Bh,	8, 3, 1, 2, 4, 0Bh, 0Ah, 8, 5
    69 00003E3F 05                 
    70 00003E40 4E03030212              		db 4Eh,	3, 3, 2, 12h
    71 00003E45 4F0112                  		db 4Fh,	1, 12h
    72 00003E48 56051103021005          		db 56h,	5, 11h,	3, 2, 10h, 5
    73 00003E4F 570406080D01            		db 57h,	4, 6, 8, 0Dh, 1
    74 00003E55 580101                  		db 58h,	1, 1
    75 00003E58 5A0403020405            		db 5Ah,	4, 3, 2, 4, 5
    76 00003E5E 5B055003020405          		db 5Bh,	5, 50h,	3, 2, 4, 5
    77 00003E65 5C0406012421            		db 5Ch,	4, 6, 1, 24h, 21h
    78 00003E6B 65020102                		db 65h,	2, 1, 2
    79 00003E6F 66020102                		db 66h,	2, 1, 2
    80 00003E73 680106                  		db 68h,	1, 6
    81 00003E76 6703040801              		db 67h,	3, 4, 8, 1
    82 00003E7B 6C0A03020C0450081A-     		db 6Ch,	0Ah, 3,	2, 0Ch,	4, 50h,	8, 1Ah,	0Dh, 1,	5
    82 00003E84 0D0105             
    83 00003E87 69040F0D0105FF          		db 69h,	4, 0Fh,	0Dh, 1,	5, 0FFh
    84 00003E8E [97A1]                  DISPATCH	dw _$ABORT	; ...
    85 00003E90 [CC54]                  		dw _$STD_CON_INPUT
    86 00003E92 [D554]                  		dw _$STD_CON_OUTPUT
    87 00003E94 [8B55]                  		dw _$STD_AUX_INPUT
    88 00003E96 [A855]                  		dw _$STD_AUX_OUTPUT
    89 00003E98 [AE55]                  		dw _$STD_PRINTER_OUTPUT
    90 00003E9A [0854]                  		dw _$RAW_CON_IO
    91 00003E9C [3754]                  		dw _$RAW_CON_INPUT
    92 00003E9E [A651]                  		dw _$STD_CON_INPUT_NO_ECHO
    93 00003EA0 [0052]                  		dw _$STD_CON_STRING_OUTPUT
    94 00003EA2 [0C52]                  		dw _$STD_CON_STRING_INPUT
    95 00003EA4 [C255]                  		dw _$STD_CON_INPUT_STATUS
    96 00003EA6 [CC55]                  		dw _$STD_CON_INPUT_FLUSH
    97 00003EA8 [944D]                  		dw _$DISK_RESET
    98 00003EAA [6B4C]                  		dw _$SET_DEFAULT_DRIVE
    99 00003EAC [B85C]                  		dw _$FCB_OPEN
   100 00003EAE [7456]                  		dw _$FCB_CLOSE
   101 00003EB0 [CB5D]                  		dw _$DIR_SEARCH_FIRST
   102 00003EB2 [5F5E]                  		dw _$DIR_SEARCH_NEXT
   103 00003EB4 [1156]                  		dw _$FCB_DELETE
   104 00003EB6 [B75D]                  		dw _$FCB_SEQ_READ
   105 00003EB8 [BC5D]                  		dw _$FCB_SEQ_WRITE
   106 00003EBA [9D5D]                  		dw _$FCB_CREATE
   107 00003EBC [E556]                  		dw _$FCB_RENAME
   108 00003EBE [0044]                  		dw NO_OP
   109 00003EC0 [664C]                  		dw _$GET_DEFAULT_DRIVE
   110 00003EC2 [5B4C]                  		dw _$SET_DMA
   111 00003EC4 [204D]                  		dw _$SLEAZEFUNC
   112 00003EC6 [224D]                  		dw _$SLEAZEFUNCDL
   113 00003EC8 [0044]                  		dw NO_OP
   114 00003ECA [0044]                  		dw NO_OP
   115 00003ECC [644D]                  		dw _$GET_DEFAULT_DPB
   116 00003ECE [0044]                  		dw NO_OP
   117 00003ED0 [C15D]                  		dw _$FCB_RANDOM_READ
   118 00003ED2 [C65D]                  		dw _$FCB_RANDOM_WRITE
   119 00003ED4 [2556]                  		dw _$GET_FCB_FILE_LENGTH
   120 00003ED6 [F955]                  		dw _$GET_FCB_POSITION
   121 00003ED8 [8D4C]                  		dw _$SET_INTERRUPT_VECTOR
   122 00003EDA [A24E]                  		dw _$CREATE_PROCESS_DATA_BLOCK
   123 00003EDC [B25D]                  		dw _$FCB_RANDOM_READ_BLOCK
   124 00003EDE [AD5D]                  		dw _$FCB_RANDOM_WRITE_BLOCK
   125 00003EE0 [154D]                  		dw _$PARSE_FILE_DESCRIPTOR
   126 00003EE2 [2C48]                  		dw _$GET_DATE
   127 00003EE4 [4948]                  		dw _$SET_DATE
   128 00003EE6 [6948]                  		dw _$GET_TIME
   129 00003EE8 [7A48]                  		dw _$SET_TIME
   130 00003EEA [394A]                  		dw _$SET_VERIFY_ON_WRITE
   131 00003EEC [474C]                  		dw _$GET_DMA
   132 00003EEE [0F4A]                  		dw _$GET_VERSION
   133 00003EF0 [3BA1]                  		dw _$KEEP_PROCESS
   134 00003EF2 [664D]                  		dw _$GET_DPB
   135 00003EF4 [4540]                  		dw _$SET_CTRL_C_TRAPPING
   136 00003EF6 [4C4D]                  		dw _$GET_INDOS_FLAG
   137 00003EF8 [7D4C]                  		dw _$GET_INTERRUPT_VECTOR
   138 00003EFA [1E4C]                  		dw _$GET_DRIVE_FREESPACE
   139 00003EFC [BC4C]                  		dw _$CHAR_OPER
   140 00003EFE [404A]                  		dw _$INTERNATIONAL
   141 00003F00 [CD60]                  		dw _$MKDIR
   142 00003F02 [1560]                  		dw _$RMDIR
   143 00003F04 [5160]                  		dw _$CHDIR
   144 00003F06 [84AF]                  		dw _$CREAT
   145 00003F08 [ADAE]                  		dw _$OPEN
   146 00003F0A [CBA6]                  		dw _$CLOSE
   147 00003F0C [DAA7]                  		dw _$READ
   148 00003F0E [40A8]                  		dw _$WRITE
   149 00003F10 [D6AF]                  		dw _$UNLINK
   150 00003F12 [45A8]                  		dw _$LSEEK
   151 00003F14 [91AF]                  		dw _$CHMOD
   152 00003F16 [2E61]                  		dw _$IOCTL
   153 00003F18 [FBA8]                  		dw _$DUP
   154 00003F1A [1BA9]                  		dw _$DUP2
   155 00003F1C [9C5F]                  		dw _$CURRENT_DIR
   156 00003F1E [2EA2]                  		dw _$ALLOC
   157 00003F20 [B3A3]                  		dw _$DEALLOC
   158 00003F22 [8FA3]                  		dw _$SETBLOCK
   159 00003F24 [049B]                  		dw _$EXEC
   160 00003F26 [73A1]                  		dw _$EXIT
   161 00003F28 [FA9A]                  		dw _$WAIT
   162 00003F2A [D25E]                  		dw _$FIND_FIRST
   163 00003F2C [2A5F]                  		dw _$FIND_NEXT
   164 00003F2E [9C40]                  		dw _$SET_CURRENT_PDB
   165 00003F30 [A840]                  		dw _$GET_CURRENT_PDB
   166 00003F32 [584D]                  		dw _$GET_IN_VARS
   167 00003F34 [C94D]                  		dw _$SETDPB
   168 00003F36 [344A]                  		dw _$GET_VERIFY_ON_WRITE
   169 00003F38 [914E]                  		dw _$DUP_PDB
   170 00003F3A [FCAF]                  		dw _$RENAME
   171 00003F3C [ADA8]                  		dw _$FILE_TIMES
   172 00003F3E [E9A3]                  		dw _$ALLOCOPER
   173 00003F40 [D04C]                  		dw _$GetExtendedError
   174 00003F42 [87B0]                  		dw _$CreateTempFile
   175 00003F44 [6FB0]                  		dw _$CreateNewFile
   176 00003F46 [76B2]                  		dw _$LockOper
   177 00003F48 [D2A4]                  		dw _$ServerCall
   178 00003F4A [EAA9]                  		dw _$UserOper
   179 00003F4C [4BA9]                  		dw _$AssignOper
   180 00003F4E [46AE]                  		dw _$NameTrans
   181 00003F50 [0044]                  		dw NO_OP
   182 00003F52 [A840]                  		dw _$GET_CURRENT_PDB
   183 00003F54 [FD4C]                  		dw _$ECS_Call
   184 00003F56 [B440]                  		dw _$SET_PRINTER_FLAG
   185 00003F58 [CB4A]                  		dw _$GetExtCntry
   186 00003F5A [C94B]                  		dw _$GetSetCdPg
   187 00003F5C [18A7]                  		dw _$ExtHandle
   188 00003F5E [FEA6]                  		dw _$COMMIT
   189 00003F60 [AA4F]                  		dw _$GSetMediaID
   190 00003F62 [FEA6]                  		dw _$COMMIT
   191 00003F64 [0044]                  		dw NO_OP
   192 00003F66 [21B1]                  		dw _$Extended_Open
   193 00003F68 [BD44]                  FOO		dw Leave2F	; ...
   194 00003F6A [6C3F]                  Dtab		dw DOSTable	; ...
   195 00003F6C 30                      DOSTable	db 48			; ...
   196 00003F6D [0147]                  		dw DOSInstall
   197 00003F6F [1A6E]                  		dw DOS_CLOSE
   198 00003F71 [B14C]                  		dw RECSET
   199 00003F73 [FB46]                  		dw DOSGetGroup
   200 00003F75 [0B90]                  		dw PATHCHRCMP
   201 00003F77 [D754]                  		dw OUTT
   202 00003F79 [E792]                  		dw NET_I24_ENTRY
   203 00003F7B [8F98]                  		dw PLACEBUF
   204 00003F7D [1B6F]                  		dw FREE_SFT
   205 00003F7F [459A]                  		dw BUFWRITE
   206 00003F81 [2DB3]                  		dw SHARE_VIOLATION
   207 00003F83 [566B]                  		dw SHARE_ERROR
   208 00003F85 [3F6B]                  		dw SET_SFT_MODE
   209 00003F87 [C148]                  		dw DATE16
   210 00003F89 [1C50]                  		dw Idle
   211 00003F8B [8898]                  		dw SCANPLACE
   212 00003F8D [1C50]                  		dw Idle
   213 00003F8F [E54F]                  		dw StrCpy
   214 00003F91 [FD4F]                  		dw StrLen
   215 00003F93 [B68F]                  		dw UCase
   216 00003F95 [CC98]                  		dw POINTCOMP
   217 00003F97 [1C9A]                  		dw CHECKFLUSH
   218 00003F99 [44A6]                  		dw SFFromSFN
   219 00003F9B [B3AA]                  		dw GetCDSFromDrv
   220 00003F9D [7542]                  		dw Get_User_Stack
   221 00003F9F [5CAA]                  		dw GETTHISDRV
   222 00003FA1 [6BAE]                  		dw DriveFromText
   223 00003FA3 [6B49]                  		dw SETYEAR
   224 00003FA5 [054A]                  		dw DSUM
   225 00003FA7 [5F49]                  		dw DSLIDE
   226 00003FA9 [C34F]                  		dw StrCmp
   227 00003FAB [9DA9]                  		dw InitCDS
   228 00003FAD [0DA6]                  		dw pJFNFromHandle
   229 00003FAF [46AE]                  		dw _$NameTrans
   230 00003FB1 [2744]                  		dw CAL_LK
   231 00003FB3 [0D81]                  		dw DEVNAME
   232 00003FB5 [1C50]                  		dw Idle
   233 00003FB7 [0B50]                  		dw DStrLen
   234 00003FB9 [C050]                  		dw NLS_OPEN
   235 00003FBB [CBA6]                  		dw _$CLOSE
   236 00003FBD [C650]                  		dw NLS_LSEEK
   237 00003FBF [DAA7]                  		dw _$READ
   238 00003FC1 [8050]                  		dw FastInit
   239 00003FC3 [0351]                  		dw NLS_IOCTL
   240 00003FC5 [F250]                  		dw GetDevList
   241 00003FC7 [2051]                  		dw NLS_GETEXT
   242 00003FC9 [2551]                  		dw MSG_RETRIEVAL
   243 00003FCB [0044]                  		dw NO_OP
   244 00003FCD 4D5320444F53205665-     ms_copyright	db 'MS DOS Version 5.00 (C)Copyright 1981-1991 Microsoft Corp License'
   244 00003FD6 7273696F6E20352E30-
   244 00003FDF 3020284329436F7079-
   244 00003FE8 726967687420313938-
   244 00003FF1 312D31393931204D69-
   244 00003FFA 63726F736F66742043-
   244 00004003 6F7270204C6963656E-
   244 0000400C 7365               
   245 0000400E 64204D617465726961-     		db 'd Material - Property of Microsoft All rights reserved '
   245 00004017 6C202D2050726F7065-
   245 00004020 727479206F66204D69-
   245 00004029 63726F736F66742041-
   245 00004032 6C6C20726967687473-
   245 0000403B 207265736572766564-
   245 00004044 20                 
   246                                  ; ---------------------------------------------------------------------------
   247                                  
   248                                  _$SET_CTRL_C_TRAPPING:			; ...
   249 00004045 3C06                    		cmp	al, 6
   250 00004047 7603                    		jbe	short scct_1
   251 00004049 B0FF                    		mov	al, 0FFh
   252 0000404B CF                      		iret
   253                                  ; ---------------------------------------------------------------------------
   254                                  
   255                                  scct_1:					; ...
   256 0000404C 1E                      		push	ds
   257 0000404D 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   258 00004052 50                      		push	ax
   259 00004053 56                      		push	si
   260 00004054 BE[3703]                		mov	si, CNTCFLAG
   261 00004057 30E4                    		xor	ah, ah
   262 00004059 09C0                    		or	ax, ax
   263 0000405B 7504                    		jnz	short scct_2
   264 0000405D 8A14                    		mov	dl, [si]
   265 0000405F EB35                    		jmp	short scct_6	; scct_9s
   266                                  ; ---------------------------------------------------------------------------
   267                                  
   268                                  scct_2:					; ...
   269 00004061 48                      		dec	ax
   270 00004062 7507                    		jnz	short scct_3
   271 00004064 80E201                  		and	dl, 1
   272 00004067 8814                    		mov	[si], dl
   273 00004069 EB2B                    		jmp	short scct_6	; scct_9s
   274                                  ; ---------------------------------------------------------------------------
   275                                  
   276                                  scct_3:					; ...
   277 0000406B 48                      		dec	ax
   278 0000406C 7507                    		jnz	short scct_4
   279 0000406E 80E201                  		and	dl, 1
   280 00004071 8614                    		xchg	dl, [si]
   281 00004073 EB21                    		jmp	short scct_6	; scct_9s
   282                                  ; ---------------------------------------------------------------------------
   283                                  
   284                                  scct_4:					; ...
   285 00004075 83F803                  		cmp	ax, 3
   286 00004078 7506                    		jnz	short scct_5
   287 0000407A 8A16[6900]              		mov	dl, [BOOTDRIVE]
   288 0000407E EB16                    		jmp	short scct_6	; scct_9s
   289                                  ; ---------------------------------------------------------------------------
   290                                  
   291                                  scct_5:					; ...
   292 00004080 83F804                  		cmp	ax, 4
   293 00004083 7511                    		jnz	short scct_6	; scct_9s
   294 00004085 BB0500                  		mov	bx, 5		; (MINOR_VERSION<<8)+MAJOR_VERSION
   295 00004088 B200                    		mov	dl, 0		; DOSREVNM
   296 0000408A 30F6                    		xor	dh, dh
   297 0000408C 803E[1112]00            		cmp	byte [DosHasHMA],	0
   298 00004091 7403                    		jz	short scct_6
   299 00004093 80CE10                  		or	dh, 10h		; DOSINHMA
   300                                  
   301                                  scct_6:					; ...
   302 00004096 5E                      		pop	si		; scct_9s
   303 00004097 58                      		pop	ax
   304 00004098 1F                      		pop	ds
   305 00004099 CF                      		iret
   306                                  ; ---------------------------------------------------------------------------
   307                                  
   308                                  SetCtrlShortEntry:			; ...
   309 0000409A EBA9                    		jmp	short _$SET_CTRL_C_TRAPPING
   310                                  ; ---------------------------------------------------------------------------
   311                                  
   312                                  _$SET_CURRENT_PDB:			; ...
   313 0000409C 1E                      		push	ds
   314 0000409D 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   315 000040A2 891E[3003]              		mov	[CurrentPDB], bx
   316 000040A6 1F                      		pop	ds
   317 000040A7 CF                      		iret
   318                                  ; ---------------------------------------------------------------------------
   319                                  
   320                                  _$GET_CURRENT_PDB:			; ...
   321 000040A8 1E                      		push	ds
   322 000040A9 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   323 000040AE 8B1E[3003]              		mov	bx, [CurrentPDB]
   324 000040B2 1F                      		pop	ds
   325 000040B3 CF                      		iret
   326                                  ; ---------------------------------------------------------------------------
   327                                  
   328                                  _$SET_PRINTER_FLAG:			; ...
   329 000040B4 1E                      		push	ds
   330 000040B5 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   331 000040BA A2[A00A]                		mov	[PRINTER_FLAG], al
   332 000040BD 1F                      		pop	ds
   333 000040BE CF                      		iret
   334                                  ; ---------------------------------------------------------------------------
   335                                  
   336                                  QUIT:					; ...
   337 000040BF 30E4                    		xor	ah, ah
   338 000040C1 EB2E                    		jmp	short SAVREGS
   339                                  ; ---------------------------------------------------------------------------
   340                                  
   341                                  BADCALL:				; ...
   342 000040C3 30C0                    		xor	al, al
   343                                  
   344                                  IRETT:					; ...
   345 000040C5 CF                      		iret
   346                                  ; ---------------------------------------------------------------------------
   347                                  
   348                                  CALL_ENTRY:				; ...
   349 000040C6 1E                      		push	ds
   350 000040C7 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   351 000040CC 8F06[EC05]              		pop	word [SAVEDS]
   352 000040D0 58                      		pop	ax
   353 000040D1 58                      		pop	ax
   354 000040D2 8F06[8405]              		pop	word [USER_SP]
   355 000040D6 9C                      		pushf
   356 000040D7 FA                      		cli
   357 000040D8 50                      		push	ax
   358 000040D9 FF36[8405]              		push	word [USER_SP]
   359 000040DD FF36[EC05]              		push	word [SAVEDS]
   360 000040E1 1F                      		pop	ds
   361 000040E2 80F924                  		cmp	cl, 36		; MAXCALL
   362 000040E5 77DC                    		ja	short BADCALL
   363 000040E7 88CC                    		mov	ah, cl
   364 000040E9 EB06                    		jmp	short SAVREGS
   365                                  ; ---------------------------------------------------------------------------
   366                                  
   367                                  COMMAND:				; ...
   368 000040EB FA                      		cli
   369 000040EC 80FC6C                  		cmp	ah, 6Ch
   370 000040EF 77D2                    		ja	short BADCALL
   371                                  
   372                                  SAVREGS:				; ...
   373 000040F1 80FC33                  		cmp	ah, 33h
   374 000040F4 7218                    		jb	short loc_410E
   375 000040F6 74A2                    		jz	short SetCtrlShortEntry
   376 000040F8 80FC64                  		cmp	ah, 64h
   377 000040FB 7711                    		ja	short loc_410E
   378 000040FD 74B5                    		jz	short _$SET_PRINTER_FLAG
   379 000040FF 80FC51                  		cmp	ah, 51h
   380 00004102 74A4                    		jz	short _$GET_CURRENT_PDB
   381 00004104 80FC62                  		cmp	ah, 62h
   382 00004107 749F                    		jz	short _$GET_CURRENT_PDB
   383 00004109 80FC50                  		cmp	ah, 50h
   384 0000410C 748E                    		jz	short _$SET_CURRENT_PDB
   385                                  
   386                                  loc_410E:				; ...
   387 0000410E 06                      		push	es
   388 0000410F 1E                      		push	ds
   389 00004110 55                      		push	bp
   390 00004111 57                      		push	di
   391 00004112 56                      		push	si
   392 00004113 52                      		push	dx
   393 00004114 51                      		push	cx
   394 00004115 53                      		push	bx
   395 00004116 50                      		push	ax
   396 00004117 8CD8                    		mov	ax, ds
   397 00004119 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   398 0000411E A3[EC05]                		mov	[SAVEDS], ax
   399 00004121 891E[EA05]              		mov	[SAVEBX], bx
   400 00004125 A1[8405]                		mov	ax, [USER_SP]
   401 00004128 A3[F205]                		mov	[NSP], ax
   402 0000412B A1[8605]                		mov	ax, [USER_SS]
   403 0000412E A3[F005]                		mov	[NSS], ax
   404 00004131 31C0                    		xor	ax, ax
   405 00004133 A2[7205]                		mov	[FSHARING], al
   406 00004136 F606[3010]01            		test	byte [IsWin386], 1
   407 0000413B 7503                    		jnz	short loc_4140
   408 0000413D A3[3E03]                		mov	[USER_ID], ax
   409                                  
   410                                  loc_4140:				; ...
   411 00004140 FE06[2103]              		inc	byte [INDOS]
   412 00004144 8926[8405]              		mov	[USER_SP], sp
   413 00004148 8C16[8605]              		mov	[USER_SS], ss
   414 0000414C A1[3003]                		mov	ax, [CurrentPDB]
   415 0000414F A3[3C03]                		mov	[PROC_ID], ax
   416 00004152 8ED8                    		mov	ds, ax
   417 00004154 58                      		pop	ax
   418 00004155 50                      		push	ax
   419 00004156 89262E00                		mov	[2Eh], sp	; [PDB.USER_STACK]
   420 0000415A 8C163000                		mov	word [30h], ss	; [PDB.USER_STACK+2]
   421 0000415E 2E8E16[D73D]            		mov	ss, [cs:DosDSeg]
   422                                  
   423                                  REDISP:					; ...
   424 00004163 BC[A007]                		mov	sp, AUXSTACK
   425 00004166 FB                      		sti
   426 00004167 8CD3                    		mov	bx, ss
   427 00004169 8EDB                    		mov	ds, bx
   428 0000416B 93                      		xchg	ax, bx
   429 0000416C 31C0                    		xor	ax, ax
   430 0000416E 36A2[F605]              		mov	[ss:EXTOPEN_ON], al
   431 00004172 368126[1106]0008        		and	word [ss:DOS34_FLAG], 800h
   432 00004179 36A2[5703]              		mov	[ss:CONSWAP], al
   433 0000417D 36A2[4C03]              		mov	[ss:NoSetDir], al
   434 00004181 36A2[4A03]              		mov	byte [ss:FAILERR], al
   435 00004185 40                      		inc	ax
   436 00004186 36A2[5803]              		mov	[ss:IDLEINT], al ; 1
   437 0000418A 93                      		xchg	ax, bx
   438 0000418B 88E3                    		mov	bl, ah
   439 0000418D D1E3                    		shl	bx, 1
   440 0000418F FC                      		cld
   441 00004190 08E4                    		or	ah, ah
   442 00004192 7417                    		jz	short DSKROUT
   443 00004194 80FC59                  		cmp	ah, 59h		; GETEXTENDEDERROR
   444 00004197 7444                    		jz	short DISPCALL
   445 00004199 80FC0C                  		cmp	ah, 12		; STD_CON_INPUT_FLUSH
   446 0000419C 770D                    		ja	short DSKROUT
   447                                  
   448                                  IOROUT:
   449 0000419E 36803E[2003]00          		cmp	byte [ss:ERRORMODE], 0
   450 000041A4 7537                    		jnz	short DISPCALL
   451 000041A6 BC[A00A]                		mov	sp, PRINTER_FLAG	; IOSTACK
   452 000041A9 EB32                    		jmp	short DISPCALL
   453                                  ; ---------------------------------------------------------------------------
   454                                  
   455                                  DSKROUT:				; ...
   456 000041AB 36A3[3A03]              		mov	[ss:USER_IN_AX], ax
   457 000041AF 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1
   458 000041B5 36C606[2003]00          		mov	byte [ss:ERRORMODE], 0
   459 000041BB 36C606[2203]FF          		mov	byte [ss:WPERR], 0FFh
   460 000041C1 50                      		push	ax
   461 000041C2 B482                    		mov	ah, 82h
   462 000041C4 CD2A                    		int	2Ah		; Microsoft Networks - END DOS CRITICAL	SECTIONS 0 THROUGH 7
   463 000041C6 58                      		pop	ax
   464 000041C7 36C606[5803]00          		mov	byte [ss:IDLEINT], 0
   465 000041CD BC[2009]                		mov	sp, DSKSTACK
   466 000041D0 36F606[3703]FF          		test	byte [ss:CNTCFLAG], 0FFh ; -1
   467 000041D6 7405                    		jz	short DISPCALL
   468 000041D8 50                      		push	ax
   469 000041D9 E8484E                  		call	DSKSTATCHK
   470 000041DC 58                      		pop	ax
   471                                  
   472                                  DISPCALL:				; ...
   473 000041DD 2E8B9F[8E3E]            		mov	bx, [cs:DISPATCH+bx] ; [CS:BX+DISPATCH]
   474 000041E2 36871E[EA05]            		xchg	bx, [ss:SAVEBX]
   475 000041E7 368E1E[EC05]            		mov	ds, [ss:SAVEDS]
   476                                  		;call	[ss:SAVEBX]
   477 000041EC 36FF16[EA05]            		call	word [SS:SAVEBX] ; near call
   478 000041F1 368026[8600]FB          		and	byte [ss:DOS_FLAG], 0FBh
   479                                  
   480                                  LeaveDOS:				; ...
   481 000041F7 FA                      		cli
   482 000041F8 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   483 000041FD 803E[8500]00            		cmp	byte [A20OFF_COUNT], 0
   484 00004202 7527                    		jnz	short disa20
   485                                  
   486                                  LeaveA20On:				; ...
   487 00004204 FE0E[2103]              		dec	byte [INDOS]
   488 00004208 8E16[8605]              		mov	ss, [USER_SS]
   489 0000420C 8B26[8405]              		mov	sp, [USER_SP]
   490 00004210 89E5                    		mov	bp, sp
   491 00004212 884600                  		mov	[bp+0],	al
   492 00004215 A1[F205]                		mov	ax, [NSP]
   493 00004218 A3[8405]                		mov	[USER_SP], ax
   494 0000421B A1[F005]                		mov	ax, [NSS]
   495 0000421E A3[8605]                		mov	[USER_SS], ax
   496 00004221 58                      		pop	ax
   497 00004222 5B                      		pop	bx
   498 00004223 59                      		pop	cx
   499 00004224 5A                      		pop	dx
   500 00004225 5E                      		pop	si
   501 00004226 5F                      		pop	di
   502 00004227 5D                      		pop	bp
   503 00004228 1F                      		pop	ds
   504 00004229 07                      		pop	es
   505 0000422A CF                      		iret
   506                                  ; ---------------------------------------------------------------------------
   507                                  
   508                                  disa20:					; ...
   509 0000422B 8B1E[6300]              		mov	bx, [A20OFF_PSP]
   510 0000422F 3B1E[3003]              		cmp	bx, [CurrentPDB]
   511 00004233 75CF                    		jnz	short LeaveA20On
   512 00004235 FE0E[8500]              		dec	byte [A20OFF_COUNT]
   513 00004239 1E                      		push	ds
   514 0000423A BB[2D11]                		mov	bx, disa20_iret
   515 0000423D 53                      		push	bx
   516 0000423E CB                      		retf
   517                                  ; ---------------------------------------------------------------------------
   518                                  
   519                                  restore_world:				; ...
   520 0000423F 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
   521 00004244 268F06[EE05]            		pop	word [es:RESTORE_TMP]
   522 00004249 58                      		pop	ax
   523 0000424A 5B                      		pop	bx
   524 0000424B 59                      		pop	cx
   525 0000424C 5A                      		pop	dx
   526 0000424D 5E                      		pop	si
   527 0000424E 5F                      		pop	di
   528 0000424F 5D                      		pop	bp
   529 00004250 1F                      		pop	ds
   530 00004251 26FF26[EE05]            		jmp	[es:RESTORE_TMP]
   531                                  ; ---------------------------------------------------------------------------
   532                                  
   533                                  save_world:				; ...
   534 00004256 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
   535 0000425B 268F06[EE05]            		pop	word [es:RESTORE_TMP]
   536 00004260 1E                      		push	ds
   537 00004261 55                      		push	bp
   538 00004262 57                      		push	di
   539 00004263 56                      		push	si
   540 00004264 52                      		push	dx
   541 00004265 51                      		push	cx
   542 00004266 53                      		push	bx
   543 00004267 50                      		push	ax
   544 00004268 26FF36[EE05]            		push	word [es:RESTORE_TMP]
   545 0000426D 55                      		push	bp
   546 0000426E 89E5                    		mov	bp, sp
   547 00004270 8E4614                  		mov	es, word [bp+20]
   548 00004273 5D                      		pop	bp
   549 00004274 C3                      		retn
   550                                  
   551                                  ; =============== S U B	R O U T	I N E =======================================
   552                                  
   553                                  		Get_User_Stack:	; ...
   554 00004275 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   555 0000427A C536[8405]              		lds	si, [USER_SP]
   556 0000427E C3                      		retn
   557                                  
   558                                  ; ---------------------------------------------------------------------------
   559 0000427F 02                      ERRIN		db 2			; ...
   560 00004280 06                      		db 6
   561 00004281 0C                      		db 12
   562 00004282 04                      		db 4
   563 00004283 08                      		db 8
   564 00004284 00                      		db 0
   565 00004285 80                      ERROUT		db 80h
   566 00004286 40                      		db 40h
   567 00004287 02                      		db 2
   568 00004288 10                      		db 10h
   569 00004289 04                      		db 4
   570 0000428A 03                      		db 3
   571                                  
   572                                  ; =============== S U B	R O U T	I N E =======================================
   573                                  
   574                                  
   575                                   AbsSetup:		; ...
   576 0000428B 36FE06[2103]            		inc	byte [ss:INDOS]
   577 00004290 FB                      		sti
   578 00004291 FC                      		cld
   579 00004292 1E                      		push	ds
   580 00004293 16                      		push	ss
   581 00004294 1F                      		pop	ds
   582 00004295 E80C01                  		call	GETBP
   583 00004298 7206                    		jb	short errdriv
   584 0000429A 26C7461FFFFF            		mov	word [es:bp+1Fh], -1 ; [ES:BP+DPB.FREE_CNT]
   585                                  
   586                                  errdriv:				; ...
   587 000042A0 1F                      		pop	ds
   588 000042A1 7301                    		jnb	short AbsSetup2
   589                                  
   590                                  AbsSetup_retn:				; ...
   591 000042A3 C3                      		retn
   592                                  ; ---------------------------------------------------------------------------
   593                                  
   594                                  AbsSetup2:				; ...
   595 000042A4 36C706[0706]0000        		mov	word [ss:HIGH_SECTOR], 0
   596 000042AB E85604                  		call	RW32_CONVERT
   597 000042AE 72F3                    		jb	short AbsSetup_retn
   598 000042B0 E82058                  		call	SET_RQ_SC_PARMS
   599 000042B3 1E                      		push	ds
   600 000042B4 56                      		push	si
   601 000042B5 50                      		push	ax
   602 000042B6 16                      		push	ss
   603 000042B7 1F                      		pop	ds
   604 000042B8 BE[BE03]                		mov	si, OPENBUF
   605 000042BB 8804                    		mov	[si], al
   606 000042BD 800441                  		add	byte [si], 'A' ; 41h
   607 000042C0 C744013A00              		mov	word [si+1], ':' ; 3Ah
   608 000042C5 B80003                  		mov	ax, 300h
   609 000042C8 F8                      		clc
   610 000042C9 CD2A                    		int	2Ah		; Microsoft Networks - CHECK DIRECT I/O
   611                                  					; DS:SI	-> ASCIZ disk device name (may be full path or only drive
   612                                  					; specifier--must include the colon)
   613                                  					; Return: CF clear if absolute disk access allowed
   614 000042CB 58                      		pop	ax
   615 000042CC 5E                      		pop	si
   616 000042CD 1F                      		pop	ds
   617 000042CE 73D3                    		jnb	short AbsSetup_retn
   618 000042D0 36C706[2403]3200        		mov	word [ss:EXTERR], 32h
   619 000042D7 C3                      		retn
   620                                  ; ---------------------------------------------------------------------------
   621                                  
   622                                  ABSDRD:					; ...
   623 000042D8 FA                      		cli
   624 000042D9 50                      		push	ax
   625 000042DA 8CD8                    		mov	ax, ds
   626 000042DC 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   627 000042E1 A3[0A0D]                		mov	[TEMPSEG], ax
   628 000042E4 58                      		pop	ax
   629 000042E5 06                      		push	es
   630 000042E6 8C16[1B06]              		mov	[AbsRdWr_SS], ss
   631 000042EA 8926[1D06]              		mov	[AbsRdWr_SP], sp
   632 000042EE 2E8E16[D73D]            		mov	ss, [cs:DosDSeg]
   633 000042F3 BC[2009]                		mov	sp, DSKSTACK
   634 000042F6 8E1E[0A0D]              		mov	ds, [TEMPSEG]
   635 000042FA 06                      		push	es
   636 000042FB E858FF                  		call	save_world
   637 000042FE 06                      		push	es
   638 000042FF E889FF                  		call	AbsSetup
   639 00004302 723D                    		jb	short ILEAVE
   640 00004304 E81F0E                  		call	ECritDisk
   641 00004307 36C606[B00D]FF          		mov	byte [ss:CurSC_DRIVE], 0FFh ; -1
   642 0000430D E8360E                  		call	LCritDisk
   643 00004310 E87233                  		call	DSKREAD
   644 00004313 7513                    		jnz	short ERR_LEAVE
   645 00004315 89F9                    		mov	cx, di
   646 00004317 368C1E[0E06]            		mov	[ss:TEMP_VAR2],	ds
   647 0000431C 36891E[0C06]            		mov	[ss:TEMP_VAR], bx
   648 00004321 E8B835                  		call	DskRdBufScan
   649 00004324 EB1B                    		jmp	short ILEAVE
   650                                  ; ---------------------------------------------------------------------------
   651                                  
   652                                  TLEAVE:					; ...
   653 00004326 7419                    		jz	short ILEAVE
   654                                  
   655                                  ERR_LEAVE:				; ...
   656 00004328 06                      		push	es
   657 00004329 0E                      		push	cs
   658 0000432A 07                      		pop	es
   659 0000432B 30E4                    		xor	ah, ah
   660 0000432D B90600                  		mov	cx, 6		; NUMERR
   661 00004330 BF[7F42]                		mov	di, ERRIN
   662 00004333 F2AE                    		repne scasb
   663 00004335 7504                    		jnz	short LEAVECODE
   664 00004337 268A6505                		mov	ah, [es:di+5]
   665                                  
   666                                  LEAVECODE:				; ...
   667 0000433B 07                      		pop	es
   668 0000433C 36A3[B80D]              		mov	[ss:AbsDskErr],	ax
   669 00004340 F9                      		stc
   670                                  
   671                                  ILEAVE:					; ...
   672 00004341 07                      		pop	es
   673 00004342 E8FAFE                  		call	restore_world
   674 00004345 07                      		pop	es
   675 00004346 FA                      		cli
   676 00004347 36A1[B80D]              		mov	ax, [ss:AbsDskErr]
   677 0000434B 36FE0E[2103]            		dec	byte [ss:INDOS]
   678 00004350 16                      		push	ss
   679 00004351 07                      		pop	es
   680 00004352 268E16[1B06]            		mov	ss, [es:AbsRdWr_SS]
   681 00004357 268B26[1D06]            		mov	sp, [es:AbsRdWr_SP]
   682 0000435C 07                      		pop	es
   683 0000435D FB                      		sti
   684 0000435E CB                      		retf
   685                                  ; ---------------------------------------------------------------------------
   686                                  
   687                                  ABSDWRT:				; ...
   688 0000435F FA                      		cli
   689 00004360 50                      		push	ax
   690 00004361 8CD8                    		mov	ax, ds
   691 00004363 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   692 00004368 A3[0A0D]                		mov	[TEMPSEG], ax
   693 0000436B 58                      		pop	ax
   694 0000436C 06                      		push	es
   695 0000436D 8C16[1B06]              		mov	[AbsRdWr_SS], ss
   696 00004371 8926[1D06]              		mov	[AbsRdWr_SP], sp
   697 00004375 2E8E16[D73D]            		mov	ss, [cs:DosDSeg]
   698 0000437A BC[2009]                		mov	sp, DSKSTACK
   699 0000437D 8E1E[0A0D]              		mov	ds, [TEMPSEG]
   700 00004381 06                      		push	es
   701 00004382 E8D1FE                  		call	save_world
   702 00004385 06                      		push	es
   703 00004386 E802FF                  		call	AbsSetup
   704 00004389 72B6                    		jb	short ILEAVE
   705 0000438B E8980D                  		call	ECritDisk
   706 0000438E 36C606[B00D]FF          		mov	byte [ss:CurSC_DRIVE], 0FFh ; -1
   707 00004394 E8B403                  		call	Fastxxx_Purge
   708 00004397 E8AC0D                  		call	LCritDisk
   709 0000439A 1E                      		push	ds
   710 0000439B E83638                  		call	DskWrtBufPurge
   711 0000439E 1F                      		pop	ds
   712 0000439F E80C33                  		call	DSKWRITE
   713 000043A2 EB82                    		jmp	short TLEAVE
   714                                  
   715                                  ; =============== S U B	R O U T	I N E =======================================
   716                                  
   717                                  GETBP:		; ...
   718 000043A4 50                      		push	ax
   719 000043A5 0401                    		add	al, 1
   720 000043A7 7216                    		jb	short SKIPGET
   721 000043A9 E8B066                  		call	GETTHISDRV
   722 000043AC 7311                    		jnb	short SKIPGET
   723 000043AE 30E4                    		xor	ah, ah
   724 000043B0 83F81A                  		cmp	ax, 1Ah		; error_not_DOS_disk
   725 000043B3 740A                    		jz	short SKIPGET
   726 000043B5 F9                      		stc
   727 000043B6 A3[2403]                		mov	[EXTERR], ax
   728 000043B9 C706[B80D]0102          		mov	word [AbsDskErr], 201h
   729                                  
   730                                  SKIPGET:				; ...
   731 000043BF 58                      		pop	ax
   732 000043C0 7301                    		jnb	short getbp_t
   733 000043C2 C3                      		retn
   734                                  ; ---------------------------------------------------------------------------
   735                                  
   736                                  getbp_t:				; ...
   737 000043C3 C42E[A205]              		les	bp, [THISCDS]
   738 000043C7 26F746430080            		test	word [es:bp+43h], 8000h ; [ES:BP+curdir.flags],
   739                                  					; curdir_isnet
   740 000043CD 7408                    		jz	short GETBP_CDS
   741 000043CF C706[2403]3200          		mov	word [EXTERR], 32h ; '2' ; error_not_supported
   742 000043D5 F9                      		stc
   743                                  
   744                                  GETBP_RETN:
   745 000043D6 C3                      		retn
   746                                  ; ---------------------------------------------------------------------------
   747                                  
   748                                  GETBP_CDS:				; ...
   749 000043D7 26C46E45                		les	bp, [es:bp+45h]	; [ES:BP+curdir.devptr]
   750                                  
   751                                  GOTDPB:					; ...
   752 000043DB 892E[8A05]              		mov	word [THISDPB], bp
   753 000043DF 8C06[8C05]              		mov	word [THISDPB+2], es
   754 000043E3 C3                      		retn
   755                                  ; ---------------------------------------------------------------------------
   756                                  ; START	OF FUNCTION CHUNK FOR _$CLOSE
   757                                  
   758                                  SYS_RETURN:				; ...
   759 000043E4 E88EFE                  		call	Get_User_Stack	; SYS_RETURN_OK
   760 000043E7 836416FE                		and	word [si+16h], 0FFFEh ; [SI+user_env.user_F],
   761                                  					; ~f_Carry
   762 000043EB EB10                    		jmp	short DO_RET
   763                                  ; ---------------------------------------------------------------------------
   764                                  
   765                                  SYS_RET_ERR:				; ...
   766 000043ED 30E4                    		xor	ah, ah
   767 000043EF E86C00                  		call	ETAB_LK
   768 000043F2 E81A00                  		call	ErrorMap
   769                                  
   770                                  From_GetSet:				; ...
   771 000043F5 E87DFE                  		call	Get_User_Stack
   772 000043F8 834C1601                		or	word [si+16h], 1 ; [SI+user_env.user_F],
   773                                  					; f_Carry
   774 000043FC F9                      		stc
   775                                  
   776                                  DO_RET:					; ...
   777 000043FD 8904                    		mov	[si], ax
   778 000043FF C3                      		retn
   779                                  ; END OF FUNCTION CHUNK	FOR _$CLOSE
   780                                  ; ---------------------------------------------------------------------------
   781                                  
   782                                  NO_OP:					; ...
   783 00004400 30C0                    		xor	al, al
   784 00004402 C3                      		retn
   785                                  
   786                                  ; =============== S U B	R O U T	I N E =======================================
   787                                  
   788                                  FCB_RET_ER:
   789 00004403 30E4                    		xor	ah, ah
   790 00004405 36A3[2403]              		mov	word [ss:EXTERR], ax
   791 00004409 E80300                  		call	ErrorMap
   792 0000440C B0FF                    		mov	al, 0FFh	; -1
   793 0000440E C3                      		retn
   794                                  
   795                                  ; =============== S U B	R O U T	I N E =======================================
   796                                  
   797                                  ErrorMap:
   798 0000440F 56                      		push	si
   799 00004410 BE[DB0D]                		mov	si, ERR_TABLE_21
   800 00004413 36803E[4A03]00          		cmp	byte [ss:FAILERR], 0
   801 00004419 7407                    		jz	short EXTENDED_NORMAL
   802 0000441B 36C706[2403]5300        		mov	word [ss:EXTERR], 53h ; error_FAIL_I24
   803                                  
   804                                  EXTENDED_NORMAL:			; ...
   805 00004422 E80200                  		call	CAL_LK
   806 00004425 5E                      		pop	si
   807 00004426 C3                      		retn
   808                                  
   809                                  ; =============== S U B	R O U T	I N E =======================================
   810                                  
   811                                  
   812                                   CAL_LK:		; ...
   813 00004427 1E                      		push	ds
   814 00004428 50                      		push	ax
   815 00004429 53                      		push	bx
   816 0000442A 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   817 0000442F 8B1E[2403]              		mov	bx, [EXTERR]
   818                                  
   819                                  TABLK1:					; ...
   820 00004433 AC                      		lodsb
   821 00004434 3CFF                    		cmp	al, 0FFh
   822 00004436 7409                    		jz	short GOT_VALS
   823 00004438 38D8                    		cmp	al, bl
   824 0000443A 7405                    		jz	short GOT_VALS
   825 0000443C 83C603                  		add	si, 3
   826 0000443F EBF2                    		jmp	short TABLK1
   827                                  ; ---------------------------------------------------------------------------
   828                                  
   829                                  GOT_VALS:				; ...
   830 00004441 AD                      		lodsw
   831 00004442 80FCFF                  		cmp	ah, 0FFh
   832 00004445 7404                    		jz	short NO_SET_ACT
   833 00004447 8826[2603]              		mov	[EXTERR_ACTION], ah
   834                                  
   835                                  NO_SET_ACT:				; ...
   836 0000444B 3CFF                    		cmp	al, 0FFh
   837 0000444D 7403                    		jz	short NO_SET_CLS
   838 0000444F A2[2703]                		mov	[EXTERR_CLASS], al
   839                                  
   840                                  NO_SET_CLS:				; ...
   841 00004452 AC                      		lodsb
   842 00004453 3CFF                    		cmp	al, 0FFh
   843 00004455 7403                    		jz	short NO_SET_LOC
   844 00004457 A2[2303]                		mov	[EXTERR_LOCUS], al
   845                                  
   846                                  NO_SET_LOC:				; ...
   847 0000445A 5B                      		pop	bx
   848 0000445B 58                      		pop	ax
   849 0000445C 1F                      		pop	ds
   850 0000445D C3                      		retn
   851                                  
   852                                  ; =============== S U B	R O U T	I N E =======================================
   853                                  
   854                                  ETAB_LK:
   855 0000445E 1E                      		push	ds
   856 0000445F 56                      		push	si
   857 00004460 51                      		push	cx
   858 00004461 53                      		push	bx
   859 00004462 16                      		push	ss
   860 00004463 1F                      		pop	ds
   861 00004464 A3[2403]                		mov	[EXTERR], ax
   862 00004467 BE[DB3D]                		mov	si, I21_MAP_E_TAB
   863 0000446A 88C7                    		mov	bh, al
   864 0000446C 8A1E[3B03]              		mov	bl, byte [USER_IN_AX+1]
   865                                  
   866                                  TABLK2:					; ...
   867                                  		;lods	word [cs:si] ; cs lodsw
   868 00004470 2E                      		cs
   869 00004471 AD                      		lodsw
   870 00004472 3CFF                    		cmp	al, 0FFh
   871 00004474 740C                    		jz	short NOT_IN_TABLE
   872 00004476 38D8                    		cmp	al, bl
   873 00004478 740C                    		jz	short GOT_CALL
   874 0000447A 86E0                    		xchg	ah, al
   875 0000447C 30E4                    		xor	ah, ah
   876 0000447E 01C6                    		add	si, ax
   877 00004480 EBEE                    		jmp	short TABLK2
   878                                  ; ---------------------------------------------------------------------------
   879                                  
   880                                  NOT_IN_TABLE:				; ...
   881 00004482 88F8                    		mov	al, bh
   882 00004484 EB0C                    		jmp	short NO_MAP
   883                                  ; ---------------------------------------------------------------------------
   884                                  
   885                                  GOT_CALL:				; ...
   886 00004486 88E1                    		mov	cl, ah
   887 00004488 30ED                    		xor	ch, ch
   888                                  
   889                                  CHECK_CODE:				; ...
   890                                  		;lods	byte [cs:si] ; cs lodsb
   891 0000448A 2E                      		cs
   892 0000448B AC                      		lodsb
   893 0000448C 38F8                    		cmp	al, bh
   894 0000448E 7402                    		jz	short NO_MAP
   895 00004490 E2F8                    		loop	CHECK_CODE
   896                                  
   897                                  NO_MAP:					; ...
   898 00004492 30E4                    		xor	ah, ah
   899 00004494 5B                      		pop	bx
   900 00004495 59                      		pop	cx
   901 00004496 5E                      		pop	si
   902 00004497 1F                      		pop	ds
   903 00004498 C3                      		retn
   904                                  
   905                                  ; =============== S U B	R O U T	I N E =======================================
   906                                  
   907                                  SetBad:		; ...
   908 00004499 B80100                  		mov	ax, 1		; error_invalid_function
   909 0000449C 1E                      		push	ds
   910 0000449D 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   911 000044A2 C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
   912 000044A7 1F                      		pop	ds
   913 000044A8 F9                      		stc
   914 000044A9 C3                      		retn
   915                                  
   916                                  ; =============== S U B	R O U T	I N E =======================================
   917                                  
   918                                  BadCall:
   919 000044AA E8ECFF                  		call	SetBad
   920 000044AD CB                      		retf
   921                                  
   922                                  ; ---------------------------------------------------------------------------
   923                                  
   924                                  OKCall:
   925 000044AE F8                      		clc
   926 000044AF CB                      		retf
   927                                  
   928                                  ; ---------------------------------------------------------------------------
   929                                  
   930                                  INT2F:					; ...
   931 000044B0 FB                      		sti
   932 000044B1 80FC11                  		cmp	ah, 11h		; MultNET
   933 000044B4 750A                    		jnz	short INT2FSHR
   934                                  
   935                                  TestInstall:				; ...
   936 000044B6 08C0                    		or	al, al
   937 000044B8 7403                    		jz	short Leave2F
   938                                  
   939                                  BadFunc:				; ...
   940 000044BA E8DCFF                  		call	SetBad
   941                                  
   942                                  Leave2F:				; ...
   943 000044BD CA0200                  		retf	2
   944                                  ; ---------------------------------------------------------------------------
   945                                  
   946                                  INT2FSHR:				; ...
   947 000044C0 80FC10                  		cmp	ah, 10h		; MultSHARE
   948 000044C3 74F1                    		jz	short TestInstall
   949 000044C5 80FC14                  		cmp	ah, 14h		; NLSFUNC
   950 000044C8 74EC                    		jz	short TestInstall
   951 000044CA 80FC12                  		cmp	ah, 12h		; MultDOS
   952 000044CD 7503                    		jnz	short check_win
   953 000044CF E91102                  		jmp	DispatchDOS
   954                                  ; ---------------------------------------------------------------------------
   955                                  
   956                                  check_win:				; ...
   957 000044D2 80FC16                  		cmp	ah, 16h		; MultWin386
   958 000044D5 740D                    		jz	short Win386_Msg
   959 000044D7 80FC46                  		cmp	ah, 46h		; WINOLDAP
   960 000044DA 7503                    		jnz	short next_i2f
   961 000044DC E9B801                  		jmp	winold_swap
   962                                  ; ---------------------------------------------------------------------------
   963                                  
   964                                  next_i2f:				; ...
   965                                  		;jmp	far ptr	70h:5
   966 000044DF EA05007000              		jmp	0070h:0005h
   967                                  ; ---------------------------------------------------------------------------
   968                                  
   969                                  Win386_Msg:				; ...
   970 000044E4 1E                      		push	ds
   971 000044E5 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
   972 000044EA 3C03                    		cmp	al, 3
   973 000044EC 7503                    		jnz	short Win386_Msg_exit
   974 000044EE E93701                  		jmp	OldWin386Init
   975                                  ; ---------------------------------------------------------------------------
   976                                  
   977                                  Win386_Msg_exit:			; ...
   978 000044F1 3C06                    		cmp	al, 6
   979 000044F3 7503                    		jnz	short Win386_Msg_devcall
   980 000044F5 E9DC00                  		jmp	Win386_Leaving
   981                                  ; ---------------------------------------------------------------------------
   982                                  
   983                                  Win386_Msg_devcall:			; ...
   984 000044F8 3C07                    		cmp	al, 7
   985 000044FA 7503                    		jnz	short Win386_Msg_init
   986 000044FC E91801                  		jmp	Win386_Query
   987                                  ; ---------------------------------------------------------------------------
   988                                  
   989                                  Win386_Msg_init:			; ...
   990 000044FF 3C05                    		cmp	al, 5
   991 00004501 7403                    		jz	short Win386_Starting
   992 00004503 E98001                  		jmp	win_nexti2f
   993                                  ; ---------------------------------------------------------------------------
   994                                  
   995                                  Win386_Starting:			; ...
   996 00004506 F7C20100                		test	dx, 1
   997 0000450A 7403                    		jz	short Win386_vchk
   998 0000450C E97701                  		jmp	win_nexti2f
   999                                  ; ---------------------------------------------------------------------------
  1000                                  
  1001                                  Win386_vchk:				; ...
  1002 0000450F C706[E80F]0000          		mov	word [Win386_Info+6], 0 ; [Win386_Info+Win386_SIS.Virt_Dev_File_Ptr]
  1003 00004515 C706[EA0F]0000          		mov	word [Win386_Info+8], 0 ; [Win386_Info+Win386_SIS.Virt_Dev_File_Ptr+2]
  1004 0000451B 81FF0A03                		cmp	di, 30Ah	; version 3.10
  1005 0000451F 7203                    		jb	short Win386_vxd
  1006 00004521 E99400                  		jmp	noVxD31
  1007                                  ; ---------------------------------------------------------------------------
  1008                                  
  1009                                  Win386_vxd:				; ...
  1010 00004524 50                      		push	ax
  1011 00004525 53                      		push	bx
  1012 00004526 51                      		push	cx
  1013 00004527 52                      		push	dx
  1014 00004528 56                      		push	si
  1015 00004529 57                      		push	di
  1016 0000452A 8B1E[8C00]              		mov	bx, [UMB_HEAD]
  1017 0000452E 83FBFF                  		cmp	bx, 0FFFFh
  1018 00004531 7422                    		jz	short Vxd31
  1019 00004533 C606[DA0D]01            		mov	byte [UmbSaveFlag], 1
  1020 00004538 1E                      		push	ds
  1021 00004539 06                      		push	es
  1022 0000453A 8CD8                    		mov	ax, ds
  1023 0000453C 8EC0                    		mov	es, ax
  1024 0000453E 8EDB                    		mov	ds, bx
  1025 00004540 31F6                    		xor	si, si
  1026 00004542 FC                      		cld
  1027 00004543 BF[1F12]                		mov	di, UmbSave1
  1028 00004546 B90B00                  		mov	cx, 11
  1029 00004549 F3A4                    		rep movsb
  1030 0000454B BF[D50D]                		mov	di, UmbSave2
  1031 0000454E B90500                  		mov	cx, 5
  1032 00004551 F3A4                    		rep movsb
  1033 00004553 07                      		pop	es
  1034 00004554 1F                      		pop	ds
  1035                                  
  1036                                  Vxd31:					; ...
  1037 00004555 F606[8600]02            		test	byte [DOS_FLAG], 2
  1038 0000455A 7408                    		jz	short Dont_Supress
  1039 0000455C 5F                      		pop	di
  1040 0000455D 5E                      		pop	si
  1041 0000455E 5A                      		pop	dx
  1042 0000455F 59                      		pop	cx
  1043 00004560 5B                      		pop	bx
  1044 00004561 58                      		pop	ax
  1045 00004562 EB54                    		jmp	short noVxD31
  1046                                  ; ---------------------------------------------------------------------------
  1047                                  
  1048                                  Dont_Supress:				; ...
  1049 00004564 A0[6900]                		mov	al, [BOOTDRIVE]
  1050 00004567 0440                    		add	al, 40h	; '@'   ; 'A' - 1
  1051 00004569 A2[3110]                		mov	byte [VxDpath], al ; "c:\\wina20.386"
  1052 0000456C B46C                    		mov	ah, 6Ch		; ExtOpen
  1053 0000456E B000                    		mov	al, 0
  1054 00004570 BB8020                  		mov	bx, 2080h
  1055 00004573 B90700                  		mov	cx, 7
  1056 00004576 BA0100                  		mov	dx, 1
  1057 00004579 BE[3110]                		mov	si, VxDpath ; "c:\\wina20.386"
  1058 0000457C BFFFFF                  		mov	di, 0FFFFh
  1059 0000457F CD21                    		int	21h		; DOS -	4.0 - EXTENDED OPEN/CREATE
  1060                                  					; BL = open mode as in AL for normal open (INT 21h/AH=3Dh)
  1061                                  					; BH = flags, CX = create attribute, DL	= action if file exists/does not exists
  1062                                  					; DH = 00h (reserved), DS:SI ->	ASCIZ file name
  1063 00004581 5F                      		pop	di
  1064 00004582 5E                      		pop	si
  1065 00004583 5A                      		pop	dx
  1066 00004584 59                      		pop	cx
  1067 00004585 731E                    		jnb	short VxDthere
  1068 00004587 52                      		push	dx
  1069 00004588 1E                      		push	ds
  1070 00004589 56                      		push	si
  1071 0000458A BE[8047]                		mov	si, NoVxDErrMsg ; "You must have	the file WINA20.386 in th"...
  1072 0000458D 0E                      		push	cs
  1073 0000458E 1F                      		pop	ds
  1074 0000458F B96300                  		mov	cx, 99
  1075 00004592 B402                    		mov	ah, 2
  1076 00004594 FC                      		cld
  1077                                  
  1078                                  vxdlp:					; ...
  1079 00004595 AC                      		lodsb
  1080 00004596 86D0                    		xchg	dl, al
  1081 00004598 CD21                    		int	21h		; DOS -	DISPLAY	OUTPUT
  1082                                  					; DL = character to send to standard output
  1083 0000459A E2F9                    		loop	vxdlp
  1084 0000459C 5E                      		pop	si
  1085 0000459D 1F                      		pop	ds
  1086 0000459E 5A                      		pop	dx
  1087 0000459F 5B                      		pop	bx
  1088 000045A0 58                      		pop	ax
  1089 000045A1 41                      		inc	cx
  1090 000045A2 E9E100                  		jmp	win_nexti2f
  1091                                  ; ---------------------------------------------------------------------------
  1092                                  
  1093                                  VxDthere:				; ...
  1094 000045A5 89C3                    		mov	bx, ax
  1095 000045A7 B43E                    		mov	ah, 3Eh
  1096 000045A9 CD21                    		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
  1097                                  					; BX = file handle
  1098 000045AB BB[E20F]                		mov	bx, Win386_Info
  1099 000045AE C74706[3110]            		mov	word [bx+6], VxDpath ; [Win386_Info+Win386_SIS.Virt_Dev_File_Ptr],
  1100                                  					; VxDpath
  1101 000045B3 8C5F08                  		mov	word [bx+8], ds ; [Win386_Info+Win386_SIS.Virt_Dev_File_Ptr+2]
  1102 000045B6 5B                      		pop	bx
  1103 000045B7 58                      		pop	ax
  1104                                  
  1105                                  noVxD31:				; ...
  1106 000045B8 800E[3010]01            		or	byte [IsWin386], 1
  1107 000045BD 800E[0C0D]01            		or	byte [redir_patch], 1
  1108 000045C2 52                      		push	dx
  1109 000045C3 89DA                    		mov	dx, bx
  1110 000045C5 BB[E20F]                		mov	bx, Win386_Info
  1111 000045C8 895702                  		mov	[bx+2],	dx
  1112 000045CB 8C4704                  		mov	word [bx+4], es
  1113 000045CE 5A                      		pop	dx
  1114 000045CF 1E                      		push	ds
  1115 000045D0 07                      		pop	es
  1116 000045D1 E9B200                  		jmp	win_nexti2f
  1117                                  ; ---------------------------------------------------------------------------
  1118                                  
  1119                                  Win386_Leaving:				; ...
  1120 000045D4 F7C20100                		test	dx, 1
  1121 000045D8 7403                    		jz	short Win386_Leaving_c
  1122 000045DA E9A900                  		jmp	win_nexti2f
  1123                                  ; ---------------------------------------------------------------------------
  1124                                  
  1125                                  Win386_Leaving_c:			; ...
  1126 000045DD 803E[DA0D]01            		cmp	byte [UmbSaveFlag], 1
  1127 000045E2 7527                    		jnz	short noumb
  1128 000045E4 C606[DA0D]00            		mov	byte [UmbSaveFlag], 0
  1129 000045E9 50                      		push	ax
  1130 000045EA 06                      		push	es
  1131 000045EB 51                      		push	cx
  1132 000045EC 56                      		push	si
  1133 000045ED 57                      		push	di
  1134 000045EE A1[8C00]                		mov	ax, [UMB_HEAD]
  1135 000045F1 8EC0                    		mov	es, ax
  1136 000045F3 31FF                    		xor	di, di
  1137 000045F5 FC                      		cld
  1138 000045F6 BE[1F12]                		mov	si, UmbSave1
  1139 000045F9 B90B00                  		mov	cx, 11
  1140 000045FC F3A4                    		rep movsb
  1141 000045FE BE[D50D]                		mov	si, UmbSave2
  1142 00004601 B90500                  		mov	cx, 5
  1143 00004604 F3A4                    		rep movsb
  1144 00004606 5F                      		pop	di
  1145 00004607 5E                      		pop	si
  1146 00004608 59                      		pop	cx
  1147 00004609 07                      		pop	es
  1148 0000460A 58                      		pop	ax
  1149                                  
  1150                                  noumb:					; ...
  1151 0000460B 8026[3010]00            		and	byte [IsWin386], 0
  1152 00004610 8026[0C0D]00            		and	byte [redir_patch], 0
  1153 00004615 EB6F                    		jmp	short win_nexti2f
  1154                                  ; ---------------------------------------------------------------------------
  1155                                  
  1156                                  Win386_Query:				; ...
  1157 00004617 83FB15                  		cmp	bx, 15h		; Win386_DOSMGR
  1158 0000461A 756A                    		jnz	short win_nexti2f
  1159 0000461C 09C9                    		or	cx, cx
  1160 0000461E 7512                    		jnz	short dosmgr_func
  1161 00004620 41                      		inc	cx
  1162 00004621 BB[2210]                		mov	bx, Win386_DOSVars
  1163 00004624 1E                      		push	ds
  1164 00004625 07                      		pop	es
  1165 00004626 EB5C                    		jmp	short PopIret
  1166                                  ; ---------------------------------------------------------------------------
  1167                                  
  1168                                  OldWin386Init:				; ...
  1169 00004628 58                      		pop	ax
  1170 00004629 BE[E711]                		mov	si, OldInstanceJunk
  1171 0000462C B84852                  		mov	ax, 5248h	; 'HR'
  1172 0000462F E9ADFE                  		jmp	next_i2f
  1173                                  ; ---------------------------------------------------------------------------
  1174                                  
  1175                                  dosmgr_func:				; ...
  1176 00004632 49                      		dec	cx
  1177 00004633 7436                    		jz	short win386_patch
  1178 00004635 49                      		dec	cx
  1179 00004636 744C                    		jz	short PopIret
  1180 00004638 49                      		dec	cx
  1181 00004639 7434                    		jz	short win386_size
  1182 0000463B 49                      		dec	cx
  1183 0000463C 743C                    		jz	short win386_inst
  1184 0000463E 49                      		dec	cx
  1185 0000463F 7543                    		jnz	short PopIret
  1186 00004641 8CC0                    		mov	ax, es
  1187 00004643 48                      		dec	ax
  1188 00004644 06                      		push	es
  1189 00004645 8EC0                    		mov	es, ax
  1190 00004647 26803D44                		cmp	byte [es:di], 'D'
  1191 0000464B 7517                    		jnz	short cantsize
  1192 0000464D 40                      		inc	ax
  1193 0000464E 26394501                		cmp	[es:di+1], ax
  1194 00004652 7510                    		jnz	short cantsize
  1195 00004654 268B4503                		mov	ax, [es:di+3]
  1196 00004658 07                      		pop	es
  1197 00004659 BB1000                  		mov	bx, 16
  1198 0000465C F7E3                    		mul	bx
  1199 0000465E 89C1                    		mov	cx, ax
  1200 00004660 89D3                    		mov	bx, dx
  1201 00004662 EB1A                    		jmp	short win386_done
  1202                                  ; ---------------------------------------------------------------------------
  1203                                  
  1204                                  cantsize:				; ...
  1205 00004664 07                      		pop	es
  1206 00004665 31C0                    		xor	ax, ax
  1207 00004667 31D2                    		xor	dx, dx
  1208 00004669 EB19                    		jmp	short PopIret
  1209                                  ; ---------------------------------------------------------------------------
  1210                                  
  1211                                  win386_patch:				; ...
  1212 0000466B 89D3                    		mov	bx, dx
  1213 0000466D EB0F                    		jmp	short win386_done
  1214                                  ; ---------------------------------------------------------------------------
  1215                                  
  1216                                  win386_size:				; ...
  1217 0000466F F7C20100                		test	dx, 1
  1218 00004673 740F                    		jz	short PopIret
  1219 00004675 B95800                  		mov	cx, 88		; curdirLen
  1220 00004678 EB04                    		jmp	short win386_done
  1221                                  ; ---------------------------------------------------------------------------
  1222                                  
  1223                                  win386_inst:				; ...
  1224 0000467A 31D2                    		xor	dx, dx
  1225 0000467C EB06                    		jmp	short PopIret
  1226                                  ; ---------------------------------------------------------------------------
  1227                                  
  1228                                  win386_done:				; ...
  1229 0000467E B87CB9                  		mov	ax, 0B97Ch	; WIN_OP_DONE
  1230 00004681 BAABA2                  		mov	dx, 0A2ABh	; DOSMGR_OP_DONE
  1231                                  
  1232                                  PopIret:				; ...
  1233 00004684 1F                      		pop	ds
  1234 00004685 CF                      		iret
  1235                                  ; ---------------------------------------------------------------------------
  1236                                  
  1237                                  win_nexti2f:				; ...
  1238 00004686 1F                      		pop	ds
  1239 00004687 E955FE                  		jmp	next_i2f
  1240                                  ; ---------------------------------------------------------------------------
  1241                                  
  1242                                  getwinlast:				; ...
  1243 0000468A 8B36[3003]              		mov	si, [CurrentPDB]
  1244 0000468E 4E                      		dec	si
  1245 0000468F 8EC6                    		mov	es, si
  1246 00004691 2603360300              		add	si, [es:3]
  1247 00004696 C3                      		retn
  1248                                  ; ---------------------------------------------------------------------------
  1249                                  
  1250                                  winold_swap:				; ...
  1251 00004697 1E                      		push	ds
  1252 00004698 06                      		push	es
  1253 00004699 56                      		push	si
  1254 0000469A 57                      		push	di
  1255 0000469B 51                      		push	cx
  1256 0000469C 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  1257 000046A1 3C01                    		cmp	al, 1
  1258 000046A3 751B                    		jnz	short swapin
  1259 000046A5 E8E2FF                  		call	getwinlast
  1260 000046A8 1E                      		push	ds
  1261 000046A9 07                      		pop	es
  1262 000046AA 8EDE                    		mov	ds, si
  1263 000046AC 31F6                    		xor	si, si
  1264 000046AE BF[0600]                		mov	di, WinoldPatch1
  1265 000046B1 B90800                  		mov	cx, 8
  1266 000046B4 FC                      		cld
  1267 000046B5 51                      		push	cx
  1268 000046B6 F3A4                    		rep movsb
  1269 000046B8 59                      		pop	cx
  1270 000046B9 BF[CD0D]                		mov	di, WinoldPatch2
  1271 000046BC F3A4                    		rep movsb
  1272 000046BE EB1B                    		jmp	short winold_done
  1273                                  ; ---------------------------------------------------------------------------
  1274                                  
  1275                                  swapin:					; ...
  1276 000046C0 3C02                    		cmp	al, 2
  1277 000046C2 7517                    		jnz	short winold_done
  1278 000046C4 E8C3FF                  		call	getwinlast
  1279 000046C7 8EC6                    		mov	es, si
  1280 000046C9 31FF                    		xor	di, di
  1281 000046CB BE0600                  		mov	si, 6
  1282 000046CE B90800                  		mov	cx, 8
  1283 000046D1 FC                      		cld
  1284 000046D2 51                      		push	cx
  1285 000046D3 F3A4                    		rep movsb
  1286 000046D5 59                      		pop	cx
  1287 000046D6 BE[CD0D]                		mov	si, WinoldPatch2
  1288 000046D9 F3A4                    		rep movsb
  1289                                  
  1290                                  winold_done:				; ...
  1291 000046DB 59                      		pop	cx
  1292 000046DC 5F                      		pop	di
  1293 000046DD 5E                      		pop	si
  1294 000046DE 07                      		pop	es
  1295 000046DF 1F                      		pop	ds
  1296 000046E0 E9FCFD                  		jmp	next_i2f
  1297                                  ; ---------------------------------------------------------------------------
  1298                                  
  1299                                  DispatchDOS:				; ...
  1300 000046E3 2EFF36[683F]            		push	word [cs:FOO]
  1301 000046E8 2EFF36[6A3F]            		push	word [cs:Dtab]
  1302 000046ED 50                      		push	ax
  1303 000046EE 55                      		push	bp
  1304 000046EF 89E5                    		mov	bp, sp
  1305 000046F1 8B460E                  		mov	ax, [bp+0Eh]
  1306 000046F4 5D                      		pop	bp
  1307 000046F5 E83E09                  		call	TableDispatch
  1308 000046F8 E9BFFD                  		jmp	BadFunc
  1309                                  ; ---------------------------------------------------------------------------
  1310                                  
  1311                                  DOSGetGroup:				; ...
  1312 000046FB 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  1313 00004700 C3                      		retn
  1314                                  ; ---------------------------------------------------------------------------
  1315                                  
  1316                                  DOSInstall:				; ...
  1317 00004701 B0FF                    		mov	al, 0FFh
  1318 00004703 C3                      		retn
  1319                                  
  1320                                  ; =============== S U B	R O U T	I N E =======================================
  1321                                  
  1322                                  
  1323                                   RW32_CONVERT:	; ...
  1324 00004704 83F9FF                  		cmp	cx, 0FFFFh
  1325 00004707 742A                    		jz	short new32format
  1326 00004709 50                      		push	ax
  1327 0000470A 52                      		push	dx
  1328 0000470B 268B460D                		mov	ax, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
  1329 0000470F 268A5604                		mov	dl, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  1330 00004713 80FAFE                  		cmp	dl, 0FEh	; Sectors/cluster - 1
  1331 00004716 7408                    		jz	short letold
  1332 00004718 FEC2                    		inc	dl
  1333 0000471A 30F6                    		xor	dh, dh
  1334 0000471C F7E2                    		mul	dx
  1335 0000471E 09D2                    		or	dx, dx
  1336                                  
  1337                                  letold:					; ...
  1338 00004720 5A                      		pop	dx
  1339 00004721 58                      		pop	ax
  1340 00004722 7425                    		jz	short old_style
  1341 00004724 1E                      		push	ds
  1342 00004725 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  1343 0000472A C706[B80D]0702          		mov	word [AbsDskErr], 207h
  1344 00004730 1F                      		pop	ds
  1345 00004731 F9                      		stc
  1346 00004732 C3                      		retn
  1347                                  ; ---------------------------------------------------------------------------
  1348                                  
  1349                                  new32format:				; ...
  1350 00004733 8B5702                  		mov	dx, [bx+2]	; [BX+ABS_32RW.SECTOR_RBA+2]
  1351 00004736 1E                      		push	ds
  1352 00004737 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  1353 0000473C 8916[0706]              		mov	word [HIGH_SECTOR], dx
  1354 00004740 1F                      		pop	ds
  1355 00004741 8B17                    		mov	dx, [bx]	; [BX+ABS_32RW.SECTOR_RBA]
  1356 00004743 8B4F04                  		mov	cx, [bx+4]	; [BX+ABS_32RW.ABS_RW_COUNT]
  1357 00004746 C55F06                  		lds	bx, [bx+6]	; [BX+ABS_32RW.BUFFER_ADDR]
  1358                                  
  1359                                  old_style:				; ...
  1360 00004749 F8                      		clc
  1361 0000474A C3                      		retn
  1362                                  
  1363                                  ; =============== S U B	R O U T	I N E =======================================
  1364                                  
  1365                                  Fastxxx_Purge:
  1366 0000474B 50                      		push	ax
  1367 0000474C 56                      		push	si
  1368 0000474D 52                      		push	dx
  1369 0000474E 1E                      		push	ds
  1370 0000474F 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  1371 00004754 F606[3A0D]80            		test	byte [FastOpenFlg], 80h ; Fast_yes
  1372 00004759 1F                      		pop	ds
  1373 0000475A 740B                    		jz	short nofast
  1374 0000475C B401                    		mov	ah, 1		; FastOpen_ID
  1375 0000475E B005                    		mov	al, 5		; FONC_purge
  1376 00004760 268A5600                		mov	dl, [es:bp+0]
  1377 00004764 E85B1E                  		call	Fast_Dispatch
  1378                                  
  1379                                  nofast:					; ...
  1380 00004767 5A                      		pop	dx
  1381 00004768 5E                      		pop	si
  1382 00004769 58                      		pop	ax
  1383 0000476A C3                      		retn
  1384                                  
  1385                                  ; ---------------------------------------------------------------------------
  1386 0000476B 0D0A                    DIVMES		db 0Dh,0Ah		; ...
  1387 0000476D 446976696465206F76-     		db 'Divide overflow',0Dh,0Ah
  1387 00004776 6572666C6F770D0A   
  1388 0000477E 1300                    DivMesLen	dw 19			; ...
  1389 00004780 596F75206D75737420-     NoVxDErrMsg	db 'You must have the file WINA20.386 in the root of your boot drive',0Dh ; ...
  1389 00004789 686176652074686520-
  1389 00004792 66696C652057494E41-
  1389 0000479B 32302E33383620696E-
  1389 000047A4 2074686520726F6F74-
  1389 000047AD 206F6620796F757220-
  1389 000047B6 626F6F742064726976-
  1389 000047BF 650D               
  1390 000047C1 0A                      		db 0Ah
  1391 000047C2 746F2072756E205769-     		db 'to run Windows in Enhanced Mode',0Dh,0Ah
  1391 000047CB 6E646F777320696E20-
  1391 000047D4 456E68616E63656420-
  1391 000047DD 4D6F64650D0A       
  1392 000047E3 59                      NLS_YES		db 'Y'                  ; ...
  1393 000047E4 4E                      NLS_NO		db 'N'                  ; ...
  1394 000047E5 79                      NLS_yes2	db 'y'                  ; ...
  1395 000047E6 6E                      NLS_no2		db 'n'                  ; ...
  1396 000047E7 1B                      CANCHAR		db 1Bh			; ...
  1397 000047E8 00                      ESCCHAR		db 0			; ...
  1398 000047E9 40                      ESCTAB		db 64			; ...
  1399 000047EA 4D                      		db 77
  1400 000047EB 3B                      		db 59
  1401 000047EC 53                      		db 83
  1402 000047ED 3C                      		db 60
  1403 000047EE 3E                      		db 62
  1404 000047EF 3D                      		db 61
  1405 000047F0 3D                      		db 61
  1406 000047F1 3F                      		db 63
  1407 000047F2 4B                      		db 75
  1408 000047F3 52                      		db 82
  1409 000047F4 52                      		db 82
  1410 000047F5 41                      		db 65
  1411 000047F6 41                      		db 65
  1412 000047F7 [4752]                  ESCFUNC		dw GETCH		; ...
  1413 000047F9 [6953]                  		dw TWOESC
  1414 000047FB [F153]                  		dw EXITINS
  1415 000047FD [F153]                  		dw EXITINS	; ENTERINS
  1416 000047FF [F252]                  		dw BACKSP
  1417 00004801 [DD53]                  		dw REEDIT
  1418 00004803 [DF52]                  		dw KILNEW
  1419 00004805 [7053]                  		dw COPYLIN
  1420 00004807 [A353]                  		dw SKIPSTR
  1421 00004809 [7653]                  		dw COPYSTR
  1422 0000480B [9953]                  		dw SKIPONE
  1423 0000480D [7B53]                  		dw COPYONE
  1424 0000480F [7B53]                  		dw COPYONE
  1425 00004811 [F953]                  		dw CTRLZ
  1426                                  ; ---------------------------------------------------------------------------
  1427                                  ; START	OF FUNCTION CHUNK FOR _$STD_CON_STRING_INPUT
  1428                                  
  1429                                  OEMFunctionKey:				; ...
  1430 00004813 E89009                  		call	_$STD_CON_INPUT_NO_ECHO
  1431 00004816 B10E                    		mov	cl, 14		; ESCTABLEN
  1432 00004818 57                      		push	di
  1433 00004819 BF[E947]                		mov	di, ESCTAB
  1434 0000481C 06                      		push	es
  1435 0000481D 0E                      		push	cs
  1436 0000481E 07                      		pop	es
  1437 0000481F F2AE                    		repne scasb
  1438 00004821 07                      		pop	es
  1439 00004822 5F                      		pop	di
  1440 00004823 D1E1                    		shl	cx, 1
  1441 00004825 89CD                    		mov	bp, cx
  1442 00004827 2EFFA6[F747]            		jmp	[cs:ESCFUNC+bp]	; [CS:BP+ESCFUNC]
  1443                                  ; END OF FUNCTION CHUNK	FOR _$STD_CON_STRING_INPUT
  1444                                  ; ---------------------------------------------------------------------------
  1445                                  
  1446                                  _$GET_DATE:				; ...
  1447 0000482C 16                      		push	ss
  1448 0000482D 1F                      		pop	ds
  1449 0000482E E8BA00                  		call	READTIME
  1450 00004831 A1[5203]                		mov	ax, [YEAR]
  1451 00004834 8B1E[5003]              		mov	bx, word [DAY]
  1452 00004838 E83AFA                  		call	Get_User_Stack
  1453 0000483B 895C06                  		mov	[si+6],	bx	; [SI+user_env.user_DX]
  1454 0000483E 05BC07                  		add	ax, 1980
  1455 00004841 894404                  		mov	[si+4],	ax	; [SI+user_env.user_CX]
  1456 00004844 36A0[5603]              		mov	al, [ss:WEEKDAY]
  1457                                  
  1458                                  RET20:					; ...
  1459 00004848 C3                      		retn
  1460                                  ; ---------------------------------------------------------------------------
  1461                                  
  1462                                  _$SET_DATE:				; ...
  1463 00004849 B0FF                    		mov	al, -1		; 0FFh
  1464 0000484B 81E9BC07                		sub	cx, 1980
  1465 0000484F 72F7                    		jb	short RET20
  1466 00004851 83F977                  		cmp	cx, 119
  1467 00004854 7712                    		ja	short RET24
  1468 00004856 08F6                    		or	dh, dh
  1469 00004858 74EE                    		jz	short RET20
  1470 0000485A 08D2                    		or	dl, dl
  1471 0000485C 74EA                    		jz	short RET20
  1472 0000485E 80FE0C                  		cmp	dh, 0Ch
  1473 00004861 7705                    		ja	short RET24
  1474 00004863 16                      		push	ss
  1475 00004864 1F                      		pop	ds
  1476 00004865 E81901                  		call	DODATE
  1477                                  
  1478                                  RET24:					; ...
  1479 00004868 C3                      		retn
  1480                                  ; ---------------------------------------------------------------------------
  1481                                  
  1482                                  _$GET_TIME:				; ...
  1483 00004869 16                      		push	ss
  1484 0000486A 1F                      		pop	ds
  1485 0000486B E87D00                  		call	READTIME
  1486 0000486E E804FA                  		call	Get_User_Stack
  1487 00004871 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  1488 00004874 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  1489 00004877 30C0                    		xor	al, al
  1490                                  
  1491                                  RET26:					; ...
  1492 00004879 C3                      		retn
  1493                                  ; ---------------------------------------------------------------------------
  1494                                  
  1495                                  _$SET_TIME:				; ...
  1496 0000487A B0FF                    		mov	al, -1
  1497 0000487C 80FD18                  		cmp	ch, 24
  1498 0000487F 73F8                    		jnb	short RET26
  1499 00004881 80F93C                  		cmp	cl, 60
  1500 00004884 73F3                    		jnb	short RET26
  1501 00004886 80FE3C                  		cmp	dh, 60
  1502 00004889 73EE                    		jnb	short RET26
  1503 0000488B 80FA64                  		cmp	dl, 100
  1504 0000488E 73E9                    		jnb	short RET26
  1505 00004890 51                      		push	cx
  1506 00004891 52                      		push	dx
  1507 00004892 16                      		push	ss
  1508 00004893 1F                      		pop	ds
  1509 00004894 BB[B603]                		mov	bx, TIMEBUF
  1510 00004897 B90600                  		mov	cx, 6
  1511 0000489A 31D2                    		xor	dx, dx
  1512 0000489C 89D0                    		mov	ax, dx
  1513 0000489E 53                      		push	bx
  1514 0000489F E88C3D                  		call	SETREAD
  1515 000048A2 1E                      		push	ds
  1516 000048A3 C536[2E00]              		lds	si, [BCLOCK]
  1517 000048A7 E8083D                  		call	DEVIOCALL2
  1518 000048AA 1F                      		pop	ds
  1519 000048AB 5B                      		pop	bx
  1520 000048AC E8B23D                  		call	SETWRITE
  1521 000048AF 8F06[BA03]              		pop	word [TIMEBUF+4]
  1522 000048B3 8F06[B803]              		pop	word [TIMEBUF+2]
  1523 000048B7 C536[2E00]              		lds	si, [BCLOCK]
  1524 000048BB E8F43C                  		call	DEVIOCALL2
  1525 000048BE 30C0                    		xor	al, al
  1526 000048C0 C3                      		retn
  1527                                  
  1528                                  ; =============== S U B	R O U T	I N E =======================================
  1529                                  
  1530                                  
  1531                                   DATE16:		; ...
  1532 000048C1 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  1533 000048C6 51                      		push	cx
  1534 000048C7 06                      		push	es
  1535 000048C8 E82000                  		call	READTIME
  1536 000048CB 07                      		pop	es
  1537 000048CC D0E1                    		shl	cl, 1
  1538 000048CE D0E1                    		shl	cl, 1
  1539 000048D0 D1E1                    		shl	cx, 1
  1540 000048D2 D1E1                    		shl	cx, 1
  1541 000048D4 D1E1                    		shl	cx, 1
  1542 000048D6 D0EE                    		shr	dh, 1
  1543 000048D8 08F1                    		or	cl, dh
  1544 000048DA 89CA                    		mov	dx, cx
  1545 000048DC A1[5103]                		mov	ax, word [MONTH]
  1546 000048DF B104                    		mov	cl, 4
  1547 000048E1 D2E0                    		shl	al, cl
  1548 000048E3 D1E0                    		shl	ax, 1
  1549 000048E5 59                      		pop	cx
  1550 000048E6 0A06[5003]              		or	al, [DAY]
  1551                                  
  1552                                  RET21:					; ...
  1553 000048EA C3                      		retn
  1554                                  
  1555                                  ; =============== S U B	R O U T	I N E =======================================
  1556                                  
  1557                                  READTIME:		; ...
  1558 000048EB C706[910D]0000          		mov	word [DATE_FLAG], 0
  1559 000048F1 56                      		push	si
  1560 000048F2 53                      		push	bx
  1561 000048F3 BB[B603]                		mov	bx, TIMEBUF
  1562 000048F6 B90600                  		mov	cx, 6
  1563 000048F9 31D2                    		xor	dx, dx
  1564 000048FB 89D0                    		mov	ax, dx
  1565 000048FD E82E3D                  		call	SETREAD
  1566 00004900 1E                      		push	ds
  1567 00004901 C536[2E00]              		lds	si, [BCLOCK]
  1568 00004905 E8AA3C                  		call	DEVIOCALL2
  1569 00004908 1F                      		pop	ds
  1570 00004909 5B                      		pop	bx
  1571 0000490A 5E                      		pop	si
  1572 0000490B A1[B603]                		mov	ax, [TIMEBUF]
  1573 0000490E 8B0E[B803]              		mov	cx, [TIMEBUF+2]
  1574 00004912 8B16[BA03]              		mov	dx, [TIMEBUF+4]
  1575 00004916 3B06[5403]              		cmp	ax, [DAYCNT]
  1576 0000491A 74CE                    		jz	short RET21
  1577 0000491C 3D36AB                  		cmp	ax, 43830	; FOURYEARS*30
  1578 0000491F 733D                    		jnb	short RET22
  1579 00004921 A3[5403]                		mov	[DAYCNT], ax
  1580 00004924 56                      		push	si
  1581 00004925 51                      		push	cx
  1582 00004926 52                      		push	dx
  1583 00004927 31D2                    		xor	dx, dx
  1584 00004929 B9B505                  		mov	cx, 1461	; FOURYEARS
  1585 0000492C F7F1                    		div	cx
  1586 0000492E D1E0                    		shl	ax, 1
  1587 00004930 D1E0                    		shl	ax, 1
  1588 00004932 D1E0                    		shl	ax, 1
  1589 00004934 89C1                    		mov	cx, ax
  1590 00004936 BE[140D]                		mov	si, YRTAB
  1591 00004939 E82300                  		call	DSLIDE
  1592 0000493C D1E9                    		shr	cx, 1
  1593 0000493E 7304                    		jnb	short SK
  1594 00004940 81C2C800                		add	dx, 200
  1595                                  
  1596                                  SK:					; ...
  1597 00004944 E82400                  		call	SETYEAR
  1598 00004947 B101                    		mov	cl, 1
  1599 00004949 BE[1C0D]                		mov	si, MONTAB
  1600 0000494C E81000                  		call	DSLIDE
  1601 0000494F 880E[5103]              		mov	[MONTH], cl
  1602 00004953 42                      		inc	dx
  1603 00004954 8816[5003]              		mov	[DAY], dl
  1604 00004958 E89700                  		call	WKDAY
  1605 0000495B 5A                      		pop	dx
  1606 0000495C 59                      		pop	cx
  1607 0000495D 5E                      		pop	si
  1608                                  
  1609                                  RET22:					; ...
  1610 0000495E C3                      		retn
  1611                                  
  1612                                  ; =============== S U B	R O U T	I N E =======================================
  1613                                  
  1614                                  DSLIDE:		; ...
  1615 0000495F B400                    		mov	ah, 0
  1616                                  
  1617                                  DSLIDE1:				; ...
  1618 00004961 AC                      		lodsb
  1619 00004962 39C2                    		cmp	dx, ax
  1620 00004964 72F8                    		jb	short RET22
  1621 00004966 29C2                    		sub	dx, ax
  1622 00004968 41                      		inc	cx
  1623 00004969 EBF6                    		jmp	short DSLIDE1
  1624                                  
  1625                                  ; =============== S U B	R O U T	I N E =======================================
  1626                                  
  1627                                  SETYEAR:
  1628 0000496B 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  1629 00004970 880E[5203]              		mov	byte [YEAR], cl
  1630                                  
  1631                                  CHKYR:					; ...
  1632 00004974 F6C103                  		test	cl, 3
  1633 00004977 B01C                    		mov	al, 28
  1634 00004979 7502                    		jnz	short SAVFEB
  1635 0000497B FEC0                    		inc	al
  1636                                  
  1637                                  SAVFEB:					; ...
  1638 0000497D A2[1D0D]                		mov	[february], al ; [MONTAB+1]
  1639                                  
  1640                                  RET23:					; ...
  1641 00004980 C3                      		retn
  1642                                  
  1643                                  ; =============== S U B	R O U T	I N E =======================================
  1644                                  
  1645                                  DODATE:		; ...
  1646 00004981 E8F0FF                  		call	CHKYR
  1647 00004984 88F0                    		mov	al, dh
  1648 00004986 BB[1B0D]                		mov	bx, YRTAB+7	; offset MONTAB-1
  1649 00004989 D7                      		xlat
  1650 0000498A 38D0                    		cmp	al, dl
  1651 0000498C B0FF                    		mov	al, -1
  1652 0000498E 72F0                    		jb	short RET23
  1653 00004990 E8D8FF                  		call	SETYEAR
  1654 00004993 8916[5003]              		mov	word [DAY], dx
  1655 00004997 D1E9                    		shr	cx, 1
  1656 00004999 D1E9                    		shr	cx, 1
  1657 0000499B B8B505                  		mov	ax, 1461	; FOURYEARS
  1658 0000499E 89D3                    		mov	bx, dx
  1659 000049A0 F7E1                    		mul	cx
  1660 000049A2 8A0E[5203]              		mov	cl, byte [YEAR]
  1661 000049A6 80E103                  		and	cl, 3
  1662 000049A9 BE[140D]                		mov	si, YRTAB
  1663 000049AC 89C2                    		mov	dx, ax
  1664 000049AE D1E1                    		shl	cx, 1
  1665 000049B0 E85200                  		call	DSUM
  1666 000049B3 88F9                    		mov	cl, bh
  1667 000049B5 BE[1C0D]                		mov	si, MONTAB
  1668 000049B8 49                      		dec	cx
  1669 000049B9 E84900                  		call	DSUM
  1670 000049BC 88D9                    		mov	cl, bl
  1671 000049BE 49                      		dec	cx
  1672 000049BF 01CA                    		add	dx, cx
  1673 000049C1 92                      		xchg	ax, dx
  1674 000049C2 A3[5403]                		mov	[DAYCNT], ax
  1675 000049C5 56                      		push	si
  1676 000049C6 53                      		push	bx
  1677 000049C7 50                      		push	ax
  1678 000049C8 BB[B603]                		mov	bx, TIMEBUF
  1679 000049CB B90600                  		mov	cx, 6
  1680 000049CE 31D2                    		xor	dx, dx
  1681 000049D0 89D0                    		mov	ax, dx
  1682 000049D2 53                      		push	bx
  1683 000049D3 E8583C                  		call	SETREAD
  1684 000049D6 1E                      		push	ds
  1685 000049D7 C536[2E00]              		lds	si, [BCLOCK]
  1686 000049DB E8D43B                  		call	DEVIOCALL2
  1687 000049DE 1F                      		pop	ds
  1688 000049DF 5B                      		pop	bx
  1689 000049E0 E87E3C                  		call	SETWRITE
  1690 000049E3 8F06[B603]              		pop	word [TIMEBUF]
  1691 000049E7 1E                      		push	ds
  1692 000049E8 C536[2E00]              		lds	si, [BCLOCK]
  1693 000049EC E8C33B                  		call	DEVIOCALL2
  1694 000049EF 1F                      		pop	ds
  1695 000049F0 5B                      		pop	bx
  1696 000049F1 5E                      		pop	si
  1697                                  
  1698                                  WKDAY:					; ...
  1699 000049F2 A1[5403]                		mov	ax, [DAYCNT]
  1700 000049F5 31D2                    		xor	dx, dx
  1701 000049F7 B90700                  		mov	cx, 7
  1702 000049FA 40                      		inc	ax
  1703 000049FB 40                      		inc	ax
  1704 000049FC F7F1                    		div	cx
  1705 000049FE 8816[5603]              		mov	[WEEKDAY], dl
  1706 00004A02 30C0                    		xor	al, al
  1707 00004A04 C3                      		retn
  1708                                  
  1709                                  ; =============== S U B	R O U T	I N E =======================================
  1710                                  
  1711                                  DSUM:		; ...
  1712 00004A05 B400                    		mov	ah, 0
  1713 00004A07 E305                    		jcxz	DUSUM9
  1714                                  
  1715                                  DSUM1:					; ...
  1716 00004A09 AC                      		lodsb
  1717 00004A0A 01C2                    		add	dx, ax
  1718 00004A0C E2FB                    		loop	DSUM1
  1719                                  
  1720                                  DUSUM9:					; ...
  1721 00004A0E C3                      		retn
  1722                                  ; ---------------------------------------------------------------------------
  1723                                  
  1724                                  _$GET_VERSION:				; ...
  1725 00004A0F 16                      		push	ss
  1726 00004A10 1F                      		pop	ds
  1727 00004A11 8B1E[B403]              		mov	bx, word [USERNUM+2]
  1728 00004A15 8B0E[B203]              		mov	cx, word [USERNUM]
  1729 00004A19 3C01                    		cmp	al, 1
  1730 00004A1B 7502                    		jnz	short Norm_Vers
  1731 00004A1D 30FF                    		xor	bh, bh
  1732                                  
  1733                                  Norm_Vers:				; ...
  1734 00004A1F 1E                      		push	ds
  1735 00004A20 8E1E[3003]              		mov	ds, [CurrentPDB]
  1736 00004A24 A14000                  		mov	ax, [40h]	; [PDB.Version]
  1737 00004A27 1F                      		pop	ds
  1738 00004A28 E84AF8                  		call	Get_User_Stack
  1739 00004A2B 8904                    		mov	[si], ax	; [SI+user_env.user_AX]
  1740 00004A2D 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  1741 00004A30 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  1742 00004A33 C3                      		retn
  1743                                  ; ---------------------------------------------------------------------------
  1744                                  
  1745                                  _$GET_VERIFY_ON_WRITE:			; ...
  1746 00004A34 36A0[FF02]              		mov	al, [ss:VERFLG]
  1747 00004A38 C3                      		retn
  1748                                  ; ---------------------------------------------------------------------------
  1749                                  
  1750                                  _$SET_VERIFY_ON_WRITE:			; ...
  1751 00004A39 2401                    		and	al, 1
  1752 00004A3B 36A2[FF02]              		mov	[ss:VERFLG], al
  1753                                  
  1754                                  RET27:					; ...
  1755 00004A3F C3                      		retn
  1756                                  ; ---------------------------------------------------------------------------
  1757                                  
  1758                                  _$INTERNATIONAL:			; ...
  1759 00004A40 3CFF                    		cmp	al, 0FFh
  1760 00004A42 7404                    		jz	short BX_HAS_CODE
  1761 00004A44 88C3                    		mov	bl, al
  1762 00004A46 30FF                    		xor	bh, bh
  1763                                  
  1764                                  BX_HAS_CODE:				; ...
  1765 00004A48 1E                      		push	ds
  1766 00004A49 07                      		pop	es
  1767 00004A4A 52                      		push	dx
  1768 00004A4B 5F                      		pop	di
  1769 00004A4C 16                      		push	ss
  1770 00004A4D 1F                      		pop	ds
  1771 00004A4E 83FFFF                  		cmp	di, 0FFFFh	; -1
  1772 00004A51 7465                    		jz	short international_set
  1773 00004A53 09DB                    		or	bx, bx
  1774 00004A55 7505                    		jnz	short international_find
  1775 00004A57 BE[2A12]                		mov	si, COUNTRY_CDPG
  1776 00004A5A EB41                    		jmp	short international_copy
  1777                                  ; ---------------------------------------------------------------------------
  1778                                  
  1779                                  international_find:			; ...
  1780 00004A5C BD0000                  		mov	bp, 0
  1781 00004A5F E80B00                  		call	international_get
  1782 00004A62 725C                    		jb	short errtn
  1783 00004A64 83FB00                  		cmp	bx, 0
  1784 00004A67 7534                    		jnz	short international_copy
  1785 00004A69 89D3                    		mov	bx, dx
  1786 00004A6B EB40                    		jmp	short international_ok3
  1787                                  
  1788                                  ; =============== S U B	R O U T	I N E =======================================
  1789                                  
  1790                                  
  1791                                   international_get:	; ...
  1792 00004A6D BE[2A12]                		mov	si, COUNTRY_CDPG
  1793 00004A70 363B5C68                		cmp	bx, [ss:si+68h]	; [SI+DOS_CCDPG.ccDosCountry]
  1794 00004A74 74C9                    		jz	short RET27
  1795 00004A76 89DA                    		mov	dx, bx
  1796 00004A78 31DB                    		xor	bx, bx
  1797 00004A7A B80014                  		mov	ax, 1400h
  1798 00004A7D CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - INSTALLATION CHECK
  1799                                  					; Return: AL = 00h not installed, OK to	install
  1800                                  					; 01h not installed, not OK
  1801                                  					; FFh installed
  1802 00004A7F 3CFF                    		cmp	al, 0FFh
  1803 00004A81 7516                    		jnz	short interr
  1804 00004A83 09ED                    		or	bp, bp
  1805 00004A85 7507                    		jnz	short stcdpg
  1806 00004A87 B80414                  		mov	ax, 1404h
  1807 00004A8A CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - GET COUNTRY INFO
  1808                                  					; BX = code page, DX = country code, DS:SI -> internal code page structure
  1809                                  					; ES:DI	-> user	buffer
  1810                                  					; Return: AL = status
  1811 00004A8C EB05                    		jmp	short chkok
  1812                                  ; ---------------------------------------------------------------------------
  1813                                  
  1814                                  stcdpg:					; ...
  1815 00004A8E B80314                  		mov	ax, 1403h
  1816 00004A91 CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - SET COUNTRY INFO
  1817                                  					; DS:SI	-> internal code page structure
  1818                                  					; BX = code page, DX = country code
  1819                                  					; Return: AL = status
  1820                                  
  1821                                  chkok:					; ...
  1822 00004A93 08C0                    		or	al, al
  1823 00004A95 74A8                    		jz	short RET27
  1824                                  
  1825                                  setcarry:				; ...
  1826 00004A97 F9                      		stc
  1827 00004A98 C3                      		retn
  1828                                  ; ---------------------------------------------------------------------------
  1829                                  
  1830                                  interr:					; ...
  1831 00004A99 B0FF                    		mov	al, 0FFh
  1832 00004A9B EBFA                    		jmp	short setcarry
  1833                                  
  1834                                  ; ---------------------------------------------------------------------------
  1835                                  
  1836                                  international_copy:			; ...
  1837 00004A9D 368B5C68                		mov	bx, [ss:si+68h]	; [ss:SI+DOS_CCDPG.ccDosCountry]
  1838 00004AA1 BE[9612]                		mov	si, COUNTRY_CDPG_108 ; COUNTRY_CDPG + 108
  1839 00004AA4 B91800                  		mov	cx, 24		; OLD_COUNTRY_SIZE
  1840 00004AA7 1E                      		push	ds
  1841 00004AA8 16                      		push	ss
  1842 00004AA9 1F                      		pop	ds
  1843 00004AAA F3A4                    		rep movsb
  1844 00004AAC 1F                      		pop	ds
  1845                                  
  1846                                  international_ok3:			; ...
  1847 00004AAD E8C5F7                  		call	Get_User_Stack
  1848 00004AB0 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  1849                                  
  1850                                  international_ok:			; ...
  1851 00004AB3 89D8                    		mov	ax, bx
  1852                                  
  1853                                  SYS_RET_OK_jmp:				; ...
  1854 00004AB5 E92CF9                  		jmp	SYS_RETURN	; SYS_RET_OK
  1855                                  ; ---------------------------------------------------------------------------
  1856                                  
  1857                                  international_set:			; ...
  1858 00004AB8 BD0100                  		mov	bp, 1
  1859 00004ABB E8AFFF                  		call	international_get
  1860 00004ABE 73F3                    		jnb	short international_ok
  1861                                  
  1862                                  errtn:					; ...
  1863 00004AC0 3CFF                    		cmp	al, 0FFh
  1864 00004AC2 7403                    		jz	short errtn2
  1865                                  
  1866                                  errtn1:					; ...
  1867 00004AC4 E926F9                  		jmp	SYS_RET_ERR
  1868                                  ; ---------------------------------------------------------------------------
  1869                                  
  1870                                  errtn2:					; ...
  1871 00004AC7 B001                    		mov	al, 1		; error_invalid_function
  1872 00004AC9 EBF9                    		jmp	short errtn1
  1873                                  ; ---------------------------------------------------------------------------
  1874                                  
  1875                                  _$GetExtCntry:				; ...
  1876 00004ACB 3C20                    		cmp	al, 20h		; CAP_ONE_CHAR
  1877 00004ACD 7269                    		jb	short notcap
  1878 00004ACF A880                    		test	al, 80h		; UPPER_TABLE
  1879 00004AD1 7505                    		jnz	short fileupper
  1880 00004AD3 BB[AF0A]                		mov	bx, UCASE_TAB_2 ; UCASE_TAB+2
  1881 00004AD6 EB03                    		jmp	short capit
  1882                                  ; ---------------------------------------------------------------------------
  1883                                  
  1884                                  fileupper:				; ...
  1885 00004AD8 BB[310B]                		mov	bx, FILE_UCASE_TAB_2 ; FILE_UCASE_TAB+2
  1886                                  
  1887                                  capit:					; ...
  1888 00004ADB 3C20                    		cmp	al, 20h		; CAP_ONE_CHAR
  1889 00004ADD 750D                    		jnz	short chkyes
  1890 00004ADF 88D0                    		mov	al, dl
  1891 00004AE1 E8F744                  		call	GETLET3
  1892 00004AE4 E88EF7                  		call	Get_User_Stack
  1893 00004AE7 884406                  		mov	[si+6],	al	; [SI+user_env.user_DX]
  1894 00004AEA EB24                    		jmp	short nono
  1895                                  ; ---------------------------------------------------------------------------
  1896                                  
  1897                                  chkyes:					; ...
  1898 00004AEC 3C23                    		cmp	al, 23h		; CHECK_YES_NO
  1899 00004AEE 7522                    		jnz	short capstring
  1900 00004AF0 31C0                    		xor	ax, ax
  1901 00004AF2 2E3A16[E347]            		cmp	dl, [cs:NLS_YES] ; 'Y'
  1902 00004AF7 7416                    		jz	short yesyes
  1903 00004AF9 2E3A16[E547]            		cmp	dl, [cs:NLS_yes2] ; 'y'
  1904 00004AFE 740F                    		jz	short yesyes
  1905 00004B00 2E3A16[E447]            		cmp	dl, [cs:NLS_NO]	; 'n'
  1906 00004B05 7409                    		jz	short nono
  1907 00004B07 2E3A16[E647]            		cmp	dl, [cs:NLS_no2]
  1908 00004B0C 7402                    		jz	short nono
  1909 00004B0E 40                      		inc	ax
  1910                                  
  1911                                  yesyes:					; ...
  1912 00004B0F 40                      		inc	ax
  1913                                  
  1914                                  nono:					; ...
  1915 00004B10 EBA3                    		jmp	short SYS_RET_OK_jmp
  1916                                  ; ---------------------------------------------------------------------------
  1917                                  
  1918                                  capstring:				; ...
  1919 00004B12 89D6                    		mov	si, dx
  1920 00004B14 3C21                    		cmp	al, 21h		; CAP_STRING
  1921 00004B16 750F                    		jnz	short capascii
  1922 00004B18 09C9                    		or	cx, cx
  1923 00004B1A 74F4                    		jz	short nono
  1924                                  
  1925                                  concap:					; ...
  1926 00004B1C AC                      		lodsb
  1927 00004B1D E8BB44                  		call	GETLET3
  1928 00004B20 8844FF                  		mov	[si-1],	al
  1929 00004B23 E2F7                    		loop	concap
  1930 00004B25 EBE9                    		jmp	short nono
  1931                                  ; ---------------------------------------------------------------------------
  1932                                  
  1933                                  capascii:				; ...
  1934 00004B27 3C22                    		cmp	al, 22h		; CAP_ASCIIZ
  1935 00004B29 7545                    		jnz	short capinval
  1936                                  
  1937                                  concap2:				; ...
  1938 00004B2B AC                      		lodsb
  1939 00004B2C 08C0                    		or	al, al
  1940 00004B2E 74E0                    		jz	short nono
  1941 00004B30 E8A844                  		call	GETLET3
  1942 00004B33 8844FF                  		mov	[si-1],	al
  1943 00004B36 EBF3                    		jmp	short concap2
  1944                                  ; ---------------------------------------------------------------------------
  1945                                  
  1946                                  notcap:					; ...
  1947 00004B38 83F905                  		cmp	cx, 5
  1948 00004B3B 7278                    		jb	short sizeerror
  1949 00004B3D 16                      		push	ss
  1950 00004B3E 1F                      		pop	ds
  1951 00004B3F BE[2A12]                		mov	si, COUNTRY_CDPG
  1952 00004B42 83FAFF                  		cmp	dx, 0FFFFh	; -1
  1953 00004B45 7503                    		jnz	short GETCDPG
  1954 00004B47 8B5468                  		mov	dx, [si+68h]	; [SI+DOS_CCDPG.ccDosCountry]
  1955                                  
  1956                                  GETCDPG:				; ...
  1957 00004B4A 83FBFF                  		cmp	bx, 0FFFFh	; -1
  1958 00004B4D 7503                    		jnz	short CHKAGAIN
  1959 00004B4F 8B5C6A                  		mov	bx, [si+6Ah]	; [SI+DOS_CCDPG.ccDosCodePage]
  1960                                  
  1961                                  CHKAGAIN:				; ...
  1962 00004B52 3B5468                  		cmp	dx, [si+68h]	; [SI+DOS_CCDPG.ccDosCountry]
  1963 00004B55 7551                    		jnz	short CHKNLS
  1964 00004B57 3B5C6A                  		cmp	bx, [si+6Ah]	; [SI+DOS_CCDPG.ccDosCodePage]
  1965 00004B5A 754C                    		jnz	short CHKNLS
  1966 00004B5C 8B5C48                  		mov	bx, [si+48h]	; [SI+DOS_CCDPG.ccSysCodePage]
  1967 00004B5F 51                      		push	cx
  1968 00004B60 8B4C4A                  		mov	cx, [si+4Ah]	; [SI+DOS_CCDPG.ccNumber_of_entries]
  1969 00004B63 BE[7612]                		mov	si, COUNTRY_CDPG_76 ; COUNTRY_CDPG+76
  1970                                  					; COUNTRY_CDPG+DOS_CCDPG.ccSetUcase
  1971                                  
  1972                                  NXTENTRY:				; ...
  1973 00004B66 3A04                    		cmp	al, [si]
  1974 00004B68 740B                    		jz	short FOUNDIT
  1975 00004B6A 83C605                  		add	si, 5
  1976 00004B6D E2F7                    		loop	NXTENTRY
  1977 00004B6F 59                      		pop	cx
  1978                                  
  1979                                  capinval:				; ...
  1980 00004B70 B001                    		mov	al, 1
  1981                                  
  1982                                  SYS_RET_ERR_jmp:			; ...
  1983 00004B72 E978F8                  		jmp	SYS_RET_ERR
  1984                                  ; ---------------------------------------------------------------------------
  1985                                  
  1986                                  FOUNDIT:				; ...
  1987 00004B75 A4                      		movsb
  1988 00004B76 59                      		pop	cx
  1989 00004B77 3C01                    		cmp	al, 1		; SetCountryInfo
  1990 00004B79 7414                    		jz	short setsize
  1991 00004B7B B90400                  		mov	cx, 4
  1992 00004B7E B80500                  		mov	ax, 5
  1993                                  
  1994                                  OK_RETN:				; ...
  1995 00004B81 F3A4                    		rep movsb
  1996 00004B83 89C1                    		mov	cx, ax
  1997 00004B85 89D8                    		mov	ax, bx
  1998                                  
  1999                                  GETDONE:				; ...
  2000 00004B87 E8EBF6                  		call	Get_User_Stack
  2001 00004B8A 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  2002                                  
  2003                                  nono_jmp:				; ...
  2004 00004B8D EB81                    		jmp	short nono
  2005                                  ; ---------------------------------------------------------------------------
  2006                                  
  2007                                  setsize:				; ...
  2008 00004B8F 83E903                  		sub	cx, 3
  2009 00004B92 390C                    		cmp	[si], cx
  2010 00004B94 7302                    		jnb	short setsize2
  2011 00004B96 8B0C                    		mov	cx, [si]
  2012                                  
  2013                                  setsize2:				; ...
  2014 00004B98 26890D                  		mov	[es:di], cx
  2015 00004B9B 83C702                  		add	di, 2
  2016 00004B9E 83C602                  		add	si, 2
  2017 00004BA1 89C8                    		mov	ax, cx
  2018 00004BA3 83C003                  		add	ax, 3
  2019 00004BA6 EBD9                    		jmp	short OK_RETN
  2020                                  ; ---------------------------------------------------------------------------
  2021                                  
  2022                                  CHKNLS:					; ...
  2023 00004BA8 30E4                    		xor	ah, ah
  2024 00004BAA 50                      		push	ax
  2025 00004BAB 5D                      		pop	bp
  2026 00004BAC B80014                  		mov	ax, 1400h
  2027 00004BAF CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - INSTALLATION CHECK
  2028                                  					; Return: AL = 00h not installed, OK to	install
  2029                                  					; 01h not installed, not OK
  2030                                  					; FFh installed
  2031 00004BB1 3CFF                    		cmp	al, 0FFh
  2032 00004BB3 7404                    		jz	short NLSNXT
  2033                                  
  2034                                  sizeerror:				; ...
  2035 00004BB5 B001                    		mov	al, 1		; error_invalid_function
  2036                                  
  2037                                  sys_ret_err_jmp2:			; ...
  2038 00004BB7 EBB9                    		jmp	short SYS_RET_ERR_jmp
  2039                                  ; ---------------------------------------------------------------------------
  2040                                  
  2041                                  NLSNXT:					; ...
  2042 00004BB9 B80214                  		mov	ax, 1402h
  2043 00004BBC CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - GET COUNTRY INFO
  2044                                  					; BP = subfunction, BX = code page
  2045                                  					; DX = country code, DS:SI -> internal code page structure
  2046                                  					; ES:DI	-> user	buffer,	CX = size of user buffer
  2047                                  					; Return: AL = status
  2048                                  					; 00h successful
  2049                                  					; else DOS error code
  2050 00004BBE 3C00                    		cmp	al, 0
  2051 00004BC0 7505                    		jnz	short NLSERROR
  2052 00004BC2 8B4448                  		mov	ax, [si+48h]	; [SI+DOS_CCDPG.ccSysCodePage]
  2053 00004BC5 EBC0                    		jmp	short GETDONE
  2054                                  ; ---------------------------------------------------------------------------
  2055                                  
  2056                                  NLSERROR:				; ...
  2057 00004BC7 EBEE                    		jmp	short sys_ret_err_jmp2
  2058                                  ; ---------------------------------------------------------------------------
  2059                                  
  2060                                  _$GetSetCdPg:				; ...
  2061 00004BC9 16                      		push	ss
  2062 00004BCA 1F                      		pop	ds
  2063 00004BCB BE[2A12]                		mov	si, COUNTRY_CDPG
  2064 00004BCE 3C01                    		cmp	al, 1
  2065 00004BD0 7511                    		jnz	short setglpg
  2066 00004BD2 8B5C6A                  		mov	bx, [si+6Ah]	; [SI+DOS_CCDPG.ccDosCodePage]
  2067 00004BD5 8B5448                  		mov	dx, [si+48h]	; [SI+DOS_CCDPG.ccSysCodePage]
  2068 00004BD8 E89AF6                  		call	Get_User_Stack
  2069 00004BDB 895C02                  		mov	[si+2],	bx
  2070 00004BDE 895406                  		mov	[si+6],	dx
  2071                                  
  2072                                  OK_RETURN:				; ...
  2073 00004BE1 EBAA                    		jmp	short nono_jmp
  2074                                  ; ---------------------------------------------------------------------------
  2075                                  
  2076                                  setglpg:				; ...
  2077 00004BE3 3C02                    		cmp	al, 2
  2078 00004BE5 7533                    		jnz	short nomem
  2079 00004BE7 8B5468                  		mov	dx, [si+68h]	; [SI+DOS_CCDPG.ccDosCountry]
  2080 00004BEA B80014                  		mov	ax, 1400h
  2081 00004BED CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - INSTALLATION CHECK
  2082                                  					; Return: AL = 00h not installed, OK to	install
  2083                                  					; 01h not installed, not OK
  2084                                  					; FFh installed
  2085 00004BEF 3CFF                    		cmp	al, 0FFh
  2086 00004BF1 7527                    		jnz	short nomem
  2087 00004BF3 B80114                  		mov	ax, 1401h
  2088 00004BF6 CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - CHANGE CODE PAGE
  2089                                  					; DS:SI	-> internal code page structure
  2090                                  					; BX = new code	page, DX = country code???
  2091                                  					; Return: AL = status
  2092                                  					; 00h successful
  2093                                  					; else DOS error code
  2094 00004BF8 08C0                    		or	al, al
  2095 00004BFA 74E5                    		jz	short OK_RETURN
  2096 00004BFC 3C41                    		cmp	al, 65
  2097 00004BFE 7518                    		jnz	short seterr
  2098 00004C00 B84100                  		mov	ax, 65
  2099 00004C03 A3[2403]                		mov	[EXTERR], ax
  2100 00004C06 C606[2603]06            		mov	byte [EXTERR_ACTION], 6 ; errACT_Ignore
  2101 00004C0B C606[2703]05            		mov	byte [EXTERR_CLASS], 5 ; errCLASS_HrdFail
  2102 00004C10 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  2103 00004C15 E9DDF7                  		jmp	From_GetSet
  2104                                  ; ---------------------------------------------------------------------------
  2105                                  
  2106                                  seterr:					; ...
  2107 00004C18 EBAD                    		jmp	short NLSERROR
  2108                                  ; ---------------------------------------------------------------------------
  2109                                  
  2110                                  nomem:					; ...
  2111 00004C1A B001                    		mov	al, 1		; error_invalid_function
  2112 00004C1C EBFA                    		jmp	short seterr
  2113                                  ; ---------------------------------------------------------------------------
  2114                                  
  2115                                  _$GET_DRIVE_FREESPACE:			; ...
  2116 00004C1E 16                      		push	ss
  2117 00004C1F 1F                      		pop	ds
  2118 00004C20 88D0                    		mov	al, dl
  2119 00004C22 E8375E                  		call	GETTHISDRV
  2120                                  
  2121                                  SET_AX_RET:				; ...
  2122 00004C25 7218                    		jb	short BADFDRV
  2123 00004C27 E8971F                  		call	DISK_INFO
  2124 00004C2A 87D3                    		xchg	dx, bx
  2125 00004C2C 72F7                    		jb	short SET_AX_RET
  2126 00004C2E 30E4                    		xor	ah, ah
  2127                                  
  2128                                  DoSt:					; ...
  2129 00004C30 E842F6                  		call	Get_User_Stack
  2130 00004C33 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  2131 00004C36 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  2132 00004C39 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  2133 00004C3C 8904                    		mov	[si], ax	; [SI+user_env.user_AX]
  2134 00004C3E C3                      		retn
  2135                                  ; ---------------------------------------------------------------------------
  2136                                  
  2137                                  BADFDRV:				; ...
  2138 00004C3F E8C1F7                  		call	FCB_RET_ER
  2139 00004C42 B8FFFF                  		mov	ax, 0FFFFh	; -1
  2140 00004C45 EBE9                    		jmp	short DoSt
  2141                                  ; ---------------------------------------------------------------------------
  2142                                  
  2143                                  _$GET_DMA:				; ...
  2144 00004C47 368B1E[2C03]            		mov	bx, word [ss:DMAADD]
  2145 00004C4C 368B0E[2E03]            		mov	cx, word [ss:DMAADD+2]
  2146 00004C51 E821F6                  		call	Get_User_Stack
  2147 00004C54 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  2148 00004C57 894C10                  		mov	[si+10h], cx	; [SI+user_env.user_ES]
  2149 00004C5A C3                      		retn
  2150                                  ; ---------------------------------------------------------------------------
  2151                                  
  2152                                  _$SET_DMA:				; ...
  2153 00004C5B 368916[2C03]            		mov	word [ss:DMAADD], dx
  2154 00004C60 368C1E[2E03]            		mov	word [ss:DMAADD+2],	ds
  2155 00004C65 C3                      		retn
  2156                                  ; ---------------------------------------------------------------------------
  2157                                  
  2158                                  _$GET_DEFAULT_DRIVE:			; ...
  2159 00004C66 36A0[3603]              		mov	al, [ss:CURDRV]
  2160 00004C6A C3                      		retn
  2161                                  ; ---------------------------------------------------------------------------
  2162                                  
  2163                                  _$SET_DEFAULT_DRIVE:			; ...
  2164 00004C6B 88D0                    		mov	al, dl
  2165 00004C6D FEC0                    		inc	al
  2166 00004C6F E8CD5D                  		call	GetVisDrv
  2167 00004C72 7204                    		jb	short SETRET
  2168 00004C74 36A2[3603]              		mov	[ss:CURDRV], al
  2169                                  
  2170                                  SETRET:					; ...
  2171 00004C78 36A0[4700]              		mov	al, [ss:CDSCOUNT]
  2172 00004C7C C3                      		retn
  2173                                  
  2174                                  ; =============== S U B	R O U T	I N E =======================================
  2175                                  
  2176                                  
  2177                                   _$GET_INTERRUPT_VECTOR: ; ...
  2178 00004C7D E83100                  		call	RECSET
  2179 00004C80 26C41F                  		les	bx, [es:bx]
  2180 00004C83 E8EFF5                  		call	Get_User_Stack
  2181 00004C86 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  2182 00004C89 8C4410                  		mov	word [si+10h], es ;	[SI+user_env.user_ES]
  2183 00004C8C C3                      		retn
  2184                                  
  2185                                  ; ---------------------------------------------------------------------------
  2186                                  
  2187                                  _$SET_INTERRUPT_VECTOR:			; ...
  2188 00004C8D E82100                  		call	RECSET
  2189 00004C90 FA                      		cli
  2190 00004C91 268917                  		mov	[es:bx], dx
  2191 00004C94 268C5F02                		mov	word [es:bx+2], ds
  2192 00004C98 FB                      		sti
  2193 00004C99 36F606[8600]04          		test	byte [ss:DOS_FLAG], 4 ; EXECA20OFF
  2194 00004C9F 7501                    		jnz	short siv_1
  2195 00004CA1 C3                      		retn
  2196                                  ; ---------------------------------------------------------------------------
  2197                                  
  2198                                  siv_1:					; ...
  2199 00004CA2 36803E[8500]00          		cmp	byte [ss:A20OFF_COUNT], 0
  2200 00004CA8 7506                    		jnz	short siv_2
  2201 00004CAA 36C606[8500]01          		mov	byte [ss:A20OFF_COUNT], 1
  2202                                  
  2203                                  siv_2:					; ...
  2204 00004CB0 C3                      		retn
  2205                                  
  2206                                  ; =============== S U B	R O U T	I N E =======================================
  2207                                  
  2208                                  
  2209                                   RECSET:		; ...
  2210 00004CB1 31DB                    		xor	bx, bx
  2211 00004CB3 8EC3                    		mov	es, bx
  2212 00004CB5 88C3                    		mov	bl, al
  2213 00004CB7 D1E3                    		shl	bx, 1
  2214 00004CB9 D1E3                    		shl	bx, 1
  2215 00004CBB C3                      		retn
  2216                                  
  2217                                  ; ---------------------------------------------------------------------------
  2218                                  
  2219                                  _$CHAR_OPER:				; ...
  2220 00004CBC 08C0                    		or	al, al
  2221 00004CBE B22F                    		mov	dl, '/'
  2222 00004CC0 7407                    		jz	short chop_1
  2223 00004CC2 3C02                    		cmp	al, 2
  2224 00004CC4 B2FF                    		mov	dl, 0FFh	; -1
  2225 00004CC6 7401                    		jz	short chop_1
  2226 00004CC8 C3                      		retn
  2227                                  ; ---------------------------------------------------------------------------
  2228                                  
  2229                                  chop_1:					; ...
  2230 00004CC9 E8A9F5                  		call	Get_User_Stack
  2231 00004CCC 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  2232 00004CCF C3                      		retn
  2233                                  ; ---------------------------------------------------------------------------
  2234                                  
  2235                                  _$GetExtendedError:			; ...
  2236 00004CD0 16                      		push	ss
  2237 00004CD1 1F                      		pop	ds
  2238 00004CD2 A1[2403]                		mov	ax, [EXTERR]
  2239 00004CD5 C43E[2803]              		les	di, [EXTERRPT]
  2240 00004CD9 8B1E[2603]              		mov	bx, word [EXTERR_ACTION]	; BL = Action
  2241                                  					; BH = Class
  2242 00004CDD 8A2E[2303]              		mov	ch, [EXTERR_LOCUS]
  2243 00004CE1 E891F5                  		call	Get_User_Stack
  2244 00004CE4 897C0A                  		mov	[si+0Ah], di	; [SI+user_env.user_DI]
  2245 00004CE7 8C4410                  		mov	word [si+10h], es ;	[SI+user_env.user_ES]
  2246 00004CEA 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  2247 00004CED 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  2248                                  
  2249                                  jmp_SYS_RET_OK:				; ...
  2250 00004CF0 E9F1F6                  		jmp	SYS_RETURN
  2251                                  ; ---------------------------------------------------------------------------
  2252 00004CF3 56                      		push	si
  2253 00004CF4 BE[2A12]                		mov	si, COUNTRY_CDPG
  2254 00004CF7 368B446A                		mov	ax, [ss:si+6Ah]	; [SI+DOS_CCDPG.ccDosCodePage]
  2255 00004CFB 5E                      		pop	si
  2256 00004CFC C3                      		retn
  2257                                  ; ---------------------------------------------------------------------------
  2258                                  
  2259                                  _$ECS_Call:				; ...
  2260 00004CFD 08C0                    		or	al, al
  2261 00004CFF 7512                    		jnz	short _okok
  2262 00004D01 E871F5                  		call	Get_User_Stack
  2263 00004D04 C74408[E50C]            		mov	word [si+8], DBCS_TAB+2 ;
  2264                                  					; [si+user_env.user_SI]
  2265 00004D09 06                      		push	es
  2266 00004D0A 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
  2267 00004D0F 8C440E                  		mov	word [si+0Eh], es ;	[SI+user_env.user_DS]
  2268 00004D12 07                      		pop	es
  2269                                  
  2270                                  _okok:					; ...
  2271 00004D13 EBDB                    		jmp	short jmp_SYS_RET_OK
  2272                                  ; ---------------------------------------------------------------------------
  2273                                  
  2274                                  _$PARSE_FILE_DESCRIPTOR:		; ...
  2275 00004D15 E85F41                  		call	MAKEFCB
  2276 00004D18 56                      		push	si
  2277 00004D19 E859F5                  		call	Get_User_Stack
  2278 00004D1C 8F4408                  		pop	word [si+8]	; [SI+user_env.user_SI]
  2279 00004D1F C3                      		retn
  2280                                  ; ---------------------------------------------------------------------------
  2281                                  
  2282                                  _$SLEAZEFUNC:				; ...
  2283 00004D20 B200                    		mov	dl, 0
  2284                                  
  2285                                  _$SLEAZEFUNCDL:				; ...
  2286 00004D22 16                      		push	ss
  2287 00004D23 1F                      		pop	ds
  2288 00004D24 88D0                    		mov	al, dl
  2289 00004D26 E8335D                  		call	GETTHISDRV
  2290                                  
  2291                                  SET_AL_RET:				; ...
  2292 00004D29 721E                    		jb	short BADSLDRIVE
  2293 00004D2B E8931E                  		call	DISK_INFO
  2294 00004D2E 72F9                    		jb	short SET_AL_RET
  2295 00004D30 8826[9805]              		mov	[FATBYTE], ah
  2296 00004D34 BF[9805]                		mov	di, FATBYTE
  2297 00004D37 30E4                    		xor	ah, ah
  2298 00004D39 E839F5                  		call	Get_User_Stack
  2299 00004D3C 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  2300 00004D3F 895C06                  		mov	[si+6],	bx	; [SI+user_env.user_DCX]
  2301 00004D42 897C02                  		mov	[si+2],	di	; [SI+user_env.user_BX]
  2302 00004D45 8C540E                  		mov	word [si+0Eh], ss ;	[SI+user_env.user_DS]
  2303 00004D48 C3                      		retn
  2304                                  ; ---------------------------------------------------------------------------
  2305                                  
  2306                                  BADSLDRIVE:				; ...
  2307 00004D49 E9B7F6                  		jmp	FCB_RET_ER
  2308                                  ; ---------------------------------------------------------------------------
  2309                                  
  2310                                  _$GET_INDOS_FLAG:			; ...
  2311 00004D4C E826F5                  		call	Get_User_Stack
  2312 00004D4F C74402[2103]            		mov	word [si+2], INDOS ; word [SI+user_env.user_BX]
  2313 00004D54 8C5410                  		mov	word [si+10h], ss  ; [SI+user_env.user_ES]
  2314 00004D57 C3                      		retn
  2315                                  ; ---------------------------------------------------------------------------
  2316                                  
  2317                                  _$GET_IN_VARS:				; ...
  2318 00004D58 E81AF5                  		call	Get_User_Stack
  2319 00004D5B C74402[2600]            		mov	word [si+2], SYSINITVARS ;
  2320                                  					; [SI+user_env.user_BX]
  2321 00004D60 8C5410                  		mov	word [si+10h], ss ; [SI+user_env.user_ES]
  2322 00004D63 C3                      		retn
  2323                                  ; ---------------------------------------------------------------------------
  2324                                  
  2325                                  _$GET_DEFAULT_DPB:			; ...
  2326 00004D64 B200                    		mov	dl, 0
  2327                                  
  2328                                  _$GET_DPB:				; ...
  2329 00004D66 16                      		push	ss
  2330 00004D67 1F                      		pop	ds
  2331 00004D68 88D0                    		mov	al, dl
  2332 00004D6A E8EF5C                  		call	GETTHISDRV
  2333 00004D6D 7222                    		jb	short ISNODRV
  2334 00004D6F C43E[A205]              		les	di, [THISCDS]
  2335 00004D73 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  2336                                  					; (curdir_isnet>>8)
  2337 00004D78 7517                    		jnz	short ISNODRV
  2338 00004D7A E8A903                  		call	ECritDisk
  2339 00004D7D E8E948                  		call	FATREAD_CDS
  2340 00004D80 E8C303                  		call	LCritDisk
  2341 00004D83 720C                    		jb	short ISNODRV
  2342 00004D85 E8EDF4                  		call	Get_User_Stack
  2343 00004D88 896C02                  		mov	[si+2],	bp	; [SI+user_env.user_BX]
  2344 00004D8B 8C440E                  		mov	word [si+0Eh], es ;	[SI+user_env.user_DS]
  2345 00004D8E 30C0                    		xor	al, al
  2346 00004D90 C3                      		retn
  2347                                  ; ---------------------------------------------------------------------------
  2348                                  
  2349                                  ISNODRV:				; ...
  2350 00004D91 B0FF                    		mov	al, 0FFh	; -1
  2351 00004D93 C3                      		retn
  2352                                  ; ---------------------------------------------------------------------------
  2353                                  
  2354                                  _$DISK_RESET:				; ...
  2355 00004D94 B0FF                    		mov	al, -1		; 0FFh
  2356 00004D96 16                      		push	ss
  2357 00004D97 1F                      		pop	ds
  2358 00004D98 E88B03                  		call	ECritDisk
  2359 00004D9B 830E[1106]04            		or	word [DOS34_FLAG], 4 ; FROM_DISK_RESET
  2360 00004DA0 E8374C                  		call	FLUSHBUF
  2361 00004DA3 8326[1106]FB            		and	word [DOS34_FLAG], 0FFFBh ; NO_FROM_DISK_RESET
  2362 00004DA8 C706[B50D]0000          		mov	word [SC_STATUS], 0
  2363 00004DAE BBFFFF                  		mov	bx, -1
  2364 00004DB1 891E[2000]              		mov	word [LastBuffer+2], bx
  2365 00004DB5 891E[1E00]              		mov	word [LastBuffer], bx
  2366 00004DB9 E88A03                  		call	LCritDisk
  2367 00004DBC B8FFFF                  		mov	ax, -1		; 0FFFFh
  2368 00004DBF 50                      		push	ax
  2369 00004DC0 B82011                  		mov	ax, 1120h
  2370 00004DC3 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - FLUSH ALL DISK BUFFERS
  2371                                  					; DS = DOS CS
  2372                                  					; Return: CF clear (successful)
  2373 00004DC5 58                      		pop	ax
  2374 00004DC6 C3                      		retn
  2375                                  ; ---------------------------------------------------------------------------
  2376 00004DC7 0300                    _word_3		dw 3			; ...
  2377                                  ; ---------------------------------------------------------------------------
  2378                                  
  2379                                  _$SETDPB:				; ...
  2380 00004DC9 89EF                    		mov	di, bp
  2381 00004DCB 83C702                  		add	di, 2
  2382 00004DCE AD                      		lodsw
  2383 00004DCF AB                      		stosw
  2384 00004DD0 807C0300                		cmp	byte [si+3], 0 ; [SI+A_BPB.BPB_NUMBEROFFATS-2]
  2385 00004DD4 7507                    		jnz	short yesfat
  2386 00004DD6 26C6450400              		mov	byte [es:di+4], 0 ;	[ES:DI+DPB.FAT_COUNT-4]
  2387 00004DDB EB77                    		jmp	short setend
  2388                                  ; ---------------------------------------------------------------------------
  2389                                  
  2390                                  yesfat:					; ...
  2391 00004DDD 89C2                    		mov	dx, ax
  2392 00004DDF AC                      		lodsb
  2393 00004DE0 FEC8                    		dec	al
  2394 00004DE2 AA                      		stosb
  2395 00004DE3 FEC0                    		inc	al
  2396 00004DE5 30E4                    		xor	ah, ah
  2397                                  
  2398                                  LOG2LOOP:				; ...
  2399 00004DE7 A801                    		test	al, 1
  2400 00004DE9 7506                    		jnz	short SAVLOG
  2401 00004DEB FEC4                    		inc	ah
  2402 00004DED D0E8                    		shr	al, 1
  2403 00004DEF EBF6                    		jmp	short LOG2LOOP
  2404                                  ; ---------------------------------------------------------------------------
  2405                                  
  2406                                  SAVLOG:					; ...
  2407 00004DF1 88E0                    		mov	al, ah
  2408 00004DF3 AA                      		stosb
  2409 00004DF4 88C3                    		mov	bl, al
  2410 00004DF6 A5                      		movsw
  2411 00004DF7 AC                      		lodsb
  2412 00004DF8 AA                      		stosb
  2413 00004DF9 88C7                    		mov	bh, al
  2414 00004DFB AD                      		lodsw
  2415 00004DFC AB                      		stosw
  2416 00004DFD B105                    		mov	cl, 5
  2417 00004DFF D3EA                    		shr	dx, cl
  2418 00004E01 48                      		dec	ax
  2419 00004E02 01D0                    		add	ax, dx
  2420 00004E04 89D1                    		mov	cx, dx
  2421 00004E06 31D2                    		xor	dx, dx
  2422 00004E08 F7F1                    		div	cx
  2423 00004E0A 89C1                    		mov	cx, ax
  2424 00004E0C 47                      		inc	di
  2425 00004E0D 47                      		inc	di
  2426 00004E0E A5                      		movsw
  2427 00004E0F AC                      		lodsb
  2428 00004E10 26884617                		mov	[es:bp+17h], al	; [ES:BP+DPB.MEDIA]
  2429 00004E14 AD                      		lodsw
  2430 00004E15 AB                      		stosw
  2431 00004E16 88FA                    		mov	dl, bh
  2432 00004E18 30F6                    		xor	dh, dh
  2433 00004E1A F7E2                    		mul	dx
  2434 00004E1C 26034606                		add	ax, [es:bp+6]	; [ES:BP+DPB.FIRST_FAT]
  2435 00004E20 AB                      		stosw
  2436 00004E21 01C8                    		add	ax, cx
  2437 00004E23 2689460B                		mov	[es:bp+0Bh], ax	; [ES:BP+DPB.FIRST_SECTOR]
  2438 00004E27 88D9                    		mov	cl, bl
  2439 00004E29 26837E0D00              		cmp	word [es:bp+0Dh], 0
  2440 00004E2E 751C                    		jnz	short normal_dpb
  2441 00004E30 30ED                    		xor	ch, ch
  2442 00004E32 8B5C08                  		mov	bx, [si+8]	; [SI+A_BPB.BPB_BIGTOTALSECTORS-A_BPB.BPB_SECTORSPERTRACK]
  2443 00004E35 8B540A                  		mov	dx, [si+0Ah]	; [SI+A_BPB.BPB_BIGTOTALSECTORS-A_BPB.BPB_SECTORSPERTRACK+2]
  2444 00004E38 29C3                    		sub	bx, ax
  2445 00004E3A 83DA00                  		sbb	dx, 0
  2446 00004E3D 09C9                    		or	cx, cx
  2447 00004E3F 7407                    		jz	short norot
  2448                                  
  2449                                  rott:					; ...
  2450 00004E41 F8                      		clc
  2451 00004E42 D1DA                    		rcr	dx, 1
  2452 00004E44 D1DB                    		rcr	bx, 1
  2453 00004E46 E2F9                    		loop	rott
  2454                                  
  2455                                  norot:					; ...
  2456 00004E48 89D8                    		mov	ax, bx
  2457 00004E4A EB08                    		jmp	short setend
  2458                                  ; ---------------------------------------------------------------------------
  2459                                  
  2460                                  normal_dpb:				; ...
  2461 00004E4C 262B460D                		sub	ax, [es:bp+0Dh]
  2462 00004E50 F7D8                    		neg	ax
  2463 00004E52 D3E8                    		shr	ax, cl
  2464                                  
  2465                                  setend:					; ...
  2466 00004E54 40                      		inc	ax
  2467 00004E55 89C3                    		mov	bx, ax
  2468 00004E57 268B460F                		mov	ax, [es:bp+0Fh]	; [ES:BP+DPB.FAT_SIZE]
  2469 00004E5B 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
  2470 00004E5F 81FBF60F                		cmp	bx, 0FF6h	; 4096-10
  2471 00004E63 720B                    		jb	short setend_fat12
  2472 00004E65 D1EA                    		shr	dx, 1
  2473 00004E67 D1D8                    		rcr	ax, 1
  2474 00004E69 3DF70F                  		cmp	ax, 0FF7h	; 4096-10+1
  2475 00004E6C 7210                    		jb	short setend_faterr
  2476 00004E6E EB09                    		jmp	short setend_fat16
  2477                                  ; ---------------------------------------------------------------------------
  2478                                  
  2479                                  setend_fat12:				; ...
  2480 00004E70 01C0                    		add	ax, ax
  2481 00004E72 11D2                    		adc	dx, dx
  2482 00004E74 2EF736[C74D]            		div	word [cs:_word_3]
  2483                                  
  2484                                  setend_fat16:				; ...
  2485 00004E79 48                      		dec	ax
  2486 00004E7A 39D8                    		cmp	ax, bx
  2487 00004E7C 7602                    		jbe	short setend_fat
  2488                                  
  2489                                  setend_faterr:				; ...
  2490 00004E7E 89D8                    		mov	ax, bx
  2491                                  
  2492                                  setend_fat:				; ...
  2493 00004E80 2689460D                		mov	[es:bp+0Dh], ax	; [ES:BP+DPB.MAX_CLUSTER]
  2494 00004E84 26C7461D0000            		mov	word [es:bp+1Dh], 0 ; [ES:BP+DPB.NEXT_FREE]
  2495 00004E8A 26C7461FFFFF            		mov	word [es:bp+1Fh], -1 ; [ES:BP+DPB.FREE_CNT]
  2496 00004E90 C3                      		retn
  2497                                  
  2498                                  ; =============== S U B	R O U T	I N E =======================================
  2499                                  
  2500                                  _$DUP_PDB:	
  2501 00004E91 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  2502 00004E96 C606[A803]FF            		mov	byte [CreatePDB], 0FFh
  2503 00004E9B 8E1E[3003]              		mov	ds, [CurrentPDB]
  2504 00004E9F 56                      		push	si
  2505 00004EA0 EB0A                    		jmp	short CreateCopy
  2506                                  ; ---------------------------------------------------------------------------
  2507                                  
  2508                                  _$CREATE_PROCESS_DATA_BLOCK:		; ...
  2509 00004EA2 E8D0F3                  		call	Get_User_Stack
  2510 00004EA5 8E5C14                  		mov	ds, word [si+14h] ; [SI+user_env.user_CS]
  2511 00004EA8 FF360200                		push	word [2]	; [PDB.BLOCK_LEN]
  2512                                  
  2513                                  CreateCopy:				; ...
  2514 00004EAC 8EC2                    		mov	es, dx
  2515 00004EAE 31F6                    		xor	si, si
  2516 00004EB0 89F7                    		mov	di, si
  2517 00004EB2 B98000                  		mov	cx, 128
  2518 00004EB5 F3A5                    		rep movsw
  2519 00004EB7 B91400                  		mov	cx, 20		; FILPERPROC
  2520 00004EBA BF1800                  		mov	di, 18h		; PDB.JFN_TABLE
  2521 00004EBD 1E                      		push	ds
  2522 00004EBE C5363400                		lds	si, [34h]	; [PDB.JFN_Pointer]
  2523 00004EC2 F3A4                    		rep movsb
  2524 00004EC4 1F                      		pop	ds
  2525 00004EC5 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  2526 00004ECA 803E[A803]00            		cmp	byte [CreatePDB], 0
  2527 00004ECF 744D                    		jz	short Create_PDB_cont
  2528 00004ED1 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  2529 00004ED6 31DB                    		xor	bx, bx
  2530 00004ED8 B91400                  		mov	cx, 20
  2531                                  
  2532                                  Create_dup_jfn:				; ...
  2533 00004EDB 06                      		push	es
  2534 00004EDC E84B57                  		call	SFFromHandle
  2535 00004EDF B0FF                    		mov	al, -1		; 0FFh
  2536 00004EE1 7224                    		jb	short CreateStash
  2537 00004EE3 26F6450610              		test	byte [es:di+6], 10h ; [ES:DI+SF_ENTRY.sf_flags+1],
  2538                                  					; (sf_no_inherit>>8)
  2539 00004EE8 751D                    		jnz	short CreateStash
  2540 00004EEA 268A6502                		mov	ah, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  2541 00004EEE 80E4F0                  		and	ah, 0F0h	; SHARING_MASK
  2542 00004EF1 80FC70                  		cmp	ah, 70h		; SHARING_NET_FCB
  2543 00004EF4 7411                    		jz	short CreateStash
  2544 00004EF6 893E[9E05]              		mov	word [THISSFT], di
  2545 00004EFA 8C06[A005]              		mov	word [THISSFT+2], es
  2546 00004EFE E8091A                  		call	DOS_DUP
  2547 00004F01 E80957                  		call	pJFNFromHandle
  2548 00004F04 268A05                  		mov	al, [es:di]
  2549                                  
  2550                                  CreateStash:				; ...
  2551 00004F07 07                      		pop	es
  2552 00004F08 26884718                		mov	[es:bx+18h], al	; [ES:BX+PDB.JFN_TABLE]
  2553 00004F0C 43                      		inc	bx
  2554 00004F0D E2CC                    		loop	Create_dup_jfn
  2555 00004F0F 8B1E[3003]              		mov	bx, [CurrentPDB]
  2556 00004F13 26891E1600              		mov	[es:16h], bx	; [ES:PDB.PARENT_PID]
  2557 00004F18 8C06[3003]              		mov	[CurrentPDB], es
  2558 00004F1C 8EDB                    		mov	ds, bx
  2559                                  
  2560                                  Create_PDB_cont:			; ...
  2561 00004F1E 1E                      		push	ds
  2562 00004F1F 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  2563 00004F24 C606[A803]00            		mov	byte [CreatePDB], 0
  2564 00004F29 1F                      		pop	ds
  2565 00004F2A 58                      		pop	ax
  2566                                  
  2567                                  SETMEM:					; ...
  2568 00004F2B 31C9                    		xor	cx, cx
  2569 00004F2D 8ED9                    		mov	ds, cx
  2570 00004F2F 8EC2                    		mov	es, dx
  2571 00004F31 BE8800                  		mov	si, 88h		; addr_int_terminate
  2572 00004F34 BF0A00                  		mov	di, 0Ah		; SAVEXIT
  2573 00004F37 B90600                  		mov	cx, 6
  2574 00004F3A F3A5                    		rep movsw
  2575 00004F3C 26A30200                		mov	[es:2],	ax
  2576 00004F40 29D0                    		sub	ax, dx
  2577 00004F42 3DFF0F                  		cmp	ax, 0FFFh	; MAXDIF
  2578 00004F45 7603                    		jbe	short HAVDIF
  2579 00004F47 B8FF0F                  		mov	ax, 0FFFh
  2580                                  
  2581                                  HAVDIF:					; ...
  2582 00004F4A 83E810                  		sub	ax, 10h
  2583 00004F4D BB0C00                  		mov	bx, 0Ch		; ENTRYPOINTSEG
  2584 00004F50 29C3                    		sub	bx, ax
  2585 00004F52 B104                    		mov	cl, 4
  2586 00004F54 D3E0                    		shl	ax, cl
  2587 00004F56 8EDA                    		mov	ds, dx
  2588 00004F58 A30600                  		mov	[6],	ax	; [PDB.CPM_CALL+1]
  2589 00004F5B 891E0800                		mov	[8],	bx	; [PDB.CPM_CALL+3]
  2590 00004F5F 3DF0FE                  		cmp	ax, 0FEF0h	; WRAPOFFSET
  2591 00004F62 740C                    		jz	short addr_ok
  2592 00004F64 C7060600C000            		mov	word [6], 0C0h
  2593 00004F6A C70608000000            		mov	word [8], 0
  2594                                  
  2595                                  addr_ok:				; ...
  2596 00004F70 C7060000CD20            		mov	word [0], 20CDh ; [PDB.EXIT_CALL],
  2597                                  					; (int_abort*256) + mi_INT
  2598 00004F76 C60605009A              		mov	byte [5], 9Ah ; [PDB.CPM_CALL],mi_Long_CALL
  2599 00004F7B C7065000CD21            		mov	word [50h], 21CDh ; [PDB.CALL_SYSTEM],
  2600                                  					; (int_command*256) + mi_INT
  2601 00004F81 C6065200CB              		mov	byte [52h], 0CBh	; [PDB.CALL_SYSTEM+2],mi_Long_RET
  2602 00004F86 C70634001800            		mov	word [34h], 18h ; [PDB.JFN_Pointer],PDB.JFN_TABLE
  2603 00004F8C 8C1E3600                		mov	word [36h], ds ;	[PDB.JFN_Pointer+2]
  2604 00004F90 C70632001400            		mov	word [32h], 20 ;	[PDB.JFN_Length],FILPERPROC
  2605 00004F96 C7063800FFFF            		mov	word [38h], 0FFFFh ; [PDB.Next_PDB],-1
  2606 00004F9C C7063A00FFFF            		mov	word [3Ah], 0FFFFh ; [PDB.Next_PDB+2],-1
  2607 00004FA2 26C70640000500          		mov	word [es:40h], 5 ; [ES:PDB.Version],
  2608                                  					; (MINOR_VERSION*256)+MAJOR_VERSION
  2609 00004FA9 C3                      		retn
  2610                                  
  2611                                  ; ---------------------------------------------------------------------------
  2612                                  
  2613                                  _$GSetMediaID:				; ...
  2614 00004FAA B96608                  		mov	cx, 866h	; RAWIO	- GET_MEDIA_ID
  2615 00004FAD 3C00                    		cmp	al, 0		; get ?
  2616 00004FAF 7407                    		jz	short doioctl	; yes
  2617 00004FB1 3C01                    		cmp	al, 1		; set ?
  2618 00004FB3 7509                    		jnz	short errorfunc	; no, error
  2619 00004FB5 B94608                  		mov	cx, 846h	; RAWIO	- SET_MEDIA_ID
  2620                                  
  2621                                  doioctl:				; ...
  2622 00004FB8 B00D                    		mov	al, 0Dh		; generic IOCTL
  2623 00004FBA E87111                  		call	_$IOCTL
  2624 00004FBD C3                      		retn
  2625                                  ; ---------------------------------------------------------------------------
  2626                                  
  2627                                  errorfunc:				; ...
  2628 00004FBE B001                    		mov	al, 1		; error_invalid_function
  2629 00004FC0 E92AF4                  		jmp	SYS_RET_ERR
  2630                                  
  2631                                  ; =============== S U B	R O U T	I N E =======================================
  2632                                  
  2633                                  
  2634                                   StrCmp:		; ...
  2635 00004FC3 56                      		push	si
  2636 00004FC4 57                      		push	di
  2637 00004FC5 50                      		push	ax
  2638                                  
  2639                                  Cmplp:					; ...
  2640 00004FC6 AC                      		lodsb
  2641 00004FC7 E8EC3F                  		call	UCase
  2642 00004FCA E83E40                  		call	PATHCHRCMP
  2643 00004FCD 88C4                    		mov	ah, al
  2644 00004FCF 268A05                  		mov	al, [es:di]
  2645 00004FD2 47                      		inc	di
  2646 00004FD3 E8E03F                  		call	UCase
  2647 00004FD6 E83240                  		call	PATHCHRCMP
  2648 00004FD9 38C4                    		cmp	ah, al
  2649 00004FDB 7504                    		jnz	short PopRet
  2650 00004FDD 08C0                    		or	al, al
  2651 00004FDF 75E5                    		jnz	short Cmplp
  2652                                  
  2653                                  PopRet:					; ...
  2654 00004FE1 58                      		pop	ax
  2655 00004FE2 5F                      		pop	di
  2656 00004FE3 5E                      		pop	si
  2657 00004FE4 C3                      		retn
  2658                                  
  2659                                  ; =============== S U B	R O U T	I N E =======================================
  2660                                  
  2661                                  
  2662                                   StrCpy:		; ...
  2663 00004FE5 50                      		push	ax
  2664                                  
  2665                                  CPYLoop:				; ...
  2666 00004FE6 AC                      		lodsb
  2667 00004FE7 E8CC3F                  		call	UCase
  2668 00004FEA E81E40                  		call	PATHCHRCMP
  2669 00004FED AA                      		stosb
  2670 00004FEE 08C0                    		or	al, al
  2671 00004FF0 75F4                    		jnz	short CPYLoop
  2672 00004FF2 58                      		pop	ax
  2673 00004FF3 C3                      		retn
  2674                                  
  2675                                  ; =============== S U B	R O U T	I N E =======================================
  2676                                  
  2677                                  FStrCpy:
  2678 00004FF4 50                      		push	ax
  2679                                  
  2680                                  FCPYLoop:				; ...
  2681 00004FF5 AC                      		lodsb
  2682 00004FF6 AA                      		stosb
  2683 00004FF7 08C0                    		or	al, al
  2684 00004FF9 75FA                    		jnz	short FCPYLoop
  2685 00004FFB 58                      		pop	ax
  2686 00004FFC C3                      		retn
  2687                                  
  2688                                  ; =============== S U B	R O U T	I N E =======================================
  2689                                  
  2690                                  StrLen:		; ...
  2691 00004FFD 57                      		push	di
  2692 00004FFE 50                      		push	ax
  2693 00004FFF B9FFFF                  		mov	cx, 65535
  2694 00005002 30C0                    		xor	al, al
  2695 00005004 F2AE                    		repne scasb
  2696 00005006 F7D1                    		not	cx
  2697 00005008 58                      		pop	ax
  2698 00005009 5F                      		pop	di
  2699 0000500A C3                      		retn
  2700                                  
  2701                                  ; =============== S U B	R O U T	I N E =======================================
  2702                                  
  2703                                  DStrLen:
  2704 0000500B E80700                  		call	XCHGP
  2705 0000500E E8ECFF                  		call	StrLen
  2706 00005011 E80100                  		call	XCHGP
  2707 00005014 C3                      		retn
  2708                                  
  2709                                  ; =============== S U B	R O U T	I N E =======================================
  2710                                  
  2711                                  XCHGP:		; ...
  2712 00005015 1E                      		push	ds
  2713 00005016 06                      		push	es
  2714 00005017 1F                      		pop	ds
  2715 00005018 07                      		pop	es
  2716 00005019 87F7                    		xchg	si, di
  2717                                  
  2718                                  xchgp_retn:				; ...
  2719 0000501B C3                      		retn
  2720                                  
  2721                                  ; =============== S U B	R O U T	I N E =======================================
  2722                                  
  2723                                  Idle:		; ...
  2724 0000501C 36803E[7205]00          		cmp	byte [ss:FSHARING], 0
  2725 00005022 75F7                    		jnz	short xchgp_retn
  2726 00005024 51                      		push	cx
  2727 00005025 368B0E[1C00]            		mov	cx, [ss:RetryLoop]
  2728 0000502A E308                    		jcxz	Idle3
  2729                                  
  2730                                  Idle1:					; ...
  2731 0000502C 51                      		push	cx
  2732 0000502D 31C9                    		xor	cx, cx
  2733                                  
  2734                                  Idle2:					; ...
  2735 0000502F E2FE                    		loop	Idle2
  2736 00005031 59                      		pop	cx
  2737 00005032 E2F8                    		loop	Idle1
  2738                                  
  2739                                  Idle3:					; ...
  2740 00005034 59                      		pop	cx
  2741 00005035 C3                      		retn
  2742                                  
  2743                                  ; ---------------------------------------------------------------------------
  2744                                  
  2745                                  TableDispatch:				; ...
  2746 00005036 55                      		push	bp
  2747 00005037 89E5                    		mov	bp, sp
  2748 00005039 53                      		push	bx
  2749 0000503A 8B5E06                  		mov	bx, [bp+6]	; [BP+TFrame.Tab]
  2750 0000503D 2E8A1F                  		mov	bl, [cs:bx]
  2751 00005040 385E04                  		cmp	[bp+4],	bl	; [BP+TFrame.Index]
  2752 00005043 7317                    		jnb	short TableError
  2753 00005045 8A5E04                  		mov	bl, [bp+4]	; [BP+TFrame.Index]
  2754 00005048 30FF                    		xor	bh, bh
  2755 0000504A D1E3                    		shl	bx, 1
  2756 0000504C 43                      		inc	bx
  2757 0000504D 035E06                  		add	bx, [bp+6]	; [BP+TFrame.Tab]
  2758 00005050 2E8B1F                  		mov	bx, [cs:bx]
  2759 00005053 895E06                  		mov	[bp+6],	bx	; [BP+TFrame.Tab]
  2760 00005056 5B                      		pop	bx
  2761 00005057 5D                      		pop	bp
  2762 00005058 83C404                  		add	sp, 4
  2763 0000505B C3                      		retn
  2764                                  ; ---------------------------------------------------------------------------
  2765                                  
  2766                                  TableError:				; ...
  2767 0000505C 5B                      		pop	bx
  2768 0000505D 5D                      		pop	bp
  2769 0000505E C20600                  		retn	6
  2770                                  
  2771                                  ; =============== S U B	R O U T	I N E =======================================
  2772                                  
  2773                                  TestNet:
  2774 00005061 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
  2775 00005066 26C43E[A205]            		les	di, [es:THISCDS]
  2776 0000506B 83FFFF                  		cmp	di, -1
  2777 0000506E 7408                    		jz	short CMCRet
  2778 00005070 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  2779                                  					; (curdir_isnet>>8)
  2780 00005075 7501                    		jnz	short CMCRet
  2781 00005077 C3                      		retn
  2782                                  ; ---------------------------------------------------------------------------
  2783                                  
  2784                                  CMCRet:					; ...
  2785 00005078 F5                      		cmc
  2786 00005079 C3                      		retn
  2787                                  
  2788                                  ; =============== S U B	R O U T	I N E =======================================
  2789                                  
  2790                                  IsSFTNet:		; ...
  2791 0000507A 26F6450680              		test	byte [es:di+6], 80h	; [ES:DI+SF_ENTRY.sf_flags+1],
  2792                                  					; (sf_isnet>>8)
  2793 0000507F C3                      		retn
  2794                                  
  2795                                  ; ---------------------------------------------------------------------------
  2796                                  
  2797                                  FastInit:				; ...
  2798 00005080 06                      		push	es
  2799 00005081 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
  2800 00005086 BF[320D]                		mov	di, FastOpenTable_2 ; FastTable+2
  2801 00005089 4B                      		dec	bx
  2802 0000508A 89DA                    		mov	dx, bx
  2803 0000508C D1E3                    		shl	bx, 1
  2804 0000508E D1E3                    		shl	bx, 1
  2805 00005090 01DF                    		add	di, bx
  2806 00005092 268B4502                		mov	ax, [es:di+2]
  2807 00005096 8CC9                    		mov	cx, cs
  2808 00005098 39C8                    		cmp	ax, cx
  2809 0000509A 7407                    		jz	short ok_install
  2810 0000509C 09C0                    		or	ax, ax
  2811 0000509E 7403                    		jz	short ok_install
  2812 000050A0 F9                      		stc
  2813 000050A1 EB17                    		jmp	short FSret
  2814                                  ; ---------------------------------------------------------------------------
  2815                                  
  2816                                  ok_install:				; ...
  2817 000050A3 83FEFF                  		cmp	si, -1
  2818 000050A6 7412                    		jz	short FSret
  2819 000050A8 8CD9                    		mov	cx, ds
  2820 000050AA 26894D02                		mov	[es:di+2], cx
  2821 000050AE 268935                  		mov	[es:di], si
  2822 000050B1 BF[3A0D]                		mov	di, FastOpenFlg ; FastFlg
  2823 000050B4 01D7                    		add	di, dx
  2824 000050B6 26800D80                		or	byte [es:di], 80h ; Fast_yes
  2825                                  
  2826                                  FSret:					; ...
  2827 000050BA 07                      		pop	es
  2828 000050BB C3                      		retn
  2829                                  ; ---------------------------------------------------------------------------
  2830                                  
  2831                                  FastRet:				; ...
  2832 000050BC F9                      		stc
  2833 000050BD 19C0                    		sbb	ax, ax
  2834 000050BF CB                      		retf
  2835                                  ; ---------------------------------------------------------------------------
  2836                                  
  2837                                  NLS_OPEN:				; ...
  2838 000050C0 88C8                    		mov	al, cl
  2839 000050C2 E8E85D                  		call	_$OPEN
  2840 000050C5 C3                      		retn
  2841                                  ; ---------------------------------------------------------------------------
  2842                                  
  2843                                  NLS_LSEEK:				; ...
  2844 000050C6 36FF36[8405]            		push	word [ss:USER_SP]
  2845 000050CB 36FF36[8605]            		push	word [ss:USER_SS]
  2846 000050D0 E81000                  		call	Fake_User_Stack
  2847 000050D3 89E8                    		mov	ax, bp
  2848 000050D5 E86D57                  		call	_$LSEEK
  2849 000050D8 368F06[8605]            		pop	word [ss:USER_SS]
  2850 000050DD 368F06[8405]            		pop	word [ss:USER_SP]
  2851 000050E2 C3                      		retn
  2852                                  
  2853                                  ; =============== S U B	R O U T	I N E =======================================
  2854                                  
  2855                                  Fake_User_Stack:
  2856 000050E3 36A1[6A0D]              		mov	ax, [ss:USER_SP_2F]
  2857 000050E7 36A3[8405]              		mov	[ss:USER_SP], ax
  2858 000050EB 8CD0                    		mov	ax, ss
  2859 000050ED 36A3[8605]              		mov	[ss:USER_SS], ax
  2860 000050F1 C3                      		retn
  2861                                  
  2862                                  ; ---------------------------------------------------------------------------
  2863                                  
  2864                                  GetDevList:				; ...
  2865 000050F2 BE[280D]                		mov	si, SysInitTable
  2866 000050F5 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  2867 000050FA C534                    		lds	si, [si]
  2868 000050FC 8B4422                  		mov	ax, [si+22h]	; [SI+SYSI.DEV]
  2869 000050FF 8B5C24                  		mov	bx, [si+24h]	; [SI+SYSI.DEV+2]
  2870 00005102 C3                      		retn
  2871                                  ; ---------------------------------------------------------------------------
  2872                                  
  2873                                  NLS_IOCTL:				; ...
  2874 00005103 36FF36[8405]            		push	word [ss:USER_SP]
  2875 00005108 36FF36[8605]            		push	word [ss:USER_SS]
  2876 0000510D E8D3FF                  		call	Fake_User_Stack
  2877 00005110 89E8                    		mov	ax, bp
  2878 00005112 E81910                  		call	_$IOCTL
  2879 00005115 368F06[8605]            		pop	word [ss:USER_SS]
  2880 0000511A 368F06[8405]            		pop	word [ss:USER_SP]
  2881 0000511F C3                      		retn
  2882                                  ; ---------------------------------------------------------------------------
  2883                                  
  2884                                  NLS_GETEXT:				; ...
  2885 00005120 36A1[2403]              		mov	ax, [ss:EXTERR]
  2886 00005124 C3                      		retn
  2887                                  ; ---------------------------------------------------------------------------
  2888                                  
  2889                                  MSG_RETRIEVAL:				; ...
  2890 00005125 C3                      		retn
  2891                                  
  2892                                  ; =============== S U B	R O U T	I N E =======================================
  2893                                  
  2894                                  ECritDisk:		; ...
  2895 00005126 9C                      		pushf			; ECritMEM
  2896                                  					; ECritSFT
  2897 00005127 36803E[0C0D]00          		cmp	byte [ss:redir_patch], 0
  2898 0000512D 740F                    		jz	short ECritDisk_2
  2899 0000512F EB01                    		jmp	short ECritDisk_1
  2900                                  ; ---------------------------------------------------------------------------
  2901                                  
  2902                                  ECritDisk_iret:				; ...
  2903 00005131 CF                      		iret
  2904                                  ; ---------------------------------------------------------------------------
  2905                                  
  2906                                  ECritDisk_1:				; ...
  2907 00005132 0E                      		push	cs
  2908 00005133 E8FBFF                  		call	ECritDisk_iret
  2909                                  
  2910                                  ECritDisk_0:
  2911 00005136 50                      		push	ax
  2912 00005137 B80180                  		mov	ax, 8001h
  2913 0000513A CD2A                    		int	2Ah		; Microsoft Networks - BEGIN DOS CRITICAL SECTION
  2914                                  					; AL = critical	section	number (00h-0Fh)
  2915 0000513C 58                      		pop	ax
  2916 0000513D C3                      		retn
  2917                                  ; ---------------------------------------------------------------------------
  2918                                  
  2919                                  ECritDisk_2:				; ...
  2920 0000513E EB01                    		jmp	short ECritDisk_3
  2921                                  ; ---------------------------------------------------------------------------
  2922                                  
  2923                                  ECritDisk_iret2:			; ...
  2924 00005140 CF                      		iret
  2925                                  ; ---------------------------------------------------------------------------
  2926                                  
  2927                                  ECritDisk_3:				; ...
  2928 00005141 0E                      		push	cs
  2929 00005142 E8FBFF                  		call	ECritDisk_iret2
  2930 00005145 C3                      		retn
  2931                                  
  2932                                  ; =============== S U B	R O U T	I N E =======================================
  2933                                  
  2934                                  LCritDisk:		; ...
  2935 00005146 9C                      		pushf			; LCritMEM
  2936                                  					; LCritSFT
  2937 00005147 36803E[0C0D]00          		cmp	byte [ss:redir_patch], 0
  2938 0000514D 740F                    		jz	short LCritDisk_2
  2939 0000514F EB01                    		jmp	short LCritDisk_1
  2940                                  ; ---------------------------------------------------------------------------
  2941                                  
  2942                                  LCritDisk_iret:				; ...
  2943 00005151 CF                      		iret
  2944                                  ; ---------------------------------------------------------------------------
  2945                                  
  2946                                  LCritDisk_1:				; ...
  2947 00005152 0E                      		push	cs
  2948 00005153 E8FBFF                  		call	LCritDisk_iret
  2949 00005156 50                      		push	ax
  2950 00005157 B80181                  		mov	ax, 8101h
  2951 0000515A CD2A                    		int	2Ah		; Microsoft Networks - END DOS CRITICAL	SECTION
  2952                                  					; AL = critical	section	number (00h-0Fh)
  2953 0000515C 58                      		pop	ax
  2954 0000515D C3                      		retn
  2955                                  ; ---------------------------------------------------------------------------
  2956                                  
  2957                                  LCritDisk_2:				; ...
  2958 0000515E EB01                    		jmp	short LCritDisk_3
  2959                                  ; ---------------------------------------------------------------------------
  2960                                  
  2961                                  LCritDisk_iret2:			; ...
  2962 00005160 CF                      		iret
  2963                                  ; ---------------------------------------------------------------------------
  2964                                  
  2965                                  LCritDisk_3:				; ...
  2966 00005161 0E                      		push	cs
  2967 00005162 E8FBFF                  		call	LCritDisk_iret2
  2968 00005165 C3                      		retn
  2969                                  
  2970                                  ; =============== S U B	R O U T	I N E =======================================
  2971                                  
  2972                                  ECritDevice:	; ...
  2973 00005166 9C                      		pushf
  2974 00005167 36803E[0C0D]00          		cmp	byte [ss:redir_patch], 0
  2975 0000516D 740F                    		jz	short ECritDevice_2
  2976 0000516F EB01                    		jmp	short ECritDevice_1
  2977                                  ; ---------------------------------------------------------------------------
  2978                                  
  2979                                  ECritDevice_iret:			; ...
  2980 00005171 CF                      		iret
  2981                                  ; ---------------------------------------------------------------------------
  2982                                  
  2983                                  ECritDevice_1:				; ...
  2984 00005172 0E                      		push	cs
  2985 00005173 E8FBFF                  		call	ECritDevice_iret
  2986 00005176 50                      		push	ax
  2987 00005177 B80280                  		mov	ax, 8002h
  2988 0000517A CD2A                    		int	2Ah		; Microsoft Networks - BEGIN DOS CRITICAL SECTION
  2989                                  					; AL = critical	section	number (00h-0Fh)
  2990 0000517C 58                      		pop	ax
  2991 0000517D C3                      		retn
  2992                                  ; ---------------------------------------------------------------------------
  2993                                  
  2994                                  ECritDevice_2:				; ...
  2995 0000517E EB01                    		jmp	short ECritDevice_3
  2996                                  ; ---------------------------------------------------------------------------
  2997                                  
  2998                                  ECritDevice_iret2:			; ...
  2999 00005180 CF                      		iret
  3000                                  ; ---------------------------------------------------------------------------
  3001                                  
  3002                                  ECritDevice_3:				; ...
  3003 00005181 0E                      		push	cs
  3004 00005182 E8FBFF                  		call	ECritDevice_iret2
  3005 00005185 C3                      		retn
  3006                                  
  3007                                  ; =============== S U B	R O U T	I N E =======================================
  3008                                  
  3009                                  
  3010                                   LCritDevice:	; ...
  3011 00005186 9C                      		pushf			; LCritMEM
  3012                                  					; LCritSFT
  3013 00005187 36803E[0C0D]00          		cmp	byte [ss:redir_patch], 0
  3014 0000518D 740F                    		jz	short LCritDevice_2
  3015 0000518F EB01                    		jmp	short LCritDevice_1
  3016                                  ; ---------------------------------------------------------------------------
  3017                                  
  3018                                  LCritDevice_iret:			; ...
  3019 00005191 CF                      		iret
  3020                                  ; ---------------------------------------------------------------------------
  3021                                  
  3022                                  LCritDevice_1:				; ...
  3023 00005192 0E                      		push	cs
  3024 00005193 E8FBFF                  		call	LCritDevice_iret
  3025 00005196 50                      		push	ax
  3026 00005197 B80281                  		mov	ax, 8102h
  3027 0000519A CD2A                    		int	2Ah		; Microsoft Networks - END DOS CRITICAL	SECTION
  3028                                  					; AL = critical	section	number (00h-0Fh)
  3029 0000519C 58                      		pop	ax
  3030 0000519D C3                      		retn
  3031                                  ; ---------------------------------------------------------------------------
  3032                                  
  3033                                  LCritDevice_2:				; ...
  3034 0000519E EB01                    		jmp	short LCritDevice_3
  3035                                  ; ---------------------------------------------------------------------------
  3036                                  
  3037                                  LCritDevice_iret2:			; ...
  3038 000051A0 CF                      		iret
  3039                                  ; ---------------------------------------------------------------------------
  3040                                  
  3041                                  LCritDevice_3:				; ...
  3042 000051A1 0E                      		push	cs
  3043 000051A2 E8FBFF                  		call	LCritDevice_iret2
  3044 000051A5 C3                      		retn
  3045                                  
  3046                                  ; =============== S U B	R O U T	I N E =======================================
  3047                                  
  3048                                  _$STD_CON_INPUT_NO_ECHO:
  3049 000051A6 1E                      		push	ds
  3050 000051A7 56                      		push	si
  3051                                  
  3052                                  INTEST:					; ...
  3053 000051A8 E8303F                  		call	STATCHK
  3054 000051AB 753B                    		jnz	short GET
  3055 000051AD 36803E[A00A]00          		cmp	byte [ss:PRINTER_FLAG], 0
  3056 000051B3 7505                    		jnz	short no_sys_wait
  3057 000051B5 B405                    		mov	ah, 5
  3058 000051B7 E81E32                  		call	IOFUNC
  3059                                  
  3060                                  no_sys_wait:				; ...
  3061 000051BA B484                    		mov	ah, 84h
  3062 000051BC CD2A                    		int	2Ah		; Microsoft Networks - KEYBOARD	BUSY LOOP
  3063 000051BE 36803E[910D]FF          		cmp	byte [ss:DATE_FLAG], 0FFh ; -1
  3064 000051C4 751B                    		jnz	short NoUpdate
  3065 000051C6 50                      		push	ax
  3066 000051C7 53                      		push	bx
  3067 000051C8 51                      		push	cx
  3068 000051C9 52                      		push	dx
  3069 000051CA 1E                      		push	ds
  3070 000051CB 16                      		push	ss
  3071 000051CC 1F                      		pop	ds
  3072 000051CD B80000                  		mov	ax, 0
  3073 000051D0 E8D202                  		call	Save_Restore_Packet
  3074 000051D3 E815F7                  		call	READTIME
  3075 000051D6 B80100                  		mov	ax, 1
  3076 000051D9 E8C902                  		call	Save_Restore_Packet
  3077 000051DC 1F                      		pop	ds
  3078 000051DD 5A                      		pop	dx
  3079 000051DE 59                      		pop	cx
  3080 000051DF 5B                      		pop	bx
  3081 000051E0 58                      		pop	ax
  3082                                  
  3083                                  NoUpdate:				; ...
  3084 000051E1 36FF06[910D]            		inc	word [ss:DATE_FLAG]
  3085 000051E6 EBC0                    		jmp	short INTEST
  3086                                  ; ---------------------------------------------------------------------------
  3087                                  
  3088                                  GET:					; ...
  3089 000051E8 30E4                    		xor	ah, ah
  3090 000051EA E8EB31                  		call	IOFUNC
  3091 000051ED 5E                      		pop	si
  3092 000051EE 1F                      		pop	ds
  3093 000051EF 36C606[900D]00          		mov	byte [ss:SCAN_FLAG], 0
  3094 000051F5 3C00                    		cmp	al, 0
  3095 000051F7 7506                    		jnz	short noscan
  3096 000051F9 36C606[900D]01          		mov	byte [ss:SCAN_FLAG], 1
  3097                                  
  3098                                  noscan:					; ...
  3099 000051FF C3                      		retn
  3100                                  
  3101                                  ; ---------------------------------------------------------------------------
  3102                                  
  3103                                  _$STD_CON_STRING_OUTPUT:		; ...
  3104 00005200 89D6                    		mov	si, dx
  3105                                  
  3106                                  STRING_OUT1:				; ...
  3107 00005202 AC                      		lodsb
  3108 00005203 3C24                    		cmp	al, '$'
  3109 00005205 74F8                    		jz	short noscan
  3110 00005207 E8CD02                  		call	OUTT
  3111 0000520A EBF6                    		jmp	short STRING_OUT1
  3112                                  
  3113                                  ; =============== S U B	R O U T	I N E =======================================
  3114                                  
  3115                                  _$STD_CON_STRING_INPUT:
  3116                                  
  3117                                  ; FUNCTION CHUNK AT 4813 SIZE 00000019 BYTES
  3118                                  
  3119 0000520C 8CD0                    		mov	ax, ss
  3120 0000520E 8EC0                    		mov	es, ax
  3121 00005210 89D6                    		mov	si, dx
  3122 00005212 30ED                    		xor	ch, ch
  3123 00005214 AD                      		lodsw
  3124 00005215 08C0                    		or	al, al
  3125 00005217 74E6                    		jz	short noscan
  3126 00005219 88E3                    		mov	bl, ah
  3127 0000521B 88EF                    		mov	bh, ch
  3128 0000521D 38D8                    		cmp	al, bl
  3129 0000521F 7605                    		jbe	short NOEDIT
  3130 00005221 80380D                  		cmp	byte [bx+si], 0Dh ;	c_CR
  3131 00005224 7402                    		jz	short EDITON
  3132                                  
  3133                                  NOEDIT:					; ...
  3134 00005226 88EB                    		mov	bl, ch
  3135                                  
  3136                                  EDITON:					; ...
  3137 00005228 88C2                    		mov	dl, al
  3138 0000522A 4A                      		dec	dx
  3139                                  
  3140                                  NEWLIN:					; ...
  3141 0000522B 36A0[F901]              		mov	al, [ss:CARPOS]
  3142 0000522F 36A2[FA01]              		mov	[ss:STARTPOS], al
  3143 00005233 56                      		push	si
  3144 00005234 BF[FB01]                		mov	di, INBUF
  3145 00005237 36882E[7905]            		mov	[ss:INSMODE], ch
  3146 0000523C 88EF                    		mov	bh, ch
  3147 0000523E 88EE                    		mov	dh, ch
  3148 00005240 E863FF                  		call	_$STD_CON_INPUT_NO_ECHO
  3149 00005243 3C0A                    		cmp	al, 0Ah		; c_LF
  3150 00005245 7503                    		jnz	short GOTCH
  3151                                  
  3152                                  GETCH:					; ...
  3153 00005247 E85CFF                  		call	_$STD_CON_INPUT_NO_ECHO
  3154                                  
  3155                                  GOTCH:					; ...
  3156 0000524A 3C06                    		cmp	al, 6		; "F"-"@"
  3157 0000524C 74F9                    		jz	short GETCH
  3158 0000524E 2E3A06[E847]            		cmp	al, [cs:ESCCHAR]
  3159 00005253 7443                    		jz	short ESCAPE
  3160 00005255 3C7F                    		cmp	al, 7Fh		; c_DEL
  3161 00005257 7436                    		jz	short BACKSPJ
  3162 00005259 3C08                    		cmp	al, 8		; c_BS
  3163 0000525B 7432                    		jz	short BACKSPJ
  3164 0000525D 3C17                    		cmp	al, 17h		; W"-"@"
  3165 0000525F 90                      		nop
  3166 00005260 90                      		nop
  3167 00005261 3C15                    		cmp	al, 15h		; "U"-"@"
  3168 00005263 90                      		nop
  3169 00005264 90                      		nop
  3170 00005265 3C0D                    		cmp	al, 0Dh		; c_CR
  3171 00005267 7432                    		jz	short ENDLIN
  3172 00005269 3C0A                    		cmp	al, 0Ah		; c_LF
  3173 0000526B 7444                    		jz	short PHYCRLF
  3174 0000526D 2E3A06[E747]            		cmp	al, [cs:CANCHAR] ; 1Bh
  3175 00005272 746B                    		jz	short KILNEW
  3176                                  
  3177                                  SAVCH:					; ...
  3178 00005274 38D6                    		cmp	dh, dl
  3179 00005276 7319                    		jnb	short BUFFUL
  3180 00005278 AA                      		stosb
  3181 00005279 FEC6                    		inc	dh
  3182 0000527B E8F002                  		call	BUFOUT
  3183 0000527E 36803E[7905]00          		cmp	byte [ss:INSMODE], 0
  3184 00005284 75C1                    		jnz	short GETCH
  3185 00005286 38DF                    		cmp	bh, bl
  3186 00005288 73BD                    		jnb	short GETCH
  3187 0000528A 46                      		inc	si
  3188 0000528B FEC7                    		inc	bh
  3189 0000528D EBB8                    		jmp	short GETCH
  3190                                  ; ---------------------------------------------------------------------------
  3191                                  
  3192                                  BACKSPJ:				; ...
  3193 0000528F EB61                    		jmp	short BACKSP
  3194                                  ; ---------------------------------------------------------------------------
  3195                                  
  3196                                  BUFFUL:					; ...
  3197 00005291 B007                    		mov	al, 7
  3198 00005293 E84102                  		call	OUTT
  3199 00005296 EBAF                    		jmp	short GETCH
  3200                                  ; ---------------------------------------------------------------------------
  3201                                  
  3202                                  ESCAPE:					; ...
  3203 00005298 E978F5                  		jmp	OEMFunctionKey
  3204                                  ; ---------------------------------------------------------------------------
  3205                                  
  3206                                  ENDLIN:					; ...
  3207 0000529B AA                      		stosb
  3208 0000529C E83802                  		call	OUTT
  3209 0000529F 5F                      		pop	di
  3210 000052A0 8875FF                  		mov	[di-1],	dh
  3211 000052A3 FEC6                    		inc	dh
  3212                                  
  3213                                  COPYNEW:				; ...
  3214 000052A5 1E                      		push	ds
  3215 000052A6 06                      		push	es
  3216 000052A7 1F                      		pop	ds
  3217 000052A8 07                      		pop	es
  3218 000052A9 BE[FB01]                		mov	si, INBUF
  3219 000052AC 88F1                    		mov	cl, dh
  3220 000052AE F3A4                    		rep movsb
  3221                                  
  3222                                  OLDBAK_RETN:				; ...
  3223 000052B0 C3                      		retn
  3224                                  ; ---------------------------------------------------------------------------
  3225                                  
  3226                                  PHYCRLF:				; ...
  3227 000052B1 E84A01                  		call	CRLF
  3228 000052B4 EB91                    		jmp	short GETCH
  3229                                  ; ---------------------------------------------------------------------------
  3230                                  
  3231                                  LineDel:				; ...
  3232 000052B6 08F6                    		or	dh, dh
  3233 000052B8 748D                    		jz	short GETCH
  3234 000052BA E83B00                  		call	BackSpace
  3235 000052BD EBF7                    		jmp	short LineDel
  3236                                  ; ---------------------------------------------------------------------------
  3237                                  
  3238                                  WordDel:				; ...
  3239 000052BF E83600                  		call	BackSpace	; WordLoop
  3240 000052C2 08F6                    		or	dh, dh
  3241 000052C4 7416                    		jz	short GetChJ
  3242 000052C6 268A45FF                		mov	al, [es:di-1]
  3243 000052CA 3C30                    		cmp	al, '0'
  3244 000052CC 720E                    		jb	short GetChJ
  3245 000052CE 3C39                    		cmp	al, '9'
  3246 000052D0 76ED                    		jbe	short WordDel
  3247 000052D2 0C20                    		or	al, 20h
  3248 000052D4 3C61                    		cmp	al, 'a'
  3249 000052D6 7204                    		jb	short GetChJ
  3250 000052D8 3C7A                    		cmp	al, 'z'
  3251 000052DA 76E3                    		jbe	short WordDel
  3252                                  
  3253                                  GetChJ:					; ...
  3254 000052DC E968FF                  		jmp	GETCH
  3255                                  ; ---------------------------------------------------------------------------
  3256                                  
  3257                                  KILNEW:					; ...
  3258 000052DF B05C                    		mov	al, '\'
  3259 000052E1 E8F301                  		call	OUTT
  3260 000052E4 5E                      		pop	si
  3261                                  
  3262                                  PUTNEW:					; ...
  3263 000052E5 E81601                  		call	CRLF
  3264 000052E8 36A0[FA01]              		mov	al, [ss:STARTPOS]
  3265 000052EC E85C02                  		call	TAB
  3266 000052EF E939FF                  		jmp	NEWLIN
  3267                                  ; ---------------------------------------------------------------------------
  3268                                  
  3269                                  BACKSP:					; ...
  3270 000052F2 E80300                  		call	BackSpace
  3271 000052F5 E94FFF                  		jmp	GETCH
  3272                                  
  3273                                  ; =============== S U B	R O U T	I N E =======================================
  3274                                  
  3275                                  BackSpace:
  3276 000052F8 08F6                    		or	dh, dh
  3277 000052FA 7419                    		jz	short OLDBAK
  3278 000052FC E85800                  		call	BACKUP
  3279 000052FF 268A05                  		mov	al, [es:di]
  3280 00005302 3C20                    		cmp	al, 20h	; ' '
  3281 00005304 730F                    		jnb	short OLDBAK
  3282 00005306 3C09                    		cmp	al, 9		; c_HT
  3283 00005308 741B                    		jz	short BAKTAB
  3284 0000530A 3C15                    		cmp	al, 15h		; "U"-"@"
  3285 0000530C 7407                    		jz	short OLDBAK
  3286 0000530E 3C14                    		cmp	al, 14h		; "T"-"@"
  3287 00005310 7403                    		jz	short OLDBAK
  3288 00005312 E84500                  		call	BACKMES
  3289                                  
  3290                                  OLDBAK:					; ...
  3291 00005315 36803E[7905]00          		cmp	byte [ss:INSMODE], 0
  3292 0000531B 7593                    		jnz	short OLDBAK_RETN
  3293 0000531D 08FF                    		or	bh, bh
  3294 0000531F 748F                    		jz	short OLDBAK_RETN
  3295 00005321 FECF                    		dec	bh
  3296 00005323 4E                      		dec	si
  3297 00005324 C3                      		retn
  3298                                  ; ---------------------------------------------------------------------------
  3299                                  
  3300                                  BAKTAB:					; ...
  3301 00005325 57                      		push	di
  3302 00005326 4F                      		dec	di
  3303 00005327 FD                      		std
  3304 00005328 88F1                    		mov	cl, dh
  3305 0000532A B020                    		mov	al, 20h	; ' '
  3306 0000532C 53                      		push	bx
  3307 0000532D B307                    		mov	bl, 7
  3308 0000532F E30E                    		jcxz	FIGTAB
  3309                                  
  3310                                  FNDPOS:					; ...
  3311 00005331 AE                      		scasb
  3312 00005332 7609                    		jbe	short CHKCNT
  3313 00005334 26807D0109              		cmp	byte [es:di+1], 9
  3314 00005339 7409                    		jz	short HAVTAB
  3315 0000533B FECB                    		dec	bl
  3316                                  
  3317                                  CHKCNT:					; ...
  3318 0000533D E2F2                    		loop	FNDPOS
  3319                                  
  3320                                  FIGTAB:					; ...
  3321 0000533F 362A1E[FA01]            		sub	bl, [ss:STARTPOS]
  3322                                  
  3323                                  HAVTAB:					; ...
  3324 00005344 28F3                    		sub	bl, dh
  3325 00005346 00D9                    		add	cl, bl
  3326 00005348 80E107                  		and	cl, 7
  3327 0000534B FC                      		cld
  3328 0000534C 5B                      		pop	bx
  3329 0000534D 5F                      		pop	di
  3330 0000534E 74C5                    		jz	short OLDBAK
  3331                                  
  3332                                  TABBAK:					; ...
  3333 00005350 E80700                  		call	BACKMES
  3334 00005353 E2FB                    		loop	TABBAK
  3335 00005355 EBBE                    		jmp	short OLDBAK
  3336                                  
  3337                                  ; ---------------------------------------------------------------------------
  3338                                  
  3339                                  BACKUP:					; ...
  3340 00005357 FECE                    		dec	dh
  3341 00005359 4F                      		dec	di
  3342                                  
  3343                                  BACKMES:				; ...
  3344 0000535A B008                    		mov	al, 8		; c_BS
  3345 0000535C E87801                  		call	OUTT
  3346 0000535F B020                    		mov	al, 20h	; ' '
  3347 00005361 E87301                  		call	OUTT
  3348 00005364 B008                    		mov	al, 8
  3349 00005366 E96E01                  		jmp	OUTT
  3350                                  ; ---------------------------------------------------------------------------
  3351                                  
  3352                                  TWOESC:					; ...
  3353 00005369 2EA0[E847]              		mov	al, [cs:ESCCHAR]
  3354 0000536D E904FF                  		jmp	SAVCH
  3355                                  ; ---------------------------------------------------------------------------
  3356                                  
  3357                                  COPYLIN:				; ...
  3358 00005370 88D9                    		mov	cl, bl
  3359 00005372 28F9                    		sub	cl, bh
  3360 00005374 EB07                    		jmp	short COPYEACH
  3361                                  ; ---------------------------------------------------------------------------
  3362                                  
  3363                                  COPYSTR:				; ...
  3364 00005376 E83400                  		call	FINDOLD
  3365 00005379 EB02                    		jmp	short COPYEACH
  3366                                  ; ---------------------------------------------------------------------------
  3367                                  
  3368                                  COPYONE:				; ...
  3369 0000537B B101                    		mov	cl, 1
  3370                                  
  3371                                  COPYEACH:				; ...
  3372 0000537D 36C606[7905]00          		mov	byte [ss:INSMODE], 0
  3373 00005383 38D6                    		cmp	dh, dl
  3374 00005385 740F                    		jz	short GETCH2
  3375 00005387 38DF                    		cmp	bh, bl
  3376 00005389 740B                    		jz	short GETCH2
  3377 0000538B AC                      		lodsb
  3378 0000538C AA                      		stosb
  3379 0000538D E8DE01                  		call	BUFOUT
  3380 00005390 FEC7                    		inc	bh
  3381 00005392 FEC6                    		inc	dh
  3382 00005394 E2E7                    		loop	COPYEACH
  3383                                  
  3384                                  GETCH2:					; ...
  3385 00005396 E9AEFE                  		jmp	GETCH
  3386                                  ; ---------------------------------------------------------------------------
  3387                                  
  3388                                  SKIPONE:				; ...
  3389 00005399 38DF                    		cmp	bh, bl
  3390 0000539B 74F9                    		jz	short GETCH2
  3391 0000539D FEC7                    		inc	bh
  3392 0000539F 46                      		inc	si
  3393 000053A0 E9A4FE                  		jmp	GETCH
  3394                                  ; ---------------------------------------------------------------------------
  3395                                  
  3396                                  SKIPSTR:				; ...
  3397 000053A3 E80700                  		call	FINDOLD
  3398 000053A6 01CE                    		add	si, cx
  3399 000053A8 00CF                    		add	bh, cl
  3400 000053AA E99AFE                  		jmp	GETCH
  3401                                  ; ---------------------------------------------------------------------------
  3402                                  
  3403                                  FINDOLD:				; ...
  3404 000053AD E8F6FD                  		call	_$STD_CON_INPUT_NO_ECHO
  3405 000053B0 2E3A06[E847]            		cmp	al, [cs:ESCCHAR]
  3406 000053B5 7505                    		jnz	short FINDSETUP
  3407 000053B7 E8ECFD                  		call	_$STD_CON_INPUT_NO_ECHO
  3408 000053BA EB1D                    		jmp	short NOTFND
  3409                                  ; ---------------------------------------------------------------------------
  3410                                  
  3411                                  FINDSETUP:				; ...
  3412 000053BC 88D9                    		mov	cl, bl
  3413 000053BE 28F9                    		sub	cl, bh
  3414 000053C0 7417                    		jz	short NOTFND
  3415 000053C2 49                      		dec	cx
  3416 000053C3 7414                    		jz	short NOTFND
  3417 000053C5 06                      		push	es
  3418 000053C6 1E                      		push	ds
  3419 000053C7 07                      		pop	es
  3420 000053C8 57                      		push	di
  3421 000053C9 89F7                    		mov	di, si
  3422 000053CB 47                      		inc	di
  3423 000053CC F2AE                    		repne scasb
  3424 000053CE 5F                      		pop	di
  3425 000053CF 07                      		pop	es
  3426 000053D0 7507                    		jnz	short NOTFND
  3427 000053D2 F6D1                    		not	cl
  3428 000053D4 00D9                    		add	cl, bl
  3429 000053D6 28F9                    		sub	cl, bh
  3430                                  
  3431                                  ; =============== S U B	R O U T	I N E =======================================
  3432                                  
  3433                                  FINDOLD_RETN:
  3434 000053D8 C3                      		retn
  3435                                  
  3436                                  ; ---------------------------------------------------------------------------
  3437                                  
  3438                                  NOTFND:					; ...
  3439 000053D9 5D                      		pop	bp
  3440 000053DA E96AFE                  		jmp	GETCH
  3441                                  ; ---------------------------------------------------------------------------
  3442                                  
  3443                                  REEDIT:					; ...
  3444 000053DD B040                    		mov	al, '@'
  3445 000053DF E8F500                  		call	OUTT
  3446 000053E2 5F                      		pop	di
  3447 000053E3 57                      		push	di
  3448 000053E4 06                      		push	es
  3449 000053E5 1E                      		push	ds
  3450 000053E6 E8BCFE                  		call	COPYNEW
  3451 000053E9 1F                      		pop	ds
  3452 000053EA 07                      		pop	es
  3453 000053EB 5E                      		pop	si
  3454 000053EC 88F3                    		mov	bl, dh
  3455 000053EE E9F4FE                  		jmp	PUTNEW
  3456                                  ; ---------------------------------------------------------------------------
  3457                                  
  3458                                  EXITINS:				; ...
  3459 000053F1 36F616[7905]            		not	byte [ss:INSMODE] ; ENTERINS
  3460 000053F6 E94EFE                  		jmp	GETCH
  3461                                  ; ---------------------------------------------------------------------------
  3462                                  
  3463                                  CTRLZ:					; ...
  3464 000053F9 B01A                    		mov	al, 1Ah		; "Z"-"@"
  3465 000053FB E976FE                  		jmp	SAVCH
  3466                                  
  3467                                  ; =============== S U B	R O U T	I N E =======================================
  3468                                  
  3469                                  CRLF:		; ...
  3470 000053FE B00D                    		mov	al, 0Dh		; c_CR
  3471 00005400 E8D400                  		call	OUTT
  3472 00005403 B00A                    		mov	al, 0Ah		; c_LF
  3473 00005405 E9CF00                  		jmp	OUTT
  3474                                  
  3475                                  ; =============== S U B	R O U T	I N E =======================================
  3476                                  
  3477                                  _$RAW_CON_IO:	; ...
  3478 00005408 88D0                    		mov	al, dl
  3479 0000540A 3CFF                    		cmp	al, 0FFh
  3480 0000540C 7403                    		jz	short rci1
  3481 0000540E EB43                    		jmp	short RAWOUT
  3482                                  ; ---------------------------------------------------------------------------
  3483 00005410 90                      		nop			; db 90h ; align 2
  3484                                  
  3485                                  rci1:					; ...
  3486 00005411 36C43E[8405]            		les	di, [ss:USER_SP]
  3487 00005416 31DB                    		xor	bx, bx
  3488 00005418 E85421                  		call	GET_IO_SFT
  3489 0000541B 72BB                    		jb	short FINDOLD_RETN
  3490 0000541D B401                    		mov	ah, 1
  3491 0000541F E8B62F                  		call	IOFUNC
  3492 00005422 750B                    		jnz	short RESFLG
  3493 00005424 E8863C                  		call	SPOOLINT
  3494 00005427 26804D1640              		or	byte [es:di+16h], 40h ; [ES:DI+user_env.user_F]
  3495 0000542C 30C0                    		xor	al, al
  3496                                  
  3497                                  RET17:					; ...
  3498 0000542E C3                      		retn
  3499                                  ; ---------------------------------------------------------------------------
  3500                                  
  3501                                  RESFLG:					; ...
  3502 0000542F 26806516BF              		and	byte [es:di+16h], 0BFh
  3503                                  
  3504                                  rci0:					; ...
  3505 00005434 E8763C                  		call	SPOOLINT
  3506                                  
  3507                                  _$RAW_CON_INPUT:			; ...
  3508 00005437 53                      		push	bx
  3509 00005438 31DB                    		xor	bx, bx
  3510 0000543A E83221                  		call	GET_IO_SFT
  3511 0000543D 5B                      		pop	bx
  3512 0000543E 72EE                    		jb	short RET17
  3513 00005440 B401                    		mov	ah, 1
  3514 00005442 E8932F                  		call	IOFUNC
  3515 00005445 7506                    		jnz	short rci5
  3516 00005447 B484                    		mov	ah, 84h
  3517 00005449 CD2A                    		int	2Ah		; Microsoft Networks - KEYBOARD	BUSY LOOP
  3518 0000544B EBE7                    		jmp	short rci0
  3519                                  ; ---------------------------------------------------------------------------
  3520                                  
  3521                                  rci5:					; ...
  3522 0000544D 30E4                    		xor	ah, ah
  3523 0000544F E8862F                  		call	IOFUNC
  3524 00005452 C3                      		retn
  3525                                  
  3526                                  ; =============== S U B	R O U T	I N E =======================================
  3527                                  
  3528                                  RAWOUT:
  3529 00005453 53                      		push	bx
  3530 00005454 BB0100                  		mov	bx, 1
  3531 00005457 E81521                  		call	GET_IO_SFT
  3532 0000545A 721B                    		jb	short RAWRET1
  3533 0000545C 8B5C05                  		mov	bx, [si+5]	; [SI+SF_ENTRY.sf_flags]
  3534 0000545F 81E38080                		and	bx, 8080h	; sf_isnet+devid_device
  3535 00005463 81FB8000                		cmp	bx, 80h
  3536 00005467 7510                    		jnz	short RAWNORM
  3537 00005469 1E                      		push	ds
  3538 0000546A C55C07                  		lds	bx, [si+7]	; [SI+SF_ENTRY.sf_devptr]
  3539 0000546D F6470410                		test	byte [bx+4], 10h ; [BX+SYSDEV.ATT],
  3540                                  					; ISSPEC
  3541 00005471 1F                      		pop	ds
  3542 00005472 7405                    		jz	short RAWNORM
  3543 00005474 CD29                    		int	29h		; DOS 2+ internal - FAST PUTCHAR
  3544                                  					; AL = character to display
  3545                                  
  3546                                  RAWRET:					; ...
  3547 00005476 F8                      		clc
  3548                                  
  3549                                  RAWRET1:				; ...
  3550 00005477 5B                      		pop	bx
  3551                                  
  3552                                  RAWRET2:				; ...
  3553 00005478 C3                      		retn
  3554                                  ; ---------------------------------------------------------------------------
  3555                                  
  3556                                  RAWNORM:				; ...
  3557 00005479 E80700                  		call	RAWOUT3
  3558 0000547C EBF8                    		jmp	short RAWRET
  3559                                  
  3560                                  ; ---------------------------------------------------------------------------
  3561                                  
  3562                                  RAWOUT2:				; ...
  3563 0000547E E8EE20                  		call	GET_IO_SFT
  3564 00005481 72F5                    		jb	short RAWRET2
  3565                                  
  3566                                  ; =============== S U B	R O U T	I N E =======================================
  3567                                  
  3568                                  RAWOUT3:
  3569 00005483 50                      		push	ax
  3570 00005484 EB0D                    		jmp	short RAWOSTRTRAWOSTRT
  3571                                  ; ---------------------------------------------------------------------------
  3572                                  
  3573                                  ROLP:					; ...
  3574 00005486 E8243C                  		call	SPOOLINT
  3575 00005489 36810E[1106]0002        		or	word [ss:DOS34_FLAG], 200h ; CTRL_BREAK_FLAG
  3576 00005490 E8913B                  		call	DSKSTATCHK
  3577                                  
  3578                                  RAWOSTRTRAWOSTRT:			; ...
  3579 00005493 B403                    		mov	ah, 3
  3580 00005495 E8402F                  		call	IOFUNC
  3581 00005498 74EC                    		jz	short ROLP
  3582 0000549A 40                      		inc	ax
  3583 0000549B 58                      		pop	ax
  3584 0000549C 7405                    		jz	short nosend
  3585 0000549E B402                    		mov	ah, 2
  3586 000054A0 E8352F                  		call	IOFUNC
  3587                                  
  3588                                  nosend:					; ...
  3589 000054A3 F8                      		clc
  3590 000054A4 C3                      		retn
  3591                                  
  3592                                  ; =============== S U B	R O U T	I N E =======================================
  3593                                  
  3594                                  Save_Restore_Packet:
  3595 000054A5 1E                      		push	ds
  3596 000054A6 06                      		push	es
  3597 000054A7 56                      		push	si
  3598 000054A8 57                      		push	di
  3599 000054A9 83F800                  		cmp	ax, 0
  3600 000054AC 7408                    		jz	short save_packet
  3601 000054AE BE[6C0D]                		mov	si, FAKE_STACK_2F
  3602 000054B1 BF[5A03]                		mov	di, DEVCALL
  3603 000054B4 EB06                    		jmp	short set_seg
  3604                                  ; ---------------------------------------------------------------------------
  3605                                  
  3606                                  save_packet:				; ...
  3607 000054B6 BF[6C0D]                		mov	di, FAKE_STACK_2F
  3608 000054B9 BE[5A03]                		mov	si, DEVCALL
  3609                                  
  3610                                  set_seg:				; ...
  3611 000054BC 8CD0                    		mov	ax, ss
  3612 000054BE 8ED8                    		mov	ds, ax
  3613 000054C0 8EC0                    		mov	es, ax
  3614 000054C2 B90B00                  		mov	cx, 11
  3615 000054C5 F3A5                    		rep movsw
  3616 000054C7 5F                      		pop	di
  3617 000054C8 5E                      		pop	si
  3618 000054C9 07                      		pop	es
  3619 000054CA 1F                      		pop	ds
  3620 000054CB C3                      		retn
  3621                                  
  3622                                  ; =============== S U B	R O U T	I N E =======================================
  3623                                  
  3624                                  _$STD_CON_INPUT:
  3625 000054CC E8D7FC                  		call	_$STD_CON_INPUT_NO_ECHO
  3626 000054CF 50                      		push	ax
  3627 000054D0 E80400                  		call	OUTT
  3628 000054D3 58                      		pop	ax
  3629                                  
  3630                                  CON_INPUT_RETN:				; ...
  3631 000054D4 C3                      		retn
  3632                                  
  3633                                  ; ---------------------------------------------------------------------------
  3634                                  
  3635                                  _$STD_CON_OUTPUT:			; ...
  3636 000054D5 88D0                    		mov	al, dl
  3637                                  
  3638                                  OUTT:					; ...
  3639 000054D7 3C20                    		cmp	al, 20h	; ' '
  3640 000054D9 725C                    		jb	short CTRLOUT
  3641 000054DB 3C7F                    		cmp	al, 7Fh		; c_DEL	; 127
  3642 000054DD 7405                    		jz	short OUTCH
  3643                                  
  3644                                  OUTCHA:
  3645 000054DF 36FE06[F901]            		inc	byte [ss:CARPOS]
  3646                                  
  3647                                  OUTCH:					; ...
  3648 000054E4 1E                      		push	ds
  3649 000054E5 56                      		push	si
  3650 000054E6 36FE06[0003]            		inc	byte [ss:CHARCO]
  3651 000054EB 368026[0003]3F          		and	byte [ss:CHARCO], 3Fh ; 00111111b
  3652 000054F1 7505                    		jnz	short OUTSKIP
  3653 000054F3 50                      		push	ax
  3654 000054F4 E8E43B                  		call	STATCHK
  3655 000054F7 58                      		pop	ax
  3656                                  
  3657                                  OUTSKIP:				; ...
  3658 000054F8 E858FF                  		call	RAWOUT
  3659 000054FB 5E                      		pop	si
  3660 000054FC 1F                      		pop	ds
  3661 000054FD 36F606[FE02]FF          		test	byte [ss:PFLAG], 0FFh ; -1
  3662 00005503 74CF                    		jz	short CON_INPUT_RETN
  3663 00005505 53                      		push	bx
  3664 00005506 1E                      		push	ds
  3665 00005507 56                      		push	si
  3666 00005508 BB0100                  		mov	bx, 1
  3667 0000550B E86120                  		call	GET_IO_SFT
  3668 0000550E 7221                    		jb	short TRIPOPJ
  3669 00005510 8B5C05                  		mov	bx, [si+5]	; [SI+SF_ENTRY.sf_flags]
  3670 00005513 F6C780                  		test	bh, 80h		; (sf_isnet>>8)
  3671 00005516 7519                    		jnz	short TRIPOPJ
  3672 00005518 F6C380                  		test	bl, 80h		; devid_device
  3673 0000551B 7414                    		jz	short TRIPOPJ
  3674 0000551D BB0400                  		mov	bx, 4
  3675 00005520 E84C20                  		call	GET_IO_SFT
  3676 00005523 720C                    		jb	short TRIPOPJ
  3677 00005525 F6440608                		test	byte [si+6], 8 ; [SI+SF_ENTRY.sf_flags+1],
  3678                                  					; (sf_net_spool>>8)
  3679 00005529 7409                    		jz	short LISSTRT2J
  3680 0000552B 36C606[FE02]00          		mov	byte [ss:PFLAG], 0
  3681                                  
  3682                                  TRIPOPJ:				; ...
  3683 00005531 E98A00                  		jmp	TRIPOP
  3684                                  ; ---------------------------------------------------------------------------
  3685                                  
  3686                                  LISSTRT2J:				; ...
  3687 00005534 E98400                  		jmp	LISSTRT2
  3688                                  ; ---------------------------------------------------------------------------
  3689                                  
  3690                                  CTRLOUT:				; ...
  3691 00005537 3C0D                    		cmp	al, 0Dh		; c_CR
  3692 00005539 7420                    		jz	short ZERPOS
  3693 0000553B 3C08                    		cmp	al, 8		; c_BS
  3694 0000553D 7427                    		jz	short BACKPOS
  3695 0000553F 3C09                    		cmp	al, 9		; c_HT
  3696 00005541 75A1                    		jnz	short OUTCH
  3697 00005543 36A0[F901]              		mov	al, [ss:CARPOS]
  3698 00005547 0CF8                    		or	al, 0F8h
  3699 00005549 F6D8                    		neg	al
  3700                                  
  3701                                  TAB:					; ...
  3702 0000554B 51                      		push	cx
  3703 0000554C 88C1                    		mov	cl, al
  3704 0000554E B500                    		mov	ch, 0
  3705 00005550 E307                    		jcxz	POPTAB
  3706                                  
  3707                                  TABLP:					; ...
  3708 00005552 B020                    		mov	al, 20h	; ' '
  3709 00005554 E880FF                  		call	OUTT
  3710 00005557 E2F9                    		loop	TABLP
  3711                                  
  3712                                  POPTAB:					; ...
  3713 00005559 59                      		pop	cx
  3714 0000555A C3                      		retn
  3715                                  ; ---------------------------------------------------------------------------
  3716                                  
  3717                                  ZERPOS:					; ...
  3718 0000555B 36C606[F901]00          		mov	byte [ss:CARPOS], 0
  3719 00005561 EB81                    		jmp	short OUTCH
  3720                                  ; ---------------------------------------------------------------------------
  3721                                  
  3722                                  OUTJ:					; ...
  3723 00005563 E971FF                  		jmp	OUTT
  3724                                  ; ---------------------------------------------------------------------------
  3725                                  
  3726                                  BACKPOS:				; ...
  3727 00005566 36FE0E[F901]            		dec	byte [ss:CARPOS]
  3728 0000556B E976FF                  		jmp	OUTCH
  3729                                  
  3730                                  ; =============== S U B	R O U T	I N E =======================================
  3731                                  
  3732                                  
  3733                                   BUFOUT:		; ...
  3734 0000556E 3C20                    		cmp	al, 20h	; ' '
  3735 00005570 73F1                    		jnb	short OUTJ
  3736 00005572 3C09                    		cmp	al, 9
  3737 00005574 74ED                    		jz	short OUTJ
  3738 00005576 3C15                    		cmp	al, 15h		; "U"-"@"
  3739 00005578 740D                    		jz	short CTRLU
  3740 0000557A 3C14                    		cmp	al, 14h		; "T"-"@"
  3741 0000557C 7409                    		jz	short CTRLU
  3742                                  
  3743                                  NOT_CTRLU:
  3744 0000557E 50                      		push	ax
  3745 0000557F B05E                    		mov	al, '^'
  3746 00005581 E853FF                  		call	OUTT
  3747 00005584 58                      		pop	ax
  3748 00005585 0C40                    		or	al, 40h
  3749                                  
  3750                                  CTRLU:					; ...
  3751 00005587 E84DFF                  		call	OUTT
  3752                                  
  3753                                  BUFOUT_RETN:				; ...
  3754 0000558A C3                      		retn
  3755                                  
  3756                                  ; ---------------------------------------------------------------------------
  3757                                  
  3758                                  _$STD_AUX_INPUT:			; ...
  3759 0000558B E84D3B                  		call	STATCHK
  3760 0000558E BB0300                  		mov	bx, 3
  3761 00005591 E8DB1F                  		call	GET_IO_SFT
  3762 00005594 72F4                    		jb	short BUFOUT_RETN
  3763 00005596 EB03                    		jmp	short TAISTRT
  3764                                  ; ---------------------------------------------------------------------------
  3765                                  
  3766                                  AUXILP:					; ...
  3767 00005598 E8123B                  		call	SPOOLINT
  3768                                  
  3769                                  TAISTRT:				; ...
  3770 0000559B B401                    		mov	ah, 1
  3771 0000559D E8382E                  		call	IOFUNC
  3772 000055A0 74F6                    		jz	short AUXILP
  3773 000055A2 30E4                    		xor	ah, ah
  3774 000055A4 E8312E                  		call	IOFUNC
  3775 000055A7 C3                      		retn
  3776                                  ; ---------------------------------------------------------------------------
  3777                                  
  3778                                  _$STD_AUX_OUTPUT:			; ...
  3779 000055A8 53                      		push	bx
  3780 000055A9 BB0300                  		mov	bx, 3
  3781 000055AC EB04                    		jmp	short SENDOUT
  3782                                  ; ---------------------------------------------------------------------------
  3783                                  
  3784                                  _$STD_PRINTER_OUTPUT:			; ...
  3785 000055AE 53                      		push	bx
  3786 000055AF BB0400                  		mov	bx, 4
  3787                                  
  3788                                  SENDOUT:				; ...
  3789 000055B2 88D0                    		mov	al, dl
  3790 000055B4 50                      		push	ax
  3791 000055B5 E8233B                  		call	STATCHK
  3792 000055B8 58                      		pop	ax
  3793 000055B9 1E                      		push	ds
  3794 000055BA 56                      		push	si
  3795                                  
  3796                                  LISSTRT2:				; ...
  3797 000055BB E8C0FE                  		call	RAWOUT2
  3798                                  
  3799                                  TRIPOP:					; ...
  3800 000055BE 5E                      		pop	si
  3801 000055BF 1F                      		pop	ds
  3802 000055C0 5B                      		pop	bx
  3803                                  
  3804                                  SCIS_RETN:				; ...
  3805 000055C1 C3                      		retn
  3806                                  ; ---------------------------------------------------------------------------
  3807                                  
  3808                                  _$STD_CON_INPUT_STATUS:			; ...
  3809 000055C2 E8163B                  		call	STATCHK
  3810 000055C5 B000                    		mov	al, 0
  3811 000055C7 74F8                    		jz	short SCIS_RETN
  3812 000055C9 0CFF                    		or	al, 0FFh	; -1
  3813 000055CB C3                      		retn
  3814                                  ; ---------------------------------------------------------------------------
  3815                                  
  3816                                  _$STD_CON_INPUT_FLUSH:			; ...
  3817 000055CC 50                      		push	ax
  3818 000055CD 52                      		push	dx
  3819 000055CE 31DB                    		xor	bx, bx
  3820 000055D0 E89C1F                  		call	GET_IO_SFT
  3821 000055D3 7205                    		jb	short BADJFNCON
  3822 000055D5 B404                    		mov	ah, 4
  3823 000055D7 E8FE2D                  		call	IOFUNC
  3824                                  
  3825                                  BADJFNCON:				; ...
  3826 000055DA 5A                      		pop	dx
  3827 000055DB 58                      		pop	ax
  3828 000055DC 88C4                    		mov	ah, al
  3829 000055DE 3C01                    		cmp	al, 1
  3830 000055E0 7413                    		jz	short REDISPJ
  3831 000055E2 3C06                    		cmp	al, 6
  3832 000055E4 740F                    		jz	short REDISPJ
  3833 000055E6 3C07                    		cmp	al, 7
  3834 000055E8 740B                    		jz	short REDISPJ
  3835 000055EA 3C08                    		cmp	al, 8
  3836 000055EC 7407                    		jz	short REDISPJ
  3837 000055EE 3C0A                    		cmp	al, 10
  3838 000055F0 7403                    		jz	short REDISPJ
  3839 000055F2 B000                    		mov	al, 0
  3840 000055F4 C3                      		retn
  3841                                  ; ---------------------------------------------------------------------------
  3842                                  
  3843                                  REDISPJ:				; ...
  3844 000055F5 FA                      		cli
  3845 000055F6 E96AEB                  		jmp	REDISP
  3846                                  ; ---------------------------------------------------------------------------
  3847                                  
  3848                                  _$GET_FCB_POSITION:			; ...
  3849 000055F9 E80005                  		call	GetExtended
  3850 000055FC E8D004                  		call	GetExtent
  3851 000055FF 894421                  		mov	[si+21h], ax	; [SI+SYS_FCB.RR]
  3852 00005602 885423                  		mov	[si+23h], dl	; [SI+SYS_FCB.RR+2]
  3853 00005605 837C0E40                		cmp	word [si+0Eh], 64 ;	[SI+SYS_FCB.RECSIZ]
  3854 00005609 7303                    		jnb	short GetFCBBye
  3855 0000560B 887424                  		mov	[si+24h], dh	; [SI+SYS_FCB.RR+2+1]
  3856                                  
  3857                                  GetFCBBye:				; ...
  3858 0000560E E9EFED                  		jmp	NO_OP
  3859                                  ; ---------------------------------------------------------------------------
  3860                                  
  3861                                  _$FCB_DELETE:				; ...
  3862 00005611 BF[BE03]                		mov	di, OPENBUF
  3863 00005614 E8C054                  		call	TransFCB
  3864 00005617 7209                    		jb	short BadPath
  3865 00005619 16                      		push	ss
  3866 0000561A 1F                      		pop	ds
  3867 0000561B E8CB0D                  		call	DOS_DELETE
  3868 0000561E 7202                    		jb	short BadPath
  3869                                  
  3870                                  GoodPath:				; ...
  3871 00005620 EBEC                    		jmp	short GetFCBBye
  3872                                  ; ---------------------------------------------------------------------------
  3873                                  
  3874                                  BadPath:				; ...
  3875 00005622 E9DEED                  		jmp	FCB_RET_ER
  3876                                  ; ---------------------------------------------------------------------------
  3877                                  
  3878                                  _$GET_FCB_FILE_LENGTH:			; ...
  3879 00005625 E8D404                  		call	GetExtended
  3880 00005628 BF[BE03]                		mov	di, OPENBUF
  3881 0000562B 1E                      		push	ds
  3882 0000562C 56                      		push	si
  3883 0000562D E8A754                  		call	TransFCB
  3884 00005630 5E                      		pop	si
  3885 00005631 1F                      		pop	ds
  3886 00005632 72EE                    		jb	short BadPath
  3887 00005634 1E                      		push	ds
  3888 00005635 56                      		push	si
  3889 00005636 16                      		push	ss
  3890 00005637 1F                      		pop	ds
  3891 00005638 E8CB11                  		call	GET_FILE_INFO
  3892 0000563B 5E                      		pop	si
  3893 0000563C 1F                      		pop	ds
  3894 0000563D 72E3                    		jb	short BadPath
  3895 0000563F 89DA                    		mov	dx, bx
  3896 00005641 89F8                    		mov	ax, di
  3897 00005643 8B5C0E                  		mov	bx, [si+0Eh]	; [SI+SYS_FCB.RECSIZ]
  3898 00005646 09DB                    		or	bx, bx
  3899 00005648 7503                    		jnz	short GetSize
  3900 0000564A BB8000                  		mov	bx, 128
  3901                                  
  3902                                  GetSize:				; ...
  3903 0000564D 89C7                    		mov	di, ax
  3904 0000564F 89D0                    		mov	ax, dx
  3905 00005651 31D2                    		xor	dx, dx
  3906 00005653 F7F3                    		div	bx
  3907 00005655 50                      		push	ax
  3908 00005656 89F8                    		mov	ax, di
  3909 00005658 F7F3                    		div	bx
  3910 0000565A 89D1                    		mov	cx, dx
  3911 0000565C 5A                      		pop	dx
  3912 0000565D E306                    		jcxz	LengthStore
  3913 0000565F 83C001                  		add	ax, 1
  3914 00005662 83D200                  		adc	dx, 0
  3915                                  
  3916                                  LengthStore:				; ...
  3917 00005665 894421                  		mov	[si+21h], ax	; [SI+SYS_FCB.RR]
  3918 00005668 885423                  		mov	[si+23h], dl	; [SI+SYS_FCB.RR+2]
  3919 0000566B 08F6                    		or	dh, dh
  3920 0000566D 74B1                    		jz	short GoodPath
  3921 0000566F 887424                  		mov	[si+24h], dh	; [SI+SYS_FCB.RR+3]
  3922                                  
  3923                                  GoodRet:				; ...
  3924 00005672 EBAC                    		jmp	short GoodPath
  3925                                  ; ---------------------------------------------------------------------------
  3926                                  
  3927                                  _$FCB_CLOSE:				; ...
  3928 00005674 30C0                    		xor	al, al
  3929 00005676 E88304                  		call	GetExtended
  3930 00005679 7403                    		jz	short NoAttr
  3931 0000567B 8A44FF                  		mov	al, [si-1]
  3932                                  
  3933                                  NoAttr:					; ...
  3934 0000567E 36A2[6B05]              		mov	[ss:ATTRIB], al
  3935 00005682 E8E503                  		call	SFTFromFCB
  3936 00005685 72EB                    		jb	short GoodRet
  3937 00005687 268A4504                		mov	al, [es:di+4]	; [ES:DI+SF_ENTRY.sf_attr]
  3938 0000568B 30E4                    		xor	ah, ah
  3939 0000568D 50                      		push	ax
  3940 0000568E E88A5C                  		call	CheckShare
  3941 00005691 7508                    		jnz	short NoStash
  3942 00005693 36A0[6B05]              		mov	al, [ss:ATTRIB]
  3943 00005697 26884504                		mov	[es:di+4], al	; [ES:DI+SF_ENTRY.sf_attr]
  3944                                  
  3945                                  NoStash:				; ...
  3946 0000569B 8B4414                  		mov	ax, [si+14h]	; [SI+SYS_FCB.FDATE]
  3947 0000569E 2689450F                		mov	[es:di+0Fh], ax	; [ES:DI+SF_ENTRY.sf_date]
  3948 000056A2 8B4416                  		mov	ax, [si+16h]	; [SI+SYS_FCB.FTIME]
  3949 000056A5 2689450D                		mov	[es:di+0Dh], ax	; [ES:DI+SF_ENTRY.sf_time]
  3950 000056A9 8B4410                  		mov	ax, [si+10h]	; [SI+SYS_FCB.FILSIZ]
  3951 000056AC 26894511                		mov	[es:di+11h], ax	; [ES:DI+SF_ENTRY.sf_size]
  3952 000056B0 8B4412                  		mov	ax, [si+12h]	; [SI+SYS_FCB.FILSIZ+2]
  3953 000056B3 26894513                		mov	[es:di+13h], ax	; [ES:DI+SF_ENTRY.sf_size+2]
  3954 000056B7 26814D050040            		or	word [es:di+5], 4000h ; [ES:DI+SF_ENTRY.sf_flags],
  3955                                  					; sf_close_nodate
  3956 000056BD 16                      		push	ss
  3957 000056BE 1F                      		pop	ds
  3958 000056BF E85817                  		call	DOS_CLOSE
  3959 000056C2 C43E[9E05]              		les	di, [THISSFT]
  3960 000056C6 59                      		pop	cx
  3961 000056C7 26884D04                		mov	[es:di+4], cl	; [ES:DI+SF_ENTRY.sf_attr]
  3962 000056CB 9C                      		pushf
  3963 000056CC 26833D00                		cmp	word [es:di], 0 ; [ES:DI+SF_ENTRY.sf_ref_count]
  3964 000056D0 7507                    		jnz	short CloseOK
  3965 000056D2 50                      		push	ax
  3966 000056D3 B04D                    		mov	al, 'M'         ; 4Dh
  3967 000056D5 E80203                  		call	BlastSFT
  3968 000056D8 58                      		pop	ax
  3969                                  
  3970                                  CloseOK:				; ...
  3971 000056D9 9D                      		popf
  3972 000056DA 7396                    		jnb	short GoodRet
  3973 000056DC 3C06                    		cmp	al, 6		; error_invalid_handle
  3974 000056DE 7492                    		jz	short GoodRet
  3975 000056E0 B002                    		mov	al, 2		; error_file_not_found
  3976                                  
  3977                                  fcb_close_err:				; ...
  3978 000056E2 E91EED                  		jmp	FCB_RET_ER
  3979                                  ; ---------------------------------------------------------------------------
  3980                                  
  3981                                  _$FCB_RENAME:				; ...
  3982 000056E5 E81404                  		call	GetExtended
  3983 000056E8 52                      		push	dx
  3984 000056E9 8A04                    		mov	al, [si]
  3985 000056EB 83C610                  		add	si, 10h
  3986 000056EE BF[3E04]                		mov	di, RENBUF
  3987 000056F1 FF34                    		push	word [si]
  3988 000056F3 1E                      		push	ds
  3989 000056F4 56                      		push	si
  3990 000056F5 8804                    		mov	[si], al
  3991 000056F7 89F2                    		mov	dx, si
  3992 000056F9 E8DB53                  		call	TransFCB
  3993 000056FC 5E                      		pop	si
  3994 000056FD 1F                      		pop	ds
  3995 000056FE 8F04                    		pop	word [si]
  3996 00005700 5A                      		pop	dx
  3997 00005701 721A                    		jb	short fren90
  3998 00005703 368B36[B205]            		mov	si, [ss:WFP_START]
  3999 00005708 368936[B405]            		mov	[ss:REN_WFP], si
  4000 0000570D BF[BE03]                		mov	di, OPENBUF
  4001 00005710 E8C453                  		call	TransFCB
  4002 00005713 7208                    		jb	short fren90
  4003 00005715 E8B10E                  		call	DOS_RENAME
  4004 00005718 7203                    		jb	short fren90
  4005 0000571A E9E3EC                  		jmp	NO_OP		; FCB_RET_OK
  4006                                  ; ---------------------------------------------------------------------------
  4007                                  
  4008                                  fren90:					; ...
  4009 0000571D EBC3                    		jmp	short fcb_close_err
  4010                                  
  4011                                  ; =============== S U B	R O U T	I N E =======================================
  4012                                  
  4013                                  SaveFCBInfo:
  4014 0000571F 36C43E[9E05]            		les	di, [ss:THISSFT]
  4015 00005724 E853F9                  		call	IsSFTNet
  4016 00005727 740B                    		jz	short SaveLocal
  4017 00005729 268B450B                		mov	ax, [es:di+0Bh]	; [ES:DI+sf_serial_ID]
  4018 0000572D 89441C                  		mov	[si+1Ch], ax	; [SI+fcb_netID]
  4019 00005730 B380                    		mov	bl, 80h		; FCBNETWORK
  4020 00005732 EB67                    		jmp	short SaveSFN
  4021                                  ; ---------------------------------------------------------------------------
  4022                                  
  4023                                  SaveLocal:				; ...
  4024 00005734 E8E45B                  		call	CheckShare
  4025 00005737 7402                    		jz	short SaveNoShare
  4026 00005739 EB5B                    		jmp	short SaveShare
  4027                                  ; ---------------------------------------------------------------------------
  4028                                  
  4029                                  SaveNoShare:				; ...
  4030 0000573B 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  4031                                  					; devid_device
  4032 00005740 7542                    		jnz	short SaveNoShareDev
  4033 00005742 268B451B                		mov	ax, [es:di+1Bh]	; [ES:DI+SF_ENTRY.sf_dirsec]
  4034 00005746 89441D                  		mov	[si+1Dh], ax	; [SI+fcb_nsl_dirsec]
  4035 00005749 268B451D                		mov	ax, [es:di+1Dh]	; [es:di+SF_ENTRY.sf_dirsec+2]
  4036 0000574D 268A5D04                		mov	bl, [es:di+4]	; [es:di+SF_ENTRY.sf_attr]
  4037 00005751 88DF                    		mov	bh, bl
  4038 00005753 D0CB                    		ror	bl, 1
  4039 00005755 D0E7                    		shl	bh, 1
  4040 00005757 08FB                    		or	bl, bh
  4041 00005759 80E3C0                  		and	bl, 0C0h
  4042 0000575C 08D8                    		or	al, bl
  4043 0000575E 884418                  		mov	[si+18h], al	; [si+fcb_sfn]
  4044 00005761 268A451F                		mov	al, [es:di+1Fh]	; [ES:DI+SF_ENTRY.sf_dirpos]
  4045 00005765 88441F                  		mov	[si+1Fh], al	; [SI+fcb_nsl_dirpos]
  4046 00005768 268B450B                		mov	ax, [es:di+0Bh]	; [ES:DI+SF_ENTRY.sf_firclus]
  4047 0000576C 89441B                  		mov	[si+1Bh], ax	; [SI+fcb_nsl_firclus]
  4048 0000576F B300                    		mov	bl, 0
  4049                                  
  4050                                  SetFCBBits:				; ...
  4051 00005771 268B4505                		mov	ax, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  4052 00005775 24C0                    		and	al, 0C0h
  4053 00005777 260A4502                		or	al, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  4054 0000577B 88441A                  		mov	[si+1Ah], al	; [SI+fcb_nsl_bits]
  4055 0000577E 08DB                    		or	bl, bl
  4056 00005780 742A                    		jz	short SaveNoSFN
  4057 00005782 EB17                    		jmp	short SaveSFN
  4058                                  ; ---------------------------------------------------------------------------
  4059                                  
  4060                                  SaveNoShareDev:				; ...
  4061 00005784 268B4507                		mov	ax, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  4062 00005788 89441A                  		mov	[si+1Ah], ax	; [SI+fcb_nsld_drvptr]
  4063 0000578B 268B4509                		mov	ax, [es:di+9]	; [ES:DI+SF_ENTRY.sf_devptr+2]
  4064 0000578F 89441C                  		mov	[si+1Ch], ax	; [SI+fcb_nsld_drvptr+2]
  4065 00005792 B340                    		mov	bl, 40h		; FCBDEVICE
  4066 00005794 EBDB                    		jmp	short SetFCBBits
  4067                                  ; ---------------------------------------------------------------------------
  4068                                  
  4069                                  SaveShare:				; ...
  4070                                  		;call	dword [ss:ShSave] ; Call far [ss:JShare+(10*4)]
  4071 00005796 36FF1E[B800]            		call	far [ss:JShare+(10*4)]
  4072                                  SaveSFN:				; ...
  4073 0000579B 8D45FA                  		lea	ax, [di-6]	; [DI-SFT.SFTable]
  4074 0000579E 362B06[4000]            		sub	ax, word [ss:SFTFCB]
  4075 000057A3 53                      		push	bx
  4076 000057A4 B33B                    		mov	bl, 59		; SF_ENTRY.size
  4077 000057A6 F6F3                    		div	bl
  4078 000057A8 884418                  		mov	[si+18h], al	; [SI+fcb_sfn]
  4079 000057AB 5B                      		pop	bx
  4080                                  
  4081                                  SaveNoSFN:				; ...
  4082 000057AC 268B4505                		mov	ax, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  4083 000057B0 243F                    		and	al, 3Fh
  4084 000057B2 08D8                    		or	al, bl
  4085 000057B4 884419                  		mov	[si+19h], al	; [SI+fcb_l_drive]
  4086 000057B7 36A1[1000]              		mov	ax, [ss:FCBLRU]
  4087 000057BB 40                      		inc	ax
  4088 000057BC 26894515                		mov	[es:di+15h], ax	; [ES:DI+sf_LRU]
  4089 000057C0 7506                    		jnz	short SimpleStuff
  4090 000057C2 BB1500                  		mov	bx, 15h		; SF_ENTRY.sf_position
  4091 000057C5 E80500                  		call	ResetLRU
  4092                                  
  4093                                  SimpleStuff:				; ...
  4094 000057C8 36A3[1000]              		mov	[ss:FCBLRU], ax
  4095 000057CC C3                      		retn
  4096                                  
  4097                                  ; =============== S U B	R O U T	I N E =======================================
  4098                                  
  4099                                  ResetLRU:		; ...
  4100 000057CD B80080                  		mov	ax, 8000h
  4101 000057D0 06                      		push	es
  4102 000057D1 57                      		push	di
  4103 000057D2 36C43E[4000]            		les	di, [ss:SFTFCB]
  4104 000057D7 268B4D04                		mov	cx, [es:di+4]	; [ES:DI+SFT.SFCount]
  4105 000057DB 8D7D06                  		lea	di, [di+6]	; [DI+SFT.SFTable]
  4106                                  
  4107                                  ovScan:					; ...
  4108 000057DE 262901                  		sub	[es:bx+di], ax
  4109 000057E1 7703                    		ja	short ovLoop
  4110 000057E3 268901                  		mov	[es:bx+di], ax
  4111                                  
  4112                                  ovLoop:					; ...
  4113 000057E6 83C73B                  		add	di, 59		; SF_ENTRY.size
  4114 000057E9 E2F3                    		loop	ovScan
  4115 000057EB 5F                      		pop	di
  4116 000057EC 07                      		pop	es
  4117 000057ED 268901                  		mov	[es:bx+di], ax
  4118 000057F0 C3                      		retn
  4119                                  
  4120                                  ; =============== S U B	R O U T	I N E =======================================
  4121                                  
  4122                                  LRUFCB:		; ...
  4123 000057F1 06                      		push	es
  4124 000057F2 E861EA                  		call	save_world
  4125 000057F5 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  4126 000057FA 08C0                    		or	al, al
  4127 000057FC 751A                    		jnz	short lru1
  4128 000057FE 8B3E[5D10]              		mov	di, word [LocalSFT]
  4129 00005802 0B3E[5F10]              		or	di, word [LocalSFT+2]
  4130 00005806 7410                    		jz	short lru1
  4131 00005808 C43E[5D10]              		les	di, [LocalSFT]
  4132                                  
  4133                                  gotlocalSFT:				; ...
  4134 0000580C 893E[9E05]              		mov	word [THISSFT], di
  4135 00005810 8C06[A005]              		mov	word [THISSFT+2], es
  4136 00005814 F8                      		clc
  4137 00005815 E9AE00                  		jmp	LRUDone
  4138                                  ; ---------------------------------------------------------------------------
  4139                                  
  4140                                  lru1:					; ...
  4141 00005818 C43E[4000]              		les	di, [SFTFCB]
  4142 0000581C 268B4D04                		mov	cx, [es:di+4]	; [es:di+SFT.SFCount]
  4143 00005820 8D7D06                  		lea	di, [di+6]	; [di+SFT.SFTable]
  4144 00005823 BBFFFF                  		mov	bx, 0FFFFh	; -1
  4145 00005826 89DE                    		mov	si, bx
  4146 00005828 89DA                    		mov	dx, bx
  4147 0000582A 89DD                    		mov	bp, bx
  4148                                  
  4149                                  findSFT:				; ...
  4150 0000582C 26830D00                		or	word [es:di], 0 ; [es:di+SF_ENTRY.sf_ref_count]
  4151 00005830 744E                    		jz	short gotSFT
  4152 00005832 26833DFF                		cmp	word [es:di], 0FFFFh ; [es:di+SF_ENTRY.sf_ref_count],
  4153                                  					; sf_busy
  4154 00005836 7448                    		jz	short gotSFT
  4155 00005838 26F745050080            		test	word [es:di+5], 8000h ; [ES:DI+SF_ENTRY.sf_flags],
  4156                                  					; sf_isnet
  4157 0000583E 7532                    		jnz	short lru5
  4158 00005840 E8D85A                  		call	CheckShare
  4159 00005843 752D                    		jnz	short lru5
  4160                                  
  4161                                  hackpoint:				; ...
  4162 00005845 893E[5D10]              		mov	word [LocalSFT],	di
  4163 00005849 8C06[5F10]              		mov	word [LocalSFT+2], es
  4164 0000584D 08C0                    		or	al, al
  4165 0000584F 74BB                    		jz	short gotlocalSFT
  4166 00005851 26395D15                		cmp	[es:di+15h], bx	; [es:di+sf_LRU]
  4167 00005855 7306                    		jnb	short lru4
  4168 00005857 268B5D15                		mov	bx, [es:di+15h]	; [es:di+sf_LRU]
  4169 0000585B 89FE                    		mov	si, di
  4170                                  
  4171                                  lru4:					; ...
  4172 0000585D 83C73B                  		add	di, 59		; SF_ENTRY.size
  4173 00005860 E2CA                    		loop	findSFT
  4174 00005862 89F7                    		mov	di, si
  4175 00005864 83FEFF                  		cmp	si, -1
  4176 00005867 7517                    		jnz	short gotSFT
  4177 00005869 89EF                    		mov	di, bp
  4178 0000586B 83FDFF                  		cmp	bp, -1
  4179 0000586E 7530                    		jnz	short gotnetSFT
  4180                                  
  4181                                  noSFT:
  4182 00005870 EB51                    		jmp	short errorbadSFT
  4183                                  ; ---------------------------------------------------------------------------
  4184                                  
  4185                                  lru5:					; ...
  4186 00005872 26395515                		cmp	[es:di+15h], dx	; [es:di+sf_LRU]
  4187 00005876 73E5                    		jnb	short lru4
  4188 00005878 268B5515                		mov	dx, [es:di+15h]	; [es:di+sf_LRU]
  4189 0000587C 89FD                    		mov	bp, di
  4190 0000587E EBDD                    		jmp	short lru4
  4191                                  ; ---------------------------------------------------------------------------
  4192                                  
  4193                                  gotSFT:					; ...
  4194 00005880 08C0                    		or	al, al
  4195 00005882 74C1                    		jz	short hackpoint
  4196 00005884 8CC0                    		mov	ax, es
  4197 00005886 393E[5D10]              		cmp	word [LocalSFT],	di
  4198 0000588A 7506                    		jnz	short notinvalid
  4199 0000588C 3906[5F10]              		cmp	word [LocalSFT+2], ax
  4200 00005890 7403                    		jz	short zerolocalSFT
  4201                                  
  4202                                  notinvalid:				; ...
  4203 00005892 E977FF                  		jmp	gotlocalSFT
  4204                                  ; ---------------------------------------------------------------------------
  4205                                  
  4206                                  zerolocalSFT:				; ...
  4207 00005895 31C0                    		xor	ax, ax
  4208 00005897 A3[5D10]                		mov	word [LocalSFT],	ax
  4209 0000589A A3[5F10]                		mov	word [LocalSFT+2], ax
  4210 0000589D E96CFF                  		jmp	gotlocalSFT
  4211                                  ; ---------------------------------------------------------------------------
  4212                                  
  4213                                  gotnetSFT:				; ...
  4214 000058A0 08C0                    		or	al, al
  4215 000058A2 7508                    		jnz	short closenet
  4216 000058A4 893E[5D10]              		mov	word [LocalSFT],	di
  4217 000058A8 8C06[5F10]              		mov	word [LocalSFT+2], es
  4218                                  
  4219                                  closenet:				; ...
  4220 000058AC 893E[9E05]              		mov	word [THISSFT], di
  4221 000058B0 8C06[A005]              		mov	word [THISSFT+2], es
  4222                                  
  4223                                  LRUClose:				; ...
  4224 000058B4 26833D00                		cmp	word [es:di], 0 ; [es:di+SF_ENTRY.sf_ref_count]
  4225 000058B8 740C                    		jz	short LRUDone
  4226 000058BA E85D15                  		call	DOS_CLOSE
  4227 000058BD 73F5                    		jnb	short LRUClose
  4228 000058BF 3C06                    		cmp	al, 6
  4229 000058C1 74F1                    		jz	short LRUClose
  4230                                  
  4231                                  errorbadSFT:				; ...
  4232 000058C3 F9                      		stc
  4233 000058C4 EB05                    		jmp	short LRUDead
  4234                                  ; ---------------------------------------------------------------------------
  4235                                  
  4236                                  LRUDone:				; ...
  4237 000058C6 30C0                    		xor	al, al
  4238 000058C8 E80F01                  		call	BlastSFT
  4239                                  
  4240                                  LRUDead:				; ...
  4241 000058CB E871E9                  		call	restore_world
  4242 000058CE 07                      		pop	es
  4243 000058CF 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
  4244 000058D4 26C43E[9E05]            		les	di, [es:THISSFT]
  4245 000058D9 7201                    		jb	short LruFCB_err
  4246 000058DB C3                      		retn
  4247                                  ; ---------------------------------------------------------------------------
  4248                                  
  4249                                  LruFCB_err:				; ...
  4250 000058DC B023                    		mov	al, 23h		; error_FCB_unavailable
  4251 000058DE C3                      		retn
  4252                                  
  4253                                  ; =============== S U B	R O U T	I N E =======================================
  4254                                  
  4255                                  RegenCopyName:	; ...
  4256 000058DF AC                      		lodsb
  4257 000058E0 E8D336                  		call	UCase
  4258                                  
  4259                                  StuffChar2:
  4260 000058E3 AA                      		stosb
  4261 000058E4 E2F9                    		loop	RegenCopyName	; CopyName
  4262 000058E6 C3                      		retn
  4263                                  
  4264                                  ; =============== S U B	R O U T	I N E =======================================
  4265                                  
  4266                                  FCBRegen:		; ...
  4267 000058E7 8A4419                  		mov	al, [si+19h]	; [SI+fcb_l_drive]
  4268 000058EA A880                    		test	al, 80h
  4269 000058EC 741C                    		jz	short RegenNoSharing
  4270 000058EE E82A5A                  		call	CheckShare
  4271 000058F1 7509                    		jnz	short RegenFail
  4272 000058F3 B80011                  		mov	ax, 1100h
  4273 000058F6 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - INSTALLATION	CHECK
  4274                                  					; Return: AL = 00h  not	installed, OK to install
  4275                                  					; 01h  not installed, not OK to	install
  4276                                  					; FFh  installed
  4277 000058F8 08C0                    		or	al, al
  4278 000058FA 740C                    		jz	short RegenDead
  4279                                  
  4280                                  RegenFail:				; ...
  4281 000058FC 36A1[3A03]              		mov	ax, [ss:USER_IN_AX]
  4282 00005900 80FC10                  		cmp	ah, 10h
  4283 00005903 7403                    		jz	short RegenDead
  4284 00005905 E89801                  		call	FCBHardErr
  4285                                  
  4286                                  RegenDead:				; ...
  4287 00005908 F9                      		stc
  4288                                  
  4289                                  FCBRegen_retn:				; ...
  4290 00005909 C3                      		retn
  4291                                  ; ---------------------------------------------------------------------------
  4292                                  
  4293                                  RegenNoSharing:				; ...
  4294 0000590A E80E5A                  		call	CheckShare
  4295 0000590D 75ED                    		jnz	short RegenFail
  4296 0000590F 50                      		push	ax
  4297 00005910 B000                    		mov	al, 0
  4298 00005912 E8DCFE                  		call	LRUFCB
  4299 00005915 58                      		pop	ax
  4300 00005916 72F1                    		jb	short FCBRegen_retn
  4301 00005918 26C745020280            		mov	word [es:di+2], 8002h ; [ES:DI+SF_ENTRY.sf_mode],
  4302                                  					; sf_isFCB+open_for_both+SHARING_COMP
  4303 0000591E 243F                    		and	al, 3Fh
  4304 00005920 98                      		cbw
  4305 00005921 0D0040                  		or	ax, 4000h	; sf_close_nodate
  4306 00005924 8A4C1A                  		mov	cl, [si+1Ah]	; [SI+fcb_nsl_bits]
  4307 00005927 88CD                    		mov	ch, cl
  4308 00005929 80E5C0                  		and	ch, 0C0h
  4309 0000592C 08E8                    		or	al, ch
  4310 0000592E 80E10F                  		and	cl, 0Fh		; access_mask
  4311 00005931 26884D02                		mov	[es:di+2], cl	; ES:DI+SF_ENTRY.sf_mode]
  4312 00005935 26894505                		mov	[es:di+5], ax	; [ES:DI+SF_ENTRY.sf_flags]
  4313 00005939 36A1[3C03]              		mov	ax, [ss:PROC_ID]
  4314 0000593D 26894531                		mov	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
  4315 00005941 1E                      		push	ds
  4316 00005942 56                      		push	si
  4317 00005943 06                      		push	es
  4318 00005944 57                      		push	di
  4319 00005945 16                      		push	ss
  4320 00005946 07                      		pop	es
  4321 00005947 BF[4B05]                		mov	di, NAME1
  4322 0000594A B90800                  		mov	cx, 8
  4323 0000594D 46                      		inc	si
  4324 0000594E E88EFF                  		call	RegenCopyName
  4325 00005951 16                      		push	ss
  4326 00005952 1F                      		pop	ds
  4327 00005953 C606[6B05]16            		mov	byte [ATTRIB], 16h ; attr_hidden+attr_system+attr_directory
  4328 00005958 E8B227                  		call	DEVNAME
  4329 0000595B 5F                      		pop	di
  4330 0000595C 07                      		pop	es
  4331 0000595D 5E                      		pop	si
  4332 0000595E 1F                      		pop	ds
  4333 0000595F 7219                    		jb	short RegenFileNoSharing
  4334 00005961 26887D05                		mov	[es:di+5], bh	; [ES:DI+SF_ENTRY.sf_flags]
  4335 00005965 26C6450400              		mov	byte [es:di+4], 0 ;	[ES:DI+SF_ENTRY.sf_attr]
  4336 0000596A 36C536[9A05]            		lds	si, [ss:DEVPT]
  4337 0000596F 26897507                		mov	[es:di+7], si	; [ES:DI+SF_ENTRY.sf_devptr]
  4338 00005973 268C5D09                		mov	word [es:di+9], ds ; [ES:DI+SF_ENTRY.sf_devptr+2]
  4339 00005977 C3                      		retn
  4340                                  ; ---------------------------------------------------------------------------
  4341                                  
  4342                                  RegenDeadJ:				; ...
  4343 00005978 EB8E                    		jmp	short RegenDead
  4344                                  ; ---------------------------------------------------------------------------
  4345                                  
  4346                                  RegenFileNoSharing:			; ...
  4347 0000597A 268B4505                		mov	ax, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  4348 0000597E 83E03F                  		and	ax, 3Fh
  4349 00005981 1E                      		push	ds
  4350 00005982 56                      		push	si
  4351 00005983 E80250                  		call	FIND_DPB
  4352 00005986 26897507                		mov	[es:di+7], si	; [ES:DI+SF_ENTRY.sf_devptr]
  4353 0000598A 268C5D09                		mov	word [es:di+9], ds ; [ES:DI+SF_ENTRY.sf_devptr+2]
  4354 0000598E 5E                      		pop	si
  4355 0000598F 1F                      		pop	ds
  4356 00005990 72E6                    		jb	short RegenDeadJ
  4357 00005992 8B441D                  		mov	ax, [si+1Dh]	; [SI+fcb_nsl_dirsec]
  4358 00005995 2689451B                		mov	[es:di+1Bh], ax	; [ES:DI+SF_ENTRY.sf_dirsec]
  4359 00005999 8A4418                  		mov	al, [si+18h]	; [si+fcb_sfn]
  4360 0000599C 24C0                    		and	al, 0C0h
  4361 0000599E 88C4                    		mov	ah, al
  4362 000059A0 D0C4                    		rol	ah, 1
  4363 000059A2 D0E8                    		shr	al, 1
  4364 000059A4 08E0                    		or	al, ah
  4365 000059A6 243F                    		and	al, 3Fh
  4366 000059A8 26884504                		mov	[es:di+4], al	; [es:di+SF_ENTRY.sf_attr]
  4367 000059AC 8A4418                  		mov	al, [si+18h]	; [si+fcb_sfn]
  4368 000059AF 243F                    		and	al, 3Fh
  4369 000059B1 28E4                    		sub	ah, ah
  4370 000059B3 2689451D                		mov	[es:di+1Dh], ax	; [es:di+SF_ENTRY.sf_dirsec+2]
  4371 000059B7 8B441B                  		mov	ax, [si+1Bh]	; [SI+fcb_nsl_firclus]
  4372 000059BA 2689450B                		mov	[es:di+0Bh], ax	; [ES:DI+SF_ENTRY.sf_firclus]
  4373 000059BE 26894535                		mov	[es:di+35h], ax	; [ES:DI+SF_ENTRY.sf_lstclus]
  4374 000059C2 8A441F                  		mov	al, [si+1Fh]	; SI+fcb_nsl_dirpos]
  4375 000059C5 2688451F                		mov	[es:di+1Fh], al	; [ES:DI+SF_ENTRY.sf_dirpos]
  4376 000059C9 26FF05                  		inc	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
  4377 000059CC 8D7401                  		lea	si, [si+1]	; [SI+SYS_FCB.name]
  4378 000059CF 8D7D20                  		lea	di, [di+20h]	; [DI+SF_ENTRY.sf_name]
  4379 000059D2 B90B00                  		mov	cx, 11		; SYS_FCB.EXTENT-SYS_FCB.name ;	12-1
  4380 000059D5 E807FF                  		call	RegenCopyName
  4381 000059D8 F8                      		clc
  4382 000059D9 C3                      		retn
  4383                                  
  4384                                  ; =============== S U B	R O U T	I N E =======================================
  4385                                  
  4386                                  BlastSFT:		; ...
  4387 000059DA 57                      		push	di
  4388 000059DB B93B00                  		mov	cx, 59		; SF_ENTRY.size
  4389 000059DE F3AA                    		rep stosb
  4390 000059E0 5F                      		pop	di
  4391 000059E1 29C0                    		sub	ax, ax
  4392 000059E3 268905                  		mov	[es:di], ax	; [es:di+SFT_ENTRY.sf_ref_count]
  4393 000059E6 26894515                		mov	[es:di+15h], ax	; [es:di+sf_LRU]
  4394 000059EA 48                      		dec	ax
  4395 000059EB 26894517                		mov	[es:di+17h], ax	; [es:di+sf_OpenAge]
  4396 000059EF C3                      		retn
  4397                                  
  4398                                  ; =============== S U B	R O U T	I N E =======================================
  4399                                  
  4400                                  CheckFCB:		; ...
  4401 000059F0 F64419C0                		test	byte [si+19h], 0C0h	; [si+fcb_l_drive],
  4402                                  					; FCBNETWORK|FCBSHARE|FCBDEVICE
  4403 000059F4 7450                    		jz	short BadSFT
  4404 000059F6 36C43E[4000]            		les	di, [ss:SFTFCB]
  4405 000059FB 26384504                		cmp	[es:di+4], al	; [ES:DI+SFT.SFCount]
  4406 000059FF 7245                    		jb	short BadSFT
  4407 00005A01 B33B                    		mov	bl, 59		; SF_ENTRY.size
  4408 00005A03 F6E3                    		mul	bl
  4409 00005A05 8D7D06                  		lea	di, [di+6]	; [DI+SFT.SFTable]
  4410 00005A08 01C7                    		add	di, ax
  4411 00005A0A 36A1[3C03]              		mov	ax, [ss:PROC_ID]
  4412 00005A0E 26394531                		cmp	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
  4413 00005A12 7532                    		jnz	short BadSFT
  4414 00005A14 26833D00                		cmp	word [es:di], 0 ; [ES:DI+SF_ENTRY.sf_ref_count]
  4415 00005A18 742C                    		jz	short BadSFT
  4416 00005A1A 8A4419                  		mov	al, [si+19h]	; [SI+fcb_l_drive]
  4417 00005A1D A880                    		test	al, 80h		; FCBSPECIAL
  4418 00005A1F 7431                    		jz	short CheckNoShare
  4419 00005A21 50                      		push	ax
  4420 00005A22 24C0                    		and	al, 0C0h	; FCBMASK
  4421 00005A24 3CC0                    		cmp	al, 0C0h	; FCBSHARE
  4422 00005A26 58                      		pop	ax
  4423 00005A27 751F                    		jnz	short CheckNet
  4424                                  		;call	dword [ss:ShChk] ; Call far [ss:JShare+(11*4)]
  4425 00005A29 36FF1E[BC00]            		call	far [ss:JShare+(11*4)]
  4426 00005A2E 7216                    		jb	short BadSFT
  4427 00005A30 EB06                    		jmp	short CheckD
  4428                                  ; ---------------------------------------------------------------------------
  4429                                  
  4430                                  CheckFirClus:				; [ES:DI+SF_ENTRY.sf_firclus]
  4431 00005A32 263B5D0B                		cmp	bx, [es:di+0Bh]
  4432 00005A36 750E                    		jnz	short BadSFT
  4433                                  
  4434                                  CheckD:					; ...
  4435 00005A38 243F                    		and	al, 3Fh
  4436 00005A3A 268A6505                		mov	ah, [es:di+5]
  4437 00005A3E 80E43F                  		and	ah, 3Fh
  4438 00005A41 38C4                    		cmp	ah, al
  4439 00005A43 7501                    		jnz	short BadSFT
  4440                                  
  4441                                  CheckD_retn:				; ...
  4442 00005A45 C3                      		retn
  4443                                  ; ---------------------------------------------------------------------------
  4444                                  
  4445                                  BadSFT:					; ...
  4446 00005A46 F9                      		stc
  4447 00005A47 C3                      		retn
  4448                                  ; ---------------------------------------------------------------------------
  4449                                  
  4450                                  CheckNet:				; ...
  4451 00005A48 8B441C                  		mov	ax, [si+1Ch]	; [SI+fcb_netID]
  4452 00005A4B 263B450B                		cmp	ax, [es:di+0Bh]	; [ES:DI+sf_serial_ID]
  4453 00005A4F 75F5                    		jnz	short BadSFT
  4454 00005A51 C3                      		retn
  4455                                  ; ---------------------------------------------------------------------------
  4456                                  
  4457                                  CheckNoShare:				; ...
  4458 00005A52 A840                    		test	al, 40h		; FCBDEVICE
  4459 00005A54 7500                    		jnz	short $+2	; CheckNoShareDev
  4460                                  
  4461                                  CheckNoShareDev:			; ...
  4462 00005A56 8B5C1A                  		mov	bx, [si+1Ah]	; [SI+fcb_nsld_drvptr]
  4463 00005A59 263B5D07                		cmp	bx, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  4464 00005A5D 75E7                    		jnz	short BadSFT
  4465 00005A5F 8B5C1C                  		mov	bx, [si+1Ch]	; [SI+fcb_nsld_drvptr+2]
  4466 00005A62 263B5D09                		cmp	bx, [es:di+9]	; [ES:DI+SF_ENTRY.sf_devptr+2]
  4467 00005A66 75DE                    		jnz	short BadSFT
  4468 00005A68 EBCE                    		jmp	short CheckD
  4469                                  
  4470                                  ; =============== S U B	R O U T	I N E =======================================
  4471                                  
  4472                                  SFTFromFCB:		; ...
  4473 00005A6A 50                      		push	ax
  4474 00005A6B 53                      		push	bx
  4475 00005A6C 8A4418                  		mov	al, [si+18h]	; [SI+fcb_sfn]
  4476 00005A6F E87EFF                  		call	CheckFCB
  4477 00005A72 5B                      		pop	bx
  4478 00005A73 58                      		pop	ax
  4479 00005A74 36893E[9E05]            		mov	word [ss:THISSFT], di
  4480 00005A79 368C06[A005]            		mov	word [ss:THISSFT+2], es
  4481 00005A7E 7311                    		jnb	short Set_SFT
  4482 00005A80 06                      		push	es
  4483 00005A81 E8D2E7                  		call	save_world
  4484 00005A84 E860FE                  		call	FCBRegen
  4485 00005A87 E8B5E7                  		call	restore_world
  4486 00005A8A 07                      		pop	es
  4487 00005A8B 36A1[2403]              		mov	ax, [ss:EXTERR]
  4488 00005A8F 72B4                    		jb	short CheckD_retn
  4489                                  
  4490                                  Set_SFT:				; ...
  4491 00005A91 36C43E[9E05]            		les	di, [ss:THISSFT]
  4492 00005A96 36FF36[3C03]            		push	word [ss:PROC_ID]
  4493 00005A9B 268F4531                		pop	word [es:di+31h] ; [ES:DI+SF_ENTRY.sf_PID]
  4494 00005A9F C3                      		retn
  4495                                  
  4496                                  ; =============== S U B	R O U T	I N E =======================================
  4497                                  
  4498                                  FCBHardErr:		; ...
  4499 00005AA0 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
  4500 00005AA5 B82300                  		mov	ax, 23h		; error_FCB_unavailable
  4501 00005AA8 26C606[4B03]08          		mov	byte [es:ALLOWED], 8 ; Allowed_FAIL
  4502 00005AAE 26C42E[8A05]            		les	bp, [es:THISDPB]
  4503 00005AB3 BF0100                  		mov	di, 1
  4504 00005AB6 89F9                    		mov	cx, di
  4505 00005AB8 268B560B                		mov	dx, [es:bp+0Bh]	; [ES:BP+DPB.FIRST_SECTOR]
  4506 00005ABC E8BB37                  		call	HARDERR
  4507 00005ABF F9                      		stc
  4508 00005AC0 C3                      		retn
  4509                                  
  4510                                  ; =============== S U B	R O U T	I N E =======================================
  4511                                  
  4512                                  GetRR:		; ...
  4513 00005AC1 8B4421                  		mov	ax, [si+21h]	; [SI+SYS_FCB.RR]
  4514 00005AC4 8B5423                  		mov	dx, [si+23h]	; [SI+SYS_FCB.RR+2]
  4515 00005AC7 83FB40                  		cmp	bx, 64
  4516 00005ACA 7202                    		jb	short GetRRBye
  4517 00005ACC 30F6                    		xor	dh, dh
  4518                                  
  4519                                  GetRRBye:				; ...
  4520 00005ACE C3                      		retn
  4521                                  
  4522                                  ; =============== S U B	R O U T	I N E =======================================
  4523                                  
  4524                                  GetExtent:		; ...
  4525 00005ACF 8A4420                  		mov	al, [si+20h]	; [SI+SYS_FCB.NR]
  4526 00005AD2 8B540C                  		mov	dx, [si+0Ch]	; [SI+SYS_FCB.EXTENT]
  4527 00005AD5 D0E0                    		shl	al, 1
  4528 00005AD7 D1EA                    		shr	dx, 1
  4529 00005AD9 D0D8                    		rcr	al, 1
  4530 00005ADB 88D4                    		mov	ah, dl
  4531 00005ADD 88F2                    		mov	dl, dh
  4532 00005ADF 30F6                    		xor	dh, dh
  4533 00005AE1 C3                      		retn
  4534                                  
  4535                                  ; =============== S U B	R O U T	I N E =======================================
  4536                                  
  4537                                  SetExtent:		; ...
  4538 00005AE2 50                      		push	ax
  4539 00005AE3 52                      		push	dx
  4540 00005AE4 89C1                    		mov	cx, ax
  4541 00005AE6 247F                    		and	al, 7Fh
  4542 00005AE8 884420                  		mov	[si+20h], al	; [SI+SYS_FCB.NR]
  4543 00005AEB 80E180                  		and	cl, 80h
  4544 00005AEE D1E1                    		shl	cx, 1
  4545 00005AF0 D1D2                    		rcl	dx, 1
  4546 00005AF2 88E8                    		mov	al, ch
  4547 00005AF4 88D4                    		mov	ah, dl
  4548 00005AF6 89440C                  		mov	[si+0Ch], ax	; [SI+SYS_FCB.EXTENT]
  4549 00005AF9 5A                      		pop	dx
  4550 00005AFA 58                      		pop	ax
  4551 00005AFB C3                      		retn
  4552                                  
  4553                                  ; =============== S U B	R O U T	I N E =======================================
  4554                                  
  4555                                  GetExtended:	; ...
  4556 00005AFC 89D6                    		mov	si, dx
  4557 00005AFE 803CFF                  		cmp	byte [si], 0FFh ; -1
  4558 00005B01 7503                    		jnz	short GetBye
  4559 00005B03 83C607                  		add	si, 7
  4560                                  
  4561                                  GetBye:					; ...
  4562 00005B06 39D6                    		cmp	si, dx
  4563                                  
  4564                                  getextd_retn:				; ...
  4565 00005B08 C3                      		retn
  4566                                  
  4567                                  ; =============== S U B	R O U T	I N E =======================================
  4568                                  
  4569                                  GetRecSize:		; ...
  4570 00005B09 8B5C0E                  		mov	bx, [si+0Eh]	; [SI+SYS_FCB.RECSIZ]
  4571 00005B0C 09DB                    		or	bx, bx
  4572 00005B0E 75F8                    		jnz	short getextd_retn
  4573 00005B10 BB8000                  		mov	bx, 128
  4574 00005B13 895C0E                  		mov	[si+0Eh], bx	; [SI+SYS_FCB.RECSIZ]
  4575 00005B16 C3                      		retn
  4576                                  
  4577                                  ; ---------------------------------------------------------------------------
  4578                                  
  4579                                  FCBIO:					; ...
  4580 00005B17 55                      		push	bp
  4581 00005B18 89E5                    		mov	bp, sp
  4582 00005B1A 83EC14                  		sub	sp, 14h
  4583 00005B1D 8846EC                  		mov	[bp-14h], al	; FCBOp
  4584 00005B20 C646FF00                		mov	byte [bp-1], 0 ; FCBErr
  4585 00005B24 E8D5FF                  		call	GetExtended
  4586 00005B27 F646EC08                		test	byte [bp-14h], 8 ; FCBOp,BLOCK
  4587 00005B2B 7503                    		jnz	short GetPos
  4588 00005B2D B90100                  		mov	cx, 1
  4589                                  
  4590                                  GetPos:					; ...
  4591 00005B30 894EFD                  		mov	[bp-3],	cx	; cRec
  4592 00005B33 E899FF                  		call	GetExtent
  4593 00005B36 E8D0FF                  		call	GetRecSize
  4594 00005B39 895EF7                  		mov	[bp-9],	bx	; RecSize
  4595 00005B3C F646EC02                		test	byte [bp-14h], 2 ; FCBOp,RANDOM
  4596 00005B40 7403                    		jz	short GetRec
  4597 00005B42 E87CFF                  		call	GetRR
  4598                                  
  4599                                  GetRec:					; ...
  4600 00005B45 8946F9                  		mov	[bp-7],	ax	; RecPosL
  4601 00005B48 8956FB                  		mov	[bp-5],	dx	; RecPosH
  4602 00005B4B E894FF                  		call	SetExtent
  4603 00005B4E 8B46FB                  		mov	ax, [bp-5]	; RecPosH
  4604 00005B51 F7E3                    		mul	bx
  4605 00005B53 89C7                    		mov	di, ax
  4606 00005B55 8B46F9                  		mov	ax, [bp-7]	; RecPosL
  4607 00005B58 F7E3                    		mul	bx
  4608 00005B5A 01FA                    		add	dx, di
  4609 00005B5C 8946F3                  		mov	[bp-0Dh], ax	; bPosL
  4610 00005B5F 8956F5                  		mov	[bp-0Bh], dx	; bPosH
  4611 00005B62 8B46FD                  		mov	ax, [bp-3]	; cRec
  4612 00005B65 F7E3                    		mul	bx
  4613 00005B67 8946F1                  		mov	[bp-0Fh], ax	; cByte
  4614 00005B6A 360306[2C03]            		add	ax, word [ss:DMAADD]
  4615 00005B6F 83D200                  		adc	dx, 0
  4616 00005B72 7419                    		jz	short DoOper
  4617 00005B74 C646FF02                		mov	byte [bp-1], 2 ; FCBErr,FTRIM
  4618 00005B78 36A1[2C03]              		mov	ax, word [ss:DMAADD]
  4619 00005B7C F7D8                    		neg	ax
  4620 00005B7E 7501                    		jnz	short DoDiv
  4621 00005B80 48                      		dec	ax
  4622                                  
  4623                                  DoDiv:					; ...
  4624 00005B81 31D2                    		xor	dx, dx
  4625 00005B83 F7F3                    		div	bx
  4626 00005B85 8946FD                  		mov	[bp-3],	ax	; cRec
  4627 00005B88 F7E3                    		mul	bx
  4628 00005B8A 8946F1                  		mov	[bp-0Fh], ax	; cByte
  4629                                  
  4630                                  DoOper:					; ...
  4631 00005B8D 31DB                    		xor	bx, bx
  4632 00005B8F 895EEF                  		mov	[bp-11h], bx	; cResult
  4633 00005B92 395EF1                  		cmp	[bp-0Fh], bx	; cByte
  4634 00005B95 7508                    		jnz	short DoGetExt
  4635 00005B97 F646FF02                		test	byte [bp-1], 2 ; FCBErr,FTRIM
  4636 00005B9B 7402                    		jz	short DoGetExt
  4637 00005B9D EB76                    		jmp	short SkipOp
  4638                                  ; ---------------------------------------------------------------------------
  4639                                  
  4640                                  DoGetExt:				; ...
  4641 00005B9F E8C8FE                  		call	SFTFromFCB
  4642 00005BA2 730F                    		jnb	short ContinueOp
  4643                                  
  4644                                  FCBDeath:				; ...
  4645 00005BA4 E85CE8                  		call	FCB_RET_ER
  4646 00005BA7 C746ED0000              		mov	word [bp-13h], 0 ; cRecRes
  4647 00005BAC C646FF01                		mov	byte [bp-1], 1 ; FCBErr,FEOF
  4648 00005BB0 E9EF00                  		jmp	FCBSave
  4649                                  ; ---------------------------------------------------------------------------
  4650                                  
  4651                                  ContinueOp:				; ...
  4652 00005BB3 8B4410                  		mov	ax, [si+10h]	; [SI+SYS_FCB.FILSIZ]
  4653 00005BB6 26894511                		mov	[es:di+11h], ax	; [ES:DI+SF_ENTRY.sf_size]
  4654 00005BBA 8B4412                  		mov	ax, [si+12h]	; [SI+SYS_FCB.FILSIZ+2]
  4655 00005BBD 26894513                		mov	[es:di+13h], ax	; [ES:DI+SF_ENTRY.sf_size+2]
  4656 00005BC1 8B46F3                  		mov	ax, [bp-0Dh]	; bPosL
  4657 00005BC4 8B56F5                  		mov	dx, [bp-0Bh]	; bPosH
  4658 00005BC7 26894515                		mov	[es:di+15h], ax	; [ES:DI+SF_ENTRY.sf_position]
  4659 00005BCB 26875517                		xchg	dx, [es:di+17h]	; [ES:DI+SF_ENTRY.sf_position+2]
  4660 00005BCF 52                      		push	dx
  4661 00005BD0 8B4EF1                  		mov	cx, [bp-0Fh]	; cByte
  4662 00005BD3 BF[E971]                		mov	di, DOS_READ
  4663 00005BD6 F646EC04                		test	byte [bp-14h], 4 ; FCBOp,FCBREAD
  4664 00005BDA 7503                    		jnz	short DoContext
  4665 00005BDC BF[1874]                		mov	di, DOS_WRITE
  4666                                  
  4667                                  DoContext:				; ...
  4668 00005BDF 55                      		push	bp
  4669 00005BE0 1E                      		push	ds
  4670 00005BE1 56                      		push	si
  4671 00005BE2 16                      		push	ss
  4672 00005BE3 1F                      		pop	ds
  4673 00005BE4 FFD7                    		call	di ; DOS_READ	; or DOS_WRITE
  4674 00005BE6 5E                      		pop	si
  4675 00005BE7 1F                      		pop	ds
  4676 00005BE8 5D                      		pop	bp
  4677 00005BE9 72B9                    		jb	short FCBDeath
  4678 00005BEB 36803E[0B06]00          		cmp	byte [ss:DISK_FULL], 0
  4679 00005BF1 740A                    		jz	short NODSKFULL
  4680 00005BF3 36C606[0B06]00          		mov	byte [ss:DISK_FULL], 0
  4681 00005BF9 C646FF01                		mov	byte [bp-1], 1 ; FCBErr,FEOF
  4682                                  
  4683                                  NODSKFULL:				; ...
  4684 00005BFD 894EEF                  		mov	[bp-11h], cx	; cResult
  4685 00005C00 E81CFB                  		call	SaveFCBInfo
  4686 00005C03 268F4517                		pop	word [es:di+17h] ; [ES:DI+SF_ENTRY.sf_position+2]
  4687 00005C07 268B4511                		mov	ax, [es:di+11h]	; [ES:DI+SF_ENTRY.sf_size]
  4688 00005C0B 894410                  		mov	[si+10h], ax	; [SI+SYS_FCB.FILSIZ]
  4689 00005C0E 268B4513                		mov	ax, [es:di+13h]	; [ES:DI+SF_ENTRY.sf_size+2]
  4690 00005C12 894412                  		mov	[si+12h], ax	; [SI+SYS_FCB.FILSIZ+2]
  4691                                  
  4692                                  SkipOp:					; ...
  4693 00005C15 8B46EF                  		mov	ax, [bp-11h]	; cResult
  4694 00005C18 31D2                    		xor	dx, dx
  4695 00005C1A F776F7                  		div	word [bp-9]	; RecSize
  4696 00005C1D 8946ED                  		mov	[bp-13h], ax	; cRecRes
  4697 00005C20 0146F9                  		add	[bp-7],	ax	; RecPosL
  4698 00005C23 8356FB00                		adc	word [bp-5], 0 ; RecPosH
  4699 00005C27 3B46FD                  		cmp	ax, [bp-3]	; cRec
  4700 00005C2A 7411                    		jz	short TryBlank
  4701 00005C2C F646EC04                		test	byte [bp-14h], 4 ; FCBOp,FCBREAD
  4702 00005C30 7507                    		jnz	short SetEOF
  4703 00005C32 26F6450580              		test	byte [es:di+5], 80h
  4704 00005C37 7504                    		jnz	short TryBlank
  4705                                  
  4706                                  SetEOF:					; ...
  4707 00005C39 C646FF01                		mov	byte [bp-1], 1 ; FCBErr,FEOF
  4708                                  
  4709                                  TryBlank:				; ...
  4710 00005C3D 09D2                    		or	dx, dx
  4711 00005C3F 7426                    		jz	short SetExt
  4712 00005C41 8346F901                		add	word [bp-7], 1 ; RecPosL
  4713 00005C45 8356FB00                		adc	word [bp-5], 0 ; RecPosH
  4714 00005C49 F646EC04                		test	byte [bp-14h], 4 ; FCBOp,FCBREAD
  4715 00005C4D 7418                    		jz	short SetExt
  4716 00005C4F FF46ED                  		inc	word [bp-13h] ; cRecRes
  4717 00005C52 C646FF03                		mov	byte [bp-1], 3 ; FCBErr,FTRIM+FEOF
  4718 00005C56 8B4EF7                  		mov	cx, [bp-9]	; RecSize
  4719 00005C59 29D1                    		sub	cx, dx
  4720 00005C5B 30C0                    		xor	al, al
  4721 00005C5D 36C43E[2C03]            		les	di, [ss:DMAADD]
  4722 00005C62 037EEF                  		add	di, [bp-11h]	; cResult
  4723 00005C65 F3AA                    		rep stosb
  4724                                  
  4725                                  SetExt:					; ...
  4726 00005C67 8B56FB                  		mov	dx, [bp-5]	; RecPosH
  4727 00005C6A 8B46F9                  		mov	ax, [bp-7]	; RecPosL
  4728 00005C6D F646EC02                		test	byte [bp-14h], 2 ; FCBOp,RANDOM
  4729 00005C71 7406                    		jz	short DoSetExt
  4730 00005C73 F646EC08                		test	byte [bp-14h], 8 ; FCBOp,BLOCK
  4731 00005C77 7403                    		jz	short TrySetRR
  4732                                  
  4733                                  DoSetExt:				; ...
  4734 00005C79 E866FE                  		call	SetExtent
  4735                                  
  4736                                  TrySetRR:				; ...
  4737 00005C7C F646EC08                		test	byte [bp-14h], 8 ; FCBOp,BLOCK
  4738 00005C80 740F                    		jz	short TryReturn
  4739 00005C82 894421                  		mov	[si+21h], ax	; [SI+SYS_FCB.RR]
  4740 00005C85 885423                  		mov	[si+23h], dl	; [SI+SYS_FCB.RR+2]
  4741 00005C88 837C0E40                		cmp	word [si+0Eh], 64 ;	[SI+SYS_FCB.RECSIZ]
  4742 00005C8C 7303                    		jnb	short TryReturn
  4743 00005C8E 887424                  		mov	[si+24h], dh	; [SI+SYS_FCB.RR+2+1]
  4744                                  
  4745                                  TryReturn:				; ...
  4746 00005C91 F646EC04                		test	byte [bp-14h], 4 ; FCBOp,FCBREAD
  4747 00005C95 750B                    		jnz	short FCBSave
  4748 00005C97 1E                      		push	ds
  4749 00005C98 E826EC                  		call	DATE16
  4750 00005C9B 1F                      		pop	ds
  4751 00005C9C 894414                  		mov	[si+14h], ax	; [SI+SYS_FCB.FDATE]
  4752 00005C9F 895416                  		mov	[si+16h], dx	; [SI+SYS_FCB.FTIME]
  4753                                  
  4754                                  FCBSave:				; ...
  4755 00005CA2 F646EC08                		test	byte [bp-14h], 8 ; FCBOp,BLOCK
  4756 00005CA6 7409                    		jz	short DoReturn
  4757 00005CA8 8B4EED                  		mov	cx, [bp-13h]	; cRecRes
  4758 00005CAB E8C7E5                  		call	Get_User_Stack
  4759 00005CAE 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  4760                                  
  4761                                  DoReturn:				; ...
  4762 00005CB1 8A46FF                  		mov	al, [bp-1]	; FCBErr
  4763 00005CB4 89EC                    		mov	sp, bp
  4764 00005CB6 5D                      		pop	bp
  4765 00005CB7 C3                      		retn
  4766                                  
  4767                                  ; =============== S U B	R O U T	I N E =======================================
  4768                                  
  4769                                  _$FCB_OPEN:		; ...
  4770 00005CB8 B80200                  		mov	ax, 2		; SHARING_COMPAT+open_for_both
  4771 00005CBB B9[4C6A]                		mov	cx, DOS_OPEN
  4772                                  
  4773                                  DoAccess:				; ...
  4774 00005CBE 1E                      		push	ds
  4775 00005CBF 52                      		push	dx
  4776 00005CC0 51                      		push	cx
  4777 00005CC1 50                      		push	ax
  4778 00005CC2 BF[BE03]                		mov	di, OPENBUF
  4779 00005CC5 E80F4E                  		call	TransFCB
  4780 00005CC8 58                      		pop	ax
  4781 00005CC9 59                      		pop	cx
  4782 00005CCA 5A                      		pop	dx
  4783 00005CCB 1F                      		pop	ds
  4784 00005CCC 7303                    		jnb	short FindFCB
  4785                                  
  4786                                  FCBOpenErr:				; ...
  4787 00005CCE E932E7                  		jmp	FCB_RET_ER
  4788                                  ; ---------------------------------------------------------------------------
  4789                                  
  4790                                  FindFCB:				; ...
  4791 00005CD1 E828FE                  		call	GetExtended
  4792 00005CD4 50                      		push	ax
  4793 00005CD5 B001                    		mov	al, 1
  4794 00005CD7 E817FB                  		call	LRUFCB
  4795 00005CDA 58                      		pop	ax
  4796 00005CDB 722A                    		jb	short HardMessage
  4797 00005CDD 26C745020080            		mov	word [es:di+2], 8000h ; [es:di+SF_ENTRY.sf_mode],
  4798                                  					; sf_isFCB
  4799 00005CE3 1E                      		push	ds
  4800 00005CE4 56                      		push	si
  4801 00005CE5 53                      		push	bx
  4802 00005CE6 89CE                    		mov	si, cx
  4803 00005CE8 16                      		push	ss
  4804 00005CE9 1F                      		pop	ds
  4805 00005CEA FFD6                    		call	si
  4806 00005CEC 5B                      		pop	bx
  4807 00005CED 5E                      		pop	si
  4808 00005CEE 1F                      		pop	ds
  4809 00005CEF 36C43E[9E05]            		les	di, [ss:THISSFT]
  4810 00005CF4 7318                    		jnb	short FCBOK
  4811 00005CF6 50                      		push	ax
  4812 00005CF7 B052                    		mov	al, 'R'         ; 52h
  4813 00005CF9 E8DEFC                  		call	BlastSFT
  4814 00005CFC 58                      		pop	ax
  4815 00005CFD 83F804                  		cmp	ax, 4		; error_too_many_open_files
  4816 00005D00 7405                    		jz	short HardMessage
  4817 00005D02 83F824                  		cmp	ax, 24h		; error_sharing_buffer_exceeded
  4818 00005D05 7505                    		jnz	short DeadFCB
  4819                                  
  4820                                  HardMessage:				; ...
  4821 00005D07 50                      		push	ax
  4822 00005D08 E895FD                  		call	FCBHardErr
  4823 00005D0B 58                      		pop	ax
  4824                                  
  4825                                  DeadFCB:				; ...
  4826 00005D0C EBC0                    		jmp	short FCBOpenErr
  4827                                  ; ---------------------------------------------------------------------------
  4828                                  
  4829                                  FCBOK:					; ...
  4830 00005D0E E869F3                  		call	IsSFTNet
  4831 00005D11 750F                    		jnz	short FCBOK2
  4832 00005D13 E80556                  		call	CheckShare
  4833 00005D16 750A                    		jnz	short FCBOK2
  4834 00005D18 36893E[5D10]            		mov	word [ss:LocalSFT],	di
  4835 00005D1D 368C06[5F10]            		mov	word [ss:LocalSFT+2], es
  4836                                  
  4837                                  FCBOK2:					; ...
  4838 00005D22 26FF05                  		inc	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
  4839 00005D25 E8F7F9                  		call	SaveFCBInfo
  4840 00005D28 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  4841                                  					; devid_device
  4842 00005D2D 7509                    		jnz	short FCBNoDrive
  4843 00005D2F 8A04                    		mov	al, [si]
  4844 00005D31 E8284D                  		call	GETTHISDRV
  4845 00005D34 FEC0                    		inc	al
  4846 00005D36 8804                    		mov	[si], al
  4847                                  
  4848                                  FCBNoDrive:				; ...
  4849 00005D38 C7440E8000              		mov	word [si+0Eh], 128 ; [SI+SYS_FCB.RECSIZ]
  4850 00005D3D 268B450D                		mov	ax, [es:di+0Dh]	; [ES:DI+SF_ENTRY.sf_time]
  4851 00005D41 894416                  		mov	[si+16h], ax	; [SI+SYS_FCB.FTIME]
  4852 00005D44 268B450F                		mov	ax, [es:di+0Fh]	; [ES:DI+SF_ENTRY.sf_date]
  4853 00005D48 894414                  		mov	[si+14h], ax	; [SI+SYS_FCB.FDATE]
  4854 00005D4B 268B4511                		mov	ax, [es:di+11h]	; [ES:DI+SF_ENTRY.sf_size]
  4855 00005D4F 894410                  		mov	[si+10h], ax	; [SI+SYS_FCB.FILSIZ]
  4856 00005D52 268B4513                		mov	ax, [es:di+13h]	; [ES:DI+SF_ENTRY.sf_size+2]
  4857 00005D56 894412                  		mov	[si+12h], ax	; [SI+SYS_FCB.FILSIZ+2]
  4858 00005D59 31C0                    		xor	ax, ax
  4859 00005D5B 89440C                  		mov	[si+0Ch], ax	; [SI+SYS_FCB.EXTENT]
  4860 00005D5E 36C43E[4000]            		les	di, [ss:SFTFCB]
  4861 00005D63 268A6504                		mov	ah, [es:di+4]	; [ES:DI+SFT.SFCount]
  4862                                  
  4863                                  OpenScan:				; ...
  4864 00005D67 3A4418                  		cmp	al, [si+18h]	; [SI+fcb_sfn]
  4865 00005D6A 7407                    		jz	short SkipCheck
  4866 00005D6C 50                      		push	ax
  4867 00005D6D E880FC                  		call	CheckFCB
  4868 00005D70 58                      		pop	ax
  4869 00005D71 7309                    		jnb	short OpenFound
  4870                                  
  4871                                  SkipCheck:				; ...
  4872 00005D73 FEC0                    		inc	al
  4873 00005D75 38E0                    		cmp	al, ah
  4874 00005D77 75EE                    		jnz	short OpenScan
  4875                                  
  4876                                  OpenDone:				; ...
  4877 00005D79 30C0                    		xor	al, al
  4878 00005D7B C3                      		retn
  4879                                  ; ---------------------------------------------------------------------------
  4880                                  
  4881                                  OpenFound:				; ...
  4882 00005D7C 884418                  		mov	[si+18h], al	; [SI+fcb_sfn]
  4883 00005D7F 26FF05                  		inc	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
  4884 00005D82 36A1[1000]              		mov	ax, [ss:FCBLRU]
  4885 00005D86 26894515                		mov	[es:di+15h], ax	; [ES:DI+sf_LRU]
  4886 00005D8A 16                      		push	ss
  4887 00005D8B 1F                      		pop	ds
  4888 00005D8C C43E[9E05]              		les	di, [THISSFT]
  4889 00005D90 26FF0D                  		dec	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
  4890 00005D93 E8BD55                  		call	ShareEnd
  4891 00005D96 B043                    		mov	al, 'C'         ; 43h
  4892 00005D98 E83FFC                  		call	BlastSFT
  4893 00005D9B EBDC                    		jmp	short OpenDone
  4894                                  
  4895                                  ; ---------------------------------------------------------------------------
  4896                                  
  4897                                  _$FCB_CREATE:				; ...
  4898 00005D9D B9[2069]                		mov	cx, DOS_CREATE
  4899 00005DA0 31C0                    		xor	ax, ax
  4900 00005DA2 E857FD                  		call	GetExtended
  4901 00005DA5 7403                    		jz	short DoAccessJ
  4902 00005DA7 8A44FF                  		mov	al, [si-1]
  4903                                  
  4904                                  DoAccessJ:				; ...
  4905 00005DAA E911FF                  		jmp	DoAccess
  4906                                  ; ---------------------------------------------------------------------------
  4907                                  
  4908                                  _$FCB_RANDOM_WRITE_BLOCK:		; ...
  4909 00005DAD B00A                    		mov	al, 0Ah		; RANDOM+BLOCK
  4910 00005DAF E965FD                  		jmp	FCBIO
  4911                                  ; ---------------------------------------------------------------------------
  4912                                  
  4913                                  _$FCB_RANDOM_READ_BLOCK:		; ...
  4914 00005DB2 B00E                    		mov	al, 0Eh		; RANDOM+FCBREAD+BLOCK
  4915 00005DB4 E960FD                  		jmp	FCBIO
  4916                                  ; ---------------------------------------------------------------------------
  4917                                  
  4918                                  _$FCB_SEQ_READ:				; ...
  4919 00005DB7 B004                    		mov	al, 4		; FCBREAD
  4920 00005DB9 E95BFD                  		jmp	FCBIO
  4921                                  ; ---------------------------------------------------------------------------
  4922                                  
  4923                                  _$FCB_SEQ_WRITE:			; ...
  4924 00005DBC B000                    		mov	al, 0
  4925 00005DBE E956FD                  		jmp	FCBIO
  4926                                  ; ---------------------------------------------------------------------------
  4927                                  
  4928                                  _$FCB_RANDOM_READ:			; ...
  4929 00005DC1 B006                    		mov	al, 6		; RANDOM+FCBREAD
  4930 00005DC3 E951FD                  		jmp	FCBIO
  4931                                  ; ---------------------------------------------------------------------------
  4932                                  
  4933                                  _$FCB_RANDOM_WRITE:			; ...
  4934 00005DC6 B002                    		mov	al, 2		; RANDOM
  4935 00005DC8 E94CFD                  		jmp	FCBIO
  4936                                  ; ---------------------------------------------------------------------------
  4937                                  
  4938                                  _$DIR_SEARCH_FIRST:			; ...
  4939 00005DCB 368916[A605]            		mov	word [ss:THISFCB], dx
  4940 00005DD0 368C1E[A805]            		mov	word [ss:THISFCB+2], ds
  4941 00005DD5 89D6                    		mov	si, dx
  4942 00005DD7 803CFF                  		cmp	byte [si], 0FFh
  4943 00005DDA 7503                    		jnz	short NORMFCB4
  4944 00005DDC 83C607                  		add	si, 7
  4945                                  
  4946                                  NORMFCB4:				; ...
  4947 00005DDF FF34                    		push	word [si]
  4948 00005DE1 16                      		push	ss
  4949 00005DE2 07                      		pop	es
  4950 00005DE3 BF[BE03]                		mov	di, OPENBUF
  4951 00005DE6 E8EE4C                  		call	TransFCB
  4952 00005DE9 7304                    		jnb	short SearchIt
  4953 00005DEB 5B                      		pop	bx
  4954                                  
  4955                                  dcf_errj:				; ...
  4956 00005DEC E914E6                  		jmp	FCB_RET_ER
  4957                                  ; ---------------------------------------------------------------------------
  4958                                  
  4959                                  SearchIt:				; ...
  4960 00005DEF 16                      		push	ss
  4961 00005DF0 1F                      		pop	ds
  4962 00005DF1 FF36[2C03]              		push	word [DMAADD]
  4963 00005DF5 FF36[2E03]              		push	word [DMAADD+2]
  4964 00005DF9 C706[2C03][BE04]        		mov	word [DMAADD], SEARCHBUF
  4965 00005DFF 8C1E[2E03]              		mov	word [DMAADD+2], ds
  4966 00005E03 E88B01                  		call	GET_FAST_SEARCH
  4967 00005E06 8F06[2E03]              		pop	word [DMAADD+2]
  4968 00005E0A 8F06[2C03]              		pop	word [DMAADD]
  4969 00005E0E 7303                    		jnb	short SearchSet
  4970 00005E10 5B                      		pop	bx
  4971 00005E11 EBD9                    		jmp	short dcf_errj
  4972                                  ; ---------------------------------------------------------------------------
  4973                                  
  4974                                  SearchSet:				; ...
  4975 00005E13 BE[BE04]                		mov	si, SEARCHBUF
  4976 00005E16 C43E[A605]              		les	di, [THISFCB]
  4977 00005E1A F606[6C05]FF            		test	byte [EXTFCB], 0FFh
  4978 00005E1F 7403                    		jz	short NORMFCB1
  4979 00005E21 83C707                  		add	di, 7
  4980                                  
  4981                                  NORMFCB1:				; ...
  4982 00005E24 5B                      		pop	bx
  4983 00005E25 08DB                    		or	bl, bl
  4984 00005E27 7506                    		jnz	short SearchDrv
  4985 00005E29 8A1E[3603]              		mov	bl, [CURDRV]
  4986 00005E2D FEC3                    		inc	bl
  4987                                  
  4988                                  SearchDrv:				; ...
  4989 00005E2F AC                      		lodsb
  4990 00005E30 86C3                    		xchg	al, bl
  4991 00005E32 47                      		inc	di
  4992 00005E33 B90A00                  		mov	cx, 10		; 20/2
  4993 00005E36 F3A5                    		rep movsw
  4994 00005E38 86C3                    		xchg	al, bl
  4995 00005E3A AA                      		stosb
  4996 00005E3B C43E[2C03]              		les	di, [DMAADD]
  4997 00005E3F F606[6C05]FF            		test	byte [EXTFCB], 0FFh
  4998 00005E44 740E                    		jz	short NORMFCB2
  4999 00005E46 B0FF                    		mov	al, 0FFh
  5000 00005E48 AA                      		stosb
  5001 00005E49 FEC0                    		inc	al
  5002 00005E4B B90500                  		mov	cx, 5
  5003 00005E4E F3AA                    		rep stosb
  5004 00005E50 A0[6D05]                		mov	al, [SATTRIB]
  5005 00005E53 AA                      		stosb
  5006                                  
  5007                                  NORMFCB2:				; ...
  5008 00005E54 88D8                    		mov	al, bl
  5009 00005E56 AA                      		stosb
  5010 00005E57 B91000                  		mov	cx, 16
  5011 00005E5A F3A5                    		rep movsw
  5012 00005E5C E9A1E5                  		jmp	NO_OP		; FCB_RET_OK
  5013                                  ; ---------------------------------------------------------------------------
  5014                                  
  5015                                  _$DIR_SEARCH_NEXT:			; ...
  5016 00005E5F 368916[A605]            		mov	word [ss:THISFCB], dx
  5017 00005E64 368C1E[A805]            		mov	word [ss:THISFCB+2], ds
  5018 00005E69 36C606[6D05]00          		mov	byte [ss:SATTRIB], 0
  5019 00005E6F 36C606[6C05]00          		mov	byte [ss:EXTFCB], 0
  5020 00005E75 16                      		push	ss
  5021 00005E76 07                      		pop	es
  5022 00005E77 BF[BE04]                		mov	di, SEARCHBUF
  5023 00005E7A 89D6                    		mov	si, dx
  5024 00005E7C 803CFF                  		cmp	byte [si], 0FFh
  5025 00005E7F 750D                    		jnz	short NORMFCB6
  5026 00005E81 83C606                  		add	si, 6
  5027 00005E84 AC                      		lodsb
  5028 00005E85 36A2[6D05]              		mov	[ss:SATTRIB], al
  5029 00005E89 36FE0E[6C05]            		dec	byte [ss:EXTFCB]
  5030                                  
  5031                                  NORMFCB6:				; ...
  5032 00005E8E AC                      		lodsb
  5033 00005E8F 50                      		push	ax
  5034 00005E90 8A4414                  		mov	al, [si+20]
  5035 00005E93 AA                      		stosb
  5036 00005E94 B90A00                  		mov	cx, 10		; 20/2
  5037 00005E97 F3A5                    		rep movsw
  5038 00005E99 16                      		push	ss
  5039 00005E9A 1F                      		pop	ds
  5040 00005E9B FF36[2C03]              		push	word [DMAADD]
  5041 00005E9F FF36[2E03]              		push	word [DMAADD+2]
  5042 00005EA3 C706[2C03][BE04]        		mov	word [DMAADD], SEARCHBUF
  5043 00005EA9 8C1E[2E03]              		mov	word [DMAADD+2],	ds
  5044 00005EAD E8630E                  		call	DOS_SEARCH_NEXT
  5045 00005EB0 8F06[2E03]              		pop	word [DMAADD+2]
  5046 00005EB4 8F06[2C03]              		pop	word [DMAADD]
  5047 00005EB8 7203                    		jb	short SearchNoMore
  5048 00005EBA E956FF                  		jmp	SearchSet
  5049                                  ; ---------------------------------------------------------------------------
  5050                                  
  5051                                  SearchNoMore:				; ...
  5052 00005EBD C43E[A605]              		les	di, [THISFCB]
  5053 00005EC1 F606[6C05]FF            		test	byte [EXTFCB], 0FFh
  5054 00005EC6 7403                    		jz	short NORMFCB8
  5055 00005EC8 83C707                  		add	di, 7
  5056                                  
  5057                                  NORMFCB8:				; ...
  5058 00005ECB 5B                      		pop	bx
  5059 00005ECC 26881D                  		mov	[es:di], bl
  5060 00005ECF E931E5                  		jmp	FCB_RET_ER
  5061                                  ; ---------------------------------------------------------------------------
  5062                                  
  5063                                  _$FIND_FIRST:				; ...
  5064 00005ED2 89D6                    		mov	si, dx
  5065 00005ED4 36880E[6D05]            		mov	[ss:SATTRIB], cl
  5066 00005ED9 BF[BE03]                		mov	di, OPENBUF
  5067 00005EDC E85E4C                  		call	TransPathSet
  5068 00005EDF 7305                    		jnb	short Find_it
  5069                                  
  5070                                  FindError:
  5071 00005EE1 B003                    		mov	al, 3
  5072                                  
  5073                                  FF_errj:				; ...
  5074 00005EE3 E907E5                  		jmp	SYS_RET_ERR
  5075                                  ; ---------------------------------------------------------------------------
  5076                                  
  5077                                  Find_it:				; ...
  5078 00005EE6 16                      		push	ss
  5079 00005EE7 1F                      		pop	ds
  5080 00005EE8 FF36[2C03]              		push	word [DMAADD]
  5081 00005EEC FF36[2E03]              		push	word [DMAADD+2]
  5082 00005EF0 C706[2C03][BE04]        		mov	word [DMAADD], SEARCHBUF
  5083 00005EF6 8C1E[2E03]              		mov	word [DMAADD+2],	ds
  5084 00005EFA E89400                  		call	GET_FAST_SEARCH
  5085 00005EFD 8F06[2E03]              		pop	word [DMAADD+2]
  5086 00005F01 8F06[2C03]              		pop	word [DMAADD]
  5087 00005F05 7302                    		jnb	short FindSet
  5088                                  
  5089                                  FFF_errj:				; ...
  5090 00005F07 EBDA                    		jmp	short FF_errj
  5091                                  ; ---------------------------------------------------------------------------
  5092                                  
  5093                                  FindSet:				; ...
  5094 00005F09 BE[BE04]                		mov	si, SEARCHBUF
  5095 00005F0C C43E[2C03]              		les	di, [DMAADD]
  5096 00005F10 B91500                  		mov	cx, 21
  5097 00005F13 F3A4                    		rep movsb
  5098 00005F15 56                      		push	si
  5099 00005F16 8A440B                  		mov	al, [si+0Bh]	; [SI+dir_entry.dir_attr]
  5100 00005F19 AA                      		stosb
  5101 00005F1A 83C616                  		add	si, 16h		; dir_entry.dir_time
  5102 00005F1D A5                      		movsw
  5103 00005F1E A5                      		movsw
  5104 00005F1F 46                      		inc	si
  5105 00005F20 46                      		inc	si
  5106 00005F21 A5                      		movsw
  5107 00005F22 A5                      		movsw
  5108 00005F23 5E                      		pop	si
  5109 00005F24 E83500                  		call	PackName
  5110 00005F27 E9BAE4                  		jmp	SYS_RETURN	; SYS_RET_OK
  5111                                  ; ---------------------------------------------------------------------------
  5112                                  
  5113                                  _$FIND_NEXT:				; ...
  5114 00005F2A 16                      		push	ss
  5115 00005F2B 07                      		pop	es
  5116 00005F2C BF[BE04]                		mov	di, SEARCHBUF
  5117 00005F2F 36C536[2C03]            		lds	si, [ss:DMAADD]
  5118 00005F34 B91500                  		mov	cx, 21
  5119 00005F37 F3A4                    		rep movsb
  5120 00005F39 16                      		push	ss
  5121 00005F3A 1F                      		pop	ds
  5122 00005F3B FF36[2C03]              		push	word [DMAADD]
  5123 00005F3F FF36[2E03]              		push	word [DMAADD+2]
  5124 00005F43 C706[2C03][BE04]        		mov	word [DMAADD], SEARCHBUF
  5125 00005F49 8C1E[2E03]              		mov	word [DMAADD+2],	ds
  5126 00005F4D E8C30D                  		call	DOS_SEARCH_NEXT
  5127 00005F50 8F06[2E03]              		pop	word [DMAADD+2]
  5128 00005F54 8F06[2C03]              		pop	word [DMAADD]
  5129 00005F58 73AF                    		jnb	short FindSet
  5130 00005F5A EBAB                    		jmp	short FFF_errj
  5131                                  
  5132                                  ; =============== S U B	R O U T	I N E =======================================
  5133                                  
  5134                                  PackName:		; ...
  5135 00005F5C B90800                  		mov	cx, 8
  5136 00005F5F F3A4                    		rep movsb
  5137                                  
  5138                                  main_kill_tail:				; ...
  5139 00005F61 26807DFF20              		cmp	byte [es:di-1], 20h	; ' '
  5140 00005F66 7507                    		jnz	short find_check_dot
  5141 00005F68 4F                      		dec	di
  5142 00005F69 41                      		inc	cx
  5143 00005F6A 83F908                  		cmp	cx, 8
  5144 00005F6D 72F2                    		jb	short main_kill_tail
  5145                                  
  5146                                  find_check_dot:				; ...
  5147 00005F6F 813C2020                		cmp	word [si], 2020h ; (" " << 8) | " "
  5148 00005F73 7506                    		jnz	short got_ext
  5149 00005F75 807C0220                		cmp	byte [si+2], 20h ; ' '
  5150 00005F79 7412                    		jz	short find_done
  5151                                  
  5152                                  got_ext:				; ...
  5153 00005F7B B02E                    		mov	al, '.'         ; 2Eh
  5154 00005F7D AA                      		stosb
  5155 00005F7E B90300                  		mov	cx, 3
  5156 00005F81 F3A4                    		rep movsb
  5157                                  
  5158                                  ext_kill_tail:				; ...
  5159 00005F83 26807DFF20              		cmp	byte [es:di-1], 20h	; ' '
  5160 00005F88 7503                    		jnz	short find_done
  5161 00005F8A 4F                      		dec	di
  5162 00005F8B EBF6                    		jmp	short ext_kill_tail
  5163                                  ; ---------------------------------------------------------------------------
  5164                                  
  5165                                  find_done:				; ...
  5166 00005F8D 31C0                    		xor	ax, ax
  5167 00005F8F AA                      		stosb
  5168 00005F90 C3                      		retn
  5169                                  
  5170                                  ; =============== S U B	R O U T	I N E =======================================
  5171                                  
  5172                                  GET_FAST_SEARCH:
  5173 00005F91 36810E[1106]0004        		or	word [ss:DOS34_FLAG], 400h ; SEARCH_FASTOPEN
  5174 00005F98 E8870C                  		call	DOS_SEARCH_FIRST
  5175 00005F9B C3                      		retn
  5176                                  
  5177                                  ; ---------------------------------------------------------------------------
  5178                                  
  5179                                  _$CURRENT_DIR:				; ...
  5180 00005F9C E887F1                  		call	ECritDisk
  5181 00005F9F 88D0                    		mov	al, dl
  5182 00005FA1 E89B4A                  		call	GetVisDrv
  5183 00005FA4 7310                    		jnb	short CurrentValidate
  5184                                  
  5185                                  CurdirErr:				; ...
  5186 00005FA6 E89DF1                  		call	LCritDisk
  5187 00005FA9 1E                      		push	ds
  5188 00005FAA 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  5189 00005FAF A0[1006]                		mov	al, [DrvErr]
  5190 00005FB2 1F                      		pop	ds
  5191                                  
  5192                                  curdir_errj:				; ...
  5193 00005FB3 E937E4                  		jmp	SYS_RET_ERR
  5194                                  ; ---------------------------------------------------------------------------
  5195                                  
  5196                                  CurrentValidate:			; ...
  5197 00005FB6 1E                      		push	ds
  5198 00005FB7 56                      		push	si
  5199 00005FB8 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  5200 00005FBD C536[A205]              		lds	si, [THISCDS]
  5201 00005FC1 F744430080              		test	word [si+43h], 8000h ; [SI+curdir.flags],
  5202                                  					; curdir_isnet
  5203 00005FC6 7500                    		jnz	short $+2
  5204                                  
  5205                                  DoCheck:				; ...
  5206 00005FC8 1E                      		push	ds
  5207 00005FC9 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
  5208 00005FCE C606[4C03]00            		mov	byte [NoSetDir], 0
  5209 00005FD3 1F                      		pop	ds
  5210 00005FD4 BF[BE03]                		mov	di, OPENBUF
  5211 00005FD7 E8C121                  		call	ValidateCDS
  5212 00005FDA 06                      		push	es
  5213 00005FDB 57                      		push	di
  5214 00005FDC 5E                      		pop	si
  5215 00005FDD 1F                      		pop	ds
  5216 00005FDE 5F                      		pop	di
  5217 00005FDF 07                      		pop	es
  5218 00005FE0 72C4                    		jb	short CurdirErr
  5219 00005FE2 83C600                  		add	si, 0		; curdir.text
  5220 00005FE5 03744F                  		add	si, [si+4Fh]	; [SI+curdir.end]
  5221 00005FE8 803C5C                  		cmp	byte [si], '\' ; 5Ch
  5222 00005FEB 7501                    		jnz	short CurrentCopy
  5223 00005FED 46                      		inc	si
  5224                                  
  5225                                  CurrentCopy:				; ...
  5226 00005FEE 50                      		push	ax
  5227 00005FEF AC                      		lodsb
  5228 00005FF0 08C0                    		or	al, al
  5229 00005FF2 7413                    		jz	short FOK
  5230 00005FF4 3C05                    		cmp	al, 5
  5231 00005FF6 740D                    		jz	short FCHANGE
  5232 00005FF8 EB01                    		jmp	short FFF
  5233                                  ; ---------------------------------------------------------------------------
  5234                                  
  5235                                  FCPYNEXT:				; ...
  5236 00005FFA AC                      		lodsb
  5237                                  
  5238                                  FFF:					; ...
  5239 00005FFB 3C5C                    		cmp	al, '\'
  5240 00005FFD 7508                    		jnz	short FOK
  5241 00005FFF AA                      		stosb
  5242 00006000 AC                      		lodsb
  5243 00006001 3C05                    		cmp	al, 5
  5244 00006003 7502                    		jnz	short FOK
  5245                                  
  5246                                  FCHANGE:				; ...
  5247 00006005 B0E5                    		mov	al, 0E5h
  5248                                  
  5249                                  FOK:					; ...
  5250 00006007 AA                      		stosb
  5251 00006008 08C0                    		or	al, al
  5252 0000600A 75EE                    		jnz	short FCPYNEXT
  5253 0000600C 58                      		pop	ax
  5254 0000600D 30C0                    		xor	al, al
  5255 0000600F E834F1                  		call	LCritDisk
  5256 00006012 E9CFE3                  		jmp	SYS_RETURN
  5257                                  ; ---------------------------------------------------------------------------
  5258                                  
  5259                                  _$RMDIR:				; ...
  5260 00006015 52                      		push	dx
  5261 00006016 1E                      		push	ds
  5262 00006017 89D6                    		mov	si, dx
  5263 00006019 BF[BE03]                		mov	di, OPENBUF
  5264 0000601C 57                      		push	di
  5265 0000601D E8254B                  		call	TransPathNoSet
  5266 00006020 5F                      		pop	di
  5267 00006021 7306                    		jnb	short rmlset
  5268 00006023 1F                      		pop	ds
  5269 00006024 5A                      		pop	dx
  5270 00006025 B003                    		mov	al, 3
  5271                                  
  5272                                  rmdir_errj:				; ...
  5273 00006027 EB8A                    		jmp	short curdir_errj
  5274                                  ; ---------------------------------------------------------------------------
  5275                                  
  5276                                  rmlset:					; ...
  5277 00006029 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
  5278 0000602F 7512                    		jnz	short rmerr
  5279 00006031 16                      		push	ss
  5280 00006032 07                      		pop	es
  5281 00006033 30C0                    		xor	al, al
  5282                                  
  5283                                  rmloop:					; ...
  5284 00006035 E87B4A                  		call	GetCDSFromDrv
  5285 00006038 720F                    		jb	short rmcont
  5286 0000603A E886EF                  		call	StrCmp
  5287 0000603D 7404                    		jz	short rmerr
  5288 0000603F FEC0                    		inc	al
  5289 00006041 EBF2                    		jmp	short rmloop
  5290                                  ; ---------------------------------------------------------------------------
  5291                                  
  5292                                  rmerr:					; ...
  5293 00006043 1F                      		pop	ds
  5294 00006044 5A                      		pop	dx
  5295 00006045 B010                    		mov	al, 10h		; error_current_directory
  5296                                  
  5297                                  chdir_errj:				; ...
  5298 00006047 EBDE                    		jmp	short rmdir_errj
  5299                                  ; ---------------------------------------------------------------------------
  5300                                  
  5301                                  rmcont:					; ...
  5302 00006049 1F                      		pop	ds
  5303 0000604A 5A                      		pop	dx
  5304 0000604B BE[0B71]                		mov	si, DOS_RMDIR
  5305                                  		;jmp	DoDirCall	; // NASM converts this to short jump 
  5306                                  		;nop
  5307                                  		;jmp	short DoDirCall
  5308 0000604E E9                      		db 0E9h			; // for locating _$CHDIR at 6051h 
  5309 0000604F 7F00                    		dw DoDirCall-($+2)
  5310                                  ; ---------------------------------------------------------------------------
  5311                                  
  5312                                  _$CHDIR:				; ...
  5313 00006051 BF[BE03]                		mov	di, OPENBUF
  5314 00006054 89D6                    		mov	si, dx
  5315 00006056 E8E04A                  		call	TransPath
  5316 00006059 7304                    		jnb	short ChDirCrack
  5317                                  
  5318                                  ChDirErrP:				; ...
  5319 0000605B B003                    		mov	al, 3		; error_path_not_found
  5320                                  
  5321                                  ChDirErr:				; ...
  5322 0000605D EBE8                    		jmp	short chdir_errj
  5323                                  ; ---------------------------------------------------------------------------
  5324                                  
  5325                                  ChDirCrack:				; ...
  5326 0000605F 803E[7A05]FF            		cmp	byte [CMETA], 0FFh ; -1
  5327 00006064 75F5                    		jnz	short ChDirErrP
  5328 00006066 C43E[A205]              		les	di, [THISCDS]
  5329 0000606A 83FFFF                  		cmp	di, 0FFFFh	; -1
  5330 0000606D 74EC                    		jz	short ChDirErrP
  5331 0000606F E85410                  		call	DOS_CHDIR
  5332 00006072 72E9                    		jb	short ChDirErr
  5333 00006074 C43E[A205]              		les	di, [THISCDS]
  5334 00006078 26F745430020            		test	word [es:di+43h], 2000h ; [ES:DI+curdir.flags],
  5335                                  					; curdir_splice
  5336 0000607E 7425                    		jz	short GotCDS
  5337 00006080 06                      		push	es
  5338 00006081 57                      		push	di
  5339 00006082 51                      		push	cx
  5340 00006083 E8EFE1                  		call	Get_User_Stack
  5341 00006086 8B7C06                  		mov	di, [si+6]	; [SI+user_env.user_DX]
  5342 00006089 8E5C0E                  		mov	ds, word [si+0Eh] ;	[SI+user_env.user_DS]
  5343 0000608C BE[BE03]                		mov	si, OPENBUF
  5344 0000608F 87F7                    		xchg	si, di
  5345 00006091 30C0                    		xor	al, al
  5346 00006093 57                      		push	di
  5347 00006094 E8AE4A                  		call	TransPathNoSet
  5348 00006097 5E                      		pop	si
  5349 00006098 C43E[A205]              		les	di, [THISCDS]
  5350 0000609C 26C74549FFFF            		mov	word [es:di+49h], 0FFFFh ; [ES:DI+curdir.ID]
  5351 000060A2 59                      		pop	cx
  5352 000060A3 5F                      		pop	di
  5353 000060A4 07                      		pop	es
  5354                                  
  5355                                  GotCDS:					; ...
  5356 000060A5 E85200                  		call	Check_PathLen
  5357 000060A8 77B1                    		ja	short ChDirErrP
  5358 000060AA 26F745430080            		test	word [es:di+43h], 8000h ; [ES:DI+curdir.flags],
  5359                                  					; curdir_isnet
  5360 000060B0 7513                    		jnz	short SkipRecency
  5361 000060B2 26F745430020            		test	word [es:di+43h], 2000h ; [ES:DI+curdir.flags],
  5362                                  					; curdir_splice
  5363 000060B8 7403                    		jz	short setdirclus
  5364 000060BA B9FFFF                  		mov	cx, 0FFFFh	; -1
  5365                                  
  5366                                  setdirclus:				; ...
  5367 000060BD 26894D49                		mov	[es:di+49h], cx	; [ES:DI+curdir.ID]
  5368 000060C1 C43E[A205]              		les	di, [THISCDS]
  5369                                  
  5370                                  SkipRecency:				; ...
  5371 000060C5 E82CEF                  		call	FStrCpy
  5372 000060C8 30C0                    		xor	al, al
  5373                                  
  5374                                  mkdir_ok:				; ...
  5375 000060CA E917E3                  		jmp	SYS_RETURN
  5376                                  ; ---------------------------------------------------------------------------
  5377                                  
  5378                                  _$MKDIR:				; ...
  5379 000060CD BE[C66F]                		mov	si, DOS_MKDIR
  5380                                  
  5381                                  DoDirCall:				; ...
  5382 000060D0 BF[BE03]                		mov	di, OPENBUF
  5383 000060D3 56                      		push	si
  5384 000060D4 89D6                    		mov	si, dx
  5385 000060D6 E8604A                  		call	TransPath
  5386 000060D9 5E                      		pop	si
  5387 000060DA 7305                    		jnb	short MkDirCrack
  5388                                  
  5389                                  MkErrP:					; ...
  5390 000060DC B003                    		mov	al, 3		; error_path_not_found
  5391                                  
  5392                                  MkErr:					; ...
  5393 000060DE E90CE3                  		jmp	SYS_RET_ERR
  5394                                  ; ---------------------------------------------------------------------------
  5395                                  
  5396                                  MkDirCrack:				; ...
  5397 000060E1 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
  5398 000060E7 75F3                    		jnz	short MkErrP
  5399 000060E9 56                      		push	si
  5400 000060EA E80D00                  		call	Check_PathLen
  5401 000060ED 5E                      		pop	si
  5402 000060EE 7604                    		jbe	short pathok
  5403 000060F0 B005                    		mov	al, 5		; error_access_denied
  5404 000060F2 EBEA                    		jmp	short MkErr
  5405                                  ; ---------------------------------------------------------------------------
  5406                                  
  5407                                  pathok:					; ...
  5408 000060F4 FFD6                    		call	si
  5409 000060F6 72E6                    		jb	short MkErr
  5410 000060F8 EBD0                    		jmp	short mkdir_ok
  5411                                  
  5412                                  ; =============== S U B	R O U T	I N E =======================================
  5413                                  
  5414                                  Check_PathLen:	; ...
  5415 000060FA 368B36[B205]            		mov	si, [ss:WFP_START]
  5416                                  
  5417                                  Check_PathLen2:				; ...
  5418 000060FF 16                      		push	ss
  5419 00006100 1F                      		pop	ds
  5420 00006101 51                      		push	cx
  5421 00006102 E806EF                  		call	DStrLen
  5422 00006105 83F943                  		cmp	cx, 67		; DIRSTRLEN
  5423 00006108 59                      		pop	cx
  5424 00006109 C3                      		retn
  5425                                  
  5426                                  ; ---------------------------------------------------------------------------
  5427 0000610A [4861]                  IOCTLJMPTABLE	dw ioctl_getset_data ; ...
  5428 0000610C [4861]                  		dw ioctl_getset_data
  5429 0000610E [9761]                  		dw ioctl_control_string
  5430 00006110 [9761]                  		dw ioctl_control_string
  5431 00006112 [F762]                  		dw ioctl_get_dev
  5432 00006114 [F762]                  		dw ioctl_get_dev
  5433 00006116 [B161]                  		dw ioctl_status
  5434 00006118 [B161]                  		dw ioctl_status
  5435 0000611A [5462]                  		dw ioctl_rem_media
  5436 0000611C [9262]                  		dw ioctl_drive_attr
  5437 0000611E [E662]                  		dw ioctl_handle_redir
  5438 00006120 [CF61]                  		dw Set_Retry_Parameters
  5439 00006122 [DD61]                  		dw GENERICIOCTLHANDLE
  5440 00006124 [F461]                  		dw GENERICIOCTL
  5441 00006126 [A463]                  		dw ioctl_drive_owner
  5442 00006128 [A463]                  		dw ioctl_drive_owner
  5443 0000612A [DD61]                  		dw GENERICIOCTLHANDLE
  5444 0000612C [F461]                  		dw GENERICIOCTL
  5445                                  
  5446                                  ; =============== S U B	R O U T	I N E =======================================
  5447                                  
  5448                                  _$IOCTL:
  5449                                  
  5450                                  ; FUNCTION CHUNK AT 628F SIZE 00000003 BYTES
  5451                                  ; FUNCTION CHUNK AT 62DF SIZE 00000002 BYTES
  5452                                  ; FUNCTION CHUNK AT 62E3 SIZE 00000003 BYTES
  5453                                  ; FUNCTION CHUNK AT 62F4 SIZE 00000003 BYTES
  5454                                  ; FUNCTION CHUNK AT 62FC SIZE 0000005E BYTES
  5455                                  
  5456 0000612E 8CDE                    		mov	si, ds
  5457 00006130 16                      		push	ss
  5458 00006131 1F                      		pop	ds
  5459 00006132 3C11                    		cmp	al, 11h
  5460 00006134 770F                    		ja	short ioctl_bad_funj2
  5461 00006136 50                      		push	ax
  5462 00006137 89C7                    		mov	di, ax
  5463 00006139 81E7FF00                		and	di, 0FFh
  5464 0000613D D1E7                    		shl	di, 1
  5465 0000613F 58                      		pop	ax
  5466 00006140 2EFFA5[0A61]            		jmp	[cs:IOCTLJMPTABLE+di]
  5467                                  ; ---------------------------------------------------------------------------
  5468                                  
  5469                                  ioctl_bad_funj2:			; ...
  5470 00006145 E90401                  		jmp	ioctl_bad_fun
  5471                                  ; ---------------------------------------------------------------------------
  5472                                  
  5473                                  ioctl_getset_data:			; ...
  5474 00006148 E8DF44                  		call	SFFromHandle
  5475 0000614B 7305                    		jnb	short ioctl_check_permissions
  5476                                  
  5477                                  ioctl_bad_handle:			; ...
  5478 0000614D B006                    		mov	al, 6		; error_invalid_handle
  5479                                  
  5480                                  ioctl_error:				; ...
  5481 0000614F E99BE2                  		jmp	SYS_RET_ERR
  5482                                  ; ---------------------------------------------------------------------------
  5483                                  
  5484                                  ioctl_check_permissions:		; ...
  5485 00006152 3C00                    		cmp	al, 0
  5486 00006154 268A4505                		mov	al, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  5487 00006158 741B                    		jz	short ioctl_read
  5488 0000615A 08F6                    		or	dh, dh
  5489 0000615C 7404                    		jz	short ioctl_check_device
  5490 0000615E B00D                    		mov	al, 0Dh		; error_invalid_data
  5491 00006160 EBED                    		jmp	short ioctl_error
  5492                                  ; ---------------------------------------------------------------------------
  5493                                  
  5494                                  ioctl_check_device:			; ...
  5495 00006162 A880                    		test	al, 80h		; devid_device
  5496 00006164 74DF                    		jz	short ioctl_bad_funj2
  5497 00006166 80CA80                  		or	dl, 80h		; devid_device
  5498 00006169 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  5499 0000616E 26885505                		mov	[es:di+5], dl	; [ES:DI+SF_ENTRY.sf_flags]
  5500                                  
  5501                                  ioctl_ok:				; ...
  5502 00006172 E96FE2                  		jmp	SYS_RETURN	; SYS_RET_OK
  5503                                  ; ---------------------------------------------------------------------------
  5504                                  
  5505                                  ioctl_read:				; ...
  5506 00006175 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2
  5507 0000617A 30E4                    		xor	ah, ah
  5508 0000617C A880                    		test	al, 80h		; devid_device
  5509 0000617E 740D                    		jz	short ioctl_no_high
  5510 00006180 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  5511 00006185 26C47D07                		les	di, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  5512 00006189 268A6505                		mov	ah, [es:di+5]	; [ES:DI+SYSDEV.ATT+1]
  5513                                  
  5514                                  ioctl_no_high:				; ...
  5515 0000618D 89C2                    		mov	dx, ax
  5516 0000618F E8E3E0                  		call	Get_User_Stack
  5517 00006192 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  5518                                  
  5519                                  ioctl_ok_j:				; ...
  5520 00006195 EBDB                    		jmp	short ioctl_ok
  5521                                  ; ---------------------------------------------------------------------------
  5522                                  
  5523                                  ioctl_control_string:			; ...
  5524 00006197 E89044                  		call	SFFromHandle
  5525 0000619A 72B1                    		jb	short ioctl_bad_handle
  5526 0000619C 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  5527                                  					; devid_device
  5528 000061A1 74A2                    		jz	short ioctl_bad_funj2
  5529 000061A3 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; [EXTERR_LOCUS],errLOC_SerDev
  5530 000061A8 26C47D07                		les	di, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  5531 000061AC 30DB                    		xor	bl, bl
  5532 000061AE E94B01                  		jmp	ioctl_do_string
  5533                                  ; ---------------------------------------------------------------------------
  5534                                  
  5535                                  ioctl_status:				; ...
  5536 000061B1 B401                    		mov	ah, 1
  5537 000061B3 2C06                    		sub	al, 6
  5538 000061B5 7402                    		jz	short ioctl_get_status
  5539 000061B7 B403                    		mov	ah, 3
  5540                                  
  5541                                  ioctl_get_status:			; ...
  5542 000061B9 50                      		push	ax
  5543 000061BA E8B213                  		call	GET_IO_SFT
  5544 000061BD 58                      		pop	ax
  5545 000061BE 7302                    		jnb	short DO_IOFUNC
  5546 000061C0 EB8B                    		jmp	short ioctl_bad_handle
  5547                                  ; ---------------------------------------------------------------------------
  5548                                  
  5549                                  DO_IOFUNC:				; ...
  5550 000061C2 E81322                  		call	IOFUNC
  5551 000061C5 88C4                    		mov	ah, al
  5552 000061C7 B0FF                    		mov	al, 0FFh
  5553 000061C9 7502                    		jnz	short ioctl_status_ret
  5554 000061CB FEC0                    		inc	al
  5555                                  
  5556                                  ioctl_status_ret:			; ...
  5557 000061CD EBC6                    		jmp	short ioctl_ok_j
  5558                                  ; ---------------------------------------------------------------------------
  5559                                  
  5560                                  Set_Retry_Parameters:			; ...
  5561 000061CF 890E[1C00]              		mov	[RetryLoop],	cx
  5562 000061D3 09D2                    		or	dx, dx
  5563 000061D5 7475                    		jz	short ioctl_bad_fun
  5564 000061D7 8916[1A00]              		mov	[RetryCount], dx
  5565 000061DB EBF0                    		jmp	short ioctl_status_ret
  5566                                  ; ---------------------------------------------------------------------------
  5567                                  
  5568                                  GENERICIOCTLHANDLE:			; ...
  5569 000061DD E84A44                  		call	SFFromHandle
  5570 000061E0 726F                    		jb	short ioctl_bad_handlej
  5571 000061E2 26F6450680              		test	byte [es:di+6], 80h	; [ES:DI+SF_ENTRY.sf_flags+1],
  5572                                  					; (sf_isnet>>8)
  5573 000061E7 7563                    		jnz	short ioctl_bad_fun
  5574 000061E9 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  5575 000061EE 26C47D07                		les	di, [es:di+7]	; [es:di+SF_ENTRY.sf_devptr]
  5576 000061F2 EB0F                    		jmp	short Do_GenIOCTL
  5577                                  ; ---------------------------------------------------------------------------
  5578                                  
  5579                                  GENERICIOCTL:				; ...
  5580 000061F4 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  5581 000061F9 80FD08                  		cmp	ch, 8		; IOC_DC
  5582 000061FC 754E                    		jnz	short ioctl_bad_fun
  5583 000061FE E88701                  		call	Check_If_Net
  5584 00006201 7549                    		jnz	short ioctl_bad_fun
  5585                                  
  5586                                  Do_GenIOCTL:				; ...
  5587 00006203 26F6450440              		test	byte [es:di+4], 40h ; [ES:DI+SYSDEV.ATT],
  5588                                  					; DEV320
  5589 00006208 7442                    		jz	short ioctl_bad_fun
  5590 0000620A C606[7E03]13            		mov	byte [IOCALL_REQFUNC], 13h ; GENIOCTL
  5591 0000620F 3C10                    		cmp	al, 10h		; IOCTL_QUERY_HANDLE
  5592 00006211 7C0C                    		jl	short SetIOCtlBlock
  5593 00006213 26F6450480              		test	byte [es:di+4], 80h ; [ES:DI+SYSDEV.ATT],IOQUERY
  5594 00006218 7432                    		jz	short ioctl_bad_fun
  5595 0000621A C606[7E03]19            		mov	byte [IOCALL_REQFUNC], 19h ; IOCTL_QUERY
  5596                                  
  5597                                  SetIOCtlBlock:				; ...
  5598 0000621F 06                      		push	es
  5599 00006220 57                      		push	di
  5600 00006221 C606[7C03]17            		mov	byte [IOCALL_REQLEN], 17h ; IOCTL_REQ.size
  5601 00006226 881E[7D03]              		mov	[IOCALL_REQUNIT], bl
  5602 0000622A 882E[8903]              		mov	[IOCTL_REQ_MAJORFUNCTION], ch ; [IOCALL+IOCTL_REQ.MAJORFUNCTION]
  5603 0000622E 880E[8A03]              		mov	[IOCTL_REQ_MINORFUNCTION], cl ; [IOCALL+IOCTL_REQ.MINORFUNCTION]
  5604 00006232 8936[8B03]              		mov	word [IOCTL_REQ_REG_SI], si ; [IOCALL+IOCTL_REQ.REG_SI]
  5605 00006236 893E[8D03]              		mov	word [IOCTL_REQ_REG_DI], di ; [IOCALL+IOCTL_REQ.REG_DI]
  5606 0000623A 8916[8F03]              		mov	[IOCTL_REQ_GENERICIOCTL_PACKET], dx ; [IOCALL+IOCTL_REQ.GENERICIOCTL_PACKET]
  5607 0000623E 8936[9103]              		mov	word [IOCTL_REQ_GENERICIOCTL_PACKET_2], si ; [IOCALL+IOCTL_REQ.GENERICIOCTL_PACKET+2]
  5608 00006242 BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL
  5609 00006245 16                      		push	ss
  5610 00006246 07                      		pop	es
  5611 00006247 5E                      		pop	si
  5612 00006248 1F                      		pop	ds
  5613 00006249 E9E900                  		jmp	ioctl_do_IO
  5614                                  ; ---------------------------------------------------------------------------
  5615                                  
  5616                                  ioctl_bad_fun:				; ...
  5617 0000624C B001                    		mov	al, 1		; error_invalid_function
  5618 0000624E E99CE1                  		jmp	SYS_RET_ERR
  5619                                  ; ---------------------------------------------------------------------------
  5620                                  
  5621                                  ioctl_bad_handlej:			; ...
  5622 00006251 E9F9FE                  		jmp	ioctl_bad_handle
  5623                                  
  5624                                  ; ---------------------------------------------------------------------------
  5625                                  
  5626                                  ioctl_rem_media:			; ...
  5627 00006254 E83101                  		call	Check_If_Net
  5628 00006257 75F3                    		jnz	short ioctl_bad_fun
  5629 00006259 26F6450508              		test	byte [es:di+5], 8 ;	[es:di+SYSDEV.ATT+1],
  5630                                  					; (DEVOPCL>>8)
  5631 0000625E 74EC                    		jz	short ioctl_bad_fun
  5632 00006260 36C606[7E03]0F          		mov	byte [ss:IOCALL_REQFUNC], 0Fh ; DEVRMD ; 15
  5633 00006266 B00D                    		mov	al, 0Dh		; REMHL	; 13
  5634 00006268 88DC                    		mov	ah, bl
  5635 0000626A 36A3[7C03]              		mov	word [ss:IOCALL_REQLEN], ax
  5636 0000626E 31C0                    		xor	ax, ax
  5637 00006270 36A3[7F03]              		mov	word [ss:IOCALL_REQSTAT], ax
  5638 00006274 06                      		push	es
  5639 00006275 1F                      		pop	ds
  5640 00006276 89FE                    		mov	si, di
  5641 00006278 16                      		push	ss
  5642 00006279 07                      		pop	es
  5643 0000627A BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL
  5644 0000627D 1E                      		push	ds
  5645 0000627E 56                      		push	si
  5646 0000627F E83023                  		call	DEVIOCALL2
  5647 00006282 5E                      		pop	si
  5648 00006283 1F                      		pop	ds
  5649 00006284 36A1[7F03]              		mov	ax, word [ss:IOCALL_REQSTAT]
  5650 00006288 250002                  		and	ax, 200h	; STBUI
  5651 0000628B B109                    		mov	cl, 9
  5652 0000628D D3E8                    		shr	ax, cl
  5653                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5654                                  
  5655                                  ioctl_da_ok_j:				; ...
  5656 0000628F E952E1                  		jmp	SYS_RETURN	; SYS_RET_OK
  5657                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5658                                  ; ---------------------------------------------------------------------------
  5659                                  
  5660                                  ioctl_drive_attr:			; ...
  5661 00006292 88D8                    		mov	al, bl
  5662 00006294 E8C547                  		call	GETTHISDRV
  5663 00006297 7248                    		jb	short ioctl_drv_err
  5664 00006299 E8BE00                  		call	Get_Driver_BL
  5665 0000629C 7243                    		jb	short ioctl_drv_err
  5666 0000629E 268B5504                		mov	dx, [es:di+4]	; [es:di+SYSDEV.ATT]
  5667 000062A2 88C3                    		mov	bl, al
  5668 000062A4 36C43E[A205]            		les	di, [ss:THISCDS]
  5669 000062A9 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  5670                                  					; (curdir_isnet>>8)
  5671 000062AE 7403                    		jz	short IOCTLShare
  5672 000062B0 BA0010                  		mov	dx, 1000h
  5673                                  
  5674                                  IOCTLShare:				; ...
  5675 000062B3 16                      		push	ss
  5676 000062B4 1F                      		pop	ds
  5677 000062B5 BE[BE03]                		mov	si, OPENBUF
  5678 000062B8 80C341                  		add	bl, 'A'         ; 41h
  5679 000062BB 881C                    		mov	[si], bl
  5680 000062BD C744013A00              		mov	word [si+1], 3Ah ; ':'
  5681 000062C2 B80003                  		mov	ax, 300h
  5682 000062C5 F8                      		clc
  5683 000062C6 CD2A                    		int	2Ah		; Microsoft Networks - CHECK DIRECT I/O
  5684                                  					; DS:SI	-> ASCIZ disk device name (may be full path or only drive
  5685                                  					; specifier--must include the colon)
  5686                                  					; Return: CF clear if absolute disk access allowed
  5687 000062C8 7304                    		jnb	short IOCTLLocal
  5688 000062CA 81CA0002                		or	dx, 200h
  5689                                  
  5690                                  IOCTLLocal:				; ...
  5691 000062CE 26F6454410              		test	byte [es:di+44h], 10h ; [ES:DI+curdir.flags+1],
  5692                                  					; (curdir_local>>8)
  5693 000062D3 7404                    		jz	short ioctl_set_DX
  5694 000062D5 81CA0080                		or	dx, 8000h
  5695                                  
  5696                                  ioctl_set_DX:				; ...
  5697 000062D9 E899DF                  		call	Get_User_Stack
  5698 000062DC 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  5699                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5700                                  
  5701                                  ioctl_gd_ok_j:				; ...
  5702 000062DF EBAE                    		jmp	short ioctl_da_ok_j
  5703                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5704                                  ; ---------------------------------------------------------------------------
  5705                                  
  5706                                  ioctl_drv_err:				; ...
  5707 000062E1 B00F                    		mov	al, 0Fh		; error_invalid_drive
  5708                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5709                                  
  5710                                  ioctl_gd_err_j:				; ...
  5711 000062E3 E907E1                  		jmp	SYS_RET_ERR
  5712                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5713                                  ; ---------------------------------------------------------------------------
  5714                                  
  5715                                  ioctl_handle_redir:			; ...
  5716 000062E6 E84143                  		call	SFFromHandle
  5717 000062E9 7303                    		jnb	short ioctl_got_sft
  5718 000062EB E95FFE                  		jmp	ioctl_bad_handle
  5719                                  ; ---------------------------------------------------------------------------
  5720                                  
  5721                                  ioctl_got_sft:				; ...
  5722 000062EE 268B5505                		mov	dx, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  5723 000062F2 EBE5                    		jmp	short ioctl_set_DX
  5724                                  ; ---------------------------------------------------------------------------
  5725                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5726                                  
  5727                                  ioctl_bad_funj:				; ...
  5728 000062F4 E955FF                  		jmp	ioctl_bad_fun
  5729                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5730                                  ; ---------------------------------------------------------------------------
  5731                                  
  5732                                  ioctl_get_dev:				; ...
  5733 000062F7 E88E00                  		call	Check_If_Net
  5734 000062FA 75F8                    		jnz	short ioctl_bad_funj
  5735                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5736                                  
  5737                                  ioctl_do_string:			; ...
  5738 000062FC 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+SYSDEV.ATT+1],
  5739                                  					; (DEVIOCTL>>8)
  5740 00006301 74F1                    		jz	short ioctl_bad_funj
  5741 00006303 C606[7E03]03            		mov	byte [IOCALL_REQFUNC], 3 ; DEVRDIOCTL
  5742 00006308 A801                    		test	al, 1
  5743 0000630A 7405                    		jz	short ioctl_control_call
  5744 0000630C C606[7E03]0C            		mov	byte [IOCALL_REQFUNC], 12 ; [IOCALL_REQFUNC],
  5745                                  					; DEVWRIOCTL
  5746                                  
  5747                                  ioctl_control_call:			; ...
  5748 00006311 B016                    		mov	al, 22		; DRDWRHL
  5749 00006313 88DC                    		mov	ah, bl
  5750 00006315 A3[7C03]                		mov	word [IOCALL_REQLEN], ax
  5751 00006318 31C0                    		xor	ax, ax
  5752 0000631A A3[7F03]                		mov	word [IOCALL_REQSTAT], ax
  5753 0000631D A2[8903]                		mov	[IOCTL_REQ_MAJORFUNCTION], al ; [IOMED]
  5754 00006320 890E[8E03]              		mov	word [IOCTL_IOSCNT], cx ; [IOSCNT]
  5755 00006324 8916[8A03]              		mov	word [IOCTL_REQ_MINORFUNCTION], dx ; [IOXAD]
  5756 00006328 8936[8C03]              		mov	word [IOCTL_IOXAD_2], si	; [IOXAD+2]
  5757 0000632C 06                      		push	es
  5758 0000632D 1F                      		pop	ds
  5759 0000632E 89FE                    		mov	si, di
  5760 00006330 16                      		push	ss
  5761 00006331 07                      		pop	es
  5762 00006332 BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL
  5763                                  
  5764                                  ioctl_do_IO:				; ...
  5765 00006335 E87A22                  		call	DEVIOCALL2
  5766 00006338 36F606[8003]80          		test	byte [ss:IOCALL_REQSTAT+1], 80h ; [SS:IOCALL_REQSTAT+1],
  5767                                  					; (STERR>>8)
  5768 0000633E 7506                    		jnz	short ioctl_string_err
  5769 00006340 36A1[8E03]              		mov	ax, word [ss:IOCTL_IOSCNT] ; [SS:IOSCNT]
  5770 00006344 EB99                    		jmp	short ioctl_gd_ok_j
  5771                                  ; ---------------------------------------------------------------------------
  5772                                  
  5773                                  ioctl_string_err:			; ...
  5774 00006346 368B3E[7F03]            		mov	di, word [ss:IOCALL_REQSTAT]
  5775                                  
  5776                                  device_err:				;
  5777 0000634B 81E7FF00                		and	di, 0FFh	; STECODE
  5778 0000634F 89F8                    		mov	ax, di
  5779 00006351 E82331                  		call	SET_I24_EXTENDED_ERROR
  5780 00006354 36A1[2403]              		mov	ax, [ss:EXTERR]
  5781 00006358 EB89                    		jmp	short ioctl_gd_err_j
  5782                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5783                                  
  5784                                  ; =============== S U B	R O U T	I N E =======================================
  5785                                  
  5786                                  Get_Driver_BL:	; ...
  5787 0000635A 50                      		push	ax
  5788 0000635B 88D8                    		mov	al, bl
  5789 0000635D E8FC46                  		call	GETTHISDRV
  5790 00006360 7224                    		jb	short ioctl_bad_drv
  5791 00006362 30DB                    		xor	bl, bl
  5792 00006364 C606[2303]03            		mov	byte [EXTERR_LOCUS], 3 ; errLOC_Net
  5793 00006369 C43E[A205]              		les	di, [THISCDS]
  5794 0000636D 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  5795                                  					; (curdir_isnet>>8)
  5796 00006372 26C47D45                		les	di, [es:di+45h]	; [ES:DI+curdir.devptr]
  5797 00006376 750D                    		jnz	short got_dev_ptr
  5798 00006378 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  5799 0000637D 268A5D01                		mov	bl, [es:di+1]	; [ES:DI+DPB.UNIT]
  5800 00006381 26C47D13                		les	di, [es:di+13h]	; [ES:DI+DPB.DRIVER_ADDR]
  5801                                  
  5802                                  got_dev_ptr:				; ...
  5803 00006385 F8                      		clc
  5804                                  
  5805                                  ioctl_bad_drv:				; ...
  5806 00006386 58                      		pop	ax
  5807 00006387 C3                      		retn
  5808                                  
  5809                                  ; ---------------------------------------------------------------------------
  5810                                  
  5811                                  Check_If_Net:				; ...
  5812 00006388 E8CFFF                  		call	Get_Driver_BL
  5813 0000638B 720E                    		jb	short ioctl_drv_err_pop
  5814 0000638D 06                      		push	es
  5815 0000638E 57                      		push	di
  5816 0000638F C43E[A205]              		les	di, [THISCDS]
  5817 00006393 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  5818                                  					; (curdir_isnet>>8)
  5819 00006398 5F                      		pop	di
  5820 00006399 07                      		pop	es
  5821 0000639A C3                      		retn
  5822                                  ; ---------------------------------------------------------------------------
  5823                                  
  5824                                  ioctl_drv_err_pop:			; ...
  5825 0000639B 58                      		pop	ax
  5826 0000639C E942FF                  		jmp	ioctl_drv_err
  5827                                  ; ---------------------------------------------------------------------------
  5828                                  
  5829                                  ioctl_bad_funj3:			; ...
  5830 0000639F E9AAFE                  		jmp	ioctl_bad_fun
  5831                                  ; ---------------------------------------------------------------------------
  5832                                  
  5833                                  ioctl_string_errj:			; ...
  5834 000063A2 EBA2                    		jmp	short ioctl_string_err
  5835                                  ; ---------------------------------------------------------------------------
  5836                                  
  5837                                  ioctl_drive_owner:			; ...
  5838 000063A4 E8E1FF                  		call	Check_If_Net
  5839 000063A7 75F6                    		jnz	short ioctl_bad_funj3
  5840 000063A9 26F6450440              		test	byte [es:di+4], 40h ; [ES:DI+SYSDEV.ATT],
  5841                                  					; DEV320
  5842 000063AE 74EF                    		jz	short ioctl_bad_funj3
  5843 000063B0 C606[7E03]17            		mov	byte [IOCALL_REQFUNC], 23 ; DEVGETOWN
  5844 000063B5 3C0E                    		cmp	al, 0Eh
  5845 000063B7 7405                    		jz	short GetOwner
  5846                                  
  5847                                  SetOwner:				; DEVSETOWN
  5848 000063B9 C606[7E03]18            		mov	byte [IOCALL_REQFUNC], 24
  5849                                  
  5850                                  GetOwner:				; ...
  5851 000063BE B00D                    		mov	al, 13		; OWNHL
  5852 000063C0 88DC                    		mov	ah, bl
  5853 000063C2 A3[7C03]                		mov	word [IOCALL_REQLEN], ax
  5854 000063C5 31C0                    		xor	ax, ax
  5855 000063C7 A3[7F03]                		mov	word [IOCALL_REQSTAT], ax
  5856 000063CA 06                      		push	es
  5857 000063CB 1F                      		pop	ds
  5858 000063CC 89FE                    		mov	si, di
  5859 000063CE 16                      		push	ss
  5860 000063CF 07                      		pop	es
  5861 000063D0 BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL
  5862 000063D3 1E                      		push	ds
  5863 000063D4 56                      		push	si
  5864 000063D5 E8DA21                  		call	DEVIOCALL2
  5865 000063D8 5E                      		pop	si
  5866 000063D9 1F                      		pop	ds
  5867 000063DA 36F606[8003]80          		test	byte [ss:IOCALL_REQSTAT+1], 80h ; (STERR>>8)
  5868 000063E0 75C0                    		jnz	short ioctl_string_errj
  5869 000063E2 36A0[7D03]              		mov	al, [ss:IOCALL_REQUNIT]
  5870 000063E6 E9FBDF                  		jmp	SYS_RETURN	; SYS_RET_OK
  5871                                  
  5872                                  ; =============== S U B	R O U T	I N E =======================================
  5873                                  
  5874                                  DOS_DELETE:		; ...
  5875 000063E9 E875EC                  		call	TestNet
  5876 000063EC 7306                    		jnb	short LOCAL_DELETE
  5877 000063EE B81311                  		mov	ax, 1113h
  5878 000063F1 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - DELETE REMOTE FILE
  5879                                  					; SS = DS = DOS	CS, SDA	first filename pointer -> fully-qualified filename in DOS CS
  5880                                  					; SDA CDS pointer -> current directory structure for drive with	file
  5881                                  					; Return: CF set on error
  5882 000063F3 C3                      		retn
  5883                                  ; ---------------------------------------------------------------------------
  5884                                  
  5885                                  LOCAL_DELETE:				; ...
  5886 000063F4 C606[6F05]00            		mov	byte [FOUNDDEL], 0
  5887 000063F9 E82AED                  		call	ECritDisk
  5888 000063FC C706[7E05]00E5          		mov	word [CREATING], 0E500h ; DIRFREE*256+0
  5889 00006402 8B36[B205]              		mov	si, [WFP_START]
  5890                                  
  5891                                  SKPNUL:					; ...
  5892 00006406 AC                      		lodsb
  5893 00006407 08C0                    		or	al, al
  5894 00006409 75FB                    		jnz	short SKPNUL
  5895 0000640B 83EE04                  		sub	si, 4
  5896 0000640E 813C2A2E                		cmp	word [si], 2E2Ah ; "*."
  5897 00006412 7506                    		jnz	short TEST_QUEST
  5898 00006414 807C022A                		cmp	byte [si+2], '*'
  5899 00006418 741F                    		jz	short CHECK_ATTS
  5900                                  
  5901                                  TEST_QUEST:				; ...
  5902 0000641A 83EE09                  		sub	si, 9
  5903 0000641D 87FE                    		xchg	di, si
  5904 0000641F 16                      		push	ss
  5905 00006420 07                      		pop	es
  5906 00006421 B83F3F                  		mov	ax, '??'        ; 3F3Fh
  5907 00006424 B90400                  		mov	cx, 4
  5908 00006427 F3AF                    		repe scasw
  5909 00006429 751C                    		jnz	short NOT_ALL
  5910 0000642B 87FE                    		xchg	di, si
  5911 0000642D AD                      		lodsw
  5912 0000642E 3D2E3F                  		cmp	ax, 3F2Eh	; ".?"
  5913 00006431 7514                    		jnz	short NOT_ALL
  5914 00006433 AD                      		lodsw
  5915 00006434 3D3F3F                  		cmp	ax, '??'
  5916 00006437 750E                    		jnz	short NOT_ALL
  5917                                  
  5918                                  CHECK_ATTS:				; ...
  5919 00006439 A0[6D05]                		mov	al, [SATTRIB]
  5920 0000643C 241F                    		and	al, 1Fh		; attr_hidden+attr_system+attr_directory
  5921                                  					; +attr_volume_id+attr_read_only
  5922 0000643E 3C1F                    		cmp	al, 1Fh
  5923 00006440 7505                    		jnz	short NOT_ALL
  5924 00006442 C606[7F05]00            		mov	byte [DELALL], 0
  5925                                  
  5926                                  NOT_ALL:				; ...
  5927 00006447 C606[4C03]01            		mov	byte [NoSetDir], 1
  5928 0000644C E8F819                  		call	GetPathNoSet
  5929 0000644F 7313                    		jnb	short Del_found
  5930 00006451 750C                    		jnz	short _bad_path
  5931 00006453 08C9                    		or	cl, cl
  5932 00006455 7408                    		jz	short _bad_path
  5933                                  
  5934                                  No_file:				; ...
  5935 00006457 B80200                  		mov	ax, 2		; error_file_not_found
  5936                                  
  5937                                  ErrorReturn:				; ...
  5938 0000645A F9                      		stc
  5939 0000645B E8E8EC                  		call	LCritDisk
  5940 0000645E C3                      		retn
  5941                                  ; ---------------------------------------------------------------------------
  5942                                  
  5943                                  _bad_path:				; ...
  5944 0000645F B80300                  		mov	ax, 3		; error_path_not_found
  5945 00006462 EBF6                    		jmp	short ErrorReturn
  5946                                  ; ---------------------------------------------------------------------------
  5947                                  
  5948                                  Del_found:				; ...
  5949 00006464 750C                    		jnz	short NOT_DIR
  5950 00006466 803E[7F05]00            		cmp	byte [DELALL], 0
  5951 0000646B 7405                    		jz	short NOT_DIR
  5952                                  
  5953                                  Del_access_err:				; ...
  5954 0000646D B80500                  		mov	ax, 5		; error_access_denied
  5955 00006470 EBE8                    		jmp	short ErrorReturn
  5956                                  ; ---------------------------------------------------------------------------
  5957                                  
  5958                                  NOT_DIR:				; ...
  5959 00006472 08E4                    		or	ah, ah
  5960 00006474 78F7                    		js	short Del_access_err
  5961                                  
  5962                                  DELFILE:				; ...
  5963 00006476 800E[6F05]01            		or	byte [FOUNDDEL], 1 ; FILEFOUND
  5964 0000647B 1E                      		push	ds
  5965 0000647C 8A26[7F05]              		mov	ah, [DELALL]
  5966 00006480 C53E[E205]              		lds	di, [CURBUF]
  5967 00006484 36F606[6B05]01          		test	byte [ss:ATTRIB], 1 ; attr_read_only
  5968 0000648A 7509                    		jnz	short DoDelete
  5969 0000648C F6470B01                		test	byte [bx+0Bh], 1 ; [BX+dir_entry.dir_attr],
  5970                                  					; attr_read_only
  5971 00006490 7403                    		jz	short DoDelete
  5972 00006492 1F                      		pop	ds
  5973 00006493 EB32                    		jmp	short DELNXT
  5974                                  ; ---------------------------------------------------------------------------
  5975                                  
  5976                                  DoDelete:				; ...
  5977 00006495 E88500                  		call	REN_DEL_Check
  5978 00006498 7303                    		jnb	short DEL_SHARE_OK
  5979 0000649A 1F                      		pop	ds
  5980 0000649B EB2A                    		jmp	short DELNXT
  5981                                  ; ---------------------------------------------------------------------------
  5982                                  
  5983                                  DEL_SHARE_OK:				; ...
  5984 0000649D F6450540                		test	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
  5985 000064A1 7507                    		jnz	short yesdirty
  5986 000064A3 E84036                  		call	INC_DIRTY_COUNT
  5987 000064A6 804D0540                		or	byte [di+5], 40h
  5988                                  
  5989                                  yesdirty:				; ...
  5990 000064AA 8827                    		mov	[bx], ah	; [BX+dir_entry.dir_name]
  5991 000064AC 8B1C                    		mov	bx, [si]
  5992 000064AE 1F                      		pop	ds
  5993 000064AF 800E[6F05]10            		or	byte [FOUNDDEL], 10h ; FILEDELETED
  5994 000064B4 83FB02                  		cmp	bx, 2
  5995 000064B7 720E                    		jb	short DELNXT
  5996 000064B9 263B5E0D                		cmp	bx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
  5997 000064BD 7708                    		ja	short DELNXT
  5998 000064BF E87729                  		call	RELEASE
  5999 000064C2 7253                    		jb	short No_fileJ
  6000 000064C4 E8C400                  		call	FastOpen_Delete
  6001                                  
  6002                                  DELNXT:					; ...
  6003 000064C7 C42E[8A05]              		les	bp, [THISDPB]
  6004 000064CB E8DC18                  		call	GETENTRY
  6005 000064CE 7247                    		jb	short No_fileJ
  6006 000064D0 E80E18                  		call	NEXTENT
  6007 000064D3 73A1                    		jnb	short DELFILE
  6008 000064D5 C42E[8A05]              		les	bp, [THISDPB]
  6009 000064D9 268A4600                		mov	al, [es:bp+0]
  6010 000064DD E8FA34                  		call	FLUSHBUF
  6011 000064E0 7235                    		jb	short No_fileJ
  6012 000064E2 F606[6F05]10            		test	byte [FOUNDDEL], 10h ; FILEDELETED
  6013 000064E7 7427                    		jz	short DelError
  6014 000064E9 F606[6B05]08            		test	byte [ATTRIB], 8 ; attr_volume_id
  6015 000064EE 741C                    		jz	short No_Set_Flag
  6016 000064F0 50                      		push	ax
  6017 000064F1 06                      		push	es
  6018 000064F2 57                      		push	di
  6019 000064F3 C43E[A205]              		les	di, [THISCDS]
  6020 000064F7 268A25                  		mov	ah, [es:di]
  6021 000064FA 80EC41                  		sub	ah, 'A'
  6022 000064FD 8826[A10A]              		mov	[VOLCHNG_FLAG], ah
  6023 00006501 30FF                    		xor	bh, bh
  6024 00006503 E8EE04                  		call	Set_Media_ID
  6025 00006506 E86031                  		call	FATREAD_CDS
  6026 00006509 5F                      		pop	di
  6027 0000650A 07                      		pop	es
  6028 0000650B 58                      		pop	ax
  6029                                  
  6030                                  No_Set_Flag:				; ...
  6031 0000650C E837EC                  		call	LCritDisk
  6032 0000650F C3                      		retn
  6033                                  ; ---------------------------------------------------------------------------
  6034                                  
  6035                                  DelError:				; ...
  6036 00006510 F606[6F05]01            		test	byte [FOUNDDEL], 1 ; FILEFOUND
  6037 00006515 7503                    		jnz	short Del_access_errJ
  6038                                  
  6039                                  No_fileJ:				; ...
  6040 00006517 E93DFF                  		jmp	No_file
  6041                                  ; ---------------------------------------------------------------------------
  6042                                  
  6043                                  Del_access_errJ:			; ...
  6044 0000651A E950FF                  		jmp	Del_access_err
  6045                                  
  6046                                  ; =============== S U B	R O U T	I N E =======================================
  6047                                  
  6048                                  REN_DEL_Check:	; ...
  6049 0000651D 1E                      		push	ds
  6050 0000651E 57                      		push	di
  6051 0000651F 50                      		push	ax
  6052 00006520 53                      		push	bx
  6053 00006521 56                      		push	si
  6054 00006522 16                      		push	ss
  6055 00006523 07                      		pop	es
  6056 00006524 368B3E[B205]            		mov	di, [ss:WFP_START]
  6057 00006529 89DE                    		mov	si, bx
  6058 0000652B 368E1E[E405]            		mov	ds, word [ss:CURBUF+2]
  6059 00006530 89FB                    		mov	bx, di
  6060 00006532 83C302                  		add	bx, 2
  6061 00006535 E8C5EA                  		call	StrLen
  6062 00006538 49                      		dec	cx
  6063 00006539 01CF                    		add	di, cx
  6064 0000653B E8E047                  		call	SkipBack
  6065 0000653E 47                      		inc	di
  6066 0000653F 36893E[0106]            		mov	[ss:SAVE_BX], di
  6067 00006544 E815FA                  		call	PackName
  6068 00006547 5E                      		pop	si
  6069 00006548 5B                      		pop	bx
  6070 00006549 53                      		push	bx
  6071 0000654A 56                      		push	si
  6072 0000654B 16                      		push	ss
  6073 0000654C 1F                      		pop	ds
  6074                                  		;call	dword [ShCloseFile] ; Call far [JShare+(13*4)]
  6075 0000654D FF1E[C400]              		call	far [JShare+(13*4)]
  6076 00006551 8C1E[A005]              		mov	word [THISSFT+2], ds
  6077 00006555 C706[9E05]6507          		mov	word [THISSFT], 765h ; AUXSTACK-SF_ENTRY.size
  6078 0000655B 30E4                    		xor	ah, ah
  6079 0000655D E84925                  		call	DOOPEN
  6080 00006560 C43E[9E05]              		les	di, [THISSFT]
  6081 00006564 26C745021000            		mov	word [es:di+2], 10h	; [ES:DI+SF_ENTRY.sf_mode],
  6082                                  					; SHARING_DENY_BOTH
  6083 0000656A 26C7050100              		mov	word [es:di], 1 ; [ES:DI+SF_ENTRY.sf_ref_count]
  6084 0000656F E8E64D                  		call	ShareEnter
  6085 00006572 720D                    		jb	short CheckDone
  6086 00006574 C43E[9E05]              		les	di, [THISSFT]
  6087 00006578 26C7050000              		mov	word [es:di], 0
  6088 0000657D E8D34D                  		call	ShareEnd
  6089 00006580 F8                      		clc
  6090                                  
  6091                                  CheckDone:				; ...
  6092 00006581 C42E[8A05]              		les	bp, [THISDPB]
  6093 00006585 5E                      		pop	si
  6094 00006586 5B                      		pop	bx
  6095 00006587 58                      		pop	ax
  6096 00006588 5F                      		pop	di
  6097 00006589 1F                      		pop	ds
  6098 0000658A C3                      		retn
  6099                                  
  6100                                  ; ---------------------------------------------------------------------------
  6101                                  
  6102                                  FastOpen_Delete:			; ...
  6103 0000658B 9C                      		pushf
  6104 0000658C 56                      		push	si
  6105 0000658D 53                      		push	bx
  6106 0000658E 50                      		push	ax
  6107 0000658F 368B36[B205]            		mov	si, [ss:WFP_START]
  6108 00006594 B003                    		mov	al, 3		; FONC_delete
  6109                                  ; START	OF FUNCTION CHUNK FOR FastOpen_Update
  6110                                  
  6111                                  fastinvoke:				; ...
  6112 00006596 BB[320D]                		mov	bx, FastOpenTable_2 ; FastTable+2
  6113                                  		;call	dword [bx]	; CALL far [BX]
  6114 00006599 FF1F                    		call	far [bx]
  6115 0000659B 58                      		pop	ax
  6116 0000659C 5B                      		pop	bx
  6117 0000659D 5E                      		pop	si
  6118 0000659E 9D                      		popf
  6119 0000659F C3                      		retn
  6120                                  ; END OF FUNCTION CHUNK	FOR FastOpen_Update
  6121                                  
  6122                                  ; =============== S U B	R O U T	I N E =======================================
  6123                                  
  6124                                  FastOpen_Rename:
  6125 000065A0 9C                      		pushf
  6126 000065A1 56                      		push	si
  6127 000065A2 57                      		push	di
  6128 000065A3 53                      		push	bx
  6129 000065A4 50                      		push	ax
  6130 000065A5 368B36[B405]            		mov	si, [ss:REN_WFP]
  6131 000065AA BF[4B05]                		mov	di, NAME1
  6132 000065AD B006                    		mov	al, 6		; FONC_Rename
  6133 000065AF BB[320D]                		mov	bx, FastOpenTable_2
  6134                                  		;call	dword [bx]	; CALL far [BX]
  6135 000065B2 FF1F                    		call	far [bx]
  6136 000065B4 58                      		pop	ax
  6137 000065B5 5B                      		pop	bx
  6138 000065B6 5F                      		pop	di
  6139 000065B7 5E                      		pop	si
  6140 000065B8 9D                      		popf
  6141 000065B9 C3                      		retn
  6142                                  
  6143                                  ; =============== S U B	R O U T	I N E =======================================
  6144                                  
  6145                                  FastOpen_Update:
  6146                                  
  6147                                  ; FUNCTION CHUNK AT 6596 SIZE 0000000A BYTES
  6148                                  
  6149 000065BA 9C                      		pushf
  6150 000065BB 56                      		push	si
  6151 000065BC 53                      		push	bx
  6152 000065BD 50                      		push	ax
  6153 000065BE B004                    		mov	al, 4		; FONC_update
  6154 000065C0 EBD4                    		jmp	short fastinvoke
  6155                                  
  6156                                  ; =============== S U B	R O U T	I N E =======================================
  6157                                  
  6158                                  Fast_Dispatch:	; ...
  6159 000065C2 BE[320D]                		mov	si, FastOpenTable_2 ; FastTable+2
  6160                                  		;call	dword [ss:si] ; CALL far [SS:SI]
  6161 000065C5 36FF1C                  		call	far [ss:si]
  6162 000065C8 C3                      		retn
  6163                                  
  6164                                  ; =============== S U B	R O U T	I N E =======================================
  6165                                  
  6166                                  DOS_RENAME:		; ...
  6167 000065C9 E895EA                  		call	TestNet
  6168 000065CC 7306                    		jnb	short LOCAL_RENAME
  6169 000065CE B81111                  		mov	ax, 1111h
  6170 000065D1 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - RENAME REMOTE FILE
  6171                                  					; SS = DS = DOS	CS, SDA	first filename pointer = offset	of fully-qualified old name
  6172                                  					; SDA CDS pointer -> current directory
  6173                                  					; Return: CF set on error
  6174 000065D3 C3                      		retn
  6175                                  ; ---------------------------------------------------------------------------
  6176                                  
  6177                                  LOCAL_RENAME:				; ...
  6178 000065D4 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  6179 000065D9 8B36[B205]              		mov	si, [WFP_START]
  6180 000065DD 8B3E[B405]              		mov	di, [REN_WFP]
  6181 000065E1 8A04                    		mov	al, [si]
  6182 000065E3 8A25                    		mov	ah, [di]
  6183 000065E5 0D2020                  		or	ax, 2020h	; Lower	case
  6184 000065E8 38E0                    		cmp	al, ah
  6185 000065EA 7405                    		jz	short SAMEDRV
  6186 000065EC B81100                  		mov	ax, 11h		; error_not_same_device
  6187 000065EF F9                      		stc
  6188 000065F0 C3                      		retn
  6189                                  ; ---------------------------------------------------------------------------
  6190                                  
  6191                                  SAMEDRV:				; ...
  6192 000065F1 FF36[2E03]              		push	word [DMAADD+2]
  6193 000065F5 FF36[2C03]              		push	word [DMAADD]
  6194 000065F9 8C1E[2E03]              		mov	word [DMAADD+2], ds
  6195 000065FD C706[2C03][2006]        		mov	word [DMAADD], RENAMEDMA
  6196 00006603 C606[7005]00            		mov	byte [FOUND_DEV], 0
  6197 00006608 E81BEB                  		call	ECritDisk
  6198 0000660B E81406                  		call	DOS_SEARCH_FIRST
  6199 0000660E 7315                    		jnb	short Check_Dev
  6200 00006610 83F812                  		cmp	ax, 12h		; error_no_more_files
  6201 00006613 7503                    		jnz	short GOTERR
  6202 00006615 B80200                  		mov	ax, 2		; error_file_not_found
  6203                                  
  6204                                  GOTERR:					; ...
  6205 00006618 F9                      		stc
  6206                                  
  6207                                  RENAME_POP:				; ...
  6208 00006619 8F06[2C03]              		pop	word [DMAADD]
  6209 0000661D 8F06[2E03]              		pop	word [DMAADD+2]
  6210 00006621 E822EB                  		call	LCritDisk
  6211 00006624 C3                      		retn
  6212                                  ; ---------------------------------------------------------------------------
  6213                                  
  6214                                  Check_Dev:				; ...
  6215 00006625 B80500                  		mov	ax, 5		; error_access_denied
  6216 00006628 1E                      		push	ds
  6217 00006629 C536[2C03]              		lds	si, [DMAADD]
  6218 0000662D 83C615                  		add	si, 21		; find_buf.attr
  6219 00006630 F6440B10                		test	byte [si+11], 10h ; [SI+dir_entry.dir_attr],
  6220                                  					; attr_directory
  6221 00006634 7407                    		jz	short notdir
  6222 00006636 8B36[B405]              		mov	si, [REN_WFP]
  6223 0000663A E8C2FA                  		call	Check_PathLen2
  6224                                  
  6225                                  notdir:					; ...
  6226 0000663D 1F                      		pop	ds
  6227 0000663E 77D8                    		ja	short GOTERR
  6228 00006640 803E[7005]00            		cmp	byte [FOUND_DEV], 0
  6229 00006645 75D1                    		jnz	short GOTERR
  6230 00006647 89DE                    		mov	si, bx
  6231 00006649 83C61A                  		add	si, 26		; dir_entry.dir_first
  6232 0000664C E8CEFE                  		call	REN_DEL_Check
  6233 0000664F 7305                    		jnb	short REN_OK1
  6234 00006651 B82000                  		mov	ax, 20h		; error_sharing_violation
  6235 00006654 EBC3                    		jmp	short RENAME_POP
  6236                                  ; ---------------------------------------------------------------------------
  6237                                  
  6238                                  REN_OK1:				; ...
  6239 00006656 56                      		push	si
  6240 00006657 C536[2C03]              		lds	si, [DMAADD]
  6241 0000665B 83C615                  		add	si, 21
  6242 0000665E F6440B10                		test	byte [si+11], 10h ;	[SI+dir_entry.dir_attr],
  6243                                  					; attr_directory
  6244 00006662 7403                    		jz	short NOT_DIR1
  6245 00006664 5E                      		pop	si
  6246 00006665 EB04                    		jmp	short SWAP_SOURCE
  6247                                  ; ---------------------------------------------------------------------------
  6248                                  
  6249                                  NOT_DIR1:				; ...
  6250 00006667 5E                      		pop	si
  6251 00006668 E820FF                  		call	FastOpen_Delete
  6252                                  
  6253                                  SWAP_SOURCE:				; ...
  6254 0000666B A1[B205]                		mov	ax, [WFP_START]
  6255 0000666E 8B36[B405]              		mov	si, [REN_WFP]
  6256 00006672 8936[B205]              		mov	[WFP_START], si
  6257 00006676 A3[B405]                		mov	[REN_WFP], ax
  6258 00006679 C706[B605]FFFF          		mov	word [CURR_DIR_END], 0FFFFh ; -1
  6259 0000667F C706[7E05]FFE5          		mov	word [CREATING], 0E5FFh ; DIRFREE*256+0FFh
  6260 00006685 E8BF17                  		call	GetPathNoSet
  6261 00006688 7223                    		jb	short NODEST
  6262 0000668A 08E4                    		or	ah, ah
  6263 0000668C 7933                    		jns	short SAVEDEST
  6264                                  
  6265                                  BAD_ACC:				; ...
  6266 0000668E B80500                  		mov	ax, 5		; error_access_denied
  6267 00006691 F9                      		stc
  6268                                  
  6269                                  RENAME_CLEAN:				; ...
  6270 00006692 9C                      		pushf
  6271 00006693 50                      		push	ax
  6272 00006694 A0[7605]                		mov	al, [THISDRV]
  6273 00006697 E84033                  		call	FLUSHBUF
  6274 0000669A 58                      		pop	ax
  6275 0000669B 803E[4A03]00            		cmp	byte [FAILERR], 0
  6276 000066A0 7504                    		jnz	short BAD_ERR
  6277 000066A2 9D                      		popf
  6278 000066A3 E973FF                  		jmp	RENAME_POP
  6279                                  ; ---------------------------------------------------------------------------
  6280                                  
  6281                                  BAD_ERR:				; ...
  6282 000066A6 58                      		pop	ax
  6283                                  
  6284                                  _BAD_PATH:				; error_path_not_found
  6285 000066A7 B80300                  		mov	ax, 3
  6286 000066AA E96BFF                  		jmp	GOTERR
  6287                                  ; ---------------------------------------------------------------------------
  6288                                  
  6289                                  NODEST:					; ...
  6290 000066AD 750B                    		jnz	short BAD_PATH
  6291 000066AF 803E[4A03]00            		cmp	byte [FAILERR], 0
  6292 000066B4 7504                    		jnz	short BAD_PATH
  6293 000066B6 08C9                    		or	cl, cl
  6294 000066B8 7507                    		jnz	short SAVEDEST
  6295                                  
  6296                                  BAD_PATH:				; ...
  6297 000066BA B80300                  		mov	ax, 3		; error_path_not_found
  6298 000066BD F9                      		stc
  6299 000066BE E958FF                  		jmp	RENAME_POP
  6300                                  ; ---------------------------------------------------------------------------
  6301                                  
  6302                                  SAVEDEST:				; ...
  6303 000066C1 16                      		push	ss
  6304 000066C2 07                      		pop	es
  6305 000066C3 BF[5705]                		mov	di, NAME2
  6306 000066C6 BE[4B05]                		mov	si, NAME1
  6307 000066C9 B90B00                  		mov	cx, 11
  6308 000066CC F3A4                    		rep movsb
  6309 000066CE A1[C205]                		mov	ax, [DIRSTART]
  6310 000066D1 A3[6405]                		mov	[DESTSTART],	ax
  6311                                  
  6312                                  BUILDDEST:				; ...
  6313 000066D4 16                      		push	ss
  6314 000066D5 07                      		pop	es
  6315 000066D6 BB[3506]                		mov	bx, RENAMEDMA+15h ; RENAMEDMA+21
  6316 000066D9 BF[4B05]                		mov	di, NAME1
  6317 000066DC BE[5705]                		mov	si, NAME2
  6318 000066DF B90B00                  		mov	cx, 11
  6319 000066E2 E81501                  		call	NEW_RENAME
  6320 000066E5 C606[6B05]16            		mov	byte [ATTRIB], 16h ; attr_all
  6321 000066EA C606[7E05]FF            		mov	byte [CREATING], 0FFh
  6322 000066EF E81B1A                  		call	DEVNAME
  6323 000066F2 739A                    		jnb	short BAD_ACC
  6324 000066F4 8B1E[6405]              		mov	bx, [DESTSTART]
  6325 000066F8 C42E[8A05]              		les	bp, [THISDPB]
  6326 000066FC E8DD16                  		call	SETDIRSRCH
  6327 000066FF 728D                    		jb	short BAD_ACC
  6328 00006701 E88C15                  		call	FINDENTRY
  6329 00006704 7388                    		jnb	short BAD_ACC
  6330 00006706 803E[4A03]00            		cmp	byte [FAILERR], 0
  6331 0000670B 752A                    		jnz	short BAD_ACCJ
  6332 0000670D A1[6405]                		mov	ax, [DESTSTART]
  6333 00006710 3B06[2F06]              		cmp	ax, word [RENAMEDMA+0Fh]	; [RENAMEDMA+15]
  6334 00006714 745D                    		jz	short SIMPLE_RENAME
  6335 00006716 A0[4006]                		mov	al, [RENAMEDMA+20h] ; [RENAMEDMA+32]
  6336                                  					; [RENAMEDMA+21+dir_entry.dir_attr]
  6337 00006719 A810                    		test	al, 10h		; attr_directory
  6338 0000671B 751A                    		jnz	short BAD_ACCJ
  6339 0000671D A2[6B05]                		mov	byte [ATTRIB], al
  6340 00006720 8C1E[A005]              		mov	word [THISSFT+2], ds
  6341 00006724 BE[6507]                		mov	si, RENAMEDMA+145h ; RENAMEDMA+325
  6342                                  					; AUXSTACK-SF_ENTRY.size
  6343 00006727 8936[9E05]              		mov	word [THISSFT], si
  6344 0000672B C744020200              		mov	word [si+2], 2 ; [SI+SF_ENTRY.sf_mode],
  6345                                  					; SHARING_COMPAT+open_for_both
  6346 00006730 31C9                    		xor	cx, cx
  6347 00006732 E8DB21                  		call	RENAME_MAKE
  6348 00006735 7303                    		jnb	short GOT_DEST
  6349                                  
  6350                                  BAD_ACCJ:				; ...
  6351 00006737 E954FF                  		jmp	BAD_ACC
  6352                                  ; ---------------------------------------------------------------------------
  6353                                  
  6354                                  GOT_DEST:				; ...
  6355 0000673A 53                      		push	bx
  6356 0000673B C43E[9E05]              		les	di, [THISSFT]
  6357 0000673F E8114C                  		call	ShareEnd
  6358 00006742 5B                      		pop	bx
  6359 00006743 C43E[E205]              		les	di, [CURBUF]
  6360 00006747 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  6361                                  					; buf_dirty
  6362 0000674C 7508                    		jnz	short yesdirty1
  6363 0000674E E89533                  		call	INC_DIRTY_COUNT
  6364 00006751 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  6365                                  					; buf_dirty
  6366                                  
  6367                                  yesdirty1:				; ...
  6368 00006756 89DF                    		mov	di, bx
  6369 00006758 83C70B                  		add	di, 11		; dir_entry.dir_attr
  6370 0000675B BE[4006]                		mov	si, RENAMEDMA+20h
  6371 0000675E B91500                  		mov	cx, 21		; dir_entry.size-dir_entry.dir_attr
  6372 00006761 F3A4                    		rep movsb
  6373 00006763 E87D00                  		call	GET_SOURCE
  6374 00006766 7277                    		jb	short RENAME_OVER
  6375 00006768 89DF                    		mov	di, bx
  6376 0000676A 8E06[E405]              		mov	es, word [CURBUF+2]
  6377 0000676E B0E5                    		mov	al, 0E5h	; DIRFREE
  6378 00006770 AA                      		stosb
  6379 00006771 EB13                    		jmp	short DIRTY_IT
  6380                                  ; ---------------------------------------------------------------------------
  6381                                  
  6382                                  SIMPLE_RENAME:				; ...
  6383 00006773 E86D00                  		call	GET_SOURCE
  6384 00006776 7267                    		jb	short RENAME_OVER
  6385 00006778 89DF                    		mov	di, bx
  6386 0000677A 8E06[E405]              		mov	es, word [CURBUF+2]
  6387 0000677E BE[4B05]                		mov	si, NAME1
  6388 00006781 B90B00                  		mov	cx, 11
  6389 00006784 F3A4                    		rep movsb
  6390                                  
  6391                                  DIRTY_IT:				; ...
  6392 00006786 8B3E[E205]              		mov	di, word [CURBUF]
  6393 0000678A 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  6394                                  					; buf_dirty
  6395 0000678F 7508                    		jnz	short yesdirty2
  6396 00006791 E85233                  		call	INC_DIRTY_COUNT
  6397 00006794 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  6398                                  					; buf_dirty
  6399                                  
  6400                                  yesdirty2:				; ...
  6401 00006799 56                      		push	si
  6402 0000679A C536[2C03]              		lds	si, [DMAADD]
  6403 0000679E 83C615                  		add	si, 21		; find_buf.attr
  6404 000067A1 F6440B10                		test	byte [si+11], 10h ; [SI+dir_entry.dir_attr],
  6405                                  					; attr_directory
  6406 000067A5 7406                    		jz	short NOT_DIR2
  6407 000067A7 E8F6FD                  		call	FastOpen_Rename
  6408 000067AA 5E                      		pop	si
  6409 000067AB EB01                    		jmp	short NOT_DIRTY1
  6410                                  ; ---------------------------------------------------------------------------
  6411                                  
  6412                                  NOT_DIR2:				; ...
  6413 000067AD 5E                      		pop	si
  6414                                  
  6415                                  NOT_DIRTY1:				; ...
  6416 000067AE BE[2106]                		mov	si, RENAMEDMA+1
  6417 000067B1 E872E9                  		call	ECritDisk
  6418 000067B4 C606[7E05]00            		mov	byte [CREATING], 0
  6419 000067B9 E8A305                  		call	RENAME_NEXT
  6420 000067BC 7221                    		jb	short RENAME_OVER
  6421 000067BE 8D771A                  		lea	si, [bx+26]	; [BX+dir_entry.dir_first]
  6422 000067C1 E859FD                  		call	REN_DEL_Check
  6423 000067C4 7306                    		jnb	short REN_OK2
  6424 000067C6 B82000                  		mov	ax, 20h		; error_sharing_violation
  6425 000067C9 E9C6FE                  		jmp	RENAME_CLEAN
  6426                                  ; ---------------------------------------------------------------------------
  6427                                  
  6428                                  REN_OK2:				; ...
  6429 000067CC A0[4006]                		mov	al, [RENAMEDMA+20h] ; [RENAMEDMA+21+dir_entry.dir_attr]
  6430 000067CF A810                    		test	al, 10h		; attr_directory
  6431 000067D1 7406                    		jz	short Ren_Directory
  6432 000067D3 E8B5FD                  		call	FastOpen_Delete
  6433 000067D6 E9FBFE                  		jmp	BUILDDEST
  6434                                  ; ---------------------------------------------------------------------------
  6435                                  
  6436                                  Ren_Directory:				; ...
  6437 000067D9 E8C4FD                  		call	FastOpen_Rename
  6438 000067DC E9F5FE                  		jmp	BUILDDEST
  6439                                  ; ---------------------------------------------------------------------------
  6440                                  
  6441                                  RENAME_OVER:				; ...
  6442 000067DF F8                      		clc
  6443 000067E0 E9AFFE                  		jmp	RENAME_CLEAN
  6444                                  
  6445                                  ; =============== S U B	R O U T	I N E =======================================
  6446                                  
  6447                                  GET_SOURCE:		; ...
  6448 000067E3 8B1E[2F06]              		mov	bx, word [RENAMEDMA+0Fh]
  6449 000067E7 C42E[8A05]              		les	bp, [THISDPB]
  6450 000067EB E8EE15                  		call	SETDIRSRCH
  6451 000067EE 7209                    		jb	short gs_ret_label
  6452 000067F0 E8F918                  		call	STARTSRCH
  6453 000067F3 A1[2D06]                		mov	ax, word [RENAMEDMA+0Dh]
  6454 000067F6 E8B415                  		call	GETENT
  6455                                  
  6456                                  gs_ret_label:				; ...
  6457 000067F9 C3                      		retn
  6458                                  
  6459                                  ; =============== S U B	R O U T	I N E =======================================
  6460                                  
  6461                                  NEW_RENAME:		; ...
  6462 000067FA AC                      		lodsb
  6463 000067FB 3C3F                    		cmp	al, '?'         ; 3Fh
  6464 000067FD 7502                    		jnz	short NOCHG
  6465 000067FF 8A07                    		mov	al, [bx]
  6466                                  
  6467                                  NOCHG:					; ...
  6468 00006801 AA                      		stosb
  6469 00006802 43                      		inc	bx
  6470 00006803 E2F5                    		loop	NEW_RENAME
  6471 00006805 C3                      		retn
  6472                                  
  6473                                  ; =============== S U B	R O U T	I N E =======================================
  6474                                  
  6475                                  GET_FILE_INFO:	; ...
  6476 00006806 E858E8                  		call	TestNet
  6477 00006809 7306                    		jnb	short LOCAL_INFO
  6478 0000680B B80F11                  		mov	ax, 110Fh	; (MultNET SHL 8) OR 15
  6479 0000680E CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - GET REMOTE FILE'S ATTRIBUTES
  6480                                  					; SS = DOS CS, SDA first filename pointer -> fully-qualified name of file
  6481                                  					; SDA CDS pointer -> current directory
  6482                                  					; Return: CF set on error, AX =	file attributes
  6483 00006810 C3                      		retn
  6484                                  ; ---------------------------------------------------------------------------
  6485                                  
  6486                                  LOCAL_INFO:				; ...
  6487 00006811 E812E9                  		call	ECritDisk
  6488 00006814 C606[4C03]01            		mov	byte [NoSetDir], 1
  6489 00006819 E8DC00                  		call	GET_FAST_PATH
  6490 0000681C 7313                    		jnb	short info_check_dev
  6491                                  
  6492                                  NO_PATH:				; ...
  6493 0000681E 750C                    		jnz	short bad_path1
  6494 00006820 08C9                    		or	cl, cl
  6495 00006822 7408                    		jz	short bad_path1
  6496                                  
  6497                                  info_no_file:				; ...
  6498 00006824 B80200                  		mov	ax, 2		; error_file_not_found
  6499                                  
  6500                                  BadRet:					; ...
  6501 00006827 F9                      		stc
  6502                                  
  6503                                  JustRet:				; ...
  6504 00006828 E81BE9                  		call	LCritDisk
  6505 0000682B C3                      		retn
  6506                                  ; ---------------------------------------------------------------------------
  6507                                  
  6508                                  bad_path1:				; ...
  6509 0000682C B80300                  		mov	ax, 3		; error_path_not_found
  6510 0000682F EBF6                    		jmp	short BadRet
  6511                                  ; ---------------------------------------------------------------------------
  6512                                  
  6513                                  info_check_dev:				; ...
  6514 00006831 08E4                    		or	ah, ah
  6515 00006833 78EF                    		js	short info_no_file
  6516 00006835 833E[E205]FF            		cmp	word [CURBUF], 0FFFFh ; -1
  6517 0000683A 7507                    		jnz	short not_root
  6518 0000683C 30E4                    		xor	ah, ah
  6519 0000683E B010                    		mov	al, 10h		; attr_directory
  6520 00006840 F8                      		clc
  6521 00006841 EBE5                    		jmp	short JustRet
  6522                                  ; ---------------------------------------------------------------------------
  6523                                  
  6524                                  not_root:				; ...
  6525 00006843 1E                      		push	ds
  6526 00006844 8E1E[E405]              		mov	ds, word [CURBUF+2]
  6527 00006848 89DE                    		mov	si, bx
  6528 0000684A 31DB                    		xor	bx, bx
  6529 0000684C 89DF                    		mov	di, bx
  6530 0000684E 8B4C16                  		mov	cx, [si+16h]	; [SI+dir_entry.dir_time]
  6531 00006851 8B5418                  		mov	dx, [si+18h]	; [SI+dir_entry.dir_date]
  6532 00006854 30E4                    		xor	ah, ah
  6533 00006856 8A440B                  		mov	al, [si+0Bh]	; [SI+dir_entry.dir_attr]
  6534 00006859 A810                    		test	al, 10h		; attr_directory
  6535 0000685B 7506                    		jnz	short NO_SIZE
  6536 0000685D 8B7C1C                  		mov	di, [si+1Ch]	; [SI+dir_entry.dir_size_l]
  6537 00006860 8B5C1E                  		mov	bx, [si+1Eh]	; [SI+dir_entry.dir_size_h]
  6538                                  
  6539                                  NO_SIZE:				; ...
  6540 00006863 1F                      		pop	ds
  6541 00006864 F8                      		clc
  6542 00006865 EBC1                    		jmp	short JustRet
  6543                                  
  6544                                  ; =============== S U B	R O U T	I N E =======================================
  6545                                  
  6546                                  SET_FILE_ATTRIBUTE:	; ...
  6547 00006867 A9D8FF                  		test	ax, 0FFD8h	; ~attr_changeable
  6548 0000686A 7414                    		jz	short set_look
  6549                                  
  6550                                  _BAD_ACC:				; ...
  6551 0000686C C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
  6552 00006871 C606[2703]07            		mov	byte [EXTERR_CLASS], 7 ; errCLASS_Apperr
  6553 00006876 C606[2603]04            		mov	byte [EXTERR_ACTION], 4 ; errACT_Abort
  6554 0000687B B80500                  		mov	ax, 5		; error_access_denied
  6555 0000687E F9                      		stc
  6556 0000687F C3                      		retn
  6557                                  ; ---------------------------------------------------------------------------
  6558                                  
  6559                                  set_look:				; ...
  6560 00006880 E8DEE7                  		call	TestNet
  6561 00006883 7308                    		jnb	short LOCAL_SET
  6562 00006885 50                      		push	ax
  6563 00006886 B80E11                  		mov	ax, 110Eh	; (MultNET SHL 8) OR 14
  6564 00006889 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - SET REMOTE FILE'S ATTRIBUTES
  6565                                  					; SS = DOS CS, SDA first filename pointer -> fully-qualified name of file
  6566                                  					; SDA CDS pointer -> current directory
  6567                                  					; STACK: WORD new file attributes
  6568                                  					; Return: CF set on error
  6569 0000688B 5B                      		pop	bx
  6570 0000688C C3                      		retn
  6571                                  ; ---------------------------------------------------------------------------
  6572                                  
  6573                                  LOCAL_SET:				; ...
  6574 0000688D E896E8                  		call	ECritDisk
  6575 00006890 50                      		push	ax
  6576 00006891 C606[4C03]01            		mov	byte [NoSetDir], 1
  6577 00006896 E8A815                  		call	GETPATH
  6578 00006899 7303                    		jnb	short set_check_device
  6579 0000689B 5B                      		pop	bx
  6580 0000689C EB80                    		jmp	short NO_PATH
  6581                                  ; ---------------------------------------------------------------------------
  6582                                  
  6583                                  set_check_device:			; ...
  6584 0000689E 08E4                    		or	ah, ah
  6585 000068A0 7906                    		jns	short set_check_share
  6586 000068A2 58                      		pop	ax
  6587 000068A3 E8A0E8                  		call	LCritDisk
  6588 000068A6 EBC4                    		jmp	short _BAD_ACC
  6589                                  ; ---------------------------------------------------------------------------
  6590                                  
  6591                                  set_check_share:			; ...
  6592 000068A8 58                      		pop	ax
  6593 000068A9 833E[E205]FF            		cmp	word [CURBUF], -1 ; 0FFFFh
  6594 000068AE 740A                    		jz	short cannot_set_root
  6595 000068B0 E86AFC                  		call	REN_DEL_Check
  6596 000068B3 730B                    		jnb	short set_do
  6597 000068B5 B82000                  		mov	ax, 20h		; error_sharing_violation
  6598 000068B8 EB3A                    		jmp	short OK_BYE
  6599                                  ; ---------------------------------------------------------------------------
  6600                                  
  6601                                  cannot_set_root:			; ...
  6602 000068BA B80500                  		mov	ax, 5		; error_access_denied
  6603 000068BD F9                      		stc
  6604 000068BE EB34                    		jmp	short OK_BYE
  6605                                  ; ---------------------------------------------------------------------------
  6606                                  
  6607                                  set_do:					; ...
  6608 000068C0 C43E[E205]              		les	di, [CURBUF]
  6609 000068C4 2680670BD8              		and	byte [es:bx+0Bh], 0D8h ; [ES:BX+dir_entry.dir_attr],~attr_changeable
  6610 000068C9 2608470B                		or	[es:bx+0Bh], al	; [ES:BX+dir_entry.dir_attr]
  6611 000068CD 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],buf_dirty
  6612 000068D2 7508                    		jnz	short yesdirty3
  6613 000068D4 E80F32                  		call	INC_DIRTY_COUNT
  6614 000068D7 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],buf_dirty
  6615                                  
  6616                                  yesdirty3:				; ...
  6617 000068DC A0[7605]                		mov	al, [THISDRV]
  6618 000068DF 52                      		push	dx
  6619 000068E0 57                      		push	di
  6620 000068E1 B400                    		mov	ah, 0
  6621 000068E3 88C2                    		mov	dl, al
  6622 000068E5 89DF                    		mov	di, bx
  6623 000068E7 E8D0FC                  		call	FastOpen_Update
  6624 000068EA 5F                      		pop	di
  6625 000068EB 5A                      		pop	dx
  6626 000068EC E8EB30                  		call	FLUSHBUF
  6627 000068EF 7303                    		jnb	short OK_BYE
  6628 000068F1 B80200                  		mov	ax, 2		; error_file_not_found
  6629                                  
  6630                                  OK_BYE:					; ...
  6631 000068F4 E84FE8                  		call	LCritDisk
  6632 000068F7 C3                      		retn
  6633                                  
  6634                                  ; =============== S U B	R O U T	I N E =======================================
  6635                                  
  6636                                  GET_FAST_PATH:
  6637 000068F8 36800E[3A0D]01          		or	byte [ss:FastOpenFlg], 1 ; FastOpen_Set
  6638 000068FE E84015                  		call	GETPATH
  6639 00006901 9C                      		pushf
  6640 00006902 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  6641 00006908 9D                      		popf
  6642 00006909 C3                      		retn
  6643                                  
  6644                                  ; =============== S U B	R O U T	I N E =======================================
  6645                                  
  6646                                  DOS_DUP:
  6647 0000690A 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
  6648 0000690F 26C43E[9E05]            		les	di, [es:THISSFT]
  6649                                  
  6650                                  DOS_Dup_Direct:				; ...
  6651 00006914 E863E7                  		call	IsSFTNet
  6652 00006917 7503                    		jnz	short DO_INC
  6653 00006919 E8121C                  		call	DEV_OPEN_SFT
  6654                                  
  6655                                  DO_INC:					; ...
  6656 0000691C 26FF05                  		inc	word [es:di]	; [ES:DI+SF_ENTRY.sf_ref_count]
  6657 0000691F C3                      		retn
  6658                                  
  6659                                  ; ---------------------------------------------------------------------------
  6660                                  
  6661                                  DOS_CREATE:				; ...
  6662 00006920 30E4                    		xor	ah, ah
  6663                                  
  6664                                  Create_inter:				; ...
  6665 00006922 A880                    		test	al, 80h		; ~(attr_all+attr_ignore+attr_volume_id)
  6666 00006924 7512                    		jnz	short AttErr
  6667 00006926 A808                    		test	al, 8		; attr_volume_id
  6668 00006928 7408                    		jz	short NoReset
  6669 0000692A 810E[1106]8000          		or	word [DOS34_FLAG], 80h ; DBCS_VOLID
  6670 00006930 B008                    		mov	al, 8		; attr_volume_id
  6671                                  
  6672                                  NoReset:				; ...
  6673 00006932 0C20                    		or	al, 20h		; attr_archive
  6674 00006934 A850                    		test	al, 50h		; attr_directory+attr_device
  6675 00006936 740A                    		jz	short ATT_OK
  6676                                  
  6677                                  AttErr:					; ...
  6678 00006938 B80500                  		mov	ax, 5		; Attribute problem
  6679 0000693B C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
  6680 00006940 EB67                    		jmp	short SET_MKND_ERR
  6681                                  ; ---------------------------------------------------------------------------
  6682                                  
  6683                                  ATT_OK:					; ...
  6684 00006942 C43E[9E05]              		les	di, [THISSFT]
  6685 00006946 06                      		push	es
  6686 00006947 C436[A205]              		les	si, [THISCDS]
  6687 0000694B 83FEFF                  		cmp	si, -1		; 0FFFFh
  6688 0000694E 751D                    		jnz	short TEST_RE_NET
  6689 00006950 07                      		pop	es
  6690 00006951 F606[F605]01            		test	byte [EXTOPEN_ON], 1 ; EXT_OPEN_ON
  6691 00006956 740D                    		jz	short NOEXTOP
  6692                                  
  6693                                  IFS_extopen:				; ...
  6694 00006958 50                      		push	ax
  6695 00006959 B82E11                  		mov	ax, 112Eh	; (MultNET SHL 8) OR 46
  6696 0000695C CD2F                    		int	2Fh		; Multiplex - DOS 4 IFSFUNC.EXE	- ???
  6697                                  					; SS = DS = DOS	CS, STACK: WORD	???   low byte = ???
  6698                                  					; Return: CF set on error
  6699                                  					; CF clear if successful
  6700 0000695E 5B                      		pop	bx
  6701 0000695F C606[F605]00            		mov	byte [EXTOPEN_ON], 0
  6702 00006964 C3                      		retn
  6703                                  ; ---------------------------------------------------------------------------
  6704                                  
  6705                                  NOEXTOP:				; ...
  6706 00006965 50                      		push	ax
  6707 00006966 B81811                  		mov	ax, 1118h
  6708 00006969 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CREATE/TRUNCATE FILE
  6709                                  					; ES:DI	-> uninitialized SFT, SS = DOS CS
  6710                                  					; SDA first filename pointer ->	fully-qualified	name of	file
  6711                                  					; STACK: WORD file creation mode???
  6712 0000696B 5B                      		pop	bx
  6713 0000696C C3                      		retn
  6714                                  ; ---------------------------------------------------------------------------
  6715                                  
  6716                                  TEST_RE_NET:				; ...
  6717 0000696D 26F744430080            		test	word [es:si+43h], 8000h ; [ES:SI+curdir.flags],
  6718                                  					; curdir_isnet
  6719 00006973 07                      		pop	es
  6720 00006974 7419                    		jz	short LOCAL_CREATE
  6721 00006976 E8BF00                  		call	Set_EXT_mode
  6722 00006979 7205                    		jb	short dochk
  6723 0000697B 26834D0202              		or	word [es:di+2], 2 ; [ES:DI+SF_ENTRY.sf_mode],
  6724                                  					; SHARING_COMPAT+open_for_both
  6725                                  
  6726                                  dochk:					; ...
  6727 00006980 F606[F605]01            		test	byte [EXTOPEN_ON], 1
  6728 00006985 75D1                    		jnz	short IFS_extopen
  6729 00006987 50                      		push	ax
  6730 00006988 B81711                  		mov	ax, 1117h	; (MultNET SHL 8) OR 23
  6731 0000698B CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CREATE/TRUNCATE REMOTE FILE
  6732                                  					; ES:DI	-> uninitialized SFT, SS = DOS CS
  6733                                  					; SDA first filename pointer ->	fully-qualified	name of	file to	open
  6734                                  					; SDA CDS pointer -> current directory
  6735                                  					; Return: CF set on error
  6736 0000698D 5B                      		pop	bx
  6737 0000698E C3                      		retn
  6738                                  ; ---------------------------------------------------------------------------
  6739                                  
  6740                                  LOCAL_CREATE:				; ...
  6741 0000698F E8A600                  		call	Set_EXT_mode
  6742 00006992 7205                    		jb	short setdone
  6743 00006994 26834D0202              		or	word [es:di+2], 2 ; [ES:DI+SF_ENTRY.sf_mode],
  6744                                  					; SHARING_COMPAT+open_for_both
  6745                                  
  6746                                  setdone:				; ...
  6747 00006999 E88AE7                  		call	ECritDisk
  6748 0000699C E84B1F                  		call	MakeNode
  6749 0000699F 7317                    		jnb	short Create_ok
  6750 000069A1 C606[A10A]FF            		mov	byte [VOLCHNG_FLAG], 0FFh ; -1
  6751 000069A6 E89DE7                  		call	LCritDisk
  6752                                  
  6753                                  SET_MKND_ERR:				; ...
  6754 000069A9 BB[B069]                		mov	bx, CRTERRTAB
  6755                                  		;xlat	byte [cs:bx] ; CS XLAT
  6756 000069AC 2E                      		cs
  6757 000069AD D7                      		xlat
  6758 000069AE F9                      		stc
  6759 000069AF C3                      		retn
  6760                                  ; ---------------------------------------------------------------------------
  6761 000069B0 00                      CRTERRTAB	db 0			; ...
  6762 000069B1 05                      		db 5			; error_access_denied
  6763 000069B2 52                      		db 52h			; error_cannot_make
  6764 000069B3 50                      		db 50h			; error_file_exists
  6765 000069B4 03                      		db 3			; error_path_not_found
  6766 000069B5 05                      		db 5			; error_access_denied
  6767 000069B6 20                      		db 20h			; error_sharing_violation
  6768 000069B7 02                      		db 2			; error_file_not_found
  6769                                  ; ---------------------------------------------------------------------------
  6770                                  
  6771                                  Create_ok:				; ...
  6772 000069B8 E8D0FB                  		call	FastOpen_Delete
  6773 000069BB A0[6D05]                		mov	al, [SATTRIB]
  6774 000069BE A808                    		test	al, 8		; attr_volume_id
  6775 000069C0 741C                    		jz	short NoVolLabel
  6776 000069C2 C43E[A205]              		les	di, [THISCDS]
  6777 000069C6 268A25                  		mov	ah, [es:di]	; [ES:DI+curdir.text]
  6778 000069C9 80EC41                  		sub	ah, 'A'         ; 41h
  6779 000069CC 8826[A10A]              		mov	[VOLCHNG_FLAG], ah
  6780 000069D0 B701                    		mov	bh, 1
  6781 000069D2 E81F00                  		call	Set_Media_ID
  6782 000069D5 E84EE7                  		call	ECritDisk
  6783 000069D8 E88E2C                  		call	FATREAD_CDS
  6784 000069DB E868E7                  		call	LCritDisk
  6785                                  
  6786                                  NoVolLabel:				; ...
  6787 000069DE B80200                  		mov	ax, 2
  6788 000069E1 C43E[9E05]              		les	di, [THISSFT]
  6789                                  		;call	dword [ShSU]	; call far [JShare+(14*4)]
  6790 000069E5 FF1E[C800]              		call	far [JShare+(14*4)]
  6791 000069E9 E85AE7                  		call	LCritDisk
  6792 000069EC E95001                  		jmp	SET_SFT_MODE
  6793                                  ; ---------------------------------------------------------------------------
  6794                                  
  6795                                  DOS_Create_New:				; ...
  6796 000069EF B401                    		mov	ah, 1
  6797 000069F1 E92EFF                  		jmp	Create_inter
  6798                                  
  6799                                  ; =============== S U B	R O U T	I N E =======================================
  6800                                  
  6801                                  Set_Media_ID:	; ...
  6802 000069F4 50                      		push	ax
  6803 000069F5 06                      		push	es
  6804 000069F6 57                      		push	di
  6805 000069F7 FEC4                    		inc	ah
  6806 000069F9 88E3                    		mov	bl, ah
  6807 000069FB B00D                    		mov	al, 0Dh		; generic IOCTL
  6808 000069FD B96608                  		mov	cx, 866h	; get media id
  6809 00006A00 BA[6C0D]                		mov	dx, FAKE_STACK_2F ; Packet_Temp
  6810 00006A03 53                      		push	bx
  6811 00006A04 52                      		push	dx
  6812 00006A05 30FF                    		xor	bh, bh
  6813 00006A07 E824F7                  		call	_$IOCTL
  6814 00006A0A 5A                      		pop	dx
  6815 00006A0B 5B                      		pop	bx
  6816 00006A0C 7224                    		jb	short geterr
  6817 00006A0E 08FF                    		or	bh, bh
  6818 00006A10 7405                    		jz	short NoName	; delete volume	id
  6819 00006A12 BE[4B05]                		mov	si, NAME1 ; set volume id
  6820 00006A15 EB03                    		jmp	short doset
  6821                                  ; ---------------------------------------------------------------------------
  6822                                  
  6823                                  NoName:					; ...
  6824 00006A17 BE[BA0D]                		mov	si, NO_NAME_ID ;	"NO NAME    "
  6825                                  
  6826                                  doset:					; ...
  6827 00006A1A 89D7                    		mov	di, dx
  6828 00006A1C 83C706                  		add	di, 6		; MEDIA_ID_INFO.MEDIA_Label
  6829 00006A1F 16                      		push	ss
  6830 00006A20 1F                      		pop	ds
  6831 00006A21 16                      		push	ss
  6832 00006A22 07                      		pop	es
  6833 00006A23 B90B00                  		mov	cx, 11
  6834 00006A26 F3A4                    		rep movsb
  6835 00006A28 B94608                  		mov	cx, 846h	; set volume id
  6836 00006A2B B00D                    		mov	al, 0Dh
  6837 00006A2D 30FF                    		xor	bh, bh
  6838 00006A2F E8FCF6                  		call	_$IOCTL
  6839                                  
  6840                                  geterr:					; ...
  6841 00006A32 16                      		push	ss
  6842 00006A33 1F                      		pop	ds
  6843 00006A34 5F                      		pop	di
  6844 00006A35 07                      		pop	es
  6845 00006A36 58                      		pop	ax
  6846 00006A37 C3                      		retn
  6847                                  
  6848                                  ; =============== S U B	R O U T	I N E =======================================
  6849                                  
  6850                                  Set_EXT_mode:	; ...
  6851 00006A38 36F606[F605]01          		test	byte [ss:EXTOPEN_ON], 1 ; [ss:EXTOPEN_ON],EXT_OPEN_ON
  6852 00006A3E 740B                    		jz	short NOTEX
  6853 00006A40 50                      		push	ax
  6854 00006A41 36A1[0106]              		mov	ax, [ss:SAVE_BX]
  6855 00006A45 26094502                		or	[es:di+2], ax	; [ES:DI+SF_ENTRY.sf_mode]
  6856 00006A49 58                      		pop	ax
  6857 00006A4A F9                      		stc
  6858                                  
  6859                                  NOTEX:					; ...
  6860 00006A4B C3                      		retn
  6861                                  
  6862                                  ; ---------------------------------------------------------------------------
  6863                                  
  6864                                  DOS_OPEN:				; ...
  6865 00006A4C C606[4C03]00            		mov	byte [NoSetDir], 0
  6866 00006A51 E84001                  		call	Check_Access_AX
  6867 00006A54 722B                    		jb	short do_ret_label
  6868 00006A56 C43E[9E05]              		les	di, [THISSFT]
  6869 00006A5A 30E4                    		xor	ah, ah
  6870 00006A5C 26884502                		mov	[es:di+2], al	; [ES:DI+SF_ENTRY.sf_mode]
  6871 00006A60 06                      		push	es
  6872 00006A61 C436[A205]              		les	si, [THISCDS]
  6873 00006A65 83FEFF                  		cmp	si, -1
  6874 00006A68 7530                    		jnz	short TEST_RE_NET1
  6875 00006A6A 07                      		pop	es
  6876 00006A6B F606[F605]01            		test	byte [EXTOPEN_ON], 1 ; EXT_OPEN_ON
  6877 00006A70 7410                    		jz	short _NOEXTOP
  6878                                  
  6879                                  _IFS_extopen:				; ...
  6880 00006A72 A0[0106]                		mov	al, byte [SAVE_BX]
  6881 00006A75 50                      		push	ax
  6882 00006A76 B82E11                  		mov	ax, 112Eh	; (MultNET*256)+46
  6883 00006A79 CD2F                    		int	2Fh		; Multiplex - DOS 4 IFSFUNC.EXE	- ???
  6884                                  					; SS = DS = DOS	CS, STACK: WORD	???   low byte = ???
  6885                                  					; Return: CF set on error
  6886                                  					; CF clear if successful
  6887 00006A7B 5B                      		pop	bx
  6888 00006A7C C606[F605]00            		mov	byte [EXTOPEN_ON], 0
  6889                                  
  6890                                  do_ret_label:				; ...
  6891 00006A81 C3                      		retn
  6892                                  ; ---------------------------------------------------------------------------
  6893                                  
  6894                                  _NOEXTOP:				; ...
  6895 00006A82 F606[8600]01            		test	byte [DOS_FLAG], 1 ; EXECOPEN
  6896 00006A87 7409                    		jz	short not_exec_open
  6897 00006A89 F606[1206]08            		test	byte [DOS34_FLAG+1], 8 ; (EXEC_AWARE_REDIR>>8)
  6898 00006A8E 7402                    		jz	short not_exec_open
  6899 00006A90 B023                    		mov	al, 23h		; SHARING_DENY_WRITE+EXEC_OPEN
  6900                                  
  6901                                  not_exec_open:				; ...
  6902 00006A92 50                      		push	ax
  6903 00006A93 B81611                  		mov	ax, 1116h	; (MultNET SHL 8) OR 22
  6904 00006A96 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - OPEN	EXISTING REMOTE	FILE
  6905                                  					; ES:DI	-> uninitialized SFT, SS = DOS CS
  6906                                  					; SDA first filename pointer ->	fully-qualified	name of	file to	open
  6907                                  					; STACK: WORD file open	mode
  6908                                  					; Return: CF set on error
  6909 00006A98 5B                      		pop	bx
  6910 00006A99 C3                      		retn
  6911                                  ; ---------------------------------------------------------------------------
  6912                                  
  6913                                  TEST_RE_NET1:				; ...
  6914 00006A9A 26F744430080            		test	word [es:si+43h], 8000h ; [ES:SI+curdir.flags],
  6915                                  					; curdir_isnet
  6916 00006AA0 07                      		pop	es
  6917 00006AA1 7409                    		jz	short LOCAL_OPEN
  6918 00006AA3 F606[F605]01            		test	byte [EXTOPEN_ON], 1
  6919 00006AA8 75C8                    		jnz	short _IFS_extopen
  6920 00006AAA EBD6                    		jmp	short _NOEXTOP
  6921                                  ; ---------------------------------------------------------------------------
  6922                                  
  6923                                  LOCAL_OPEN:				; ...
  6924 00006AAC E877E6                  		call	ECritDisk
  6925 00006AAF 800E[3A0D]05            		or	byte [FastOpenFlg], 5 ; FastOpen_Set+Special_Fill_Set
  6926 00006AB4 E88A13                  		call	GETPATH
  6927 00006AB7 7320                    		jnb	short Open_found
  6928 00006AB9 7514                    		jnz	short bad_path2
  6929 00006ABB 08C9                    		or	cl, cl
  6930 00006ABD 7410                    		jz	short bad_path2
  6931 00006ABF B80200                  		mov	ax, 2		; error_file_not_found
  6932                                  
  6933                                  OpenBadRet:				; ...
  6934 00006AC2 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  6935 00006AC8 F9                      		stc
  6936 00006AC9 E87AE6                  		call	LCritDisk
  6937 00006ACC E98600                  		jmp	Clear_FastOpen
  6938                                  ; ---------------------------------------------------------------------------
  6939                                  
  6940                                  bad_path2:				; ...
  6941 00006ACF B80300                  		mov	ax, 3		; error_path_not_found
  6942 00006AD2 EBEE                    		jmp	short OpenBadRet
  6943                                  ; ---------------------------------------------------------------------------
  6944                                  
  6945                                  Open_Bad_Access:			; ...
  6946 00006AD4 B80500                  		mov	ax, 5		; error_access_denied
  6947 00006AD7 EBE9                    		jmp	short OpenBadRet
  6948                                  ; ---------------------------------------------------------------------------
  6949                                  
  6950                                  Open_found:				; ...
  6951 00006AD9 74F9                    		jz	short Open_Bad_Access
  6952 00006ADB 08E4                    		or	ah, ah
  6953 00006ADD 783F                    		js	short open_ok
  6954 00006ADF 8E06[E405]              		mov	es, word [CURBUF+2]
  6955 00006AE3 268A470B                		mov	al, [es:bx+0Bh]	; [ES:BX+dir_entry.dir_attr]
  6956 00006AE7 A808                    		test	al, 8		; attr_volume_id
  6957 00006AE9 75E9                    		jnz	short Open_Bad_Access
  6958 00006AEB A801                    		test	al, 1		; attr_read_only
  6959 00006AED 742F                    		jz	short open_ok
  6960 00006AEF 1E                      		push	ds
  6961 00006AF0 56                      		push	si
  6962 00006AF1 C536[9E05]              		lds	si, [THISSFT]
  6963 00006AF5 8B4C02                  		mov	cx, [si+2]	; [SI+SF_ENTRY.sf_mode]
  6964 00006AF8 F7C10080                		test	cx, 8000h	; sf_isFCB
  6965 00006AFC 750A                    		jnz	short ResetAccess
  6966 00006AFE 88CA                    		mov	dl, cl
  6967 00006B00 80E2F0                  		and	dl, 0F0h	; SHARING_MASK
  6968 00006B03 80FA70                  		cmp	dl, 70h		; SHARING_NET_FCB
  6969 00006B06 7508                    		jnz	short NormalOpen
  6970                                  
  6971                                  ResetAccess:				; ...
  6972 00006B08 83E1F0                  		and	cx, 0FFF0h	; ~access_mask
  6973 00006B0B 894C02                  		mov	[si+2],	cx	; [SI+SF_ENTRY.sf_mode]
  6974 00006B0E EB0C                    		jmp	short FillSFT
  6975                                  ; ---------------------------------------------------------------------------
  6976                                  
  6977                                  NormalOpen:				; ...
  6978 00006B10 80E10F                  		and	cl, 0Fh		; access_mask
  6979 00006B13 80F900                  		cmp	cl, 0		; open_for_read
  6980 00006B16 7404                    		jz	short FillSFT
  6981 00006B18 5E                      		pop	si
  6982 00006B19 1F                      		pop	ds
  6983 00006B1A EBB8                    		jmp	short Open_Bad_Access
  6984                                  ; ---------------------------------------------------------------------------
  6985                                  
  6986                                  FillSFT:				; ...
  6987 00006B1C 5E                      		pop	si
  6988 00006B1D 1F                      		pop	ds
  6989                                  
  6990                                  open_ok:				; ...
  6991 00006B1E E8881F                  		call	DOOPEN
  6992 00006B21 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  6993 00006B27 E84A00                  		call	DO_SHARE_CHECK
  6994 00006B2A 7305                    		jnb	short SHARE_OK
  6995 00006B2C E817E6                  		call	LCritDisk
  6996 00006B2F EB24                    		jmp	short Clear_FastOpen
  6997                                  ; ---------------------------------------------------------------------------
  6998                                  
  6999                                  SHARE_OK:				; ...
  7000 00006B31 B80300                  		mov	ax, 3
  7001 00006B34 C43E[9E05]              		les	di, [THISSFT]
  7002                                  		;call	dword [ShSU] ; call far [JShare+(14*4)]
  7003 00006B38 FF1E[C800]              		call	far [JShare+(14*4)]
  7004 00006B3C E807E6                  		call	LCritDisk
  7005                                  
  7006                                  SET_SFT_MODE:				; ...
  7007 00006B3F C43E[9E05]              		les	di, [THISSFT]
  7008 00006B43 E8E819                  		call	DEV_OPEN_SFT
  7009 00006B46 26F745020080            		test	word [es:di+2], 8000h ; ES:DI+SF_ENTRY.sf_mode],
  7010                                  					; sf_isFCB
  7011 00006B4C 7407                    		jz	short Clear_FastOpen
  7012 00006B4E A1[3003]                		mov	ax, [CurrentPDB]
  7013 00006B51 26894531                		mov	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
  7014                                  
  7015                                  Clear_FastOpen:				; ...
  7016 00006B55 C3                      		retn
  7017                                  
  7018                                  ; =============== S U B	R O U T	I N E =======================================
  7019                                  
  7020                                  SHARE_ERROR:	; ...
  7021 00006B56 26F745020080            		test	word [es:di+2], 8000h ; [ES:DI+SF_ENTRY.sf_mode],
  7022                                  					; sf_isFCB
  7023 00006B5C 750C                    		jnz	short _HARD_ERR
  7024 00006B5E 268A4D02                		mov	cl, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  7025 00006B62 80E1F0                  		and	cl, 0F0h	; SHARING_MASK
  7026 00006B65 80F900                  		cmp	cl, 0		; SHARING_COMPAT
  7027 00006B68 7505                    		jnz	short _NO_HARD_ERR
  7028                                  
  7029                                  _HARD_ERR:				; ...
  7030 00006B6A E8C047                  		call	SHARE_VIOLATION
  7031 00006B6D 73E6                    		jnb	short Clear_FastOpen
  7032                                  
  7033                                  _NO_HARD_ERR:				; ...
  7034 00006B6F B82000                  		mov	ax, 20h		; error_sharing_violation
  7035 00006B72 F9                      		stc
  7036 00006B73 C3                      		retn
  7037                                  
  7038                                  ; =============== S U B	R O U T	I N E =======================================
  7039                                  
  7040                                  DO_SHARE_CHECK:	; ...
  7041 00006B74 E8AFE5                  		call	ECritDisk
  7042                                  
  7043                                  OPN_RETRY:				; ...
  7044 00006B77 8B0E[1A00]              		mov	cx, [RetryCount]
  7045                                  
  7046                                  OpenShareRetry:				; ...
  7047 00006B7B 51                      		push	cx
  7048 00006B7C E8A947                  		call	SHARE_CHECK
  7049 00006B7F 59                      		pop	cx
  7050 00006B80 730E                    		jnb	short Share_Ok2
  7051 00006B82 E897E4                  		call	Idle
  7052 00006B85 E2F4                    		loop	OpenShareRetry
  7053 00006B87 C43E[9E05]              		les	di, [THISSFT]
  7054 00006B8B E8C8FF                  		call	SHARE_ERROR
  7055 00006B8E 73E7                    		jnb	short OPN_RETRY
  7056                                  
  7057                                  Share_Ok2:				; ...
  7058 00006B90 E8B3E5                  		call	LCritDisk
  7059 00006B93 C3                      		retn
  7060                                  
  7061                                  ; =============== S U B	R O U T	I N E =======================================
  7062                                  
  7063                                  Check_Access_AX:
  7064 00006B94 A2[6E05]                		mov	[OPEN_ACCESS], al
  7065 00006B97 53                      		push	bx
  7066 00006B98 88C3                    		mov	bl, al
  7067 00006B9A 80E3F0                  		and	bl, 0F0h	; SHARING_MASK
  7068 00006B9D 803E[7205]FF            		cmp	byte [FSHARING], -1
  7069 00006BA2 7505                    		jnz	short CheckShareMode
  7070 00006BA4 80FB70                  		cmp	bl, 70h		; SHARING_NET_FCB
  7071 00006BA7 7405                    		jz	short CheckAccessMode
  7072                                  
  7073                                  CheckShareMode:				; ...
  7074 00006BA9 80FB40                  		cmp	bl, 40h
  7075 00006BAC 770D                    		ja	short Make_Bad_Access
  7076                                  
  7077                                  CheckAccessMode:			; ...
  7078 00006BAE 88C3                    		mov	bl, al
  7079 00006BB0 80E30F                  		and	bl, 0Fh		; access_mask
  7080 00006BB3 80FB02                  		cmp	bl, 2
  7081 00006BB6 7703                    		ja	short Make_Bad_Access
  7082 00006BB8 5B                      		pop	bx
  7083 00006BB9 F8                      		clc
  7084 00006BBA C3                      		retn
  7085                                  ; ---------------------------------------------------------------------------
  7086                                  
  7087                                  Make_Bad_Access:			; ...
  7088 00006BBB B80C00                  		mov	ax, 0Ch		; error_invalid_access
  7089 00006BBE 5B                      		pop	bx
  7090 00006BBF F9                      		stc
  7091 00006BC0 C3                      		retn
  7092                                  
  7093                                  ; =============== S U B	R O U T	I N E =======================================
  7094                                  
  7095                                  DISK_INFO:		; ...
  7096 00006BC1 E89DE4                  		call	TestNet
  7097 00006BC4 7306                    		jnb	short LOCAL_DSK_INFO
  7098 00006BC6 B80C11                  		mov	ax, 110Ch
  7099 00006BC9 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - GET DISK SPACE
  7100                                  					; ES:DI	-> current directory
  7101                                  					; Return: AL = sectors per cluster, BX = total clusters
  7102                                  					; CX = bytes per sector, DX = number of	available clusters
  7103 00006BCB C3                      		retn
  7104                                  ; ---------------------------------------------------------------------------
  7105                                  
  7106                                  LOCAL_DSK_INFO:				; ...
  7107 00006BCC C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  7108 00006BD1 E852E5                  		call	ECritDisk
  7109 00006BD4 E8922A                  		call	FATREAD_CDS
  7110 00006BD7 7241                    		jb	short CRIT_LEAVE
  7111 00006BD9 BB0200                  		mov	bx, 2
  7112 00006BDC E8D628                  		call	UNPACK
  7113 00006BDF 7239                    		jb	short CRIT_LEAVE
  7114 00006BE1 C536[E205]              		lds	si, [CURBUF]
  7115 00006BE5 8A6414                  		mov	ah, [si+14h]	; [SI+BUFINSIZ]
  7116 00006BE8 16                      		push	ss
  7117 00006BE9 1F                      		pop	ds
  7118 00006BEA 268B4E0D                		mov	cx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
  7119 00006BEE 268B561F                		mov	dx, [es:bp+1Fh]	; [ES:BP+DPB.FREE_CNT]
  7120 00006BF2 83FAFF                  		cmp	dx, -1		; 0FFFFh
  7121 00006BF5 7404                    		jz	short DoScan
  7122 00006BF7 39CA                    		cmp	dx, cx
  7123 00006BF9 7223                    		jb	short GotVal
  7124                                  
  7125                                  DoScan:					; ...
  7126 00006BFB 31D2                    		xor	dx, dx
  7127 00006BFD 49                      		dec	cx
  7128                                  
  7129                                  SCANFREE:				; ...
  7130 00006BFE E8B428                  		call	UNPACK
  7131 00006C01 7217                    		jb	short CRIT_LEAVE
  7132 00006C03 7501                    		jnz	short NOTFREECLUS
  7133 00006C05 42                      		inc	dx
  7134                                  
  7135                                  NOTFREECLUS:				; ...
  7136 00006C06 43                      		inc	bx
  7137 00006C07 E2F5                    		loop	SCANFREE
  7138 00006C09 4B                      		dec	bx
  7139                                  
  7140                                  ReturnVals:				; ...
  7141 00006C0A 4B                      		dec	bx
  7142 00006C0B 268A4604                		mov	al, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  7143 00006C0F FEC0                    		inc	al
  7144 00006C11 268B4E02                		mov	cx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  7145 00006C15 2689561F                		mov	[es:bp+1Fh], dx	; [ES:BP+DPB.FREE_CNT]
  7146 00006C19 F8                      		clc
  7147                                  
  7148                                  CRIT_LEAVE:				; ...
  7149 00006C1A E829E5                  		call	LCritDisk
  7150 00006C1D C3                      		retn
  7151                                  ; ---------------------------------------------------------------------------
  7152                                  
  7153                                  GotVal:					; ...
  7154 00006C1E 89CB                    		mov	bx, cx
  7155 00006C20 EBE8                    		jmp	short ReturnVals
  7156                                  
  7157                                  ; =============== S U B	R O U T	I N E =======================================
  7158                                  
  7159                                  DOS_SEARCH_FIRST:	; ...
  7160 00006C22 C43E[A205]              		les	di, [THISCDS]
  7161 00006C26 83FFFF                  		cmp	di, 0FFFFh	; -1
  7162 00006C29 7506                    		jnz	short TEST_RE_NET2
  7163 00006C2B B81911                  		mov	ax, 1119h
  7164 00006C2E CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - ???
  7165 00006C30 C3                      		retn
  7166                                  ; ---------------------------------------------------------------------------
  7167                                  
  7168                                  TEST_RE_NET2:				; ...
  7169 00006C31 26F745430080            		test	word [es:di+43h], 8000h ; [ES:DI+curdir.flags],
  7170                                  					; curdir_isnet
  7171 00006C37 7406                    		jz	short LOCAL_SEARCH_FIRST
  7172 00006C39 B81B11                  		mov	ax, 111Bh	; (MultNET<<8)|27
  7173 00006C3C CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - FINDFIRST
  7174                                  					; SS = DS = DOS	CS, [DTA] = uninitialized 21-byte findfirst search data
  7175                                  					; SDA first filename pointer ->	fully-qualified	search template
  7176                                  					; SDA CDS pointer -> current directory
  7177                                  					; Return: CF set on error
  7178 00006C3E C3                      		retn
  7179                                  ; ---------------------------------------------------------------------------
  7180                                  
  7181                                  LOCAL_SEARCH_FIRST:			; ...
  7182 00006C3F E8E4E4                  		call	ECritDisk
  7183 00006C42 F706[1106]0004          		test	word [DOS34_FLAG], 400h ; SEARCH_FASTOPEN
  7184 00006C48 7405                    		jz	short NOFN
  7185 00006C4A 800E[3A0D]01            		or	byte [FastOpenFlg], 1 ; FastOpen_Set
  7186                                  
  7187                                  NOFN:					; ...
  7188 00006C4F C606[4C03]01            		mov	byte [NoSetDir], 1
  7189 00006C54 E84401                  		call	CHECK_QUESTION
  7190 00006C57 7305                    		jnb	short norm_GETPATH
  7191 00006C59 8026[3A0D]80            		and	byte [FastOpenFlg], 80h ; Fast_yes
  7192                                  
  7193                                  norm_GETPATH:				; ...
  7194 00006C5E E8E011                  		call	GETPATH
  7195 00006C61 7319                    		jnb	short find_check_dev
  7196 00006C63 7512                    		jnz	short bad_path3
  7197 00006C65 08C9                    		or	cl, cl
  7198 00006C67 740E                    		jz	short bad_path3
  7199                                  
  7200                                  find_no_more:				; ...
  7201 00006C69 B81200                  		mov	ax, 12h		; error_no_more_files
  7202                                  
  7203                                  BadBye:					; ...
  7204 00006C6C 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  7205 00006C72 F9                      		stc
  7206 00006C73 E8D0E4                  		call	LCritDisk
  7207 00006C76 C3                      		retn
  7208                                  ; ---------------------------------------------------------------------------
  7209                                  
  7210                                  bad_path3:				; ...
  7211 00006C77 B80300                  		mov	ax, 3
  7212 00006C7A EBF0                    		jmp	short BadBye
  7213                                  ; ---------------------------------------------------------------------------
  7214                                  
  7215                                  find_check_dev:				; ...
  7216 00006C7C 08E4                    		or	ah, ah
  7217 00006C7E 790A                    		jns	short found_entry
  7218 00006C80 C706[4803]FFFF          		mov	word [LASTENT], 0FFFFh ; -1
  7219 00006C86 FE06[7005]              		inc	byte [FOUND_DEV]
  7220                                  
  7221                                  found_entry:				; ...
  7222 00006C8A C43E[2C03]              		les	di, [DMAADD]
  7223 00006C8E 8B36[B205]              		mov	si, [WFP_START]
  7224 00006C92 AC                      		lodsb
  7225 00006C93 2C40                    		sub	al, 40h		; 'A'-1
  7226 00006C95 AA                      		stosb
  7227                                  
  7228                                  found_it:				; ...
  7229 00006C96 C43E[2C03]              		les	di, [DMAADD]
  7230 00006C9A 47                      		inc	di
  7231 00006C9B 1E                      		push	ds
  7232 00006C9C F606[3A0D]10            		test	byte [FastOpenFlg], 10h ; Set_For_Search
  7233 00006CA1 7408                    		jz	short notfast
  7234 00006CA3 89DE                    		mov	si, bx
  7235 00006CA5 8E1E[E405]              		mov	ds, word [CURBUF+2]
  7236 00006CA9 EB03                    		jmp	short movmov
  7237                                  ; ---------------------------------------------------------------------------
  7238                                  
  7239                                  notfast:				; ...
  7240 00006CAB BE[4B05]                		mov	si, NAME1
  7241                                  
  7242                                  movmov:					; ...
  7243 00006CAE A4                      		movsb
  7244 00006CAF 26807DFF05              		cmp	byte [es:di-1], 5
  7245 00006CB4 7505                    		jnz	short NOTKANJB
  7246 00006CB6 26C645FFE5              		mov	byte [es:di-1], 0E5h
  7247                                  
  7248                                  NOTKANJB:				; ...
  7249 00006CBB B90A00                  		mov	cx, 10
  7250 00006CBE F3A4                    		rep movsb
  7251 00006CC0 1F                      		pop	ds
  7252 00006CC1 A0[6B05]                		mov	al, [ATTRIB]
  7253 00006CC4 AA                      		stosb
  7254 00006CC5 50                      		push	ax
  7255 00006CC6 A1[4803]                		mov	ax, [LASTENT]
  7256 00006CC9 AB                      		stosw
  7257 00006CCA A1[C205]                		mov	ax, [DIRSTART]
  7258 00006CCD AB                      		stosw
  7259 00006CCE 83C704                  		add	di, 4
  7260 00006CD1 58                      		pop	ax
  7261 00006CD2 08E4                    		or	ah, ah
  7262 00006CD4 781B                    		js	short DOSREL
  7263 00006CD6 833E[E205]FF            		cmp	word [CURBUF], -1 ; 0FFFFh
  7264 00006CDB 7510                    		jnz	short OKSTORE
  7265 00006CDD F606[3A0D]10            		test	byte [FastOpenFlg], 10h ; Set_For_Search
  7266 00006CE2 7509                    		jnz	short OKSTORE
  7267 00006CE4 26C745F8FFFF            		mov	word [es:di-8], 0FFFFh ; -1
  7268 00006CEA E97CFF                  		jmp	find_no_more
  7269                                  ; ---------------------------------------------------------------------------
  7270                                  
  7271                                  OKSTORE:				; ...
  7272 00006CED 8E1E[E405]              		mov	ds, word [CURBUF+2]
  7273                                  
  7274                                  DOSREL:					; ...
  7275 00006CF1 89DE                    		mov	si, bx
  7276 00006CF3 B92000                  		mov	cx, 32		; dir_entry.size
  7277 00006CF6 89F8                    		mov	ax, di
  7278 00006CF8 F3A4                    		rep movsb
  7279 00006CFA 89C7                    		mov	di, ax
  7280 00006CFC 26803D05                		cmp	byte [es:di], 5
  7281 00006D00 7504                    		jnz	short NO05
  7282 00006D02 26C605E5                		mov	byte [es:di], 0E5h
  7283                                  
  7284                                  NO05:					; ...
  7285 00006D06 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  7286 00006D0C 16                      		push	ss
  7287 00006D0D 1F                      		pop	ds
  7288 00006D0E F8                      		clc
  7289 00006D0F E834E4                  		call	LCritDisk
  7290 00006D12 C3                      		retn
  7291                                  
  7292                                  ; =============== S U B	R O U T	I N E =======================================
  7293                                  
  7294                                  DOS_SEARCH_NEXT:
  7295 00006D13 C43E[2C03]              		les	di, [DMAADD]
  7296 00006D17 268A05                  		mov	al, [es:di]
  7297 00006D1A A880                    		test	al, 80h
  7298 00006D1C 7406                    		jz	short LOCAL_SEARCH_NEXT
  7299 00006D1E B81C11                  		mov	ax, 111Ch
  7300 00006D21 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - FINDNEXT
  7301                                  					; SS = DS = DOS	CS, [DTA] = 21-byte findfirst search data
  7302                                  					; Return: CF set on error, AX =	DOS error code
  7303                                  					; CF clear if successful
  7304 00006D23 C3                      		retn
  7305                                  ; ---------------------------------------------------------------------------
  7306                                  
  7307                                  LOCAL_SEARCH_NEXT:			; ...
  7308 00006D24 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  7309 00006D29 E8FAE3                  		call	ECritDisk
  7310 00006D2C C706[A205][F304]        		mov	word [THISCDS], DUMMYCDS
  7311 00006D32 8C1E[A405]              		mov	word [THISCDS+2], ds
  7312 00006D36 0440                    		add	al, 40h		; 'A'-1
  7313 00006D38 E8623C                  		call	InitCDS
  7314 00006D3B 7236                    		jb	short No_files
  7315 00006D3D C43E[A205]              		les	di, [THISCDS]
  7316 00006D41 26C46D45                		les	bp, [es:di+45h]	; [ES:DI+curdir.devptr]
  7317 00006D45 E893D6                  		call	GOTDPB
  7318 00006D48 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
  7319 00006D4C A2[7605]                		mov	[THISDRV], al
  7320 00006D4F C706[7E05]00E5          		mov	word [CREATING], 0E500h ; (DIRFREE*256)+0
  7321 00006D55 C606[4C03]01            		mov	byte [NoSetDir], 1
  7322 00006D5A C536[2C03]              		lds	si, [DMAADD]
  7323 00006D5E AC                      		lodsb
  7324                                  
  7325                                  RENAME_NEXT:				; ...
  7326 00006D5F 16                      		push	ss
  7327 00006D60 07                      		pop	es
  7328 00006D61 BF[4B05]                		mov	di, NAME1
  7329 00006D64 B90B00                  		mov	cx, 11
  7330 00006D67 F3A4                    		rep movsb
  7331 00006D69 AC                      		lodsb
  7332 00006D6A 36A2[6B05]              		mov	[ss:ATTRIB], al
  7333 00006D6E AD                      		lodsw
  7334 00006D6F 09C0                    		or	ax, ax
  7335 00006D71 7903                    		jns	short cont_load
  7336                                  
  7337                                  No_files:				; ...
  7338 00006D73 E9F3FE                  		jmp	find_no_more
  7339                                  ; ---------------------------------------------------------------------------
  7340                                  
  7341                                  cont_load:				; ...
  7342 00006D76 50                      		push	ax
  7343 00006D77 AD                      		lodsw
  7344 00006D78 89C3                    		mov	bx, ax
  7345 00006D7A 16                      		push	ss
  7346 00006D7B 1F                      		pop	ds
  7347 00006D7C C42E[8A05]              		les	bp, [THISDPB]
  7348 00006D80 E85910                  		call	SETDIRSRCH
  7349 00006D83 7303                    		jnb	short SEARCH_GOON
  7350 00006D85 58                      		pop	ax
  7351 00006D86 EBEB                    		jmp	short No_files
  7352                                  ; ---------------------------------------------------------------------------
  7353                                  
  7354                                  SEARCH_GOON:				; ...
  7355 00006D88 E86113                  		call	STARTSRCH
  7356 00006D8B 58                      		pop	ax
  7357 00006D8C E81E10                  		call	GETENT
  7358 00006D8F 72E2                    		jb	short No_files
  7359 00006D91 E84D0F                  		call	NEXTENT
  7360 00006D94 72DD                    		jb	short No_files
  7361 00006D96 30E4                    		xor	ah, ah
  7362 00006D98 E9FBFE                  		jmp	found_it
  7363                                  
  7364                                  ; =============== S U B	R O U T	I N E =======================================
  7365                                  
  7366                                  CHECK_QUESTION:	; ...
  7367 00006D9B 16                      		push	ss
  7368 00006D9C 1F                      		pop	ds
  7369 00006D9D 368B36[B205]            		mov	si, [ss:WFP_START]
  7370                                  
  7371                                  getnext:				; ...
  7372 00006DA2 AC                      		lodsb
  7373 00006DA3 08C0                    		or	al, al
  7374 00006DA5 7405                    		jz	short NO_Question
  7375 00006DA7 3C3F                    		cmp	al, '?'
  7376 00006DA9 75F7                    		jnz	short getnext
  7377 00006DAB F9                      		stc
  7378                                  
  7379                                  NO_Question:				; ...
  7380 00006DAC C3                      		retn
  7381                                  
  7382                                  ; =============== S U B	R O U T	I N E =======================================
  7383                                  
  7384                                  DOS_ABORT:		; ...
  7385 00006DAD 368E06[3003]            		mov	es, [ss:CurrentPDB]
  7386 00006DB2 268B0E3200              		mov	cx, [es:32h]	; [ES:PDB.JFN_Length]
  7387                                  
  7388                                  reset_free_jfn:				; ...
  7389 00006DB7 89CB                    		mov	bx, cx
  7390 00006DB9 51                      		push	cx
  7391 00006DBA 4B                      		dec	bx
  7392 00006DBB E80D39                  		call	_$CLOSE
  7393 00006DBE 59                      		pop	cx
  7394 00006DBF E2F6                    		loop	reset_free_jfn
  7395 00006DC1 16                      		push	ss
  7396 00006DC2 1F                      		pop	ds
  7397 00006DC3 B81D11                  		mov	ax, 111Dh	; Net_Abort, MultNET, 29
  7398 00006DC6 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CLOSE ALL REMOTE FILES FOR PROCESS
  7399                                  					; DS???, SS = DOS CS
  7400                                  		;call	dword [MFTCloseP] ; call far [JShare+(4*4)]
  7401 00006DC8 FF1E[A000]              		call	far [JShare+(4*4)]
  7402 00006DCC 36C43E[4000]            		les	di, [ss:SFTFCB]
  7403 00006DD1 268B4D04                		mov	cx, [es:di+4]	; [es:di+SFT.SFCount]
  7404 00006DD5 E317                    		jcxz	FCBScanDone
  7405 00006DD7 8D7D06                  		lea	di, [di+6]	; [DI+SFT.SFTable]
  7406 00006DDA 36A1[3C03]              		mov	ax, [ss:PROC_ID]
  7407                                  
  7408                                  FCBTest:				; ...
  7409 00006DDE 26394531                		cmp	[es:di+31h], ax	; [es:di+SF_ENTRY.sf_PID]
  7410 00006DE2 7505                    		jnz	short FCBNext
  7411 00006DE4 26C7050000              		mov	word [es:di], 0 ; [es:di+SF_ENTRY.sf_ref_count]
  7412                                  
  7413                                  FCBNext:				; ...
  7414 00006DE9 83C73B                  		add	di, 3Bh	; ';'
  7415 00006DEC E2F0                    		loop	FCBTest
  7416                                  
  7417                                  FCBScanDone:				; ...
  7418 00006DEE 31DB                    		xor	bx, bx
  7419                                  
  7420                                  Scan:					; ...
  7421 00006DF0 53                      		push	bx
  7422 00006DF1 E85038                  		call	SFFromSFN
  7423 00006DF4 5B                      		pop	bx
  7424 00006DF5 7301                    		jnb	short Scan1
  7425 00006DF7 C3                      		retn
  7426                                  ; ---------------------------------------------------------------------------
  7427                                  
  7428                                  Scan1:					; ...
  7429 00006DF8 26833DFF                		cmp	word [es:di], 0FFFFh ; [es:di+SF_ENTRY.sf_ref_count],
  7430                                  					; sf_busy
  7431 00006DFC 7519                    		jnz	short scan_next
  7432 00006DFE 36A1[3C03]              		mov	ax, [ss:PROC_ID]
  7433 00006E02 26394531                		cmp	[es:di+31h], ax	; [es:di+SF_ENTRY.sf_PID]
  7434 00006E06 750F                    		jnz	short scan_next
  7435 00006E08 36A1[3E03]              		mov	ax, [ss:USER_ID]
  7436 00006E0C 2639452F                		cmp	[es:di+2Fh], ax	; [es:di+SF_ENTRY.sf_UID]
  7437 00006E10 7505                    		jnz	short scan_next
  7438 00006E12 26C7050000              		mov	word [es:di], 0 ; [es:di+SF_ENTRY.sf_ref_count]
  7439                                  
  7440                                  scan_next:				; ...
  7441 00006E17 43                      		inc	bx
  7442 00006E18 EBD6                    		jmp	short Scan
  7443                                  
  7444                                  ; =============== S U B	R O U T	I N E =======================================
  7445                                  
  7446                                  DOS_CLOSE:		; ...
  7447 00006E1A C43E[9E05]              		les	di, [THISSFT]
  7448 00006E1E 268B5D05                		mov	bx, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  7449 00006E22 F7C30080                		test	bx, 8000h	; sf_isnet
  7450 00006E26 7406                    		jz	short LocalClose
  7451 00006E28 B80611                  		mov	ax, 1106h
  7452 00006E2B CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CLOSE REMOTE	FILE
  7453                                  					; ES:DI	-> SFT
  7454                                  					; SFT DPB field	-> DPB of drive	containing file
  7455                                  					; Return: CF set on error, AX =	DOS error code
  7456                                  					; CF clear if successful
  7457 00006E2D C3                      		retn
  7458                                  ; ---------------------------------------------------------------------------
  7459                                  
  7460                                  LocalClose:				; ...
  7461 00006E2E E8F5E2                  		call	ECritDisk
  7462 00006E31 E87001                  		call	SetSFTTimes
  7463 00006E34 E8E400                  		call	FREE_SFT
  7464 00006E37 16                      		push	ss
  7465 00006E38 1F                      		pop	ds
  7466 00006E39 50                      		push	ax
  7467 00006E3A 53                      		push	bx
  7468 00006E3B E81545                  		call	ShareEnd
  7469 00006E3E 5B                      		pop	bx
  7470 00006E3F 58                      		pop	ax
  7471                                  
  7472                                  CloseEntry:				; ...
  7473 00006E40 50                      		push	ax
  7474 00006E41 F7C3C000                		test	bx, 0C0h	; devid_file_clean+devid_device
  7475 00006E45 7403                    		jz	short rdir
  7476 00006E47 E9BE00                  		jmp	FREE_SFT_OK
  7477                                  ; ---------------------------------------------------------------------------
  7478                                  
  7479                                  rdir:					; ...
  7480 00006E4A E8DB00                  		call	DirFromSFT
  7481 00006E4D B005                    		mov	al, 5		; error_access_denied
  7482 00006E4F 7303                    		jnb	short clook
  7483 00006E51 E9B500                  		jmp	CloseFinish
  7484                                  ; ---------------------------------------------------------------------------
  7485                                  
  7486                                  clook:					; ...
  7487 00006E54 57                      		push	di
  7488 00006E55 56                      		push	si
  7489 00006E56 8D7420                  		lea	si, [si+20h]	; [SI+SF_ENTRY.sf_name]
  7490 00006E59 E8B9E1                  		call	XCHGP
  7491 00006E5C E8E00E                  		call	MetaCompare
  7492 00006E5F E8B3E1                  		call	XCHGP
  7493 00006E62 5E                      		pop	si
  7494 00006E63 5F                      		pop	di
  7495 00006E64 740C                    		jz	short CLOSE_GO
  7496 00006E66 89F7                    		mov	di, si
  7497 00006E68 1E                      		push	ds
  7498 00006E69 07                      		pop	es
  7499 00006E6A 16                      		push	ss
  7500 00006E6B 1F                      		pop	ds
  7501 00006E6C F9                      		stc
  7502 00006E6D B002                    		mov	al, 2
  7503 00006E6F E99700                  		jmp	CloseFinish
  7504                                  ; ---------------------------------------------------------------------------
  7505                                  
  7506                                  CLOSE_GO:				; ...
  7507 00006E72 F744020080              		test	word [si+2], 8000h ; [SI+SF_ENTRY.sf_mode],
  7508                                  					; sf_isFCB
  7509 00006E77 740D                    		jz	short nofcb
  7510 00006E79 268A6D0B                		mov	ch, [es:di+0Bh]	; [ES:DI+dir_entry.dir_attr]
  7511 00006E7D 8A4404                  		mov	al, [si+4]	; [SI+SF_ENTRY.sf_attr]
  7512 00006E80 36A2[6B05]              		mov	[ss:ATTRIB], al
  7513 00006E84 EB07                    		jmp	short setattr
  7514                                  ; ---------------------------------------------------------------------------
  7515                                  
  7516                                  nofcb:					; ...
  7517 00006E86 8A4404                  		mov	al, [si+4]	; [SI+SF_ENTRY.sf_attr]
  7518 00006E89 2688450B                		mov	[es:di+0Bh], al	; [ES:DI+dir_entry.dir_attr]
  7519                                  
  7520                                  setattr:				; ...
  7521 00006E8D 26804D0B20              		or	byte [es:di+0Bh], 20h ; [ES:DI+dir_entry.dir_attr],
  7522                                  					; attr_archive
  7523 00006E92 268B451A                		mov	ax, [es:di+1Ah]	; [ES:DI+dir_entry.dir_first]
  7524 00006E96 36A3[BE0F]              		mov	[ss:OLD_FIRSTCLUS], ax
  7525 00006E9A 8B440B                  		mov	ax, [si+0Bh]	; [SI+SF_ENTRY.sf_firclus]
  7526 00006E9D 2689451A                		mov	[es:di+1Ah], ax	; [ES:DI+dir_entry.dir_first]
  7527 00006EA1 8B4411                  		mov	ax, [si+11h]	; [SI+SF_ENTRY.sf_size]
  7528 00006EA4 2689451C                		mov	[es:di+1Ch], ax	; [ES:DI+dir_entry.dir_size_l]
  7529 00006EA8 8B4413                  		mov	ax, [si+13h]	; [SI+SF_ENTRY.sf_size+2]
  7530 00006EAB 2689451E                		mov	[es:di+1Eh], ax	; [ES:DI+dir_entry.dir_size_h]
  7531 00006EAF 8B440F                  		mov	ax, [si+0Fh]	; [SI+SF_ENTRY.sf_date]
  7532 00006EB2 26894518                		mov	[es:di+18h], ax	; [ES:DI+dir_entry.dir_date]
  7533 00006EB6 8B440D                  		mov	ax, [si+0Dh]	; [SI+SF_ENTRY.sf_time]
  7534 00006EB9 26894516                		mov	[es:di+16h], ax	; [ES:DI+dir_entry.dir_time]
  7535 00006EBD 26F6470540              		test	byte [es:bx+5], 40h	; [ES:BX+BUFFINFO.buf_flags],
  7536                                  					; buf_dirty
  7537 00006EC2 7508                    		jnz	short yesdirty4
  7538 00006EC4 E81F2C                  		call	INC_DIRTY_COUNT
  7539 00006EC7 26804F0540              		or	byte [es:bx+5], 40h	; [ES:BX+BUFFINFO.buf_flags],
  7540                                  					; buf_dirty
  7541                                  
  7542                                  yesdirty4:				; ...
  7543 00006ECC 1E                      		push	ds
  7544 00006ECD 56                      		push	si
  7545 00006ECE 8B4C0B                  		mov	cx, [si+0Bh]	; [SF_ENTRY.sf_firclus]
  7546 00006ED1 36A0[7605]              		mov	al, [ss:THISDRV]
  7547 00006ED5 52                      		push	dx
  7548 00006ED6 B400                    		mov	ah, 0
  7549 00006ED8 88C2                    		mov	dl, al
  7550 00006EDA 09C9                    		or	cx, cx
  7551 00006EDC 750D                    		jnz	short do_update2
  7552 00006EDE B403                    		mov	ah, 3
  7553 00006EE0 8B7C1B                  		mov	di, [si+1Bh]	; [SI+SF_ENTRY.sf_dirsec]
  7554 00006EE3 8B4C1D                  		mov	cx, [si+1Dh]	; [SI+SF_ENTRY.sf_dirsec+2]
  7555 00006EE6 8A741F                  		mov	dh, [si+1Fh]	; [SI+SF_ENTRY.sf_dirpos]
  7556 00006EE9 EB0E                    		jmp	short do_update
  7557                                  ; ---------------------------------------------------------------------------
  7558                                  
  7559                                  do_update2:				; ...
  7560 00006EEB 363B0E[BE0F]            		cmp	cx, [ss:OLD_FIRSTCLUS]
  7561 00006EF0 7407                    		jz	short do_update
  7562 00006EF2 B402                    		mov	ah, 2
  7563 00006EF4 368B0E[BE0F]            		mov	cx, [ss:OLD_FIRSTCLUS]
  7564                                  
  7565                                  do_update:				; ...
  7566 00006EF9 16                      		push	ss
  7567 00006EFA 1F                      		pop	ds
  7568 00006EFB E8BCF6                  		call	FastOpen_Update
  7569 00006EFE 5A                      		pop	dx
  7570 00006EFF E8D82A                  		call	FLUSHBUF
  7571 00006F02 5F                      		pop	di
  7572 00006F03 07                      		pop	es
  7573 00006F04 B005                    		mov	al, 5		; error_access_denied
  7574 00006F06 7201                    		jb	short CloseFinish
  7575                                  
  7576                                  FREE_SFT_OK:				; ...
  7577 00006F08 F8                      		clc
  7578                                  
  7579                                  CloseFinish:				; ...
  7580 00006F09 9C                      		pushf
  7581 00006F0A E82916                  		call	DEV_CLOSE_SFT
  7582 00006F0D 9D                      		popf
  7583 00006F0E 59                      		pop	cx
  7584 00006F0F 9C                      		pushf
  7585 00006F10 49                      		dec	cx
  7586 00006F11 7503                    		jnz	short NoFree
  7587 00006F13 26890D                  		mov	[es:di], cx	; [ES:DI+SF_ENTRY.sf_ref_Count]
  7588                                  
  7589                                  NoFree:					; ...
  7590 00006F16 E82DE2                  		call	LCritDisk
  7591 00006F19 9D                      		popf
  7592 00006F1A C3                      		retn
  7593                                  
  7594                                  ; =============== S U B	R O U T	I N E =======================================
  7595                                  
  7596                                  FREE_SFT:		; ...
  7597 00006F1B 9C                      		pushf
  7598 00006F1C 268B05                  		mov	ax, [es:di]	; [ES:DI+SF_ENTRY.sf_ref_count]
  7599 00006F1F 48                      		dec	ax
  7600 00006F20 7501                    		jnz	short SetCount
  7601 00006F22 48                      		dec	ax
  7602                                  
  7603                                  SetCount:				; ...
  7604 00006F23 268705                  		xchg	ax, [es:di]	; [ES:DI+SF_ENTRY.sf_ref_count]
  7605 00006F26 9D                      		popf
  7606 00006F27 C3                      		retn
  7607                                  
  7608                                  ; =============== S U B	R O U T	I N E =======================================
  7609                                  
  7610                                  DirFromSFT:		; ...
  7611 00006F28 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  7612 00006F2D 06                      		push	es
  7613 00006F2E 57                      		push	di
  7614 00006F2F 268B551D                		mov	dx, [es:di+1Dh]	; [ES:DI+SF_ENTRY.sf_dirsec+2]
  7615 00006F33 8916[0706]              		mov	word [HIGH_SECTOR], dx
  7616 00006F37 268B551B                		mov	dx, [es:di+1Bh]	; [ES:DI+SF_ENTRY.sf_dirsec]
  7617 00006F3B FF36[0706]              		push	word [HIGH_SECTOR]
  7618 00006F3F 52                      		push	dx
  7619 00006F40 E81427                  		call	FATREAD_SFT
  7620 00006F43 5A                      		pop	dx
  7621 00006F44 8F06[0706]              		pop	word [HIGH_SECTOR]
  7622 00006F48 7225                    		jb	short PopDone
  7623 00006F4A 30C0                    		xor	al, al
  7624 00006F4C C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
  7625 00006F51 E88729                  		call	GETBUFFR
  7626 00006F54 7219                    		jb	short PopDone
  7627 00006F56 5E                      		pop	si
  7628 00006F57 1F                      		pop	ds
  7629 00006F58 36C43E[E205]            		les	di, [ss:CURBUF]
  7630 00006F5D 26804D0504              		or	byte [es:di+5], 4
  7631 00006F62 89FB                    		mov	bx, di
  7632 00006F64 8D7D14                  		lea	di, [di+14h]
  7633 00006F67 B020                    		mov	al, 20h	; ' '
  7634 00006F69 F6641F                  		mul	byte [si+1Fh]
  7635 00006F6C 01C7                    		add	di, ax
  7636 00006F6E C3                      		retn
  7637                                  ; ---------------------------------------------------------------------------
  7638                                  
  7639                                  PopDone:				; ...
  7640 00006F6F 5F                      		pop	di
  7641 00006F70 07                      		pop	es
  7642                                  
  7643                                  PopDone_retn:				; ...
  7644 00006F71 C3                      		retn
  7645                                  
  7646                                  ; =============== S U B	R O U T	I N E =======================================
  7647                                  
  7648                                  DOS_COMMIT:		; ...
  7649 00006F72 C43E[9E05]              		les	di, [THISSFT]
  7650 00006F76 268B5D05                		mov	bx, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  7651 00006F7A F7C3C000                		test	bx, 0C0h	; devid_file_clean+devid_device
  7652 00006F7E 75F1                    		jnz	short PopDone_retn
  7653 00006F80 F7C30080                		test	bx, 8000h	; sf_isnet
  7654 00006F84 7406                    		jz	short LOCAL_COMMIT
  7655 00006F86 B80711                  		mov	ax, 1107h
  7656 00006F89 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - COMMIT REMOTE FILE
  7657                                  					; ES:DI	-> SFT
  7658                                  					; SFT DPB field	-> DPB of drive	containing file
  7659                                  					; Return: CF set on error, AX =	DOS error code
  7660                                  					; CF clear if successful
  7661 00006F8B C3                      		retn
  7662                                  ; ---------------------------------------------------------------------------
  7663                                  
  7664                                  LOCAL_COMMIT:				; ...
  7665 00006F8C E897E1                  		call	ECritDisk
  7666 00006F8F E894E1                  		call	ECritDisk
  7667 00006F92 E80F00                  		call	SetSFTTimes
  7668 00006F95 B8FFFF                  		mov	ax, -1
  7669 00006F98 E8A5FE                  		call	CloseEntry
  7670 00006F9B 9C                      		pushf
  7671 00006F9C E88F15                  		call	DEV_OPEN_SFT
  7672 00006F9F 9D                      		popf
  7673 00006FA0 E8A3E1                  		call	LCritDisk
  7674                                  
  7675                                  localcommit_retn:			; ...
  7676 00006FA3 C3                      		retn
  7677                                  
  7678                                  ; =============== S U B	R O U T	I N E =======================================
  7679                                  
  7680                                  SetSFTTimes:	; ...
  7681 00006FA4 F7C3C000                		test	bx, 0C0h	; devid_file_clean+devid_device
  7682 00006FA8 75F9                    		jnz	short localcommit_retn
  7683 00006FAA F7C30040                		test	bx, 4000h	; sf_close_nodate
  7684 00006FAE 75F3                    		jnz	short localcommit_retn
  7685 00006FB0 50                      		push	ax
  7686 00006FB1 53                      		push	bx
  7687 00006FB2 E80CD9                  		call	DATE16
  7688 00006FB5 2689450F                		mov	[es:di+0Fh], ax	; [ES:DI+SF_ENTRY.sf_date]
  7689 00006FB9 2689550D                		mov	[es:di+0Dh], dx	; [ES:DI+SF_ENTRY.sf_time]
  7690 00006FBD 31C0                    		xor	ax, ax
  7691                                  		;call	dword [ShSU] ; call far [JShare+(14*4)]
  7692 00006FBF FF1E[C800]              		call	far [JShare+(14*4)]
  7693 00006FC3 5B                      		pop	bx
  7694 00006FC4 58                      		pop	ax
  7695 00006FC5 C3                      		retn
  7696                                  
  7697                                  ; ---------------------------------------------------------------------------
  7698                                  
  7699                                  DOS_MKDIR:				; ...
  7700 00006FC6 E898E0                  		call	TestNet
  7701 00006FC9 7314                    		jnb	short LOCAL_MKDIR
  7702 00006FCB B80311                  		mov	ax, 1103h
  7703 00006FCE CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - MAKE	REMOTE DIRECTORY
  7704                                  					; SS = DOS CS
  7705                                  					; SDA first filename pointer ->	fully-qualified	directory name
  7706                                  					; SDA CDS pointer -> current directory
  7707                                  					; Return: CF set on error, AX =	DOS error code
  7708                                  					; CF clear if successful
  7709 00006FD0 C3                      		retn
  7710                                  ; ---------------------------------------------------------------------------
  7711                                  ; START	OF FUNCTION CHUNK FOR DOS_CHDIR
  7712                                  
  7713                                  NODEACCERRJ:				; ...
  7714 00006FD1 B80500                  		mov	ax, 5		; error_access_denied
  7715                                  
  7716                                  _BadRet:				; ...
  7717 00006FD4 F9                      		stc
  7718 00006FD5 E86EE1                  		call	LCritDisk
  7719 00006FD8 C3                      		retn
  7720                                  ; END OF FUNCTION CHUNK	FOR DOS_CHDIR
  7721                                  ; ---------------------------------------------------------------------------
  7722                                  
  7723                                  PATHNFJ:				; ...
  7724 00006FD9 E86AE1                  		call	LCritDisk
  7725 00006FDC E9CAF9                  		jmp	SET_MKND_ERR
  7726                                  ; ---------------------------------------------------------------------------
  7727                                  
  7728                                  LOCAL_MKDIR:				; ...
  7729 00006FDF E844E1                  		call	ECritDisk
  7730 00006FE2 8C16[A005]              		mov	word [THISSFT+2], ss
  7731 00006FE6 C706[9E05][3E04]        		mov	word [THISSFT], RENBUF
  7732 00006FEC C706[7104]0000          		mov	word [RENBUF+33h], 0 ; [RENBUF+SF_ENTRY.sf_MFT]
  7733 00006FF2 B010                    		mov	al, 10h		; attr_directory
  7734 00006FF4 E8F318                  		call	MakeNode
  7735 00006FF7 72E0                    		jb	short PATHNFJ
  7736 00006FF9 83F803                  		cmp	ax, 3
  7737 00006FFC 74D3                    		jz	short NODEACCERRJ
  7738 00006FFE C42E[8A05]              		les	bp, [THISDPB]
  7739 00007002 C53E[E205]              		lds	di, [CURBUF]
  7740 00007006 29FE                    		sub	si, di
  7741 00007008 56                      		push	si
  7742 00007009 FF7508                  		push	word [di+8]	; [DI+BUFFINFO.buf_sector+2]
  7743 0000700C FF7506                  		push	word [di+6]	; [DI+BUFFINFO.buf_sector]
  7744 0000700F 16                      		push	ss
  7745 00007010 1F                      		pop	ds
  7746 00007011 FF36[C205]              		push	word [DIRSTART]
  7747 00007015 31C0                    		xor	ax, ax
  7748 00007017 A3[C205]                		mov	[DIRSTART], ax
  7749 0000701A E80018                  		call	NEWDIR
  7750 0000701D 7277                    		jb	short NODEEXISTSPOPDEL
  7751 0000701F E88B0D                  		call	GETENT
  7752 00007022 7272                    		jb	short NODEEXISTSPOPDEL
  7753 00007024 C43E[E205]              		les	di, [CURBUF]
  7754 00007028 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  7755                                  					; buf_dirty
  7756 0000702D 7508                    		jnz	short yesdirty5
  7757 0000702F E8B42A                  		call	INC_DIRTY_COUNT
  7758 00007032 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],buf_dirty
  7759                                  
  7760                                  yesdirty5:				; ...
  7761 00007037 83C714                  		add	di, 20		; BUFINSIZ
  7762 0000703A B82E20                  		mov	ax, 202Eh	; ". "
  7763 0000703D 8B16[C205]              		mov	dx, [DIRSTART]
  7764 00007041 E88218                  		call	SETDOTENT
  7765 00007044 B82E2E                  		mov	ax, 2E2Eh	; ".."
  7766 00007047 5A                      		pop	dx
  7767 00007048 E87B18                  		call	SETDOTENT
  7768 0000704B C42E[8A05]              		les	bp, [THISDPB]
  7769 0000704F C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
  7770 00007054 5A                      		pop	dx
  7771 00007055 8F06[0706]              		pop	word [HIGH_SECTOR]
  7772 00007059 30C0                    		xor	al, al
  7773 0000705B E87D28                  		call	GETBUFFR
  7774 0000705E 7263                    		jb	short NODEEXISTSP
  7775 00007060 8B16[C205]              		mov	dx, [DIRSTART]
  7776 00007064 C53E[E205]              		lds	di, [CURBUF]
  7777 00007068 804D0504                		or	byte [di+5], 4
  7778 0000706C 5E                      		pop	si
  7779 0000706D 01FE                    		add	si, di
  7780 0000706F 8914                    		mov	[si], dx
  7781 00007071 31D2                    		xor	dx, dx
  7782 00007073 895402                  		mov	[si+2],	dx
  7783 00007076 895404                  		mov	[si+4],	dx
  7784                                  
  7785                                  ; =============== S U B	R O U T	I N E =======================================
  7786                                  
  7787                                  DIRUP:		; ...
  7788 00007079 F6450540                		test	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
  7789 0000707D 7507                    		jnz	short yesdirty6
  7790 0000707F E8642A                  		call	INC_DIRTY_COUNT
  7791 00007082 804D0540                		or	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
  7792                                  
  7793                                  yesdirty6:				; ...
  7794 00007086 16                      		push	ss
  7795 00007087 1F                      		pop	ds
  7796 00007088 268A4600                		mov	al, [es:bp+0]
  7797 0000708C E84B29                  		call	FLUSHBUF
  7798 0000708F B80500                  		mov	ax, 5
  7799 00007092 E8B1E0                  		call	LCritDisk
  7800 00007095 C3                      		retn
  7801                                  
  7802                                  ; ---------------------------------------------------------------------------
  7803                                  
  7804                                  NODEEXISTSPOPDEL:			; ...
  7805 00007096 5A                      		pop	dx
  7806 00007097 5A                      		pop	dx
  7807 00007098 8F06[0706]              		pop	word [HIGH_SECTOR]
  7808 0000709C C42E[8A05]              		les	bp, [THISDPB]
  7809 000070A0 C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
  7810 000070A5 30C0                    		xor	al, al
  7811 000070A7 E83128                  		call	GETBUFFR
  7812 000070AA 7217                    		jb	short NODEEXISTSP
  7813 000070AC C53EE205                		lds	di, [5E2h]
  7814 000070B0 804D0504                		or	byte [di+5], 4
  7815 000070B4 5E                      		pop	si
  7816 000070B5 01FE                    		add	si, di
  7817 000070B7 83EE1A                  		sub	si, 1Ah
  7818 000070BA C604E5                  		mov	byte [si], 0E5h
  7819 000070BD E8B9FF                  		call	DIRUP
  7820                                  
  7821                                  NODEEXISTS:				; ...
  7822 000070C0 E90EFF                  		jmp	NODEACCERRJ
  7823                                  ; ---------------------------------------------------------------------------
  7824                                  
  7825                                  NODEEXISTSP:				; ...
  7826 000070C3 5E                      		pop	si
  7827 000070C4 EBFA                    		jmp	short NODEEXISTS
  7828                                  
  7829                                  ; =============== S U B	R O U T	I N E =======================================
  7830                                  
  7831                                  DOS_CHDIR:		; ...
  7832                                  
  7833                                  arg_7E		equ 80h
  7834                                  
  7835                                  ; FUNCTION CHUNK AT 6FD1 SIZE 00000008 BYTES
  7836                                  ; FUNCTION CHUNK AT 713D SIZE 00000003 BYTES
  7837                                  
  7838 000070C6 E898DF                  		call	TestNet
  7839 000070C9 7306                    		jnb	short LOCAL_CHDIR
  7840 000070CB B80511                  		mov	ax, 1105h
  7841 000070CE CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CHDIR
  7842                                  					; SS = DOS CS
  7843                                  					; SDA first filename pointer ->	fully-qualified	directory name
  7844                                  					; SDA CDS pointer -> current directory
  7845                                  					; Return: CF set on error, AX =	DOS error code
  7846                                  					; CF clear if successful
  7847 000070D0 C3                      		retn
  7848                                  ; ---------------------------------------------------------------------------
  7849                                  
  7850                                  LOCAL_CHDIR:				; ...
  7851 000070D1 E852E0                  		call	ECritDisk
  7852 000070D4 26F745430020            		test	word [es:di+43h], 2000h ; [ES:DI+curdir.flags],curdir_splice
  7853 000070DA 7406                    		jz	short nojoin
  7854 000070DC 26C74549FFFF            		mov	word [es:di+49h], 0FFFFh ; [ES:DI+curdir.ID]
  7855                                  
  7856                                  nojoin:					; ...
  7857 000070E2 C606[4C03]00            		mov	byte [NoSetDir], 0
  7858 000070E7 C606[6D05]16            		mov	byte [SATTRIB], 16h ; attr_directory+attr_system+attr_hidden
  7859 000070EC 800E[3A0D]01            		or	byte [FastOpenFlg], 1 ; FastOpen_Set
  7860 000070F1 E84D0D                  		call	GETPATH
  7861 000070F4 9C                      		pushf
  7862 000070F5 8026[3A0D]80            		and	byte [FastOpenFlg], 80h ; Fast_yes
  7863 000070FA 9D                      		popf
  7864 000070FB B80300                  		mov	ax, 3		; error_path_not_found
  7865 000070FE 7207                    		jb	short ChDirDone
  7866 00007100 753B                    		jnz	short NOTDIRPATH
  7867 00007102 8B0E[C205]              		mov	cx, [DIRSTART]
  7868 00007106 F8                      		clc
  7869                                  
  7870                                  ChDirDone:				; ...
  7871 00007107 E83CE0                  		call	LCritDisk
  7872 0000710A C3                      		retn
  7873                                  
  7874                                  ; ---------------------------------------------------------------------------
  7875                                  
  7876                                  DOS_RMDIR:				; ...
  7877 0000710B E853DF                  		call	TestNet
  7878 0000710E 7306                    		jnb	short LOCAL_RMDIR
  7879 00007110 B80111                  		mov	ax, 1101h
  7880 00007113 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - REMOVE REMOTE DIRECTORY
  7881                                  					; SS = DOS CS
  7882                                  					; SDA first filename pointer ->	fully-qualified	directory name
  7883                                  					; SDA CDS pointer -> current directory
  7884                                  					; Return: CF set on error, AX =	DOS error code
  7885                                  					; CF clear if successful
  7886 00007115 C3                      		retn
  7887                                  ; ---------------------------------------------------------------------------
  7888                                  
  7889                                  LOCAL_RMDIR:				; ...
  7890 00007116 E80DE0                  		call	ECritDisk
  7891 00007119 C606[4C03]00            		mov	byte [NoSetDir], 0
  7892 0000711E C606[6D05]16            		mov	byte [SATTRIB], 16h ; attr_directory+attr_system+attr_hidden
  7893 00007123 E81B0D                  		call	GETPATH
  7894 00007126 720C                    		jb	short NOPATH
  7895 00007128 7513                    		jnz	short NOTDIRPATH
  7896 0000712A 8B3E[C205]              		mov	di, [DIRSTART]
  7897 0000712E 09FF                    		or	di, di
  7898 00007130 750E                    		jnz	short rmdir_get_buf
  7899 00007132 EB09                    		jmp	short NOTDIRPATH
  7900                                  ; ---------------------------------------------------------------------------
  7901                                  
  7902                                  NOPATH:					; ...
  7903 00007134 B80300                  		mov	ax, 3		; error_path_not_found
  7904 00007137 E99AFE                  		jmp	_BadRet
  7905                                  ; ---------------------------------------------------------------------------
  7906                                  
  7907                                  NOTDIRPATHPOP:				; ...
  7908 0000713A 58                      		pop	ax
  7909 0000713B 58                      		pop	ax
  7910                                  
  7911                                  NOTDIRPATHPOP2:				; ...
  7912 0000713C 58                      		pop	ax
  7913                                  ; START	OF FUNCTION CHUNK FOR DOS_CHDIR
  7914                                  
  7915                                  NOTDIRPATH:				; ...
  7916 0000713D E991FE                  		jmp	NODEACCERRJ
  7917                                  ; END OF FUNCTION CHUNK	FOR DOS_CHDIR
  7918                                  ; ---------------------------------------------------------------------------
  7919                                  
  7920                                  rmdir_get_buf:				; ...
  7921 00007140 C53E[E205]              		lds	di, [CURBUF]
  7922 00007144 29FB                    		sub	bx, di
  7923 00007146 53                      		push	bx
  7924 00007147 FF7508                  		push	word [di+8]	; [DI+BUFFINFO.buf_sector+2]
  7925 0000714A FF7506                  		push	word [di+6]	; [DI+BUFFINFO.buf_sector]
  7926 0000714D 16                      		push	ss
  7927 0000714E 1F                      		pop	ds
  7928 0000714F 16                      		push	ss
  7929 00007150 07                      		pop	es
  7930 00007151 BF[4B05]                		mov	di, NAME1
  7931 00007154 B03F                    		mov	al, '?'
  7932 00007156 B90B00                  		mov	cx, 11
  7933 00007159 F3AA                    		rep stosb
  7934 0000715B 30C0                    		xor	al, al
  7935 0000715D AA                      		stosb
  7936 0000715E E88B0F                  		call	STARTSRCH
  7937 00007161 E8460C                  		call	GETENTRY
  7938 00007164 72D4                    		jb	short NOTDIRPATHPOP
  7939 00007166 8E1E[E405]              		mov	ds, word [CURBUF+2]
  7940 0000716A 89DE                    		mov	si, bx
  7941 0000716C AD                      		lodsw
  7942 0000716D 3D2E20                  		cmp	ax, 202Eh	; (' ' SHL 8) OR '.'
  7943 00007170 75C8                    		jnz	short NOTDIRPATHPOP
  7944 00007172 83C61E                  		add	si, 30		; dir_entry.size-2
  7945 00007175 AD                      		lodsw
  7946 00007176 3D2E2E                  		cmp	ax, 2E2Eh	; ('.' SHL 8) OR '.'
  7947 00007179 75BF                    		jnz	short NOTDIRPATHPOP
  7948 0000717B 16                      		push	ss
  7949 0000717C 1F                      		pop	ds
  7950 0000717D C706[4803]0200          		mov	word [LASTENT], 2
  7951 00007183 E8240C                  		call	GETENTRY
  7952 00007186 72B2                    		jb	short NOTDIRPATHPOP
  7953 00007188 C606[6B05]16            		mov	byte [ATTRIB], 16h ; attr_directory+attr_hidden+attr_system
  7954 0000718D E8170B                  		call	SRCH
  7955 00007190 73A8                    		jnb	short NOTDIRPATHPOP
  7956 00007192 803E[4A03]00            		cmp	byte [FAILERR], 0
  7957 00007197 75A1                    		jnz	short NOTDIRPATHPOP
  7958 00007199 C42E[8A05]              		les	bp, [THISDPB]
  7959 0000719D 8B1E[C205]              		mov	bx, [DIRSTART]
  7960 000071A1 E8951C                  		call	RELEASE
  7961 000071A4 7294                    		jb	short NOTDIRPATHPOP
  7962 000071A6 5A                      		pop	dx
  7963 000071A7 8F06[0706]              		pop	word [HIGH_SECTOR]
  7964 000071AB C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
  7965 000071B0 30C0                    		xor	al, al
  7966 000071B2 E82627                  		call	GETBUFFR
  7967 000071B5 7285                    		jb	short NOTDIRPATHPOP2
  7968 000071B7 C53EE205                		lds	di, [5E2h]
  7969 000071BB 804D0504                		or	byte [di+5], 4
  7970 000071BF 5B                      		pop	bx
  7971 000071C0 01FB                    		add	bx, di
  7972 000071C2 C607E5                  		mov	byte [bx], 0E5h
  7973 000071C5 1E                      		push	ds
  7974 000071C6 16                      		push	ss
  7975 000071C7 1F                      		pop	ds
  7976 000071C8 E8C0F3                  		call	FastOpen_Delete
  7977 000071CB 1F                      		pop	ds
  7978 000071CC E9AAFE                  		jmp	DIRUP
  7979                                  
  7980                                  ; =============== S U B	R O U T	I N E =======================================
  7981                                  
  7982                                  SWAPBACK:
  7983 000071CF C606[5703]00            		mov	byte [CONSWAP], 0
  7984 000071D4 C3                      		retn
  7985                                  
  7986                                  ; =============== S U B	R O U T	I N E =======================================
  7987                                  
  7988                                  SWAPCON:
  7989 000071D5 C606[5703]01            		mov	byte [CONSWAP], 1
  7990 000071DA 50                      		push	ax
  7991 000071DB A1[9E05]                		mov	ax, word [THISSFT]
  7992 000071DE A3[E605]                		mov	word [CONSFT], ax
  7993 000071E1 A1[A005]                		mov	ax, word [THISSFT+2]
  7994 000071E4 A3[E805]                		mov	word [CONSFT+2],	ax
  7995 000071E7 58                      		pop	ax
  7996 000071E8 C3                      		retn
  7997                                  
  7998                                  ; =============== S U B	R O U T	I N E =======================================
  7999                                  
  8000                                  DOS_READ:		; ...
  8001 000071E9 C43E[9E05]              		les	di, [THISSFT]
  8002 000071ED 268A4502                		mov	al, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  8003 000071F1 240F                    		and	al, 0Fh		; access_mask
  8004 000071F3 3C01                    		cmp	al, 1
  8005 000071F5 7503                    		jnz	short READ_NO_MODE
  8006 000071F7 E92206                  		jmp	SET_ACC_ERR
  8007                                  ; ---------------------------------------------------------------------------
  8008                                  
  8009                                  READ_NO_MODE:				; ...
  8010 000071FA E8FA04                  		call	SETUP
  8011 000071FD E30B                    		jcxz	NoIORet
  8012 000071FF E878DE                  		call	IsSFTNet
  8013 00007202 7408                    		jz	short LOCAL_READ
  8014 00007204 B80811                  		mov	ax, 1108h	; (MultNET<<8)|8
  8015 00007207 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - READ	FROM REMOTE FILE
  8016                                  					; ES:DI	-> SFT
  8017                                  					; SFT DPB field	-> DPB of drive	containing file
  8018                                  					; CX = number of bytes,	SS = DOS CS, SDA DTA field -> user buffer
  8019                                  					; Return: CF set on error, CX =	bytes read
  8020 00007209 C3                      		retn
  8021                                  ; ---------------------------------------------------------------------------
  8022                                  
  8023                                  NoIORet:				; ...
  8024 0000720A F8                      		clc
  8025 0000720B C3                      		retn
  8026                                  ; ---------------------------------------------------------------------------
  8027                                  
  8028                                  LOCAL_READ:				; ...
  8029 0000720C 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],devid_device
  8030 00007211 750F                    		jnz	short READDEV
  8031 00007213 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  8032 00007218 E80BDF                  		call	ECritDisk
  8033 0000721B E8BA05                  		call	DISKREAD
  8034 0000721E E825DF                  		call	LCritDisk
  8035 00007221 C3                      		retn
  8036                                  ; ---------------------------------------------------------------------------
  8037                                  
  8038                                  READDEV:				; ...
  8039 00007222 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  8040 00007227 268A5D05                		mov	bl, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  8041 0000722B C43E[2C03]              		les	di, [DMAADD]
  8042 0000722F F6C340                  		test	bl, 40h		; devid_device_EOF
  8043 00007232 7407                    		jz	short ENDRDDEVJ3
  8044 00007234 F6C304                  		test	bl, 4		; devid_device_null
  8045 00007237 7405                    		jz	short TESTRAW
  8046 00007239 30C0                    		xor	al, al
  8047                                  
  8048                                  ENDRDDEVJ3:				; ...
  8049 0000723B E9D600                  		jmp	ENDRDDEVJ2
  8050                                  ; ---------------------------------------------------------------------------
  8051                                  
  8052                                  TESTRAW:				; ...
  8053 0000723E F6C320                  		test	bl, 20h		; devid_device_raw
  8054 00007241 7508                    		jnz	short DVRDRAW
  8055 00007243 F6C301                  		test	bl, 1
  8056 00007246 7461                    		jz	short NOTRDCON
  8057 00007248 E99401                  		jmp	READCON
  8058                                  ; ---------------------------------------------------------------------------
  8059                                  
  8060                                  DVRDRAW:				; ...
  8061 0000724B 06                      		push	es
  8062 0000724C 1F                      		pop	ds
  8063 0000724D 36F606[3010]01          		test	byte [ss:IsWin386], 1
  8064 00007253 7408                    		jz	short ReadRawRetry
  8065 00007255 F6C301                  		test	bl, 1		; devid_device_con_in
  8066 00007258 7403                    		jz	short ReadRawRetry
  8067 0000725A E9BA00                  		jmp	do_polling
  8068                                  ; ---------------------------------------------------------------------------
  8069                                  
  8070                                  ReadRawRetry:				; ...
  8071 0000725D 89FB                    		mov	bx, di
  8072 0000725F 31C0                    		xor	ax, ax
  8073 00007261 89C2                    		mov	dx, ax
  8074 00007263 E8C813                  		call	SETREAD
  8075 00007266 1E                      		push	ds
  8076 00007267 36C536[9E05]            		lds	si, [ss:THISSFT]
  8077 0000726C E84013                  		call	DEVIOCALL
  8078 0000726F 89FA                    		mov	dx, di
  8079 00007271 B486                    		mov	ah, 86h
  8080 00007273 368B3E[5D03]            		mov	di, [ss:DEVCALL_REQSTAT]
  8081 00007278 09FF                    		or	di, di
  8082 0000727A 7923                    		jns	short CRDROK
  8083 0000727C E8CA1F                  		call	CHARHARD
  8084 0000727F 89D7                    		mov	di, dx
  8085 00007281 36033E[6C03]            		add	di, [ss:CALLSCNT]
  8086 00007286 362B0E[6C03]            		sub	cx, [ss:CALLSCNT]
  8087 0000728B 08C0                    		or	al, al
  8088 0000728D 7410                    		jz	short CRDROK
  8089 0000728F 3C03                    		cmp	al, 3
  8090 00007291 7403                    		jz	short CRDFERR
  8091 00007293 1F                      		pop	ds
  8092 00007294 EBC7                    		jmp	short ReadRawRetry
  8093                                  ; ---------------------------------------------------------------------------
  8094                                  
  8095                                  CRDFERR:				; ...
  8096 00007296 5F                      		pop	di
  8097                                  
  8098                                  DEVIOFERR:				; ...
  8099 00007297 36C43E[9E05]            		les	di, [ss:THISSFT]
  8100 0000729C E97B05                  		jmp	SET_ACC_ERR_DS
  8101                                  ; ---------------------------------------------------------------------------
  8102                                  
  8103                                  CRDROK:					; ...
  8104 0000729F 5F                      		pop	di
  8105 000072A0 89D7                    		mov	di, dx
  8106 000072A2 36033E[6C03]            		add	di, [ss:CALLSCNT]
  8107 000072A7 EB92                    		jmp	short ENDRDDEVJ3
  8108                                  ; ---------------------------------------------------------------------------
  8109                                  
  8110                                  NOTRDCON:				; ...
  8111 000072A9 8CC0                    		mov	ax, es
  8112 000072AB 8ED8                    		mov	ds, ax
  8113 000072AD 89FB                    		mov	bx, di
  8114 000072AF 31D2                    		xor	dx, dx
  8115 000072B1 89D0                    		mov	ax, dx
  8116 000072B3 51                      		push	cx
  8117 000072B4 B90100                  		mov	cx, 1
  8118 000072B7 E87413                  		call	SETREAD
  8119 000072BA 59                      		pop	cx
  8120 000072BB 36C536[9E05]            		lds	si, [ss:THISSFT]
  8121 000072C0 C57407                  		lds	si, [si+7]	; [SI+SF_ENTRY.sf_devptr]
  8122                                  
  8123                                  DVRDLP:					; ...
  8124 000072C3 E85E1D                  		call	DSKSTATCHK
  8125 000072C6 E8E912                  		call	DEVIOCALL2
  8126 000072C9 57                      		push	di
  8127 000072CA B486                    		mov	ah, 86h
  8128 000072CC 368B3E[5D03]            		mov	di, [ss:DEVCALL_REQSTAT]
  8129 000072D1 09FF                    		or	di, di
  8130 000072D3 7917                    		jns	short CRDOK
  8131 000072D5 E8711F                  		call	CHARHARD
  8132 000072D8 5F                      		pop	di
  8133 000072D9 36C706[6C03]0100        		mov	word [ss:CALLSCNT], 1
  8134 000072E0 3C01                    		cmp	al, 1
  8135 000072E2 74DF                    		jz	short DVRDLP
  8136 000072E4 3C03                    		cmp	al, 3
  8137 000072E6 74AF                    		jz	short DEVIOFERR
  8138 000072E8 30C0                    		xor	al, al
  8139 000072EA EB12                    		jmp	short DVRDIGN
  8140                                  ; ---------------------------------------------------------------------------
  8141                                  
  8142                                  CRDOK:					; ...
  8143 000072EC 5F                      		pop	di
  8144 000072ED 36833E[6C03]01          		cmp	word [ss:CALLSCNT], 1
  8145 000072F3 751F                    		jnz	short ENDRDDEVJ2
  8146 000072F5 1E                      		push	ds
  8147 000072F6 368E1E[6A03]            		mov	ds, word [ss:CALLXADD+2]
  8148 000072FB 8A05                    		mov	al, [di]
  8149 000072FD 1F                      		pop	ds
  8150                                  
  8151                                  DVRDIGN:				; ...
  8152 000072FE 36FF06[6803]            		inc	word [ss:CALLXADD]
  8153 00007303 36C706[5D03]0000        		mov	word [ss:DEVCALL_REQSTAT], 0
  8154 0000730A 47                      		inc	di
  8155 0000730B 3C1A                    		cmp	al, 1Ah		; ^Z?
  8156 0000730D 7405                    		jz	short ENDRDDEVJ2
  8157 0000730F 3C0D                    		cmp	al, 0Dh		; c_CR
  8158 00007311 E0B0                    		loopne	DVRDLP
  8159 00007313 40                      		inc	ax
  8160                                  
  8161                                  ENDRDDEVJ2:				; ...
  8162 00007314 E9B300                  		jmp	ENDRDDEV
  8163                                  ; ---------------------------------------------------------------------------
  8164                                  
  8165                                  do_polling:				; ...
  8166 00007317 89FB                    		mov	bx, di
  8167 00007319 31C0                    		xor	ax, ax
  8168 0000731B 89C2                    		mov	dx, ax
  8169 0000731D E80E13                  		call	SETREAD
  8170                                  
  8171                                  do_io:					; ...
  8172 00007320 26C6470205              		mov	byte [es:bx+2], 5 ;	DEVRDND
  8173 00007325 1E                      		push	ds
  8174 00007326 36C536[9E05]            		lds	si, [ss:THISSFT]
  8175 0000732B E88112                  		call	DEVIOCALL
  8176 0000732E 1F                      		pop	ds
  8177 0000732F 26F747030080            		test	word [es:bx+3], 8000h ; [es:bx+SRHEAD.REQSTAT],STERR
  8178 00007335 7413                    		jz	short check_busy
  8179 00007337 1E                      		push	ds
  8180 00007338 89FA                    		mov	dx, di
  8181 0000733A E80C1F                  		call	CHARHARD
  8182 0000733D 89D7                    		mov	di, dx
  8183 0000733F 08C0                    		or	al, al
  8184 00007341 745F                    		jz	short pop_done_read
  8185 00007343 3C03                    		cmp	al, 3
  8186 00007345 7449                    		jz	short devrderr
  8187 00007347 1F                      		pop	ds
  8188 00007348 EBD6                    		jmp	short do_io
  8189                                  ; ---------------------------------------------------------------------------
  8190                                  
  8191                                  check_busy:				; ...
  8192 0000734A 26F747030002            		test	word [es:bx+3], 200h ; [es:bx+SRHEAD.REQSTAT]
  8193 00007350 7547                    		jnz	short no_char
  8194 00007352 26C6470204              		mov	byte [es:bx+2], 4 ;	DEVRD
  8195 00007357 26C747120100            		mov	word [es:bx+12h], 1
  8196 0000735D 1E                      		push	ds
  8197 0000735E 36C536[9E05]            		lds	si, [ss:THISSFT]
  8198 00007363 E84912                  		call	DEVIOCALL
  8199 00007366 89FA                    		mov	dx, di
  8200 00007368 B486                    		mov	ah, 86h
  8201 0000736A 268B7F03                		mov	di, [es:bx+3]
  8202 0000736E F7C70080                		test	di, 8000h	; STERR
  8203 00007372 7410                    		jz	short next_char
  8204 00007374 E8D21E                  		call	CHARHARD
  8205 00007377 89D7                    		mov	di, dx
  8206 00007379 08C0                    		or	al, al
  8207 0000737B 7425                    		jz	short pop_done_read
  8208 0000737D 3C03                    		cmp	al, 3
  8209 0000737F 740F                    		jz	short devrderr
  8210 00007381 1F                      		pop	ds
  8211 00007382 EB9C                    		jmp	short do_io
  8212                                  ; ---------------------------------------------------------------------------
  8213                                  
  8214                                  next_char:				; ...
  8215 00007384 1F                      		pop	ds
  8216 00007385 89D7                    		mov	di, dx
  8217 00007387 49                      		dec	cx
  8218 00007388 E319                    		jcxz	done_read
  8219 0000738A 26FF470E                		inc	word [es:bx+14]
  8220 0000738E EB90                    		jmp	short do_io
  8221                                  ; ---------------------------------------------------------------------------
  8222                                  
  8223                                  devrderr:				; ...
  8224 00007390 5F                      		pop	di
  8225 00007391 36C43E[9E05]            		les	di, [ss:THISSFT]
  8226 00007396 E98104                  		jmp	SET_ACC_ERR_DS
  8227                                  ; ---------------------------------------------------------------------------
  8228                                  
  8229                                  no_char:				; ...
  8230 00007399 50                      		push	ax
  8231 0000739A B484                    		mov	ah, 84h
  8232 0000739C CD2A                    		int	2Ah		; Microsoft Networks - KEYBOARD	BUSY LOOP
  8233 0000739E 58                      		pop	ax
  8234 0000739F E97EFF                  		jmp	do_io
  8235                                  ; ---------------------------------------------------------------------------
  8236                                  
  8237                                  pop_done_read:				; ...
  8238 000073A2 1F                      		pop	ds
  8239                                  
  8240                                  done_read:				; ...
  8241 000073A3 36033E[6C03]            		add	di, [ss:CALLSCNT]
  8242 000073A8 E990FE                  		jmp	ENDRDDEVJ3
  8243                                  ; ---------------------------------------------------------------------------
  8244                                  
  8245                                  TRANBUF:				; ...
  8246 000073AB AC                      		lodsb
  8247 000073AC AA                      		stosb
  8248 000073AD 3C0D                    		cmp	al, 0Dh		; c_CR
  8249 000073AF 7503                    		jnz	short NORMCH
  8250 000073B1 C6040A                  		mov	byte [si], 0Ah ; c_LF
  8251                                  
  8252                                  NORMCH:					; ...
  8253 000073B4 3C0A                    		cmp	al, 0Ah		; c_LF
  8254 000073B6 E0F3                    		loopne	TRANBUF
  8255 000073B8 7507                    		jnz	short ENDRDCON
  8256 000073BA 31F6                    		xor	si, si
  8257 000073BC E818E1                  		call	OUTT
  8258 000073BF 0C01                    		or	al, 1
  8259                                  
  8260                                  ENDRDCON:				; ...
  8261 000073C1 16                      		push	ss
  8262 000073C2 1F                      		pop	ds
  8263 000073C3 E809FE                  		call	SWAPBACK
  8264 000073C6 8936[2200]              		mov	[CONTPOS], si
  8265                                  
  8266                                  ENDRDDEV:				; ...
  8267 000073CA 16                      		push	ss
  8268 000073CB 1F                      		pop	ds
  8269 000073CC 893E[B805]              		mov	[NEXTADD], di
  8270 000073D0 7509                    		jnz	short SETSFTC
  8271 000073D2 C43E[9E05]              		les	di, [THISSFT]
  8272 000073D6 26806505BF              		and	byte [es:di+5], 0BFh ; [ES:DI+SF_ENTRY.sf_flags],
  8273                                  					; ~devid_device_EOF
  8274                                  
  8275                                  SETSFTC:				; ...
  8276 000073DB E8D004                  		call	SETSFT
  8277 000073DE C3                      		retn
  8278                                  ; ---------------------------------------------------------------------------
  8279                                  
  8280                                  READCON:				; ...
  8281 000073DF E8F3FD                  		call	SWAPCON
  8282 000073E2 8B36[2200]              		mov	si, [CONTPOS]
  8283 000073E6 09F6                    		or	si, si
  8284 000073E8 75C1                    		jnz	short TRANBUF
  8285 000073EA 803E[7B02]80            		cmp	byte [CONBUF], 128 ; 80h
  8286 000073EF 7406                    		jz	short GETBUF
  8287 000073F1 C706[7B02]80FF          		mov	word [CONBUF], 0FF80h
  8288                                  
  8289                                  GETBUF:					; ...
  8290 000073F7 51                      		push	cx
  8291 000073F8 06                      		push	es
  8292 000073F9 57                      		push	di
  8293 000073FA BA[7B02]                		mov	dx, CONBUF
  8294 000073FD E80CDE                  		call	_$STD_CON_STRING_INPUT
  8295 00007400 5F                      		pop	di
  8296 00007401 07                      		pop	es
  8297 00007402 59                      		pop	cx
  8298 00007403 BE[7D02]                		mov	si, CONBUF+2
  8299 00007406 803C1A                  		cmp	byte [si], 1Ah
  8300 00007409 75A0                    		jnz	short TRANBUF
  8301 0000740B B01A                    		mov	al, 1Ah
  8302 0000740D AA                      		stosb
  8303 0000740E 4F                      		dec	di
  8304 0000740F B00A                    		mov	al, 0Ah		; c_LF
  8305 00007411 E8C3E0                  		call	OUTT
  8306 00007414 31F6                    		xor	si, si
  8307 00007416 EBA9                    		jmp	short ENDRDCON
  8308                                  
  8309                                  ; =============== S U B	R O U T	I N E =======================================
  8310                                  
  8311                                  DOS_WRITE:		; ...
  8312 00007418 C43E[9E05]              		les	di, [THISSFT]
  8313 0000741C 268A4502                		mov	al, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  8314 00007420 240F                    		and	al, 0Fh		; access_mask
  8315 00007422 3C00                    		cmp	al, 0		; open_for_read
  8316 00007424 7503                    		jnz	short Check_FCB_RO
  8317                                  
  8318                                  BadMode:				; ...
  8319 00007426 E9F303                  		jmp	SET_ACC_ERR
  8320                                  ; ---------------------------------------------------------------------------
  8321                                  
  8322                                  Check_FCB_RO:				; ...
  8323 00007429 26F6450380              		test	byte [es:di+3], 80h	; [ES:DI+SF_ENTRY.sf_mode+1],(sf_isFCB>>8)
  8324 0000742E 7407                    		jz	short WRITE_NO_MODE
  8325 00007430 26F6450401              		test	byte [es:di+4], 1 ;	[ES:DI+SF_ENTRY.sf_attr],attr_read_only
  8326 00007435 75EF                    		jnz	short BadMode
  8327                                  
  8328                                  WRITE_NO_MODE:				; ...
  8329 00007437 E8BD02                  		call	SETUP
  8330 0000743A E83DDC                  		call	IsSFTNet
  8331 0000743D 7406                    		jz	short LOCAL_WRITE
  8332 0000743F B80911                  		mov	ax, 1109h	; (MultNET<<8)|9
  8333 00007442 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - WRITE TO REMOTE FILE
  8334                                  					; ES:DI	-> SFT
  8335                                  					; SFT DPB field	-> DPB of drive	containing file
  8336                                  					; CX = number of bytes,	SS = DOS CS, SDA DTA field -> user buffer
  8337                                  					; Return: CF set on error, CX =	bytes written
  8338 00007444 C3                      		retn
  8339                                  ; ---------------------------------------------------------------------------
  8340                                  
  8341                                  LOCAL_WRITE:				; ...
  8342 00007445 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  8343                                  					; devid_device
  8344 0000744A 7570                    		jnz	short WRTDEV
  8345 0000744C C606[2303]02            		mov	byte [EXTERR_LOCUS], 2
  8346 00007451 E8D2DC                  		call	ECritDisk
  8347 00007454 E80F05                  		call	DISKWRITE
  8348 00007457 7210                    		jb	short nocommit
  8349 00007459 C43E[9E05]              		les	di, [THISSFT]
  8350 0000745D 26F6450340              		test	byte [es:di+3], 40h	; [ES:DI+SF_ENTRY.sf_mode],
  8351                                  					; auto_commit_write
  8352 00007462 7405                    		jz	short nocommit
  8353 00007464 51                      		push	cx
  8354 00007465 E80AFB                  		call	DOS_COMMIT
  8355 00007468 59                      		pop	cx
  8356                                  
  8357                                  nocommit:				; ...
  8358 00007469 E8DADC                  		call	LCritDisk
  8359 0000746C C3                      		retn
  8360                                  ; ---------------------------------------------------------------------------
  8361                                  
  8362                                  DVWRTRAW:				; ...
  8363 0000746D 31C0                    		xor	ax, ax
  8364 0000746F E8EF11                  		call	SETWRITE
  8365 00007472 1E                      		push	ds
  8366 00007473 36C536[9E05]            		lds	si, [ss:THISSFT]
  8367 00007478 E83411                  		call	DEVIOCALL
  8368 0000747B 89FA                    		mov	dx, di
  8369 0000747D B487                    		mov	ah, 87h
  8370 0000747F 368B3E[5D03]            		mov	di, [ss:DEVCALL_REQSTAT]
  8371 00007484 09FF                    		or	di, di
  8372 00007486 7920                    		jns	short CWRTROK
  8373 00007488 E8BE1D                  		call	CHARHARD
  8374 0000748B 362B0E[6C03]            		sub	cx, [ss:CALLSCNT]
  8375 00007490 89D3                    		mov	bx, dx
  8376 00007492 36031E[6C03]            		add	bx, [ss:CALLSCNT]
  8377 00007497 89DF                    		mov	di, bx
  8378 00007499 08C0                    		or	al, al
  8379 0000749B 740B                    		jz	short CWRTROK
  8380 0000749D 3C03                    		cmp	al, 3
  8381 0000749F 7403                    		jz	short CWRFERR
  8382 000074A1 1F                      		pop	ds
  8383 000074A2 EBC9                    		jmp	short DVWRTRAW
  8384                                  ; ---------------------------------------------------------------------------
  8385                                  
  8386                                  CWRFERR:				; ...
  8387 000074A4 58                      		pop	ax
  8388 000074A5 E9EEFD                  		jmp	CRDFERR
  8389                                  ; ---------------------------------------------------------------------------
  8390                                  
  8391                                  CWRTROK:				; ...
  8392 000074A8 58                      		pop	ax
  8393 000074A9 1F                      		pop	ds
  8394 000074AA A1[6C03]                		mov	ax, [CALLSCNT]
  8395                                  
  8396                                  ENDWRDEV:				; ...
  8397 000074AD C43E[9E05]              		les	di, [THISSFT]
  8398 000074B1 89C1                    		mov	cx, ax
  8399 000074B3 E81904                  		call	ADDREC
  8400 000074B6 C3                      		retn
  8401                                  ; ---------------------------------------------------------------------------
  8402                                  
  8403                                  WRTNUL:					; ...
  8404 000074B7 89CA                    		mov	dx, cx
  8405                                  
  8406                                  WRTCOOKJ:				; ...
  8407 000074B9 E98F00                  		jmp	WRTCOOKDONE
  8408                                  ; ---------------------------------------------------------------------------
  8409                                  
  8410                                  WRTDEV:					; ...
  8411 000074BC C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  8412 000074C1 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+SF_ENTRY.sf_flags],
  8413                                  					; devid_device_EOF
  8414 000074C6 268A5D05                		mov	bl, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  8415 000074CA 31C0                    		xor	ax, ax
  8416 000074CC E3DF                    		jcxz	ENDWRDEV
  8417 000074CE 1E                      		push	ds
  8418 000074CF 88D8                    		mov	al, bl
  8419 000074D1 C51E[2C03]              		lds	bx, [DMAADD]
  8420 000074D5 89DF                    		mov	di, bx
  8421 000074D7 31D2                    		xor	dx, dx
  8422 000074D9 A820                    		test	al, 20h		; devid_device_raw
  8423 000074DB 7402                    		jz	short TEST_DEV_CON
  8424 000074DD EB8E                    		jmp	short DVWRTRAW
  8425                                  ; ---------------------------------------------------------------------------
  8426                                  
  8427                                  TEST_DEV_CON:				; ...
  8428 000074DF A802                    		test	al, 2		; devid_device_con_out
  8429 000074E1 756E                    		jnz	short WRITECON
  8430 000074E3 A804                    		test	al, 4		; devid_device_null
  8431 000074E5 75D0                    		jnz	short WRTNUL
  8432 000074E7 89D0                    		mov	ax, dx
  8433 000074E9 803F1A                  		cmp	byte [bx], 1Ah ; ^Z?
  8434 000074EC 74CB                    		jz	short WRTCOOKJ
  8435 000074EE 51                      		push	cx
  8436 000074EF B90100                  		mov	cx, 1
  8437 000074F2 E86C11                  		call	SETWRITE
  8438 000074F5 59                      		pop	cx
  8439 000074F6 36C536[9E05]            		lds	si, [ss:THISSFT]
  8440 000074FB C57407                  		lds	si, [si+7]	; [SI+SF_ENTRY.sf_devptr]
  8441                                  
  8442                                  DVWRTLP:				; ...
  8443 000074FE E8231B                  		call	DSKSTATCHK
  8444 00007501 E8AE10                  		call	DEVIOCALL2
  8445 00007504 57                      		push	di
  8446 00007505 B487                    		mov	ah, 87h
  8447 00007507 368B3E[5D03]            		mov	di, [ss:DEVCALL_REQSTAT]
  8448 0000750C 09FF                    		or	di, di
  8449 0000750E 7916                    		jns	short CWROK
  8450 00007510 E8361D                  		call	CHARHARD
  8451 00007513 5F                      		pop	di
  8452 00007514 36C706[6C03]0100        		mov	word [ss:CALLSCNT], 1
  8453 0000751B 3C01                    		cmp	al, 1
  8454 0000751D 74DF                    		jz	short DVWRTLP
  8455 0000751F 08C0                    		or	al, al
  8456 00007521 740C                    		jz	short DVWRTIGN
  8457 00007523 E970FD                  		jmp	CRDFERR
  8458                                  ; ---------------------------------------------------------------------------
  8459                                  
  8460                                  CWROK:					; ...
  8461 00007526 5F                      		pop	di
  8462 00007527 36833E[6C03]00          		cmp	word [ss:CALLSCNT], 0
  8463 0000752D 741C                    		jz	short WRTCOOKDONE
  8464                                  
  8465                                  DVWRTIGN:				; ...
  8466 0000752F 42                      		inc	dx
  8467 00007530 36FF06[6803]            		inc	word [ss:CALLXADD]
  8468 00007535 47                      		inc	di
  8469 00007536 1E                      		push	ds
  8470 00007537 368E1E[6A03]            		mov	ds, word [ss:CALLXADD+2]
  8471 0000753C 803D1A                  		cmp	byte [di], 1Ah ; ^Z?
  8472 0000753F 1F                      		pop	ds
  8473 00007540 7409                    		jz	short WRTCOOKDONE
  8474 00007542 36C706[5D03]0000        		mov	word [ss:DEVCALL_REQSTAT], 0
  8475 00007549 E2B3                    		loop	DVWRTLP
  8476                                  
  8477                                  WRTCOOKDONE:				; ...
  8478 0000754B 89D0                    		mov	ax, dx
  8479 0000754D 1F                      		pop	ds
  8480 0000754E E95CFF                  		jmp	ENDWRDEV
  8481                                  ; ---------------------------------------------------------------------------
  8482                                  
  8483                                  WRITECON:				; ...
  8484 00007551 1E                      		push	ds
  8485 00007552 16                      		push	ss
  8486 00007553 1F                      		pop	ds
  8487 00007554 E87EFC                  		call	SWAPCON
  8488 00007557 1F                      		pop	ds
  8489 00007558 89DE                    		mov	si, bx
  8490 0000755A 51                      		push	cx
  8491                                  
  8492                                  WRCONLP:				; ...
  8493 0000755B AC                      		lodsb
  8494 0000755C 3C1A                    		cmp	al, 1Ah		; ^Z?
  8495 0000755E 7405                    		jz	short CONEOF
  8496 00007560 E874DF                  		call	OUTT
  8497 00007563 E2F6                    		loop	WRCONLP
  8498                                  
  8499                                  CONEOF:					; ...
  8500 00007565 58                      		pop	ax
  8501 00007566 29C8                    		sub	ax, cx
  8502 00007568 1F                      		pop	ds
  8503 00007569 E863FC                  		call	SWAPBACK
  8504 0000756C E93EFF                  		jmp	ENDWRDEV
  8505                                  
  8506                                  ; =============== S U B	R O U T	I N E =======================================
  8507                                  
  8508                                  GET_IO_SFT:
  8509 0000756F 36803E[5703]00          		cmp	byte [ss:CONSWAP], 0
  8510 00007575 7512                    		jnz	short GetRedir
  8511                                  
  8512                                  GetNormal:				; ...
  8513 00007577 16                      		push	ss
  8514 00007578 1F                      		pop	ds
  8515 00007579 06                      		push	es
  8516 0000757A 57                      		push	di
  8517 0000757B E8AC30                  		call	SFFromHandle
  8518 0000757E 7206                    		jb	short RET44P
  8519 00007580 8CC6                    		mov	si, es
  8520 00007582 8EDE                    		mov	ds, si
  8521 00007584 89FE                    		mov	si, di
  8522                                  
  8523                                  RET44P:					; ...
  8524 00007586 5F                      		pop	di
  8525 00007587 07                      		pop	es
  8526 00007588 C3                      		retn
  8527                                  ; ---------------------------------------------------------------------------
  8528                                  
  8529                                  GetRedir:				; ...
  8530 00007589 83FB01                  		cmp	bx, 1
  8531 0000758C 77E9                    		ja	short GetNormal
  8532 0000758E 36C536[E605]            		lds	si, [ss:CONSFT]
  8533 00007593 F8                      		clc
  8534                                  
  8535                                  get_io_sft_retn:			; ...
  8536 00007594 C3                      		retn
  8537                                  
  8538                                  ; =============== S U B	R O U T	I N E =======================================
  8539                                  
  8540                                  DIRREAD:
  8541 00007595 31D2                    		xor	dx, dx
  8542 00007597 833E[C205]00            		cmp	word [DIRSTART], 0
  8543 0000759C 7503                    		jnz	short SubDir
  8544 0000759E 92                      		xchg	ax, dx
  8545 0000759F EB0C                    		jmp	short DoRead
  8546                                  ; ---------------------------------------------------------------------------
  8547                                  
  8548                                  SubDir:					; ...
  8549 000075A1 88C2                    		mov	dl, al
  8550 000075A3 26225604                		and	dl, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  8551 000075A7 268A4E05                		mov	cl, [es:bp+5]	; [ES:BP+DPB.CLUSTER_SHIFT]
  8552 000075AB D3E8                    		shr	ax, cl
  8553                                  
  8554                                  DoRead:					; ...
  8555 000075AD 8816[7305]              		mov	[SECCLUSPOS], dl
  8556 000075B1 89C1                    		mov	cx, ax
  8557 000075B3 88D4                    		mov	ah, dl
  8558 000075B5 8B16[C005]              		mov	dx, word [DIRSEC+2]
  8559 000075B9 8916[0706]              		mov	word [HIGH_SECTOR], dx
  8560 000075BD 8B16[BE05]              		mov	dx, word [DIRSEC]
  8561 000075C1 00E2                    		add	dl, ah
  8562 000075C3 80D600                  		adc	dh, 0
  8563 000075C6 8316[0706]00            		adc	word [HIGH_SECTOR], 0
  8564 000075CB 8B1E[BC05]              		mov	bx, [CLUSNUM]
  8565 000075CF 891E[DC05]              		mov	[NXTCLUSNUM], bx
  8566 000075D3 E319                    		jcxz	FIRSTCLUSTER
  8567                                  
  8568                                  SKPCLLP:				; ...
  8569 000075D5 E8DD1E                  		call	UNPACK
  8570 000075D8 72BA                    		jb	short get_io_sft_retn
  8571 000075DA 87DF                    		xchg	bx, di
  8572 000075DC E8BF1E                  		call	IsEOF
  8573 000075DF 7302                    		jnb	short HAVESKIPPED
  8574 000075E1 E2F2                    		loop	SKPCLLP
  8575                                  
  8576                                  HAVESKIPPED:				; ...
  8577 000075E3 891E[DC05]              		mov	[NXTCLUSNUM], bx
  8578 000075E7 89FA                    		mov	dx, di
  8579 000075E9 88E3                    		mov	bl, ah
  8580 000075EB E86D17                  		call	FIGREC
  8581                                  
  8582                                  FIRSTCLUSTER:				; ...
  8583 000075EE C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
  8584 000075F3 30C0                    		xor	al, al
  8585 000075F5 E8E322                  		call	GETBUFFR
  8586 000075F8 729A                    		jb	short get_io_sft_retn
  8587                                  
  8588                                  SET_BUF_AS_DIR:				; ...
  8589 000075FA 1E                      		push	ds
  8590 000075FB 56                      		push	si
  8591 000075FC C536[E205]              		lds	si, [CURBUF]
  8592 00007600 804C0504                		or	byte [si+5], 4 ; [SI+BUFFINFO.buf_flags],buf_isDIR
  8593 00007604 5E                      		pop	si
  8594 00007605 1F                      		pop	ds
  8595                                  
  8596                                  dirread_retn:				; ...
  8597 00007606 C3                      		retn
  8598                                  
  8599                                  ; =============== S U B	R O U T	I N E =======================================
  8600                                  
  8601                                  FATSECRD:		; ...
  8602 00007607 36C606[4B03]18          		mov	byte [ss:ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
  8603 0000760D 89CF                    		mov	di, cx
  8604 0000760F 268A4E08                		mov	cl, [es:bp+8]	; [ES:BP+DPB.FAT_COUNT]
  8605 00007613 268B460F                		mov	ax, [es:bp+0Fh]	; [ES:BP+DPB.FAT_SIZE]
  8606 00007617 30ED                    		xor	ch, ch
  8607 00007619 52                      		push	dx
  8608                                  
  8609                                  NXTFAT:					; ...
  8610 0000761A 36C706[0706]0000        		mov	word [ss:HIGH_SECTOR], 0
  8611 00007621 51                      		push	cx
  8612 00007622 50                      		push	ax
  8613 00007623 89F9                    		mov	cx, di
  8614 00007625 E85D00                  		call	DSKREAD
  8615 00007628 58                      		pop	ax
  8616 00007629 59                      		pop	cx
  8617 0000762A 7420                    		jz	short RET41P
  8618 0000762C 01C2                    		add	dx, ax
  8619 0000762E E2EA                    		loop	NXTFAT
  8620 00007630 5A                      		pop	dx
  8621 00007631 89F9                    		mov	cx, di
  8622                                  
  8623                                  DREAD:					; ...
  8624 00007633 E84F00                  		call	DSKREAD
  8625 00007636 74CE                    		jz	short dirread_retn
  8626 00007638 36C606[7505]00          		mov	byte [ss:READOP], 0
  8627 0000763E E89C00                  		call	HARDERRRW
  8628 00007641 3C01                    		cmp	al, 1
  8629 00007643 74EE                    		jz	short DREAD
  8630 00007645 3C03                    		cmp	al, 3
  8631 00007647 F8                      		clc
  8632 00007648 7501                    		jnz	short NO_CAR
  8633 0000764A F9                      		stc
  8634                                  
  8635                                  NO_CAR:					; ...
  8636 0000764B C3                      		retn
  8637                                  ; ---------------------------------------------------------------------------
  8638                                  
  8639                                  RET41P:					; ...
  8640 0000764C 5A                      		pop	dx
  8641 0000764D C3                      		retn
  8642                                  
  8643                                  ; =============== S U B	R O U T	I N E =======================================
  8644                                  
  8645                                  CHECK_WRITE_LOCK:	; ...
  8646 0000764E 26F6450408              		test	byte [es:di+4], 8 ;	[ES:DI+SF_ENTRY.sf_attr],
  8647                                  					; attr_volume_id
  8648 00007653 7404                    		jz	short write_cont
  8649 00007655 E8C201                  		call	SET_ACC_ERR_DS
  8650 00007658 C3                      		retn
  8651                                  ; ---------------------------------------------------------------------------
  8652                                  
  8653                                  write_cont:				; ...
  8654 00007659 51                      		push	cx
  8655 0000765A 09C9                    		or	cx, cx
  8656 0000765C 7501                    		jnz	short Not_Truncate
  8657 0000765E 49                      		dec	cx
  8658                                  
  8659                                  Not_Truncate:				; ...
  8660 0000765F B080                    		mov	al, 80h
  8661 00007661 E87B3C                  		call	LOCK_CHECK
  8662 00007664 59                      		pop	cx
  8663 00007665 7305                    		jnb	short WRITE_OK
  8664 00007667 E86701                  		call	WRITE_LOCK_VIOLATION
  8665 0000766A 73ED                    		jnb	short write_cont
  8666                                  
  8667                                  WRITE_OK:				; ...
  8668 0000766C C3                      		retn
  8669                                  
  8670                                  ; =============== S U B	R O U T	I N E =======================================
  8671                                  
  8672                                  CHECK_READ_LOCK:
  8673 0000766D 26F6450408              		test	byte [es:di+4], 8 ;	[ES:DI+SF_ENTRY.sf_attr],
  8674                                  					; attr_volume_id
  8675 00007672 7404                    		jz	short do_retry
  8676 00007674 E8A501                  		call	SET_ACC_ERR
  8677 00007677 C3                      		retn
  8678                                  ; ---------------------------------------------------------------------------
  8679                                  
  8680                                  do_retry:				; ...
  8681 00007678 30C0                    		xor	al, al
  8682 0000767A E8623C                  		call	LOCK_CHECK
  8683 0000767D 7305                    		jnb	short READLOCK_OK
  8684 0000767F E82901                  		call	READ_LOCK_VIOLATION
  8685 00007682 73F4                    		jnb	short do_retry
  8686                                  
  8687                                  READLOCK_OK:				; ...
  8688 00007684 C3                      		retn
  8689                                  
  8690                                  ; =============== S U B	R O U T	I N E =======================================
  8691                                  
  8692                                  DSKREAD:
  8693 00007685 51                      		push	cx
  8694 00007686 268A6617                		mov	ah, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
  8695 0000768A 268A4601                		mov	al, [es:bp+1]	; [ES:BP+DPB.UNIT]
  8696 0000768E 53                      		push	bx
  8697 0000768F 06                      		push	es
  8698 00007690 E89B0F                  		call	SETREAD
  8699 00007693 EB27                    		jmp	short DODSKOP
  8700                                  
  8701                                  ; =============== S U B	R O U T	I N E =======================================
  8702                                  
  8703                                  DWRITE:		; ...
  8704 00007695 E81600                  		call	DSKWRITE
  8705 00007698 7413                    		jz	short dw_ret_label
  8706 0000769A 36C606[7505]01          		mov	byte [ss:READOP], 1
  8707 000076A0 E83A00                  		call	HARDERRRW
  8708 000076A3 3C01                    		cmp	al, 1
  8709 000076A5 74EE                    		jz	short DWRITE
  8710 000076A7 3C03                    		cmp	al, 3
  8711 000076A9 F8                      		clc
  8712 000076AA 7501                    		jnz	short dw_ret_label ; NO_CAR2
  8713 000076AC F9                      		stc
  8714                                  
  8715                                  dw_ret_label:				; ...
  8716 000076AD C3                      		retn			; NO_CAR2
  8717                                  
  8718                                  ; =============== S U B	R O U T	I N E =======================================
  8719                                  
  8720                                  DSKWRITE:		; ...
  8721 000076AE 51                      		push	cx
  8722 000076AF 268A6617                		mov	ah, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
  8723 000076B3 268A4601                		mov	al, [es:bp+1]	; [ES:BP+DPB.UNIT]
  8724 000076B7 53                      		push	bx
  8725 000076B8 06                      		push	es
  8726 000076B9 E8A50F                  		call	SETWRITE
  8727                                  
  8728                                  DODSKOP:				; ...
  8729 000076BC 8CD9                    		mov	cx, ds
  8730 000076BE 1F                      		pop	ds
  8731 000076BF 1E                      		push	ds
  8732 000076C0 3EC57613                		lds	si, [ds:bp+13h]	; LDS SI,[BP+DPB.DRIVER_ADDR]
  8733 000076C4 E8EB0E                  		call	DEVIOCALL2
  8734 000076C7 8ED9                    		mov	ds, cx
  8735 000076C9 07                      		pop	es
  8736 000076CA 5B                      		pop	bx
  8737 000076CB 368B0E[6C03]            		mov	cx, [ss:CALLSCNT]
  8738 000076D0 5F                      		pop	di
  8739 000076D1 29F9                    		sub	cx, di
  8740 000076D3 F7D9                    		neg	cx
  8741 000076D5 36A1[5D03]              		mov	ax, [ss:DEVCALL_REQSTAT]
  8742 000076D9 A90080                  		test	ax, 8000h	; STERR
  8743 000076DC C3                      		retn
  8744                                  
  8745                                  ; =============== S U B	R O U T	I N E =======================================
  8746                                  
  8747                                  HARDERRRW:		; ...
  8748 000076DD 3C0F                    		cmp	al, 0Fh		; error_I24_wrong_disk
  8749 000076DF 7512                    		jnz	short DO_ERR
  8750 000076E1 50                      		push	ax
  8751 000076E2 36A1[7003]              		mov	ax, word [ss:CALLVIDRW]
  8752 000076E6 36A3[2803]              		mov	word [ss:EXTERRPT],	ax
  8753 000076EA 36A1[7203]              		mov	ax, word [ss:CALLVIDRW+2]
  8754 000076EE 36A3[2A03]              		mov	word [ss:EXTERRPT+2], ax
  8755 000076F2 58                      		pop	ax
  8756                                  
  8757                                  DO_ERR:					; ...
  8758 000076F3 E8841B                  		call	HARDERR
  8759 000076F6 C3                      		retn
  8760                                  
  8761                                  ; ---------------------------------------------------------------------------
  8762                                  
  8763                                  SETUP:					; ...
  8764 000076F7 26C57507                		lds	si, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  8765 000076FB 368C1E[8C05]            		mov	word [ss:THISDPB+2], ds
  8766 00007700 16                      		push	ss
  8767 00007701 1F                      		pop	ds
  8768 00007702 8936[8A05]              		mov	word [THISDPB], si
  8769 00007706 8B1E[2C03]              		mov	bx, word [DMAADD]
  8770 0000770A 891E[B805]              		mov	[NEXTADD], bx
  8771 0000770E C606[7405]00            		mov	byte [TRANS], 0
  8772 00007713 268B4515                		mov	ax, [es:di+15h]	; [ES:DI+SF_ENTRY.sf_position]
  8773 00007717 268B5517                		mov	dx, [es:di+17h]	; [ES:DI+SF_ENTRY.sf_position+2]
  8774 0000771B 8916[D005]              		mov	word [BYTPOS+2], dx
  8775 0000771F A3[CE05]                		mov	word [BYTPOS], ax
  8776 00007722 26F745058080            		test	word [es:di+5], 8080h ; [ES:DI+SF_ENTRY.sf_flags],
  8777                                  					; sf_isnet+devid_device
  8778 00007728 753C                    		jnz	short NOSETSTUFF
  8779 0000772A 06                      		push	es
  8780 0000772B C42E[8A05]              		les	bp, [THISDPB]
  8781 0000772F 268A5E00                		mov	bl, [es:bp+0]	; [ES:BP+DPB.drive]
  8782 00007733 881E[7605]              		mov	[THISDRV], bl
  8783 00007737 268B5E02                		mov	bx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  8784 0000773B 51                      		push	cx
  8785 0000773C E81B05                  		call	DIV32
  8786 0000773F 8916[CC05]              		mov	[BYTSECPOS],	dx
  8787 00007743 A3[C405]                		mov	word [SECPOS], ax
  8788 00007746 890E[C605]              		mov	word [SECPOS+2],	cx
  8789 0000774A 89CA                    		mov	dx, cx
  8790 0000774C 89C3                    		mov	bx, ax
  8791 0000774E 26225E04                		and	bl, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  8792 00007752 881E[7305]              		mov	[SECCLUSPOS], bl
  8793 00007756 E82805                  		call	SHR32
  8794 00007759 59                      		pop	cx
  8795 0000775A 751F                    		jnz	short EOFERR
  8796 0000775C 263B460D                		cmp	ax, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
  8797 00007760 7719                    		ja	short EOFERR
  8798 00007762 A3[BC05]                		mov	[CLUSNUM], ax
  8799 00007765 07                      		pop	es
  8800                                  
  8801                                  NOSETSTUFF:				; ...
  8802 00007766 89C8                    		mov	ax, cx
  8803 00007768 0306[2C03]              		add	ax, word [DMAADD]
  8804 0000776C 730C                    		jnb	short setup_OK
  8805 0000776E A1[2C03]                		mov	ax, word [DMAADD]
  8806 00007771 F7D8                    		neg	ax
  8807 00007773 7501                    		jnz	short NoDec
  8808 00007775 48                      		dec	ax
  8809                                  
  8810                                  NoDec:					; ...
  8811 00007776 89C1                    		mov	cx, ax
  8812 00007778 E304                    		jcxz	NOROOM
  8813                                  
  8814                                  setup_OK:				; ...
  8815 0000777A C3                      		retn
  8816                                  ; ---------------------------------------------------------------------------
  8817                                  
  8818                                  EOFERR:					; ...
  8819 0000777B 07                      		pop	es
  8820 0000777C 31C9                    		xor	cx, cx
  8821                                  
  8822                                  NOROOM:					; ...
  8823 0000777E 5B                      		pop	bx
  8824 0000777F F8                      		clc
  8825 00007780 C3                      		retn
  8826                                  
  8827                                  ; =============== S U B	R O U T	I N E =======================================
  8828                                  
  8829                                  BREAKDOWN:		; ...
  8830 00007781 A1[CC05]                		mov	ax, [BYTSECPOS]
  8831 00007784 89CB                    		mov	bx, cx
  8832 00007786 09C0                    		or	ax, ax
  8833 00007788 740E                    		jz	short SAVFIR
  8834 0000778A 262B4602                		sub	ax, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  8835 0000778E F7D8                    		neg	ax
  8836 00007790 29C3                    		sub	bx, ax
  8837 00007792 7304                    		jnb	short SAVFIR
  8838 00007794 01D8                    		add	ax, bx
  8839 00007796 31DB                    		xor	bx, bx
  8840                                  
  8841                                  SAVFIR:					; ...
  8842 00007798 A3[D205]                		mov	[BYTCNT1], ax
  8843 0000779B 89D8                    		mov	ax, bx
  8844 0000779D 31D2                    		xor	dx, dx
  8845 0000779F 26F77602                		div	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
  8846 000077A3 A3[D605]                		mov	[SECCNT], ax
  8847 000077A6 8916[D405]              		mov	[BYTCNT2], dx
  8848                                  
  8849                                  _RET45:					; ...
  8850 000077AA C3                      		retn
  8851                                  
  8852                                  ; =============== S U B	R O U T	I N E =======================================
  8853                                  
  8854                                  READ_LOCK_VIOLATION: ; ...
  8855 000077AB C606[7505]00            		mov	byte [READOP], 0
  8856                                  
  8857                                  ERR_ON_CHECK:				; ...
  8858 000077B0 26F6450380              		test	byte [es:di+3], 80h	; [ES:DI+SF_ENTRY.sf_mode+1],
  8859                                  					; (sf_isFCB>>8)
  8860 000077B5 750E                    		jnz	short HARD_ERR
  8861 000077B7 51                      		push	cx
  8862 000077B8 268A4D02                		mov	cl, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  8863 000077BC 80E1F0                  		and	cl, 0F0h	; SHARING_MASK
  8864 000077BF 80F900                  		cmp	cl, 0		; SHARING_COMPAT
  8865 000077C2 59                      		pop	cx
  8866 000077C3 7505                    		jnz	short NO_HARD_ERR
  8867                                  
  8868                                  HARD_ERR:				; ...
  8869 000077C5 E82D3B                  		call	LOCK_VIOLATION
  8870 000077C8 73E0                    		jnb	short _RET45
  8871                                  
  8872                                  NO_HARD_ERR:				; ...
  8873 000077CA 31C9                    		xor	cx, cx
  8874 000077CC B82100                  		mov	ax, 21h		; error_lock_violation
  8875 000077CF F9                      		stc
  8876 000077D0 C3                      		retn
  8877                                  
  8878                                  ; =============== S U B	R O U T	I N E =======================================
  8879                                  
  8880                                  WRITE_LOCK_VIOLATION: ; ...
  8881 000077D1 C606[7505]01            		mov	byte [READOP], 1
  8882 000077D6 EBD8                    		jmp	short ERR_ON_CHECK
  8883                                  
  8884                                  ; ---------------------------------------------------------------------------
  8885                                  
  8886                                  DISKREAD:				; ...
  8887 000077D8 268B4511                		mov	ax, [es:di+11h]	; [ES:DI+SF_ENTRY.sf_size]
  8888 000077DC 268B5D13                		mov	bx, [es:di+13h]	; [ES:DI+SF_ENTRY.sf_size+2]
  8889 000077E0 2B06[CE05]              		sub	ax, word [BYTPOS]
  8890 000077E4 1B1E[D005]              		sbb	bx, word [BYTPOS+2]
  8891 000077E8 7226                    		jb	short RDERR
  8892 000077EA 750A                    		jnz	short ENUF
  8893 000077EC 09C0                    		or	ax, ax
  8894 000077EE 7420                    		jz	short RDERR
  8895 000077F0 39C8                    		cmp	ax, cx
  8896 000077F2 7302                    		jnb	short ENUF
  8897 000077F4 89C1                    		mov	cx, ax
  8898                                  
  8899                                  ENUF:					; ...
  8900 000077F6 E874FE                  		call	CHECK_READ_LOCK
  8901 000077F9 7301                    		jnb	short _READ_OK
  8902 000077FB C3                      		retn
  8903                                  ; ---------------------------------------------------------------------------
  8904                                  
  8905                                  _READ_OK:				; ...
  8906 000077FC C42E[8A05]              		les	bp, [THISDPB]
  8907 00007800 E87EFF                  		call	BREAKDOWN
  8908 00007803 8B0E[BC05]              		mov	cx, [CLUSNUM]
  8909 00007807 E8AD13                  		call	FNDCLUS
  8910 0000780A 720E                    		jb	short SET_ACC_ERR_DS
  8911 0000780C 09C9                    		or	cx, cx
  8912 0000780E 7413                    		jz	short SKIPERR
  8913                                  
  8914                                  RDERR:					; ...
  8915 00007810 B40E                    		mov	ah, 0Eh
  8916 00007812 E92502                  		jmp	WRTERR22
  8917                                  ; ---------------------------------------------------------------------------
  8918                                  
  8919                                  SETSFTJ2:				; ...
  8920 00007815 E99600                  		jmp	SETSFT
  8921                                  ; ---------------------------------------------------------------------------
  8922                                  
  8923                                  CANOT_READ:				; ...
  8924 00007818 59                      		pop	cx
  8925 00007819 5B                      		pop	bx
  8926                                  
  8927                                  SET_ACC_ERR_DS:				; ...
  8928 0000781A 16                      		push	ss
  8929 0000781B 1F                      		pop	ds
  8930                                  
  8931                                  SET_ACC_ERR:				; ...
  8932 0000781C 31C9                    		xor	cx, cx
  8933 0000781E B80500                  		mov	ax, 5		; error_access_denied
  8934 00007821 F9                      		stc
  8935 00007822 C3                      		retn
  8936                                  ; ---------------------------------------------------------------------------
  8937                                  
  8938                                  SKIPERR:				; ...
  8939 00007823 8916[BA05]              		mov	[LASTPOS], dx
  8940 00007827 891E[BC05]              		mov	[CLUSNUM], bx
  8941 0000782B 833E[D205]00            		cmp	word [BYTCNT1], 0
  8942 00007830 7405                    		jz	short RDMID
  8943 00007832 E8F813                  		call	BUFRD
  8944                                  ; ---------------------------------------------------------------------------
  8945 00007835 72E3                    		jb	short SET_ACC_ERR_DS
  8946                                  
  8947                                  RDMID:					; ...
  8948 00007837 833E[D605]00            		cmp	word [SECCNT], 0
  8949 0000783C 7453                    		jz	short RDLAST
  8950 0000783E E88914                  		call	NEXTSEC
  8951 00007841 72D2                    		jb	short SETSFTJ2
  8952 00007843 C606[7405]01            		mov	byte [TRANS], 1
  8953 00007848 8A16[7305]              		mov	dl, [SECCLUSPOS]
  8954 0000784C 8B0E[D605]              		mov	cx, [SECCNT]
  8955 00007850 8B1E[BC05]              		mov	bx, [CLUSNUM]
  8956                                  
  8957                                  RDLP:					; ...
  8958 00007854 E8A414                  		call	OPTIMIZE
  8959 00007857 72C1                    		jb	short SET_ACC_ERR_DS
  8960 00007859 57                      		push	di
  8961 0000785A 50                      		push	ax
  8962 0000785B 53                      		push	bx
  8963 0000785C C606[4B03]38            		mov	byte [ALLOWED], 38h ; Allowed_RETRY+Allowed_FAIL+Allowed_IGNORE
  8964 00007861 8E1E[2E03]              		mov	ds, word [DMAADD+2]
  8965 00007865 52                      		push	dx
  8966 00007866 51                      		push	cx
  8967 00007867 E86922                  		call	SET_RQ_SC_PARMS
  8968 0000786A E8C6FD                  		call	DREAD
  8969 0000786D 59                      		pop	cx
  8970 0000786E 5A                      		pop	dx
  8971 0000786F 368F06[0C06]            		pop	word [ss:TEMP_VAR]
  8972 00007874 72A2                    		jb	short CANOT_READ
  8973 00007876 368C1E[0E06]            		mov	[ss:TEMP_VAR2],	ds
  8974 0000787B E85E00                  		call	DskRdBufScan
  8975 0000787E 16                      		push	ss
  8976 0000787F 1F                      		pop	ds
  8977 00007880 59                      		pop	cx
  8978 00007881 5B                      		pop	bx
  8979 00007882 E30D                    		jcxz	RDLAST
  8980 00007884 E8171C                  		call	IsEOF
  8981 00007887 7325                    		jnb	short SETSFT
  8982 00007889 B200                    		mov	dl, 0
  8983 0000788B FF06[BA05]              		inc	word [LASTPOS]
  8984 0000788F EBC3                    		jmp	short RDLP
  8985                                  ; ---------------------------------------------------------------------------
  8986                                  
  8987                                  RDLAST:					; ...
  8988 00007891 A1[D405]                		mov	ax, [BYTCNT2]
  8989 00007894 09C0                    		or	ax, ax
  8990 00007896 7416                    		jz	short SETSFT
  8991 00007898 A3[D205]                		mov	[BYTCNT1], ax
  8992 0000789B E82C14                  		call	NEXTSEC
  8993 0000789E 720E                    		jb	short SETSFT
  8994 000078A0 C706[CC05]0000          		mov	word [BYTSECPOS], 0
  8995 000078A6 E88413                  		call	BUFRD
  8996 000078A9 7303                    		jnb	short SETSFT
  8997 000078AB E96CFF                  		jmp	SET_ACC_ERR_DS
  8998                                  
  8999                                  ; =============== S U B	R O U T	I N E =======================================
  9000                                  
  9001                                  SETSFT:		; ...
  9002 000078AE C43E[9E05]              		les	di, [THISSFT]
  9003                                  
  9004                                  SETCLUS:				; ...
  9005 000078B2 8B0E[B805]              		mov	cx, [NEXTADD]
  9006 000078B6 2B0E[2C03]              		sub	cx, word [DMAADD]
  9007 000078BA 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  9008                                  					; devid_device
  9009 000078BF 750E                    		jnz	short ADDREC
  9010 000078C1 A1[BC05]                		mov	ax, [CLUSNUM]
  9011 000078C4 26894535                		mov	[es:di+35h], ax	; [ES:DI+SF_ENTRY.sf_lstclus]
  9012 000078C8 A1[BA05]                		mov	ax, [LASTPOS]
  9013 000078CB 26894519                		mov	[es:di+19h], ax	; [ES:DI+SF_ENTRY.sf_cluspos]
  9014                                  
  9015                                  ADDREC:					; ...
  9016 000078CF E309                    		jcxz	RET28
  9017 000078D1 26014D15                		add	[es:di+15h], cx	; [ES:DI+SF_ENTRY.sf_position]
  9018 000078D5 2683551700              		adc	word [es:di+17h], 0	; [ES:DI+SF_ENTRY.sf_position+2]
  9019                                  
  9020                                  RET28:					; ...
  9021 000078DA F8                      		clc
  9022 000078DB C3                      		retn
  9023                                  
  9024                                  ; =============== S U B	R O U T	I N E =======================================
  9025                                  
  9026                                  DskRdBufScan:	; ...
  9027 000078DC 36833E[7100]00          		cmp	word [ss:DirtyBufferCount], 0
  9028 000078E2 743C                    		jz	short bufx
  9029 000078E4 368B1E[0706]            		mov	bx, [ss:HIGH_SECTOR]
  9030 000078E9 89DE                    		mov	si, bx
  9031 000078EB 01D1                    		add	cx, dx
  9032 000078ED 83D600                  		adc	si, 0
  9033 000078F0 E8831F                  		call	GETCURHEAD
  9034 000078F3 8B4502                  		mov	ax, [di+2]	; [di+BUFFINFO.buf_prev]
  9035 000078F6 36A3[BB0E]              		mov	[ss:FIRST_BUFF_ADDR], ax
  9036 000078FA 268A4600                		mov	al, [es:bp+0]
  9037                                  
  9038                                  bufq:					; ...
  9039 000078FE 3A4504                  		cmp	al, [di+4]	; [di+BUFFINFO.buf_ID]
  9040 00007901 7514                    		jnz	short bufq1
  9041 00007903 3B5D08                  		cmp	bx, [di+8]	; [di+BUFFINFO.buf_sector+2]
  9042 00007906 7503                    		jnz	short bufq01
  9043 00007908 3B5506                  		cmp	dx, [di+6]	; [di+BUFFINFO.buf_sector]
  9044                                  
  9045                                  bufq01:					; ...
  9046 0000790B 770A                    		ja	short bufq1
  9047 0000790D 3B7508                  		cmp	si, [di+8]
  9048 00007910 7503                    		jnz	short bufq02
  9049 00007912 3B4D06                  		cmp	cx, [di+6]
  9050                                  
  9051                                  bufq02:					; ...
  9052 00007915 770A                    		ja	short bufq2
  9053                                  
  9054                                  bufq1:					; ...
  9055 00007917 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
  9056 0000791C 8B3D                    		mov	di, [di]	; [di+BUFFINFO.buf_next]
  9057 0000791E 75DE                    		jnz	short bufq
  9058                                  
  9059                                  bufx:					; ...
  9060 00007920 C3                      		retn
  9061                                  ; ---------------------------------------------------------------------------
  9062                                  
  9063                                  bufq2:					; ...
  9064 00007921 50                      		push	ax
  9065 00007922 F6450540                		test	byte [di+5], 40h ; [di+BUFFINFO.buf_flags],
  9066                                  					; buf_dirty
  9067 00007926 742F                    		jz	short bufq3
  9068 00007928 51                      		push	cx
  9069 00007929 52                      		push	dx
  9070 0000792A 56                      		push	si
  9071 0000792B 57                      		push	di
  9072 0000792C 06                      		push	es
  9073 0000792D 89D0                    		mov	ax, dx
  9074 0000792F 2B4506                  		sub	ax, [di+6]	; [di+BUFFINFO.buf_sector]
  9075 00007932 F7D8                    		neg	ax
  9076 00007934 8D7514                  		lea	si, [di+20]	; [di+BUFINSIZ]
  9077 00007937 268B4E02                		mov	cx, [es:bp+2]	; [es:bp+DPB.SECTOR_SIZE]
  9078 0000793B F7E1                    		mul	cx
  9079 0000793D 368B3E[0C06]            		mov	di, [ss:TEMP_VAR]
  9080 00007942 01C7                    		add	di, ax
  9081 00007944 368E06[0E06]            		mov	es, [ss:TEMP_VAR2]
  9082 00007949 D1E9                    		shr	cx, 1
  9083 0000794B F3A5                    		rep movsw
  9084 0000794D 83D100                  		adc	cx, 0
  9085 00007950 F3A4                    		rep movsb
  9086 00007952 07                      		pop	es
  9087 00007953 5F                      		pop	di
  9088 00007954 5E                      		pop	si
  9089 00007955 5A                      		pop	dx
  9090 00007956 59                      		pop	cx
  9091                                  
  9092                                  bufq3:					; ...
  9093 00007957 89F8                    		mov	ax, di
  9094 00007959 E82C1F                  		call	SCANPLACE
  9095 0000795C 363B06[BB0E]            		cmp	ax, [ss:FIRST_BUFF_ADDR]
  9096 00007961 58                      		pop	ax
  9097 00007962 759A                    		jnz	short bufq
  9098 00007964 EBBA                    		jmp	short bufx
  9099                                  
  9100                                  ; =============== S U B	R O U T	I N E =======================================
  9101                                  
  9102                                  DISKWRITE:		; ...
  9103 00007966 E8E5FC                  		call	CHECK_WRITE_LOCK
  9104 00007969 7304                    		jnb	short _WRITE_OK
  9105 0000796B C3                      		retn
  9106                                  ; ---------------------------------------------------------------------------
  9107                                  
  9108                                  WRTEOFJ:				; ...
  9109 0000796C E9BC01                  		jmp	WRTEOF
  9110                                  ; ---------------------------------------------------------------------------
  9111                                  
  9112                                  _WRITE_OK:				; ...
  9113 0000796F 26816505BFBF            		and	word [es:di+5], 0BFBFh ; [ES:DI+SF_ENTRY.sf_flags],
  9114                                  					; ~(sf_close_nodate|devid_file_clean)
  9115 00007975 268B4511                		mov	ax, [es:di+11h]	; [ES:DI+SF_ENTRY.sf_size]
  9116 00007979 A3[0C06]                		mov	[TEMP_VAR], ax
  9117 0000797C 268B4513                		mov	ax, [es:di+13h]	; [ES:DI+SF_ENTRY.sf_size+2]
  9118 00007980 A3[0E06]                		mov	[TEMP_VAR2],	ax
  9119 00007983 C42E[8A05]              		les	bp, [THISDPB]
  9120 00007987 E8F7FD                  		call	BREAKDOWN
  9121 0000798A A1[CE05]                		mov	ax, word [BYTPOS]
  9122 0000798D 8B16[D005]              		mov	dx, word [BYTPOS+2]
  9123 00007991 E3D9                    		jcxz	WRTEOFJ
  9124 00007993 01C8                    		add	ax, cx
  9125 00007995 83D200                  		adc	dx, 0
  9126 00007998 268B5E02                		mov	bx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  9127 0000799C E8BB02                  		call	DIV32
  9128 0000799F 89C6                    		mov	si, ax
  9129 000079A1 890E[0706]              		mov	word [HIGH_SECTOR], cx
  9130 000079A5 09D2                    		or	dx, dx
  9131 000079A7 52                      		push	dx
  9132 000079A8 89CA                    		mov	dx, cx
  9133 000079AA 7506                    		jnz	short CALCLUS
  9134 000079AC 83E801                  		sub	ax, 1
  9135 000079AF 83DA00                  		sbb	dx, 0
  9136                                  
  9137                                  CALCLUS:				; ...
  9138 000079B2 E8CC02                  		call	SHR32
  9139 000079B5 5A                      		pop	dx
  9140 000079B6 50                      		push	ax
  9141 000079B7 52                      		push	dx
  9142 000079B8 8B16[0E06]              		mov	dx, [TEMP_VAR2]
  9143 000079BC A1[0C06]                		mov	ax, [TEMP_VAR]
  9144 000079BF E89802                  		call	DIV32
  9145 000079C2 890E[0E06]              		mov	[TEMP_VAR2],	cx
  9146 000079C6 890E[CA05]              		mov	word [VALSEC+2],	cx
  9147 000079CA 89C1                    		mov	cx, ax
  9148 000079CC 89F3                    		mov	bx, si
  9149 000079CE 09D2                    		or	dx, dx
  9150 000079D0 7408                    		jz	short NORND
  9151 000079D2 83C001                  		add	ax, 1
  9152 000079D5 8316[CA05]00            		adc	word [VALSEC+2],	0
  9153                                  
  9154                                  NORND:					; ...
  9155 000079DA A3[C805]                		mov	word [VALSEC], ax
  9156 000079DD 31C0                    		xor	ax, ax
  9157 000079DF A3[DE05]                		mov	word [GROWCNT], ax
  9158 000079E2 A3[E005]                		mov	word [GROWCNT+2], ax
  9159 000079E5 58                      		pop	ax
  9160 000079E6 8B3E[0706]              		mov	di, [HIGH_SECTOR]
  9161 000079EA 3B3E[0E06]              		cmp	di, [TEMP_VAR2]
  9162 000079EE 7267                    		jb	short NOGROW
  9163 000079F0 7408                    		jz	short lowsec
  9164 000079F2 29CB                    		sub	bx, cx
  9165 000079F4 1B3E[0E06]              		sbb	di, [TEMP_VAR2]
  9166 000079F8 EB09                    		jmp	short yesgrow
  9167                                  ; ---------------------------------------------------------------------------
  9168                                  
  9169                                  lowsec:					; ...
  9170 000079FA BF0000                  		mov	di, 0
  9171 000079FD 29CB                    		sub	bx, cx
  9172 000079FF 7256                    		jb	short NOGROW
  9173 00007A01 7447                    		jz	short TESTTAIL
  9174                                  
  9175                                  yesgrow:				; ...
  9176 00007A03 89D1                    		mov	cx, dx
  9177 00007A05 93                      		xchg	ax, bx
  9178 00007A06 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
  9179 00007A0A 8916[0706]              		mov	word [HIGH_SECTOR], dx
  9180 00007A0E A3[0E06]                		mov	[TEMP_VAR2],	ax
  9181 00007A11 89F8                    		mov	ax, di
  9182 00007A13 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
  9183 00007A17 0306[0706]              		add	ax, [HIGH_SECTOR]
  9184 00007A1B 89C2                    		mov	dx, ax
  9185 00007A1D A1[0E06]                		mov	ax, [TEMP_VAR2]
  9186 00007A20 29C8                    		sub	ax, cx
  9187 00007A22 83DA00                  		sbb	dx, 0
  9188 00007A25 01D8                    		add	ax, bx
  9189 00007A27 83D200                  		adc	dx, 0
  9190 00007A2A EB24                    		jmp	short SETGRW
  9191                                  ; ---------------------------------------------------------------------------
  9192                                  
  9193                                  HAVSTART:				; ...
  9194 00007A2C 89C1                    		mov	cx, ax
  9195 00007A2E E8A611                  		call	SKPCLP
  9196 00007A31 E312                    		jcxz	DOWRTJ
  9197 00007A33 E85113                  		call	ALLOCATE
  9198 00007A36 730D                    		jnb	short DOWRTJ
  9199                                  
  9200                                  WRTERR:					; ...
  9201 00007A38 B40F                    		mov	ah, 0Fh
  9202                                  
  9203                                  WRTERR22:				; ...
  9204 00007A3A A0[7605]                		mov	al, [THISDRV]
  9205 00007A3D 31C9                    		xor	cx, cx
  9206 00007A3F C43E[9E05]              		les	di, [THISSFT]
  9207 00007A43 F8                      		clc
  9208 00007A44 C3                      		retn
  9209                                  ; ---------------------------------------------------------------------------
  9210                                  
  9211                                  DOWRTJ:					; ...
  9212 00007A45 EB46                    		jmp	short DOWRT
  9213                                  ; ---------------------------------------------------------------------------
  9214                                  
  9215                                  ACC_ERRWJ:				; ...
  9216 00007A47 E9DE00                  		jmp	SET_ACC_ERRW
  9217                                  ; ---------------------------------------------------------------------------
  9218                                  
  9219                                  TESTTAIL:				; ...
  9220 00007A4A 29D0                    		sub	ax, dx
  9221 00007A4C 7609                    		jbe	short NOGROW
  9222 00007A4E 31D2                    		xor	dx, dx
  9223                                  
  9224                                  SETGRW:					; ...
  9225 00007A50 A3[DE05]                		mov	word [GROWCNT], ax
  9226 00007A53 8916[E005]              		mov	word [GROWCNT+2], dx
  9227                                  
  9228                                  NOGROW:					; ...
  9229 00007A57 58                      		pop	ax
  9230 00007A58 8B0E[BC05]              		mov	cx, [CLUSNUM]
  9231 00007A5C E85811                  		call	FNDCLUS
  9232 00007A5F 72E6                    		jb	short ACC_ERRWJ
  9233 00007A61 891E[BC05]              		mov	[CLUSNUM], bx
  9234 00007A65 8916[BA05]              		mov	[LASTPOS], dx
  9235 00007A69 29D0                    		sub	ax, dx
  9236 00007A6B 7420                    		jz	short DOWRT
  9237 00007A6D E3BD                    		jcxz	HAVSTART
  9238 00007A6F 51                      		push	cx
  9239 00007A70 89C1                    		mov	cx, ax
  9240 00007A72 E81213                  		call	ALLOCATE
  9241 00007A75 59                      		pop	cx
  9242 00007A76 72C0                    		jb	short WRTERR
  9243 00007A78 8B16[BA05]              		mov	dx, [LASTPOS]
  9244 00007A7C 42                      		inc	dx
  9245 00007A7D 49                      		dec	cx
  9246 00007A7E 7405                    		jz	short NOSKIP
  9247 00007A80 E85411                  		call	SKPCLP
  9248 00007A83 72C2                    		jb	short ACC_ERRWJ
  9249                                  
  9250                                  NOSKIP:					; ...
  9251 00007A85 891E[BC05]              		mov	[CLUSNUM], bx
  9252 00007A89 8916[BA05]              		mov	[LASTPOS], dx
  9253                                  
  9254                                  DOWRT:					; ...
  9255 00007A8D 833E[D205]00            		cmp	word [BYTCNT1], 0
  9256 00007A92 7409                    		jz	short WRTMID
  9257 00007A94 8B1E[BC05]              		mov	bx, [CLUSNUM]
  9258 00007A98 E8CD11                  		call	BUFWRT
  9259 00007A9B 72AA                    		jb	short ACC_ERRWJ
  9260                                  
  9261                                  WRTMID:					; ...
  9262 00007A9D A1[D605]                		mov	ax, [SECCNT]
  9263 00007AA0 09C0                    		or	ax, ax
  9264 00007AA2 7447                    		jz	short WRTLAST
  9265 00007AA4 0106[C405]              		add	word [SECPOS], ax
  9266 00007AA8 8316[C605]00            		adc	word [SECPOS+2], 0
  9267 00007AAD E81A12                  		call	NEXTSEC
  9268 00007AB0 7276                    		jb	short SET_ACC_ERRW
  9269 00007AB2 C606[7405]01            		mov	byte [TRANS], 1
  9270 00007AB7 8A16[7305]              		mov	dl, [SECCLUSPOS]
  9271 00007ABB 8B1E[BC05]              		mov	bx, [CLUSNUM]
  9272 00007ABF 8B0E[D605]              		mov	cx, [SECCNT]
  9273                                  
  9274                                  WRTLP:					; ...
  9275 00007AC3 E83512                  		call	OPTIMIZE
  9276 00007AC6 7260                    		jb	short SET_ACC_ERRW
  9277 00007AC8 57                      		push	di
  9278 00007AC9 50                      		push	ax
  9279 00007ACA E80701                  		call	DskWrtBufPurge
  9280 00007ACD 368E1E[2E03]            		mov	ds, word [ss:DMAADD+2]
  9281 00007AD2 36C606[4B03]38          		mov	byte [ss:ALLOWED], 38h ; Allowed_RETRY+Allowed_FAIL+Allowed_IGNORE
  9282 00007AD8 E8BAFB                  		call	DWRITE
  9283 00007ADB 59                      		pop	cx
  9284 00007ADC 5B                      		pop	bx
  9285 00007ADD 16                      		push	ss
  9286 00007ADE 1F                      		pop	ds
  9287 00007ADF 7247                    		jb	short SET_ACC_ERRW
  9288 00007AE1 E308                    		jcxz	WRTLAST
  9289 00007AE3 B200                    		mov	dl, 0
  9290 00007AE5 FF06[BA05]              		inc	word [LASTPOS]
  9291 00007AE9 EBD8                    		jmp	short WRTLP
  9292                                  ; ---------------------------------------------------------------------------
  9293                                  
  9294                                  WRTLAST:				; ...
  9295 00007AEB A1[D405]                		mov	ax, [BYTCNT2]
  9296 00007AEE 09C0                    		or	ax, ax
  9297 00007AF0 7413                    		jz	short FINWRT
  9298 00007AF2 A3[D205]                		mov	[BYTCNT1], ax
  9299 00007AF5 E8D211                  		call	NEXTSEC
  9300 00007AF8 722E                    		jb	short SET_ACC_ERRW
  9301 00007AFA C706[CC05]0000          		mov	word [BYTSECPOS], 0
  9302 00007B00 E86511                  		call	BUFWRT
  9303 00007B03 7223                    		jb	short SET_ACC_ERRW
  9304                                  
  9305                                  FINWRT:					; ...
  9306 00007B05 C43E[9E05]              		les	di, [THISSFT]
  9307 00007B09 A1[DE05]                		mov	ax, word [GROWCNT]
  9308 00007B0C 8B0E[E005]              		mov	cx, word [GROWCNT+2]
  9309 00007B10 09C0                    		or	ax, ax
  9310 00007B12 7502                    		jnz	short UPDATE_size
  9311 00007B14 E30F                    		jcxz	SAMSIZ
  9312                                  
  9313                                  UPDATE_size:				; ...
  9314 00007B16 26014511                		add	[es:di+11h], ax	; [ES:DI+SF_ENTRY.sf_size]
  9315 00007B1A 26114D13                		adc	[es:di+13h], cx	; [ES:DI+SF_ENTRY.sf_size+2]
  9316 00007B1E B80100                  		mov	ax, 1
  9317                                  		;call	dword [ShSU] ; call far [JShare+(14*4)] ; 14 = ShSU
  9318 00007B21 FF1E[C800]              		call	far [JShare+(14*4)] 
  9319                                  SAMSIZ:					; ...
  9320 00007B25 E98AFD                  		jmp	SETCLUS
  9321                                  ; ---------------------------------------------------------------------------
  9322                                  
  9323                                  SET_ACC_ERRW:				; ...
  9324 00007B28 E9EFFC                  		jmp	SET_ACC_ERR_DS
  9325                                  ; ---------------------------------------------------------------------------
  9326                                  
  9327                                  WRTEOF:					; ...
  9328 00007B2B 89C1                    		mov	cx, ax
  9329 00007B2D 09D1                    		or	cx, dx
  9330 00007B2F 746B                    		jz	short KILLFIL
  9331 00007B31 83E801                  		sub	ax, 1
  9332 00007B34 83DA00                  		sbb	dx, 0
  9333 00007B37 53                      		push	bx
  9334 00007B38 268B5E02                		mov	bx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  9335 00007B3C E81B01                  		call	DIV32
  9336 00007B3F 5B                      		pop	bx
  9337 00007B40 89CA                    		mov	dx, cx
  9338 00007B42 890E[0706]              		mov	word [HIGH_SECTOR], cx
  9339 00007B46 E83801                  		call	SHR32
  9340 00007B49 89C1                    		mov	cx, ax
  9341 00007B4B E86910                  		call	FNDCLUS
  9342                                  
  9343                                  SET_ACC_ERRWJ2:				; ...
  9344 00007B4E 72D8                    		jb	short SET_ACC_ERRW
  9345 00007B50 E326                    		jcxz	RELFILE
  9346 00007B52 E83212                  		call	ALLOCATE
  9347 00007B55 721E                    		jb	short WRTERRJ
  9348                                  
  9349                                  UPDATE:					; ...
  9350 00007B57 C43E[9E05]              		les	di, [THISSFT]
  9351 00007B5B A1[CE05]                		mov	ax, word [BYTPOS]
  9352 00007B5E 26894511                		mov	[es:di+11h], ax	; [ES:DI+SF_ENTRY.sf_size]
  9353 00007B62 A1[D005]                		mov	ax, word [BYTPOS+2]
  9354 00007B65 26894513                		mov	[es:di+13h], ax	; [ES:DI+SF_ENTRY.sf_size+2]
  9355 00007B69 B80200                  		mov	ax, 2
  9356                                  		;call	dword [ShSU] ; call far [JShare+(14*4)]
  9357 00007B6C FF1E[C800]              		call	far [JShare+(14*4)]
  9358 00007B70 31C9                    		xor	cx, cx
  9359 00007B72 E95AFD                  		jmp	ADDREC
  9360                                  ; ---------------------------------------------------------------------------
  9361                                  
  9362                                  WRTERRJ:				; ...
  9363 00007B75 E9C0FE                  		jmp	WRTERR
  9364                                  ; ---------------------------------------------------------------------------
  9365                                  
  9366                                  RELFILE:				; ...
  9367 00007B78 06                      		push	es
  9368 00007B79 C43E[9E05]              		les	di, [THISSFT]
  9369 00007B7D 263B5519                		cmp	dx, [es:di+19h]	; [ES:DI+SF_ENTRY.sf_cluspos]
  9370 00007B81 730E                    		jnb	short SKIPRESET
  9371 00007B83 26C745190000            		mov	word [es:di+19h], 0
  9372 00007B89 268B550B                		mov	dx, [es:di+0Bh]	; [ES:DI+SF_ENTRY.sf_firclus]
  9373 00007B8D 26895535                		mov	[es:di+35h], dx	; [ES:DI+SF_ENTRY.sf_lstclus]
  9374                                  
  9375                                  SKIPRESET:				; ...
  9376 00007B91 07                      		pop	es
  9377 00007B92 BAFFFF                  		mov	dx, 0FFFFh
  9378 00007B95 E8A312                  		call	RELBLKS
  9379                                  
  9380                                  SET_ACC_ERRWJJ:				; ...
  9381 00007B98 72B4                    		jb	short SET_ACC_ERRWJ2
  9382 00007B9A EBBB                    		jmp	short UPDATE
  9383                                  ; ---------------------------------------------------------------------------
  9384                                  
  9385                                  KILLFIL:				; ...
  9386 00007B9C 31DB                    		xor	bx, bx
  9387 00007B9E 06                      		push	es
  9388 00007B9F C43E[9E05]              		les	di, [THISSFT]
  9389 00007BA3 26895D19                		mov	[es:di+19h], bx	; [ES:DI+SF_ENTRY.sf_cluspos]
  9390 00007BA7 26895D35                		mov	[es:di+35h], bx	; [ES:DI+SF_ENTRY.sf_lstclus]
  9391 00007BAB 26875D0B                		xchg	bx, [es:di+0Bh]	; [ES:DI+SF_ENTRY.sf_firclus]
  9392 00007BAF 07                      		pop	es
  9393 00007BB0 09DB                    		or	bx, bx
  9394 00007BB2 741E                    		jz	short UPDATEJ
  9395 00007BB4 06                      		push	es
  9396 00007BB5 55                      		push	bp
  9397 00007BB6 50                      		push	ax
  9398 00007BB7 51                      		push	cx
  9399 00007BB8 52                      		push	dx
  9400 00007BB9 C42E[8A05]              		les	bp, [THISDPB]
  9401 00007BBD 268A5600                		mov	dl, [es:bp+0]
  9402 00007BC1 89D9                    		mov	cx, bx
  9403 00007BC3 B402                    		mov	ah, 2
  9404 00007BC5 E8F2E9                  		call	FastOpen_Update
  9405 00007BC8 5A                      		pop	dx
  9406 00007BC9 59                      		pop	cx
  9407 00007BCA 58                      		pop	ax
  9408 00007BCB 5D                      		pop	bp
  9409 00007BCC 07                      		pop	es
  9410 00007BCD E86912                  		call	RELEASE
  9411 00007BD0 72C6                    		jb	short SET_ACC_ERRWJJ
  9412                                  
  9413                                  UPDATEJ:				; ...
  9414 00007BD2 EB83                    		jmp	short UPDATE
  9415                                  
  9416                                  ; =============== S U B	R O U T	I N E =======================================
  9417                                  
  9418                                  DskWrtBufPurge:	; ...
  9419 00007BD4 53                      		push	bx
  9420 00007BD5 51                      		push	cx
  9421 00007BD6 368B1E[0706]            		mov	bx, [ss:HIGH_SECTOR]
  9422 00007BDB 89DE                    		mov	si, bx
  9423 00007BDD 01D1                    		add	cx, dx
  9424 00007BDF 83D600                  		adc	si, 0
  9425 00007BE2 268A4600                		mov	al, [es:bp+0]
  9426 00007BE6 36833E[7700]00          		cmp	word [ss:SC_CACHE_COUNT], 0
  9427 00007BEC 7431                    		jz	short nosc
  9428 00007BEE 363A06[B00D]            		cmp	al, [ss:CurSC_DRIVE]
  9429 00007BF3 752A                    		jnz	short nosc
  9430 00007BF5 50                      		push	ax
  9431 00007BF6 36A1[B10D]              		mov	ax, word [ss:CurSC_SECTOR]
  9432 00007BFA 368B3E[B30D]            		mov	di, word [ss:CurSC_SECTOR+2]
  9433 00007BFF 39FE                    		cmp	si, di
  9434 00007C01 7502                    		jnz	short sc01
  9435 00007C03 39C1                    		cmp	cx, ax
  9436                                  
  9437                                  sc01:					; ...
  9438 00007C05 7617                    		jbe	short sc5
  9439 00007C07 360306[7700]            		add	ax, [ss:SC_CACHE_COUNT]
  9440 00007C0C 83D700                  		adc	di, 0
  9441 00007C0F 39FB                    		cmp	bx, di
  9442 00007C11 7502                    		jnz	short sc02
  9443 00007C13 39C2                    		cmp	dx, ax
  9444                                  
  9445                                  sc02:					; ...
  9446 00007C15 7307                    		jnb	short sc5
  9447 00007C17 36C706[B50D]0000        		mov	word [ss:SC_STATUS], 0
  9448                                  
  9449                                  sc5:					; ...
  9450 00007C1E 58                      		pop	ax
  9451                                  
  9452                                  nosc:					; ...
  9453 00007C1F E8541C                  		call	GETCURHEAD
  9454                                  
  9455                                  _bufq:					; ...
  9456 00007C22 3A4504                  		cmp	al, [di+4]	; [di+BUFFINFO.buf_ID]
  9457 00007C25 7527                    		jnz	short bufq5
  9458 00007C27 3B5D08                  		cmp	bx, [di+8]	; [di+BUFFINFO.buf_sector+2]
  9459 00007C2A 7503                    		jnz	short bufq04
  9460 00007C2C 3B5506                  		cmp	dx, [di+6]	; [di+BUFFINFO.buf_sector]
  9461                                  
  9462                                  bufq04:					; ...
  9463 00007C2F 771D                    		ja	short bufq5
  9464 00007C31 3B7508                  		cmp	si, [di+8]
  9465 00007C34 7503                    		jnz	short bufq05
  9466 00007C36 3B4D06                  		cmp	cx, [di+6]
  9467                                  
  9468                                  bufq05:					; ...
  9469 00007C39 7613                    		jbe	short bufq5
  9470 00007C3B F6450540                		test	byte [di+5], 40h ; [di+BUFFINFO.buf_flags],
  9471                                  					; buf_dirty
  9472 00007C3F 7403                    		jz	short bufq4
  9473 00007C41 E8A81E                  		call	DEC_DIRTY_COUNT
  9474                                  
  9475                                  bufq4:					; ...
  9476 00007C44 C74504FF20              		mov	word [di+4], 20FFh ; [di+BUFFINFO.buf_ID],
  9477                                  					; ((buf_visit<<8)|0FFh)
  9478 00007C49 E83C1C                  		call	SCANPLACE
  9479 00007C4C EB02                    		jmp	short bufq6
  9480                                  ; ---------------------------------------------------------------------------
  9481                                  
  9482                                  bufq5:					; ...
  9483 00007C4E 8B3D                    		mov	di, [di]	; [di+BUFFINFO.buf_next]
  9484                                  
  9485                                  bufq6:					; ...
  9486 00007C50 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
  9487 00007C55 75CB                    		jnz	short _bufq
  9488 00007C57 59                      		pop	cx
  9489 00007C58 5B                      		pop	bx
  9490 00007C59 C3                      		retn
  9491                                  
  9492                                  ; =============== S U B	R O U T	I N E =======================================
  9493                                  
  9494                                  DIV32:		; ...
  9495 00007C5A 81FB0002                		cmp	bx, 512
  9496 00007C5E 7515                    		jnz	short div5
  9497 00007C60 89D1                    		mov	cx, dx
  9498 00007C62 89C2                    		mov	dx, ax		; CX:AX	= Dividend
  9499                                  					; DX = Remainder
  9500 00007C64 81E2FF01                		and	dx, 1FFh	; 511
  9501 00007C68 88E0                    		mov	al, ah
  9502 00007C6A 88CC                    		mov	ah, cl
  9503 00007C6C 88E9                    		mov	cl, ch
  9504 00007C6E 30ED                    		xor	ch, ch
  9505 00007C70 D1E9                    		shr	cx, 1
  9506 00007C72 D1D8                    		rcr	ax, 1
  9507 00007C74 C3                      		retn
  9508                                  ; ---------------------------------------------------------------------------
  9509                                  
  9510                                  div5:					; ...
  9511 00007C75 89C1                    		mov	cx, ax
  9512 00007C77 89D0                    		mov	ax, dx
  9513 00007C79 31D2                    		xor	dx, dx
  9514 00007C7B F7F3                    		div	bx		; 0:AX/BX
  9515 00007C7D 91                      		xchg	ax, cx
  9516 00007C7E F7F3                    		div	bx		; DX:AX/BX
  9517 00007C80 C3                      		retn
  9518                                  
  9519                                  ; =============== S U B	R O U T	I N E =======================================
  9520                                  
  9521                                  SHR32:		; ...
  9522 00007C81 268A4E05                		mov	cl, [es:bp+5]	; [ES:BP+DPB.CLUSTER_SHIFT]
  9523 00007C85 30ED                    		xor	ch, ch
  9524 00007C87 E306                    		jcxz	norota
  9525                                  
  9526                                  rotashft2:				; ...
  9527 00007C89 D1EA                    		shr	dx, 1
  9528 00007C8B D1D8                    		rcr	ax, 1
  9529 00007C8D E2FA                    		loop	rotashft2
  9530                                  
  9531                                  norota:					; ...
  9532 00007C8F C3                      		retn
  9533                                  
  9534                                  ; =============== S U B	R O U T	I N E =======================================
  9535                                  
  9536                                  FINDENTRY:		; ...
  9537 00007C90 E85904                  		call	STARTSRCH
  9538 00007C93 A0[6B05]                		mov	al, [ATTRIB]
  9539 00007C96 249E                    		and	al, 9Eh		; ~attr_ignore
  9540 00007C98 3C08                    		cmp	al, 8		; attr_volume_id
  9541 00007C9A 7503                    		jnz	short NOTVOLSRCH
  9542 00007C9C E87D01                  		call	SETROOTSRCH
  9543                                  
  9544                                  NOTVOLSRCH:				; ...
  9545 00007C9F E80801                  		call	GETENTRY
  9546 00007CA2 7303                    		jnb	short SRCH
  9547 00007CA4 E99500                  		jmp	SETESRET
  9548                                  ; ---------------------------------------------------------------------------
  9549                                  
  9550                                  SRCH:					; ...
  9551 00007CA7 1E                      		push	ds
  9552 00007CA8 8E1E[E405]              		mov	ds, word [CURBUF+2]
  9553 00007CAC 8A27                    		mov	ah, [bx]	; [BX+dir_entry.dir_name] ; mov	ah,[bx+0]
  9554 00007CAE 08E4                    		or	ah, ah
  9555 00007CB0 743A                    		jz	short FREE
  9556 00007CB2 363A26[7F05]            		cmp	ah, [ss:DELALL]
  9557 00007CB7 7433                    		jz	short FREE
  9558 00007CB9 F6470B08                		test	byte [bx+0Bh], 8 ; [BX+dir_entry.dir_attr],
  9559                                  					; attr_volume_id
  9560 00007CBD 7405                    		jz	short CHKFNAM
  9561 00007CBF 36FE06[7B05]            		inc	byte [ss:VOLID]
  9562                                  
  9563                                  CHKFNAM:				; ...
  9564 00007CC4 8CD6                    		mov	si, ss
  9565 00007CC6 8EC6                    		mov	es, si
  9566 00007CC8 89DE                    		mov	si, bx
  9567 00007CCA BF[4B05]                		mov	di, NAME1
  9568 00007CCD 36803E[4B05]E5          		cmp	byte [ss:NAME1], 0E5h
  9569 00007CD3 7506                    		jnz	short NO_E5
  9570 00007CD5 36C606[4B05]05          		mov	byte [ss:NAME1], 5
  9571                                  
  9572                                  NO_E5:					; ...
  9573 00007CDB E86100                  		call	MetaCompare
  9574 00007CDE 7428                    		jz	short FOUND
  9575 00007CE0 1F                      		pop	ds
  9576                                  
  9577                                  NEXTENT:				; ...
  9578 00007CE1 C42E[8A05]              		les	bp, [THISDPB]
  9579 00007CE5 E86600                  		call	NEXTENTRY
  9580 00007CE8 73BD                    		jnb	short SRCH
  9581 00007CEA EB50                    		jmp	short SETESRET
  9582                                  ; ---------------------------------------------------------------------------
  9583                                  
  9584                                  FREE:					; ...
  9585 00007CEC 1F                      		pop	ds
  9586 00007CED 8B0E[4803]              		mov	cx, [LASTENT]
  9587 00007CF1 3B0E[D805]              		cmp	cx, [ENTFREE]
  9588 00007CF5 7304                    		jnb	short TSTALL
  9589 00007CF7 890E[D805]              		mov	[ENTFREE], cx
  9590                                  
  9591                                  TSTALL:					; ...
  9592 00007CFB 3A26[7F05]              		cmp	ah, [DELALL]
  9593                                  
  9594                                  NEXTENTJ:				; ...
  9595 00007CFF 74E0                    		jz	short NEXTENT
  9596 00007D01 890E[DA05]              		mov	[ENTLAST], cx
  9597 00007D05 F9                      		stc
  9598 00007D06 EB34                    		jmp	short SETESRET
  9599                                  ; ---------------------------------------------------------------------------
  9600                                  
  9601                                  FOUND:					; ...
  9602 00007D08 8A2C                    		mov	ch, [si]
  9603 00007D0A 1F                      		pop	ds
  9604 00007D0B 8A26[6B05]              		mov	ah, [ATTRIB]
  9605 00007D0F 80E49E                  		and	ah, 9Eh		; ~attr_ignore
  9606 00007D12 8D740F                  		lea	si, [si+15]	; [SI+dir_entry.dir_first-dir_entry.dir_attr]
  9607 00007D15 F6C508                  		test	ch, 8		; attr_volume_id
  9608 00007D18 7409                    		jz	short check_one_volume_id
  9609 00007D1A F6C408                  		test	ah, 8		; attr_volume_id
  9610 00007D1D 74E0                    		jz	short NEXTENTJ
  9611 00007D1F 30E4                    		xor	ah, ah
  9612 00007D21 EB11                    		jmp	short RETFF
  9613                                  ; ---------------------------------------------------------------------------
  9614                                  
  9615                                  check_one_volume_id:			; ...
  9616 00007D23 80FC08                  		cmp	ah, 8
  9617 00007D26 74D7                    		jz	short NEXTENTJ
  9618 00007D28 E8D503                  		call	MatchAttributes
  9619 00007D2B 7407                    		jz	short RETFF
  9620 00007D2D F606[7E05]FF            		test	byte [CREATING], 0FFh ; -1
  9621 00007D32 74CB                    		jz	short NEXTENTJ
  9622                                  
  9623                                  RETFF:					; ...
  9624 00007D34 C42E[8A05]              		les	bp, [THISDPB]
  9625 00007D38 268A6600                		mov	ah, [es:bp+0]	; [ES:BP+DPB.DRIVE]
  9626                                  
  9627                                  SETESRET:				; ...
  9628 00007D3C 16                      		push	ss
  9629 00007D3D 07                      		pop	es
  9630 00007D3E C3                      		retn
  9631                                  
  9632                                  ; =============== S U B	R O U T	I N E =======================================
  9633                                  
  9634                                  MetaCompare:	; ...
  9635 00007D3F B90B00                  		mov	cx, 11
  9636                                  
  9637                                  WILDCRD:				; ...
  9638 00007D42 F3A6                    		repe cmpsb
  9639 00007D44 7407                    		jz	short MetaRet
  9640                                  
  9641                                  CHECK_META:				; 3Fh
  9642 00007D46 26807DFF3F              		cmp	byte [es:di-1], '?'
  9643 00007D4B 74F5                    		jz	short WILDCRD
  9644                                  
  9645                                  MetaRet:				; ...
  9646 00007D4D C3                      		retn
  9647                                  
  9648                                  ; =============== S U B	R O U T	I N E =======================================
  9649                                  
  9650                                  NEXTENTRY:		; ...
  9651 00007D4E A1[4803]                		mov	ax, [LASTENT]
  9652 00007D51 3B06[DA05]              		cmp	ax, [ENTLAST]
  9653 00007D55 7424                    		jz	short NONE
  9654 00007D57 40                      		inc	ax
  9655 00007D58 8D5F20                  		lea	bx, [bx+32]
  9656 00007D5B 39D3                    		cmp	bx, dx
  9657 00007D5D 721E                    		jb	short HAVIT
  9658 00007D5F 8A1E[7305]              		mov	bl, [SECCLUSPOS]
  9659 00007D63 FEC3                    		inc	bl
  9660 00007D65 3A1E[7705]              		cmp	bl, [CLUSFAC]
  9661 00007D69 7217                    		jb	short SAMECLUS
  9662 00007D6B 8B1E[DC05]              		mov	bx, [NXTCLUSNUM]
  9663 00007D6F E82C17                  		call	IsEOF
  9664 00007D72 7307                    		jnb	short NONE
  9665 00007D74 83FB02                  		cmp	bx, 2
  9666 00007D77 7202                    		jb	short NONE
  9667 00007D79 EB32                    		jmp	short GETENT
  9668                                  ; ---------------------------------------------------------------------------
  9669                                  
  9670                                  NONE:					; ...
  9671 00007D7B F9                      		stc
  9672 00007D7C C3                      		retn
  9673                                  ; ---------------------------------------------------------------------------
  9674                                  
  9675                                  HAVIT:					; ...
  9676 00007D7D A3[4803]                		mov	[LASTENT], ax
  9677 00007D80 F8                      		clc
  9678                                  
  9679                                  nextentry_retn:				; ...
  9680 00007D81 C3                      		retn
  9681                                  ; ---------------------------------------------------------------------------
  9682                                  
  9683                                  SAMECLUS:				; ...
  9684 00007D82 881E[7305]              		mov	[SECCLUSPOS], bl
  9685 00007D86 A3[4803]                		mov	[LASTENT], ax
  9686 00007D89 1E                      		push	ds
  9687 00007D8A C53E[E205]              		lds	di, [CURBUF]
  9688 00007D8E 8B5508                  		mov	dx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
  9689 00007D91 368916[0706]            		mov	word [ss:HIGH_SECTOR], dx
  9690 00007D96 8B5506                  		mov	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
  9691 00007D99 83C201                  		add	dx, 1
  9692 00007D9C 368316[0706]00          		adc	word [ss:HIGH_SECTOR], 0
  9693 00007DA2 1F                      		pop	ds
  9694 00007DA3 E848F8                  		call	FIRSTCLUSTER
  9695 00007DA6 31DB                    		xor	bx, bx
  9696 00007DA8 EB24                    		jmp	short SETENTRY
  9697                                  
  9698                                  ; =============== S U B	R O U T	I N E =======================================
  9699                                  
  9700                                  GETENTRY:		; ...
  9701 00007DAA A1[4803]                		mov	ax, [LASTENT]
  9702                                  
  9703                                  GETENT:					; ...
  9704 00007DAD A3[4803]                		mov	[LASTENT], ax
  9705 00007DB0 B105                    		mov	cl, 5
  9706 00007DB2 D3C0                    		rol	ax, cl		; * 32
  9707 00007DB4 89C2                    		mov	dx, ax
  9708 00007DB6 83E0E0                  		and	ax, 0FFE0h	; ~(32-1)
  9709 00007DB9 83E21F                  		and	dx, 1Fh		; 32-1
  9710 00007DBC 268B5E02                		mov	bx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  9711 00007DC0 80E3E0                  		and	bl, 0E0h	; 255-31
  9712 00007DC3 F7F3                    		div	bx
  9713 00007DC5 89D3                    		mov	bx, dx
  9714 00007DC7 53                      		push	bx
  9715 00007DC8 E8CAF7                  		call	DIRREAD
  9716 00007DCB 5B                      		pop	bx
  9717 00007DCC 72B3                    		jb	short nextentry_retn
  9718                                  
  9719                                  SETENTRY:				; ...
  9720 00007DCE 8B16[E205]              		mov	dx, word [CURBUF]
  9721 00007DD2 83C214                  		add	dx, 20		; BUFINSIZ
  9722 00007DD5 01D3                    		add	bx, dx
  9723 00007DD7 26035602                		add	dx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  9724 00007DDB C3                      		retn
  9725                                  
  9726                                  ; =============== S U B	R O U T	I N E =======================================
  9727                                  
  9728                                  SETDIRSRCH:		; ...
  9729 00007DDC 09DB                    		or	bx, bx
  9730 00007DDE 743C                    		jz	short SETROOTSRCH
  9731 00007DE0 891E[C205]              		mov	[DIRSTART], bx
  9732 00007DE4 268A4604                		mov	al, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  9733 00007DE8 FEC0                    		inc	al
  9734 00007DEA A2[7705]                		mov	[CLUSFAC], al
  9735 00007DED 56                      		push	si
  9736 00007DEE F606[3A0D]02            		test	byte [FastOpenFlg], 2 ; Lookup_Success
  9737 00007DF3 7507                    		jnz	short UNP_OK
  9738 00007DF5 E8BD16                  		call	UNPACK
  9739 00007DF8 7302                    		jnb	short UNP_OK
  9740 00007DFA 5E                      		pop	si
  9741 00007DFB C3                      		retn
  9742                                  ; ---------------------------------------------------------------------------
  9743                                  
  9744                                  UNP_OK:					; ...
  9745 00007DFC 893E[BC05]              		mov	[CLUSNUM], di
  9746 00007E00 89DA                    		mov	dx, bx
  9747 00007E02 30DB                    		xor	bl, bl
  9748 00007E04 881E[7305]              		mov	[SECCLUSPOS], bl
  9749 00007E08 E8500F                  		call	FIGREC
  9750 00007E0B 5E                      		pop	si
  9751 00007E0C 52                      		push	dx
  9752 00007E0D 8B16[0706]              		mov	dx, [HIGH_SECTOR]
  9753 00007E11 8916[C005]              		mov	word [DIRSEC+2],	dx
  9754 00007E15 5A                      		pop	dx
  9755 00007E16 8916[BE05]              		mov	word [DIRSEC], dx
  9756 00007E1A F8                      		clc
  9757 00007E1B C3                      		retn
  9758                                  
  9759                                  ; =============== S U B	R O U T	I N E =======================================
  9760                                  
  9761                                  SETROOTSRCH:	; ...
  9762 00007E1C 31C0                    		xor	ax, ax
  9763 00007E1E A3[C205]                		mov	[DIRSTART], ax
  9764 00007E21 A2[7305]                		mov	[SECCLUSPOS], al
  9765 00007E24 48                      		dec	ax
  9766 00007E25 A3[BC05]                		mov	[CLUSNUM], ax
  9767 00007E28 268B460B                		mov	ax, [es:bp+0Bh]	; [ES:BP+DPB.FIRST_SECTOR]
  9768 00007E2C 268B5611                		mov	dx, [es:bp+11h]	; [ES:BP+DPB.DIR_SECTOR]
  9769 00007E30 29D0                    		sub	ax, dx
  9770 00007E32 A2[7705]                		mov	[CLUSFAC], al
  9771 00007E35 8916[BE05]              		mov	word [DIRSEC], dx
  9772 00007E39 C706[C005]0000          		mov	word [DIRSEC+2],	0
  9773 00007E3F F8                      		clc
  9774 00007E40 C3                      		retn
  9775                                  
  9776                                  ; =============== S U B	R O U T	I N E =======================================
  9777                                  
  9778                                  GETPATH:
  9779                                  
  9780                                  ; FUNCTION CHUNK AT 7F47 SIZE 000001A5 BYTES
  9781                                  
  9782 00007E41 C706[7E05]00E5          		mov	word [CREATING], 0E500h ; DIRFREE*256+0
  9783                                  
  9784                                  GetPathNoSet:				; ...
  9785 00007E47 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  9786 00007E4C C706[E205]FFFF          		mov	word [CURBUF], -1 ; 0FFFFh
  9787 00007E52 8B3E[B205]              		mov	di, [WFP_START]
  9788 00007E56 817D013A5C              		cmp	word [di+1], 5C3Ah ; '\' << 8 + ':'
  9789 00007E5B 743A                    		jz	short CrackIt
  9790 00007E5D 83C703                  		add	di, 3
  9791 00007E60 89FE                    		mov	si, di
  9792 00007E62 E8B200                  		call	CHKDEV
  9793 00007E65 722E                    		jb	short InternalError
  9794                                  
  9795                                  Build_devJ:				; ...
  9796 00007E67 A0[6D05]                		mov	al, [SATTRIB]
  9797 00007E6A A2[6B05]                		mov	byte [ATTRIB], al
  9798 00007E6D C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
  9799 00007E72 16                      		push	ss
  9800 00007E73 07                      		pop	es
  9801 00007E74 BE[4B05]                		mov	si, NAME1
  9802 00007E77 8B3E[B205]              		mov	di, [WFP_START]
  9803 00007E7B 89FA                    		mov	dx, di
  9804 00007E7D B90800                  		mov	cx, 8
  9805                                  
  9806                                  MoveLoop:				; ...
  9807 00007E80 AC                      		lodsb
  9808 00007E81 AA                      		stosb
  9809 00007E82 3C20                    		cmp	al, 20h	; ' '
  9810 00007E84 7402                    		jz	short NoSave
  9811 00007E86 89FA                    		mov	dx, di
  9812                                  
  9813                                  NoSave:					; ...
  9814 00007E88 E2F6                    		loop	MoveLoop
  9815 00007E8A 89D7                    		mov	di, dx
  9816 00007E8C C60500                  		mov	byte [di], 0
  9817 00007E8F E8DB02                  		call	Build_device_ent
  9818 00007E92 FEC0                    		inc	al
  9819 00007E94 C3                      		retn
  9820                                  ; ---------------------------------------------------------------------------
  9821                                  
  9822                                  InternalError:				; ...
  9823 00007E95 EBFE                    		jmp	short InternalError
  9824                                  ; ---------------------------------------------------------------------------
  9825                                  
  9826                                  CrackIt:				; ...
  9827 00007E97 8B36[B605]              		mov	si, [CURR_DIR_END]
  9828 00007E9B 83FEFF                  		cmp	si, -1		; 0FFFFh
  9829 00007E9E 7503                    		jnz	short LOOK_SING
  9830 00007EA0 8D7503                  		lea	si, [di+3]
  9831                                  
  9832                                  LOOK_SING:				; ...
  9833 00007EA3 C606[6B05]16            		mov	byte [ATTRIB], 16h ; attr_directory+attr_system+attr_hidden
  9834 00007EA8 C43E[A205]              		les	di, [THISCDS]
  9835 00007EAC B8FFFF                  		mov	ax, 0FFFFh	; -1
  9836 00007EAF 268B5D49                		mov	bx, [es:di+49h]	; [ES:DI+curdir.ID]
  9837 00007EB3 8B36[B605]              		mov	si, [CURR_DIR_END]
  9838 00007EB7 39C6                    		cmp	si, ax
  9839 00007EB9 7440                    		jz	short NO_CURR_D
  9840 00007EBB 39C3                    		cmp	bx, ax
  9841 00007EBD 743C                    		jz	short NO_CURR_D
  9842 00007EBF F606[3A0D]01            		test	byte [FastOpenFlg], 1 ; FastOpen_Set
  9843 00007EC4 7442                    		jz	short GOT_SEARCH_CLUSTER
  9844 00007EC6 06                      		push	es
  9845 00007EC7 57                      		push	di
  9846 00007EC8 51                      		push	cx
  9847 00007EC9 FF74FF                  		push	word [si-1]
  9848 00007ECC 56                      		push	si
  9849 00007ECD 53                      		push	bx
  9850 00007ECE C644FF00                		mov	byte [si-1], 0
  9851 00007ED2 8B36[B205]              		mov	si, [WFP_START]
  9852 00007ED6 BB[300D]                		mov	bx, FastOpenTable
  9853 00007ED9 BF[460D]                		mov	di, Dir_Info_Buff
  9854 00007EDC B9[3B0D]                		mov	cx, FastOpen_Ext_Info
  9855 00007EDF B001                    		mov	al, 1		; FONC_Look_up
  9856 00007EE1 1E                      		push	ds
  9857 00007EE2 07                      		pop	es
  9858                                  		;call	dword [bx+2] ; CALL far [BX+fastopen_entry.name_caching]
  9859 00007EE3 FF5F02                  		call	far [bx+2]
  9860 00007EE6 7208                    		jb	short GO_Chk_end1
  9861 00007EE8 803C00                  		cmp	byte [si], 0
  9862 00007EEB 7404                    		jz	short GO_Chk_end
  9863 00007EED F9                      		stc
  9864 00007EEE EB01                    		jmp	short GO_Chk_end
  9865                                  ; ---------------------------------------------------------------------------
  9866                                  
  9867                                  GO_Chk_end1:				; ...
  9868 00007EF0 F8                      		clc
  9869                                  
  9870                                  GO_Chk_end:				; ...
  9871 00007EF1 5B                      		pop	bx
  9872 00007EF2 5E                      		pop	si
  9873 00007EF3 8F44FF                  		pop	word [si-1]
  9874 00007EF6 59                      		pop	cx
  9875 00007EF7 5F                      		pop	di
  9876 00007EF8 07                      		pop	es
  9877 00007EF9 730D                    		jnb	short GOT_SEARCH_CLUSTER
  9878                                  
  9879                                  NO_CURR_D:				; ...
  9880 00007EFB 8B36[B205]              		mov	si, [WFP_START]
  9881 00007EFF 8D7403                  		lea	si, [si+3]
  9882 00007F02 C42E[8A05]              		les	bp, [THISDPB]
  9883 00007F06 EB3F                    		jmp	short ROOTPATH
  9884                                  ; ---------------------------------------------------------------------------
  9885                                  
  9886                                  GOT_SEARCH_CLUSTER:			; ...
  9887 00007F08 C42E[8A05]              		les	bp, [THISDPB]
  9888 00007F0C E8CDFE                  		call	SETDIRSRCH
  9889 00007F0F 7202                    		jb	short SETFERR
  9890 00007F11 EB45                    		jmp	short FINDPATH
  9891                                  ; ---------------------------------------------------------------------------
  9892                                  
  9893                                  SETFERR:				; ...
  9894 00007F13 30C9                    		xor	cl, cl
  9895 00007F15 F9                      		stc
  9896 00007F16 C3                      		retn
  9897                                  
  9898                                  ; =============== S U B	R O U T	I N E =======================================
  9899                                  
  9900                                  CHKDEV:		; ...
  9901 00007F17 89FE                    		mov	si, di
  9902 00007F19 8CD7                    		mov	di, ss
  9903 00007F1B 8EC7                    		mov	es, di
  9904 00007F1D BF[4B05]                		mov	di, NAME1
  9905 00007F20 B90900                  		mov	cx, 9
  9906                                  
  9907                                  TESTLOOP:				; ...
  9908 00007F23 E88F10                  		call	GETLET
  9909 00007F26 3C2E                    		cmp	al, 2Eh	; '.'
  9910 00007F28 740E                    		jz	short TESTDEVICE
  9911 00007F2A E8DE10                  		call	PATHCHRCMP
  9912 00007F2D 7407                    		jz	short NOTDEV
  9913 00007F2F 08C0                    		or	al, al
  9914 00007F31 7405                    		jz	short TESTDEVICE
  9915 00007F33 AA                      		stosb
  9916 00007F34 E2ED                    		loop	TESTLOOP
  9917                                  
  9918                                  NOTDEV:					; ...
  9919 00007F36 F9                      		stc
  9920 00007F37 C3                      		retn
  9921                                  ; ---------------------------------------------------------------------------
  9922                                  
  9923                                  TESTDEVICE:				; ...
  9924 00007F38 83C102                  		add	cx, 2
  9925 00007F3B B020                    		mov	al, 20h	; ' '
  9926 00007F3D F3AA                    		rep stosb
  9927 00007F3F 8CD0                    		mov	ax, ss
  9928 00007F41 8ED8                    		mov	ds, ax
  9929 00007F43 E8C701                  		call	DEVNAME
  9930 00007F46 C3                      		retn
  9931                                  
  9932                                  ; ---------------------------------------------------------------------------
  9933                                  ; START	OF FUNCTION CHUNK FOR GETPATH
  9934                                  
  9935                                  ROOTPATH:				; ...
  9936 00007F47 E8D2FE                  		call	SETROOTSRCH
  9937 00007F4A 803C00                  		cmp	byte [si], 0
  9938 00007F4D 7509                    		jnz	short FINDPATH
  9939 00007F4F A0[6D05]                		mov	al, [SATTRIB]
  9940 00007F52 A2[6B05]                		mov	byte [ATTRIB], al
  9941 00007F55 30E4                    		xor	ah, ah
  9942 00007F57 C3                      		retn
  9943                                  ; ---------------------------------------------------------------------------
  9944                                  
  9945                                  FINDPATH:				; ...
  9946 00007F58 06                      		push	es
  9947 00007F59 56                      		push	si
  9948 00007F5A 89F7                    		mov	di, si
  9949 00007F5C 8B0E[C205]              		mov	cx, [DIRSTART]
  9950 00007F60 833E[B605]FF            		cmp	word [CURR_DIR_END], 0FFFFh ; -1
  9951 00007F65 740E                    		jz	short NOIDS
  9952 00007F67 3B3E[B605]              		cmp	di, [CURR_DIR_END]
  9953 00007F6B 7508                    		jnz	short NOIDS
  9954 00007F6D C43E[A205]              		les	di, [THISCDS]
  9955 00007F71 26894D49                		mov	[es:di+49h], cx	; [ES:DI+curdir.ID]
  9956                                  
  9957                                  NOIDS:					; ...
  9958 00007F75 8CD0                    		mov	ax, ss
  9959 00007F77 8EC0                    		mov	es, ax
  9960 00007F79 BF[4B05]                		mov	di, NAME1
  9961 00007F7C B82020                  		mov	ax, 2020h	; '  '
  9962 00007F7F AA                      		stosb
  9963 00007F80 AB                      		stosw
  9964 00007F81 AB                      		stosw
  9965 00007F82 AB                      		stosw
  9966 00007F83 AB                      		stosw
  9967 00007F84 AB                      		stosw
  9968 00007F85 BF[4B05]                		mov	di, NAME1
  9969 00007F88 30E4                    		xor	ah, ah
  9970                                  
  9971                                  GetNam:					; ...
  9972 00007F8A FEC1                    		inc	cl
  9973 00007F8C AC                      		lodsb
  9974 00007F8D 3C2E                    		cmp	al, 2Eh	; '.'
  9975 00007F8F 7412                    		jz	short _SetExt
  9976 00007F91 08C0                    		or	al, al
  9977 00007F93 7424                    		jz	short _GetDone
  9978 00007F95 3C5C                    		cmp	al, 5Ch	; '\'
  9979 00007F97 7420                    		jz	short _GetDone
  9980 00007F99 3C3F                    		cmp	al, 3Fh	; '?'
  9981 00007F9B 7503                    		jnz	short StoNam
  9982 00007F9D 80CC01                  		or	ah, 1
  9983                                  
  9984                                  StoNam:					; ...
  9985 00007FA0 AA                      		stosb
  9986 00007FA1 EBE7                    		jmp	short GetNam
  9987                                  ; ---------------------------------------------------------------------------
  9988                                  
  9989                                  _SetExt:				; ...
  9990 00007FA3 BF[5305]                		mov	di, NAME1+8
  9991                                  
  9992                                  GetExt:					; ...
  9993 00007FA6 AC                      		lodsb
  9994 00007FA7 08C0                    		or	al, al
  9995 00007FA9 740E                    		jz	short _GetDone
  9996 00007FAB 3C5C                    		cmp	al, 5Ch	; '\'
  9997 00007FAD 740A                    		jz	short _GetDone
  9998 00007FAF 3C3F                    		cmp	al, 3Fh	; '?'
  9999 00007FB1 7503                    		jnz	short StoExt
 10000 00007FB3 80CC01                  		or	ah, 1
 10001                                  
 10002                                  StoExt:					; ...
 10003 00007FB6 AA                      		stosb
 10004 00007FB7 EBED                    		jmp	short GetExt
 10005                                  ; ---------------------------------------------------------------------------
 10006                                  
 10007                                  _GetDone:				; ...
 10008 00007FB9 4E                      		dec	si
 10009 00007FBA 88E1                    		mov	cl, ah
 10010 00007FBC 80C980                  		or	cl, 80h
 10011 00007FBF 5F                      		pop	di
 10012 00007FC0 07                      		pop	es
 10013 00007FC1 39FE                    		cmp	si, di
 10014 00007FC3 7503                    		jnz	short check_device
 10015 00007FC5 E9EC00                  		jmp	_BADPATH
 10016                                  ; ---------------------------------------------------------------------------
 10017                                  
 10018                                  check_device:				; ...
 10019 00007FC8 56                      		push	si
 10020 00007FC9 8A04                    		mov	al, [si]
 10021 00007FCB 08C0                    		or	al, al
 10022 00007FCD 7508                    		jnz	short NOT_LAST
 10023 00007FCF 8A3E[6D05]              		mov	bh, [SATTRIB]
 10024 00007FD3 883E[6B05]              		mov	byte [ATTRIB], bh
 10025                                  
 10026                                  NOT_LAST:				; ...
 10027 00007FD7 06                      		push	es
 10028 00007FD8 16                      		push	ss
 10029 00007FD9 07                      		pop	es
 10030 00007FDA E83001                  		call	DEVNAME
 10031 00007FDD 07                      		pop	es
 10032 00007FDE 720B                    		jb	short FindFile
 10033 00007FE0 08C0                    		or	al, al
 10034 00007FE2 7403                    		jz	short GO_BDEV
 10035 00007FE4 E9D100                  		jmp	FILEINPATH
 10036                                  ; ---------------------------------------------------------------------------
 10037                                  
 10038                                  GO_BDEV:				; ...
 10039 00007FE7 5E                      		pop	si
 10040 00007FE8 E97CFE                  		jmp	Build_devJ
 10041                                  ; ---------------------------------------------------------------------------
 10042                                  
 10043                                  FindFile:				; ...
 10044 00007FEB 803E[4B05]E5            		cmp	byte [NAME1], 0E5h
 10045 00007FF0 7505                    		jnz	short NOE5
 10046 00007FF2 C606[4B05]05            		mov	byte [NAME1], 5
 10047                                  
 10048                                  NOE5:					; ...
 10049 00007FF7 57                      		push	di
 10050 00007FF8 06                      		push	es
 10051 00007FF9 51                      		push	cx
 10052 00007FFA E8A102                  		call	LookupPath
 10053 00007FFD 7303                    		jnb	short DIR_FOUND
 10054 00007FFF E88EFC                  		call	FINDENTRY
 10055                                  
 10056                                  DIR_FOUND:				; ...
 10057 00008002 59                      		pop	cx
 10058 00008003 07                      		pop	es
 10059 00008004 5F                      		pop	di
 10060 00008005 7303                    		jnb	short LOAD_BUF
 10061 00008007 E9D300                  		jmp	BADPATHPOP
 10062                                  ; ---------------------------------------------------------------------------
 10063                                  
 10064                                  LOAD_BUF:				; ...
 10065 0000800A C53E[E205]              		lds	di, [CURBUF]
 10066 0000800E F6470B10                		test	byte [bx+0Bh], 10h ; [BX+dir_entry.dir_attr],
 10067                                  					; attr_directory
 10068 00008012 7503                    		jnz	short GO_NEXT
 10069 00008014 E9A100                  		jmp	FILEINPATH
 10070                                  ; ---------------------------------------------------------------------------
 10071                                  
 10072                                  GO_NEXT:				; ...
 10073 00008017 36803E[4C03]00          		cmp	byte [ss:NoSetDir], 0
 10074 0000801D 7426                    		jz	short SetDir
 10075 0000801F 89FA                    		mov	dx, di
 10076 00008021 8CD9                    		mov	cx, ds
 10077 00008023 16                      		push	ss
 10078 00008024 1F                      		pop	ds
 10079 00008025 5F                      		pop	di
 10080 00008026 F606[3A0D]01            		test	byte [FastOpenFlg], 1 ; FastOpen_Set
 10081 0000802B 740B                    		jz	short _nofast
 10082 0000802D F606[3A0D]02            		test	byte [FastOpenFlg], 2 ; Lookup_Success
 10083 00008032 7404                    		jz	short _nofast
 10084 00008034 8B3E[660D]              		mov	di, [Next_Element_Start]
 10085                                  
 10086                                  _nofast:				; ...
 10087 00008038 803D00                  		cmp	byte [di], 0
 10088 0000803B 7503                    		jnz	short NEXT_ONE
 10089 0000803D E99C00                  		jmp	_SETRET
 10090                                  ; ---------------------------------------------------------------------------
 10091                                  
 10092                                  NEXT_ONE:				; ...
 10093 00008040 57                      		push	di
 10094 00008041 89D7                    		mov	di, dx
 10095 00008043 8ED9                    		mov	ds, cx
 10096                                  
 10097                                  SetDir:					; ...
 10098 00008045 8B14                    		mov	dx, [si]
 10099 00008047 1E                      		push	ds
 10100 00008048 16                      		push	ss
 10101 00008049 1F                      		pop	ds
 10102 0000804A F606[3A0D]02            		test	byte [FastOpenFlg], 2 ; Lookup_Success
 10103 0000804F 7410                    		jz	short DO_NORMAL
 10104 00008051 89D3                    		mov	bx, dx
 10105 00008053 8B3E[BC05]              		mov	di, [CLUSNUM]
 10106 00008057 50                      		push	ax
 10107 00008058 E881FD                  		call	SETDIRSRCH
 10108 0000805B 58                      		pop	ax
 10109 0000805C 83C402                  		add	sp, 2
 10110 0000805F EB3D                    		jmp	short FAST_OPEN_SKIP
 10111                                  ; ---------------------------------------------------------------------------
 10112                                  
 10113                                  DO_NORMAL:				; ...
 10114 00008061 1F                      		pop	ds
 10115 00008062 29FB                    		sub	bx, di
 10116 00008064 29FE                    		sub	si, di
 10117 00008066 53                      		push	bx
 10118 00008067 50                      		push	ax
 10119 00008068 56                      		push	si
 10120 00008069 51                      		push	cx
 10121 0000806A FF7506                  		push	word [di+6]	; [DI+BUFFINFO.buf_sector]
 10122 0000806D FF7508                  		push	word [di+8]	; [DI+BUFFINFO.buf_sector+2]
 10123 00008070 89D3                    		mov	bx, dx
 10124 00008072 16                      		push	ss
 10125 00008073 1F                      		pop	ds
 10126 00008074 E865FD                  		call	SETDIRSRCH
 10127 00008077 8F06[0706]              		pop	word [HIGH_SECTOR]
 10128 0000807B 5A                      		pop	dx
 10129 0000807C 720A                    		jb	short SKIP_GETB
 10130 0000807E C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
 10131 00008083 30C0                    		xor	al, al
 10132 00008085 E85318                  		call	GETBUFFR
 10133                                  
 10134                                  SKIP_GETB:				; ...
 10135 00008088 59                      		pop	cx
 10136 00008089 5E                      		pop	si
 10137 0000808A 58                      		pop	ax
 10138 0000808B 5B                      		pop	bx
 10139 0000808C 7305                    		jnb	short SET_THE_BUF
 10140 0000808E 5F                      		pop	di
 10141 0000808F 89FE                    		mov	si, di
 10142 00008091 EB21                    		jmp	short _BADPATH
 10143                                  ; ---------------------------------------------------------------------------
 10144                                  
 10145                                  SET_THE_BUF:				; ...
 10146 00008093 E864F5                  		call	SET_BUF_AS_DIR
 10147 00008096 8B3E[E205]              		mov	di, word [CURBUF]
 10148 0000809A 01FE                    		add	si, di
 10149 0000809C 01FB                    		add	bx, di
 10150                                  
 10151                                  FAST_OPEN_SKIP:				; ...
 10152 0000809E 5F                      		pop	di
 10153 0000809F E8A002                  		call	InsertPath
 10154 000080A2 8A05                    		mov	al, [di]
 10155 000080A4 08C0                    		or	al, al
 10156 000080A6 7434                    		jz	short _SETRET
 10157 000080A8 47                      		inc	di
 10158 000080A9 89FE                    		mov	si, di
 10159 000080AB E85D0F                  		call	PATHCHRCMP
 10160 000080AE 7503                    		jnz	short find_bad_name
 10161 000080B0 E9A5FE                  		jmp	FINDPATH
 10162                                  ; ---------------------------------------------------------------------------
 10163                                  
 10164                                  find_bad_name:				; ...
 10165 000080B3 4E                      		dec	si
 10166                                  
 10167                                  _BADPATH:				; ...
 10168 000080B4 30C9                    		xor	cl, cl
 10169 000080B6 EB2C                    		jmp	short BADPRET
 10170                                  ; ---------------------------------------------------------------------------
 10171                                  
 10172                                  FILEINPATH:				; ...
 10173 000080B8 5F                      		pop	di
 10174 000080B9 16                      		push	ss
 10175 000080BA 1F                      		pop	ds
 10176 000080BB F606[3A0D]01            		test	byte [FastOpenFlg], 1 ; FastOpen_Set
 10177 000080C0 740B                    		jz	short NO_FAST
 10178 000080C2 F606[3A0D]02            		test	byte [FastOpenFlg], 2 ; Lookup_Success
 10179 000080C7 7404                    		jz	short NO_FAST
 10180 000080C9 8B3E[660D]              		mov	di, [Next_Element_Start]
 10181                                  
 10182                                  NO_FAST:				; ...
 10183 000080CD 8A05                    		mov	al, [di]
 10184 000080CF 08C0                    		or	al, al
 10185 000080D1 7404                    		jz	short INCRET
 10186 000080D3 89FE                    		mov	si, di
 10187 000080D5 EB0D                    		jmp	short BADPRET
 10188                                  ; ---------------------------------------------------------------------------
 10189                                  
 10190                                  INCRET:					; ...
 10191 000080D7 E86802                  		call	InsertPath
 10192 000080DA FEC0                    		inc	al
 10193                                  
 10194                                  _SETRET:				; ...
 10195 000080DC C3                      		retn
 10196                                  ; ---------------------------------------------------------------------------
 10197                                  
 10198                                  BADPATHPOP:				; ...
 10199 000080DD 5E                      		pop	si
 10200 000080DE 8A04                    		mov	al, [si]
 10201 000080E0 89FE                    		mov	si, di
 10202 000080E2 08C0                    		or	al, al
 10203                                  
 10204                                  BADPRET:				; ...
 10205 000080E4 A0[6D05]                		mov	al, [SATTRIB]
 10206 000080E7 A2[6B05]                		mov	byte [ATTRIB], al
 10207 000080EA F9                      		stc
 10208 000080EB C3                      		retn
 10209                                  ; END OF FUNCTION CHUNK	FOR GETPATH
 10210                                  
 10211                                  ; =============== S U B	R O U T	I N E =======================================
 10212                                  
 10213                                  STARTSRCH:		; ...
 10214 000080EC C42E[8A05]              		les	bp, [THISDPB]
 10215 000080F0 31C0                    		xor	ax, ax
 10216 000080F2 A3[4803]                		mov	[LASTENT], ax
 10217 000080F5 A2[7B05]                		mov	[VOLID], al
 10218 000080F8 48                      		dec	ax
 10219 000080F9 A3[D805]                		mov	[ENTFREE], ax
 10220 000080FC A3[DA05]                		mov	[ENTLAST], ax
 10221 000080FF C3                      		retn
 10222                                  
 10223                                  ; =============== S U B	R O U T	I N E =======================================
 10224                                  
 10225                                  MatchAttributes:
 10226 00008100 50                      		push	ax
 10227 00008101 36A0[6B05]              		mov	al, [ss:ATTRIB]
 10228 00008105 F6D0                    		not	al
 10229 00008107 20E8                    		and	al, ch
 10230 00008109 2416                    		and	al, 16h		; attr_all
 10231 0000810B 58                      		pop	ax
 10232 0000810C C3                      		retn
 10233                                  
 10234                                  ; =============== S U B	R O U T	I N E =======================================
 10235                                  
 10236                                  DEVNAME:
 10237 0000810D 56                      		push	si
 10238 0000810E 57                      		push	di
 10239 0000810F 51                      		push	cx
 10240 00008110 50                      		push	ax
 10241 00008111 FF36[4B05]              		push	word [NAME1]
 10242 00008115 803E[4B05]05            		cmp	byte [NAME1], 5
 10243 0000811A 7505                    		jnz	short NOKTR
 10244 0000811C C606[4B05]E5            		mov	byte [NAME1], 0E5h
 10245                                  
 10246                                  NOKTR:					; ...
 10247 00008121 F606[6B05]08            		test	byte [ATTRIB], 8 ; attr_volume_id
 10248 00008126 7522                    		jnz	short RET31
 10249 00008128 BE[4800]                		mov	si, NULDEV
 10250                                  
 10251                                  LOOKIO:					; ...
 10252 0000812B F744040080              		test	word [si+4], 8000h ; [SI+SYSDEV.ATT],DEVTYP
 10253 00008130 7411                    		jz	short SKIPDEV
 10254 00008132 89F0                    		mov	ax, si
 10255 00008134 83C60A                  		add	si, 10		; SYSDEV.NAME
 10256 00008137 BF[4B05]                		mov	di, NAME1
 10257 0000813A B90400                  		mov	cx, 4
 10258 0000813D F3A7                    		repe cmpsw
 10259 0000813F 89C6                    		mov	si, ax
 10260 00008141 7415                    		jz	short IOCHK
 10261                                  
 10262                                  SKIPDEV:				; ...
 10263 00008143 C534                    		lds	si, [si]
 10264 00008145 83FEFF                  		cmp	si, 0FFFFh	; -1
 10265 00008148 75E1                    		jnz	short LOOKIO
 10266                                  
 10267                                  RET31:					; ...
 10268 0000814A F9                      		stc
 10269                                  
 10270                                  RETNV:					; ...
 10271 0000814B 8CD1                    		mov	cx, ss
 10272 0000814D 8ED9                    		mov	ds, cx
 10273 0000814F 8F06[4B05]              		pop	word [NAME1]
 10274 00008153 58                      		pop	ax
 10275 00008154 59                      		pop	cx
 10276 00008155 5F                      		pop	di
 10277 00008156 5E                      		pop	si
 10278 00008157 C3                      		retn
 10279                                  ; ---------------------------------------------------------------------------
 10280                                  
 10281                                  IOCHK:					; ...
 10282 00008158 368C1E[9C05]            		mov	word [ss:DEVPT+2], ds
 10283 0000815D 8A7C04                  		mov	bh, [si+4]	; [SI+SYSDEV.ATT]
 10284 00008160 80CFC0                  		or	bh, 0C0h
 10285 00008163 80E7DF                  		and	bh, 0DFh	; ~20h
 10286 00008166 368936[9A05]            		mov	word [ss:DEVPT], si
 10287 0000816B EBDE                    		jmp	short RETNV
 10288                                  
 10289                                  ; =============== S U B	R O U T	I N E =======================================
 10290                                  
 10291                                  Build_device_ent:	; ...
 10292 0000816D B82020                  		mov	ax, 2020h	; '  '
 10293 00008170 BF[5305]                		mov	di, NAME1+8	; DEVFCB+8
 10294 00008173 AB                      		stosw
 10295 00008174 AA                      		stosb
 10296 00008175 B040                    		mov	al, 40h		; attr_device
 10297 00008177 AA                      		stosb
 10298 00008178 31C0                    		xor	ax, ax
 10299 0000817A B90A00                  		mov	cx, 10
 10300 0000817D F3AB                    		rep stosw
 10301 0000817F E83FC7                  		call	DATE16
 10302 00008182 BF[6105]                		mov	di, NAME2+0Ah	; DEVFCB+dir_entry.dir_time
 10303 00008185 92                      		xchg	ax, dx
 10304 00008186 AB                      		stosw
 10305 00008187 92                      		xchg	ax, dx
 10306 00008188 AB                      		stosw
 10307 00008189 89FE                    		mov	si, di
 10308 0000818B A1[9A05]                		mov	ax, word [DEVPT]
 10309 0000818E AB                      		stosw
 10310 0000818F A1[9C05]                		mov	ax, word [DEVPT+2]
 10311 00008192 AB                      		stosw
 10312 00008193 88FC                    		mov	ah, bh
 10313 00008195 BB[4B05]                		mov	bx, NAME1 ; DEVFCB
 10314 00008198 30C0                    		xor	al, al
 10315 0000819A C3                      		retn
 10316                                  
 10317                                  ; =============== S U B	R O U T	I N E =======================================
 10318                                  
 10319                                  ; Attributes: bp-based frame
 10320                                  
 10321                                  ValidateCDS:	; ...
 10322                                  
 10323                                  SaveCDS		equ -6
 10324                                  Temp		equ -2
 10325                                  
 10326 0000819B 55                      		push	bp
 10327 0000819C 89E5                    		mov	bp, sp
 10328 0000819E 83EC06                  		sub	sp, 6
 10329 000081A1 897EFE                  		mov	[bp+Temp], di	; [bp-2]
 10330 000081A4 36C536[A205]            		lds	si, [ss:THISCDS]
 10331 000081A9 8976FA                  		mov	word [bp+SaveCDS], si ; [bp-6]
 10332 000081AC 8C5EFC                  		mov	word [bp+SaveCDS+2], ds ; [bp-4]
 10333 000081AF E874CF                  		call	ECritDisk
 10334 000081B2 F744430080              		test	word [si+67], 8000h	; [SI+curdir.flags],
 10335                                  					; curdir_isnet
 10336 000081B7 7403                    		jz	short _DoSplice
 10337 000081B9 E99300                  		jmp	FatFail
 10338                                  ; ---------------------------------------------------------------------------
 10339                                  
 10340                                  _DoSplice:				; ...
 10341 000081BC 30D2                    		xor	dl, dl
 10342 000081BE 368616[4C03]            		xchg	dl, [ss:NoSetDir]
 10343 000081C3 16                      		push	ss
 10344 000081C4 07                      		pop	es
 10345 000081C5 E82CCE                  		call	FStrCpy
 10346 000081C8 8B76FE                  		mov	si, [bp+Temp]	; [bp-2]
 10347 000081CB 16                      		push	ss
 10348 000081CC 1F                      		pop	ds
 10349 000081CD E8EF2B                  		call	Splice
 10350 000081D0 16                      		push	ss
 10351 000081D1 1F                      		pop	ds
 10352 000081D2 8816[4C03]              		mov	[NoSetDir], dl
 10353 000081D6 C43E[A205]              		les	di, [THISCDS]
 10354 000081DA 55                      		push	bp
 10355 000081DB E88B14                  		call	FATREAD_CDS
 10356 000081DE 5D                      		pop	bp
 10357 000081DF 726E                    		jb	short FatFail
 10358 000081E1 C536[A205]              		lds	si, [THISCDS]
 10359 000081E5 837C49FF                		cmp	word [si+49h], 0FFFFh ; [SI+curdir.ID],-1
 10360 000081E9 7556                    		jnz	short RestoreCDS
 10361 000081EB 16                      		push	ss
 10362 000081EC 07                      		pop	es
 10363 000081ED 36FF36[B205]            		push	word [ss:WFP_START]
 10364 000081F2 3B76FA                  		cmp	si, word [bp+SaveCDS] ; [bp-6] ; SaveCDSL
 10365 000081F5 750B                    		jnz	short DoChdir
 10366 000081F7 8B7EFE                  		mov	di, [bp+Temp]	; [bp-2]
 10367 000081FA 36893E[B205]            		mov	[ss:WFP_START],	di
 10368 000081FF E8F2CD                  		call	FStrCpy
 10369                                  
 10370                                  DoChdir:				; ...
 10371 00008202 16                      		push	ss
 10372 00008203 1F                      		pop	ds
 10373 00008204 FF36[6D05]              		push	word [SATTRIB]
 10374 00008208 55                      		push	bp
 10375 00008209 E8BAEE                  		call	DOS_CHDIR
 10376 0000820C 5D                      		pop	bp
 10377 0000820D 5B                      		pop	bx
 10378 0000820E 8F06[B205]              		pop	word [WFP_START]
 10379 00008212 881E[6D05]              		mov	[SATTRIB], bl
 10380 00008216 C576FA                  		lds	si, [bp+SaveCDS] ; [bp-6]
 10381 00008219 730F                    		jnb	short SetCluster
 10382 0000821B 368936[A205]            		mov	word [ss:THISCDS], si
 10383 00008220 368C1E[A405]            		mov	word [ss:THISCDS+2], ds
 10384 00008225 31C9                    		xor	cx, cx
 10385 00008227 884C03                  		mov	[si+3],	cl
 10386                                  
 10387                                  SetCluster:				; ...
 10388 0000822A C74449FFFF              		mov	word [si+49h], 0FFFFh ; [SI+curdir.ID],-1
 10389 0000822F 36C536[A205]            		lds	si, [ss:THISCDS]
 10390 00008234 F744430020              		test	word [si+43h], 2000h ; SI+curdir.flags],
 10391                                  					; curdir_splice
 10392 00008239 7403                    		jz	short _setdirclus
 10393 0000823B B9FFFF                  		mov	cx, -1		; 0FFFFh ; 65535
 10394                                  
 10395                                  _setdirclus:				; ...
 10396 0000823E 894C49                  		mov	[si+49h], cx	; [SI+curdir.ID]
 10397                                  
 10398                                  RestoreCDS:				; ...
 10399 00008241 C47EFA                  		les	di, [bp+SaveCDS] ; [bp-6]
 10400 00008244 36893E[A205]            		mov	word [ss:THISCDS], di
 10401 00008249 368C06[A405]            		mov	word [ss:THISCDS+2], es
 10402 0000824E F8                      		clc
 10403                                  
 10404                                  FatFail:				; ...
 10405 0000824F E8F4CE                  		call	LCritDisk
 10406 00008252 C47EFA                  		les	di, [bp+SaveCDS] ; [bp-6]
 10407 00008255 89EC                    		mov	sp, bp
 10408 00008257 5D                      		pop	bp
 10409 00008258 C3                      		retn
 10410                                  
 10411                                  ; =============== S U B	R O U T	I N E =======================================
 10412                                  
 10413                                  CheckThisDevice:
 10414 00008259 57                      		push	di
 10415 0000825A 56                      		push	si
 10416 0000825B 89F7                    		mov	di, si
 10417 0000825D 8A04                    		mov	al, [si]
 10418 0000825F E8A90D                  		call	PATHCHRCMP
 10419 00008262 7517                    		jnz	short ParseDev
 10420 00008264 46                      		inc	si
 10421 00008265 AD                      		lodsw
 10422 00008266 0D2020                  		or	ax, 2020h
 10423 00008269 3D6465                  		cmp	ax, 6564h	; 'dev'
 10424 0000826C 752D                    		jnz	short NotDevice
 10425 0000826E AC                      		lodsb
 10426 0000826F 0C20                    		or	al, 20h
 10427 00008271 3C76                    		cmp	al, 'v'
 10428 00008273 7526                    		jnz	short NotDevice
 10429 00008275 AC                      		lodsb
 10430 00008276 E8920D                  		call	PATHCHRCMP
 10431 00008279 7520                    		jnz	short NotDevice
 10432                                  
 10433                                  ParseDev:				; ...
 10434 0000827B 1E                      		push	ds
 10435 0000827C 56                      		push	si
 10436 0000827D E8C90C                  		call	NameTrans
 10437 00008280 803C00                  		cmp	byte [si], 0
 10438 00008283 F9                      		stc
 10439 00008284 750B                    		jnz	short SkipSearch
 10440 00008286 16                      		push	ss
 10441 00008287 1F                      		pop	ds
 10442 00008288 A0[6D05]                		mov	al, [SATTRIB]
 10443 0000828B A2[6B05]                		mov	byte [ATTRIB], al
 10444 0000828E E87CFE                  		call	DEVNAME
 10445                                  
 10446                                  SkipSearch:				; ...
 10447 00008291 5E                      		pop	si
 10448 00008292 1F                      		pop	ds
 10449                                  
 10450                                  CheckReturn:				; ...
 10451 00008293 5F                      		pop	di
 10452 00008294 7302                    		jnb	short Check_Done
 10453 00008296 89FE                    		mov	si, di
 10454                                  
 10455                                  Check_Done:				; ...
 10456 00008298 5F                      		pop	di
 10457 00008299 F5                      		cmc
 10458 0000829A C3                      		retn
 10459                                  ; ---------------------------------------------------------------------------
 10460                                  
 10461                                  NotDevice:				; ...
 10462 0000829B F9                      		stc
 10463 0000829C EBF5                    		jmp	short CheckReturn
 10464                                  
 10465                                  ; =============== S U B	R O U T	I N E =======================================
 10466                                  
 10467                                  LookupPath:		; ...
 10468 0000829E 36F606[3A0D]01          		test	byte [ss:FastOpenFlg], 1 ; FastOpen_Set
 10469 000082A4 7503                    		jnz	short FASTINST
 10470                                  
 10471                                  NOLOOK:					; ...
 10472 000082A6 E99700                  		jmp	NOLOOKUP
 10473                                  ; ---------------------------------------------------------------------------
 10474                                  
 10475                                  FASTINST:				; ...
 10476 000082A9 36F606[3A0D]08          		test	byte [ss:FastOpenFlg], 8 ; No_Lookup
 10477 000082AF 75F5                    		jnz	short NOLOOK
 10478 000082B1 BB[300D]                		mov	bx, FastOpenTable
 10479 000082B4 368B36[B205]            		mov	si, [ss:WFP_START]
 10480 000082B9 BF[460D]                		mov	di, Dir_Info_Buff
 10481 000082BC B9[3B0D]                		mov	cx, FastOpen_Ext_Info
 10482 000082BF B001                    		mov	al, 1
 10483 000082C1 1E                      		push	ds
 10484 000082C2 07                      		pop	es
 10485                                  		;call	dword [bx+2] ; CALL far [BX+fastopen_entry.name_caching]
 10486 000082C3 FF5F02                  		call	far [bx+2]
 10487 000082C6 7267                    		jb	short NOTFOUND
 10488 000082C8 8D5CFE                  		lea	bx, [si-2]
 10489 000082CB 363B1E[B205]            		cmp	bx, [ss:WFP_START]
 10490 000082D0 745D                    		jz	short NOTFOUND
 10491 000082D2 803C00                  		cmp	byte [si], 0
 10492 000082D5 751A                    		jnz	short parfnd
 10493 000082D7 51                      		push	cx
 10494 000082D8 368A0E[6B05]            		mov	cl, [ss:ATTRIB]
 10495 000082DD 368A2E[6D05]            		mov	ch, [ss:SATTRIB]
 10496 000082E2 36882E[6B05]            		mov	[ss:ATTRIB], ch
 10497 000082E7 268A6D0B                		mov	ch, [es:di+0Bh]	; [ES:DI+dir_entry.dir_attr]
 10498 000082EB E812FE                  		call	MatchAttributes
 10499 000082EE 59                      		pop	cx
 10500 000082EF 754F                    		jnz	short NOLOOKUP
 10501                                  
 10502                                  parfnd:					; ...
 10503 000082F1 368936[660D]            		mov	[ss:Next_Element_Start], si
 10504 000082F6 89CB                    		mov	bx, cx
 10505 000082F8 8B4707                  		mov	ax, [bx+7]	; [BX+FEI.lastent]
 10506 000082FB 36A3[4803]              		mov	[ss:LASTENT], ax
 10507 000082FF 8B4709                  		mov	ax, [bx+9]	; [BX+FEI.dirstart]
 10508 00008302 36A3[C205]              		mov	[ss:DIRSTART], ax
 10509 00008306 8B4705                  		mov	ax, [bx+5]	; [BX+FEI.clusnum]
 10510 00008309 36A3[BC05]              		mov	[ss:CLUSNUM], ax
 10511 0000830D 06                      		push	es
 10512 0000830E 36C41E[8A05]            		les	bx, [ss:THISDPB]
 10513 00008313 268A27                  		mov	ah, [es:bx]	; [ES:BX+DPB.DRIVE]
 10514 00008316 07                      		pop	es
 10515 00008317 36C706[E205]0000        		mov	word [ss:CURBUF], 0
 10516 0000831E 368C06[E405]            		mov	word [ss:CURBUF+2],	es
 10517 00008323 89FB                    		mov	bx, di
 10518 00008325 8D751A                  		lea	si, [di+1Ah]	; [DI+dir_entry.dir_first]
 10519 00008328 36800E[3A0D]12          		or	byte [ss:FastOpenFlg], 12h ; Lookup_Success+Set_For_Search
 10520 0000832E C3                      		retn
 10521                                  ; ---------------------------------------------------------------------------
 10522                                  
 10523                                  NOTFOUND:				; ...
 10524 0000832F 83F8FF                  		cmp	ax, 0FFFFh	; -1
 10525 00008332 7506                    		jnz	short Partial_Success
 10526 00008334 36C606[3A0D]00          		mov	byte [ss:FastOpenFlg], 0
 10527                                  
 10528                                  Partial_Success:			; ...
 10529 0000833A 368026[3A0D]FB          		and	byte [ss:FastOpenFlg], 0FBh ; Special_Fill_Reset
 10530                                  
 10531                                  NOLOOKUP:				; ...
 10532 00008340 F9                      		stc
 10533 00008341 C3                      		retn
 10534                                  
 10535                                  ; =============== S U B	R O U T	I N E =======================================
 10536                                  
 10537                                  InsertPath:		; ...
 10538 00008342 9C                      		pushf
 10539 00008343 36F606[3A0D]01          		test	byte [ss:FastOpenFlg], 1 ; FastOpen_Set
 10540 00008349 7479                    		jz	short GET_NEXT_ELEMENT
 10541 0000834B 36F606[3A0D]02          		test	byte [ss:FastOpenFlg], 2 ; Lookup_Success
 10542 00008351 740D                    		jz	short INSERT_DIR_INFO
 10543 00008353 368026[3A0D]FD          		and	byte [ss:FastOpenFlg], 0FDh ; Lookup_Reset
 10544 00008359 368B3E[660D]            		mov	di, [ss:Next_Element_Start]
 10545 0000835E EB5E                    		jmp	short GET_NEXT2
 10546                                  ; ---------------------------------------------------------------------------
 10547                                  
 10548                                  INSERT_DIR_INFO:			; ...
 10549 00008360 1E                      		push	ds
 10550 00008361 06                      		push	es
 10551 00008362 53                      		push	bx
 10552 00008363 56                      		push	si
 10553 00008364 57                      		push	di
 10554 00008365 51                      		push	cx
 10555 00008366 50                      		push	ax
 10556 00008367 36C53E[E205]            		lds	di, [ss:CURBUF]
 10557 0000836C BE[3B0D]                		mov	si, FastOpen_Ext_Info
 10558 0000836F 8B4506                  		mov	ax, [di+6]	; [DI+BUFFINFO.buf_sector]
 10559 00008372 36894401                		mov	[ss:si+1], ax	; [SS:SI+FEI.dirsec]
 10560 00008376 8B4508                  		mov	ax, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 10561 00008379 16                      		push	ss
 10562 0000837A 1F                      		pop	ds
 10563 0000837B 894403                  		mov	[si+3],	ax	; [SI+FEI.dirsec+2]
 10564 0000837E A1[BC05]                		mov	ax, [CLUSNUM]
 10565 00008381 894405                  		mov	[si+5],	ax	; [SI+FEI.clusnum]
 10566 00008384 A1[4803]                		mov	ax, [LASTENT]
 10567 00008387 894407                  		mov	[si+7],	ax	; [SI+FEI.lastent]
 10568 0000838A A1[C205]                		mov	ax, [DIRSTART]
 10569 0000838D 894409                  		mov	[si+9],	ax	; [SI+FEI.dirstart]
 10570 00008390 89D8                    		mov	ax, bx
 10571 00008392 83C714                  		add	di, 20		; BUFINSIZ
 10572 00008395 29F8                    		sub	ax, di
 10573 00008397 B120                    		mov	cl, 32		; dir_entry.size
 10574 00008399 F6F1                    		div	cl
 10575 0000839B 8804                    		mov	[si], al	; [SI+FEI.dirpos]
 10576 0000839D 1E                      		push	ds
 10577 0000839E 07                      		pop	es
 10578 0000839F 8E1E[E405]              		mov	ds, word [CURBUF+2]
 10579 000083A3 89DF                    		mov	di, bx
 10580 000083A5 837D1A00                		cmp	word [di+26], 0 ; [DI+dir_entry.dir_first]
 10581 000083A9 740C                    		jz	short SKIP_INSERT
 10582 000083AB 56                      		push	si
 10583 000083AC 5B                      		pop	bx
 10584 000083AD B002                    		mov	al, 2		; FONC_insert
 10585 000083AF BE[300D]                		mov	si, FastOpenTable
 10586                                  		;call	dword [es:si+2] ; CALL far [SI+fastopen_entry.name_caching]
 10587 000083B2 26FF5C02                		call	far [es:si+2]
 10588 000083B6 F8                      		clc
 10589                                  
 10590                                  SKIP_INSERT:				; ...
 10591 000083B7 58                      		pop	ax
 10592 000083B8 59                      		pop	cx
 10593 000083B9 5F                      		pop	di
 10594 000083BA 5E                      		pop	si
 10595 000083BB 5B                      		pop	bx
 10596 000083BC 07                      		pop	es
 10597 000083BD 1F                      		pop	ds
 10598                                  
 10599                                  GET_NEXT2:				; ...
 10600 000083BE 36800E[3A0D]08          		or	byte [ss:FastOpenFlg], 8 ; No_Lookup
 10601                                  
 10602                                  GET_NEXT_ELEMENT:			; ...
 10603 000083C4 9D                      		popf
 10604 000083C5 C3                      		retn
 10605                                  
 10606                                  ; ---------------------------------------------------------------------------
 10607 000083C6 160E160D0F0E            LenTab		db 22, 14, 22, 13, 15, 14 ; ...
 10608                                  					; DRDWRHL, DRDNDHL, DRDWRHL,
 10609                                  					; DSTATHL, DFLSHL, DRDNDHL
 10610 000083CC 8604                    CmdTab		db 86h,	4		; ...
 10611                                  					; DEVRD	  ; 0 input
 10612 000083CE 8605                    		db 86h,	5		; DEVRDND ; 1 input status
 10613 000083D0 8708                    		db 87h,	8		; DEVWRT  ; 2 output
 10614 000083D2 870A                    		db 87h,	0Ah		; DEVOST  ; 3 output status
 10615 000083D4 8607                    		db 86h,	7		; DEVIFL  ; 4 input flush
 10616 000083D6 8605                    		db 86h,	5		; 5 input status with system WAIT
 10617                                  
 10618                                  ; =============== S U B	R O U T	I N E =======================================
 10619                                  
 10620                                  IOFUNC:		; ...
 10621 000083D8 368C16[8C03]            		mov	word [ss:IOCTL_IOXAD_2], ss	; [SS:IOXAD+2]
 10622 000083DD 36C706[8A03][BC03]      		mov	word [ss:IOCTL_REQ_MINORFUNCTION], DEVIOBUF ;
 10623                                  					; [SS:IOXAD],DEVIOBUF
 10624 000083E4 36C706[8E03]0100        		mov	word [ss:IOCTL_IOSCNT], 1 ;	[SS:IOSCNT]
 10625 000083EB 36A3[BC03]              		mov	[ss:DEVIOBUF], ax
 10626 000083EF F6440680                		test	byte [si+6], 80h ; [SI+SF_ENTRY.sf_flags+1],
 10627                                  					; (sf_isnet>>8)
 10628 000083F3 7403                    		jz	short IOTO22
 10629 000083F5 E9A600                  		jmp	IOTOFILE
 10630                                  ; ---------------------------------------------------------------------------
 10631                                  
 10632                                  IOTO22:					; ...
 10633 000083F8 F6440580                		test	byte [si+5], 80h ; [SI+SF_ENTRY.sf_flags],
 10634                                  					; devid_device
 10635 000083FC 7503                    		jnz	short IOTO33
 10636 000083FE E99D00                  		jmp	IOTOFILE
 10637                                  ; ---------------------------------------------------------------------------
 10638                                  
 10639                                  IOTO33:					; ...
 10640 00008401 06                      		push	es
 10641 00008402 E851BE                  		call	save_world
 10642 00008405 8CDA                    		mov	dx, ds
 10643 00008407 8CD3                    		mov	bx, ss
 10644 00008409 8EDB                    		mov	ds, bx
 10645 0000840B 8EC3                    		mov	es, bx
 10646 0000840D 31DB                    		xor	bx, bx
 10647 0000840F 80FC05                  		cmp	ah, 5
 10648 00008412 7504                    		jnz	short _no_sys_wait
 10649 00008414 81CB0004                		or	bx, 400h
 10650                                  
 10651                                  _no_sys_wait:				; ...
 10652 00008418 891E[7F03]              		mov	word [IOCALL_REQSTAT], bx
 10653 0000841C 31DB                    		xor	bx, bx
 10654 0000841E 881E[8903]              		mov	[IOCTL_REQ_MAJORFUNCTION], bl ; [IOMED]
 10655 00008422 88E3                    		mov	bl, ah
 10656 00008424 2E8AA7[C683]            		mov	ah, [cs:LenTab+bx] ; [cs:BX+LenTab]
 10657 00008429 D1E3                    		shl	bx, 1
 10658 0000842B 2E8B8F[CC83]            		mov	cx, word [cs:CmdTab+bx] ; [cs:BX+CmdTab]
 10659 00008430 BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL ; DOSDATA:037Ch
 10660 00008433 8826[7C03]              		mov	[IOCALL_REQLEN], ah
 10661 00008437 882E[7E03]              		mov	[IOCALL_REQFUNC], ch
 10662 0000843B 8EDA                    		mov	ds, dx
 10663 0000843D E86F01                  		call	DEVIOCALL
 10664 00008440 368B3E[7F03]            		mov	di, word [ss:IOCALL_REQSTAT]
 10665 00008445 21FF                    		and	di, di
 10666 00008447 7834                    		js	short DevErr
 10667                                  
 10668                                  OKDevIO:				; ...
 10669 00008449 8CD0                    		mov	ax, ss
 10670 0000844B 8ED8                    		mov	ds, ax
 10671 0000844D 80FD05                  		cmp	ch, 5		; DEVRDND
 10672 00008450 7506                    		jnz	short DNODRD
 10673 00008452 A0[8903]                		mov	al, [IOCTL_REQ_MAJORFUNCTION] ; [IORCHR]
 10674 00008455 A2[BC03]                		mov	byte [DEVIOBUF],	al
 10675                                  
 10676                                  DNODRD:					; ...
 10677 00008458 8A26[8003]              		mov	ah, [IOCALL_REQSTAT+1]
 10678 0000845C F6D4                    		not	ah
 10679 0000845E 80E402                  		and	ah, 2		; STBUI>>8
 10680 00008461 E8DBBD                  		call	restore_world
 10681 00008464 07                      		pop	es
 10682 00008465 9C                      		pushf
 10683 00008466 36A0[8300]              		mov	al, [ss:IoStatFail]
 10684 0000846A 98                      		cbw
 10685 0000846B 83F8FF                  		cmp	ax, -1		; 0FFFFh
 10686 0000846E 7507                    		jnz	short not_fail_ret
 10687 00008470 36FE06[8300]            		inc	byte [ss:IoStatFail]
 10688 00008475 9D                      		popf
 10689 00008476 C3                      		retn
 10690                                  ; ---------------------------------------------------------------------------
 10691                                  
 10692                                  not_fail_ret:				; ...
 10693 00008477 36A1[BC03]              		mov	ax, [ss:DEVIOBUF]
 10694 0000847B 9D                      		popf
 10695 0000847C C3                      		retn
 10696                                  ; ---------------------------------------------------------------------------
 10697                                  
 10698                                  DevErr:					; ...
 10699 0000847D 88CC                    		mov	ah, cl
 10700 0000847F E8C70D                  		call	CHARHARD
 10701 00008482 3C01                    		cmp	al, 1
 10702 00008484 7507                    		jnz	short NO_RETRY
 10703 00008486 E8B6BD                  		call	restore_world
 10704 00008489 07                      		pop	es
 10705 0000848A E94BFF                  		jmp	IOFUNC
 10706                                  ; ---------------------------------------------------------------------------
 10707                                  
 10708                                  NO_RETRY:				; ...
 10709 0000848D 368026[8003]FD          		and	byte [ss:IOCALL_REQSTAT+1], 0FDh ; ~(STBUI>>8)
 10710 00008493 3C03                    		cmp	al, 3
 10711 00008495 7505                    		jnz	short not_fail
 10712 00008497 36FE0E[8300]            		dec	byte [ss:IoStatFail]
 10713                                  
 10714                                  not_fail:				; ...
 10715 0000849C EBAB                    		jmp	short OKDevIO
 10716                                  ; ---------------------------------------------------------------------------
 10717                                  
 10718                                  IOTOFILE:				; ...
 10719 0000849E 08E4                    		or	ah, ah
 10720 000084A0 7423                    		jz	short IOIN
 10721 000084A2 FECC                    		dec	ah
 10722 000084A4 7405                    		jz	short IOIST
 10723 000084A6 FECC                    		dec	ah
 10724 000084A8 7411                    		jz	short IOUT
 10725 000084AA C3                      		retn
 10726                                  ; ---------------------------------------------------------------------------
 10727                                  
 10728                                  IOIST:					; ...
 10729 000084AB FF7415                  		push	word [si+15h] ; [SI+SF_ENTRY.sf_position]
 10730 000084AE FF7417                  		push	word [si+17h] ; [SI+SF_ENTRY.sf_position+2]
 10731 000084B1 E81100                  		call	IOIN
 10732 000084B4 8F4417                  		pop	word [si+17h]
 10733 000084B7 8F4415                  		pop	word [si+15h]
 10734 000084BA C3                      		retn
 10735                                  ; ---------------------------------------------------------------------------
 10736                                  
 10737                                  IOUT:					; ...
 10738 000084BB E82700                  		call	SETXADDR
 10739 000084BE E857EF                  		call	DOS_WRITE
 10740 000084C1 E85500                  		call	RESTXADDR
 10741                                  
 10742                                  IOUT_retn:				; ...
 10743 000084C4 C3                      		retn
 10744                                  ; ---------------------------------------------------------------------------
 10745                                  
 10746                                  IOIN:					; ...
 10747 000084C5 E81D00                  		call	SETXADDR
 10748 000084C8 36830E[1106]40          		or	word [ss:DOS34_FLAG], 40h ; Disable_EOF_I24
 10749 000084CE E818ED                  		call	DOS_READ
 10750 000084D1 368326[1106]BF          		and	word [ss:DOS34_FLAG], 0FFBFh ; NO_Disable_EOF_I24
 10751 000084D7 09C9                    		or	cx, cx
 10752 000084D9 E83D00                  		call	RESTXADDR
 10753 000084DC 36A0[BC03]              		mov	al, byte [ss:DEVIOBUF]
 10754 000084E0 75E2                    		jnz	short IOUT_retn
 10755 000084E2 B01A                    		mov	al, 1Ah		; ^Z
 10756 000084E4 C3                      		retn
 10757                                  
 10758                                  ; =============== S U B	R O U T	I N E =======================================
 10759                                  
 10760                                  SETXADDR:		; ...
 10761                                  
 10762                                  ; FUNCTION CHUNK AT 8529 SIZE 00000005 BYTES
 10763                                  
 10764 000084E5 368F06[6C03]            		pop	word [ss:CALLSCNT]
 10765 000084EA 06                      		push	es
 10766 000084EB E868BD                  		call	save_world
 10767 000084EE 36FF36[2C03]            		push	word [ss:DMAADD]
 10768 000084F3 36FF36[2E03]            		push	word [ss:DMAADD+2]
 10769 000084F8 368C1E[A005]            		mov	word [ss:THISSFT+2], ds
 10770 000084FD 16                      		push	ss
 10771 000084FE 1F                      		pop	ds
 10772 000084FF 8936[9E05]              		mov	word [THISSFT], si
 10773 00008503 8B0E[8C03]              		mov	cx, word [IOCTL_IOXAD_2]	; [IOXAD+2]
 10774 00008507 890E[2E03]              		mov	word [DMAADD+2],	cx
 10775 0000850B 8B0E[8A03]              		mov	cx, word [IOCTL_REQ_MINORFUNCTION] ; [IOXAD]
 10776 0000850F 890E[2C03]              		mov	word [DMAADD], cx
 10777 00008513 8B0E[8E03]              		mov	cx, word [IOCTL_IOSCNT] ; [IOCNT]
 10778 00008517 EB10                    		jmp	short RESTRET
 10779                                  
 10780                                  ; ---------------------------------------------------------------------------
 10781                                  
 10782                                  RESTXADDR:				; ...
 10783 00008519 8F06[6C03]              		pop	word [CALLSCNT]
 10784 0000851D 8F06[2E03]              		pop	word [DMAADD+2]
 10785 00008521 8F06[2C03]              		pop	word [DMAADD]
 10786 00008525 E817BD                  		call	restore_world
 10787 00008528 07                      		pop	es
 10788                                  ; START	OF FUNCTION CHUNK FOR SETXADDR
 10789                                  
 10790                                  RESTRET:				; ...
 10791                                  		;jmp	[ss:CALLSCNT]	; JMP WORD [SS:CALLSCNT]
 10792 00008529 36FF26[6C03]            		jmp	word [ss:CALLSCNT]
 10793                                  
 10794                                  ; END OF FUNCTION CHUNK	FOR SETXADDR
 10795                                  
 10796                                  ; =============== S U B	R O U T	I N E =======================================
 10797                                  
 10798                                  DEV_OPEN_SFT:	; ...
 10799 0000852E 06                      		push	es
 10800 0000852F E824BD                  		call	save_world
 10801 00008532 B00D                    		mov	al, 0Dh		; DEVOPN
 10802 00008534 EB06                    		jmp	short DO_OPCLS
 10803                                  
 10804                                  ; =============== S U B	R O U T	I N E =======================================
 10805                                  
 10806                                  DEV_CLOSE_SFT:	; ...
 10807 00008536 06                      		push	es
 10808 00008537 E81CBD                  		call	save_world
 10809 0000853A B00E                    		mov	al, 0Eh
 10810                                  
 10811                                  DO_OPCLS:				; ...
 10812 0000853C 26F6450680              		test	byte [es:di+6], 80h	; [es:di+SF_ENTRY.sf_flags+1],
 10813                                  					; (sf_isnet>>8)
 10814 00008541 7567                    		jnz	short OPCLS_DONE
 10815 00008543 30E4                    		xor	ah, ah
 10816 00008545 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
 10817                                  					; devid_device
 10818 0000854A 26C47D07                		les	di, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
 10819 0000854E 7513                    		jnz	short GOT_DEV_ADDR
 10820 00008550 36803E[0303]01          		cmp	byte [ss:fShare], 1
 10821 00008556 7652                    		jbe	short OPCLS_DONE
 10822 00008558 268A6501                		mov	ah, [es:di+1]	; [ES:DI+DPB.UNIT]
 10823 0000855C 268A0D                  		mov	cl, [es:di]	; [ES:DI+DPB.DRIVE]
 10824 0000855F 26C47D13                		les	di, [es:di+13h]	; [ES:DI+DPB.DRIVER_ADDR]
 10825                                  
 10826                                  GOT_DEV_ADDR:				; ...
 10827 00008563 26F6450508              		test	byte [es:di+5], 8 ;	[ES:DI+SYSDEV.ATT+1],
 10828                                  					; (DEVOPCL>>8)
 10829 00008568 7440                    		jz	short OPCLS_DONE
 10830 0000856A 06                      		push	es
 10831 0000856B 1F                      		pop	ds
 10832 0000856C 89FE                    		mov	si, di
 10833                                  
 10834                                  OPCLS_RETRY:				; ...
 10835 0000856E 16                      		push	ss
 10836 0000856F 07                      		pop	es
 10837 00008570 BF[5A03]                		mov	di, DEVCALL
 10838 00008573 89FB                    		mov	bx, di
 10839 00008575 50                      		push	ax
 10840 00008576 B00D                    		mov	al, 13		; DOPCLHL
 10841 00008578 AA                      		stosb
 10842 00008579 58                      		pop	ax
 10843 0000857A 86E0                    		xchg	ah, al
 10844 0000857C AA                      		stosb
 10845 0000857D 86E0                    		xchg	ah, al
 10846 0000857F AA                      		stosb
 10847 00008580 26C7050000              		mov	word [es:di], 0
 10848 00008585 50                      		push	ax
 10849 00008586 E82900                  		call	DEVIOCALL2
 10850 00008589 268B7F03                		mov	di, [es:bx+3]	; [ES:BX+SRHEAD.REQSTAT]
 10851 0000858D 21FF                    		and	di, di
 10852 0000858F 7918                    		jns	short OPCLS_DONEP
 10853 00008591 F6440580                		test	byte [si+5], 80h ; [ES:DI+SYSDEV.ATT+1],
 10854                                  					; (DEVTYP>>8)
 10855 00008595 7404                    		jz	short BLKDEV
 10856 00008597 B486                    		mov	ah, 86h
 10857 00008599 EB04                    		jmp	short HRDERR
 10858                                  ; ---------------------------------------------------------------------------
 10859                                  
 10860                                  BLKDEV:					; ...
 10861 0000859B 88C8                    		mov	al, cl
 10862 0000859D B406                    		mov	ah, 6
 10863                                  
 10864                                  HRDERR:					; ...
 10865 0000859F E8A70C                  		call	CHARHARD
 10866 000085A2 3C01                    		cmp	al, 1
 10867 000085A4 7503                    		jnz	short OPCLS_DONEP
 10868 000085A6 58                      		pop	ax
 10869 000085A7 EBC5                    		jmp	short OPCLS_RETRY
 10870                                  ; ---------------------------------------------------------------------------
 10871                                  
 10872                                  OPCLS_DONEP:				; ...
 10873 000085A9 58                      		pop	ax
 10874                                  
 10875                                  OPCLS_DONE:				; ...
 10876 000085AA E892BC                  		call	restore_world
 10877 000085AD 07                      		pop	es
 10878 000085AE C3                      		retn
 10879                                  
 10880                                  ; =============== S U B	R O U T	I N E =======================================
 10881                                  
 10882                                  DEVIOCALL:		; ...
 10883 000085AF C57407                  		lds	si, [si+7]	; [SI+SF_ENTRY.sf_devptr]
 10884                                  
 10885                                  DEVIOCALL2:				; ...
 10886 000085B2 E8B1CB                  		call	ECritDevice
 10887 000085B5 F6440580                		test	byte [si+5], 80h ; [si+SYSDEV.ATT+1],(DEVTYP>>8)
 10888 000085B9 754D                    		jnz	short chardev2
 10889 000085BB 26807F0204              		cmp	byte [es:bx+2], 4 ; [ES:BX+SRHEAD.REQFUNC],DEVRD
 10890 000085C0 740E                    		jz	short chkext
 10891 000085C2 26807F0208              		cmp	byte [es:bx+2], 8 ; [ES:BX+SRHEAD.REQFUNC],DEVWRT
 10892 000085C7 7407                    		jz	short chkext
 10893 000085C9 26807F0209              		cmp	byte [es:bx+2], 9 ; [ES:BX+SRHEAD.REQFUNC],DEVWRTV
 10894 000085CE 7538                    		jnz	short chardev2
 10895                                  
 10896                                  chkext:					; ...
 10897 000085D0 E89A00                  		call	RW_SC
 10898 000085D3 7255                    		jb	short dev_exit
 10899 000085D5 F6440402                		test	byte [si+4], 2 ; [SI+SYSDEV.ATT],EXTDRVR
 10900 000085D9 741D                    		jz	short chksector
 10901 000085DB 26800708                		add	byte [es:bx], 8
 10902 000085DF 36A1[6E03]              		mov	ax, [ss:CALLSSEC]
 10903 000085E3 36C706[6E03]FFFF        		mov	word [ss:CALLSSEC], 0FFFFh ; -1
 10904 000085EA 36A3[7403]              		mov	word [ss:CALLNEWSC], ax
 10905 000085EE 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 10906 000085F2 36A3[7603]              		mov	word [ss:CALLNEWSC+2], ax
 10907 000085F6 EB10                    		jmp	short chardev2
 10908                                  ; ---------------------------------------------------------------------------
 10909                                  
 10910                                  chksector:				; ...
 10911 000085F8 36833E[0706]00          		cmp	word [ss:HIGH_SECTOR], 0
 10912 000085FE 7408                    		jz	short chardev2
 10913 00008600 26C747030781            		mov	word [es:bx+3], 8107h ; [ES:BX+SRHEAD.REQSTAT],
 10914                                  					; STERR+STDON+error_I24_not_DOS_disk
 10915 00008606 EB22                    		jmp	short dev_exit
 10916                                  ; ---------------------------------------------------------------------------
 10917                                  
 10918                                  chardev2:				; ...
 10919 00008608 8B4406                  		mov	ax, [si+6]	; [SI+SYSDEV.STRAT]
 10920 0000860B 36A3[7803]              		mov	word [ss:CALLDEVAD], ax
 10921 0000860F 368C1E[7A03]            		mov	word [ss:CALLDEVAD+2], ds
 10922                                  		;call	[ss:CALLDEVAD]
 10923 00008614 36FF1E[7803]            		CALL	far [SS:CALLDEVAD]
 10924 00008619 8B4408                  		mov	ax, [si+8]	; [SI+SYSDEV.INT]
 10925 0000861C 36A3[7803]              		mov	word [ss:CALLDEVAD], ax
 10926                                  		;call	[ss:CALLDEVAD]
 10927 00008620 36FF1E[7803]            		CALL	far [SS:CALLDEVAD]
 10928 00008625 E84201                  		call	VIRREAD
 10929 00008628 72DE                    		jb	short chardev2
 10930                                  
 10931                                  dev_exit:				; ...
 10932 0000862A E859CB                  		call	LCritDevice
 10933 0000862D C3                      		retn
 10934                                  
 10935                                  ; =============== S U B	R O U T	I N E =======================================
 10936                                  
 10937                                  SETREAD:
 10938 0000862E 57                      		push	di
 10939 0000862F 51                      		push	cx
 10940 00008630 50                      		push	ax
 10941 00008631 B104                    		mov	cl, 4		; DEVRD
 10942                                  
 10943                                  SETCALLHEAD:				; ...
 10944 00008633 B016                    		mov	al, 16h		; DRDWRHL
 10945 00008635 16                      		push	ss
 10946 00008636 07                      		pop	es
 10947 00008637 BF[5A03]                		mov	di, DEVCALL
 10948 0000863A AA                      		stosb
 10949 0000863B 58                      		pop	ax
 10950 0000863C AA                      		stosb
 10951 0000863D 50                      		push	ax
 10952 0000863E 88C8                    		mov	al, cl
 10953 00008640 AA                      		stosb
 10954 00008641 31C0                    		xor	ax, ax
 10955 00008643 AB                      		stosw
 10956 00008644 83C708                  		add	di, 8
 10957 00008647 58                      		pop	ax
 10958 00008648 86E0                    		xchg	ah, al
 10959 0000864A AA                      		stosb
 10960 0000864B 86C4                    		xchg	al, ah
 10961 0000864D 50                      		push	ax
 10962 0000864E 89D8                    		mov	ax, bx
 10963 00008650 AB                      		stosw
 10964 00008651 8CD8                    		mov	ax, ds
 10965 00008653 AB                      		stosw
 10966 00008654 59                      		pop	cx
 10967 00008655 58                      		pop	ax
 10968 00008656 AB                      		stosw
 10969 00008657 92                      		xchg	ax, dx
 10970 00008658 AB                      		stosw
 10971 00008659 91                      		xchg	ax, cx
 10972 0000865A 87D1                    		xchg	dx, cx
 10973 0000865C 5F                      		pop	di
 10974 0000865D BB[5A03]                		mov	bx, DEVCALL
 10975 00008660 C3                      		retn
 10976                                  
 10977                                  ; =============== S U B	R O U T	I N E =======================================
 10978                                  
 10979                                  SETWRITE:		; ...
 10980 00008661 57                      		push	di
 10981 00008662 51                      		push	cx
 10982 00008663 50                      		push	ax
 10983 00008664 B108                    		mov	cl, 8		; DEVWRT
 10984 00008666 36020E[FF02]            		add	cl, [ss:VERFLG]
 10985 0000866B EBC6                    		jmp	short SETCALLHEAD
 10986                                  
 10987                                  ; =============== S U B	R O U T	I N E =======================================
 10988                                  
 10989                                  RW_SC:		; ...
 10990 0000866D 36833E[7700]00          		cmp	word [ss:SC_CACHE_COUNT], 0
 10991 00008673 7421                    		jz	short scexit4
 10992 00008675 36833E[6C03]01          		cmp	word [ss:CALLSCNT], 1
 10993 0000867B 7519                    		jnz	short scexit4
 10994 0000867D 51                      		push	cx
 10995 0000867E 52                      		push	dx
 10996 0000867F 1E                      		push	ds
 10997 00008680 56                      		push	si
 10998 00008681 06                      		push	es
 10999 00008682 57                      		push	di
 11000 00008683 368B16[6E03]            		mov	dx, [ss:CALLSSEC]
 11001 00008688 36803E[5C03]04          		cmp	byte [ss:DEVCALL_REQFUNC], 4 ; DEVRD
 11002 0000868E 7408                    		jz	short doread
 11003 00008690 E8C500                  		call	INVALIDATE_SC
 11004 00008693 E98E00                  		jmp	scexit2
 11005                                  ; ---------------------------------------------------------------------------
 11006                                  
 11007                                  scexit4:				; ...
 11008 00008696 F8                      		clc
 11009 00008697 C3                      		retn
 11010                                  ; ---------------------------------------------------------------------------
 11011                                  
 11012                                  doread:					; ...
 11013 00008698 E82701                  		call	SC2BUF
 11014 0000869B 720A                    		jb	short readSC
 11015 0000869D 36C706[5D03]0001        		mov	word [ss:DEVCALL_REQSTAT], 100h ; STDON
 11016 000086A4 F9                      		stc
 11017 000086A5 EB6B                    		jmp	short saveseq
 11018                                  ; ---------------------------------------------------------------------------
 11019                                  
 11020                                  readSC:					; ...
 11021 000086A7 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 11022 000086AB 368B0E[6E03]            		mov	cx, [ss:CALLSSEC]
 11023 000086B0 362B0E[A90D]            		sub	cx, word [ss:SEQ_SECTOR]
 11024 000086B5 361B06[AB0D]            		sbb	ax, word [ss:SEQ_SECTOR+2]
 11025 000086BA 83F800                  		cmp	ax, 0
 11026 000086BD 7552                    		jnz	short saveseq2
 11027 000086BF 83F901                  		cmp	cx, 1
 11028 000086C2 774D                    		ja	short saveseq2
 11029 000086C4 36C706[B50D]FFFF        		mov	word [ss:SC_STATUS], 0FFFFh
 11030 000086CB 36A1[7700]              		mov	ax, [ss:SC_CACHE_COUNT]
 11031 000086CF 36A3[6C03]              		mov	[ss:CALLSCNT], ax
 11032 000086D3 36A1[6A03]              		mov	ax, word [ss:CALLXADD+2]
 11033 000086D7 36A3[0E06]              		mov	[ss:TEMP_VAR2],	ax
 11034 000086DB 36A1[6803]              		mov	ax, word [ss:CALLXADD]
 11035 000086DF 36A3[0C06]              		mov	[ss:TEMP_VAR], ax
 11036 000086E3 36A1[7300]              		mov	ax, word [ss:SC_CACHE_PTR]
 11037 000086E7 36A3[6803]              		mov	word [ss:CALLXADD], ax
 11038 000086EB 36A1[7500]              		mov	ax, word [ss:SC_CACHE_PTR+2]
 11039 000086EF 36A3[6A03]              		mov	word [ss:CALLXADD+2], ax
 11040 000086F3 36C606[B70D]01          		mov	byte [ss:SC_FLAG], 1
 11041 000086F9 36A0[AF0D]              		mov	al, [ss:SC_DRIVE]
 11042 000086FD 36A2[B00D]              		mov	byte [ss:CurSC_DRIVE], al
 11043 00008701 36A1[6E03]              		mov	ax, [ss:CALLSSEC]
 11044 00008705 36A3[B10D]              		mov	word [ss:CurSC_SECTOR], ax
 11045 00008709 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 11046 0000870D 36A3[B30D]              		mov	word [ss:CurSC_SECTOR+2], ax
 11047                                  
 11048                                  saveseq2:				; ...
 11049 00008711 F8                      		clc
 11050                                  
 11051                                  saveseq:				; ...
 11052 00008712 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 11053 00008716 36A3[AB0D]              		mov	word [ss:SEQ_SECTOR+2], ax
 11054 0000871A 36A1[6E03]              		mov	ax, [ss:CALLSSEC]
 11055 0000871E 36A3[A90D]              		mov	word [ss:SEQ_SECTOR], ax
 11056 00008722 EB01                    		jmp	short scexit
 11057                                  ; ---------------------------------------------------------------------------
 11058                                  
 11059                                  scexit2:				; ...
 11060 00008724 F8                      		clc
 11061                                  
 11062                                  scexit:					; ...
 11063 00008725 5F                      		pop	di
 11064 00008726 07                      		pop	es
 11065 00008727 5E                      		pop	si
 11066 00008728 1F                      		pop	ds
 11067 00008729 5A                      		pop	dx
 11068 0000872A 59                      		pop	cx
 11069 0000872B C3                      		retn
 11070                                  
 11071                                  ; =============== S U B	R O U T	I N E =======================================
 11072                                  
 11073                                  IN_SC:		; ...
 11074 0000872C 36A0[AF0D]              		mov	al, [ss:SC_DRIVE]
 11075 00008730 363A06[B00D]            		cmp	al, [ss:CurSC_DRIVE]
 11076 00008735 751F                    		jnz	short outrange2
 11077 00008737 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 11078 0000873B 89D1                    		mov	cx, dx
 11079 0000873D 362B0E[B10D]            		sub	cx, word [ss:CurSC_SECTOR]
 11080 00008742 361B06[B30D]            		sbb	ax, word [ss:CurSC_SECTOR+2]
 11081 00008747 83F800                  		cmp	ax, 0
 11082 0000874A 750A                    		jnz	short outrange2
 11083 0000874C 363B0E[7700]            		cmp	cx, [ss:SC_CACHE_COUNT]
 11084 00008751 7303                    		jnb	short outrange2
 11085 00008753 F8                      		clc
 11086 00008754 EB01                    		jmp	short inexit
 11087                                  ; ---------------------------------------------------------------------------
 11088                                  
 11089                                  outrange2:				; ...
 11090 00008756 F9                      		stc
 11091                                  
 11092                                  inexit:					; ...
 11093 00008757 C3                      		retn
 11094                                  
 11095                                  ; =============== S U B	R O U T	I N E =======================================
 11096                                  
 11097                                  INVALIDATE_SC:	; ...
 11098 00008758 E8D1FF                  		call	IN_SC
 11099 0000875B 720C                    		jb	short outrange
 11100 0000875D B80100                  		mov	ax, 1
 11101 00008760 D3E0                    		shl	ax, cl
 11102 00008762 F7D0                    		not	ax
 11103 00008764 362106[B50D]            		and	[ss:SC_STATUS],	ax
 11104                                  
 11105                                  outrange:				; ...
 11106 00008769 C3                      		retn
 11107                                  
 11108                                  ; =============== S U B	R O U T	I N E =======================================
 11109                                  
 11110                                  VIRREAD:
 11111 0000876A 36803E[B70D]00          		cmp	byte [ss:SC_FLAG], 0
 11112 00008770 744E                    		jz	short sc2end
 11113 00008772 36A1[0E06]              		mov	ax, [ss:TEMP_VAR2]
 11114 00008776 36A3[6A03]              		mov	word [ss:CALLXADD+2], ax
 11115 0000877A 36A1[0C06]              		mov	ax, [ss:TEMP_VAR]
 11116 0000877E 36A3[6803]              		mov	word [ss:CALLXADD], ax
 11117 00008782 36C606[B70D]00          		mov	byte [ss:SC_FLAG], 0
 11118 00008788 36C706[6C03]0100        		mov	word [ss:CALLSCNT], 1
 11119 0000878F 36F606[5E03]80          		test	byte [ss:DEVCALL_REQSTAT+1], 80h ; (STERR>>8)
 11120 00008795 7513                    		jnz	short scerror
 11121 00008797 1E                      		push	ds
 11122 00008798 56                      		push	si
 11123 00008799 06                      		push	es
 11124 0000879A 57                      		push	di
 11125 0000879B 52                      		push	dx
 11126 0000879C 51                      		push	cx
 11127 0000879D 31C9                    		xor	cx, cx
 11128 0000879F E83100                  		call	SC2BUF2
 11129 000087A2 59                      		pop	cx
 11130 000087A3 5A                      		pop	dx
 11131 000087A4 5F                      		pop	di
 11132 000087A5 07                      		pop	es
 11133 000087A6 5E                      		pop	si
 11134 000087A7 1F                      		pop	ds
 11135 000087A8 EB16                    		jmp	short sc2end
 11136                                  ; ---------------------------------------------------------------------------
 11137                                  
 11138                                  scerror:				; ...
 11139 000087AA 36C706[6C03]0100        		mov	word [ss:CALLSCNT], 1
 11140 000087B1 36C706[B50D]0000        		mov	word [ss:SC_STATUS], 0
 11141 000087B8 36C606[B00D]FF          		mov	byte [ss:CurSC_DRIVE], 0FFh ; -1
 11142 000087BE F9                      		stc
 11143 000087BF C3                      		retn
 11144                                  ; ---------------------------------------------------------------------------
 11145                                  
 11146                                  sc2end:					; ...
 11147 000087C0 F8                      		clc
 11148 000087C1 C3                      		retn
 11149                                  
 11150                                  ; ---------------------------------------------------------------------------
 11151                                  
 11152                                  SC2BUF:					; ...
 11153 000087C2 E867FF                  		call	IN_SC
 11154 000087C5 7241                    		jb	short noSC
 11155 000087C7 B80100                  		mov	ax, 1
 11156 000087CA D3E0                    		shl	ax, cl
 11157 000087CC 368506[B50D]            		test	[ss:SC_STATUS],	ax
 11158 000087D1 7435                    		jz	short noSC
 11159                                  
 11160                                  SC2BUF2:				; ...
 11161 000087D3 89C8                    		mov	ax, cx
 11162 000087D5 36F726[AD0D]            		mul	word [ss:SC_SECTOR_SIZE]
 11163 000087DA 360306[7300]            		add	ax, word [ss:SC_CACHE_PTR]
 11164 000087DF 361316[7500]            		adc	dx, word [ss:SC_CACHE_PTR+2]
 11165 000087E4 8EDA                    		mov	ds, dx
 11166 000087E6 89C6                    		mov	si, ax
 11167 000087E8 368E06[6A03]            		mov	es, word [ss:CALLXADD+2]
 11168 000087ED 368B3E[6803]            		mov	di, word [ss:CALLXADD]
 11169 000087F2 368B0E[AD0D]            		mov	cx, [ss:SC_SECTOR_SIZE]
 11170 000087F7 D1E9                    		shr	cx, 1
 11171 000087F9 36803E[6A00]00          		cmp	byte [ss:DDMOVE], 0
 11172 000087FF 7403                    		jz	short nodd
 11173 00008801 D1E9                    		shr	cx, 1
 11174                                  ; ---------------------------------------------------------------------------
 11175 00008803 66                      		db 66h			; rep movsd (dword move	prefix)
 11176                                  ; ---------------------------------------------------------------------------
 11177                                  
 11178                                  nodd:					; ...
 11179 00008804 F3A5                    		rep movsw
 11180 00008806 F8                      		clc
 11181 00008807 C3                      		retn
 11182                                  ; ---------------------------------------------------------------------------
 11183                                  
 11184                                  noSC:					; ...
 11185 00008808 F9                      		stc
 11186 00008809 C3                      		retn
 11187                                  
 11188                                  ; =============== S U B	R O U T	I N E =======================================
 11189                                  
 11190                                  BUILDDIR:		; ...
 11191 0000880A A1[D805]                		mov	ax, [ENTFREE]
 11192 0000880D 83F8FF                  		cmp	ax, 0FFFFh	; -1
 11193 00008810 7402                    		jz	short CHECK_IF_ROOT
 11194 00008812 F8                      		clc
 11195 00008813 C3                      		retn
 11196                                  ; ---------------------------------------------------------------------------
 11197                                  
 11198                                  CHECK_IF_ROOT:				; ...
 11199 00008814 833E[C205]00            		cmp	word [DIRSTART], 0
 11200 00008819 7502                    		jnz	short NEWDIR
 11201 0000881B F9                      		stc
 11202                                  
 11203                                  builddir_retn:				; ...
 11204 0000881C C3                      		retn
 11205                                  ; ---------------------------------------------------------------------------
 11206                                  
 11207                                  NEWDIR:					; ...
 11208 0000881D 8B1E[C205]              		mov	bx, [DIRSTART]
 11209 00008821 09DB                    		or	bx, bx
 11210 00008823 7405                    		jz	short NULLDIR
 11211 00008825 E83D06                  		call	GETEOF
 11212 00008828 72F2                    		jb	short builddir_retn
 11213                                  
 11214                                  NULLDIR:				; ...
 11215 0000882A B90100                  		mov	cx, 1
 11216 0000882D E85705                  		call	ALLOCATE
 11217 00008830 72EA                    		jb	short builddir_retn
 11218 00008832 8B16[C205]              		mov	dx, [DIRSTART]
 11219 00008836 09D2                    		or	dx, dx
 11220 00008838 750D                    		jnz	short ADDINGDIR
 11221 0000883A E89FF5                  		call	SETDIRSRCH
 11222 0000883D 72DD                    		jb	short builddir_retn
 11223 0000883F C706[4803]FFFF          		mov	word [LASTENT], 0FFFFh ; -1
 11224 00008845 EB2B                    		jmp	short GOTDIRREC
 11225                                  ; ---------------------------------------------------------------------------
 11226                                  
 11227                                  ADDINGDIR:				; ...
 11228 00008847 53                      		push	bx
 11229 00008848 8B1E[BC05]              		mov	bx, [CLUSNUM]
 11230 0000884C E84F0C                  		call	IsEOF
 11231 0000884F 5B                      		pop	bx
 11232 00008850 7219                    		jb	short NOTFIRSTGROW
 11233 00008852 891E[BC05]              		mov	[CLUSNUM], bx
 11234 00008856 51                      		push	cx
 11235 00008857 50                      		push	ax
 11236 00008858 55                      		push	bp
 11237 00008859 B401                    		mov	ah, 1
 11238 0000885B 268A5600                		mov	dl, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 11239 0000885F 8B0E[C205]              		mov	cx, [DIRSTART]
 11240 00008863 89DD                    		mov	bp, bx
 11241 00008865 E852DD                  		call	FastOpen_Update
 11242 00008868 5D                      		pop	bp
 11243 00008869 58                      		pop	ax
 11244 0000886A 59                      		pop	cx
 11245                                  
 11246                                  NOTFIRSTGROW:				; ...
 11247 0000886B 89DA                    		mov	dx, bx
 11248 0000886D 30DB                    		xor	bl, bl
 11249 0000886F E8E904                  		call	FIGREC
 11250                                  
 11251                                  GOTDIRREC:				; ...
 11252 00008872 268A4E04                		mov	cl, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
 11253 00008876 FEC1                    		inc	cl
 11254 00008878 30ED                    		xor	ch, ch
 11255                                  
 11256                                  ZERODIR:				; ...
 11257 0000887A 51                      		push	cx
 11258 0000887B C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
 11259 00008880 B0FF                    		mov	al, 0FFh
 11260 00008882 E85610                  		call	GETBUFFR
 11261 00008885 7302                    		jnb	short GET_SSIZE
 11262 00008887 59                      		pop	cx
 11263 00008888 C3                      		retn
 11264                                  ; ---------------------------------------------------------------------------
 11265                                  
 11266                                  GET_SSIZE:				; ...
 11267 00008889 268B4E02                		mov	cx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 11268 0000888D 06                      		push	es
 11269 0000888E C43E[E205]              		les	di, [CURBUF]
 11270 00008892 26804D0504              		or	byte [es:di+5], 4 ;	[ES:DI+BUFFINFO.buf_flags],
 11271                                  					; buf_isDIR
 11272 00008897 57                      		push	di
 11273 00008898 83C714                  		add	di, 20		; BUFINSIZ
 11274 0000889B 31C0                    		xor	ax, ax
 11275 0000889D D1E9                    		shr	cx, 1
 11276 0000889F F3AB                    		rep stosw
 11277 000088A1 7301                    		jnb	short EVENZ
 11278 000088A3 AA                      		stosb
 11279                                  
 11280                                  EVENZ:					; ...
 11281 000088A4 5F                      		pop	di
 11282 000088A5 26F6450540              		test	byte [es:di+5], 40h	; [ES:DI+BUFFINFO.buf_flags],
 11283                                  					; buf_dirty
 11284 000088AA 7508                    		jnz	short yesdirty7
 11285 000088AC E83712                  		call	INC_DIRTY_COUNT
 11286 000088AF 26804D0540              		or	byte [es:di+5], 40h
 11287                                  
 11288                                  yesdirty7:				; ...
 11289 000088B4 07                      		pop	es
 11290 000088B5 59                      		pop	cx
 11291 000088B6 83C201                  		add	dx, 1
 11292 000088B9 8316[0706]00            		adc	word [HIGH_SECTOR], 0
 11293 000088BE E2BA                    		loop	ZERODIR
 11294 000088C0 A1[4803]                		mov	ax, [LASTENT]
 11295 000088C3 40                      		inc	ax
 11296 000088C4 F8                      		clc
 11297 000088C5 C3                      		retn
 11298                                  
 11299                                  ; =============== S U B	R O U T	I N E =======================================
 11300                                  
 11301                                  SETDOTENT:		; ...
 11302 000088C6 AB                      		stosw
 11303 000088C7 B90400                  		mov	cx, 4
 11304 000088CA B82020                  		mov	ax, 2020h	; '  '
 11305 000088CD F3AB                    		rep stosw
 11306 000088CF AA                      		stosb
 11307 000088D0 B010                    		mov	al, 10h		; attr_directory
 11308 000088D2 AA                      		stosb
 11309 000088D3 83C70A                  		add	di, 10
 11310 000088D6 8B36[9E05]              		mov	si, word [THISSFT]
 11311 000088DA 8B440D                  		mov	ax, [si+0Dh]	; [SI+SF_ENTRY.sf_time]
 11312 000088DD AB                      		stosw
 11313 000088DE 8B440F                  		mov	ax, [si+0Fh]	; [SI+SF_ENTRY.sf_date]
 11314 000088E1 AB                      		stosw
 11315 000088E2 89D0                    		mov	ax, dx
 11316 000088E4 AB                      		stosw
 11317 000088E5 31C0                    		xor	ax, ax
 11318 000088E7 AB                      		stosw
 11319 000088E8 AB                      		stosw
 11320 000088E9 C3                      		retn
 11321                                  
 11322                                  ; ---------------------------------------------------------------------------
 11323                                  
 11324                                  MakeNode:				; ...
 11325 000088EA C706[7E05]FFE5          		mov	word [CREATING], 0E5FFh ; DIRFREE*256 + 0FFh
 11326 000088F0 50                      		push	ax
 11327 000088F1 C606[4C03]00            		mov	byte [NoSetDir], 0
 11328 000088F6 A2[6D05]                		mov	[SATTRIB], al
 11329 000088F9 E84BF5                  		call	GetPathNoSet
 11330 000088FC 88CA                    		mov	dl, cl
 11331 000088FE 89C1                    		mov	cx, ax
 11332 00008900 58                      		pop	ax
 11333 00008901 732E                    		jnb	short make_exists
 11334 00008903 7505                    		jnz	short make_err_4
 11335 00008905 80FA80                  		cmp	dl, 80h
 11336 00008908 7406                    		jz	short RENAME_MAKE ; make_type
 11337                                  
 11338                                  make_err_4:				; ...
 11339 0000890A B004                    		mov	al, 4
 11340                                  
 11341                                  make_err_ret:				; ...
 11342 0000890C 30E4                    		xor	ah, ah
 11343 0000890E F9                      		stc
 11344 0000890F C3                      		retn
 11345                                  ; ---------------------------------------------------------------------------
 11346                                  
 11347                                  RENAME_MAKE:				; ...
 11348 00008910 F606[F605]01            		test	byte [EXTOPEN_ON], 1 ; make_type
 11349                                  					; EXT_OPEN_ON
 11350 00008915 7411                    		jz	short make_type2
 11351 00008917 800E[F605]04            		or	byte [EXTOPEN_ON], 4 ; EXT_FILE_NOT_EXISTS
 11352 0000891C F606[F405]F0            		test	byte [EXTOPEN_FLAG], 0F0h
 11353 00008921 7505                    		jnz	short make_type2
 11354 00008923 F9                      		stc
 11355 00008924 B80700                  		mov	ax, 7
 11356                                  
 11357                                  ; =============== S U B	R O U T	I N E =======================================
 11358                                  
 11359                                  make_retn:		; ...
 11360 00008927 C3                      		retn
 11361                                  ; ---------------------------------------------------------------------------
 11362                                  
 11363                                  make_type2:				; ...
 11364 00008928 C43E[9E05]              		les	di, [THISSFT]
 11365 0000892C 31C0                    		xor	ax, ax
 11366 0000892E F9                      		stc
 11367 0000892F EB5A                    		jmp	short make_new
 11368                                  ; ---------------------------------------------------------------------------
 11369                                  
 11370                                  make_exists:				; ...
 11371 00008931 7448                    		jz	short make_exists_dir
 11372 00008933 B003                    		mov	al, 3
 11373 00008935 F606[6B05]18            		test	byte [ATTRIB], 18h ; attr_volume_id+attr_directory
 11374 0000893A 753B                    		jnz	short make_err_ret_5
 11375 0000893C 08ED                    		or	ch, ch
 11376 0000893E 781A                    		js	short make_share
 11377 00008940 08E4                    		or	ah, ah
 11378 00008942 75C8                    		jnz	short make_err_ret
 11379 00008944 51                      		push	cx
 11380 00008945 8E06[E405]              		mov	es, word [CURBUF+2]
 11381 00008949 268A6F0B                		mov	ch, [es:bx+0Bh]	; [ES:BX+dir_entry.dir_attr]
 11382 0000894D F6C501                  		test	ch, 1
 11383 00008950 7524                    		jnz	short make_err_ret_5P
 11384 00008952 E8ABF7                  		call	MatchAttributes
 11385 00008955 59                      		pop	cx
 11386 00008956 751F                    		jnz	short make_err_ret_5
 11387 00008958 30C0                    		xor	al, al
 11388                                  
 11389                                  make_share:				; ...
 11390 0000895A 30E4                    		xor	ah, ah
 11391 0000895C 50                      		push	ax
 11392 0000895D 51                      		push	cx
 11393 0000895E 88EC                    		mov	ah, ch
 11394 00008960 E84601                  		call	DOOPEN
 11395 00008963 C43E[9E05]              		les	di, [THISSFT]
 11396 00008967 56                      		push	si
 11397 00008968 53                      		push	bx
 11398 00008969 E8EC29                  		call	ShareEnter
 11399 0000896C 735A                    		jnb	short MakeEndShare
 11400 0000896E 5B                      		pop	bx
 11401 0000896F 5E                      		pop	si
 11402 00008970 59                      		pop	cx
 11403 00008971 58                      		pop	ax
 11404                                  
 11405                                  Make_Share_ret:				; ...
 11406 00008972 B006                    		mov	al, 6
 11407 00008974 EB96                    		jmp	short make_err_ret
 11408                                  ; ---------------------------------------------------------------------------
 11409                                  
 11410                                  make_err_ret_5P:			; ...
 11411 00008976 59                      		pop	cx
 11412                                  
 11413                                  make_err_ret_5:				; ...
 11414 00008977 B005                    		mov	al, 5
 11415 00008979 EB91                    		jmp	short make_err_ret
 11416                                  ; ---------------------------------------------------------------------------
 11417                                  
 11418                                  make_exists_dir:			; ...
 11419 0000897B B001                    		mov	al, 1
 11420 0000897D EB8D                    		jmp	short make_err_ret
 11421                                  
 11422                                  ; =============== S U B	R O U T	I N E =======================================
 11423                                  
 11424                                  make_save:		; ...
 11425 0000897F 50                      		push	ax
 11426 00008980 89C8                    		mov	ax, cx
 11427 00008982 E87400                  		call	NEWENTRY
 11428 00008985 58                      		pop	ax
 11429 00008986 739F                    		jnb	short make_retn
 11430 00008988 B002                    		mov	al, 2
 11431                                  
 11432                                  make_save_retn:				; ...
 11433 0000898A C3                      		retn
 11434                                  
 11435                                  ; ---------------------------------------------------------------------------
 11436                                  
 11437                                  make_new:				; ...
 11438 0000898B E8F1FF                  		call	make_save
 11439 0000898E 72FA                    		jb	short make_save_retn
 11440 00008990 F606[6B05]10            		test	byte [ATTRIB], 10h ; attr_directory
 11441 00008995 75F3                    		jnz	short make_save_retn
 11442 00008997 50                      		push	ax
 11443 00008998 53                      		push	bx
 11444 00008999 56                      		push	si
 11445 0000899A E8BB29                  		call	ShareEnter
 11446 0000899D 5E                      		pop	si
 11447 0000899E 5B                      		pop	bx
 11448 0000899F 58                      		pop	ax
 11449 000089A0 73E8                    		jnb	short make_save_retn
 11450 000089A2 50                      		push	ax
 11451 000089A3 C43E[E205]              		les	di, [CURBUF]
 11452 000089A7 26C607E5                		mov	byte [es:bx], 0E5h ; DIRFREE
 11453 000089AB 26F6450540              		test	byte [es:di+5], 40h	; [ES:DI+BUFFINFO.buf_flags],
 11454                                  					; buf_dirty
 11455 000089B0 7508                    		jnz	short yesdirty8
 11456 000089B2 E83111                  		call	INC_DIRTY_COUNT
 11457 000089B5 26804D0540              		or	byte [es:di+5], 40h
 11458                                  
 11459                                  yesdirty8:				; ...
 11460 000089BA C42E[8A05]              		les	bp, [THISDPB]
 11461 000089BE 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 11462 000089C2 E81510                  		call	FLUSHBUF
 11463 000089C5 58                      		pop	ax
 11464 000089C6 EBAA                    		jmp	short Make_Share_ret
 11465                                  ; ---------------------------------------------------------------------------
 11466                                  
 11467                                  MakeEndShare:				; ...
 11468 000089C8 C43E[9E05]              		les	di, [THISSFT]
 11469 000089CC 31C0                    		xor	ax, ax
 11470 000089CE E855C7                  		call	ECritDisk	; call ECritSFT
 11471 000089D1 268705                  		xchg	ax, [es:di]	; [ES:DI+SF_ENTRY.sf_ref_count]
 11472 000089D4 50                      		push	ax
 11473 000089D5 57                      		push	di
 11474 000089D6 06                      		push	es
 11475 000089D7 9C                      		pushf
 11476 000089D8 E87829                  		call	ShareEnd
 11477 000089DB 9D                      		popf
 11478 000089DC 07                      		pop	es
 11479 000089DD 5F                      		pop	di
 11480 000089DE 268F05                  		pop	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
 11481 000089E1 E862C7                  		call	LCritDisk	; call LCritSFT
 11482 000089E4 5B                      		pop	bx
 11483 000089E5 5E                      		pop	si
 11484 000089E6 59                      		pop	cx
 11485 000089E7 58                      		pop	ax
 11486 000089E8 E894FF                  		call	make_save
 11487 000089EB 729D                    		jb	short make_save_retn
 11488 000089ED 50                      		push	ax
 11489 000089EE 53                      		push	bx
 11490 000089EF 56                      		push	si
 11491 000089F0 9C                      		pushf
 11492 000089F1 E86429                  		call	ShareEnter
 11493 000089F4 9D                      		popf
 11494 000089F5 5E                      		pop	si
 11495 000089F6 5B                      		pop	bx
 11496 000089F7 58                      		pop	ax
 11497                                  
 11498                                  makeendshare_retn:			; ...
 11499 000089F8 C3                      		retn
 11500                                  
 11501                                  ; =============== S U B	R O U T	I N E =======================================
 11502                                  
 11503                                  NEWENTRY:		; ...
 11504 000089F9 C42E[8A05]              		les	bp, [THISDPB]
 11505 000089FD 7316                    		jnb	short EXISTENT
 11506 000089FF 803E[4A03]00            		cmp	byte [FAILERR], 0
 11507 00008A04 F9                      		stc
 11508 00008A05 75F1                    		jnz	short makeendshare_retn
 11509 00008A07 E800FE                  		call	BUILDDIR
 11510 00008A0A 72EC                    		jb	short makeendshare_retn
 11511 00008A0C E89EF3                  		call	GETENT
 11512 00008A0F 72E7                    		jb	short makeendshare_retn
 11513 00008A11 EB0E                    		jmp	short FREESPOT
 11514                                  ; ---------------------------------------------------------------------------
 11515                                  
 11516                                  ERRRET3:				; ...
 11517 00008A13 F9                      		stc
 11518                                  
 11519                                  newentry_retn:				; ...
 11520 00008A14 C3                      		retn
 11521                                  ; ---------------------------------------------------------------------------
 11522                                  
 11523                                  EXISTENT:				; ...
 11524 00008A15 08E4                    		or	ah, ah
 11525 00008A17 7903                    		jns	short NOT_DEV1
 11526 00008A19 E98D00                  		jmp	DOOPEN
 11527                                  ; ---------------------------------------------------------------------------
 11528                                  
 11529                                  NOT_DEV1:				; ...
 11530 00008A1C E82D01                  		call	FREEENT
 11531 00008A1F 72F3                    		jb	short newentry_retn
 11532                                  
 11533                                  FREESPOT:				; ...
 11534 00008A21 F606[6B05]08            		test	byte [ATTRIB], 8 ; attr_volume_id
 11535 00008A26 7407                    		jz	short NOTVOLID
 11536 00008A28 803E[7B05]00            		cmp	byte [VOLID], 0
 11537 00008A2D 75E4                    		jnz	short ERRRET3
 11538                                  
 11539                                  NOTVOLID:				; ...
 11540 00008A2F 8E06[E405]              		mov	es, word [CURBUF+2]
 11541 00008A33 89DF                    		mov	di, bx
 11542 00008A35 BE[4B05]                		mov	si, NAME1
 11543 00008A38 B90500                  		mov	cx, 5
 11544 00008A3B F3A5                    		rep movsw
 11545 00008A3D A4                      		movsb
 11546 00008A3E A0[6B05]                		mov	al, [ATTRIB]
 11547 00008A41 AA                      		stosb
 11548 00008A42 B105                    		mov	cl, 5
 11549 00008A44 31C0                    		xor	ax, ax
 11550 00008A46 F3AB                    		rep stosw
 11551 00008A48 E876BE                  		call	DATE16
 11552 00008A4B 92                      		xchg	ax, dx
 11553 00008A4C AB                      		stosw
 11554 00008A4D 92                      		xchg	ax, dx
 11555 00008A4E AB                      		stosw
 11556 00008A4F 31C0                    		xor	ax, ax
 11557 00008A51 57                      		push	di
 11558 00008A52 AB                      		stosw
 11559 00008A53 AB                      		stosw
 11560 00008A54 AB                      		stosw
 11561 00008A55 8B36[E205]              		mov	si, word [CURBUF]
 11562 00008A59 26F6440540              		test	byte [es:si+5], 40h ; [ES:SI+BUFFINFO.buf_flags],
 11563                                  					; buf_dirty
 11564 00008A5E 7508                    		jnz	short yesdirty9
 11565 00008A60 E88310                  		call	INC_DIRTY_COUNT
 11566 00008A63 26804C0540              		or	byte [es:si+5], 40h
 11567                                  
 11568                                  yesdirty9:				; ...
 11569 00008A68 C42E[8A05]              		les	bp, [THISDPB]
 11570 00008A6C 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 11571 00008A70 50                      		push	ax
 11572 00008A71 53                      		push	bx
 11573 00008A72 06                      		push	es
 11574 00008A73 57                      		push	di
 11575 00008A74 C43E[9E05]              		les	di, [THISSFT]
 11576 00008A78 26F6450580              		test	byte [es:di+5], 80h ; [ES:DI+SF_ENTRY.sf_flags],
 11577                                  					; devid_device
 11578 00008A7D 751A                    		jnz	short GotADevice
 11579 00008A7F 1E                      		push	ds
 11580 00008A80 53                      		push	bx
 11581 00008A81 C51E[8A05]              		lds	bx, [THISDPB]
 11582 00008A85 26895D07                		mov	[es:di+7], bx	; [ES:DI+SF_ENTRY.sf_devptr]
 11583 00008A89 8CDB                    		mov	bx, ds
 11584 00008A8B 26895D09                		mov	[es:di+9], bx	; [ES:DI+SF_ENTRY.sf_devptr+2]
 11585 00008A8F 5B                      		pop	bx
 11586 00008A90 1F                      		pop	ds
 11587 00008A91 E89AFA                  		call	DEV_OPEN_SFT
 11588 00008A94 C606[A20A]01            		mov	byte [VIRTUAL_OPEN], 1
 11589                                  
 11590                                  GotADevice:				; ...
 11591 00008A99 5F                      		pop	di
 11592 00008A9A 07                      		pop	es
 11593 00008A9B E83C0F                  		call	FLUSHBUF
 11594 00008A9E E8FA00                  		call	CHECK_VIRT_OPEN
 11595 00008AA1 5B                      		pop	bx
 11596 00008AA2 58                      		pop	ax
 11597 00008AA3 5E                      		pop	si
 11598 00008AA4 88C4                    		mov	ah, al
 11599 00008AA6 7301                    		jnb	short DOOPEN
 11600 00008AA8 C3                      		retn
 11601                                  
 11602                                  ; =============== S U B	R O U T	I N E =======================================
 11603                                  
 11604                                  DOOPEN:		; ...
 11605 00008AA9 88E6                    		mov	dh, ah
 11606 00008AAB C43E[9E05]              		les	di, [THISSFT]
 11607 00008AAF 83C704                  		add	di, 4		; SF_ENTRY.sf_attr
 11608 00008AB2 30C0                    		xor	al, al
 11609 00008AB4 08F6                    		or	dh, dh
 11610 00008AB6 7807                    		js	short DEV_SFT
 11611 00008AB8 8E1E[E405]              		mov	ds, word [CURBUF+2]
 11612 00008ABC 8A470B                  		mov	al, [bx+0Bh]	; [BX+dir_entry.dir_attr]
 11613                                  
 11614                                  DEV_SFT:				; ...
 11615 00008ABF AA                      		stosb
 11616 00008AC0 31C0                    		xor	ax, ax
 11617 00008AC2 88F0                    		mov	al, dh
 11618 00008AC4 0C40                    		or	al, 40h		; devid_file_clean
 11619 00008AC6 AB                      		stosw
 11620 00008AC7 1E                      		push	ds
 11621 00008AC8 C5471A                  		lds	ax, [bx+1Ah]	; [BX+dir_entry.dir_first]
 11622 00008ACB 08F6                    		or	dh, dh
 11623 00008ACD 7805                    		js	short DEV_SFT2
 11624 00008ACF 36C506[8A05]            		lds	ax, [ss:THISDPB]
 11625                                  
 11626                                  DEV_SFT2:				; ...
 11627 00008AD4 AB                      		stosw
 11628 00008AD5 8CD8                    		mov	ax, ds
 11629 00008AD7 1F                      		pop	ds
 11630 00008AD8 AB                      		stosw
 11631 00008AD9 56                      		push	si
 11632 00008ADA A5                      		movsw
 11633 00008ADB 83EE06                  		sub	si, 6		; dir_entry.dir_size_l - dir_entry.dir_time
 11634 00008ADE A5                      		movsw
 11635 00008ADF A5                      		movsw
 11636 00008AE0 AD                      		lodsw
 11637 00008AE1 AD                      		lodsw
 11638 00008AE2 89C1                    		mov	cx, ax
 11639 00008AE4 AD                      		lodsw
 11640 00008AE5 08F6                    		or	dh, dh
 11641 00008AE7 7904                    		jns	short FILE_SFT1
 11642 00008AE9 31C0                    		xor	ax, ax
 11643 00008AEB 89C1                    		mov	cx, ax
 11644                                  
 11645                                  FILE_SFT1:				; ...
 11646 00008AED 91                      		xchg	ax, cx
 11647 00008AEE AB                      		stosw
 11648 00008AEF 91                      		xchg	ax, cx
 11649 00008AF0 AB                      		stosw
 11650 00008AF1 31C0                    		xor	ax, ax
 11651 00008AF3 AB                      		stosw
 11652 00008AF4 AB                      		stosw
 11653 00008AF5 08F6                    		or	dh, dh
 11654 00008AF7 7844                    		js	short DEV_SFT3
 11655 00008AF9 AB                      		stosw
 11656 00008AFA 8B471A                  		mov	ax, [bx+1Ah]	; [BX+dir_entry.dir_first]
 11657 00008AFD 57                      		push	di
 11658 00008AFE 83EF1B                  		sub	di, 1Bh		; SF_ENTRY.sf_dirsec
 11659 00008B01 26894535                		mov	[es:di+35h], ax	; [ES:DI+SF_ENTRY.sf_lstclus]
 11660 00008B05 5F                      		pop	di
 11661 00008B06 1E                      		push	ds
 11662 00008B07 16                      		push	ss
 11663 00008B08 1F                      		pop	ds
 11664 00008B09 F606[3A0D]04            		test	byte [FastOpenFlg], 4 ; Special_Fill_Set
 11665 00008B0E 7411                    		jz	short Not_FastOpen
 11666 00008B10 BE[3B0D]                		mov	si, FastOpen_Ext_Info
 11667 00008B13 8B4401                  		mov	ax, [si+1]	; [SI+FEI.dirsec]
 11668 00008B16 AB                      		stosw
 11669 00008B17 8B4403                  		mov	ax, [si+3]	; [SI+FEI.dirsec+2]
 11670 00008B1A AB                      		stosw
 11671 00008B1B 8A04                    		mov	al, [si]	; [SI+FEI.dirpos]
 11672 00008B1D AA                      		stosb
 11673 00008B1E 1F                      		pop	ds
 11674 00008B1F EB1A                    		jmp	short Next_Name
 11675                                  ; ---------------------------------------------------------------------------
 11676                                  
 11677                                  Not_FastOpen:				; ...
 11678 00008B21 1F                      		pop	ds
 11679 00008B22 368B36[E205]            		mov	si, word [ss:CURBUF]
 11680 00008B27 8B4406                  		mov	ax, [si+6]	; [SI+BUFFINFO.buf_sector]
 11681 00008B2A AB                      		stosw
 11682 00008B2B 8B4408                  		mov	ax, [si+8]	; [SI+BUFFINFO.buf_sector+2]
 11683 00008B2E AB                      		stosw
 11684 00008B2F 89D8                    		mov	ax, bx
 11685 00008B31 83C614                  		add	si, 20		; BUFINSIZ
 11686 00008B34 29F0                    		sub	ax, si
 11687 00008B36 B120                    		mov	cl, 32		; dir_entry.size
 11688 00008B38 F6F1                    		div	cl
 11689 00008B3A AA                      		stosb
 11690                                  
 11691                                  Next_Name:				; ...
 11692 00008B3B EB03                    		jmp	short FILE_SFT2
 11693                                  ; ---------------------------------------------------------------------------
 11694                                  
 11695                                  DEV_SFT3:				; ...
 11696 00008B3D 83C707                  		add	di, 7		; SF_ENTRY.sf_name-SF_ENTRY.sf_cluspos
 11697                                  
 11698                                  FILE_SFT2:				; ...
 11699 00008B40 89DE                    		mov	si, bx
 11700 00008B42 B90B00                  		mov	cx, 11
 11701 00008B45 F3A4                    		rep movsb
 11702 00008B47 5E                      		pop	si
 11703 00008B48 16                      		push	ss
 11704 00008B49 1F                      		pop	ds
 11705 00008B4A F8                      		clc
 11706 00008B4B C3                      		retn
 11707                                  
 11708                                  ; =============== S U B	R O U T	I N E =======================================
 11709                                  
 11710                                  FREEENT:
 11711 00008B4C 1E                      		push	ds
 11712 00008B4D C53E[E205]              		lds	di, [CURBUF]
 11713 00008B51 8B0C                    		mov	cx, [si]
 11714 00008B53 8B5508                  		mov	dx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 11715 00008B56 368916[0706]            		mov	word [ss:HIGH_SECTOR], dx
 11716 00008B5B 8B5506                  		mov	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
 11717 00008B5E 1F                      		pop	ds
 11718 00008B5F 83F902                  		cmp	cx, 2
 11719 00008B62 7235                    		jb	short RET1
 11720 00008B64 263B4E0D                		cmp	cx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
 11721 00008B68 772F                    		ja	short RET1
 11722 00008B6A 29FB                    		sub	bx, di
 11723 00008B6C 53                      		push	bx
 11724 00008B6D FF36[0706]              		push	word [HIGH_SECTOR]
 11725 00008B71 52                      		push	dx
 11726 00008B72 89CB                    		mov	bx, cx
 11727 00008B74 E8C202                  		call	RELEASE
 11728 00008B77 5A                      		pop	dx
 11729 00008B78 8F06[0706]              		pop	word [HIGH_SECTOR]
 11730 00008B7C 7302                    		jnb	short GET_BUF_BACK
 11731 00008B7E 5B                      		pop	bx
 11732                                  
 11733                                  freeent_retn:				; ...
 11734 00008B7F C3                      		retn
 11735                                  ; ---------------------------------------------------------------------------
 11736                                  
 11737                                  GET_BUF_BACK:				; ...
 11738 00008B80 C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
 11739 00008B85 30C0                    		xor	al, al
 11740 00008B87 E8510D                  		call	GETBUFFR
 11741 00008B8A 5B                      		pop	bx
 11742 00008B8B 72F2                    		jb	short freeent_retn
 11743 00008B8D E86AEA                  		call	SET_BUF_AS_DIR
 11744 00008B90 031EE205                		add	bx, [5E2h]
 11745 00008B94 89DE                    		mov	si, bx
 11746 00008B96 83C61A                  		add	si, 1Ah
 11747                                  
 11748                                  RET1:					; ...
 11749 00008B99 F8                      		clc
 11750 00008B9A C3                      		retn
 11751                                  
 11752                                  ; =============== S U B	R O U T	I N E =======================================
 11753                                  
 11754                                  CHECK_VIRT_OPEN:
 11755 00008B9B 50                      		push	ax
 11756 00008B9C 9F                      		lahf
 11757 00008B9D 803E[A20A]00            		cmp	byte [VIRTUAL_OPEN], 0
 11758 00008BA2 7410                    		jz	short ALL_CLOSED
 11759 00008BA4 C606[A20A]00            		mov	byte [VIRTUAL_OPEN], 0
 11760 00008BA9 06                      		push	es
 11761 00008BAA 57                      		push	di
 11762 00008BAB C43E[9E05]              		les	di, [THISSFT]
 11763 00008BAF E884F9                  		call	DEV_CLOSE_SFT
 11764 00008BB2 5F                      		pop	di
 11765 00008BB3 07                      		pop	es
 11766                                  
 11767                                  ALL_CLOSED:				; ...
 11768 00008BB4 9E                      		sahf
 11769 00008BB5 58                      		pop	ax
 11770 00008BB6 C3                      		retn
 11771                                  
 11772                                  ; =============== S U B	R O U T	I N E =======================================
 11773                                  
 11774                                  FNDCLUS:
 11775 00008BB7 06                      		push	es
 11776 00008BB8 C43E[9E05]              		les	di, [THISSFT]
 11777 00008BBC 268B5D35                		mov	bx, [es:di+35h]	; [ES:DI+SF_ENTRY.sf_lstclus]
 11778 00008BC0 268B5519                		mov	dx, [es:di+19h]	; [ES:DI+SF_ENTRY.sf_cluspos]
 11779 00008BC4 09DB                    		or	bx, bx
 11780 00008BC6 7424                    		jz	short NOCLUS
 11781 00008BC8 29D1                    		sub	cx, dx
 11782 00008BCA 7308                    		jnb	short FINDIT
 11783 00008BCC 01D1                    		add	cx, dx
 11784 00008BCE 31D2                    		xor	dx, dx
 11785 00008BD0 268B5D0B                		mov	bx, [es:di+0Bh]	; [ES:DI+SF_ENTRY.sf_firclus]
 11786                                  
 11787                                  FINDIT:					; ...
 11788 00008BD4 07                      		pop	es
 11789 00008BD5 E313                    		jcxz	RET9
 11790                                  
 11791                                  SKPCLP:					; ...
 11792 00008BD7 E8DB08                  		call	UNPACK
 11793 00008BDA 7214                    		jb	short fndclus_retn
 11794 00008BDC 87DF                    		xchg	bx, di
 11795 00008BDE E8BD08                  		call	IsEOF
 11796 00008BE1 87DF                    		xchg	bx, di
 11797 00008BE3 7305                    		jnb	short RET9
 11798 00008BE5 87DF                    		xchg	bx, di
 11799 00008BE7 42                      		inc	dx
 11800 00008BE8 E2ED                    		loop	SKPCLP
 11801                                  
 11802                                  RET9:					; ...
 11803 00008BEA F8                      		clc
 11804 00008BEB C3                      		retn
 11805                                  ; ---------------------------------------------------------------------------
 11806                                  
 11807                                  NOCLUS:					; ...
 11808 00008BEC 07                      		pop	es
 11809 00008BED 41                      		inc	cx
 11810 00008BEE 4A                      		dec	dx
 11811 00008BEF F8                      		clc
 11812                                  
 11813                                  fndclus_retn:				; ...
 11814 00008BF0 C3                      		retn
 11815                                  
 11816                                  ; =============== S U B	R O U T	I N E =======================================
 11817                                  
 11818                                  ; Attributes: noreturn
 11819                                  
 11820                                  BUFSEC:		; ...
 11821 00008BF1 8B16[BC05]              		mov	dx, [CLUSNUM]
 11822 00008BF5 8A1E[7305]              		mov	bl, [SECCLUSPOS]
 11823 00008BF9 C606[4B03]38            		mov	byte [ALLOWED], 38h ; Allowed_FAIL+Allowed_RETRY+Allowed_IGNORE
 11824 00008BFE E85A01                  		call	FIGREC
 11825 00008C01 E8D70C                  		call	GETBUFFR
 11826 00008C04 72EA                    		jb	short fndclus_retn
 11827 00008C06 C606[7405]01            		mov	byte [TRANS], 1
 11828 00008C0B 8B36[B805]              		mov	si, [NEXTADD]
 11829 00008C0F 89F7                    		mov	di, si
 11830 00008C11 8B0E[D205]              		mov	cx, [BYTCNT1]
 11831 00008C15 01CF                    		add	di, cx
 11832 00008C17 893E[B805]              		mov	[NEXTADD], di
 11833 00008C1B C43E[E205]              		les	di, [CURBUF]
 11834 00008C1F 26804D0508              		or	byte [es:di+5], 8 ; [ES:DI+BUFFINFO.buf_flags],
 11835                                  					; buf_isDATA
 11836 00008C24 8D7D14                  		lea	di, [di+20]	; LEA DI,[DI+BUFINSIZ]
 11837 00008C27 033E[CC05]              		add	di, [BYTSECPOS]
 11838 00008C2B F8                      		clc
 11839 00008C2C C3                      		retn
 11840                                  
 11841                                  ; =============== S U B	R O U T	I N E =======================================
 11842                                  
 11843                                  ; Attributes: noreturn
 11844                                  
 11845                                  BUFRD:		; ...
 11846 00008C2D 06                      		push	es
 11847 00008C2E 31C0                    		xor	ax, ax
 11848 00008C30 E8BEFF                  		call	BUFSEC
 11849                                  
 11850                                  ; ---------------------------------------------------------------------------
 11851 00008C33 7303                    		jnb	short BUF_OK
 11852                                  ; START	OF FUNCTION CHUNK FOR BUFWRT
 11853                                  
 11854                                  BUF_IO_FAIL:				; ...
 11855 00008C35 07                      		pop	es
 11856 00008C36 EB2D                    		jmp	short RBUFPLACED
 11857                                  ; END OF FUNCTION CHUNK	FOR BUFWRT
 11858                                  ; ---------------------------------------------------------------------------
 11859                                  
 11860                                  BUF_OK:					; ...
 11861 00008C38 8CC3                    		mov	bx, es
 11862 00008C3A 8E06[2E03]              		mov	es, word [DMAADD+2]
 11863 00008C3E 8EDB                    		mov	ds, bx
 11864 00008C40 87FE                    		xchg	di, si
 11865 00008C42 D1E9                    		shr	cx, 1
 11866 00008C44 F3A5                    		rep movsw
 11867 00008C46 83D100                  		adc	cx, 0
 11868 00008C49 F3A4                    		rep movsb
 11869                                  
 11870                                  EVENRD:
 11871 00008C4B 07                      		pop	es
 11872 00008C4C 36C53E[E205]            		lds	di, [ss:CURBUF]
 11873 00008C51 8D5D14                  		lea	bx, [di+20]	; LEA BX,[DI+BUFINSIZ]
 11874 00008C54 29DE                    		sub	si, bx
 11875 00008C56 E8360C                  		call	PLACEBUF
 11876 00008C59 263B7602                		cmp	si, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 11877 00008C5D 7205                    		jb	short RBUFPLACEDC
 11878 00008C5F 36893E[6D00]            		mov	word [ss:BufferQueue], di
 11879                                  
 11880                                  RBUFPLACEDC:				; ...
 11881 00008C64 F8                      		clc
 11882                                  ; START	OF FUNCTION CHUNK FOR BUFWRT
 11883                                  
 11884                                  RBUFPLACED:				; ...
 11885 00008C65 16                      		push	ss
 11886 00008C66 1F                      		pop	ds
 11887 00008C67 C3                      		retn
 11888                                  ; END OF FUNCTION CHUNK	FOR BUFWRT
 11889                                  
 11890                                  ; =============== S U B	R O U T	I N E =======================================
 11891                                  
 11892                                  ; Attributes: noreturn
 11893                                  
 11894                                  BUFWRT:		; ...
 11895                                  
 11896                                  ; FUNCTION CHUNK AT 8C35 SIZE 00000003 BYTES
 11897                                  ; FUNCTION CHUNK AT 8C65 SIZE 00000003 BYTES
 11898                                  
 11899 00008C68 A1[C405]                		mov	ax, word [SECPOS]
 11900 00008C6B 83C001                  		add	ax, 1
 11901 00008C6E A3[C405]                		mov	word [SECPOS], ax
 11902 00008C71 8316[C605]00            		adc	word [SECPOS+2],	0
 11903 00008C76 A1[C605]                		mov	ax, word [SECPOS+2]
 11904 00008C79 3B06[CA05]              		cmp	ax, word [VALSEC+2]
 11905 00008C7D B001                    		mov	al, 1
 11906 00008C7F 770F                    		ja	short NOREAD
 11907 00008C81 720B                    		jb	short _doread
 11908 00008C83 A1[C405]                		mov	ax, word [SECPOS]
 11909 00008C86 3B06[C805]              		cmp	ax, word [VALSEC]
 11910 00008C8A B001                    		mov	al, 1
 11911 00008C8C 7702                    		ja	short NOREAD
 11912                                  
 11913                                  _doread:				; ...
 11914 00008C8E 30C0                    		xor	al, al
 11915                                  
 11916                                  NOREAD:					; ...
 11917 00008C90 06                      		push	es
 11918 00008C91 E85DFF                  		call	BUFSEC
 11919                                  ; ---------------------------------------------------------------------------
 11920 00008C94 729F                    		jb	short BUF_IO_FAIL
 11921 00008C96 8E1E[2E03]              		mov	ds, word [DMAADD+2]
 11922 00008C9A D1E9                    		shr	cx, 1
 11923 00008C9C F3A5                    		rep movsw
 11924 00008C9E 83D100                  		adc	cx, 0
 11925 00008CA1 F3A4                    		rep movsb
 11926                                  
 11927                                  EVENWRT:
 11928 00008CA3 07                      		pop	es
 11929 00008CA4 36C51E[E205]            		lds	bx, [ss:CURBUF]
 11930 00008CA9 F6470540                		test	byte [bx+5], 40h
 11931 00008CAD 7507                    		jnz	short yesdirty10
 11932 00008CAF E8340E                  		call	INC_DIRTY_COUNT
 11933 00008CB2 804F0540                		or	byte [bx+5], 40h ; [BX+BUFFINFO.buf_flags],
 11934                                  					; buf_dirty
 11935                                  
 11936                                  yesdirty10:				; ...
 11937 00008CB6 8D7714                  		lea	si, [bx+20]	; LEA BX,[BX+BUFINSIZ]
 11938 00008CB9 29F7                    		sub	di, si
 11939 00008CBB 263B7E02                		cmp	di, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 11940 00008CBF 7205                    		jb	short WBUFPLACED
 11941 00008CC1 36891E[6D00]            		mov	word [ss:BufferQueue], bx
 11942                                  
 11943                                  WBUFPLACED:				; ...
 11944 00008CC6 F8                      		clc
 11945 00008CC7 16                      		push	ss
 11946 00008CC8 1F                      		pop	ds
 11947 00008CC9 C3                      		retn
 11948                                  
 11949                                  ; =============== S U B	R O U T	I N E =======================================
 11950                                  
 11951                                  NEXTSEC:
 11952 00008CCA F606[7405]FF            		test	byte [TRANS], 0FFh ; -1
 11953 00008CCF 7426                    		jz	short CLRET
 11954 00008CD1 A0[7305]                		mov	al, [SECCLUSPOS]
 11955 00008CD4 FEC0                    		inc	al
 11956 00008CD6 263A4604                		cmp	al, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
 11957 00008CDA 7618                    		jbe	short SAVPOS
 11958 00008CDC 8B1E[BC05]              		mov	bx, [CLUSNUM]
 11959 00008CE0 E8BB07                  		call	IsEOF
 11960 00008CE3 7314                    		jnb	short NONEXT
 11961 00008CE5 E8CD07                  		call	UNPACK
 11962 00008CE8 720F                    		jb	short NONEXT
 11963 00008CEA 893E[BC05]              		mov	[CLUSNUM], di
 11964 00008CEE FF06[BA05]              		inc	word [LASTPOS]
 11965 00008CF2 B000                    		mov	al, 0
 11966                                  
 11967                                  SAVPOS:					; ...
 11968 00008CF4 A2[7305]                		mov	[SECCLUSPOS], al
 11969                                  
 11970                                  CLRET:					; ...
 11971 00008CF7 F8                      		clc
 11972 00008CF8 C3                      		retn
 11973                                  ; ---------------------------------------------------------------------------
 11974                                  
 11975                                  NONEXT:					; ...
 11976 00008CF9 F9                      		stc
 11977 00008CFA C3                      		retn
 11978                                  
 11979                                  ; =============== S U B	R O U T	I N E =======================================
 11980                                  
 11981                                  OPTIMIZE:		; ...
 11982 00008CFB 52                      		push	dx
 11983 00008CFC 53                      		push	bx
 11984 00008CFD 268A4604                		mov	al, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
 11985 00008D01 FEC0                    		inc	al
 11986 00008D03 88C4                    		mov	ah, al
 11987 00008D05 28D0                    		sub	al, dl
 11988 00008D07 89CA                    		mov	dx, cx
 11989 00008D09 B90000                  		mov	cx, 0
 11990                                  
 11991                                  do_norm3:				; ...
 11992 00008D0C E8A607                  		call	UNPACK		; OPTCLUS
 11993 00008D0F 7237                    		jb	short OP_ERR
 11994 00008D11 00C1                    		add	cl, al
 11995 00008D13 80D500                  		adc	ch, 0
 11996 00008D16 39D1                    		cmp	cx, dx
 11997 00008D18 7333                    		jnb	short BLKDON
 11998 00008D1A 88E0                    		mov	al, ah
 11999 00008D1C 43                      		inc	bx
 12000 00008D1D 39DF                    		cmp	di, bx
 12001 00008D1F 74EB                    		jz	short do_norm3	; OPTCLUS
 12002 00008D21 4B                      		dec	bx
 12003                                  
 12004                                  FINCLUS:				; ...
 12005 00008D22 891E[BC05]              		mov	[CLUSNUM], bx
 12006 00008D26 29CA                    		sub	dx, cx
 12007 00008D28 52                      		push	dx
 12008 00008D29 89C8                    		mov	ax, cx
 12009 00008D2B 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
 12010 00008D2F 8B36[B805]              		mov	si, [NEXTADD]
 12011 00008D33 01F0                    		add	ax, si
 12012 00008D35 A3[B805]                		mov	[NEXTADD], ax
 12013 00008D38 58                      		pop	ax
 12014 00008D39 5A                      		pop	dx
 12015 00008D3A 29D3                    		sub	bx, dx
 12016 00008D3C 011E[BA05]              		add	[LASTPOS], bx
 12017 00008D40 5B                      		pop	bx
 12018 00008D41 E81700                  		call	FIGREC
 12019 00008D44 89F3                    		mov	bx, si
 12020 00008D46 F8                      		clc
 12021 00008D47 C3                      		retn
 12022                                  ; ---------------------------------------------------------------------------
 12023                                  
 12024                                  OP_ERR:					; ...
 12025 00008D48 83C404                  		add	sp, 4
 12026 00008D4B F9                      		stc
 12027 00008D4C C3                      		retn
 12028                                  ; ---------------------------------------------------------------------------
 12029                                  
 12030                                  BLKDON:					; ...
 12031 00008D4D 29D1                    		sub	cx, dx
 12032 00008D4F 28CC                    		sub	ah, cl
 12033 00008D51 FECC                    		dec	ah
 12034 00008D53 8826[7305]              		mov	[SECCLUSPOS], ah
 12035 00008D57 89D1                    		mov	cx, dx
 12036 00008D59 EBC7                    		jmp	short FINCLUS
 12037                                  
 12038                                  ; =============== S U B	R O U T	I N E =======================================
 12039                                  
 12040                                  FIGREC:		; ...
 12041 00008D5B 51                      		push	cx
 12042 00008D5C 268A4E05                		mov	cl, [es:bp+5]	; [ES:BP+DPB.CLUSTER_SHIFT]
 12043 00008D60 4A                      		dec	dx
 12044 00008D61 4A                      		dec	dx
 12045 00008D62 36C706[0706]0000        		mov	word [ss:HIGH_SECTOR], 0
 12046 00008D69 08C9                    		or	cl, cl
 12047 00008D6B 740C                    		jz	short noshift
 12048 00008D6D 30ED                    		xor	ch, ch
 12049                                  
 12050                                  rotleft:				; ...
 12051 00008D6F F8                      		clc
 12052 00008D70 D1D2                    		rcl	dx, 1
 12053 00008D72 36D116[0706]            		rcl	word [ss:HIGH_SECTOR], 1
 12054 00008D77 E2F6                    		loop	rotleft
 12055                                  
 12056                                  noshift:				; ...
 12057 00008D79 08DA                    		or	dl, bl
 12058 00008D7B 2603560B                		add	dx, [es:bp+0Bh]	; [ES:BP+DPB.FIRST_SECTOR]
 12059 00008D7F 368316[0706]00          		adc	word [ss:HIGH_SECTOR], 0
 12060 00008D85 59                      		pop	cx
 12061                                  
 12062                                  figrec_retn:				; ...
 12063 00008D86 C3                      		retn
 12064                                  
 12065                                  ; =============== S U B	R O U T	I N E =======================================
 12066                                  
 12067                                  ALLOCATE:		; ...
 12068 00008D87 53                      		push	bx
 12069 00008D88 31DB                    		xor	bx, bx
 12070 00008D8A E82807                  		call	UNPACK
 12071 00008D8D 893E[9605]              		mov	[FATBYT], di
 12072 00008D91 5B                      		pop	bx
 12073 00008D92 72F2                    		jb	short figrec_retn
 12074 00008D94 51                      		push	cx
 12075 00008D95 53                      		push	bx
 12076 00008D96 89DA                    		mov	dx, bx
 12077 00008D98 268B5E1D                		mov	bx, [es:bp+1Dh]	; [ES:BP+DPB.NEXT_FREE]
 12078 00008D9C 83FB02                  		cmp	bx, 2
 12079 00008D9F 7709                    		ja	short FINDFRE
 12080                                  
 12081                                  ads1:					; ...
 12082 00008DA1 26C7461D0200            		mov	word [es:bp+1Dh], 2	; [ES:BP+DPB.NEXT_FREE]
 12083 00008DA7 BB0100                  		mov	bx, 1
 12084                                  
 12085                                  FINDFRE:				; ...
 12086 00008DAA 43                      		inc	bx
 12087 00008DAB 263B5E0D                		cmp	bx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
 12088 00008DAF 775D                    		ja	short ads7
 12089 00008DB1 E80107                  		call	UNPACK
 12090 00008DB4 722F                    		jb	short ads4
 12091 00008DB6 75F2                    		jnz	short FINDFRE
 12092 00008DB8 26895E1D                		mov	[es:bp+1Dh], bx	; [ES:BP+DPB.NEXT_FREE]
 12093 00008DBC 92                      		xchg	ax, dx
 12094 00008DBD BA0100                  		mov	dx, 1
 12095 00008DC0 E84607                  		call	PACK
 12096 00008DC3 7220                    		jb	short ads4
 12097 00008DC5 26837E1FFF              		cmp	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 12098 00008DCA 7404                    		jz	short NO_ALLOC
 12099 00008DCC 26FF4E1F                		dec	word [es:bp+1Fh] ; [ES:BP+DPB.FREE_CNT]
 12100                                  
 12101                                  NO_ALLOC:				; ...
 12102 00008DD0 92                      		xchg	ax, dx
 12103 00008DD1 87DA                    		xchg	bx, dx
 12104 00008DD3 89D0                    		mov	ax, dx
 12105 00008DD5 E83107                  		call	PACK
 12106 00008DD8 720B                    		jb	short ads4
 12107 00008DDA 93                      		xchg	ax, bx
 12108 00008DDB 89DA                    		mov	dx, bx
 12109 00008DDD E2CB                    		loop	FINDFRE
 12110 00008DDF BAFFFF                  		mov	dx, 0FFFFh
 12111 00008DE2 E82407                  		call	PACK
 12112                                  
 12113                                  ads4:					; ...
 12114 00008DE5 5B                      		pop	bx
 12115 00008DE6 59                      		pop	cx
 12116 00008DE7 729D                    		jb	short figrec_retn
 12117 00008DE9 E8C906                  		call	UNPACK
 12118 00008DEC 7298                    		jb	short figrec_retn
 12119 00008DEE E83800                  		call	RESTFATBYT
 12120 00008DF1 7293                    		jb	short figrec_retn
 12121 00008DF3 87DF                    		xchg	bx, di
 12122 00008DF5 09FF                    		or	di, di
 12123 00008DF7 758D                    		jnz	short figrec_retn
 12124 00008DF9 52                      		push	dx
 12125 00008DFA 268A5600                		mov	dl, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 12126 00008DFE 06                      		push	es
 12127 00008DFF C43E[9E05]              		les	di, [THISSFT]
 12128 00008E03 26895D0B                		mov	[es:di+0Bh], bx	; [ES:DI+SF_ENTRY.sf_firclus]
 12129 00008E07 26895D35                		mov	[es:di+35h], bx	; [ES:DI+SF_ENTRY.sf_lstclus]
 12130 00008E0B 07                      		pop	es
 12131 00008E0C 5A                      		pop	dx
 12132 00008E0D C3                      		retn
 12133                                  ; ---------------------------------------------------------------------------
 12134                                  
 12135                                  ads7:					; ...
 12136 00008E0E 26837E1D02              		cmp	word [es:bp+1Dh], 2	; [ES:BP+DPB.NEXT_FREE]
 12137 00008E13 758C                    		jnz	short ads1
 12138 00008E15 5B                      		pop	bx
 12139 00008E16 BAFFFF                  		mov	dx, 0FFFFh
 12140 00008E19 E81F00                  		call	RELBLKS
 12141 00008E1C 58                      		pop	ax
 12142 00008E1D 29C8                    		sub	ax, cx
 12143 00008E1F E80700                  		call	RESTFATBYT
 12144 00008E22 C606[0B06]01            		mov	byte [DISK_FULL], 1
 12145 00008E27 F9                      		stc
 12146 00008E28 C3                      		retn
 12147                                  
 12148                                  ; =============== S U B	R O U T	I N E =======================================
 12149                                  
 12150                                  RESTFATBYT:		; ...
 12151 00008E29 53                      		push	bx
 12152 00008E2A 52                      		push	dx
 12153 00008E2B 57                      		push	di
 12154 00008E2C 31DB                    		xor	bx, bx
 12155 00008E2E 8B16[9605]              		mov	dx, [FATBYT]
 12156 00008E32 E8D406                  		call	PACK
 12157 00008E35 5F                      		pop	di
 12158 00008E36 5A                      		pop	dx
 12159 00008E37 5B                      		pop	bx
 12160                                  
 12161                                  RELEASE_flush:				; ...
 12162 00008E38 C3                      		retn
 12163                                  
 12164                                  ; =============== S U B	R O U T	I N E =======================================
 12165                                  
 12166                                  RELEASE:
 12167 00008E39 31D2                    		xor	dx, dx
 12168                                  
 12169                                  RELBLKS:				; ...
 12170 00008E3B E87706                  		call	UNPACK
 12171 00008E3E 72F8                    		jb	short RELEASE_flush
 12172 00008E40 74F6                    		jz	short RELEASE_flush
 12173 00008E42 89F8                    		mov	ax, di
 12174 00008E44 52                      		push	dx
 12175 00008E45 E8C106                  		call	PACK
 12176 00008E48 5A                      		pop	dx
 12177 00008E49 72ED                    		jb	short RELEASE_flush
 12178 00008E4B 09D2                    		or	dx, dx
 12179 00008E4D 750B                    		jnz	short NO_DEALLOC
 12180 00008E4F 26837E1FFF              		cmp	word [es:bp+1Fh], 0FFFFh
 12181 00008E54 7404                    		jz	short NO_DEALLOC
 12182 00008E56 26FF461F                		inc	word [es:bp+1Fh]
 12183                                  
 12184                                  NO_DEALLOC:				; ...
 12185 00008E5A 89C3                    		mov	bx, ax
 12186 00008E5C 48                      		dec	ax
 12187 00008E5D 74D9                    		jz	short RELEASE_flush
 12188 00008E5F E83C06                  		call	IsEOF
 12189 00008E62 72D5                    		jb	short RELEASE
 12190                                  
 12191                                  RET12:					; ...
 12192 00008E64 C3                      		retn
 12193                                  
 12194                                  ; =============== S U B	R O U T	I N E =======================================
 12195                                  
 12196                                  GETEOF:		; ...
 12197 00008E65 E84D06                  		call	UNPACK
 12198 00008E68 72FA                    		jb	short RET12
 12199 00008E6A 53                      		push	bx
 12200 00008E6B 89FB                    		mov	bx, di
 12201 00008E6D E82E06                  		call	IsEOF
 12202 00008E70 5B                      		pop	bx
 12203 00008E71 73F1                    		jnb	short RET12
 12204 00008E73 89FB                    		mov	bx, di
 12205 00008E75 EBEE                    		jmp	short GETEOF
 12206                                  
 12207                                  ; =============== S U B	R O U T	I N E =======================================
 12208                                  
 12209                                  MAKEFCB:
 12210 00008E77 36C606[4E03]00          		mov	byte [ss:SpaceFlag], 0
 12211 00008E7D 30D2                    		xor	dl, dl
 12212 00008E7F A802                    		test	al, 2		; DRVBIT
 12213 00008E81 7504                    		jnz	short DEFDRV
 12214 00008E83 26C60500                		mov	byte [es:di], 0
 12215                                  
 12216                                  DEFDRV:					; ...
 12217 00008E87 47                      		inc	di
 12218 00008E88 B90800                  		mov	cx, 8
 12219 00008E8B A804                    		test	al, 4		; NAMBIT
 12220 00008E8D 93                      		xchg	ax, bx
 12221 00008E8E B020                    		mov	al, 20h	; ' '
 12222 00008E90 7404                    		jz	short FILLB
 12223 00008E92 01CF                    		add	di, cx
 12224 00008E94 31C9                    		xor	cx, cx
 12225                                  
 12226                                  FILLB:					; ...
 12227 00008E96 F3AA                    		rep stosb
 12228 00008E98 B103                    		mov	cl, 3
 12229 00008E9A F6C308                  		test	bl, 8		; EXTBIT
 12230 00008E9D 7404                    		jz	short FILLB2
 12231 00008E9F 01CF                    		add	di, cx
 12232 00008EA1 31C9                    		xor	cx, cx
 12233                                  
 12234                                  FILLB2:					; ...
 12235 00008EA3 F3AA                    		rep stosb
 12236 00008EA5 91                      		xchg	ax, cx
 12237 00008EA6 AB                      		stosw
 12238 00008EA7 AB                      		stosw
 12239 00008EA8 83EF10                  		sub	di, 16
 12240 00008EAB F6C301                  		test	bl, 1		; SCANSEPARATOR
 12241 00008EAE 7409                    		jz	short SKPSPC
 12242 00008EB0 E88E00                  		call	SCANB
 12243 00008EB3 E82801                  		call	DELIM
 12244 00008EB6 7504                    		jnz	short NOSCAN
 12245 00008EB8 46                      		inc	si
 12246                                  
 12247                                  SKPSPC:					; ...
 12248 00008EB9 E88500                  		call	SCANB
 12249                                  
 12250                                  NOSCAN:					; ...
 12251 00008EBC E8F600                  		call	GETLET
 12252 00008EBF 761E                    		jbe	short NODRV
 12253 00008EC1 803C3A                  		cmp	byte [si], ':'
 12254 00008EC4 7519                    		jnz	short NODRV
 12255 00008EC6 46                      		inc	si
 12256 00008EC7 2C40                    		sub	al, '@'
 12257 00008EC9 760F                    		jbe	short BADDRV
 12258 00008ECB 50                      		push	ax
 12259 00008ECC E8701B                  		call	GetVisDrv
 12260 00008ECF 58                      		pop	ax
 12261 00008ED0 730A                    		jnb	short HAVDRV
 12262 00008ED2 36803E[1006]1A          		cmp	byte [ss:DrvErr], 1Ah ; error_not_DOS_disk
 12263 00008ED8 7402                    		jz	short HAVDRV
 12264                                  
 12265                                  BADDRV:					; ...
 12266 00008EDA B2FF                    		mov	dl, 0FFh	; -1
 12267                                  
 12268                                  HAVDRV:					; ...
 12269 00008EDC AA                      		stosb
 12270 00008EDD 46                      		inc	si
 12271 00008EDE 4F                      		dec	di
 12272                                  
 12273                                  NODRV:					; ...
 12274 00008EDF 4E                      		dec	si
 12275 00008EE0 47                      		inc	di
 12276                                  
 12277                                  NORMSCAN:				; ...
 12278 00008EE1 B90800                  		mov	cx, 8
 12279 00008EE4 E82800                  		call	GETWORD
 12280 00008EE7 803C2E                  		cmp	byte [si], '.'
 12281 00008EEA 7515                    		jnz	short NODOT
 12282 00008EEC 46                      		inc	si
 12283 00008EED 36F606[1206]01          		test	byte [ss:DOS34_FLAG+1], 1 ;	(DBCS_VOLID2>>8)
 12284 00008EF3 7406                    		jz	short VOLOK
 12285 00008EF5 A4                      		movsb
 12286 00008EF6 B90200                  		mov	cx, 2
 12287 00008EF9 EB03                    		jmp	short contvol
 12288                                  ; ---------------------------------------------------------------------------
 12289                                  
 12290                                  VOLOK:					; ...
 12291 00008EFB B90300                  		mov	cx, 3
 12292                                  
 12293                                  contvol:				; ...
 12294 00008EFE E81400                  		call	MUSTGETWORD
 12295                                  
 12296                                  NODOT:					; ...
 12297 00008F01 88D0                    		mov	al, dl
 12298 00008F03 368126[1106]FFFE        		and	word [ss:DOS34_FLAG], 0FEFFh ; ~DBCS_VOLID2
 12299 00008F0A C3                      		retn
 12300                                  
 12301                                  ; ---------------------------------------------------------------------------
 12302                                  ; START	OF FUNCTION CHUNK FOR GETWORD
 12303                                  
 12304                                  NONAM:					; ...
 12305 00008F0B 01CF                    		add	di, cx
 12306 00008F0D 4E                      		dec	si
 12307 00008F0E C3                      		retn
 12308                                  ; END OF FUNCTION CHUNK	FOR GETWORD
 12309                                  
 12310                                  ; =============== S U B	R O U T	I N E =======================================
 12311                                  
 12312                                  GETWORD:
 12313                                  
 12314                                  ; FUNCTION CHUNK AT 8F0B SIZE 00000004 BYTES
 12315                                  
 12316 00008F0F E8A300                  		call	GETLET
 12317 00008F12 76F7                    		jbe	short NONAM
 12318 00008F14 4E                      		dec	si
 12319                                  
 12320                                  MUSTGETWORD:				; ...
 12321 00008F15 E89D00                  		call	GETLET
 12322 00008F18 750C                    		jnz	short MustCheckCX
 12323 00008F1A 36F606[4E03]FF          		test	byte [ss:SpaceFlag], 0FFh
 12324 00008F20 7419                    		jz	short FILLNAM
 12325 00008F22 3C20                    		cmp	al, 20h	; ' '
 12326 00008F24 7515                    		jnz	short FILLNAM
 12327                                  
 12328                                  MustCheckCX:				; ...
 12329 00008F26 E3ED                    		jcxz	MUSTGETWORD
 12330 00008F28 49                      		dec	cx
 12331 00008F29 3C2A                    		cmp	al, 2Ah	; '*'
 12332 00008F2B 7504                    		jnz	short NOSTAR
 12333 00008F2D B03F                    		mov	al, 3Fh	; '?'
 12334 00008F2F F3AA                    		rep stosb
 12335                                  
 12336                                  NOSTAR:					; ...
 12337 00008F31 AA                      		stosb
 12338 00008F32 3C3F                    		cmp	al, 3Fh	; '?'
 12339 00008F34 75DF                    		jnz	short MUSTGETWORD
 12340 00008F36 80CA01                  		or	dl, 1
 12341 00008F39 EBDA                    		jmp	short MUSTGETWORD
 12342                                  ; ---------------------------------------------------------------------------
 12343                                  
 12344                                  FILLNAM:				; ...
 12345 00008F3B B020                    		mov	al, 20h	; ' '
 12346 00008F3D F3AA                    		rep stosb
 12347 00008F3F 4E                      		dec	si
 12348 00008F40 C3                      		retn
 12349                                  
 12350                                  ; =============== S U B	R O U T	I N E =======================================
 12351                                  
 12352                                  SCANB:		; ...
 12353 00008F41 AC                      		lodsb
 12354 00008F42 E8A100                  		call	SPCHK
 12355 00008F45 74FA                    		jz	short SCANB
 12356 00008F47 4E                      		dec	si
 12357                                  
 12358                                  scanb_retn:				; ...
 12359 00008F48 C3                      		retn
 12360                                  
 12361                                  ; =============== S U B	R O U T	I N E =======================================
 12362                                  
 12363                                  NameTrans:		; ...
 12364 00008F49 36C606[4E03]01          		mov	byte [ss:SpaceFlag], 1
 12365 00008F4F 16                      		push	ss
 12366 00008F50 07                      		pop	es
 12367 00008F51 BF[4B05]                		mov	di, NAME1
 12368 00008F54 57                      		push	di
 12369 00008F55 B82020                  		mov	ax, 2020h	; '  '
 12370 00008F58 B90500                  		mov	cx, 5
 12371 00008F5B AA                      		stosb
 12372 00008F5C F3AB                    		rep stosw
 12373 00008F5E 30C0                    		xor	al, al
 12374 00008F60 88C2                    		mov	dl, al
 12375 00008F62 AA                      		stosb
 12376 00008F63 5F                      		pop	di
 12377 00008F64 E87AFF                  		call	NORMSCAN
 12378 00008F67 36803E[4B05]E5          		cmp	byte [ss:NAME1], 0E5h
 12379 00008F6D 75D9                    		jnz	short scanb_retn
 12380 00008F6F 36C606[4B05]05          		mov	byte [ss:NAME1], 5
 12381 00008F75 C3                      		retn
 12382                                  
 12383                                  ; ---------------------------------------------------------------------------
 12384 00008F76 6666666606666666        CharType	db 66h,66h,66h,66h, 6,66h,66h,66h ; ...
 12385 00008F7E 6666666666666666        		db 66h,66h,66h,66h,66h,66h,66h,66h
 12386 00008F86 F8F6FFFFFF4FF46E        		db 0F8h,0F6h,0FFh,0FFh,0FFh,4Fh,0F4h,6Eh
 12387 00008F8E FFFFFFFFFF4444F4        		db 0FFh,0FFh,0FFh,0FFh,0FFh,44h,44h,0F4h
 12388 00008F96 FFFFFFFFFFFFFFFF        		db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
 12389 00008F9E FFFFFFFFFF6F66FF        		db 0FFh,0FFh,0FFh,0FFh,0FFh,6Fh,66h,0FFh
 12390 00008FA6 FFFFFFFFFFFFFFFF        		db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
 12391 00008FAE FFFFFFFFFFFFF4          		db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0F4h
 12392                                  ; ---------------------------------------------------------------------------
 12393                                  
 12394                                  GETLET:					; ...
 12395 00008FB5 AC                      		lodsb
 12396                                  
 12397                                  ; =============== S U B	R O U T	I N E =======================================
 12398                                  
 12399                                  UCase:		; ...
 12400 00008FB6 53                      		push	bx
 12401 00008FB7 BB[310B]                		mov	bx, FILE_UCASE_TAB_2 ; FILE_UCASE_TAB+2
 12402                                  
 12403                                  gl_0:					; ...
 12404 00008FBA 3C61                    		cmp	al, 'a'         ; 61h
 12405 00008FBC 7214                    		jb	short gl_2
 12406 00008FBE 3C7A                    		cmp	al, 'z'         ; 7Ah
 12407 00008FC0 7702                    		ja	short gl_1
 12408 00008FC2 2C20                    		sub	al, 20h
 12409                                  
 12410                                  gl_1:					; ...
 12411 00008FC4 3C80                    		cmp	al, 80h
 12412 00008FC6 720A                    		jb	short gl_2
 12413 00008FC8 2C80                    		sub	al, 80h
 12414 00008FCA 1E                      		push	ds
 12415 00008FCB 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 12416 00008FD0 D7                      		xlat
 12417 00008FD1 1F                      		pop	ds
 12418                                  
 12419                                  gl_2:					; ...
 12420 00008FD2 50                      		push	ax
 12421 00008FD3 E81800                  		call	GetCharType
 12422 00008FD6 A801                    		test	al, 1		; FCHK
 12423 00008FD8 58                      		pop	ax
 12424 00008FD9 5B                      		pop	bx
 12425 00008FDA C3                      		retn
 12426                                  
 12427                                  ; =============== S U B	R O U T	I N E =======================================
 12428                                  
 12429                                   GETLET3:
 12430 00008FDB 53                      		push	bx
 12431 00008FDC EBDC                    		jmp	short gl_0
 12432                                  
 12433                                  ; =============== S U B	R O U T	I N E =======================================
 12434                                  
 12435                                   DELIM:		; ...
 12436 00008FDE 50                      		push	ax
 12437 00008FDF E80C00                  		call	GetCharType
 12438 00008FE2 A802                    		test	al, 2		; FDELIM
 12439 00008FE4 58                      		pop	ax
 12440 00008FE5 C3                      		retn
 12441                                  
 12442                                  ; =============== S U B	R O U T	I N E =======================================
 12443                                  
 12444                                   SPCHK:		; ...
 12445 00008FE6 50                      		push	ax
 12446 00008FE7 E80400                  		call	GetCharType
 12447 00008FEA A804                    		test	al, 4		; FSPCHK
 12448 00008FEC 58                      		pop	ax
 12449 00008FED C3                      		retn
 12450                                  
 12451                                  ; =============== S U B	R O U T	I N E =======================================
 12452                                  
 12453                                  GetCharType:	; ...
 12454 00008FEE 3C7E                    		cmp	al, 7Eh	; '~'   ; CharType_last
 12455 00008FF0 7316                    		jnb	short gct_90
 12456 00008FF2 53                      		push	bx
 12457 00008FF3 BB[768F]                		mov	bx, CharType
 12458 00008FF6 D0E8                    		shr	al, 1
 12459                                  		;xlat	byte [cs:bx] ; cs xlat
 12460 00008FF8 2E                      		cs
 12461 00008FF9 D7                      		xlat
 12462 00008FFA 5B                      		pop	bx
 12463 00008FFB 7308                    		jnb	short gct_80
 12464 00008FFD D0E8                    		shr	al, 1
 12465 00008FFF D0E8                    		shr	al, 1
 12466 00009001 D0E8                    		shr	al, 1
 12467 00009003 D0E8                    		shr	al, 1
 12468                                  
 12469                                  gct_80:					; ...
 12470 00009005 240F                    		and	al, 0Fh
 12471 00009007 C3                      		retn
 12472                                  ; ---------------------------------------------------------------------------
 12473                                  
 12474                                  gct_90:					; ...
 12475 00009008 B00F                    		mov	al, 0Fh
 12476 0000900A C3                      		retn
 12477                                  
 12478                                  ; =============== S U B	R O U T	I N E =======================================
 12479                                  
 12480                                  PATHCHRCMP:		; ...
 12481 0000900B 3C2F                    		cmp	al, 2Fh	; '/'
 12482 0000900D 7606                    		jbe	short PathRet
 12483 0000900F 3C5C                    		cmp	al, 5Ch	; '\'
 12484 00009011 C3                      		retn
 12485                                  ; ---------------------------------------------------------------------------
 12486                                  
 12487                                  GotFor:					; ...
 12488 00009012 B05C                    		mov	al, 5Ch	; '\'
 12489 00009014 C3                      		retn
 12490                                  ; ---------------------------------------------------------------------------
 12491                                  
 12492                                  PathRet:				; ...
 12493 00009015 74FB                    		jz	short GotFor
 12494 00009017 C3                      		retn
 12495                                  
 12496                                  ; ---------------------------------------------------------------------------
 12497 00009018 [E710]                  LowInt23Addr	dw LowInt23	; ...
 12498 0000901A 0000                    LowInt23Seg	dw 0			; ...
 12499 0000901C [FB10]                  LowInt24Addr	dw LowInt24	; ...
 12500 0000901E 0000                    LowInt24Seg	dw 0			; ...
 12501 00009020 [0F11]                  LowInt28Addr	dw LowInt28	; ...
 12502 00009022 0000                    LowInt28Seg	dw 0			; ...
 12503                                  
 12504                                  ; =============== S U B	R O U T	I N E =======================================
 12505                                  
 12506                                  DSKSTATCHK:		; ...
 12507 00009024 36803E[2103]01          		cmp	byte [ss:INDOS], 1
 12508 0000902A 7401                    		jz	short _RET37
 12509 0000902C C3                      		retn
 12510                                  ; ---------------------------------------------------------------------------
 12511                                  
 12512                                  _RET37:					; ...
 12513 0000902D 51                      		push	cx
 12514 0000902E 06                      		push	es
 12515 0000902F 53                      		push	bx
 12516 00009030 1E                      		push	ds
 12517 00009031 56                      		push	si
 12518 00009032 8CD3                    		mov	bx, ss
 12519 00009034 8EC3                    		mov	es, bx
 12520 00009036 8EDB                    		mov	ds, bx
 12521 00009038 36C606[9403]05          		mov	byte [ss:DSKSTCOM], 5 ; DEVRDND
 12522 0000903E 36C606[9203]0E          		mov	byte [ss:DSKSTCALL], 14 ; DRDNDHL
 12523 00009044 36C706[9503]0000        		mov	word [ss:DSKSTST], 0
 12524 0000904B BB[9203]                		mov	bx, DSKSTCALL
 12525 0000904E 36C536[3200]            		lds	si, [ss:BCON]
 12526 00009053 E85CF5                  		call	DEVIOCALL2
 12527 00009056 36F606[9603]02          		test	byte [ss:DSKSTST+1], 2 ; (STBUI>>8)
 12528 0000905C 7408                    		jz	short _GotCh
 12529 0000905E 30C0                    		xor	al, al
 12530                                  
 12531                                  RET36:					; ...
 12532 00009060 5E                      		pop	si
 12533 00009061 1F                      		pop	ds
 12534 00009062 5B                      		pop	bx
 12535 00009063 07                      		pop	es
 12536 00009064 59                      		pop	cx
 12537 00009065 C3                      		retn
 12538                                  ; ---------------------------------------------------------------------------
 12539                                  
 12540                                  _GotCh:					; ...
 12541 00009066 36A0[9F03]              		mov	al, [ss:DSKCHRET]
 12542 0000906A 3C03                    		cmp	al, 3		; "C"-"@"
 12543 0000906C 75F2                    		jnz	short RET36
 12544 0000906E 36C606[9403]04          		mov	byte [ss:DSKSTCOM], 4 ; DEVRD
 12545 00009074 36C606[9203]16          		mov	byte [ss:DSKSTCALL], 22 ; DRDWRHL
 12546 0000907A 36880E[9F03]            		mov	[ss:DSKCHRET], cl
 12547 0000907F 36C706[9503]0000        		mov	word [ss:DSKSTST], 0
 12548 00009086 36C706[A403]0100        		mov	word [ss:DSKSTCNT], 1
 12549 0000908D E822F5                  		call	DEVIOCALL2
 12550 00009090 5E                      		pop	si
 12551 00009091 1F                      		pop	ds
 12552 00009092 5B                      		pop	bx
 12553 00009093 07                      		pop	es
 12554 00009094 59                      		pop	cx
 12555 00009095 E9D000                  		jmp	CNTCHAND
 12556                                  
 12557                                  ; ---------------------------------------------------------------------------
 12558                                  
 12559                                  NOSTOP:					; ...
 12560 00009098 3C10                    		cmp	al, 10h		; "P"-"@"
 12561 0000909A 7509                    		jnz	short check_next
 12562 0000909C 36803E[900D]00          		cmp	byte [ss:SCAN_FLAG], 0
 12563 000090A2 7406                    		jz	short INCHKJ
 12564 000090A4 C3                      		retn
 12565                                  ; ---------------------------------------------------------------------------
 12566                                  
 12567                                  check_next:				; ...
 12568 000090A5 3C03                    		cmp	al, 3		; "C"-"@"
 12569 000090A7 7401                    		jz	short INCHKJ
 12570                                  
 12571                                  check_end:				; ...
 12572 000090A9 C3                      		retn
 12573                                  ; ---------------------------------------------------------------------------
 12574                                  
 12575                                  INCHKJ:					; ...
 12576 000090AA E9A500                  		jmp	INCHK
 12577                                  
 12578                                  ; =============== S U B	R O U T	I N E =======================================
 12579                                  
 12580                                  SPOOLINT:
 12581 000090AD 9C                      		pushf
 12582 000090AE 36803E[5803]00          		cmp	byte [ss:IDLEINT], 0
 12583 000090B4 7423                    		jz	short POPFRET
 12584 000090B6 36803E[2003]00          		cmp	byte [ss:ERRORMODE], 0
 12585 000090BC 751B                    		jnz	short POPFRET
 12586 000090BE 36FF36[5803]            		push	word [ss:IDLEINT]
 12587 000090C3 36803E[1112]00          		cmp	byte [ss:DosHasHMA], 0
 12588 000090C9 7504                    		jnz	short do_low_int28
 12589 000090CB CD28                    		int	28h		; DOS 2+ internal - KEYBOARD BUSY LOOP
 12590 000090CD EB05                    		jmp	short spool_ret_addr
 12591                                  ; ---------------------------------------------------------------------------
 12592                                  
 12593                                  do_low_int28:				; ...
 12594                                  		;call	dword [cs:LowInt28Addr] ; call far [cs:LowInt28Addr]
 12595 000090CF 2EFF1E[2090]            		call	far [cs:LowInt28Addr]
 12596                                  spool_ret_addr:				; ...
 12597 000090D4 368F06[5803]            		pop	word [ss:IDLEINT]
 12598                                  
 12599                                  POPFRET:				; ...
 12600 000090D9 9D                      		popf
 12601                                  
 12602                                  _RET18:					; ...
 12603 000090DA C3                      		retn
 12604                                  
 12605                                  ; ---------------------------------------------------------------------------
 12606                                  
 12607                                  STATCHK:				; ...
 12608 000090DB E846FF                  		call	DSKSTATCHK
 12609 000090DE 53                      		push	bx
 12610 000090DF 31DB                    		xor	bx, bx
 12611 000090E1 E88BE4                  		call	GET_IO_SFT
 12612 000090E4 5B                      		pop	bx
 12613 000090E5 72F3                    		jb	short _RET18
 12614 000090E7 B401                    		mov	ah, 1
 12615 000090E9 E8ECF2                  		call	IOFUNC
 12616 000090EC 74BF                    		jz	short SPOOLINT
 12617 000090EE 3C13                    		cmp	al, 13h		; 'S'-'@'
 12618 000090F0 75A6                    		jnz	short NOSTOP
 12619 000090F2 36803E[900D]00          		cmp	byte [ss:SCAN_FLAG], 0
 12620 000090F8 75AF                    		jnz	short check_end
 12621 000090FA 30E4                    		xor	ah, ah
 12622 000090FC E8D9F2                  		call	IOFUNC
 12623 000090FF EB4A                    		jmp	short PAUSOSTRT
 12624                                  ; ---------------------------------------------------------------------------
 12625                                  
 12626                                  PRINT_ON_OFF:				; ...
 12627 00009101 36F616[FE02]            		not	byte [ss:PFLAG]
 12628 00009106 53                      		push	bx
 12629 00009107 BB0400                  		mov	bx, 4
 12630 0000910A E862E4                  		call	GET_IO_SFT
 12631 0000910D 5B                      		pop	bx
 12632 0000910E 72CA                    		jb	short _RET18
 12633 00009110 06                      		push	es
 12634 00009111 57                      		push	di
 12635 00009112 1E                      		push	ds
 12636 00009113 07                      		pop	es
 12637 00009114 89F7                    		mov	di, si
 12638 00009116 26F6450608              		test	byte [es:di+6], 8 ;	[ES:DI+SF_ENTRY.sf_flags+1],
 12639                                  					; (sf_net_spool>>8)
 12640 0000911B 7418                    		jz	short NORM_PR
 12641 0000911D 50                      		push	ax
 12642 0000911E B82611                  		mov	ax, 1126h
 12643 00009121 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - ???
 12644                                  					; Return: CF set on error, AX =	error code
 12645                                  					; STACK	unchanged
 12646 00009123 58                      		pop	ax
 12647 00009124 730F                    		jnb	short NORM_PR
 12648 00009126 36C606[FE02]00          		mov	byte [ss:PFLAG], 0
 12649 0000912C 50                      		push	ax
 12650 0000912D B82411                  		mov	ax, 1124h
 12651 00009130 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - ???
 12652                                  					; ES:DI	-> SFT,	SS = DOS CS
 12653 00009132 58                      		pop	ax
 12654 00009133 EB10                    		jmp	short RETP6
 12655                                  ; ---------------------------------------------------------------------------
 12656                                  
 12657                                  NORM_PR:				; ...
 12658 00009135 36803E[FE02]00          		cmp	byte [ss:PFLAG], 0
 12659 0000913B 7505                    		jnz	short PRNOPN
 12660 0000913D E8F6F3                  		call	DEV_CLOSE_SFT
 12661 00009140 EB03                    		jmp	short RETP6
 12662                                  ; ---------------------------------------------------------------------------
 12663                                  
 12664                                  PRNOPN:					; ...
 12665 00009142 E8E9F3                  		call	DEV_OPEN_SFT
 12666                                  
 12667                                  RETP6:					; ...
 12668 00009145 5F                      		pop	di
 12669 00009146 07                      		pop	es
 12670                                  
 12671                                  STATCHK_RETN:				; ...
 12672 00009147 C3                      		retn
 12673                                  ; ---------------------------------------------------------------------------
 12674                                  
 12675                                  PAUSOLP:				; ...
 12676 00009148 E862FF                  		call	SPOOLINT
 12677                                  
 12678                                  PAUSOSTRT:				; ...
 12679 0000914B B401                    		mov	ah, 1
 12680 0000914D E888F2                  		call	IOFUNC
 12681 00009150 74F6                    		jz	short PAUSOLP
 12682                                  
 12683                                  INCHK:					; ...
 12684 00009152 53                      		push	bx
 12685 00009153 31DB                    		xor	bx, bx
 12686 00009155 E817E4                  		call	GET_IO_SFT
 12687 00009158 5B                      		pop	bx
 12688 00009159 72EC                    		jb	short STATCHK_RETN
 12689 0000915B 30E4                    		xor	ah, ah
 12690 0000915D E878F2                  		call	IOFUNC
 12691 00009160 3C10                    		cmp	al, 10h		; "P"-"@"
 12692 00009162 749D                    		jz	short PRINT_ON_OFF ; PRINTON
 12693 00009164 3C03                    		cmp	al, 3		; "C"-"@"
 12694 00009166 75DF                    		jnz	short STATCHK_RETN
 12695                                  
 12696                                  CNTCHAND:				; ...
 12697 00009168 36F606[1206]02          		test	byte [ss:DOS34_FLAG+1], 2 ; (CTRL_BREAK_FLAG>>8)
 12698 0000916E 7508                    		jnz	short around_deadlock
 12699 00009170 B003                    		mov	al, 3
 12700 00009172 E8F9C3                  		call	BUFOUT
 12701 00009175 E886C2                  		call	CRLF
 12702                                  
 12703                                  around_deadlock:			; ...
 12704 00009178 16                      		push	ss
 12705 00009179 1F                      		pop	ds
 12706 0000917A 803E[5703]00            		cmp	byte [CONSWAP], 0
 12707 0000917F 7403                    		jz	short NOSWAP
 12708 00009181 E84BE0                  		call	SWAPBACK
 12709                                  
 12710                                  NOSWAP:					; ...
 12711 00009184 FA                      		cli
 12712 00009185 8E16[8605]              		mov	ss, [USER_SS]
 12713 00009189 8B26[8405]              		mov	sp, [USER_SP]
 12714 0000918D E8AFB0                  		call	restore_world
 12715 00009190 07                      		pop	es
 12716 00009191 1E                      		push	ds
 12717 00009192 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 12718 00009197 C606[2103]00            		mov	byte [INDOS], 0
 12719 0000919C C606[2003]00            		mov	byte [ERRORMODE], 0
 12720 000091A1 8926[3203]              		mov	[ConC_Spsave], sp
 12721 000091A5 8306[3203]02            		add	word [ConC_Spsave], 2
 12722 000091AA 803E[1112]00            		cmp	byte [DosHasHMA], 0
 12723 000091AF 1F                      		pop	ds
 12724 000091B0 7505                    		jnz	short do_low_int23
 12725 000091B2 F8                      		clc
 12726 000091B3 CD23                    		int	23h		; DOS -	CONTROL	"C" EXIT ADDRESS
 12727                                  					; Return: return via RETF 2 with CF set
 12728                                  					; DOS will abort program with errorlevel 0
 12729                                  					; else
 12730                                  					; interrupted DOS call continues
 12731 000091B5 EB06                    		jmp	short ctrlc_ret_addr
 12732                                  ; ---------------------------------------------------------------------------
 12733                                  
 12734                                  do_low_int23:				; ...
 12735 000091B7 F8                      		clc
 12736                                  		;call	dword [cs:LowInt23Addr] ; call far [cs:LowInt23Addr]
 12737 000091B8 2EFF1E[1890]            		call	far [cs:LowInt23Addr]
 12738                                  ctrlc_ret_addr:				; ...
 12739 000091BD FA                      		cli
 12740 000091BE 50                      		push	ax
 12741 000091BF 8CD8                    		mov	ax, ds
 12742 000091C1 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 12743 000091C6 A3[0A0D]                		mov	[TEMPSEG], ax
 12744 000091C9 58                      		pop	ax
 12745 000091CA A3[3A03]                		mov	[USER_IN_AX], ax
 12746 000091CD 9C                      		pushf
 12747 000091CE 58                      		pop	ax
 12748 000091CF 3B26[3203]              		cmp	sp, [ConC_Spsave]
 12749 000091D3 750A                    		jnz	short ctrlc_try_new
 12750                                  
 12751                                  ctrlc_repeat:				; ...
 12752 000091D5 A1[3A03]                		mov	ax, [USER_IN_AX]
 12753 000091D8 8E1E[0A0D]              		mov	ds, [TEMPSEG]
 12754                                  
 12755                                  COMMANDJ:				; ...
 12756 000091DC E90CAF                  		jmp	COMMAND
 12757                                  ; ---------------------------------------------------------------------------
 12758                                  
 12759                                  ctrlc_try_new:				; ...
 12760 000091DF 83C402                  		add	sp, 2
 12761 000091E2 A801                    		test	al, 1		; f_Carry
 12762 000091E4 74EF                    		jz	short ctrlc_repeat
 12763 000091E6 8E1E[0A0D]              		mov	ds, [TEMPSEG]
 12764                                  
 12765                                  ctrlc_abort:				; ...
 12766 000091EA B8004C                  		mov	ax, 4C00h	; (EXIT<<8)+0
 12767 000091ED 1E                      		push	ds
 12768 000091EE 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 12769 000091F3 C606[4D03]FF            		mov	byte [DidCTRLC], 0FFh ; -1
 12770 000091F8 1F                      		pop	ds
 12771 000091F9 EBE1                    		jmp	short COMMANDJ
 12772                                  ; ---------------------------------------------------------------------------
 12773                                  
 12774                                  DIVOV:					; ...
 12775 000091FB BE[6B47]                		mov	si, DIVMES	; "\r\nDivide overflow\r\n"
 12776 000091FE 2E8B1E[7E47]            		mov	bx, [cs:DivMesLen]
 12777 00009203 2E8E16[D73D]            		mov	ss, [cs:DosDSeg]
 12778 00009208 BC[A007]                		mov	sp, AUXSTACK
 12779 0000920B E80200                  		call	_OUTMES		; RealDivOv
 12780 0000920E EBDA                    		jmp	short ctrlc_abort
 12781                                  
 12782                                  ; =============== S U B	R O U T	I N E =======================================
 12783                                  
 12784                                  _OUTMES:
 12785 00009210 16                      		push	ss
 12786 00009211 07                      		pop	es
 12787 00009212 16                      		push	ss
 12788 00009213 1F                      		pop	ds
 12789 00009214 C606[9403]08            		mov	byte [DSKSTCOM], 8 ; DEVWRT
 12790 00009219 C606[9203]16            		mov	byte [DSKSTCALL], 16h ; DRDWRHL
 12791 0000921E C706[9503]0000          		mov	word [DSKSTST], 0
 12792 00009224 891E[A403]              		mov	word [DSKSTCNT], bx
 12793 00009228 BB[9203]                		mov	bx, DSKSTCALL
 12794 0000922B 8936[A003]              		mov	[DSKCHRET_1], si ; [DSKCHRET+1]
 12795 0000922F 8C0E[A203]              		mov	[DSKCHRET_3], cs ; [DSKCHRET+3]
 12796 00009233 C536[3200]              		lds	si, [BCON]
 12797 00009237 E878F3                  		call	DEVIOCALL2
 12798 0000923A 26C706[A003][BC03]      		mov	word [es:DSKCHRET_1], DEVIOBUF ; [ES:DSKCHRET+1]
 12799 00009241 26C706[A403]0100        		mov	word [es:DSKSTCNT], 1
 12800 00009248 C3                      		retn
 12801                                  
 12802                                  ; =============== S U B	R O U T	I N E =======================================
 12803                                  
 12804                                  CHARHARD:		; ...
 12805 00009249 36803E[2003]00          		cmp	byte [ss:ERRORMODE], 0
 12806 0000924F 750B                    		jnz	short chard1
 12807 00009251 80CC10                  		or	ah, 10h
 12808 00009254 36F606[FE02]FF          		test	byte [ss:PFLAG], 0FFh ; -1
 12809 0000925A 7503                    		jnz	short ctrlp
 12810                                  
 12811                                  chard1:					; ...
 12812 0000925C 80CC38                  		or	ah, 38h		; Allowed_IGNORE+Allowed_RETRY+Allowed_FAIL
 12813                                  
 12814                                  ctrlp:					; ...
 12815 0000925F 368826[4B03]            		mov	[ss:ALLOWED], ah
 12816 00009264 368C06[8205]            		mov	word [ss:EXITHOLD+2], es
 12817 00009269 36892E[8005]            		mov	word [ss:EXITHOLD], bp
 12818 0000926E 56                      		push	si
 12819 0000926F 81E7FF00                		and	di, 0FFh	; STECODE
 12820 00009273 8CDD                    		mov	bp, ds
 12821 00009275 E86400                  		call	FATALC
 12822 00009278 5E                      		pop	si
 12823 00009279 C3                      		retn
 12824                                  
 12825                                  ; ---------------------------------------------------------------------------
 12826                                  
 12827                                  HARDERR:				; ...
 12828 0000927A 97                      		xchg	ax, di
 12829 0000927B 81E7FF00                		and	di, 0FFh	; STECODE
 12830 0000927F 83FF00                  		cmp	di, 0		; error_I24_write_protect
 12831 00009282 750A                    		jnz	short NOSETWRPERR
 12832 00009284 50                      		push	ax
 12833 00009285 268A4600                		mov	al, [es:bp+0]
 12834 00009289 36A2[2203]              		mov	[ss:WPERR], al
 12835 0000928D 58                      		pop	ax
 12836                                  
 12837                                  NOSETWRPERR:				; ...
 12838 0000928E 29C8                    		sub	ax, cx
 12839 00009290 01C2                    		add	dx, ax
 12840 00009292 52                      		push	dx
 12841 00009293 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
 12842 00009297 5A                      		pop	dx
 12843 00009298 01C3                    		add	bx, ax
 12844 0000929A 30E4                    		xor	ah, ah
 12845 0000929C 263B5606                		cmp	dx, [es:bp+6]	; [ES:BP+DPB.FIRST_FAT]
 12846 000092A0 721A                    		jb	short ERRINT
 12847 000092A2 FEC4                    		inc	ah
 12848 000092A4 263B5611                		cmp	dx, [es:bp+11h]	; [ES:BP+DPB.DIR_SECTOR]
 12849 000092A8 7308                    		jnb	short TESTDIR
 12850 000092AA 26C7461FFFFF            		mov	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 12851 000092B0 EB0A                    		jmp	short ERRINT
 12852                                  ; ---------------------------------------------------------------------------
 12853                                  
 12854                                  TESTDIR:				; ...
 12855 000092B2 FEC4                    		inc	ah
 12856 000092B4 263B560B                		cmp	dx, [es:bp+0Bh]	; [ES:BP+DPB.FIRST_SECTOR]
 12857 000092B8 7202                    		jb	short ERRINT
 12858 000092BA FEC4                    		inc	ah
 12859                                  
 12860                                  ERRINT:					; ...
 12861 000092BC D0E4                    		shl	ah, 1
 12862 000092BE 360A26[7505]            		or	ah, [ss:READOP]
 12863 000092C3 360A26[4B03]            		or	ah, [ss:ALLOWED]
 12864                                  
 12865                                  FATAL:					; ...
 12866 000092C8 268A4600                		mov	al, [es:bp+0]
 12867                                  
 12868                                  FATAL1:					; ...
 12869 000092CC 368C06[8205]            		mov	word [ss:EXITHOLD+2], es
 12870 000092D1 36892E[8005]            		mov	word [ss:EXITHOLD], bp
 12871 000092D6 26C47613                		les	si, [es:bp+13h]	; [ES:BP+DPB.DRIVER_ADDR]
 12872 000092DA 8CC5                    		mov	bp, es
 12873                                  
 12874                                  FATALC:					; ...
 12875 000092DC E89801                  		call	SET_I24_EXTENDED_ERROR
 12876 000092DF 83FF0C                  		cmp	di, 0Ch		; error_I24_gen_failure
 12877 000092E2 7603                    		jbe	short NET_I24_ENTRY
 12878 000092E4 BF0C00                  		mov	di, 0Ch
 12879                                  
 12880                                  NET_I24_ENTRY:				; ...
 12881 000092E7 36803E[2003]00          		cmp	byte [ss:ERRORMODE], 0 ; GOT_RIGHT_CODE
 12882 000092ED 7404                    		jz	short NoSetFail
 12883 000092EF B003                    		mov	al, 3
 12884 000092F1 EB6C                    		jmp	short FailRet
 12885                                  ; ---------------------------------------------------------------------------
 12886                                  
 12887                                  NoSetFail:				; ...
 12888 000092F3 368926[8805]            		mov	[ss:CONTSTK], sp
 12889 000092F8 16                      		push	ss
 12890 000092F9 07                      		pop	es
 12891 000092FA 36833E[AA05]FF          		cmp	word [ss:SFN], 0FFFFh ; -1
 12892 00009300 740C                    		jz	short _NoFree
 12893 00009302 1E                      		push	ds
 12894 00009303 56                      		push	si
 12895 00009304 36C536[AE05]            		lds	si, [ss:PJFN]
 12896 00009309 C604FF                  		mov	byte [si], 0FFh
 12897 0000930C 5E                      		pop	si
 12898 0000930D 1F                      		pop	ds
 12899                                  
 12900                                  _NoFree:				; ...
 12901 0000930E FA                      		cli
 12902 0000930F 36FE06[2003]            		inc	byte [ss:ERRORMODE]
 12903 00009314 36FE0E[2103]            		dec	byte [ss:INDOS]
 12904 00009319 36F606[F605]02          		test	byte [ss:EXTOPEN_ON], 2 ; EXT_OPEN_I24_OFF
 12905 0000931F 7404                    		jz	short i24yes
 12906 00009321 B003                    		mov	al, 3
 12907 00009323 EB29                    		jmp	short passi24
 12908                                  ; ---------------------------------------------------------------------------
 12909                                  
 12910                                  i24yes:					; ...
 12911 00009325 368E16[8605]            		mov	ss, [ss:USER_SS]
 12912 0000932A 268B26[8405]            		mov	sp, [es:USER_SP]
 12913 0000932F 26803E[1112]00          		cmp	byte [es:DosHasHMA], 0
 12914 00009335 7504                    		jnz	short do_low_int24
 12915 00009337 CD24                    		int	24h		; DOS -	FATAL ERROR HANDLER ADDRESS
 12916                                  					; Automatically	called upon detection of unrecoverable I/O error.
 12917 00009339 EB05                    		jmp	short criterr_ret_addr
 12918                                  ; ---------------------------------------------------------------------------
 12919                                  
 12920                                  do_low_int24:				; ...
 12921                                  		;call	dword [cs:LowInt24Addr] ; call far [cs:LowInt24Addr]
 12922 0000933B 2EFF1E[1C90]            		call	far [cs:LowInt24Addr]
 12923                                  criterr_ret_addr:			; ...
 12924 00009340 268926[8405]            		mov	[es:USER_SP], sp
 12925 00009345 268C16[8605]            		mov	[es:USER_SS], ss
 12926 0000934A 8CC5                    		mov	bp, es
 12927 0000934C 8ED5                    		mov	ss, bp
 12928                                  
 12929                                  passi24:				; ...
 12930 0000934E 368B26[8805]            		mov	sp, [ss:CONTSTK]
 12931 00009353 36FE06[2103]            		inc	byte [ss:INDOS]
 12932 00009358 36C606[2003]00          		mov	byte [ss:ERRORMODE], 0
 12933 0000935E FB                      		sti
 12934                                  
 12935                                  FailRet:				; ...
 12936 0000935F 36C42E[8005]            		les	bp, [ss:EXITHOLD]
 12937 00009364 3C01                    		cmp	al, 1
 12938 00009366 723E                    		jb	short CheckIgnore
 12939 00009368 7446                    		jz	short CheckRetry
 12940 0000936A 3C03                    		cmp	al, 3
 12941 0000936C 754C                    		jnz	short DoAbort
 12942 0000936E 36F606[4B03]08          		test	byte [ss:ALLOWED], 8
 12943 00009374 7444                    		jz	short DoAbort
 12944                                  
 12945                                  DoFail:					; ...
 12946 00009376 B003                    		mov	al, 3
 12947 00009378 36F606[F605]02          		test	byte [ss:EXTOPEN_ON], 2 ; EXT_OPEN_I24_OFF
 12948 0000937E 7505                    		jnz	short CleanUp
 12949 00009380 36FE06[4A03]            		inc	byte [ss:FAILERR]
 12950                                  
 12951                                  CleanUp:				; ...
 12952 00009385 36C606[2203]FF          		mov	byte [ss:WPERR], 0FFh ; -1
 12953 0000938B 36833E[AA05]FF          		cmp	word [ss:SFN], 0FFFFh ; -1
 12954 00009391 7501                    		jnz	short CleanUp2
 12955 00009393 C3                      		retn
 12956                                  ; ---------------------------------------------------------------------------
 12957                                  
 12958                                  CleanUp2:				; ...
 12959 00009394 1E                      		push	ds
 12960 00009395 56                      		push	si
 12961 00009396 50                      		push	ax
 12962 00009397 36A1[AA05]              		mov	ax, [ss:SFN]
 12963 0000939B 36C536[AE05]            		lds	si, [ss:PJFN]
 12964 000093A0 8804                    		mov	[si], al
 12965 000093A2 58                      		pop	ax
 12966 000093A3 5E                      		pop	si
 12967 000093A4 1F                      		pop	ds
 12968 000093A5 C3                      		retn
 12969                                  ; ---------------------------------------------------------------------------
 12970                                  
 12971                                  CheckIgnore:				; ...
 12972 000093A6 36F606[4B03]20          		test	byte [ss:ALLOWED], 20h ; Allowed_IGNORE
 12973 000093AC 74C8                    		jz	short DoFail
 12974 000093AE EBD5                    		jmp	short CleanUp
 12975                                  ; ---------------------------------------------------------------------------
 12976                                  
 12977                                  CheckRetry:				; ...
 12978 000093B0 36F606[4B03]10          		test	byte [ss:ALLOWED], 10h ; Allowed_RETRY
 12979 000093B6 74BE                    		jz	short DoFail
 12980 000093B8 EBCB                    		jmp	short CleanUp
 12981                                  ; ---------------------------------------------------------------------------
 12982                                  
 12983                                  DoAbort:				; ...
 12984 000093BA 16                      		push	ss
 12985 000093BB 1F                      		pop	ds
 12986 000093BC 803E[5703]00            		cmp	byte [CONSWAP], 0
 12987 000093C1 7403                    		jz	short NOSWAP2
 12988 000093C3 E809DE                  		call	SWAPBACK
 12989                                  
 12990                                  NOSWAP2:				; ...
 12991 000093C6 803E[5903]00            		cmp	byte [fAborting], 0
 12992 000093CB 75A9                    		jnz	short DoFail
 12993 000093CD C606[7C05]02            		mov	byte [EXIT_TYPE], 2 ; EXIT_HARD_ERROR
 12994 000093D2 30C0                    		xor	al, al
 12995 000093D4 E9B30D                  		jmp	exit_inner
 12996                                  ; ---------------------------------------------------------------------------
 12997                                  
 12998                                  reset_environment:			; ...
 12999 000093D7 1E                      		push	ds
 13000 000093D8 B482                    		mov	ah, 82h
 13001 000093DA CD2A                    		int	2Ah		; Microsoft Networks - END DOS CRITICAL	SECTIONS 0 THROUGH 7
 13002 000093DC 36C606[5903]FF          		mov	byte [ss:fAborting], 0FFh ; -1
 13003 000093E2 B82211                  		mov	ax, 1122h
 13004 000093E5 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - PROCESS TERMINATION HOOK
 13005                                  					; SS = DOS CS
 13006 000093E7 B022                    		mov	al, 22h		; int_terminate
 13007 000093E9 E891B8                  		call	_$GET_INTERRUPT_VECTOR
 13008 000093EC 59                      		pop	cx
 13009 000093ED 06                      		push	es
 13010 000093EE 53                      		push	bx
 13011 000093EF 368B1E[3003]            		mov	bx, [ss:CurrentPDB]
 13012 000093F4 8EDB                    		mov	ds, bx
 13013 000093F6 A11600                  		mov	ax, [16h]	; [PDB.PARENT_PID]
 13014 000093F9 39D8                    		cmp	ax, bx
 13015 000093FB 7418                    		jz	short reset_return
 13016 000093FD 39CB                    		cmp	bx, cx
 13017 000093FF 7514                    		jnz	short reset_return
 13018 00009401 50                      		push	ax
 13019 00009402 36803E[7C05]03          		cmp	byte [ss:EXIT_TYPE], 3 ; EXIT_KEEP_PROCESS
 13020 00009408 7406                    		jz	short reset_to_parent
 13021 0000940A E8B50D                  		call	arena_free_process
 13022 0000940D E89DD9                  		call	DOS_ABORT
 13023                                  
 13024                                  reset_to_parent:			; ...
 13025 00009410 368F06[3003]            		pop	word [ss:CurrentPDB]
 13026                                  
 13027                                  reset_return:				; ...
 13028 00009415 16                      		push	ss
 13029 00009416 1F                      		pop	ds
 13030 00009417 B0FF                    		mov	al, 0FFh	; -1
 13031 00009419 E80ABD                  		call	ECritDisk
 13032 0000941C E8BB05                  		call	FLUSHBUF
 13033 0000941F E824BD                  		call	LCritDisk
 13034 00009422 E876F7                  		call	CHECK_VIRT_OPEN
 13035 00009425 FA                      		cli
 13036 00009426 C606[2103]00            		mov	byte [INDOS], 0
 13037 0000942B C606[2203]FF            		mov	byte [WPERR], 0FFh
 13038 00009430 C606[5903]00            		mov	byte [fAborting], 0
 13039 00009435 8F06[8005]              		pop	word [EXITHOLD]
 13040 00009439 8F06[8205]              		pop	word [EXITHOLD+2]
 13041 0000943D 8E1E[3003]              		mov	ds, [CurrentPDB]
 13042 00009441 8E16[3000]              		mov	ss, word [BCLOCK+2]
 13043 00009445 8B26[2E00]              		mov	sp, word [BCLOCK]
 13044 00009449 E8F3AD                  		call	restore_world
 13045 0000944C 07                      		pop	es
 13046 0000944D 50                      		push	ax
 13047 0000944E 8CD8                    		mov	ax, ds
 13048 00009450 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 13049 00009455 A3[0A0D]                		mov	[TEMPSEG], ax
 13050 00009458 58                      		pop	ax
 13051 00009459 A3[8405]                		mov	[USER_SP], ax
 13052 0000945C 58                      		pop	ax
 13053 0000945D 58                      		pop	ax
 13054 0000945E 58                      		pop	ax
 13055 0000945F 9F                      		lahf
 13056 00009460 86E0                    		xchg	ah, al
 13057 00009462 2402                    		and	al, 2
 13058 00009464 B4F2                    		mov	ah, 0F2h
 13059 00009466 50                      		push	ax
 13060 00009467 FF36[8205]              		push	word [EXITHOLD+2]
 13061 0000946B FF36[8005]              		push	word [EXITHOLD]
 13062 0000946F A1[8405]                		mov	ax, [USER_SP]
 13063 00009472 8E1E[0A0D]              		mov	ds, [TEMPSEG]
 13064 00009476 CF                      		iret
 13065                                  
 13066                                  ; =============== S U B	R O U T	I N E =======================================
 13067                                  
 13068                                  SET_I24_EXTENDED_ERROR: ; ...
 13069 00009477 50                      		push	ax
 13070 00009478 B8[BB0E]                		mov	ax, FIRST_BUFF_ADDR ; ErrMap24End
 13071 0000947B 2D[AB0E]                		sub	ax, ErrMap24
 13072 0000947E 1E                      		push	ds
 13073 0000947F 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 13074 00009484 39C7                    		cmp	di, ax
 13075 00009486 89F8                    		mov	ax, di
 13076 00009488 7306                    		jnb	short NoTrans
 13077 0000948A 8A85[AB0E]              		mov	al, [ErrMap24+di] ; [ErrMap24+di]
 13078 0000948E 30E4                    		xor	ah, ah
 13079                                  
 13080                                  NoTrans:				; ...
 13081 00009490 A3[2403]                		mov	[EXTERR], ax
 13082 00009493 1F                      		pop	ds
 13083 00009494 58                      		pop	ax
 13084 00009495 56                      		push	si
 13085 00009496 BE[5B0E]                		mov	si, ERR_TABLE_24
 13086 00009499 E88BAF                  		call	CAL_LK
 13087 0000949C 5E                      		pop	si
 13088 0000949D C3                      		retn
 13089                                  
 13090                                  ; =============== S U B	R O U T	I N E =======================================
 13091                                  
 13092                                  IsEOF:		; ...
 13093 0000949E 26817E0DF60F            		cmp	word [es:bp+0Dh], 0FF6h ; [ES:BP+DPB.MAX_CLUSTER],
 13094                                  					; 4096-10
 13095 000094A4 730B                    		jnb	short EOF16
 13096 000094A6 81FBF00F                		cmp	bx, 0FF0h
 13097 000094AA 7404                    		jz	short IsEOF_other
 13098 000094AC 81FBF80F                		cmp	bx, 0FF8h
 13099                                  
 13100                                  IsEOF_other:				; ...
 13101 000094B0 C3                      		retn
 13102                                  ; ---------------------------------------------------------------------------
 13103                                  
 13104                                  EOF16:					; ...
 13105 000094B1 83FBF8                  		cmp	bx, 0FFF8h
 13106 000094B4 C3                      		retn
 13107                                  
 13108                                  ; =============== S U B	R O U T	I N E =======================================
 13109                                  
 13110                                  UNPACK:		; ...
 13111 000094B5 09DB                    		or	bx, bx
 13112 000094B7 7507                    		jnz	short up_cont
 13113 000094B9 8B3E[8100]              		mov	di, [CL0FATENTRY]
 13114 000094BD 09FF                    		or	di, di
 13115 000094BF C3                      		retn
 13116                                  ; ---------------------------------------------------------------------------
 13117                                  
 13118                                  up_cont:				; ...
 13119 000094C0 263B5E0D                		cmp	bx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
 13120 000094C4 7726                    		ja	short HURTFAT
 13121 000094C6 E8DC00                  		call	MAPCLUSTER
 13122 000094C9 721E                    		jb	short _DoContext
 13123 000094CB 8B3D                    		mov	di, [di]
 13124 000094CD 750E                    		jnz	short High12
 13125 000094CF 268B760D                		mov	si, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
 13126 000094D3 81FEF60F                		cmp	si, 0FF6h	; 4096-10
 13127 000094D7 720C                    		jb	short Unpack12
 13128 000094D9 09FF                    		or	di, di
 13129 000094DB EB0C                    		jmp	short _DoContext
 13130                                  ; ---------------------------------------------------------------------------
 13131                                  
 13132                                  High12:					; ...
 13133 000094DD D1EF                    		shr	di, 1
 13134 000094DF D1EF                    		shr	di, 1
 13135 000094E1 D1EF                    		shr	di, 1
 13136 000094E3 D1EF                    		shr	di, 1
 13137                                  
 13138                                  Unpack12:				; ...
 13139 000094E5 81E7FF0F                		and	di, 0FFFh
 13140                                  
 13141                                  _DoContext:				; ...
 13142 000094E9 16                      		push	ss
 13143 000094EA 1F                      		pop	ds
 13144 000094EB C3                      		retn
 13145                                  ; ---------------------------------------------------------------------------
 13146                                  
 13147                                  HURTFAT:				; ...
 13148 000094EC 26C7461FFFFF            		mov	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 13149 000094F2 50                      		push	ax
 13150 000094F3 B488                    		mov	ah, 88h		; Allowed_FAIL+80h
 13151 000094F5 36C606[4B03]08          		mov	byte [ss:ALLOWED], 8 ; Allowed_FAIL
 13152 000094FB BFFF0F                  		mov	di, 0FFFh
 13153 000094FE E8C7FD                  		call	FATAL
 13154 00009501 3C03                    		cmp	al, 3
 13155 00009503 F8                      		clc
 13156 00009504 7501                    		jnz	short OKU_RET
 13157 00009506 F9                      		stc
 13158                                  
 13159                                  OKU_RET:				; ...
 13160 00009507 58                      		pop	ax
 13161                                  
 13162                                  hurtfat_retn:				; ...
 13163 00009508 C3                      		retn
 13164                                  
 13165                                  ; =============== S U B	R O U T	I N E =======================================
 13166                                  
 13167                                  PACK:		; ...
 13168 00009509 09DB                    		or	bx, bx
 13169 0000950B 7505                    		jnz	short p_cont
 13170 0000950D 8916[8100]              		mov	[CL0FATENTRY], dx
 13171 00009511 C3                      		retn
 13172                                  ; ---------------------------------------------------------------------------
 13173                                  
 13174                                  p_cont:					; ...
 13175 00009512 E89000                  		call	MAPCLUSTER
 13176 00009515 72D2                    		jb	short _DoContext
 13177 00009517 8B35                    		mov	si, [di]
 13178 00009519 740B                    		jz	short ALIGNED
 13179 0000951B 51                      		push	cx
 13180 0000951C B104                    		mov	cl, 4
 13181 0000951E D3E2                    		shl	dx, cl
 13182 00009520 59                      		pop	cx
 13183 00009521 83E60F                  		and	si, 0Fh
 13184 00009524 EB14                    		jmp	short PACKIN
 13185                                  ; ---------------------------------------------------------------------------
 13186                                  
 13187                                  ALIGNED:				; ...
 13188 00009526 26817E0DF60F            		cmp	word [es:bp+0Dh], 0FF6h ; [ES:BP+DPB.MAX_CLUSTER],
 13189                                  					; 4096-10
 13190 0000952C 730A                    		jnb	short Pack16
 13191 0000952E 81E600F0                		and	si, 0F000h
 13192 00009532 81E2FF0F                		and	dx, 0FFFh
 13193 00009536 EB02                    		jmp	short PACKIN
 13194                                  ; ---------------------------------------------------------------------------
 13195                                  
 13196                                  Pack16:					; ...
 13197 00009538 31F6                    		xor	si, si
 13198                                  
 13199                                  PACKIN:					; ...
 13200 0000953A 09D6                    		or	si, dx
 13201 0000953C 8935                    		mov	[di], si
 13202 0000953E 36C536[E205]            		lds	si, [ss:CURBUF]
 13203 00009543 F6440540                		test	byte [si+5], 40h ; [SI+BUFFINFO.buf_flags],buf_dirty
 13204 00009547 7507                    		jnz	short yesdirty11
 13205 00009549 E89A05                  		call	INC_DIRTY_COUNT
 13206 0000954C 804C0540                		or	byte [si+5], 40h
 13207                                  
 13208                                  yesdirty11:				; ...
 13209 00009550 36803E[7805]00          		cmp	byte [ss:CLUSSPLIT], 0
 13210 00009556 16                      		push	ss
 13211 00009557 1F                      		pop	ds
 13212 00009558 74AE                    		jz	short hurtfat_retn
 13213 0000955A 50                      		push	ax
 13214 0000955B 53                      		push	bx
 13215 0000955C 51                      		push	cx
 13216 0000955D A1[8E05]                		mov	ax, [CLUSSAVE]
 13217 00009560 8E1E[E405]              		mov	ds, word [CURBUF+2]
 13218 00009564 83C614                  		add	si, 20		; BUFINSIZ
 13219 00009567 8824                    		mov	[si], ah
 13220 00009569 16                      		push	ss
 13221 0000956A 1F                      		pop	ds
 13222 0000956B 50                      		push	ax
 13223 0000956C 8B16[9205]              		mov	dx, word [CLUSSEC+2]
 13224 00009570 8916[0706]              		mov	word [HIGH_SECTOR], dx
 13225 00009574 8B16[9005]              		mov	dx, word [CLUSSEC]
 13226 00009578 BE0100                  		mov	si, 1
 13227 0000957B 30C0                    		xor	al, al
 13228 0000957D E85D03                  		call	GETBUFFRB
 13229 00009580 58                      		pop	ax
 13230 00009581 721C                    		jb	short POPP_RET
 13231 00009583 C53E[E205]              		lds	di, [CURBUF]
 13232 00009587 F6450540                		test	byte [di+5], 40h
 13233 0000958B 7507                    		jnz	short yesdirty12
 13234 0000958D E85605                  		call	INC_DIRTY_COUNT
 13235 00009590 804D0540                		or	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
 13236                                  
 13237                                  yesdirty12:				; ...
 13238 00009594 83C714                  		add	di, 20		; BUFINSIZ
 13239 00009597 4F                      		dec	di
 13240 00009598 26037E02                		add	di, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 13241 0000959C 8805                    		mov	[di], al
 13242 0000959E F8                      		clc
 13243                                  
 13244                                  POPP_RET:				; ...
 13245 0000959F 16                      		push	ss
 13246 000095A0 1F                      		pop	ds
 13247 000095A1 59                      		pop	cx
 13248 000095A2 5B                      		pop	bx
 13249 000095A3 58                      		pop	ax
 13250 000095A4 C3                      		retn
 13251                                  
 13252                                  ; =============== S U B	R O U T	I N E =======================================
 13253                                  
 13254                                  MAPCLUSTER:		; ...
 13255 000095A5 C606[7805]00            		mov	byte [CLUSSPLIT], 0
 13256 000095AA 50                      		push	ax
 13257 000095AB 53                      		push	bx
 13258 000095AC 51                      		push	cx
 13259 000095AD 52                      		push	dx
 13260 000095AE 89D8                    		mov	ax, bx
 13261 000095B0 26817E0DF60F            		cmp	word [es:bp+0Dh], 0FF6h ; [ES:BP+DPB.MAX_CLUSTER],
 13262                                  					; 4096-10
 13263 000095B6 7302                    		jnb	short Map16
 13264 000095B8 D1E8                    		shr	ax, 1
 13265                                  
 13266                                  Map16:					; ...
 13267 000095BA 31FF                    		xor	di, di
 13268 000095BC 01D8                    		add	ax, bx
 13269 000095BE 11FF                    		adc	di, di
 13270 000095C0 268B4E02                		mov	cx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 13271 000095C4 81F90002                		cmp	cx, 512
 13272 000095C8 7510                    		jnz	short _DoDiv
 13273 000095CA 89C2                    		mov	dx, ax
 13274 000095CC 81E2FF01                		and	dx, 1FFh
 13275 000095D0 88E0                    		mov	al, ah
 13276 000095D2 D1EF                    		shr	di, 1
 13277 000095D4 D0D8                    		rcr	al, 1
 13278 000095D6 30E4                    		xor	ah, ah
 13279 000095D8 EB04                    		jmp	short DivDone
 13280                                  ; ---------------------------------------------------------------------------
 13281                                  
 13282                                  _DoDiv:					; ...
 13283 000095DA 89FA                    		mov	dx, di
 13284 000095DC F7F1                    		div	cx
 13285                                  
 13286                                  DivDone:				; ...
 13287 000095DE 26034606                		add	ax, [es:bp+6]	; ES:BP+DPB.FIRST_FAT]
 13288 000095E2 49                      		dec	cx
 13289 000095E3 50                      		push	ax
 13290 000095E4 52                      		push	dx
 13291 000095E5 51                      		push	cx
 13292 000095E6 89C2                    		mov	dx, ax
 13293 000095E8 C706[0706]0000          		mov	word [HIGH_SECTOR], 0
 13294 000095EE 30C0                    		xor	al, al
 13295 000095F0 BE0100                  		mov	si, 1
 13296 000095F3 E8E702                  		call	GETBUFFRB
 13297 000095F6 59                      		pop	cx
 13298 000095F7 58                      		pop	ax
 13299 000095F8 5A                      		pop	dx
 13300 000095F9 7257                    		jb	short MAP_POP
 13301 000095FB C536[E205]              		lds	si, [CURBUF]
 13302 000095FF 8D7C14                  		lea	di, [si+20]	; [SI+BUFINSIZ]
 13303 00009602 01C7                    		add	di, ax
 13304 00009604 39C8                    		cmp	ax, cx
 13305 00009606 7537                    		jnz	short MAPRET
 13306 00009608 8A05                    		mov	al, [di]
 13307 0000960A 16                      		push	ss
 13308 0000960B 1F                      		pop	ds
 13309 0000960C FE06[7805]              		inc	byte [CLUSSPLIT]
 13310 00009610 A2[8E05]                		mov	byte [CLUSSAVE], al
 13311 00009613 8916[9005]              		mov	word [CLUSSEC], dx
 13312 00009617 C706[9205]0000          		mov	word [CLUSSEC+2], 0
 13313 0000961D 42                      		inc	dx
 13314 0000961E C706[0706]0000          		mov	word [HIGH_SECTOR], 0
 13315 00009624 30C0                    		xor	al, al
 13316 00009626 BE0100                  		mov	si, 1
 13317 00009629 E8B102                  		call	GETBUFFRB
 13318 0000962C 7224                    		jb	short MAP_POP
 13319 0000962E C536[E205]              		lds	si, [CURBUF]
 13320 00009632 8D7C14                  		lea	di, [si+20]	; [SI+BUFINSIZ]
 13321 00009635 8A05                    		mov	al, [di]
 13322 00009637 16                      		push	ss
 13323 00009638 1F                      		pop	ds
 13324 00009639 A2[8F05]                		mov	byte [CLUSSAVE+1], al
 13325 0000963C BF[8E05]                		mov	di, CLUSSAVE
 13326                                  
 13327                                  MAPRET:					; ...
 13328 0000963F 5A                      		pop	dx
 13329 00009640 59                      		pop	cx
 13330 00009641 5B                      		pop	bx
 13331 00009642 31C0                    		xor	ax, ax
 13332 00009644 26817E0DF60F            		cmp	word [es:bp+0Dh], 0FF6h ; [ES:BP+DPB.MAX_CLUSTER],
 13333                                  					; 4096-10
 13334 0000964A 7302                    		jnb	short MapSet
 13335 0000964C 89D8                    		mov	ax, bx
 13336                                  
 13337                                  MapSet:					; ...
 13338 0000964E A801                    		test	al, 1
 13339 00009650 58                      		pop	ax
 13340 00009651 C3                      		retn
 13341                                  ; ---------------------------------------------------------------------------
 13342                                  
 13343                                  MAP_POP:				; ...
 13344 00009652 5A                      		pop	dx
 13345 00009653 59                      		pop	cx
 13346 00009654 5B                      		pop	bx
 13347 00009655 58                      		pop	ax
 13348 00009656 C3                      		retn
 13349                                  
 13350                                  ; =============== S U B	R O U T	I N E =======================================
 13351                                  
 13352                                  FATREAD_SFT:	; ...
 13353 00009657 26C46D07                		les	bp, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
 13354 0000965B 268A4600                		mov	al, [es:bp+0]
 13355 0000965F A2[7605]                		mov	[THISDRV], al
 13356 00009662 E876AD                  		call	GOTDPB
 13357 00009665 E87900                  		call	FAT_GOT_DPB
 13358                                  
 13359                                  fatread_sft_retn:			; ...
 13360 00009668 C3                      		retn
 13361                                  
 13362                                  ; =============== S U B	R O U T	I N E =======================================
 13363                                  
 13364                                  FATREAD_CDS:	; ...
 13365 00009669 06                      		push	es
 13366 0000966A 57                      		push	di
 13367 0000966B 26C46D45                		les	bp, [es:di+45h]	; [ES:DI+curdir.devptr]
 13368 0000966F 268A4600                		mov	al, [es:bp+0]
 13369 00009673 A2[7605]                		mov	[THISDRV], al
 13370 00009676 E862AD                  		call	GOTDPB
 13371 00009679 E86500                  		call	FAT_GOT_DPB
 13372 0000967C 5F                      		pop	di
 13373 0000967D 07                      		pop	es
 13374 0000967E 72E8                    		jb	short fatread_sft_retn
 13375 00009680 7538                    		jnz	short NO_CHANGE
 13376 00009682 31C0                    		xor	ax, ax
 13377 00009684 48                      		dec	ax
 13378 00009685 1E                      		push	ds
 13379 00009686 8A0E[4700]              		mov	cl, [CDSCOUNT]
 13380 0000968A 30ED                    		xor	ch, ch
 13381 0000968C 26C57545                		lds	si, [es:di+45h]	; [ES:DI+curdir.devptr]
 13382 00009690 36C43E[3C00]            		les	di, [ss:CDSADDR]
 13383                                  
 13384                                  frcd20:					; ...
 13385 00009695 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
 13386                                  					; (curdir_isnet>>8)
 13387 0000969A 7518                    		jnz	short frcd25
 13388 0000969C 263B7545                		cmp	si, [es:di+45h]	; [ES:DI+curdir.devptr]
 13389 000096A0 7512                    		jnz	short frcd25
 13390 000096A2 8CDB                    		mov	bx, ds
 13391 000096A4 263B5D47                		cmp	bx, [es:di+47h]	; [ES:DI+curdir.devptr+2]
 13392 000096A8 750A                    		jnz	short frcd25
 13393 000096AA 26854549                		test	[es:di+49h], ax	; [ES:DI+curdir.ID]
 13394 000096AE 7404                    		jz	short frcd25
 13395 000096B0 26894549                		mov	[es:di+49h], ax
 13396                                  
 13397                                  frcd25:					; ...
 13398 000096B4 83C758                  		add	di, 88		; curdir.size
 13399 000096B7 E2DC                    		loop	frcd20
 13400 000096B9 1F                      		pop	ds
 13401                                  
 13402                                  NO_CHANGE:				; ...
 13403 000096BA C42E[8A05]              		les	bp, [THISDPB]
 13404 000096BE F8                      		clc
 13405 000096BF C3                      		retn
 13406                                  
 13407                                  ; ---------------------------------------------------------------------------
 13408                                  ; START	OF FUNCTION CHUNK FOR FAT_GOT_DPB
 13409                                  
 13410                                  FAT_operation:				; ...
 13411 000096C0 26C7461FFFFF            		mov	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 13412 000096C6 81E7FF00                		and	di, 0FFh	; STECODE
 13413 000096CA C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
 13414 000096CF B41A                    		mov	ah, 1Ah		; 2+Allowed_FAIL+Allowed_RETRY
 13415 000096D1 A0[7605]                		mov	al, [THISDRV]
 13416 000096D4 E8F5FB                  		call	FATAL1
 13417 000096D7 C42E[8A05]              		les	bp, [THISDPB]
 13418 000096DB 3C03                    		cmp	al, 3
 13419 000096DD 7502                    		jnz	short FAT_GOT_DPB
 13420 000096DF F9                      		stc
 13421 000096E0 C3                      		retn
 13422                                  ; END OF FUNCTION CHUNK	FOR FAT_GOT_DPB
 13423                                  
 13424                                  ; =============== S U B	R O U T	I N E =======================================
 13425                                  
 13426                                  FAT_GOT_DPB:	; ...
 13427                                  
 13428                                  ; FUNCTION CHUNK AT 96C0 SIZE 00000021 BYTES
 13429                                  
 13430 000096E1 16                      		push	ss
 13431 000096E2 1F                      		pop	ds
 13432 000096E3 B00F                    		mov	al, 0Fh		; DMEDHL
 13433 000096E5 268A6601                		mov	ah, [es:bp+1]	; [ES:BP+DPB.UNIT]
 13434 000096E9 A3[5A03]                		mov	[DEVCALL], ax
 13435 000096EC C606[5C03]01            		mov	byte [DEVCALL_REQFUNC], 1 ; DEVMDCH
 13436 000096F1 C706[5D03]0000          		mov	word [DEVCALL_REQSTAT], 0
 13437 000096F7 268A4617                		mov	al, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
 13438 000096FB A2[6703]                		mov	[CALLMED], al
 13439 000096FE 06                      		push	es
 13440 000096FF 1E                      		push	ds
 13441 00009700 BB[5A03]                		mov	bx, DEVCALL
 13442 00009703 26C57613                		lds	si, [es:bp+13h]	; [ES:BP+DPB.DRIVER_ADDR]
 13443 00009707 07                      		pop	es
 13444 00009708 E8A7EE                  		call	DEVIOCALL2
 13445 0000970B 16                      		push	ss
 13446 0000970C 1F                      		pop	ds
 13447 0000970D 07                      		pop	es
 13448 0000970E 8B3E[5D03]              		mov	di, [DEVCALL_REQSTAT]
 13449 00009712 09FF                    		or	di, di
 13450 00009714 78AA                    		js	short FAT_operation
 13451 00009716 30E4                    		xor	ah, ah
 13452 00009718 26866618                		xchg	ah, [es:bp+18h]	; [ES:BP+DPB.FIRST_ACCESS]
 13453 0000971C A0[7605]                		mov	al, [THISDRV]
 13454 0000971F 3806[A10A]              		cmp	byte [VOLCHNG_FLAG], al
 13455 00009723 7508                    		jnz	short CHECK_BYT
 13456 00009725 C606[A10A]FF            		mov	byte [VOLCHNG_FLAG], 0FFh ; -1
 13457 0000972A E9A900                  		jmp	GOGETBPB
 13458                                  ; ---------------------------------------------------------------------------
 13459                                  
 13460                                  CHECK_BYT:				; ...
 13461 0000972D 0A26[6803]              		or	ah, [CALLXADD]
 13462 00009731 7902                    		jns	short CHECK_ZR
 13463 00009733 EB65                    		jmp	short NEWDSK
 13464                                  ; ---------------------------------------------------------------------------
 13465                                  
 13466                                  CHECK_ZR:				; ...
 13467 00009735 743C                    		jz	short CHKBUFFDIRT
 13468 00009737 F8                      		clc
 13469 00009738 C3                      		retn
 13470                                  ; ---------------------------------------------------------------------------
 13471                                  
 13472                                  DISK_CHNG_ERR:				; ...
 13473 00009739 06                      		push	es
 13474 0000973A 55                      		push	bp
 13475 0000973B 26C46E13                		les	bp, [es:bp+13h]	; [ES:BP+DPB.DRIVER_ADDR]
 13476 0000973F 26F6460508              		test	byte [es:bp+5], 8 ; [es:bp+SYSDEV.ATT+1],
 13477                                  					; (DEVOPCL>>8)
 13478 00009744 5D                      		pop	bp
 13479 00009745 07                      		pop	es
 13480 00009746 7426                    		jz	short FAIL_OPJ2
 13481 00009748 1E                      		push	ds
 13482 00009749 57                      		push	di
 13483 0000974A 16                      		push	ss
 13484 0000974B 1F                      		pop	ds
 13485 0000974C C606[4B03]18            		mov	byte [ALLOWED], 18h
 13486 00009751 06                      		push	es
 13487 00009752 C43E[6903]              		les	di, [CALLXADD+1] ; les di,[CALLVIDM]
 13488 00009756 8C06[2A03]              		mov	word [EXTERRPT+2], es
 13489 0000975A 07                      		pop	es
 13490 0000975B 893E[2803]              		mov	word [EXTERRPT],	di
 13491 0000975F B80F00                  		mov	ax, 0Fh		; error_I24_wrong_disk
 13492 00009762 C606[7505]01            		mov	byte [READOP], 1
 13493 00009767 E810FB                  		call	HARDERR
 13494 0000976A 5F                      		pop	di
 13495 0000976B 1F                      		pop	ds
 13496 0000976C 3C03                    		cmp	al, 3
 13497                                  
 13498                                  FAIL_OPJ2:				; ...
 13499 0000976E 741D                    		jz	short FAIL_OP
 13500 00009770 E96EFF                  		jmp	FAT_GOT_DPB
 13501                                  ; ---------------------------------------------------------------------------
 13502                                  
 13503                                  CHKBUFFDIRT:				; ...
 13504 00009773 36833E[7100]00          		cmp	word [ss:DirtyBufferCount], 0
 13505 00009779 741F                    		jz	short NEWDSK
 13506 0000977B E8F800                  		call	GETCURHEAD
 13507                                  
 13508                                  nbuffer:				; ...
 13509 0000977E 384504                  		cmp	[di+4],	al	; [di+BUFFINFO.buf_ID]
 13510 00009781 750E                    		jnz	short lfnxt
 13511 00009783 F6450540                		test	byte [di+5], 40h ; [di+BUFFINFO.buf_flags],
 13512                                  					; buf_dirty
 13513 00009787 7408                    		jz	short lfnxt
 13514 00009789 16                      		push	ss
 13515 0000978A 1F                      		pop	ds
 13516 0000978B F8                      		clc
 13517 0000978C C3                      		retn
 13518                                  ; ---------------------------------------------------------------------------
 13519                                  
 13520                                  FAIL_OP:				; ...
 13521 0000978D 16                      		push	ss
 13522 0000978E 1F                      		pop	ds
 13523 0000978F F9                      		stc
 13524 00009790 C3                      		retn
 13525                                  ; ---------------------------------------------------------------------------
 13526                                  
 13527                                  lfnxt:					; ...
 13528 00009791 8B3D                    		mov	di, [di]	; [di+BUFFINFO.buf_next]
 13529 00009793 36393E[BB0E]            		cmp	[ss:FIRST_BUFF_ADDR], di
 13530 00009798 75E4                    		jnz	short nbuffer
 13531                                  
 13532                                  NEWDSK:					; ...
 13533 0000979A 26C7461FFFFF            		mov	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 13534 000097A0 E8D300                  		call	GETCURHEAD
 13535                                  
 13536                                  nxbuffer:				; ...
 13537 000097A3 384504                  		cmp	[di+4],	al	; [DI+BUFFINFO.buf_ID]
 13538 000097A6 7510                    		jnz	short lfnxt2
 13539 000097A8 F6450540                		test	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
 13540 000097AC 758B                    		jnz	short DISK_CHNG_ERR
 13541 000097AE C74504FF20              		mov	word [di+4], 20FFh ; [DI+BUFFINFO.buf_ID],
 13542                                  					; (buf_visit*256)+0FFh
 13543 000097B3 E8D200                  		call	SCANPLACE
 13544 000097B6 EB02                    		jmp	short skpbuff
 13545                                  ; ---------------------------------------------------------------------------
 13546                                  
 13547                                  lfnxt2:					; ...
 13548 000097B8 8B3D                    		mov	di, [di]	; [di+BUFFINFO.buf_next]
 13549                                  
 13550                                  skpbuff:				; ...
 13551 000097BA 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
 13552 000097BF 75E2                    		jnz	short nxbuffer
 13553 000097C1 36833E[7700]00          		cmp	word [ss:SC_CACHE_COUNT], 0
 13554 000097C7 740D                    		jz	short GOGETBPB
 13555 000097C9 363A06[B00D]            		cmp	al, [ss:CurSC_DRIVE]
 13556 000097CE 7506                    		jnz	short GOGETBPB
 13557 000097D0 36C606[B00D]FF          		mov	byte [ss:CurSC_DRIVE], 0FFh ; -1
 13558                                  
 13559                                  GOGETBPB:				; ...
 13560 000097D6 26C57E13                		lds	di, [es:bp+13h]	; [ES:BP+DPB.DRIVER_ADDR]
 13561 000097DA F6450520                		test	byte [di+5], 20h ; [DI+SYSDEV.ATT+1],
 13562                                  					; (ISFATBYDEV>>8)
 13563 000097DE 7510                    		jnz	short GETFREEBUF
 13564 000097E0 16                      		push	ss
 13565 000097E1 1F                      		pop	ds
 13566 000097E2 BB0200                  		mov	bx, 2
 13567 000097E5 E8CDFC                  		call	UNPACK
 13568                                  
 13569                                  FAIL_OPJ:				; ...
 13570 000097E8 72A3                    		jb	short FAIL_OP
 13571 000097EA C53E[E205]              		lds	di, [CURBUF]
 13572 000097EE EB13                    		jmp	short GOTGETBUF
 13573                                  ; ---------------------------------------------------------------------------
 13574                                  
 13575                                  GETFREEBUF:				; ...
 13576 000097F0 06                      		push	es
 13577 000097F1 55                      		push	bp
 13578 000097F2 31D2                    		xor	dx, dx
 13579 000097F4 368916[0706]            		mov	word [ss:HIGH_SECTOR], dx
 13580 000097F9 E87A00                  		call	GETCURHEAD
 13581 000097FC E84602                  		call	BUFWRITE
 13582 000097FF 5D                      		pop	bp
 13583 00009800 07                      		pop	es
 13584 00009801 72E5                    		jb	short FAIL_OPJ
 13585                                  
 13586                                  GOTGETBUF:				; ...
 13587 00009803 83C714                  		add	di, 20		; BUFINSIZ
 13588 00009806 368C1E[6A03]            		mov	word [ss:CALLXADD+2], ds
 13589 0000980B 16                      		push	ss
 13590 0000980C 1F                      		pop	ds
 13591 0000980D 893E[6803]              		mov	word [CALLXADD], di
 13592 00009811 B016                    		mov	al, 16h		; DBPBHL
 13593 00009813 268A6601                		mov	ah, [es:bp+1]	; [ES:BP+DPB.UNIT]
 13594 00009817 A3[5A03]                		mov	[DEVCALL], ax ; [DEVCALL_REQLEN]
 13595 0000981A C606[5C03]02            		mov	byte [DEVCALL_REQFUNC], 2 ; DEVBPB
 13596 0000981F C706[5D03]0000          		mov	word [DEVCALL_REQSTAT], 0
 13597 00009825 268A4617                		mov	al, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
 13598 00009829 A2[6703]                		mov	[CALLMED], al
 13599 0000982C 06                      		push	es
 13600 0000982D 1E                      		push	ds
 13601 0000982E 26FF7615                		push	word [es:bp+15h] ; [ES:BP+DPB.DRIVER_ADDR+2]
 13602 00009832 26FF7613                		push	word [es:bp+13h] ; [ES:BP+DPB.DRIVER_ADDR]
 13603 00009836 BB[5A03]                		mov	bx, DEVCALL
 13604 00009839 5E                      		pop	si
 13605 0000983A 1F                      		pop	ds
 13606 0000983B 07                      		pop	es
 13607 0000983C E873ED                  		call	DEVIOCALL2
 13608 0000983F 07                      		pop	es
 13609 00009840 16                      		push	ss
 13610 00009841 1F                      		pop	ds
 13611 00009842 8B3E[5D03]              		mov	di, [DEVCALL_REQSTAT]
 13612 00009846 09FF                    		or	di, di
 13613 00009848 7829                    		js	short FATERRJ
 13614 0000984A 268A4617                		mov	al, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
 13615 0000984E C536[6C03]              		lds	si, [CALLSCNT] ; lds si,[CALLBPB]
 13616 00009852 26C7461D0000            		mov	word [es:bp+1Dh], 0	; [ES:BP+DPB.NEXT_FREE]
 13617 00009858 E86EB5                  		call	_$SETDPB
 13618 0000985B 36C53E[6803]            		lds	di, [ss:CALLXADD]
 13619 00009860 268A4608                		mov	al, [es:bp+8]	; [ES:BP+DPB.FAT_COUNT]
 13620 00009864 8845F6                  		mov	[di-0Ah], al	; [DI+BUFFINFO.buf_wrtcnt-BUFINSIZ]
 13621 00009867 268B460F                		mov	ax, [es:bp+0Fh]	; [ES:BP+DPB.FAT_SIZE]
 13622 0000986B 8945F7                  		mov	[di-9],	ax	; [DI+BUFFINFO.buf_wrtcntinc-BUFINSIZ]
 13623 0000986E 16                      		push	ss
 13624 0000986F 1F                      		pop	ds
 13625 00009870 30C0                    		xor	al, al
 13626 00009872 C3                      		retn
 13627                                  ; ---------------------------------------------------------------------------
 13628                                  
 13629                                  FATERRJ:				; ...
 13630 00009873 E94AFE                  		jmp	FAT_operation
 13631                                  
 13632                                  ; =============== S U B	R O U T	I N E =======================================
 13633                                  
 13634                                  GETCURHEAD:		; ...
 13635 00009876 36C53E[6D00]            		lds	di, [ss:BufferQueue]
 13636 0000987B 36C706[1E00]FFFF        		mov	word [ss:LastBuffer], 0FFFFh ; -1
 13637 00009882 36893E[BB0E]            		mov	[ss:FIRST_BUFF_ADDR], di
 13638 00009887 C3                      		retn
 13639                                  
 13640                                  ; =============== S U B	R O U T	I N E =======================================
 13641                                  
 13642                                  SCANPLACE:		; ...
 13643 00009888 FF35                    		push	word [di]	; [di+BUFFINFO.buf_next]
 13644 0000988A E80200                  		call	PLACEBUF
 13645 0000988D 5F                      		pop	di
 13646 0000988E C3                      		retn
 13647                                  
 13648                                  ; =============== S U B	R O U T	I N E =======================================
 13649                                  
 13650                                  PLACEBUF:		; ...
 13651 0000988F 50                      		push	ax
 13652 00009890 53                      		push	bx
 13653 00009891 56                      		push	si
 13654 00009892 8B05                    		mov	ax, [di]	; [di+BUFFINFO.buf_next]
 13655 00009894 368B1E[6D00]            		mov	bx, word [ss:BufferQueue]
 13656 00009899 39D8                    		cmp	ax, bx
 13657 0000989B 7420                    		jz	short nret
 13658 0000989D 39DF                    		cmp	di, bx
 13659 0000989F 7506                    		jnz	short not_first
 13660 000098A1 36A3[6D00]              		mov	word [ss:BufferQueue], ax
 13661 000098A5 EB16                    		jmp	short nret
 13662                                  ; ---------------------------------------------------------------------------
 13663                                  
 13664                                  not_first:				; ...
 13665 000098A7 8B7502                  		mov	si, [di+2]	; [DI+BUFFINFO.buf_prev]
 13666 000098AA 8904                    		mov	[si], ax	; [SI+BUFFINFO.buf_next]
 13667 000098AC 96                      		xchg	ax, si
 13668 000098AD 894402                  		mov	[si+2],	ax	; [SI+BUFFINFO.buf_prev]
 13669 000098B0 8B7702                  		mov	si, [bx+2]	; [BX+BUFFINFO.buf_prev]
 13670 000098B3 893C                    		mov	[si], di
 13671 000098B5 897F02                  		mov	[bx+2],	di
 13672 000098B8 897502                  		mov	[di+2],	si
 13673 000098BB 891D                    		mov	[di], bx	; [DI+BUFFINFO.buf_next]
 13674                                  
 13675                                  nret:					; ...
 13676 000098BD 5E                      		pop	si
 13677 000098BE 5B                      		pop	bx
 13678 000098BF 58                      		pop	ax
 13679 000098C0 807D04FF                		cmp	byte [di+4], 0FFh ;	[di+BUFFINFO.buf_ID],-1
 13680 000098C4 7505                    		jnz	short pbx
 13681 000098C6 36893E[6D00]            		mov	word [ss:BufferQueue], di
 13682                                  
 13683                                  pbx:					; ...
 13684 000098CB C3                      		retn
 13685                                  
 13686                                  ; ---------------------------------------------------------------------------
 13687                                  
 13688                                  POINTCOMP:				; ...
 13689 000098CC 39FE                    		cmp	si, di
 13690 000098CE 750A                    		jnz	short placehead_retn
 13691 000098D0 51                      		push	cx
 13692 000098D1 52                      		push	dx
 13693 000098D2 8CD9                    		mov	cx, ds
 13694 000098D4 8CC2                    		mov	dx, es
 13695 000098D6 39D1                    		cmp	cx, dx
 13696 000098D8 5A                      		pop	dx
 13697 000098D9 59                      		pop	cx
 13698                                  
 13699                                  placehead_retn:				; ...
 13700 000098DA C3                      		retn
 13701                                  ; ---------------------------------------------------------------------------
 13702                                  
 13703                                  GETBUFFR:				; ...
 13704 000098DB 31F6                    		xor	si, si
 13705                                  
 13706                                  GETBUFFRB:				; ...
 13707 000098DD A3[9405]                		mov	[PREREAD], ax
 13708 000098E0 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 13709 000098E4 C53E[1E00]              		lds	di, [LastBuffer]
 13710 000098E8 368B0E[0706]            		mov	cx, [ss:HIGH_SECTOR]
 13711 000098ED 83FFFF                  		cmp	di, 0FFFFh	; -1
 13712 000098F0 7412                    		jz	short getb5
 13713 000098F2 3B5506                  		cmp	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
 13714 000098F5 750D                    		jnz	short getb5
 13715 000098F7 3B4D08                  		cmp	cx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 13716 000098FA 7508                    		jnz	short getb5
 13717 000098FC 3A4504                  		cmp	al, [di+4]	; [DI+BUFFINFO.buf_ID]
 13718 000098FF 7503                    		jnz	short getb5
 13719 00009901 E9BE00                  		jmp	getb35
 13720                                  ; ---------------------------------------------------------------------------
 13721                                  
 13722                                  getb5:					; ...
 13723 00009904 E86FFF                  		call	GETCURHEAD
 13724                                  
 13725                                  getb10:					; ...
 13726 00009907 3B5506                  		cmp	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
 13727 0000990A 750D                    		jnz	short getb12
 13728 0000990C 3B4D08                  		cmp	cx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 13729 0000990F 7508                    		jnz	short getb12
 13730 00009911 3A4504                  		cmp	al, [di+4]	; [DI+BUFFINFO.buf_ID]
 13731 00009914 7503                    		jnz	short getb12
 13732 00009916 E98E00                  		jmp	getb25
 13733                                  ; ---------------------------------------------------------------------------
 13734                                  
 13735                                  getb12:					; ...
 13736 00009919 8B3D                    		mov	di, [di]	; [DI+BUFFINFO.BUF_NEXT]
 13737 0000991B 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
 13738 00009920 75E5                    		jnz	short getb10
 13739 00009922 51                      		push	cx
 13740 00009923 56                      		push	si
 13741 00009924 52                      		push	dx
 13742 00009925 55                      		push	bp
 13743 00009926 06                      		push	es
 13744 00009927 E81B01                  		call	BUFWRITE
 13745 0000992A 07                      		pop	es
 13746 0000992B 5D                      		pop	bp
 13747 0000992C 5A                      		pop	dx
 13748 0000992D 5E                      		pop	si
 13749 0000992E 368F06[0706]            		pop	word [ss:HIGH_SECTOR]
 13750 00009933 7303                    		jnb	short getb13
 13751 00009935 E99F00                  		jmp	getbx
 13752                                  ; ---------------------------------------------------------------------------
 13753                                  
 13754                                  getb13:					; ...
 13755 00009938 E89801                  		call	SET_RQ_SC_PARMS
 13756 0000993B 30E4                    		xor	ah, ah
 13757 0000993D 363826[9405]            		cmp	byte [ss:PREREAD], ah
 13758 00009942 754B                    		jnz	short getb20
 13759 00009944 8D5D14                  		lea	bx, [di+20]	; [DI+BUFINSIZ]
 13760 00009947 B90100                  		mov	cx, 1
 13761 0000994A 56                      		push	si
 13762 0000994B 57                      		push	di
 13763 0000994C 52                      		push	dx
 13764 0000994D 06                      		push	es
 13765 0000994E 36803E[7900]00          		cmp	byte [ss:BuffInHMA], 0
 13766 00009954 7407                    		jz	short getb14
 13767 00009956 1E                      		push	ds
 13768 00009957 53                      		push	bx
 13769 00009958 36C51E[7A00]            		lds	bx, [ss:LoMemBuff]
 13770                                  
 13771                                  getb14:					; ...
 13772 0000995D 09F6                    		or	si, si
 13773 0000995F 7407                    		jz	short getb15
 13774 00009961 E8A3DC                  		call	FATSECRD
 13775 00009964 B402                    		mov	ah, 2		; buf_isFAT
 13776 00009966 EB05                    		jmp	short getb17
 13777                                  ; ---------------------------------------------------------------------------
 13778                                  
 13779                                  getb15:					; ...
 13780 00009968 E8C8DC                  		call	DREAD
 13781 0000996B B400                    		mov	ah, 0
 13782                                  
 13783                                  getb17:					; ...
 13784 0000996D 9C                      		pushf
 13785 0000996E 36803E[7900]00          		cmp	byte [ss:BuffInHMA], 0
 13786 00009974 7412                    		jz	short not_in_hma
 13787 00009976 9D                      		popf
 13788 00009977 268B4E02                		mov	cx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 13789 0000997B D1E9                    		shr	cx, 1
 13790 0000997D 89DE                    		mov	si, bx
 13791 0000997F 5F                      		pop	di
 13792 00009980 07                      		pop	es
 13793 00009981 FC                      		cld
 13794 00009982 F3A5                    		rep movsw
 13795 00009984 06                      		push	es
 13796 00009985 1F                      		pop	ds
 13797 00009986 EB01                    		jmp	short getb19
 13798                                  ; ---------------------------------------------------------------------------
 13799                                  
 13800                                  not_in_hma:				; ...
 13801 00009988 9D                      		popf
 13802                                  
 13803                                  getb19:					; ...
 13804 00009989 07                      		pop	es
 13805 0000998A 5A                      		pop	dx
 13806 0000998B 5F                      		pop	di
 13807 0000998C 5E                      		pop	si
 13808 0000998D 7248                    		jb	short getbx
 13809                                  
 13810                                  getb20:					; ...
 13811 0000998F 368B0E[0706]            		mov	cx, [ss:HIGH_SECTOR]
 13812 00009994 894D08                  		mov	[di+8],	cx	; [DI+BUFFINFO.buf_sector+2]
 13813 00009997 895506                  		mov	[di+6],	dx	; [DI+BUFFINFO.buf_sector]
 13814 0000999A 896D0D                  		mov	[di+0Dh], bp	; [DI+BUFFINFO.buf_DPB]
 13815 0000999D 8C450F                  		mov	word [di+0Fh], es ;	[DI+BUFFINFO.buf_DPB+2]
 13816 000099A0 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 13817 000099A4 894504                  		mov	[di+4],	ax	; [DI+BUFFINFO.buf_ID]
 13818                                  
 13819                                  getb25:					; ...
 13820 000099A7 C6450A01                		mov	byte [di+0Ah], 1 ;	[DI+BUFFINFO.buf_wrtcnt]
 13821 000099AB 31C0                    		xor	ax, ax
 13822 000099AD 09F6                    		or	si, si
 13823 000099AF 740B                    		jz	short getb30
 13824 000099B1 268A4608                		mov	al, [es:bp+8]	; [ES:BP+DPB.FAT_COUNT]
 13825 000099B5 88450A                  		mov	[di+0Ah], al	; [DI+BUFFINFO.buf_wrtcnt]
 13826 000099B8 268B460F                		mov	ax, [es:bp+0Fh]	; [ES:BP+DPB.FAT_SIZE]
 13827                                  
 13828                                  getb30:					; ...
 13829 000099BC 89450B                  		mov	[di+0Bh], ax	; [DI+BUFFINFO.buf_wrtcntinc]
 13830 000099BF E8CDFE                  		call	PLACEBUF
 13831                                  
 13832                                  getb35:					; ...
 13833 000099C2 368C1E[E405]            		mov	word [ss:CURBUF+2],	ds
 13834 000099C7 368C1E[2000]            		mov	word [ss:LastBuffer+2], ds
 13835 000099CC 36893E[E205]            		mov	word [ss:CURBUF], di
 13836 000099D1 36893E[1E00]            		mov	word [ss:LastBuffer], di
 13837 000099D6 F8                      		clc
 13838                                  
 13839                                  getbx:					; ...
 13840 000099D7 16                      		push	ss
 13841 000099D8 1F                      		pop	ds
 13842                                  
 13843                                  getbuffrb_retn:				; ...
 13844 000099D9 C3                      		retn
 13845                                  
 13846                                  ; =============== S U B	R O U T	I N E =======================================
 13847                                  
 13848                                  FLUSHBUF:		; ...
 13849 000099DA E899FE                  		call	GETCURHEAD
 13850 000099DD 36F606[1106]04          		test	byte [ss:DOS34_FLAG], 4 ; FROM_DISK_RESET
 13851 000099E3 7508                    		jnz	short scan_buf_queue
 13852 000099E5 36833E[7100]00          		cmp	word [ss:DirtyBufferCount], 0
 13853 000099EB 7423                    		jz	short end_scan
 13854                                  
 13855                                  scan_buf_queue:				; ...
 13856 000099ED E82C00                  		call	CHECKFLUSH
 13857 000099F0 8A6504                  		mov	ah, [di+4]	; [DI+BUFFINFO.buf_ID]
 13858 000099F3 363826[2203]            		cmp	[ss:WPERR], ah
 13859 000099F8 7408                    		jz	short free_the_buf
 13860 000099FA 36F606[1106]04          		test	byte [ss:DOS34_FLAG], 4 ; FROM_DISK_RESET
 13861 00009A00 7405                    		jz	short dont_free_the_buf
 13862                                  
 13863                                  free_the_buf:				; ...
 13864 00009A02 C74504FF00              		mov	word [di+4], 0FFh ;	[DI+BUFFINFO.buf_ID],00FFh
 13865                                  
 13866                                  dont_free_the_buf:			; ...
 13867 00009A07 8B3D                    		mov	di, [di]	; [DI+BUFFINFO.buf_next]
 13868 00009A09 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
 13869 00009A0E 75DD                    		jnz	short scan_buf_queue
 13870                                  
 13871                                  end_scan:				; ...
 13872 00009A10 16                      		push	ss
 13873 00009A11 1F                      		pop	ds
 13874 00009A12 803E[4A03]00            		cmp	byte [FAILERR], 0
 13875 00009A17 7501                    		jnz	short bad_flush
 13876 00009A19 C3                      		retn
 13877                                  ; ---------------------------------------------------------------------------
 13878                                  
 13879                                  bad_flush:				; ...
 13880 00009A1A F9                      		stc
 13881 00009A1B C3                      		retn
 13882                                  
 13883                                  ; =============== S U B	R O U T	I N E =======================================
 13884                                  
 13885                                  CHECKFLUSH:		; ...
 13886 00009A1C B4FF                    		mov	ah, 0FFh	; -1
 13887 00009A1E 386504                  		cmp	[di+4],	ah	; [DI+BUFFINFO.buf_ID]
 13888 00009A21 74B6                    		jz	short getbuffrb_retn ; flushbuf_retn
 13889 00009A23 38C4                    		cmp	ah, al
 13890 00009A25 7406                    		jz	short DOBUFFER
 13891 00009A27 3A4504                  		cmp	al, [di+4]
 13892 00009A2A F8                      		clc
 13893 00009A2B 75AC                    		jnz	short getbuffrb_retn ; flushbuf_retn
 13894                                  
 13895                                  DOBUFFER:				; ...
 13896 00009A2D F6450540                		test	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],
 13897                                  					; buf_dirty
 13898 00009A31 74A6                    		jz	short getbuffrb_retn ; flushbuf_retn
 13899 00009A33 50                      		push	ax
 13900 00009A34 FF7504                  		push	word [di+4]	; [DI+BUFFINFO.buf_ID]
 13901 00009A37 E80B00                  		call	BUFWRITE
 13902 00009A3A 58                      		pop	ax
 13903 00009A3B 7206                    		jb	short LEAVE_BUF
 13904 00009A3D 80E4BF                  		and	ah, 0BFh	; ~buf_dirty
 13905 00009A40 894504                  		mov	[di+4],	ax
 13906                                  
 13907                                  LEAVE_BUF:				; ...
 13908 00009A43 58                      		pop	ax
 13909                                  
 13910                                  checkflush_retn:			; ...
 13911 00009A44 C3                      		retn
 13912                                  
 13913                                  ; =============== S U B	R O U T	I N E =======================================
 13914                                  
 13915                                  BUFWRITE:		; ...
 13916 00009A45 B8FF00                  		mov	ax, 0FFh
 13917 00009A48 874504                  		xchg	ax, [di+4]	; [DI+BUFFINFO.buf_ID]
 13918 00009A4B 3CFF                    		cmp	al, 0FFh
 13919 00009A4D 74F5                    		jz	short checkflush_retn
 13920 00009A4F F6C440                  		test	ah, 40h		; buf_dirty
 13921 00009A52 74F0                    		jz	short checkflush_retn
 13922 00009A54 E89500                  		call	DEC_DIRTY_COUNT
 13923 00009A57 363A06[2203]            		cmp	al, [ss:WPERR]
 13924 00009A5C 74E6                    		jz	short checkflush_retn
 13925 00009A5E 36A2[AF0D]              		mov	[ss:SC_DRIVE], al
 13926 00009A62 C46D0D                  		les	bp, [di+13]	; [DI+BUFFINFO.buf_DPB]
 13927 00009A65 8D5D14                  		lea	bx, [di+20]	; [DI+BUFINSIZ]
 13928 00009A68 8B5506                  		mov	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
 13929 00009A6B 8B4D08                  		mov	cx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 13930 00009A6E 36890E[0706]            		mov	word [ss:HIGH_SECTOR], cx
 13931 00009A73 8A4D0A                  		mov	cl, [di+10]	; [DI+BUFFINFO.buf_wrtcnt]
 13932 00009A76 30ED                    		xor	ch, ch
 13933 00009A78 36C606[4B03]18          		mov	byte [ss:ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
 13934 00009A7E F6C408                  		test	ah, 8		; buf_isDATA
 13935 00009A81 7406                    		jz	short NO_IGNORE
 13936 00009A83 36800E[4B03]20          		or	byte [ss:ALLOWED], 20h ; Allowed_IGNORE
 13937                                  
 13938                                  NO_IGNORE:				; ...
 13939 00009A89 8B450B                  		mov	ax, [di+11]	; [DI+BUFFINFO.buf_wrtcntinc]
 13940 00009A8C 57                      		push	di
 13941 00009A8D 31FF                    		xor	di, di
 13942 00009A8F 1E                      		push	ds
 13943 00009A90 53                      		push	bx
 13944                                  
 13945                                  WRTAGAIN:				; ...
 13946 00009A91 57                      		push	di
 13947 00009A92 51                      		push	cx
 13948 00009A93 50                      		push	ax
 13949 00009A94 B90100                  		mov	cx, 1
 13950 00009A97 53                      		push	bx
 13951 00009A98 52                      		push	dx
 13952 00009A99 1E                      		push	ds
 13953 00009A9A 36803E[7900]00          		cmp	byte [ss:BuffInHMA], 0
 13954 00009AA0 7418                    		jz	short NBUFFINHMA
 13955 00009AA2 51                      		push	cx
 13956 00009AA3 06                      		push	es
 13957 00009AA4 89DE                    		mov	si, bx
 13958 00009AA6 268B4E02                		mov	cx, [es:bp+2]	; [es:bp+DPB.SECTOR_SIZE]
 13959 00009AAA D1E9                    		shr	cx, 1
 13960 00009AAC 36C43E[7A00]            		les	di, [ss:LoMemBuff]
 13961 00009AB1 89FB                    		mov	bx, di
 13962 00009AB3 FC                      		cld
 13963 00009AB4 F3A5                    		rep movsw
 13964 00009AB6 06                      		push	es
 13965 00009AB7 1F                      		pop	ds
 13966 00009AB8 07                      		pop	es
 13967 00009AB9 59                      		pop	cx
 13968                                  
 13969                                  NBUFFINHMA:				; ...
 13970 00009ABA E8D8DB                  		call	DWRITE
 13971 00009ABD 1F                      		pop	ds
 13972 00009ABE 5A                      		pop	dx
 13973 00009ABF 5B                      		pop	bx
 13974 00009AC0 58                      		pop	ax
 13975 00009AC1 59                      		pop	cx
 13976 00009AC2 5F                      		pop	di
 13977 00009AC3 7201                    		jb	short NOSET
 13978 00009AC5 47                      		inc	di
 13979                                  
 13980                                  NOSET:					; ...
 13981 00009AC6 01C2                    		add	dx, ax
 13982 00009AC8 E2C7                    		loop	WRTAGAIN
 13983 00009ACA 5B                      		pop	bx
 13984 00009ACB 1F                      		pop	ds
 13985 00009ACC 09FF                    		or	di, di
 13986 00009ACE 7501                    		jnz	short BWROK
 13987 00009AD0 F9                      		stc
 13988                                  
 13989                                  BWROK:					; ...
 13990 00009AD1 5F                      		pop	di
 13991 00009AD2 C3                      		retn
 13992                                  
 13993                                  ; =============== S U B	R O U T	I N E =======================================
 13994                                  
 13995                                  SET_RQ_SC_PARMS:
 13996 00009AD3 50                      		push	ax
 13997 00009AD4 268B4602                		mov	ax, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 13998 00009AD8 36A3[AD0D]              		mov	[ss:SC_SECTOR_SIZE], ax
 13999 00009ADC 268A4600                		mov	al, [es:bp+0]
 14000 00009AE0 36A2[AF0D]              		mov	[ss:SC_DRIVE], al
 14001 00009AE4 58                      		pop	ax
 14002 00009AE5 C3                      		retn
 14003                                  
 14004                                  ; =============== S U B	R O U T	I N E =======================================
 14005                                  
 14006                                  INC_DIRTY_COUNT:
 14007 00009AE6 36FF06[7100]            		inc	word [ss:DirtyBufferCount]
 14008 00009AEB C3                      		retn
 14009                                  
 14010                                  ; =============== S U B	R O U T	I N E =======================================
 14011                                  
 14012                                  DEC_DIRTY_COUNT:
 14013 00009AEC 36833E[7100]00          		cmp	word [ss:DirtyBufferCount], 0
 14014 00009AF2 7405                    		jz	short ddcx
 14015 00009AF4 36FF0E[7100]            		dec	word [ss:DirtyBufferCount]
 14016                                  
 14017                                  ddcx:					; ...
 14018 00009AF9 C3                      		retn
 14019                                  
 14020                                  ; ---------------------------------------------------------------------------
 14021                                  
 14022                                  _$WAIT:					; ...
 14023 00009AFA 31C0                    		xor	ax, ax
 14024 00009AFC 368706[3403]            		xchg	ax, [ss:exit_code]
 14025 00009B01 E9E0A8                  		jmp	SYS_RETURN	; SYS_RET_OK
 14026                                  ; ---------------------------------------------------------------------------
 14027                                  
 14028                                  _$EXEC:					; ...
 14029 00009B04 36C606[8500]00          		mov	byte [ss:A20OFF_COUNT], 0
 14030 00009B0A 3C05                    		cmp	al, 5
 14031 00009B0C 7505                    		jnz	short Exec_@f
 14032 00009B0E 59                      		pop	cx
 14033 00009B0F B9[F741]                		mov	cx, LeaveDOS
 14034 00009B12 51                      		push	cx
 14035                                  
 14036                                  Exec_@f:				; ...
 14037 00009B13 55                      		push	bp
 14038 00009B14 89E5                    		mov	bp, sp
 14039 00009B16 83EC1D                  		sub	sp, 29
 14040 00009B19 3C05                    		cmp	al, 5
 14041 00009B1B 7614                    		jbe	short Exec_Check_2
 14042                                  
 14043                                  Exec_Bad_Fun:				; ...
 14044 00009B1D 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 14045 00009B23 B001                    		mov	al, 1		; error_invalid_function
 14046                                  
 14047                                  Exec_Ret_Err:				; ...
 14048 00009B25 89EC                    		mov	sp, bp
 14049 00009B27 5D                      		pop	bp
 14050 00009B28 E9C2A8                  		jmp	SYS_RET_ERR
 14051                                  ; ---------------------------------------------------------------------------
 14052                                  
 14053                                  ExecReadyJ:				; ...
 14054 00009B2B E84C18                  		call	ExecReady
 14055 00009B2E E90F04                  		jmp	norm_ovl
 14056                                  ; ---------------------------------------------------------------------------
 14057                                  
 14058                                  Exec_Check_2:				; ...
 14059 00009B31 3C02                    		cmp	al, 2
 14060 00009B33 74E8                    		jz	short Exec_Bad_Fun
 14061 00009B35 3C04                    		cmp	al, 4
 14062 00009B37 74E4                    		jz	short Exec_Bad_Fun
 14063 00009B39 3C05                    		cmp	al, 5
 14064 00009B3B 74EE                    		jz	short ExecReadyJ
 14065 00009B3D 895EFC                  		mov	[bp-4],	bx	; Exec_BlkL
 14066 00009B40 8C46FE                  		mov	word [bp-2], es
 14067 00009B43 8846FB                  		mov	[bp-5],	al	; Exec_Func
 14068 00009B46 C646FA00                		mov	byte [bp-6], 0 ; Exec_Load_High
 14069 00009B4A 8956E6                  		mov	[bp-26], dx	; ExecNameL
 14070 00009B4D 8C5EE8                  		mov	word [bp-24], ds ; ExecNameH
 14071 00009B50 89D6                    		mov	si, dx
 14072 00009B52 E8B6B4                  		call	DStrLen
 14073 00009B55 894EEA                  		mov	[bp-22], cx	; ExecNameLen
 14074 00009B58 36A0[0203]              		mov	al, [ss:AllocMethod]
 14075 00009B5C 36A2[8400]              		mov	[ss:ALLOCMSAVE], al
 14076 00009B60 30C0                    		xor	al, al
 14077 00009B62 55                      		push	bp
 14078 00009B63 36800E[8600]01          		or	byte [ss:DOS_FLAG], 1 ; EXECOPEN
 14079 00009B69 E84113                  		call	_$OPEN
 14080 00009B6C 9C                      		pushf
 14081 00009B6D 368026[8600]FE          		and	byte [ss:DOS_FLAG], 0FEh ; ~EXECOPEN
 14082 00009B73 9D                      		popf
 14083 00009B74 5D                      		pop	bp
 14084 00009B75 72AE                    		jb	short Exec_Ret_Err
 14085 00009B77 8946F8                  		mov	[bp-8],	ax	; Exec_FH
 14086 00009B7A 89C3                    		mov	bx, ax
 14087 00009B7C 30C0                    		xor	al, al
 14088 00009B7E E8ADC5                  		call	_$IOCTL
 14089 00009B81 7207                    		jb	short Exec_BombJ
 14090 00009B83 F6C280                  		test	dl, 80h		; devid_ISDEV
 14091 00009B86 740A                    		jz	short Exec_Check_Environ
 14092 00009B88 B002                    		mov	al, 2		; error_file_not_found
 14093                                  
 14094                                  Exec_BombJ:				; ...
 14095 00009B8A E9CC00                  		jmp	Exec_Bomb
 14096                                  ; ---------------------------------------------------------------------------
 14097                                  
 14098                                  BadEnv:					; ...
 14099 00009B8D B00A                    		mov	al, 0Ah		; error_bad_environment
 14100 00009B8F E9C700                  		jmp	Exec_Bomb
 14101                                  ; ---------------------------------------------------------------------------
 14102                                  
 14103                                  Exec_Check_Environ:			; ...
 14104 00009B92 C746EE0000              		mov	word [bp-18], 0 ; Exec_Load_Block
 14105 00009B97 C746F20000              		mov	word [bp-14], 0 ; Exec_Environ
 14106 00009B9C F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14107 00009BA0 7554                    		jnz	short Exec_Read_Header
 14108 00009BA2 C576FC                  		lds	si, [bp-4]	; Exec_Blk
 14109 00009BA5 8B04                    		mov	ax, [si]	; [SI+EXEC1.ENVIRON]
 14110 00009BA7 09C0                    		or	ax, ax
 14111 00009BA9 750C                    		jnz	short Exec_Scan_Env
 14112 00009BAB 368E1E[3003]            		mov	ds, [ss:CurrentPDB]
 14113 00009BB0 A12C00                  		mov	ax, [2Ch]	; [PDB.ENVIRON]
 14114 00009BB3 09C0                    		or	ax, ax
 14115 00009BB5 743F                    		jz	short Exec_Read_Header
 14116                                  
 14117                                  Exec_Scan_Env:				; ...
 14118 00009BB7 8EC0                    		mov	es, ax
 14119 00009BB9 31FF                    		xor	di, di
 14120 00009BBB B90080                  		mov	cx, 8000h
 14121 00009BBE 30C0                    		xor	al, al
 14122                                  
 14123                                  Exec_Get_Environ_Len:			; ...
 14124 00009BC0 F2AE                    		repne scasb
 14125 00009BC2 75C9                    		jnz	short BadEnv
 14126 00009BC4 49                      		dec	cx
 14127 00009BC5 78C6                    		js	short BadEnv
 14128 00009BC7 AE                      		scasb
 14129 00009BC8 75F6                    		jnz	short Exec_Get_Environ_Len
 14130 00009BCA 57                      		push	di
 14131 00009BCB 8D5D11                  		lea	bx, [di+11h]	; [DI+0Fh+2]
 14132 00009BCE 035EEA                  		add	bx, [bp-22]	; ExecNameLen
 14133 00009BD1 B104                    		mov	cl, 4
 14134 00009BD3 D3EB                    		shr	bx, cl
 14135 00009BD5 06                      		push	es
 14136 00009BD6 E85506                  		call	_$ALLOC
 14137 00009BD9 1F                      		pop	ds
 14138 00009BDA 59                      		pop	cx
 14139 00009BDB 7302                    		jnb	short Exec_Save_Environ
 14140 00009BDD EB74                    		jmp	short Exec_No_Mem
 14141                                  ; ---------------------------------------------------------------------------
 14142                                  
 14143                                  Exec_Save_Environ:			; ...
 14144 00009BDF 8EC0                    		mov	es, ax
 14145 00009BE1 8946F2                  		mov	[bp-14], ax	; Exec_Environ
 14146 00009BE4 31F6                    		xor	si, si
 14147 00009BE6 89F7                    		mov	di, si
 14148 00009BE8 F3A4                    		rep movsb
 14149 00009BEA B80100                  		mov	ax, 1
 14150 00009BED AB                      		stosw
 14151 00009BEE C576E6                  		lds	si, [bp-26]	; ExecName
 14152 00009BF1 8B4EEA                  		mov	cx, [bp-22]	; ExecNameLen
 14153 00009BF4 F3A4                    		rep movsb
 14154                                  
 14155                                  Exec_Read_Header:			; ...
 14156 00009BF6 16                      		push	ss
 14157 00009BF7 1F                      		pop	ds
 14158 00009BF8 B91A00                  		mov	cx, 26		; exec_header_len
 14159 00009BFB BA[C80F]                		mov	dx, exec_signature
 14160 00009BFE 06                      		push	es
 14161 00009BFF 1E                      		push	ds
 14162 00009C00 E88C04                  		call	ExecRead
 14163 00009C03 1F                      		pop	ds
 14164 00009C04 07                      		pop	es
 14165 00009C05 7250                    		jb	short Exec_Bad_File
 14166 00009C07 09C0                    		or	ax, ax
 14167 00009C09 744C                    		jz	short Exec_Bad_File
 14168 00009C0B 83F81A                  		cmp	ax, 26		; exec_header_len
 14169 00009C0E 7519                    		jnz	short Exec_Com_Filej
 14170 00009C10 F706[D40F]FFFF          		test	word [exec_max_BSS], 0FFFFh ; -1
 14171 00009C16 7504                    		jnz	short Exec_Check_Sig
 14172 00009C18 C646FAFF                		mov	byte [bp-6], 0FFh ;	Exec_Load_High,-1
 14173                                  
 14174                                  Exec_Check_Sig:				; ...
 14175 00009C1C A1[C80F]                		mov	ax, [exec_signature]
 14176 00009C1F 3D4D5A                  		cmp	ax, 5A4Dh	; 'MZ'
 14177 00009C22 7408                    		jz	short Exec_Save_Start
 14178 00009C24 3D5A4D                  		cmp	ax, 4D5Ah	; 'ZM'
 14179 00009C27 7403                    		jz	short Exec_Save_Start
 14180                                  
 14181                                  Exec_Com_Filej:				; ...
 14182 00009C29 E9F101                  		jmp	Exec_Com_File
 14183                                  ; ---------------------------------------------------------------------------
 14184                                  
 14185                                  Exec_Save_Start:			; ...
 14186 00009C2C A1[CC0F]                		mov	ax, [exec_pages]
 14187 00009C2F B105                    		mov	cl, 5
 14188 00009C31 D3E0                    		shl	ax, cl
 14189 00009C33 2B06[D00F]              		sub	ax, [exec_par_dir]
 14190 00009C37 8946F4                  		mov	[bp-12], ax	; Exec_Res_Len_Para
 14191 00009C3A F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14192 00009C3E 7449                    		jz	short Exec_Allocate
 14193 00009C40 C47EFC                  		les	di, [bp-4]	; Exec_Blk
 14194 00009C43 268B05                  		mov	ax, [es:di]	; [ES:DI+EXEC3.load_addr]
 14195 00009C46 8946EC                  		mov	[bp-20], ax	; Exec_DMA
 14196 00009C49 268B4502                		mov	ax, [es:di+2]	; [ES:DI+EXEC3.reloc_fac]
 14197 00009C4D 8946F6                  		mov	[bp-10], ax	; Exec_Rel_Fac
 14198 00009C50 E9E300                  		jmp	Exec_Find_Res
 14199                                  ; ---------------------------------------------------------------------------
 14200                                  
 14201                                  Exec_No_Mem:				; ...
 14202 00009C53 B008                    		mov	al, 8		; error_not_enough_memory
 14203 00009C55 EB02                    		jmp	short Exec_Bomb
 14204                                  ; ---------------------------------------------------------------------------
 14205                                  
 14206                                  Exec_Bad_File:				; ...
 14207 00009C57 B00B                    		mov	al, 0Bh		; error_bad_format
 14208                                  
 14209                                  Exec_Bomb:				; ...
 14210 00009C59 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14211 00009C5C E83F04                  		call	Exec_Dealloc
 14212 00009C5F E8E4B4                  		call	LCritDisk	; call LCritMEM
 14213 00009C62 50                      		push	ax
 14214 00009C63 55                      		push	bp
 14215 00009C64 E8640A                  		call	_$CLOSE
 14216 00009C67 5D                      		pop	bp
 14217 00009C68 58                      		pop	ax
 14218 00009C69 E9B9FE                  		jmp	Exec_Ret_Err
 14219                                  ; ---------------------------------------------------------------------------
 14220                                  
 14221                                  Exec_Chk_Mem:				; ...
 14222 00009C6C 36A0[0203]              		mov	al, [ss:AllocMethod]
 14223 00009C70 368A1E[8400]            		mov	bl, [ss:ALLOCMSAVE]
 14224 00009C75 36881E[0203]            		mov	[ss:AllocMethod], bl
 14225 00009C7A F6C340                  		test	bl, 40h		; HIGH_ONLY
 14226 00009C7D 75D4                    		jnz	short Exec_No_Mem
 14227 00009C7F A840                    		test	al, 40h
 14228 00009C81 74D0                    		jz	short Exec_No_Mem
 14229 00009C83 36A1[8A00]              		mov	ax, [ss:SAVE_AX]
 14230 00009C87 EB29                    		jmp	short Exec_Norm_Alloc
 14231                                  ; ---------------------------------------------------------------------------
 14232                                  
 14233                                  Exec_Allocate:				; ...
 14234 00009C89 C646E300                		mov	byte [bp-29], 0 ; Exec_NoStack
 14235 00009C8D 833E[D60F]00            		cmp	word [exec_SS], 0
 14236 00009C92 7512                    		jnz	short ea1
 14237 00009C94 833E[D80F]00            		cmp	word [exec_SP], 0
 14238 00009C99 750B                    		jnz	short ea1
 14239 00009C9B FE46E3                  		inc	byte [bp-29]
 14240 00009C9E 3DF00F                  		cmp	ax, 0FF0h	; 1000h-10h
 14241 00009CA1 7303                    		jnb	short ea1
 14242 00009CA3 83C010                  		add	ax, 10h
 14243                                  
 14244                                  ea1:					; ...
 14245 00009CA6 F606[0203]80            		test	byte [AllocMethod], 80h ; HIGH_FIRST
 14246 00009CAB 7405                    		jz	short Exec_Norm_Alloc
 14247 00009CAD 800E[0203]40            		or	byte [AllocMethod], 40h ; HIGH_ONLY
 14248                                  
 14249                                  Exec_Norm_Alloc:			; ...
 14250 00009CB2 A3[8A00]                		mov	[SAVE_AX], ax
 14251 00009CB5 BBFFFF                  		mov	bx, 0FFFFh
 14252 00009CB8 1E                      		push	ds
 14253 00009CB9 E87205                  		call	_$ALLOC
 14254 00009CBC 1F                      		pop	ds
 14255 00009CBD A1[8A00]                		mov	ax, [SAVE_AX]
 14256 00009CC0 83C010                  		add	ax, 10h
 14257 00009CC3 83FB11                  		cmp	bx, 11h
 14258 00009CC6 72A4                    		jb	short Exec_Chk_Mem
 14259 00009CC8 39D8                    		cmp	ax, bx
 14260 00009CCA 77A0                    		ja	short Exec_Chk_Mem
 14261 00009CCC F646FAFF                		test	byte [bp-6], 0FFh ;	Exec_Load_High,-1
 14262 00009CD0 7518                    		jnz	short Exec_BX_Max
 14263 00009CD2 0306[D20F]              		add	ax, [exec_min_BSS]
 14264 00009CD6 7294                    		jb	short Exec_Chk_Mem
 14265 00009CD8 39D8                    		cmp	ax, bx
 14266 00009CDA 7790                    		ja	short Exec_Chk_Mem
 14267 00009CDC 2B06[D20F]              		sub	ax, [exec_min_BSS]
 14268 00009CE0 0306[D40F]              		add	ax, [exec_max_BSS]
 14269 00009CE4 7204                    		jb	short Exec_BX_Max
 14270 00009CE6 39D8                    		cmp	ax, bx
 14271 00009CE8 7602                    		jbe	short Exec_Got_Block
 14272                                  
 14273                                  Exec_BX_Max:				; ...
 14274 00009CEA 89D8                    		mov	ax, bx
 14275                                  
 14276                                  Exec_Got_Block:				; ...
 14277 00009CEC 1E                      		push	ds
 14278 00009CED 89C3                    		mov	bx, ax
 14279 00009CEF 895EF0                  		mov	[bp-16], bx	; Exec_Size
 14280 00009CF2 E83905                  		call	_$ALLOC
 14281 00009CF5 1F                      		pop	ds
 14282 00009CF6 7303                    		jnb	short ea0
 14283 00009CF8 E971FF                  		jmp	Exec_Chk_Mem
 14284                                  ; ---------------------------------------------------------------------------
 14285                                  
 14286                                  ea0:					; ...
 14287 00009CFB 8A0E[8400]              		mov	cl, [ALLOCMSAVE]
 14288 00009CFF 880E[0203]              		mov	[AllocMethod], cl
 14289 00009D03 807EE300                		cmp	byte [bp-29], 0 ; Exec_NoStack
 14290 00009D07 7412                    		jz	short ea2
 14291 00009D09 81FB0010                		cmp	bx, 1000h
 14292 00009D0D 730C                    		jnb	short ea2
 14293 00009D0F B104                    		mov	cl, 4
 14294 00009D11 D3E3                    		shl	bx, cl
 14295 00009D13 81EB0001                		sub	bx, 100h
 14296 00009D17 891E[D80F]              		mov	[exec_SP], bx
 14297                                  
 14298                                  ea2:					; ...
 14299 00009D1B 8946EE                  		mov	[bp-18], ax	; Exec_Load_Block
 14300 00009D1E 83C010                  		add	ax, 10h
 14301 00009D21 F646FAFF                		test	byte [bp-6], 0FFh ;	Exec_Load_High,-1
 14302 00009D25 7409                    		jz	short Exec_Use_AX
 14303 00009D27 0346F0                  		add	ax, [bp-16]	; Exec_Size
 14304 00009D2A 2B46F4                  		sub	ax, [bp-12]	; Exec_Res_Len_Para
 14305 00009D2D 83E810                  		sub	ax, 10h
 14306                                  
 14307                                  Exec_Use_AX:				; ...
 14308 00009D30 8946F6                  		mov	[bp-10], ax	; Exec_Rel_Fac
 14309 00009D33 8946EC                  		mov	[bp-20], ax	; Exec_DMA
 14310                                  
 14311                                  Exec_Find_Res:				; ...
 14312 00009D36 8B56EC                  		mov	dx, [bp-20]	; Exec_DMA
 14313 00009D39 8956E4                  		mov	[bp-28], dx	; Exec_DMA_Save
 14314 00009D3C 8B16[D00F]              		mov	dx, [exec_par_dir]
 14315 00009D40 52                      		push	dx
 14316 00009D41 B104                    		mov	cl, 4
 14317 00009D43 D3E2                    		shl	dx, cl
 14318 00009D45 58                      		pop	ax
 14319 00009D46 B10C                    		mov	cl, 12
 14320 00009D48 D3E8                    		shr	ax, cl
 14321 00009D4A 89C1                    		mov	cx, ax
 14322 00009D4C 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14323 00009D4F 1E                      		push	ds
 14324 00009D50 30C0                    		xor	al, al
 14325 00009D52 E8F00A                  		call	_$LSEEK
 14326 00009D55 1F                      		pop	ds
 14327 00009D56 7303                    		jnb	short Exec_Big_Read
 14328 00009D58 E9FEFE                  		jmp	Exec_Bomb
 14329                                  ; ---------------------------------------------------------------------------
 14330                                  
 14331                                  Exec_Big_Read:				; ...
 14332 00009D5B 8B5EF4                  		mov	bx, [bp-12]	; Exec_Res_Len_Para
 14333 00009D5E 81FB0010                		cmp	bx, 1000h
 14334 00009D62 7203                    		jb	short Exec_Read_OK
 14335 00009D64 BBE00F                  		mov	bx, 0FE0h
 14336                                  
 14337                                  Exec_Read_OK:				; ...
 14338 00009D67 295EF4                  		sub	[bp-12], bx	; Exec_Res_Len_Para
 14339 00009D6A 53                      		push	bx
 14340 00009D6B B104                    		mov	cl, 4
 14341 00009D6D D3E3                    		shl	bx, cl
 14342 00009D6F 89D9                    		mov	cx, bx
 14343 00009D71 1E                      		push	ds
 14344 00009D72 8E5EEC                  		mov	ds, word [bp-20] ; Exec_DMA
 14345 00009D75 31D2                    		xor	dx, dx
 14346 00009D77 51                      		push	cx
 14347 00009D78 E81403                  		call	ExecRead
 14348 00009D7B 59                      		pop	cx
 14349 00009D7C 1F                      		pop	ds
 14350 00009D7D 7248                    		jb	short Exec_Bad_FileJ
 14351 00009D7F 39C1                    		cmp	cx, ax
 14352 00009D81 5B                      		pop	bx
 14353 00009D82 7408                    		jz	short ExecCheckEnd
 14354 00009D84 29C1                    		sub	cx, ax
 14355 00009D86 81F90002                		cmp	cx, 512
 14356 00009D8A 733B                    		jnb	short Exec_Bad_FileJ
 14357                                  
 14358                                  ExecCheckEnd:				; ...
 14359 00009D8C 015EEC                  		add	[bp-20], bx	; Exec_DMA
 14360 00009D8F F746F4FFFF              		test	word [bp-0Ch], 0FFFFh ; Exec_Res_Len_Para,-1
 14361 00009D94 75C5                    		jnz	short Exec_Big_Read
 14362 00009D96 8B4EF6                  		mov	cx, [bp-10]	; Exec_Rel_Fac
 14363 00009D99 A1[D60F]                		mov	ax, [exec_SS]
 14364 00009D9C 01C8                    		add	ax, cx
 14365 00009D9E A3[C20F]                		mov	[exec_init_SS], ax
 14366 00009DA1 A1[D80F]                		mov	ax, [exec_SP]
 14367 00009DA4 A3[C00F]                		mov	[exec_init_SP], ax
 14368 00009DA7 C406[DC0F]              		les	ax, [exec_IP] ; les ax,[exec_IP]
 14369 00009DAB A3[C40F]                		mov	[exec_init_IP], ax
 14370 00009DAE 8CC0                    		mov	ax, es
 14371 00009DB0 01C8                    		add	ax, cx
 14372 00009DB2 A3[C60F]                		mov	[exec_init_CS], ax
 14373 00009DB5 31C9                    		xor	cx, cx
 14374 00009DB7 8B16[E00F]              		mov	dx, [exec_rle_table]
 14375 00009DBB 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14376 00009DBE 1E                      		push	ds
 14377 00009DBF 31C0                    		xor	ax, ax
 14378 00009DC1 E8810A                  		call	_$LSEEK
 14379 00009DC4 1F                      		pop	ds
 14380 00009DC5 7303                    		jnb	short exec_get_entries
 14381                                  
 14382                                  Exec_Bad_FileJ:				; ...
 14383 00009DC7 E98DFE                  		jmp	Exec_Bad_File
 14384                                  ; ---------------------------------------------------------------------------
 14385                                  
 14386                                  exec_get_entries:			; ...
 14387 00009DCA 8B16[CE0F]              		mov	dx, [exec_rle_count]
 14388                                  
 14389                                  exec_read_reloc:			; ...
 14390 00009DCE 52                      		push	dx
 14391 00009DCF BA[BE03]                		mov	dx, OPENBUF
 14392 00009DD2 B98C01                  		mov	cx, 396		; ((Exec_Internal_Buffer_Size)/4)*4
 14393                                  					; (397>>2)<<2
 14394 00009DD5 1E                      		push	ds
 14395 00009DD6 E8B602                  		call	ExecRead
 14396 00009DD9 07                      		pop	es
 14397 00009DDA 5A                      		pop	dx
 14398 00009DDB 72EA                    		jb	short Exec_Bad_FileJ
 14399 00009DDD B96300                  		mov	cx, 99		; (Exec_Internal_Buffer_Size)/4	; (397>>2)
 14400 00009DE0 BF[BE03]                		mov	di, OPENBUF ; Exec_Internal_Buffer
 14401 00009DE3 8B76F6                  		mov	si, [bp-10]	; Exec_Rel_Fac
 14402                                  
 14403                                  exec_reloc_one:				; ...
 14404 00009DE6 09D2                    		or	dx, dx
 14405 00009DE8 7416                    		jz	short Exec_Set_PDBJ
 14406                                  
 14407                                  exec_get_addr:
 14408 00009DEA 26C51D                  		lds	bx, [es:di]
 14409 00009DED 8CD8                    		mov	ax, ds
 14410 00009DEF 0346E4                  		add	ax, [bp-28]	; Exec_DMA_Save
 14411 00009DF2 8ED8                    		mov	ds, ax
 14412 00009DF4 0137                    		add	[bx], si
 14413 00009DF6 83C704                  		add	di, 4
 14414 00009DF9 4A                      		dec	dx
 14415 00009DFA E2EA                    		loop	exec_reloc_one
 14416 00009DFC 06                      		push	es
 14417 00009DFD 1F                      		pop	ds
 14418 00009DFE EBCE                    		jmp	short exec_read_reloc
 14419                                  ; ---------------------------------------------------------------------------
 14420                                  
 14421                                  Exec_Set_PDBJ:				; ...
 14422 00009E00 06                      		push	es
 14423 00009E01 50                      		push	ax
 14424 00009E02 51                      		push	cx
 14425 00009E03 8E46E4                  		mov	es, word [bp-28] ; Exec_DMA_Save
 14426 00009E06 36A1[C60F]              		mov	ax, [ss:exec_init_CS]
 14427 00009E0A 368B0E[C40F]            		mov	cx, [ss:exec_init_IP]
 14428                                  		;call	[ss:FixExePatch] ; call	word [ss:FixExePatch]
 14429 00009E0F 36FF16[1212]            		call	word [ss:FixExePatch]
 14430 00009E14 59                      		pop	cx
 14431 00009E15 58                      		pop	ax
 14432 00009E16 07                      		pop	es
 14433 00009E17 E9DE00                  		jmp	Exec_Set_PDB
 14434                                  ; ---------------------------------------------------------------------------
 14435                                  
 14436                                  Exec_No_Memj:				; ...
 14437 00009E1A E936FE                  		jmp	Exec_No_Mem
 14438                                  ; ---------------------------------------------------------------------------
 14439                                  
 14440                                  Exec_Com_File:				; ...
 14441 00009E1D F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14442 00009E21 742D                    		jz	short Exec_Alloc_Com_File
 14443 00009E23 C576FC                  		lds	si, [bp-4]	; lds si,Exec_Blk
 14444 00009E26 AD                      		lodsw
 14445 00009E27 8946EC                  		mov	[bp-14h], ax	; mov Exec_DMA,ax
 14446 00009E2A B8FFFF                  		mov	ax, 0FFFFh
 14447 00009E2D EB63                    		jmp	short Exec_Read_Block
 14448                                  ; ---------------------------------------------------------------------------
 14449                                  
 14450                                  Exec_Chk_Com_Mem:			; ...
 14451 00009E2F 36A0[0203]              		mov	al, [ss:AllocMethod]
 14452 00009E33 368A1E[8400]            		mov	bl, [ss:ALLOCMSAVE]
 14453 00009E38 36881E[0203]            		mov	[ss:AllocMethod], bl
 14454 00009E3D F6C340                  		test	bl, 40h		; HIGH_ONLY
 14455 00009E40 75D8                    		jnz	short Exec_No_Memj
 14456 00009E42 A840                    		test	al, 40h
 14457 00009E44 74D4                    		jz	short Exec_No_Memj
 14458 00009E46 8B46EE                  		mov	ax, [bp-18]	; Exec_Load_Block
 14459 00009E49 31DB                    		xor	bx, bx
 14460 00009E4B E87A02                  		call	ChangeOwner
 14461 00009E4E EB0E                    		jmp	short Exec_Norm_Com_Alloc
 14462                                  ; ---------------------------------------------------------------------------
 14463                                  
 14464                                  Exec_Alloc_Com_File:			; ...
 14465 00009E50 36F606[0203]80          		test	byte [ss:AllocMethod], 80h ; HIGH_FIRST
 14466 00009E56 7406                    		jz	short Exec_Norm_Com_Alloc
 14467 00009E58 36800E[0203]40          		or	byte [ss:AllocMethod], 40h ; HIGH_ONLY
 14468                                  
 14469                                  Exec_Norm_Com_Alloc:			; ...
 14470 00009E5E BBFFFF                  		mov	bx, 0FFFFh
 14471 00009E61 E8CA03                  		call	_$ALLOC
 14472 00009E64 09DB                    		or	bx, bx
 14473 00009E66 74C7                    		jz	short Exec_Chk_Com_Mem
 14474 00009E68 895EF0                  		mov	[bp-16], bx	; Exec_Size
 14475 00009E6B 53                      		push	bx
 14476 00009E6C E8BF03                  		call	_$ALLOC
 14477 00009E6F 5B                      		pop	bx
 14478 00009E70 8946EE                  		mov	[bp-18], ax	; Exec_Load_Block
 14479 00009E73 83C010                  		add	ax, 10h
 14480 00009E76 8946EC                  		mov	[bp-20], ax	; Exec_DMA
 14481 00009E79 31C0                    		xor	ax, ax
 14482 00009E7B 81FB0010                		cmp	bx, 1000h
 14483 00009E7F 730E                    		jnb	short Exec_Read_Com
 14484 00009E81 89D8                    		mov	ax, bx
 14485 00009E83 B104                    		mov	cl, 4
 14486 00009E85 D3E0                    		shl	ax, cl
 14487 00009E87 3D0001                  		cmp	ax, 100h
 14488 00009E8A 76A3                    		jbe	short Exec_Chk_Com_Mem
 14489 00009E8C 2D0001                  		sub	ax, 100h
 14490                                  
 14491                                  Exec_Read_Com:				; ...
 14492 00009E8F 2D0001                  		sub	ax, 100h
 14493                                  
 14494                                  Exec_Read_Block:			; ...
 14495 00009E92 50                      		push	ax
 14496 00009E93 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14497 00009E96 31C9                    		xor	cx, cx
 14498 00009E98 89CA                    		mov	dx, cx
 14499 00009E9A 31C0                    		xor	ax, ax
 14500 00009E9C E8A609                  		call	_$LSEEK
 14501 00009E9F 59                      		pop	cx
 14502 00009EA0 8E5EEC                  		mov	ds, word [bp-20] ; Exec_DMA
 14503 00009EA3 31D2                    		xor	dx, dx
 14504 00009EA5 51                      		push	cx
 14505 00009EA6 E8E601                  		call	ExecRead
 14506 00009EA9 5E                      		pop	si
 14507 00009EAA 7303                    		jnb	short OkRead
 14508 00009EAC E9A8FD                  		jmp	Exec_Bad_File
 14509                                  ; ---------------------------------------------------------------------------
 14510                                  
 14511                                  OkRead:					; ...
 14512 00009EAF 39F0                    		cmp	ax, si
 14513 00009EB1 7503                    		jnz	short OkRead2
 14514 00009EB3 E979FF                  		jmp	Exec_Chk_Com_Mem
 14515                                  ; ---------------------------------------------------------------------------
 14516                                  
 14517                                  OkRead2:				; ...
 14518 00009EB6 368A1E[8400]            		mov	bl, [ss:ALLOCMSAVE]
 14519 00009EBB 36881E[0203]            		mov	[ss:AllocMethod], bl
 14520 00009EC0 F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14521 00009EC4 7532                    		jnz	short Exec_Set_PDB
 14522 00009EC6 8B46EC                  		mov	ax, [bp-20]	; Exec_DMA
 14523 00009EC9 83E810                  		sub	ax, 10h
 14524 00009ECC 36A3[C60F]              		mov	[ss:exec_init_CS], ax
 14525 00009ED0 36C706[C40F]0001        		mov	word [ss:exec_init_IP], 100h
 14526 00009ED7 81C6FE00                		add	si, 0FEh
 14527 00009EDB 83FEFE                  		cmp	si, 0FFFEh
 14528 00009EDE 7404                    		jz	short Exec_St_Ok
 14529 00009EE0 81C60001                		add	si, 100h
 14530                                  
 14531                                  Exec_St_Ok:				; ...
 14532 00009EE4 368936[C00F]            		mov	[ss:exec_init_SP], si
 14533 00009EE9 36A3[C20F]              		mov	[ss:exec_init_SS], ax
 14534 00009EED 8ED8                    		mov	ds, ax
 14535 00009EEF C7040000                		mov	word [si], 0
 14536                                  		;call	[ss:ChkCopyProt] ; call	word [ss:ChkCopyProt]
 14537 00009EF3 36FF16[6100]            		call	word [ss:ChkCopyProt]
 14538                                  
 14539                                  Exec_Set_PDB:				; ...
 14540 00009EF8 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14541 00009EFB E8A001                  		call	Exec_Dealloc
 14542 00009EFE 55                      		push	bp
 14543 00009EFF E8C907                  		call	_$CLOSE
 14544 00009F02 5D                      		pop	bp
 14545 00009F03 E8A301                  		call	Exec_Alloc
 14546 00009F06 F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14547 00009F0A 743A                    		jz	short Exec_Build_Header
 14548 00009F0C E8C701                  		call	Scan_Execname
 14549 00009F0F E8DB01                  		call	Scan_Special_Entries
 14550 00009F12 36803E[3F10]00          		cmp	byte [ss:DriverLoad], 0
 14551 00009F18 7426                    		jz	short norm_ovl
 14552 00009F1A 56                      		push	si
 14553 00009F1B 06                      		push	es
 14554 00009F1C 36C436[4010]            		les	si, [ss:BiosDataPtr]
 14555 00009F21 26803C00                		cmp	byte [es:si], 0
 14556 00009F25 7411                    		jz	short sysinit_done
 14557 00009F27 368E06[3003]            		mov	es, [ss:CurrentPDB]
 14558 00009F2C 36FF36[BD0E]            		push	word [ss:SPECIAL_VERSION] ; push word [ss:SPECIAL_VERSION]
 14559 00009F31 268F06[4000]            		pop	word [es:SFTFCB] ; pop word [es:PDB.Version]
 14560 00009F36 EB06                    		jmp	short setver_done
 14561                                  ; ---------------------------------------------------------------------------
 14562                                  
 14563                                  sysinit_done:				; ...
 14564 00009F38 36C606[3F10]00          		mov	byte [ss:DriverLoad], 0
 14565                                  
 14566                                  setver_done:				; ...
 14567 00009F3E 07                      		pop	es
 14568 00009F3F 5E                      		pop	si
 14569                                  
 14570                                  norm_ovl:				; ...
 14571 00009F40 89EC                    		mov	sp, bp
 14572 00009F42 5D                      		pop	bp
 14573 00009F43 E99EA4                  		jmp	SYS_RETURN	; SYS_RET_OK
 14574                                  ; ---------------------------------------------------------------------------
 14575                                  
 14576                                  Exec_Build_Header:			; ...
 14577 00009F46 8B56EE                  		mov	dx, [bp-18]	; Exec_Load_Block
 14578 00009F49 BE0100                  		mov	si, 1		; ARENA.OWNER
 14579 00009F4C 8B46F2                  		mov	ax, [bp-14]	; Exec_Environ
 14580 00009F4F 09C0                    		or	ax, ax
 14581 00009F51 7405                    		jz	short No_Owner
 14582 00009F53 48                      		dec	ax
 14583 00009F54 8ED8                    		mov	ds, ax
 14584 00009F56 8914                    		mov	[si], dx
 14585                                  
 14586                                  No_Owner:				; ...
 14587 00009F58 8B46EE                  		mov	ax, [bp-18]	; Exec_Load_Block
 14588 00009F5B 48                      		dec	ax
 14589 00009F5C 8ED8                    		mov	ds, ax
 14590 00009F5E 8914                    		mov	[si], dx
 14591 00009F60 1E                      		push	ds
 14592 00009F61 07                      		pop	es
 14593 00009F62 BF0800                  		mov	di, 8		; ARENA.NAME
 14594 00009F65 E86E01                  		call	Scan_Execname
 14595 00009F68 51                      		push	cx
 14596 00009F69 56                      		push	si
 14597                                  
 14598                                  MoveName:				; ...
 14599 00009F6A AC                      		lodsb
 14600 00009F6B 3C2E                    		cmp	al, '.'         ; 2Eh
 14601 00009F6D 7408                    		jz	short Mem_Done
 14602 00009F6F AA                      		stosb
 14603 00009F70 83FF10                  		cmp	di, 16		; ARENAHEADERSIZE
 14604 00009F73 7302                    		jnb	short Mem_Done
 14605 00009F75 E2F3                    		loop	MoveName
 14606                                  
 14607                                  Mem_Done:				; ...
 14608 00009F77 30C0                    		xor	al, al
 14609 00009F79 83FF10                  		cmp	di, 16		; ARENAHEADERSIZE
 14610 00009F7C 7301                    		jnb	short Fill8
 14611 00009F7E AA                      		stosb
 14612                                  
 14613                                  Fill8:					; ...
 14614 00009F7F 5E                      		pop	si
 14615 00009F80 59                      		pop	cx
 14616 00009F81 E86901                  		call	Scan_Special_Entries
 14617 00009F84 52                      		push	dx
 14618 00009F85 8B76F0                  		mov	si, [bp-16]	; Exec_Size
 14619 00009F88 01D6                    		add	si, dx
 14620 00009F8A E804AF                  		call	_$DUP_PDB
 14621 00009F8D 5A                      		pop	dx
 14622 00009F8E FF76F2                  		push	word [bp-14] ; Exec_Environ
 14623 00009F91 268F062C00              		pop	word [es:2Ch] ; [ES:PDB.ENVIRON]
 14624 00009F96 36FF36[BD0E]            		push	word [ss:SPECIAL_VERSION]
 14625 00009F9B 268F06[4000]            		pop	word [es:SFTFCB] ; [ES:PDB.Version]
 14626 00009FA0 C576FC                  		lds	si, [bp-4]	; Exec_Blk
 14627 00009FA3 1E                      		push	ds
 14628 00009FA4 56                      		push	si
 14629 00009FA5 C57406                  		lds	si, [si+6]	; [SI+EXEC0.5C_FCB]
 14630 00009FA8 B90C00                  		mov	cx, 12
 14631 00009FAB 51                      		push	cx
 14632 00009FAC BF5C00                  		mov	di, 5Ch
 14633 00009FAF 8A1C                    		mov	bl, [si]
 14634 00009FB1 F3A4                    		rep movsb
 14635 00009FB3 31C0                    		xor	ax, ax
 14636 00009FB5 AB                      		stosw
 14637 00009FB6 AB                      		stosw
 14638 00009FB7 59                      		pop	cx
 14639 00009FB8 5E                      		pop	si
 14640 00009FB9 1F                      		pop	ds
 14641 00009FBA 1E                      		push	ds
 14642 00009FBB 56                      		push	si
 14643 00009FBC C5740A                  		lds	si, [si+0Ah]	; [SI+EXEC0.6C_FCB]
 14644 00009FBF 8A3C                    		mov	bh, [si]
 14645 00009FC1 F3A4                    		rep movsb
 14646 00009FC3 AB                      		stosw
 14647 00009FC4 AB                      		stosw
 14648 00009FC5 5E                      		pop	si
 14649 00009FC6 1F                      		pop	ds
 14650 00009FC7 C57402                  		lds	si, [si+2]	; [SI+EXEC0.COM_LINE]
 14651 00009FCA 80C980                  		or	cl, 80h
 14652 00009FCD 89CF                    		mov	di, cx
 14653 00009FCF F3A4                    		rep movsb
 14654 00009FD1 FEC9                    		dec	cl
 14655 00009FD3 88F8                    		mov	al, bh
 14656 00009FD5 30FF                    		xor	bh, bh
 14657 00009FD7 E8650A                  		call	GetVisDrv
 14658 00009FDA 7302                    		jnb	short Exec_BL
 14659 00009FDC 88CF                    		mov	bh, cl
 14660                                  
 14661                                  Exec_BL:				; ...
 14662 00009FDE 88D8                    		mov	al, bl
 14663 00009FE0 30DB                    		xor	bl, bl
 14664 00009FE2 E85A0A                  		call	GetVisDrv
 14665 00009FE5 7302                    		jnb	short Exec_Set_Return
 14666 00009FE7 88CB                    		mov	bl, cl
 14667                                  
 14668                                  Exec_Set_Return:			; ...
 14669 00009FE9 E889A2                  		call	Get_User_Stack
 14670 00009FEC FF7414                  		push	word [si+14h] ; [SI+user_env.user_CS]
 14671 00009FEF FF7412                  		push	word [si+12h] ; [SI+user_env.user_IP]
 14672 00009FF2 FF7414                  		push	word [si+14h] ; [SI+user_env.user_CS]
 14673 00009FF5 FF7412                  		push	word [si+12h] ; [SI+user_env.user_IP]
 14674 00009FF8 268F060A00              		pop	word [es:0Ah] ; [ES:PDB.EXIT]
 14675 00009FFD 268F060C00              		pop	word [es:0Ch] ; [ES:PDB.EXIT+2]
 14676 0000A002 31C0                    		xor	ax, ax
 14677 0000A004 8ED8                    		mov	ds, ax
 14678 0000A006 8F068800                		pop	word [88h] ; [addr_int_terminate] ; 22h*4
 14679 0000A00A 8F068A00                		pop	word [8Ah] ; [addr_int_terminate+2] ; (22h*4)+2
 14680 0000A00E 36C706[2C03]8000        		mov	word [ss:DMAADD], 80h
 14681 0000A015 368E1E[3003]            		mov	ds, [ss:CurrentPDB]
 14682 0000A01A 368C1E[2E03]            		mov	word [ss:DMAADD+2],	ds
 14683 0000A01F F646FB01                		test	byte [bp-5], 1 ; Exec_Func,exec_func_no_execute
 14684 0000A023 7427                    		jz	short exec_go
 14685 0000A025 36C536[C00F]            		lds	si, [ss:exec_init_SP]
 14686 0000A02A C47EFC                  		les	di, [bp-4]	; Exec_Blk
 14687 0000A02D 268C5D10                		mov	word [es:di+10h], ds ; [ES:DI+EXEC1.SS]
 14688 0000A031 4E                      		dec	si
 14689 0000A032 4E                      		dec	si
 14690 0000A033 891C                    		mov	[si], bx
 14691 0000A035 2689750E                		mov	[es:di+0Eh], si	; [ES:DI+EXEC1.SP]
 14692 0000A039 36C506[C40F]            		lds	ax, [ss:exec_init_IP]
 14693 0000A03E 268C5D14                		mov	word [es:di+14h], ds ; [ES:DI+EXEC1.CS]
 14694 0000A042 26894512                		mov	[es:di+12h], ax	; [ES:DI+EXEC1.IP]
 14695 0000A046 89EC                    		mov	sp, bp
 14696 0000A048 5D                      		pop	bp
 14697 0000A049 E998A3                  		jmp	SYS_RETURN	; SYS_RET_OK
 14698                                  ; ---------------------------------------------------------------------------
 14699                                  
 14700                                  exec_go:				; ...
 14701 0000A04C 36C536[C40F]            		lds	si, [ss:exec_init_IP]
 14702 0000A051 36C43E[C00F]            		les	di, [ss:exec_init_SP]
 14703 0000A056 8CC0                    		mov	ax, es
 14704 0000A058 36803E[1112]00          		cmp	byte [ss:DosHasHMA], 0
 14705 0000A05E 741A                    		jz	short Xfer_To_User
 14706 0000A060 1E                      		push	ds
 14707 0000A061 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 14708 0000A066 800E[8600]04            		or	byte [DOS_FLAG], 4 ; EXECA20OFF
 14709 0000A06B 8916[6300]              		mov	[A20OFF_PSP], dx
 14710 0000A06F 8CD8                    		mov	ax, ds
 14711 0000A071 1F                      		pop	ds
 14712 0000A072 50                      		push	ax
 14713 0000A073 B8[1511]                		mov	ax, disa20_xfer
 14714 0000A076 50                      		push	ax
 14715 0000A077 8CC0                    		mov	ax, es
 14716 0000A079 CB                      		retf
 14717                                  ; ---------------------------------------------------------------------------
 14718                                  
 14719                                  Xfer_To_User:				; ...
 14720 0000A07A FA                      		cli
 14721 0000A07B 36C606[2103]00          		mov	byte [ss:INDOS], 0
 14722 0000A081 8ED0                    		mov	ss, ax
 14723 0000A083 89FC                    		mov	sp, di
 14724 0000A085 FB                      		sti
 14725 0000A086 1E                      		push	ds
 14726 0000A087 56                      		push	si
 14727 0000A088 8EC2                    		mov	es, dx
 14728 0000A08A 8EDA                    		mov	ds, dx
 14729 0000A08C 89D8                    		mov	ax, bx
 14730 0000A08E CB                      		retf
 14731                                  
 14732                                  ; =============== S U B	R O U T	I N E =======================================
 14733                                  
 14734                                  ExecRead:		; ...
 14735 0000A08F E80C00                  		call	Exec_Dealloc
 14736 0000A092 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14737 0000A095 55                      		push	bp
 14738 0000A096 E84107                  		call	_$READ
 14739 0000A099 5D                      		pop	bp
 14740 0000A09A E80C00                  		call	Exec_Alloc
 14741 0000A09D C3                      		retn
 14742                                  
 14743                                  ; =============== S U B	R O U T	I N E =======================================
 14744                                  
 14745                                  Exec_Dealloc:	; ...
 14746 0000A09E 53                      		push	bx
 14747 0000A09F 29DB                    		sub	bx, bx
 14748 0000A0A1 E882B0                  		call	ECritDisk	; call ECritMEM
 14749 0000A0A4 E81000                  		call	ChangeOwners
 14750 0000A0A7 5B                      		pop	bx
 14751 0000A0A8 C3                      		retn
 14752                                  
 14753                                  ; =============== S U B	R O U T	I N E =======================================
 14754                                  
 14755                                  Exec_Alloc:		; ...
 14756 0000A0A9 53                      		push	bx
 14757 0000A0AA 368B1E[3003]            		mov	bx, [ss:CurrentPDB]
 14758 0000A0AF E80500                  		call	ChangeOwners
 14759 0000A0B2 E891B0                  		call	LCritDisk	; call LCritMEM
 14760 0000A0B5 5B                      		pop	bx
 14761 0000A0B6 C3                      		retn
 14762                                  
 14763                                  ; =============== S U B	R O U T	I N E =======================================
 14764                                  
 14765                                  ChangeOwners:	; ...
 14766 0000A0B7 9C                      		pushf
 14767 0000A0B8 50                      		push	ax
 14768 0000A0B9 8B46F2                  		mov	ax, [bp-14]	; Exec_Environ
 14769 0000A0BC E80900                  		call	ChangeOwner
 14770 0000A0BF 8B46EE                  		mov	ax, [bp-18]	; Exec_Load_Block
 14771 0000A0C2 E80300                  		call	ChangeOwner
 14772 0000A0C5 58                      		pop	ax
 14773 0000A0C6 9D                      		popf
 14774                                  
 14775                                  chgown_retn:				; ...
 14776 0000A0C7 C3                      		retn
 14777                                  
 14778                                  ; =============== S U B	R O U T	I N E =======================================
 14779                                  
 14780                                  ChangeOwner:	; ...
 14781 0000A0C8 09C0                    		or	ax, ax
 14782 0000A0CA 74FB                    		jz	short chgown_retn
 14783 0000A0CC 48                      		dec	ax
 14784 0000A0CD 1E                      		push	ds
 14785 0000A0CE 8ED8                    		mov	ds, ax
 14786 0000A0D0 891E0100                		mov	[1],	bx	; [ARENA.OWNER]
 14787 0000A0D4 1F                      		pop	ds
 14788 0000A0D5 C3                      		retn
 14789                                  
 14790                                  ; =============== S U B	R O U T	I N E =======================================
 14791                                  
 14792                                  Scan_Execname:	; ...
 14793 0000A0D6 C576E6                  		lds	si, [bp-26]	; ExecName
 14794                                  
 14795                                  Save_Begin:				; ...
 14796 0000A0D9 89F1                    		mov	cx, si
 14797                                  
 14798                                  Scan0:					; ...
 14799 0000A0DB AC                      		lodsb
 14800 0000A0DC 3C3A                    		cmp	al, ':'         ; 3Ah
 14801 0000A0DE 74F9                    		jz	short Save_Begin
 14802 0000A0E0 3C5C                    		cmp	al, '\'         ; 5Ch
 14803 0000A0E2 74F5                    		jz	short Save_Begin
 14804 0000A0E4 3C00                    		cmp	al, 0
 14805 0000A0E6 75F3                    		jnz	short Scan0
 14806 0000A0E8 29CE                    		sub	si, cx
 14807 0000A0EA 87F1                    		xchg	si, cx
 14808 0000A0EC C3                      		retn
 14809                                  
 14810                                  ; =============== S U B	R O U T	I N E =======================================
 14811                                  
 14812                                  Scan_Special_Entries: ; ...
 14813 0000A0ED 49                      		dec	cx
 14814 0000A0EE 36C706[BD0E]0500        		mov	word [ss:SPECIAL_VERSION], 5
 14815 0000A0F5 36C43E[5D00]            		les	di, [ss:UU_IFS_DOS_CALL]
 14816 0000A0FA 8CC0                    		mov	ax, es
 14817 0000A0FC 09F8                    		or	ax, di
 14818 0000A0FE 743A                    		jz	short End_List
 14819                                  
 14820                                  GetEntries:				; ...
 14821 0000A100 268A05                  		mov	al, [es:di]
 14822 0000A103 08C0                    		or	al, al
 14823 0000A105 7433                    		jz	short End_List
 14824 0000A107 36893E[0E06]            		mov	[ss:TEMP_VAR2],	di
 14825 0000A10C 38C8                    		cmp	al, cl
 14826 0000A10E 751C                    		jnz	short SkipOne
 14827 0000A110 47                      		inc	di
 14828 0000A111 51                      		push	cx
 14829 0000A112 56                      		push	si
 14830 0000A113 50                      		push	ax
 14831                                  
 14832                                  sse_next_char:				; ...
 14833 0000A114 AC                      		lodsb
 14834 0000A115 E89EEE                  		call	UCase
 14835 0000A118 AE                      		scasb
 14836 0000A119 750E                    		jnz	short Not_Matched
 14837 0000A11B E2F7                    		loop	sse_next_char
 14838 0000A11D 58                      		pop	ax
 14839 0000A11E 268B05                  		mov	ax, [es:di]
 14840 0000A121 36A3[BD0E]              		mov	[ss:SPECIAL_VERSION], ax
 14841 0000A125 5E                      		pop	si
 14842 0000A126 59                      		pop	cx
 14843 0000A127 EB11                    		jmp	short End_List
 14844                                  ; ---------------------------------------------------------------------------
 14845                                  
 14846                                  Not_Matched:				; ...
 14847 0000A129 58                      		pop	ax
 14848 0000A12A 5E                      		pop	si
 14849 0000A12B 59                      		pop	cx
 14850                                  
 14851                                  SkipOne:				; ...
 14852 0000A12C 368B3E[0E06]            		mov	di, [ss:TEMP_VAR2]
 14853 0000A131 30E4                    		xor	ah, ah
 14854 0000A133 01C7                    		add	di, ax
 14855 0000A135 83C703                  		add	di, 3
 14856 0000A138 EBC6                    		jmp	short GetEntries
 14857                                  ; ---------------------------------------------------------------------------
 14858                                  
 14859                                  End_List:				; ...
 14860 0000A13A C3                      		retn
 14861                                  
 14862                                  ; ---------------------------------------------------------------------------
 14863                                  
 14864                                  _$KEEP_PROCESS:				; ...
 14865 0000A13B 50                      		push	ax
 14866 0000A13C 36C606[7C05]03          		mov	byte [ss:EXIT_TYPE], 3 ; EXIT_KEEP_PROCESS
 14867 0000A142 368E06[3003]            		mov	es, [ss:CurrentPDB]
 14868 0000A147 83FA06                  		cmp	dx, 6
 14869 0000A14A 7303                    		jnb	short Keep_Shrink
 14870 0000A14C BA0600                  		mov	dx, 6
 14871                                  
 14872                                  Keep_Shrink:				; ...
 14873 0000A14F 89D3                    		mov	bx, dx
 14874 0000A151 53                      		push	bx
 14875 0000A152 06                      		push	es
 14876 0000A153 E83902                  		call	_$SETBLOCK
 14877 0000A156 1F                      		pop	ds
 14878 0000A157 5B                      		pop	bx
 14879 0000A158 7207                    		jb	short Keep_Done
 14880 0000A15A 8CD8                    		mov	ax, ds
 14881 0000A15C 01D8                    		add	ax, bx
 14882 0000A15E A30200                  		mov	[2], ax	; [PDB.BLOCK_LEN]
 14883                                  
 14884                                  Keep_Done:				; ...
 14885 0000A161 58                      		pop	ax
 14886 0000A162 EB26                    		jmp	short exit_inner
 14887                                  ; ---------------------------------------------------------------------------
 14888                                  
 14889                                  STAY_RESIDENT:				; ...
 14890 0000A164 B80031                  		mov	ax, 3100h	; (KEEP_PROCESS<<8)+0
 14891 0000A167 83C20F                  		add	dx, 15
 14892 0000A16A D1DA                    		rcr	dx, 1
 14893 0000A16C B103                    		mov	cl, 3
 14894 0000A16E D3EA                    		shr	dx, cl
 14895 0000A170 E9789F                  		jmp	COMMAND
 14896                                  ; ---------------------------------------------------------------------------
 14897                                  
 14898                                  _$EXIT:					; ...
 14899 0000A173 30E4                    		xor	ah, ah
 14900 0000A175 368626[4D03]            		xchg	ah, [ss:DidCTRLC]
 14901 0000A17A 08E4                    		or	ah, ah
 14902 0000A17C 36C606[7C05]00          		mov	byte [ss:EXIT_TYPE], 0 ; EXIT_TERMINATE
 14903 0000A182 7406                    		jz	short exit_inner
 14904 0000A184 36C606[7C05]01          		mov	byte [ss:EXIT_TYPE], 1 ; EXIT_CTRL_C
 14905                                  
 14906                                  exit_inner:				; ...
 14907 0000A18A E8E8A0                  		call	Get_User_Stack
 14908 0000A18D 36FF36[3003]            		push	word [ss:CurrentPDB]
 14909 0000A192 8F4414                  		pop	word [si+14h] ; [SI+user_env.user_CS]
 14910 0000A195 EB08                    		jmp	short abort_inner
 14911                                  ; ---------------------------------------------------------------------------
 14912                                  
 14913                                  _$ABORT:				; ...
 14914 0000A197 30C0                    		xor	al, al
 14915 0000A199 36C606[7C05]00          		mov	byte [ss:EXIT_TYPE], 0 ; EXIT_ABORT
 14916                                  
 14917                                  abort_inner:				; ...
 14918 0000A19F 368A26[7C05]            		mov	ah, [ss:EXIT_TYPE]
 14919 0000A1A4 36A3[3403]              		mov	[ss:exit_code],	ax
 14920 0000A1A8 E8CAA0                  		call	Get_User_Stack
 14921 0000A1AB 8E5C14                  		mov	ds, word [si+14h] ; [SI+user_env.user_CS]
 14922 0000A1AE 31C0                    		xor	ax, ax
 14923 0000A1B0 8EC0                    		mov	es, ax
 14924 0000A1B2 BE0A00                  		mov	si, 10		; SAVEXIT
 14925 0000A1B5 BF8800                  		mov	di, 88h		; addr_int_terminate
 14926 0000A1B8 A5                      		movsw
 14927 0000A1B9 A5                      		movsw
 14928 0000A1BA A5                      		movsw
 14929 0000A1BB A5                      		movsw
 14930 0000A1BC A5                      		movsw
 14931 0000A1BD A5                      		movsw
 14932 0000A1BE E916F2                  		jmp	reset_environment
 14933                                  ; ---------------------------------------------------------------------------
 14934                                  
 14935                                  RetExePatch:				; ...
 14936 0000A1C1 C3                      		retn
 14937                                  
 14938                                  ; =============== S U B	R O U T	I N E =======================================
 14939                                  
 14940                                  arena_free_process:	; ...
 14941 0000A1C2 36A1[2400]              		mov	ax, [ss:arena_head]
 14942                                  
 14943                                  arena_free_process_start:		; ...
 14944 0000A1C6 BF0000                  		mov	di, 0		; ARENA.SIGNATURE
 14945 0000A1C9 E83000                  		call	check_signature
 14946                                  
 14947                                  arena_free_process_loop:		; ...
 14948 0000A1CC 723D                    		jb	short AFP_RETN
 14949 0000A1CE 06                      		push	es
 14950 0000A1CF 1F                      		pop	ds
 14951 0000A1D0 391E0100                		cmp	[1],	bx	; [ARENA.OWNER]
 14952 0000A1D4 7504                    		jnz	short arena_free_next
 14953 0000A1D6 893E0100                		mov	[1],	di
 14954                                  
 14955                                  arena_free_next:			; ...
 14956 0000A1DA 803D5A                  		cmp	byte [di], 5Ah ; 'Z' ; arena_signature_end
 14957 0000A1DD 7405                    		jz	short arena_chk_umbs
 14958 0000A1DF E81300                  		call	arena_next
 14959 0000A1E2 EBE8                    		jmp	short arena_free_process_loop
 14960                                  ; ---------------------------------------------------------------------------
 14961                                  
 14962                                  arena_chk_umbs:				; ...
 14963 0000A1E4 36A1[8C00]              		mov	ax, [ss:UMB_HEAD]
 14964 0000A1E8 83F8FF                  		cmp	ax, 0FFFFh
 14965 0000A1EB 741E                    		jz	short AFP_RETN
 14966 0000A1ED 8CDF                    		mov	di, ds
 14967 0000A1EF 39C7                    		cmp	di, ax
 14968 0000A1F1 7318                    		jnb	short AFP_RETN
 14969 0000A1F3 EBD1                    		jmp	short arena_free_process_start
 14970                                  
 14971                                  ; ---------------------------------------------------------------------------
 14972                                  
 14973                                  arena_next:				; ...
 14974 0000A1F5 8CD8                    		mov	ax, ds
 14975 0000A1F7 03060300                		add	ax, [3]	; [ARENA.SIZE]
 14976 0000A1FB 40                      		inc	ax
 14977                                  
 14978                                  ; =============== S U B	R O U T	I N E =======================================
 14979                                  
 14980                                  check_signature:
 14981 0000A1FC 8EC0                    		mov	es, ax
 14982 0000A1FE 26803D4D                		cmp	byte [es:di], 4Dh ;	'M' ; arena_signature_normal
 14983 0000A202 7407                    		jz	short AFP_RETN
 14984 0000A204 26803D5A                		cmp	byte [es:di], 5Ah ;	'Z' ; arena_signature_end
 14985 0000A208 7401                    		jz	short AFP_RETN
 14986 0000A20A F9                      		stc
 14987                                  
 14988                                  AFP_RETN:				; ...
 14989 0000A20B C3                      		retn			; COALESCE_RETN
 14990                                  
 14991                                  ; =============== S U B	R O U T	I N E =======================================
 14992                                  
 14993                                  Coalesce:		; ...
 14994 0000A20C 803D5A                  		cmp	byte [di], 5Ah ; 'Z' ; arena_signature_end
 14995 0000A20F 74FA                    		jz	short AFP_RETN	; COALESCE_RETN
 14996 0000A211 E8E1FF                  		call	arena_next
 14997 0000A214 72F5                    		jb	short AFP_RETN	; COALESCE_RETN
 14998 0000A216 26393E0100              		cmp	[es:1],	di	; [ES:ARENA.OWNER]
 14999 0000A21B 75EE                    		jnz	short AFP_RETN	; COALESCE_RETN
 15000 0000A21D 268B0E0300              		mov	cx, [es:3]	; [ES:ARENA.SIZE]
 15001 0000A222 41                      		inc	cx
 15002 0000A223 010E0300                		add	[3], cx		; [ARENA.SIZE]
 15003 0000A227 268A0D                  		mov	cl, [es:di]
 15004 0000A22A 880D                    		mov	[di], cl
 15005 0000A22C EBDE                    		jmp	short Coalesce
 15006                                  
 15007                                  ; ---------------------------------------------------------------------------
 15008                                  
 15009                                  _$ALLOC:				; ...
 15010 0000A22E E8F5AE                  		call	ECritDisk	; call ECritMEM
 15011 0000A231 36A1[2400]              		mov	ax, [ss:arena_head]
 15012 0000A235 36A3[8E00]              		mov	[ss:START_ARENA], ax
 15013 0000A239 36F606[0203]C0          		test	byte [ss:AllocMethod], 0C0h ; HIGH_FIRST+HIGH_ONLY
 15014 0000A23F 7410                    		jz	short norm_alloc
 15015 0000A241 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15016 0000A247 7408                    		jz	short norm_alloc
 15017 0000A249 36A1[8C00]              		mov	ax, [ss:UMB_HEAD]
 15018 0000A24D 36A3[8E00]              		mov	[ss:START_ARENA], ax
 15019                                  
 15020                                  norm_alloc:				; ...
 15021 0000A251 31C0                    		xor	ax, ax
 15022 0000A253 89C7                    		mov	di, ax
 15023 0000A255 36A3[4003]              		mov	[ss:FirstArena], ax
 15024 0000A259 36A3[4203]              		mov	[ss:BestArena],	ax
 15025 0000A25D 36A3[4403]              		mov	[ss:LastArena],	ax
 15026 0000A261 50                      		push	ax
 15027                                  
 15028                                  start_scan:				; ...
 15029 0000A262 36A1[8E00]              		mov	ax, [ss:START_ARENA]
 15030 0000A266 E893FF                  		call	check_signature
 15031 0000A269 7236                    		jb	short alloc_err
 15032                                  
 15033                                  alloc_scan:				; ...
 15034 0000A26B 06                      		push	es
 15035 0000A26C 1F                      		pop	ds
 15036 0000A26D 393E0100                		cmp	[1], di		; [ARENA.OWNER]
 15037 0000A271 7469                    		jz	short alloc_free
 15038                                  
 15039                                  alloc_next:				; ...
 15040 0000A273 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15041 0000A279 741C                    		jz	short norm_strat
 15042 0000A27B 36F606[0203]80          		test	byte [ss:AllocMethod], 80h ; HIGH_FIRST
 15043 0000A281 7414                    		jz	short norm_strat
 15044 0000A283 36A1[8E00]              		mov	ax, [ss:START_ARENA]
 15045 0000A287 363B06[2400]            		cmp	ax, [ss:arena_head]
 15046 0000A28C 7509                    		jnz	short norm_strat
 15047 0000A28E 8CD8                    		mov	ax, ds
 15048 0000A290 363B06[8C00]            		cmp	ax, [ss:UMB_HEAD]
 15049 0000A295 EB03                    		jmp	short alloc_chk_end
 15050                                  ; ---------------------------------------------------------------------------
 15051                                  
 15052                                  norm_strat:				; ...
 15053 0000A297 803D5A                  		cmp	byte [di], 5Ah ; 'Z' ; arena_signature_end
 15054                                  
 15055                                  alloc_chk_end:				; ...
 15056 0000A29A 740E                    		jz	short alloc_end
 15057 0000A29C E856FF                  		call	arena_next
 15058 0000A29F 73CA                    		jnb	short alloc_scan
 15059                                  
 15060                                  alloc_err:				; ...
 15061 0000A2A1 58                      		pop	ax
 15062                                  ; START	OF FUNCTION CHUNK FOR _$SETBLOCK
 15063                                  
 15064                                  alloc_trashed:				; ...
 15065 0000A2A2 E8A1AE                  		call	LCritDisk	; call LCritMEM
 15066 0000A2A5 B007                    		mov	al, 7		; error_arena_trashed
 15067                                  
 15068                                  alloc_errj:				; ...
 15069 0000A2A7 E943A1                  		jmp	SYS_RET_ERR
 15070                                  ; END OF FUNCTION CHUNK	FOR _$SETBLOCK
 15071                                  ; ---------------------------------------------------------------------------
 15072                                  
 15073                                  alloc_end:				; ...
 15074 0000A2AA 36833E[4003]00          		cmp	word [ss:FirstArena], 0
 15075 0000A2B0 7403                    		jz	short alloc_chk
 15076 0000A2B2 E98400                  		jmp	alloc_do_split
 15077                                  ; ---------------------------------------------------------------------------
 15078                                  
 15079                                  alloc_chk:				; ...
 15080 0000A2B5 36A1[2400]              		mov	ax, [ss:arena_head]
 15081 0000A2B9 363B06[8E00]            		cmp	ax, [ss:START_ARENA]
 15082 0000A2BE 740E                    		jz	short alloc_fail
 15083 0000A2C0 36F606[0203]40          		test	byte [ss:AllocMethod], 40h ; HIGH_ONLY
 15084 0000A2C6 7506                    		jnz	short alloc_fail
 15085 0000A2C8 36A3[8E00]              		mov	[ss:START_ARENA], ax
 15086 0000A2CC EB94                    		jmp	short start_scan
 15087                                  ; ---------------------------------------------------------------------------
 15088                                  ; START	OF FUNCTION CHUNK FOR _$SETBLOCK
 15089                                  
 15090                                  alloc_fail:				; ...
 15091 0000A2CE E8A49F                  		call	Get_User_Stack
 15092 0000A2D1 5B                      		pop	bx
 15093 0000A2D2 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
 15094 0000A2D5 E86EAE                  		call	LCritDisk	; call LCritMEM
 15095 0000A2D8 B008                    		mov	al, 8		; error_not_enough_memory
 15096 0000A2DA EBCB                    		jmp	short alloc_errj
 15097                                  ; END OF FUNCTION CHUNK	FOR _$SETBLOCK
 15098                                  ; ---------------------------------------------------------------------------
 15099                                  
 15100                                  alloc_free:				; ...
 15101 0000A2DC E82DFF                  		call	Coalesce
 15102 0000A2DF 72C0                    		jb	short alloc_err
 15103 0000A2E1 8B0E0300                		mov	cx, [3]	; [ARENA.SIZE]
 15104 0000A2E5 5A                      		pop	dx
 15105 0000A2E6 39D1                    		cmp	cx, dx
 15106 0000A2E8 7602                    		jbe	short alloc_test
 15107 0000A2EA 89CA                    		mov	dx, cx
 15108                                  
 15109                                  alloc_test:				; ...
 15110 0000A2EC 52                      		push	dx
 15111 0000A2ED 39CB                    		cmp	bx, cx
 15112 0000A2EF 7782                    		ja	short alloc_next
 15113 0000A2F1 36833E[4003]00          		cmp	word [ss:FirstArena], 0
 15114 0000A2F7 7505                    		jnz	short alloc_best
 15115 0000A2F9 368C1E[4003]            		mov	[ss:FirstArena], ds
 15116                                  
 15117                                  alloc_best:				; ...
 15118 0000A2FE 36833E[4203]00          		cmp	word [ss:BestArena], 0
 15119 0000A304 740E                    		jz	short alloc_make_best
 15120 0000A306 06                      		push	es
 15121 0000A307 368E06[4203]            		mov	es, [ss:BestArena]
 15122 0000A30C 26390E0300              		cmp	[es:3],	cx	; [ES:ARENA.SIZE]
 15123 0000A311 07                      		pop	es
 15124 0000A312 7605                    		jbe	short alloc_last
 15125                                  
 15126                                  alloc_make_best:			; ...
 15127 0000A314 368C1E[4203]            		mov	[ss:BestArena],	ds
 15128                                  
 15129                                  alloc_last:				; ...
 15130 0000A319 368C1E[4403]            		mov	[ss:LastArena],	ds
 15131 0000A31E E952FF                  		jmp	alloc_next
 15132                                  ; ---------------------------------------------------------------------------
 15133                                  
 15134                                  alloc_do_split_high:			; ...
 15135 0000A321 368E1E[4403]            		mov	ds, [ss:LastArena]
 15136 0000A326 8B0E0300                		mov	cx, [3]	; [ARENA.SIZE]
 15137 0000A32A 29D9                    		sub	cx, bx
 15138 0000A32C 8CDA                    		mov	dx, ds
 15139 0000A32E 744C                    		jz	short alloc_set_owner
 15140 0000A330 01CA                    		add	dx, cx
 15141 0000A332 8EC2                    		mov	es, dx
 15142 0000A334 49                      		dec	cx
 15143 0000A335 87D9                    		xchg	bx, cx
 15144 0000A337 EB2E                    		jmp	short alloc_set_sizes
 15145                                  ; ---------------------------------------------------------------------------
 15146                                  
 15147                                  alloc_do_split:				; ...
 15148 0000A339 31C9                    		xor	cx, cx
 15149 0000A33B 368A0E[0203]            		mov	cl, [ss:AllocMethod]
 15150 0000A340 81E13FFF                		and	cx, 0FF3Fh	; STRAT_MASK
 15151 0000A344 83F901                  		cmp	cx, 1		; BEST_FIT
 15152 0000A347 77D8                    		ja	short alloc_do_split_high
 15153 0000A349 368E1E[4003]            		mov	ds, [ss:FirstArena]
 15154 0000A34E 7205                    		jb	short alloc_get_size
 15155 0000A350 368E1E[4203]            		mov	ds, [ss:BestArena]
 15156                                  ; START	OF FUNCTION CHUNK FOR _$SETBLOCK
 15157                                  
 15158                                  alloc_get_size:				; ...
 15159 0000A355 8B0E0300                		mov	cx, [3]	; [ARENA.SIZE]
 15160 0000A359 29D9                    		sub	cx, bx
 15161 0000A35B 8CD8                    		mov	ax, ds
 15162 0000A35D 89C2                    		mov	dx, ax
 15163 0000A35F 741B                    		jz	short alloc_set_owner
 15164 0000A361 01D8                    		add	ax, bx
 15165 0000A363 40                      		inc	ax
 15166 0000A364 8EC0                    		mov	es, ax
 15167 0000A366 49                      		dec	cx
 15168                                  
 15169                                  alloc_set_sizes:			; ...
 15170 0000A367 891E0300                		mov	[3],	bx	; [ARENA.SIZE]
 15171 0000A36B 26890E0300              		mov	[es:3],	cx	; [ES:ARENA.SIZE]
 15172 0000A370 B34D                    		mov	bl, 4Dh	; 'M'   ; arena_signature_normal
 15173 0000A372 861D                    		xchg	bl, [di]
 15174 0000A374 26881D                  		mov	[es:di], bl
 15175 0000A377 26893E0100              		mov	[es:1],	di	; [ES:ARENA.OWNER]
 15176                                  
 15177                                  alloc_set_owner:			; ...
 15178 0000A37C 8EDA                    		mov	ds, dx
 15179 0000A37E 36A1[3003]              		mov	ax, [ss:CurrentPDB]
 15180 0000A382 A30100                  		mov	[1],	ax	; [ARENA.OWNER]
 15181 0000A385 8CD8                    		mov	ax, ds
 15182 0000A387 40                      		inc	ax
 15183 0000A388 5B                      		pop	bx
 15184 0000A389 E8BAAD                  		call	LCritDisk	; call LCritMEM
 15185                                  
 15186                                  alloc_ok:				; ...
 15187 0000A38C E955A0                  		jmp	SYS_RETURN	; SYS_RET_OK
 15188                                  ; END OF FUNCTION CHUNK	FOR _$SETBLOCK
 15189                                  
 15190                                  ; =============== S U B	R O U T	I N E =======================================
 15191                                  
 15192                                  _$SETBLOCK:		; ...
 15193                                  
 15194                                  ; FUNCTION CHUNK AT A2A2 SIZE 00000008 BYTES
 15195                                  ; FUNCTION CHUNK AT A2CE SIZE 0000000E BYTES
 15196                                  ; FUNCTION CHUNK AT A355 SIZE 0000003A BYTES
 15197                                  
 15198 0000A38F E894AD                  		call	ECritDisk	; call ECritMEM
 15199 0000A392 BF0000                  		mov	di, 0		; ARENA.SIGNATURE
 15200 0000A395 8CC0                    		mov	ax, es
 15201 0000A397 48                      		dec	ax
 15202 0000A398 E861FE                  		call	check_signature
 15203 0000A39B 7303                    		jnb	short setblock_grab
 15204                                  
 15205                                  setblock_bad:				; ...
 15206 0000A39D E902FF                  		jmp	alloc_trashed
 15207                                  ; ---------------------------------------------------------------------------
 15208                                  
 15209                                  setblock_grab:				; ...
 15210 0000A3A0 8ED8                    		mov	ds, ax
 15211 0000A3A2 E867FE                  		call	Coalesce
 15212 0000A3A5 72F6                    		jb	short setblock_bad
 15213 0000A3A7 8B0E0300                		mov	cx, [3]	; [ARENA.SIZE]
 15214 0000A3AB 51                      		push	cx
 15215 0000A3AC 39CB                    		cmp	bx, cx
 15216 0000A3AE 76A5                    		jbe	short alloc_get_size
 15217 0000A3B0 E91BFF                  		jmp	alloc_fail
 15218                                  
 15219                                  ; =============== S U B	R O U T	I N E =======================================
 15220                                  
 15221                                  _$DEALLOC:		; ...
 15222 0000A3B3 E870AD                  		call	ECritDisk	; call ECritMEM
 15223 0000A3B6 36F606[8600]04          		test	byte [ss:DOS_FLAG], 4 ; EXECA20OFF
 15224 0000A3BC 740E                    		jz	short deallocate
 15225 0000A3BE 36803E[8500]00          		cmp	byte [ss:A20OFF_COUNT], 0
 15226 0000A3C4 7506                    		jnz	short deallocate
 15227 0000A3C6 36C606[8500]01          		mov	byte [ss:A20OFF_COUNT], 1
 15228                                  
 15229                                  deallocate:				; ...
 15230 0000A3CC BF0000                  		mov	di, 0		; ARENA.SIGNATURE
 15231 0000A3CF 8CC0                    		mov	ax, es
 15232 0000A3D1 48                      		dec	ax
 15233 0000A3D2 E827FE                  		call	check_signature
 15234 0000A3D5 720A                    		jb	short dealloc_err
 15235 0000A3D7 26893E0100              		mov	[es:1],	di	; [ES:ARENA.OWNER]
 15236 0000A3DC E867AD                  		call	LCritDisk	; call LCritMEM
 15237                                  
 15238                                  dealloc_ok:				; ...
 15239 0000A3DF EBAB                    		jmp	short alloc_ok
 15240                                  ; ---------------------------------------------------------------------------
 15241                                  
 15242                                  dealloc_err:				; ...
 15243 0000A3E1 E862AD                  		call	LCritDisk	; call LCritMEM
 15244 0000A3E4 B009                    		mov	al, 9		; error_invalid_block
 15245                                  
 15246                                  dealloc_errj:				; ...
 15247 0000A3E6 E904A0                  		jmp	SYS_RET_ERR
 15248                                  
 15249                                  ; ---------------------------------------------------------------------------
 15250                                  
 15251                                  _$ALLOCOPER:				; ...
 15252 0000A3E9 08C0                    		or	al, al
 15253 0000A3EB 7420                    		jz	short AllocGetStrat
 15254 0000A3ED 3C01                    		cmp	al, 1
 15255 0000A3EF 7424                    		jz	short AllocSetStrat
 15256 0000A3F1 3C02                    		cmp	al, 2
 15257 0000A3F3 7432                    		jz	short AllocGetLink
 15258 0000A3F5 3C03                    		cmp	al, 3
 15259 0000A3F7 7436                    		jz	short AllocSetLink
 15260                                  
 15261                                  AllocOperError:				; ...
 15262 0000A3F9 36C606[2303]05          		mov	byte [ss:EXTERR_LOCUS], 5 ; errLOC_Mem
 15263 0000A3FF B001                    		mov	al, 1		; error_invalid_function
 15264                                  
 15265                                  AllocOperErrj:				; ...
 15266 0000A401 EBE3                    		jmp	short dealloc_errj
 15267                                  ; ---------------------------------------------------------------------------
 15268                                  
 15269                                  AllocArenaError:			; ...
 15270 0000A403 36C606[2303]05          		mov	byte [ss:EXTERR_LOCUS], 5 ; errLOC_Mem
 15271 0000A409 B007                    		mov	al, 7		; error_arena_trashed
 15272 0000A40B EBF4                    		jmp	short AllocOperErrj
 15273                                  ; ---------------------------------------------------------------------------
 15274                                  
 15275                                  AllocGetStrat:				; ...
 15276 0000A40D 36A0[0203]              		mov	al, [ss:AllocMethod]
 15277 0000A411 30E4                    		xor	ah, ah
 15278                                  
 15279                                  AllocOperOk:				; ...
 15280 0000A413 EBCA                    		jmp	short dealloc_ok
 15281                                  ; ---------------------------------------------------------------------------
 15282                                  
 15283                                  AllocSetStrat:				; ...
 15284 0000A415 53                      		push	bx
 15285 0000A416 81E33FFF                		and	bx, 0FF3Fh
 15286 0000A41A 83FB02                  		cmp	bx, 2
 15287 0000A41D 5B                      		pop	bx
 15288 0000A41E 77D9                    		ja	short AllocOperError
 15289 0000A420 36881E[0203]            		mov	[ss:AllocMethod], bl
 15290                                  
 15291                                  AllocOperOkj:				; ...
 15292 0000A425 EBEC                    		jmp	short AllocOperOk
 15293                                  ; ---------------------------------------------------------------------------
 15294                                  
 15295                                  AllocGetLink:				; ...
 15296 0000A427 36A0[8900]              		mov	al, [ss:UMBFLAG]
 15297 0000A42B 2401                    		and	al, 1		; LINKSTATE
 15298                                  
 15299                                  AllocOperOkj2:				; ...
 15300 0000A42D EBF6                    		jmp	short AllocOperOkj
 15301                                  ; ---------------------------------------------------------------------------
 15302                                  
 15303                                  AllocSetLink:				; ...
 15304 0000A42F 368B0E[8C00]            		mov	cx, [ss:UMB_HEAD]
 15305 0000A434 83F9FF                  		cmp	cx, 0FFFFh
 15306 0000A437 74C0                    		jz	short AllocOperError
 15307 0000A439 83FB01                  		cmp	bx, 1
 15308 0000A43C 7204                    		jb	short UnlinkUmbs
 15309 0000A43E 741C                    		jz	short LinkUmbs
 15310 0000A440 EBB7                    		jmp	short AllocOperError
 15311                                  ; ---------------------------------------------------------------------------
 15312                                  
 15313                                  UnlinkUmbs:				; ...
 15314 0000A442 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15315 0000A448 7410                    		jz	short unlinked
 15316 0000A44A E82900                  		call	GetLastArena
 15317 0000A44D 72B4                    		jb	short AllocArenaError
 15318 0000A44F C60600005A              		mov	byte [0], 5Ah ; 'Z' ; arena_signature_end
 15319 0000A454 368026[8900]FE          		and	byte [ss:UMBFLAG], 0FEh ; ~LINKSTATE
 15320                                  
 15321                                  unlinked:				; ...
 15322 0000A45A EBD1                    		jmp	short AllocOperOkj2
 15323                                  ; ---------------------------------------------------------------------------
 15324                                  
 15325                                  LinkUmbs:				; ...
 15326 0000A45C 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15327 0000A462 7510                    		jnz	short linked
 15328 0000A464 E80F00                  		call	GetLastArena
 15329 0000A467 729A                    		jb	short AllocArenaError
 15330 0000A469 C60600004D              		mov	byte [0], 4Dh ; 'M' ; arena_signature_normal
 15331 0000A46E 36800E[8900]01          		or	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15332                                  
 15333                                  linked:					; ...
 15334 0000A474 EBE4                    		jmp	short unlinked
 15335                                  
 15336                                  ; =============== S U B	R O U T	I N E =======================================
 15337                                  
 15338                                  GetLastArena:	; ...
 15339 0000A476 50                      		push	ax
 15340 0000A477 36A1[2400]              		mov	ax, [ss:arena_head]
 15341 0000A47B 8EC0                    		mov	es, ax
 15342 0000A47D 31FF                    		xor	di, di
 15343 0000A47F 26803D5A                		cmp	byte [es:di], 5Ah ; 'Z' ; arena_signature_end
 15344 0000A483 7419                    		jz	short GLA_done
 15345                                  
 15346                                  GLA_next:				; ...
 15347 0000A485 8ED8                    		mov	ds, ax
 15348 0000A487 E86BFD                  		call	arena_next
 15349 0000A48A 7228                    		jb	short GLA_err
 15350 0000A48C 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15351 0000A492 7506                    		jnz	short GLA_chkumb
 15352 0000A494 26803D5A                		cmp	byte [es:di], 5Ah ; 'Z'
 15353 0000A498 EB02                    		jmp	short GLA_@f
 15354                                  ; ---------------------------------------------------------------------------
 15355                                  
 15356                                  GLA_chkumb:				; ...
 15357 0000A49A 39C8                    		cmp	ax, cx
 15358                                  
 15359                                  GLA_@f:					; ...
 15360 0000A49C 75E7                    		jnz	short GLA_next
 15361                                  
 15362                                  GLA_done:				; ...
 15363 0000A49E 36F606[8900]01          		test	byte [ss:UMBFLAG], 1
 15364 0000A4A4 750B                    		jnz	short GLA_ret
 15365 0000A4A6 8ED8                    		mov	ds, ax
 15366 0000A4A8 E84AFD                  		call	arena_next
 15367 0000A4AB 7207                    		jb	short GLA_err
 15368 0000A4AD 39C8                    		cmp	ax, cx
 15369 0000A4AF 7503                    		jnz	short GLA_err
 15370                                  
 15371                                  GLA_ret:				; ...
 15372 0000A4B1 F8                      		clc
 15373 0000A4B2 58                      		pop	ax
 15374 0000A4B3 C3                      		retn
 15375                                  ; ---------------------------------------------------------------------------
 15376                                  
 15377                                  GLA_err:				; ...
 15378 0000A4B4 F9                      		stc
 15379 0000A4B5 58                      		pop	ax
 15380 0000A4B6 C3                      		retn
 15381                                  
 15382                                  ; ---------------------------------------------------------------------------
 15383 0000A4B7 [BBA4]                  SERVERTAB	dw SERVER_DISP	; ...
 15384                                  					; SRVC001S
 15385 0000A4B9 [0DA5]                  SERVERLEAVE	dw SERVERRETURN	; ...
 15386 0000A4BB 0B                      SERVER_DISP	db 11			; ...
 15387                                  					; (SERVER_DISP_END-SERVER_DISP-1)/2
 15388                                  					; ; = 11
 15389 0000A4BC [76A5]                  		dw SRV_CALL	; 0
 15390 0000A4BE [0EA5]                  		dw COMMIT_ALL	; 1
 15391 0000A4C0 [45A5]                  		dw CLOSE_NAME	; 2
 15392 0000A4C2 [50A5]                  		dw CLOSE_UID	; 3
 15393 0000A4C4 [57A5]                  		dw CLOSE_UID_PID	; 4
 15394 0000A4C6 [5EA5]                  		dw GET_LIST	; 5
 15395 0000A4C8 [B7A5]                  		dw GET_DOS_DATA	; 6
 15396 0000A4CA [DBA5]                  		dw SPOOL_OPER	; 7
 15397 0000A4CC [DBA5]                  		dw SPOOL_OPER	; 8
 15398 0000A4CE [DBA5]                  		dw SPOOL_OPER	; 9
 15399 0000A4D0 [E9A5]                  		dw _$SetExtendedError ; 10
 15400                                  ; ---------------------------------------------------------------------------
 15401                                  
 15402                                  _$ServerCall:				; ...
 15403 0000A4D2 3C07                    		cmp	al, 7
 15404 0000A4D4 7204                    		jb	short SET_STUFF
 15405 0000A4D6 3C09                    		cmp	al, 9
 15406 0000A4D8 761A                    		jbe	short NO_SET_ID
 15407                                  
 15408                                  SET_STUFF:				; ...
 15409 0000A4DA 89D6                    		mov	si, dx
 15410 0000A4DC 8B5C12                  		mov	bx, [si+12h]	; [SI+DPL.UID]
 15411 0000A4DF 36F606[3010]01          		test	byte [ss:IsWin386], 1
 15412 0000A4E5 7505                    		jnz	short skip_win386
 15413 0000A4E7 36891E[3E03]            		mov	[ss:USER_ID], bx
 15414                                  
 15415                                  skip_win386:				; ...
 15416 0000A4EC 8B5C14                  		mov	bx, [si+14h]	; [SI+DPL.PID]
 15417 0000A4EF 36891E[3C03]            		mov	[ss:PROC_ID], bx
 15418                                  
 15419                                  NO_SET_ID:				; ...
 15420 0000A4F4 2EFF36[B9A4]            		push	word [cs:SERVERLEAVE]
 15421 0000A4F9 2EFF36[B7A4]            		push	word [cs:SERVERTAB]
 15422 0000A4FE 50                      		push	ax
 15423 0000A4FF E834AB                  		call	TableDispatch
 15424 0000A502 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 15425 0000A508 B001                    		mov	al, 1		; error_invalid_function
 15426                                  
 15427                                  servercall_error:			; ...
 15428 0000A50A E9E09E                  		jmp	SYS_RET_ERR
 15429                                  ; ---------------------------------------------------------------------------
 15430                                  
 15431                                  SERVERRETURN:				; ...
 15432 0000A50D C3                      		retn
 15433                                  ; ---------------------------------------------------------------------------
 15434                                  
 15435                                  COMMIT_ALL:				; ...
 15436 0000A50E 31DB                    		xor	bx, bx
 15437 0000A510 16                      		push	ss
 15438 0000A511 1F                      		pop	ds
 15439 0000A512 E811AC                  		call	ECritDisk	; call ECritSFT
 15440                                  
 15441                                  CommitLoop:				; ...
 15442 0000A515 53                      		push	bx
 15443 0000A516 E82B01                  		call	SFFromSFN
 15444 0000A519 7223                    		jb	short CommitDone
 15445 0000A51B 26833D00                		cmp	word [es:di], 0 ; [ES:DI+SF_ENTRY.sf_Ref_Count]
 15446 0000A51F 7419                    		jz	short CommitNext
 15447 0000A521 26833DFF                		cmp	word [es:di], 0FFFFh ; [ES:DI+SF_ENTRY.sf_Ref_Count],
 15448                                  					; sf_busy
 15449 0000A525 7413                    		jz	short CommitNext
 15450 0000A527 26F745050080            		test	word [es:di+5], 8000h ; [ES:DI+SF_ENTRY.sf_flags],
 15451                                  					; sf_isnet
 15452 0000A52D 750B                    		jnz	short CommitNext
 15453 0000A52F 893E[9E05]              		mov	word [THISSFT], di
 15454 0000A533 8C06[A005]              		mov	word [THISSFT+2], es
 15455 0000A537 E838CA                  		call	DOS_COMMIT
 15456                                  
 15457                                  CommitNext:				; ...
 15458 0000A53A 5B                      		pop	bx
 15459 0000A53B 43                      		inc	bx
 15460 0000A53C EBD7                    		jmp	short CommitLoop
 15461                                  ; ---------------------------------------------------------------------------
 15462                                  
 15463                                  CommitDone:				; ...
 15464 0000A53E E805AC                  		call	LCritDisk	; call LCritSFT
 15465 0000A541 5B                      		pop	bx
 15466                                  
 15467                                  Commit_Ok:				; ...
 15468 0000A542 E99F9E                  		jmp	SYS_RETURN	; SYS_RET_OK
 15469                                  ; ---------------------------------------------------------------------------
 15470                                  
 15471                                  CLOSE_NAME:				; ...
 15472                                  		;call	dword [ss:MFTcloN] ; Call far [SS:JShare+(5*4)] ; 5 = MFTcloN
 15473 0000A545 36FF1E[A400]            		call	far [ss:JShare+(5*4)]
 15474                                  CheckReturns:				; ...
 15475 0000A54A 7202                    		jb	short func_err
 15476                                  
 15477                                  Commit_Okj:				; ...
 15478 0000A54C EBF4                    		jmp	short Commit_Ok
 15479                                  ; ---------------------------------------------------------------------------
 15480                                  
 15481                                  func_err:				; ...
 15482 0000A54E EBBA                    		jmp	short servercall_error
 15483                                  ; ---------------------------------------------------------------------------
 15484                                  
 15485                                  CLOSE_UID:				; ...
 15486                                  		;call	[ss:MFTclU]	; Call far [SS:JShare+(3*4)] ; 3 = MTFTclu
 15487 0000A550 36FF1E[9C00]            		call	far [ss:JShare+(3*4)]
 15488 0000A555 EBF3                    		jmp	short CheckReturns
 15489                                  ; ---------------------------------------------------------------------------
 15490                                  
 15491                                  CLOSE_UID_PID:				; ...
 15492                                  		;call	dword [ss:MFTCloseP]
 15493 0000A557 36FF1E[A000]            		call	far [ss:JShare+(4*4)]
 15494 0000A55C EBEC                    		jmp	short CheckReturns
 15495                                  ; ---------------------------------------------------------------------------
 15496                                  
 15497                                  GET_LIST:				; ...
 15498                                  		;call	[ss:MFT_get]	; Call far [SS:JShare+(9*4)] ; 9 = MFT_get
 15499 0000A55E 36FF1E[B400]            		call	far [SS:JShare+(9*4)]
 15500 0000A563 72E9                    		jb	short func_err
 15501 0000A565 E80D9D                  		call	Get_User_Stack
 15502 0000A568 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
 15503 0000A56B 897C0A                  		mov	[si+10], di	; [SI+user_env.user_DI]
 15504 0000A56E 8C4410                  		mov	word [si+16], es ; [SI+user_env.user_ES]
 15505                                  
 15506                                  SetCXOK:				; ...
 15507 0000A571 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
 15508                                  
 15509                                  Commit_Okj2:				; ...
 15510 0000A574 EBD6                    		jmp	short Commit_Okj
 15511                                  ; ---------------------------------------------------------------------------
 15512                                  
 15513                                  SRV_CALL:				; ...
 15514 0000A576 58                      		pop	ax
 15515 0000A577 1E                      		push	ds
 15516 0000A578 56                      		push	si
 15517 0000A579 E8F99C                  		call	Get_User_Stack
 15518 0000A57C 5F                      		pop	di
 15519 0000A57D 07                      		pop	es
 15520 0000A57E E894AA                  		call	XCHGP
 15521 0000A581 56                      		push	si
 15522 0000A582 B90600                  		mov	cx, 6
 15523 0000A585 F3A5                    		rep movsw
 15524 0000A587 47                      		inc	di
 15525 0000A588 47                      		inc	di
 15526 0000A589 A5                      		movsw
 15527 0000A58A A5                      		movsw
 15528 0000A58B 5E                      		pop	si
 15529 0000A58C 8B04                    		mov	ax, [si]	; [SI+DPL.AX]
 15530 0000A58E 8B5C02                  		mov	bx, [si+2]	; [SI+DPL.BX]
 15531 0000A591 8B4C04                  		mov	cx, [si+4]	; [SI+DPL.CX]
 15532 0000A594 8B5406                  		mov	dx, [si+6]	; [SI+DPL.DX]
 15533 0000A597 8B7C0A                  		mov	di, [si+10]	; [SI+DPL.DI]
 15534 0000A59A 8E440E                  		mov	es, word [si+14] ; [SI+DPL.ES]
 15535 0000A59D FF7408                  		push	word [si+8]	; [SI+DPL.SI]
 15536 0000A5A0 8E5C0C                  		mov	ds, word [si+12] ; [SI+DPL.DS]
 15537 0000A5A3 5E                      		pop	si
 15538 0000A5A4 368C1E[EC05]            		mov	[ss:SAVEDS], ds
 15539 0000A5A9 36891E[EA05]            		mov	[ss:SAVEBX], bx
 15540 0000A5AE 36C606[7205]FF          		mov	byte [ss:FSHARING], 0FFh ; -1
 15541 0000A5B4 E9AC9B                  		jmp	REDISP
 15542                                  ; ---------------------------------------------------------------------------
 15543                                  
 15544                                  GET_DOS_DATA:				; ...
 15545 0000A5B7 16                      		push	ss
 15546 0000A5B8 07                      		pop	es
 15547 0000A5B9 BF[2003]                		mov	di, ERRORMODE ; SWAP_START
 15548 0000A5BC B9[AC0A]                		mov	cx, SWAP_END
 15549 0000A5BF BA[3A03]                		mov	dx, USER_IN_AX ; SWAP_ALWAYS
 15550 0000A5C2 29F9                    		sub	cx, di
 15551 0000A5C4 29FA                    		sub	dx, di
 15552 0000A5C6 D1E9                    		shr	cx, 1
 15553 0000A5C8 83D100                  		adc	cx, 0
 15554 0000A5CB D1E1                    		shl	cx, 1
 15555 0000A5CD E8A59C                  		call	Get_User_Stack
 15556 0000A5D0 8C440E                  		mov	word [si+14], es ; [SI+user_env.user_DS]
 15557 0000A5D3 897C08                  		mov	[si+8],	di	; [SI+user_env.user_SI]
 15558 0000A5D6 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
 15559 0000A5D9 EB96                    		jmp	short SetCXOK
 15560                                  ; ---------------------------------------------------------------------------
 15561                                  
 15562                                  SPOOL_OPER:				; ...
 15563 0000A5DB 50                      		push	ax
 15564 0000A5DC B82511                  		mov	ax, 1125h
 15565 0000A5DF CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - REDIRECTED PRINTER MODE
 15566                                  					; STACK: WORD subfunction
 15567                                  					; Return: CF set on error, AX =	error code
 15568                                  					; STACK	unchanged
 15569 0000A5E1 5B                      		pop	bx
 15570 0000A5E2 7202                    		jb	short func_err2
 15571 0000A5E4 EB8E                    		jmp	short Commit_Okj2
 15572                                  ; ---------------------------------------------------------------------------
 15573                                  
 15574                                  func_err2:				; ...
 15575 0000A5E6 E9049E                  		jmp	SYS_RET_ERR
 15576                                  ; ---------------------------------------------------------------------------
 15577                                  
 15578                                  _$SetExtendedError:			; ...
 15579 0000A5E9 8B04                    		mov	ax, [si]	; [SI+DPL.AX]
 15580 0000A5EB 36A3[2403]              		mov	word [ss:EXTERR], ax
 15581 0000A5EF 8B440A                  		mov	ax, [si+10]	; [SI+DPL.DI]
 15582 0000A5F2 36A3[2803]              		mov	word [ss:EXTERRPT],	ax
 15583 0000A5F6 8B440E                  		mov	ax, [si+14]	; [SI+DPL.ES]
 15584 0000A5F9 36A3[2A03]              		mov	word [ss:EXTERRPT+2], ax
 15585 0000A5FD 8B4402                  		mov	ax, [si+2]	; [SI+DPL.BX]
 15586 0000A600 36A3[2603]              		mov	word [ss:EXTERR_ACTION], ax
 15587 0000A604 8B4404                  		mov	ax, [si+4]	; [SI+DPL.CX]
 15588 0000A607 368826[2303]            		mov	byte [ss:EXTERR_LOCUS], ah
 15589 0000A60C C3                      		retn
 15590                                  
 15591                                  ; =============== S U B	R O U T	I N E =======================================
 15592                                  
 15593                                  pJFNFromHandle:	; ...
 15594 0000A60D 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
 15595 0000A612 268E06[3003]            		mov	es, [es:CurrentPDB]
 15596 0000A617 263B1E3200              		cmp	bx, [es:32h]	; [ES:PDB.JFN_Length]
 15597 0000A61C 7204                    		jb	short pjfn10
 15598 0000A61E B006                    		mov	al, 6		; error_invalid_handle
 15599                                  
 15600                                  ReturnCarry:				; ...
 15601 0000A620 F9                      		stc
 15602 0000A621 C3                      		retn
 15603                                  ; ---------------------------------------------------------------------------
 15604                                  
 15605                                  pjfn10:					; ...
 15606 0000A622 26C43E3400              		les	di, [es:34h]	; [ES:PDB.JFN_Pointer]
 15607 0000A627 01DF                    		add	di, bx
 15608                                  
 15609                                  pJFNFromHandle_error:			; ...
 15610 0000A629 C3                      		retn
 15611                                  
 15612                                  ; =============== S U B	R O U T	I N E =======================================
 15613                                  
 15614                                  SFFromHandle:	; ...
 15615 0000A62A E8E0FF                  		call	pJFNFromHandle
 15616 0000A62D 72FA                    		jb	short pJFNFromHandle_error
 15617 0000A62F 26803DFF                		cmp	byte [es:di], 0FFh ; -1
 15618 0000A633 7504                    		jnz	short GetSF
 15619 0000A635 B006                    		mov	al, 6
 15620 0000A637 EBE7                    		jmp	short ReturnCarry
 15621                                  ; ---------------------------------------------------------------------------
 15622                                  
 15623                                  GetSF:					; ...
 15624 0000A639 53                      		push	bx
 15625 0000A63A 268A1D                  		mov	bl, [es:di]
 15626 0000A63D 30FF                    		xor	bh, bh
 15627 0000A63F E80200                  		call	SFFromSFN
 15628 0000A642 5B                      		pop	bx
 15629 0000A643 C3                      		retn
 15630                                  
 15631                                  ; =============== S U B	R O U T	I N E =======================================
 15632                                  
 15633                                  SFFromSFN:		; ...
 15634 0000A644 2E8E06[D73D]            		mov	es, [cs:DosDSeg]
 15635 0000A649 26C43E[2A00]            		les	di, [es:SFT_ADDR]
 15636                                  
 15637                                  sfsfn5:					; ...
 15638 0000A64E 263B5D04                		cmp	bx, [es:di+4]	; [ES:DI+SFT.SFCount]
 15639 0000A652 720E                    		jb	short sfsfn7
 15640 0000A654 262B5D04                		sub	bx, [es:di+4]
 15641 0000A658 26C43D                  		les	di, [es:di]	; [ES:DI+SFT.SFLink]
 15642 0000A65B 83FFFF                  		cmp	di, 0FFFFh	; -1
 15643 0000A65E 75EE                    		jnz	short sfsfn5
 15644 0000A660 F9                      		stc
 15645 0000A661 C3                      		retn
 15646                                  ; ---------------------------------------------------------------------------
 15647                                  
 15648                                  sfsfn7:					; ...
 15649 0000A662 50                      		push	ax
 15650 0000A663 B83B00                  		mov	ax, 59		; SF_ENTRY.size
 15651 0000A666 F6E3                    		mul	bl
 15652 0000A668 01C7                    		add	di, ax
 15653 0000A66A 58                      		pop	ax
 15654 0000A66B 83C706                  		add	di, 6		; SFT.SFTable
 15655 0000A66E C3                      		retn
 15656                                  
 15657                                  ; =============== S U B	R O U T	I N E =======================================
 15658                                  
 15659                                  JFNFree:
 15660 0000A66F 31DB                    		xor	bx, bx
 15661                                  
 15662                                  jfnf1:					; ...
 15663 0000A671 E899FF                  		call	pJFNFromHandle
 15664 0000A674 7209                    		jb	short jfnf5
 15665 0000A676 26803DFF                		cmp	byte [es:di], 0FFh ; -1
 15666 0000A67A 7405                    		jz	short jfnfx
 15667 0000A67C 43                      		inc	bx
 15668 0000A67D EBF2                    		jmp	short jfnf1
 15669                                  ; ---------------------------------------------------------------------------
 15670                                  
 15671                                  jfnf5:					; ...
 15672 0000A67F B004                    		mov	al, 4		; error_too_many_open_files
 15673                                  
 15674                                  jfnfx:					; ...
 15675 0000A681 C3                      		retn
 15676                                  
 15677                                  ; =============== S U B	R O U T	I N E =======================================
 15678                                  
 15679                                  SFNFree:
 15680 0000A682 50                      		push	ax
 15681 0000A683 31DB                    		xor	bx, bx
 15682                                  
 15683                                  sfnf5:					; ...
 15684 0000A685 53                      		push	bx
 15685 0000A686 E8BBFF                  		call	SFFromSFN
 15686 0000A689 5B                      		pop	bx
 15687 0000A68A 723B                    		jb	short sfnf95
 15688 0000A68C 26833D00                		cmp	word [es:di], 0 ; [ES:DI+SF_ENTRY.sf_Ref_Count]
 15689 0000A690 741D                    		jz	short sfnf20
 15690 0000A692 26833DFF                		cmp	word [es:di], 0FFFFh ; [ES:DI+SF_ENTRY.sf_ref_count],
 15691                                  					; sf_busy
 15692 0000A696 7403                    		jz	short sfnf10
 15693                                  
 15694                                  sfnf7:					; ...
 15695 0000A698 43                      		inc	bx
 15696 0000A699 EBEA                    		jmp	short sfnf5
 15697                                  ; ---------------------------------------------------------------------------
 15698                                  
 15699                                  sfnf10:					; ...
 15700 0000A69B 36A1[3E03]              		mov	ax, [ss:USER_ID]
 15701 0000A69F 2639452F                		cmp	[es:di+2Fh], ax	; [ES:DI+SF_ENTRY.sf_UID]
 15702 0000A6A3 75F3                    		jnz	short sfnf7
 15703 0000A6A5 36A1[3C03]              		mov	ax, [ss:PROC_ID]
 15704 0000A6A9 26394531                		cmp	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
 15705 0000A6AD 75E9                    		jnz	short sfnf7
 15706                                  
 15707                                  sfnf20:					; ...
 15708 0000A6AF 26C705FFFF              		mov	word [es:di], 0FFFFh ; sf_busy
 15709 0000A6B4 36A1[3E03]              		mov	ax, [ss:USER_ID]
 15710 0000A6B8 2689452F                		mov	[es:di+2Fh], ax	; [ES:DI+SF_ENTRY.sf_UID]
 15711 0000A6BC 36A1[3C03]              		mov	ax, [ss:PROC_ID]
 15712 0000A6C0 26894531                		mov	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
 15713 0000A6C4 58                      		pop	ax
 15714 0000A6C5 F8                      		clc
 15715 0000A6C6 C3                      		retn
 15716                                  ; ---------------------------------------------------------------------------
 15717                                  
 15718                                  sfnf95:					; ...
 15719 0000A6C7 58                      		pop	ax
 15720 0000A6C8 B004                    		mov	al, 4		; error_too_many_open_files
 15721 0000A6CA C3                      		retn
 15722                                  
 15723                                  ; =============== S U B	R O U T	I N E =======================================
 15724                                  
 15725                                   _$CLOSE:
 15726                                  
 15727                                  ; FUNCTION CHUNK AT 43E4 SIZE 0000001C BYTES
 15728                                  
 15729 0000A6CB E85B02                  		call	CheckOwner
 15730 0000A6CE 722B                    		jb	short CloseError
 15731 0000A6D0 16                      		push	ss
 15732 0000A6D1 1F                      		pop	ds
 15733 0000A6D2 893E[9E05]              		mov	word [THISSFT], di
 15734 0000A6D6 8C06[A005]              		mov	word [THISSFT+2], es
 15735 0000A6DA 26833D01                		cmp	word [es:di], 1 ; [ES:DI+SF_ENTRY.sf_ref_count]
 15736 0000A6DE 740A                    		jz	short FreeJFN
 15737 0000A6E0 268A4502                		mov	al, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
 15738 0000A6E4 24F0                    		and	al, 0F0h	; SHARING_MASK
 15739 0000A6E6 3C70                    		cmp	al, 70h		; SHARING_NET_FCB
 15740 0000A6E8 7407                    		jz	short PostFree
 15741                                  
 15742                                  FreeJFN:				; ...
 15743 0000A6EA E820FF                  		call	pJFNFromHandle
 15744 0000A6ED 26C605FF                		mov	byte [es:di], 0FFh
 15745                                  
 15746                                  PostFree:				; ...
 15747 0000A6F1 E826C7                  		call	DOS_CLOSE
 15748 0000A6F4 7205                    		jb	short CloseError
 15749 0000A6F6 B43E                    		mov	ah, 3Eh		; CLOSE
 15750                                  
 15751                                  CloseOk:				; ...
 15752 0000A6F8 E9E99C                  		jmp	SYS_RETURN	; SYS_RET_OK
 15753                                  ; ---------------------------------------------------------------------------
 15754                                  
 15755                                  CloseError:				; ...
 15756 0000A6FB E9EF9C                  		jmp	SYS_RET_ERR
 15757                                  
 15758                                  ; ---------------------------------------------------------------------------
 15759                                  
 15760                                  _$COMMIT:				; ...
 15761 0000A6FE E82802                  		call	CheckOwner
 15762 0000A701 7213                    		jb	short CommitError
 15763 0000A703 16                      		push	ss
 15764 0000A704 1F                      		pop	ds
 15765 0000A705 893E[9E05]              		mov	word [THISSFT], di
 15766 0000A709 8C06[A005]              		mov	word [THISSFT+2], es
 15767 0000A70D E862C8                  		call	DOS_COMMIT
 15768 0000A710 7204                    		jb	short CommitError
 15769 0000A712 B468                    		mov	ah, 68h		; COMMIT
 15770                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15771                                  
 15772                                  CommitOk:				; ...
 15773 0000A714 EBE2                    		jmp	short CloseOk
 15774                                  ; ---------------------------------------------------------------------------
 15775                                  
 15776                                  CommitError:				; ...
 15777 0000A716 EBE3                    		jmp	short CloseError
 15778                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15779                                  ; ---------------------------------------------------------------------------
 15780                                  
 15781                                  _$ExtHandle:				; ...
 15782 0000A718 31ED                    		xor	bp, bp
 15783 0000A71A 83FB14                  		cmp	bx, 20		; FILPERPROC
 15784 0000A71D 7303                    		jnb	short exth2
 15785 0000A71F BB1400                  		mov	bx, 20
 15786                                  
 15787                                  exth2:					; ...
 15788 0000A722 368E06[3003]            		mov	es, [ss:CurrentPDB]
 15789 0000A727 268B0E3200              		mov	cx, [es:32h]	; [ES:PDB.JFN_Length]
 15790 0000A72C 39CB                    		cmp	bx, cx
 15791 0000A72E 7450                    		jz	short ok_done
 15792 0000A730 7722                    		ja	short larger
 15793 0000A732 BD0100                  		mov	bp, 1
 15794 0000A735 268E1E3600              		mov	ds, word [es:36h] ;	[ES:PDB.JFN_Pointer+2]
 15795 0000A73A 89DE                    		mov	si, bx
 15796 0000A73C 29D9                    		sub	cx, bx
 15797                                  
 15798                                  chck_handles:				; ...
 15799 0000A73E 803CFF                  		cmp	byte [si], 0FFh ; -1
 15800 0000A741 753F                    		jnz	short too_many_files
 15801 0000A743 46                      		inc	si
 15802 0000A744 E2F8                    		loop	chck_handles
 15803 0000A746 83FB14                  		cmp	bx, 20		; FILPERPROC
 15804 0000A749 7709                    		ja	short larger
 15805 0000A74B BD0200                  		mov	bp, 2
 15806 0000A74E BF1800                  		mov	di, 24		; PDB.JFN_TABLE
 15807 0000A751 53                      		push	bx
 15808 0000A752 EB1D                    		jmp	short movhandl
 15809                                  ; ---------------------------------------------------------------------------
 15810                                  
 15811                                  larger:					; ...
 15812 0000A754 83FBFF                  		cmp	bx, 0FFFFh	; -1
 15813 0000A757 747D                    		jz	short invalid_func
 15814 0000A759 F8                      		clc
 15815 0000A75A 53                      		push	bx
 15816 0000A75B 83C30F                  		add	bx, 0Fh
 15817 0000A75E B104                    		mov	cl, 4
 15818 0000A760 D3DB                    		rcr	bx, cl
 15819 0000A762 81E3FF1F                		and	bx, 1FFFh
 15820 0000A766 55                      		push	bp
 15821 0000A767 E8C4FA                  		call	_$ALLOC
 15822 0000A76A 5D                      		pop	bp
 15823 0000A76B 7264                    		jb	short no_memory
 15824 0000A76D 8EC0                    		mov	es, ax
 15825 0000A76F 31FF                    		xor	di, di
 15826                                  
 15827                                  movhandl:				; ...
 15828 0000A771 368E1E[3003]            		mov	ds, [ss:CurrentPDB]
 15829 0000A776 F7C50300                		test	bp, 3
 15830 0000A77A 740A                    		jz	short enlarge
 15831 0000A77C 59                      		pop	cx
 15832 0000A77D 51                      		push	cx
 15833 0000A77E EB0A                    		jmp	short copy_hand
 15834                                  ; ---------------------------------------------------------------------------
 15835                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15836                                  
 15837                                  ok_done:				; ...
 15838 0000A780 EB92                    		jmp	short CommitOk
 15839                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15840                                  ; ---------------------------------------------------------------------------
 15841                                  
 15842                                  too_many_files:				; ...
 15843 0000A782 B004                    		mov	al, 4		; error_too_many_open_files
 15844                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15845                                  
 15846                                  CommitErrorj:				; ...
 15847 0000A784 EB90                    		jmp	short CommitError
 15848                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15849                                  ; ---------------------------------------------------------------------------
 15850                                  
 15851                                  enlarge:				; ...
 15852 0000A786 8B0E3200                		mov	cx, [32h]	; [PDB.JFN_Length]
 15853                                  
 15854                                  copy_hand:				; ...
 15855 0000A78A 89CA                    		mov	dx, cx
 15856 0000A78C C5363400                		lds	si, [34h]	; [PDB.JFN_Pointer]
 15857 0000A790 F3A4                    		rep movsb
 15858 0000A792 59                      		pop	cx
 15859 0000A793 51                      		push	cx
 15860 0000A794 29D1                    		sub	cx, dx
 15861 0000A796 B0FF                    		mov	al, 0FFh	; -1
 15862 0000A798 F3AA                    		rep stosb
 15863 0000A79A 368E1E[3003]            		mov	ds, [ss:CurrentPDB]
 15864 0000A79F 833E340000              		cmp	word [34h], 0 ; [PDB.JFN_Pointer]
 15865 0000A7A4 750D                    		jnz	short update_info
 15866 0000A7A6 55                      		push	bp
 15867 0000A7A7 1E                      		push	ds
 15868 0000A7A8 06                      		push	es
 15869 0000A7A9 8E063600                		mov	es, word [36h] ;	[PDB.JFN_Pointer+2]
 15870 0000A7AD E803FC                  		call	_$DEALLOC
 15871 0000A7B0 07                      		pop	es
 15872 0000A7B1 1F                      		pop	ds
 15873 0000A7B2 5D                      		pop	bp
 15874                                  
 15875                                  update_info:				; ...
 15876 0000A7B3 F7C50200                		test	bp, 2
 15877 0000A7B7 7408                    		jz	short non_psp
 15878 0000A7B9 C70634001800            		mov	word [34h], 18h ; [PDB.JFN_Pointer],PDB.JFN_TABLE
 15879 0000A7BF EB06                    		jmp	short final
 15880                                  ; ---------------------------------------------------------------------------
 15881                                  
 15882                                  non_psp:				; ...
 15883 0000A7C1 C70634000000            		mov	word [34h], 0 ; [PDB.JFN_Pointer]
 15884                                  
 15885                                  final:					; ...
 15886 0000A7C7 8C063600                		mov	word [36h], es ;	[PDB.JFN_Pointer+2]
 15887 0000A7CB 8F063200                		pop	word [32h] ; [PDB.JFN_Length]
 15888                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15889                                  
 15890                                  ok_done_j:				; ...
 15891 0000A7CF EBAF                    		jmp	short ok_done
 15892                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15893                                  ; ---------------------------------------------------------------------------
 15894                                  
 15895                                  no_memory:				; ...
 15896 0000A7D1 5B                      		pop	bx
 15897 0000A7D2 B008                    		mov	al, 8		; error_not_enough_memory
 15898                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15899                                  
 15900                                  CommitErrorj2:				; ...
 15901 0000A7D4 EBAE                    		jmp	short CommitErrorj
 15902                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15903                                  ; ---------------------------------------------------------------------------
 15904                                  
 15905                                  invalid_func:				; ...
 15906 0000A7D6 B001                    		mov	al, 1		; error_invalid_function
 15907                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15908                                  
 15909                                  CommitErrorj3:				; ...
 15910 0000A7D8 EBFA                    		jmp	short CommitErrorj2
 15911                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15912                                  
 15913                                  ; =============== S U B	R O U T	I N E =======================================
 15914                                  
 15915                                  _$READ:		; ...
 15916                                  
 15917                                  ; FUNCTION CHUNK AT A714 SIZE 00000004 BYTES
 15918                                  ; FUNCTION CHUNK AT A780 SIZE 00000002 BYTES
 15919                                  ; FUNCTION CHUNK AT A784 SIZE 00000002 BYTES
 15920                                  ; FUNCTION CHUNK AT A7CF SIZE 00000002 BYTES
 15921                                  ; FUNCTION CHUNK AT A7D4 SIZE 00000002 BYTES
 15922                                  ; FUNCTION CHUNK AT A7D8 SIZE 00000002 BYTES
 15923                                  
 15924 0000A7DA BE[E971]                		mov	si, DOS_READ
 15925                                  
 15926                                  ReadDo:					; ...
 15927 0000A7DD E82DFE                  		call	pJFNFromHandle
 15928 0000A7E0 7208                    		jb	short ReadError
 15929 0000A7E2 268A05                  		mov	al, [es:di]
 15930 0000A7E5 E84101                  		call	CheckOwner
 15931 0000A7E8 7302                    		jnb	short ReadSetup
 15932                                  
 15933                                  ReadError:				; ...
 15934 0000A7EA EBEC                    		jmp	short CommitErrorj3
 15935                                  ; ---------------------------------------------------------------------------
 15936                                  
 15937                                  ReadSetup:				; ...
 15938 0000A7EC 36893E[9E05]            		mov	word [ss:THISSFT], di
 15939 0000A7F1 368C06[A005]            		mov	word [ss:THISSFT+2], es
 15940 0000A7F6 26F6450320              		test	byte [es:di+3], 20h	; [ES:DI+SF_ENTRY.sf_mode+1],
 15941                                  					; (INT_24_ERROR>>8)
 15942 0000A7FB 7406                    		jz	short needi24
 15943 0000A7FD 36800E[F605]02          		or	byte [ss:EXTOPEN_ON], 2 ; EXT_OPEN_I24_OFF
 15944                                  
 15945                                  needi24:				; ...
 15946 0000A803 36FF36[2C03]            		push	word [ss:DMAADD]
 15947 0000A808 36FF36[2E03]            		push	word [ss:DMAADD+2]
 15948 0000A80D E81400                  		call	Align_Buffer
 15949 0000A810 16                      		push	ss
 15950 0000A811 1F                      		pop	ds
 15951 0000A812 FFD6                    		call	si ; DOS_READ
 15952 0000A814 8F06[2E03]              		pop	word [DMAADD+2]
 15953 0000A818 8F06[2C03]              		pop	word [DMAADD]
 15954 0000A81C 7302                    		jnb	short READ_OK
 15955 0000A81E EBCA                    		jmp	short ReadError
 15956                                  ; ---------------------------------------------------------------------------
 15957                                  
 15958                                  READ_OK:				; ...
 15959 0000A820 89C8                    		mov	ax, cx
 15960                                  
 15961                                  Read_Okj:				; ...
 15962 0000A822 EBAB                    		jmp	short ok_done_j
 15963                                  
 15964                                  ; =============== S U B	R O U T	I N E =======================================
 15965                                  
 15966                                  Align_Buffer:	; ...
 15967 0000A824 89D3                    		mov	bx, dx
 15968 0000A826 51                      		push	cx
 15969 0000A827 B104                    		mov	cl, 4
 15970 0000A829 D3EB                    		shr	bx, cl
 15971 0000A82B 59                      		pop	cx
 15972 0000A82C 8CD8                    		mov	ax, ds
 15973 0000A82E 01D8                    		add	ax, bx
 15974 0000A830 8ED8                    		mov	ds, ax
 15975 0000A832 83E20F                  		and	dx, 0Fh
 15976 0000A835 368916[2C03]            		mov	word [ss:DMAADD], dx
 15977 0000A83A 368C1E[2E03]            		mov	word [ss:DMAADD+2],	ds
 15978 0000A83F C3                      		retn
 15979                                  
 15980                                  ; ---------------------------------------------------------------------------
 15981                                  
 15982                                  _$WRITE:				; ...
 15983 0000A840 BE[1874]                		mov	si, DOS_WRITE
 15984 0000A843 EB98                    		jmp	short ReadDo
 15985                                  
 15986                                  ; =============== S U B	R O U T	I N E =======================================
 15987                                  
 15988                                  _$LSEEK:
 15989 0000A845 E8E100                  		call	CheckOwner
 15990                                  
 15991                                  LSeekError:				; ...
 15992 0000A848 7302                    		jnb	short CHKOWN_OK
 15993 0000A84A EB9E                    		jmp	short ReadError
 15994                                  ; ---------------------------------------------------------------------------
 15995                                  
 15996                                  CHKOWN_OK:				; ...
 15997 0000A84C 3C02                    		cmp	al, 2
 15998 0000A84E 760A                    		jbe	short LSeekDisp
 15999 0000A850 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 16000 0000A856 B001                    		mov	al, 1		; error_invalid_function
 16001                                  
 16002                                  LSeekError2:				; ...
 16003 0000A858 EB90                    		jmp	short ReadError
 16004                                  ; ---------------------------------------------------------------------------
 16005                                  
 16006                                  LSeekDisp:				; ...
 16007 0000A85A 3C01                    		cmp	al, 1
 16008 0000A85C 720A                    		jb	short LSeekStore
 16009 0000A85E 771B                    		ja	short LSeekEOF
 16010 0000A860 26035515                		add	dx, [es:di+21]	; [ES:DI+SF_ENTRY.sf_position]
 16011 0000A864 26134D17                		adc	cx, [es:di+23]	; [ES:DI+SF_ENTRY.sf_position+2]
 16012                                  
 16013                                  LSeekStore:				; ...
 16014 0000A868 89C8                    		mov	ax, cx
 16015 0000A86A 92                      		xchg	ax, dx
 16016                                  
 16017                                  LSeekSetpos:				; ...
 16018 0000A86B 26894515                		mov	[es:di+21], ax
 16019 0000A86F 26895517                		mov	[es:di+23], dx
 16020 0000A873 E8FF99                  		call	Get_User_Stack
 16021 0000A876 895406                  		mov	[si+6],	dx
 16022                                  
 16023                                  LSeekOk:				; ...
 16024 0000A879 EBA7                    		jmp	short Read_Okj
 16025                                  ; ---------------------------------------------------------------------------
 16026                                  
 16027                                  LSeekEOF:				; ...
 16028 0000A87B 26F6450680              		test	byte [es:di+6], 80h	; [ES:DI+SF_ENTRY.sf_flags+1],
 16029                                  					; (sf_isnet>>8)
 16030 0000A880 750A                    		jnz	short Check_LSeek_Mode
 16031                                  
 16032                                  LOCAL_LSeek:				; ...
 16033 0000A882 26035511                		add	dx, [es:di+17]	; [ES:DI+SF_ENTRY.sf_size]
 16034 0000A886 26134D13                		adc	cx, [es:di+19]	; [ES:DI+SF_ENTRY.sf_size+2]
 16035 0000A88A EBDC                    		jmp	short LSeekStore
 16036                                  ; ---------------------------------------------------------------------------
 16037                                  
 16038                                  Check_LSeek_Mode:			; ...
 16039 0000A88C 26F6450380              		test	byte [es:di+3], 80h	; [ES:DI+SF_ENTRY.sf_mode+1],
 16040                                  					; (sf_isFCB>>8)
 16041 0000A891 75EF                    		jnz	short LOCAL_LSeek
 16042 0000A893 268B4502                		mov	ax, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
 16043 0000A897 25F000                  		and	ax, 0F0h
 16044 0000A89A 83F840                  		cmp	ax, 40h		; SHARING_MASK
 16045 0000A89D 7405                    		jz	short NET_LSEEK
 16046 0000A89F 83F830                  		cmp	ax, 30h		; SHARING_DENY_READ
 16047 0000A8A2 75DE                    		jnz	short LOCAL_LSeek
 16048                                  
 16049                                  NET_LSEEK:				; ...
 16050 0000A8A4 B82111                  		mov	ax, 1121h
 16051 0000A8A7 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - SEEK	FROM END OF REMOTE FILE
 16052                                  					; CX:DX	= offset (in bytes) from end
 16053                                  					; ES:DI	-> SFT,	SFT DPB	field -> DPB of	drive with file
 16054                                  					; SS = DOS CS
 16055                                  					; Return: CF set on error
 16056                                  					; CF clear if successful, DX:AX	= new file position
 16057 0000A8A9 73C0                    		jnb	short LSeekSetpos
 16058                                  
 16059                                  LSeekError3:				; ...
 16060 0000A8AB EBAB                    		jmp	short LSeekError2
 16061                                  
 16062                                  ; ---------------------------------------------------------------------------
 16063                                  
 16064                                  _$FILE_TIMES:				; ...
 16065 0000A8AD 3C02                    		cmp	al, 2
 16066 0000A8AF 7340                    		jnb	short inval_func
 16067 0000A8B1 E87500                  		call	CheckOwner
 16068 0000A8B4 7292                    		jb	short LSeekError
 16069 0000A8B6 08C0                    		or	al, al
 16070 0000A8B8 7515                    		jnz	short ft_set_time
 16071 0000A8BA FA                      		cli
 16072 0000A8BB 268B4D0D                		mov	cx, [es:di+13]	; [es:di+SF_ENTRY.sf_time]
 16073 0000A8BF 268B550F                		mov	dx, [es:di+15]	; [es:di+SF_ENTRY.sf_date]
 16074 0000A8C3 FB                      		sti
 16075 0000A8C4 E8AE99                  		call	Get_User_Stack
 16076 0000A8C7 894C04                  		mov	[si+4],	cx
 16077 0000A8CA 895406                  		mov	[si+6],	dx
 16078 0000A8CD EB20                    		jmp	short ok_ret
 16079                                  ; ---------------------------------------------------------------------------
 16080                                  
 16081                                  ft_set_time:				; ...
 16082 0000A8CF E854A8                  		call	ECritDisk	; call ECritSFT
 16083 0000A8D2 26894D0D                		mov	[es:di+13], cx	; [es:di+SF_ENTRY.sf_time]
 16084 0000A8D6 2689550F                		mov	[es:di+15], dx	; [es:di+SF_ENTRY.sf_date]
 16085 0000A8DA 31C0                    		xor	ax, ax
 16086                                  		;call	dword [ss:ShSU] ; call far [ss:JShare+(14*4)] ; 14 = ShSU
 16087 0000A8DC 36FF1E[C800]            		call	far [ss:JShare+(14*4)]
 16088 0000A8E1 26836505BF              		and	word [es:di+5], 0FFBFh ; ~devid_file_clean
 16089 0000A8E6 26814D050040            		or	word [es:di+5], 4000h ; sf_close_nodate
 16090 0000A8EC E857A8                  		call	LCritDisk	; call ECritSFT
 16091                                  
 16092                                  ok_ret:					; ...
 16093 0000A8EF EB88                    		jmp	short LSeekOk
 16094                                  ; ---------------------------------------------------------------------------
 16095                                  
 16096                                  inval_func:				; ...
 16097 0000A8F1 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 16098 0000A8F7 B001                    		mov	al, 1		; error_invalid_function
 16099                                  
 16100                                  ft_error:				; ...
 16101 0000A8F9 EBB0                    		jmp	short LSeekError3
 16102                                  ; ---------------------------------------------------------------------------
 16103                                  
 16104                                  _$DUP:					; ...
 16105 0000A8FB 89D8                    		mov	ax, bx
 16106 0000A8FD E86FFD                  		call	JFNFree
 16107                                  
 16108                                  DupErrorCheck:				; ...
 16109 0000A900 7217                    		jb	short DupErr
 16110 0000A902 06                      		push	es
 16111 0000A903 57                      		push	di
 16112 0000A904 5E                      		pop	si
 16113 0000A905 1F                      		pop	ds
 16114 0000A906 93                      		xchg	ax, bx
 16115 0000A907 E81F00                  		call	CheckOwner
 16116 0000A90A 720D                    		jb	short DupErr
 16117 0000A90C E805C0                  		call	DOS_Dup_Direct
 16118 0000A90F E8FBFC                  		call	pJFNFromHandle
 16119 0000A912 268A1D                  		mov	bl, [es:di]
 16120 0000A915 881C                    		mov	[si], bl
 16121 0000A917 EBD6                    		jmp	short ok_ret
 16122                                  ; ---------------------------------------------------------------------------
 16123                                  
 16124                                  DupErr:					; ...
 16125 0000A919 EBDE                    		jmp	short ft_error
 16126                                  ; ---------------------------------------------------------------------------
 16127                                  
 16128                                  _$DUP2:					; ...
 16129 0000A91B 53                      		push	bx
 16130 0000A91C 51                      		push	cx
 16131 0000A91D 89CB                    		mov	bx, cx
 16132 0000A91F E8A9FD                  		call	_$CLOSE
 16133 0000A922 5B                      		pop	bx
 16134 0000A923 58                      		pop	ax
 16135 0000A924 E8E6FC                  		call	pJFNFromHandle
 16136 0000A927 EBD7                    		jmp	short DupErrorCheck
 16137                                  
 16138                                  ; =============== S U B	R O U T	I N E =======================================
 16139                                  
 16140                                  CheckOwner:		; ...
 16141 0000A929 E8FEFC                  		call	SFFromHandle
 16142 0000A92C 721C                    		jb	short co_ret_label
 16143 0000A92E 50                      		push	ax
 16144 0000A92F 36F606[3010]01          		test	byte [ss:IsWin386], 1
 16145 0000A935 7404                    		jz	short no_win386
 16146 0000A937 31C0                    		xor	ax, ax
 16147 0000A939 EB08                    		jmp	short _skip_win386
 16148                                  ; ---------------------------------------------------------------------------
 16149                                  
 16150                                  no_win386:				; ...
 16151 0000A93B 36A1[3E03]              		mov	ax, [ss:USER_ID]
 16152 0000A93F 263B452F                		cmp	ax, [es:di+2Fh]	; [es:di+SF_ENTRY.sf_UID]
 16153                                  
 16154                                  _skip_win386:				; ...
 16155 0000A943 58                      		pop	ax
 16156 0000A944 7501                    		jnz	short CheckOwner_err
 16157 0000A946 C3                      		retn
 16158                                  ; ---------------------------------------------------------------------------
 16159                                  
 16160                                  CheckOwner_err:				; ...
 16161 0000A947 B006                    		mov	al, 6
 16162 0000A949 F9                      		stc
 16163                                  
 16164                                  co_ret_label:				; ...
 16165 0000A94A C3                      		retn
 16166                                  
 16167                                  ; ---------------------------------------------------------------------------
 16168                                  
 16169                                  _$AssignOper:				; ...
 16170 0000A94B 3C07                    		cmp	al, 7
 16171 0000A94D 7526                    		jnz	short chk08
 16172                                  
 16173                                  srinuse:				; ...
 16174 0000A94F 50                      		push	ax
 16175 0000A950 88D0                    		mov	al, dl
 16176 0000A952 E85E01                  		call	GetCDSFromDrv
 16177 0000A955 58                      		pop	ax
 16178 0000A956 7218                    		jb	short baddrv
 16179 0000A958 837C4500                		cmp	word [si+45h], 0 ; [SI+curdir.devptr]
 16180 0000A95C 7412                    		jz	short baddrv
 16181 0000A95E 3C07                    		cmp	al, 7
 16182 0000A960 7507                    		jnz	short resetdrv
 16183 0000A962 814C430040              		or	word [si+43h], 4000h ; [SI+curdir.flags],
 16184                                  					; curdir_inuse
 16185 0000A967 EB19                    		jmp	short okdone
 16186                                  ; ---------------------------------------------------------------------------
 16187                                  
 16188                                  resetdrv:				; ...
 16189 0000A969 816443FFBF              		and	word [si+43h], 0BFFFh ; ~curdir_inuse
 16190 0000A96E EB12                    		jmp	short okdone
 16191                                  ; ---------------------------------------------------------------------------
 16192                                  
 16193                                  baddrv:					; ...
 16194 0000A970 B80F00                  		mov	ax, 0Fh		; error_invalid_drive
 16195 0000A973 EB10                    		jmp	short ASS_ERR
 16196                                  ; ---------------------------------------------------------------------------
 16197                                  
 16198                                  chk08:					; ...
 16199 0000A975 3C08                    		cmp	al, 8
 16200 0000A977 74D6                    		jz	short srinuse
 16201 0000A979 50                      		push	ax
 16202 0000A97A B81E11                  		mov	ax, 111Eh	; (MultNET SHL 8) OR 30
 16203 0000A97D CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - DO REDIRECTION
 16204                                  					; SS = DOS CS
 16205                                  					; STACK: WORD function to execute
 16206                                  					; Return: CF set on error, AX =	error code
 16207                                  					; STACK	unchanged
 16208 0000A97F 5B                      		pop	bx
 16209 0000A980 7203                    		jb	short ASS_ERR
 16210                                  
 16211                                  okdone:					; ...
 16212 0000A982 E95F9A                  		jmp	SYS_RETURN	; SYS_RET_OK
 16213                                  ; ---------------------------------------------------------------------------
 16214                                  
 16215                                  ASS_ERR:				; ...
 16216 0000A985 E9659A                  		jmp	SYS_RET_ERR
 16217                                  
 16218                                  ; =============== S U B	R O U T	I N E =======================================
 16219                                  
 16220                                  FIND_DPB:		; ...
 16221 0000A988 36C536[2600]            		lds	si, [ss:SYSINITVARS] ; [SS:DPBHEAD]
 16222                                  
 16223                                  fdpb5:					; ...
 16224 0000A98D 83FEFF                  		cmp	si, 0FFFFh	; -1
 16225 0000A990 7409                    		jz	short fdpb10
 16226 0000A992 3A04                    		cmp	al, [si]	; [SI+DPB.DRIVE]
 16227 0000A994 7406                    		jz	short ret_label15
 16228 0000A996 C57419                  		lds	si, [si+19h]	; [SI+DPB.NEXT_DPB]
 16229 0000A999 EBF2                    		jmp	short fdpb5
 16230                                  ; ---------------------------------------------------------------------------
 16231                                  
 16232                                  fdpb10:					; ...
 16233 0000A99B F9                      		stc
 16234                                  
 16235                                  ret_label15:				; ...
 16236 0000A99C C3                      		retn
 16237                                  
 16238                                  ; =============== S U B	R O U T	I N E =======================================
 16239                                  
 16240                                  InitCDS:
 16241 0000A99D 50                      		push	ax
 16242 0000A99E 36C43E[A205]            		les	di, [ss:THISCDS]
 16243 0000A9A3 26C745430000            		mov	word [es:di+43h], 0 ; [ES:DI+curdir.flags]
 16244 0000A9A9 2C40                    		sub	al, 40h	; '@'   ; 'A'-1
 16245 0000A9AB 363806[4600]            		cmp	[ss:NUMIO], al
 16246 0000A9B0 7236                    		jb	short icdsx
 16247 0000A9B2 48                      		dec	ax
 16248 0000A9B3 50                      		push	ax
 16249 0000A9B4 0441                    		add	al, 41h	; 'A'
 16250 0000A9B6 B43A                    		mov	ah, 3Ah	; ':'
 16251 0000A9B8 268905                  		mov	[es:di], ax	; [ES:DI+curdir.text]
 16252 0000A9BB 26C745025C00            		mov	word [es:di+2], 5Ch ; '\' ; [ES:DI+curdir.text+2]
 16253 0000A9C1 26804D4440              		or	byte [es:di+44h], 40h ; [ES:DI+curdir.flags+1],
 16254                                  					; (curdir_inuse>>8)
 16255 0000A9C6 29C0                    		sub	ax, ax
 16256 0000A9C8 26894549                		mov	[es:di+49h], ax	; [ES:DI+curdir.ID]
 16257 0000A9CC 2689454B                		mov	[es:di+4Bh], ax	; [ES:DI+curdir.ID+2]
 16258 0000A9D0 B002                    		mov	al, 2
 16259 0000A9D2 2689454F                		mov	[es:di+4Fh], ax	; [ES:DI+curdir.end]
 16260 0000A9D6 58                      		pop	ax
 16261 0000A9D7 1E                      		push	ds
 16262 0000A9D8 56                      		push	si
 16263 0000A9D9 E8ACFF                  		call	FIND_DPB
 16264 0000A9DC 7208                    		jb	short icds5
 16265 0000A9DE 26897545                		mov	[es:di+45h], si	; [ES:DI+curdir.devptr]
 16266 0000A9E2 268C5D47                		mov	word [es:di+47h], ds ; [ES:DI+curdir.devptr+2]
 16267                                  
 16268                                  icds5:					; ...
 16269 0000A9E6 5E                      		pop	si
 16270 0000A9E7 1F                      		pop	ds
 16271                                  
 16272                                  icdsx:					; ...
 16273 0000A9E8 58                      		pop	ax
 16274                                  
 16275                                  RET45:					; ...
 16276 0000A9E9 C3                      		retn
 16277                                  
 16278                                  ; ---------------------------------------------------------------------------
 16279                                  
 16280                                  _$UserOper:				; ...
 16281 0000A9EA 50                      		push	ax
 16282 0000A9EB 2C01                    		sub	al, 1
 16283 0000A9ED 58                      		pop	ax
 16284 0000A9EE 7210                    		jb	short UserGet
 16285 0000A9F0 742D                    		jz	short UserSet
 16286 0000A9F2 3C05                    		cmp	al, 5
 16287 0000A9F4 763C                    		jbe	short UserPrint
 16288 0000A9F6 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 16289 0000A9FC B001                    		mov	al, 1		; error_invalid_function
 16290                                  
 16291                                  useroper_error:				; ...
 16292 0000A9FE EB85                    		jmp	short ASS_ERR
 16293                                  ; ---------------------------------------------------------------------------
 16294                                  
 16295                                  UserGet:				; ...
 16296 0000AA00 1E                      		push	ds
 16297 0000AA01 07                      		pop	es
 16298 0000AA02 89D7                    		mov	di, dx
 16299 0000AA04 368B0E[0E00]            		mov	cx, [ss:MYNUM]
 16300 0000AA09 E86998                  		call	Get_User_Stack
 16301 0000AA0C 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
 16302 0000AA0F 16                      		push	ss
 16303 0000AA10 1F                      		pop	ds
 16304 0000AA11 BE[0503]                		mov	si, MYNAME
 16305                                  
 16306                                  UserMove:				; ...
 16307 0000AA14 B90F00                  		mov	cx, 15
 16308 0000AA17 F3A4                    		rep movsb
 16309 0000AA19 31C0                    		xor	ax, ax
 16310 0000AA1B AA                      		stosb
 16311                                  
 16312                                  UserBye:				; ...
 16313 0000AA1C E9C599                  		jmp	SYS_RETURN	; SYS_RET_OK
 16314                                  ; ---------------------------------------------------------------------------
 16315                                  
 16316                                  UserSet:				; ...
 16317 0000AA1F 36890E[0E00]            		mov	[ss:MYNUM], cx
 16318 0000AA24 89D6                    		mov	si, dx
 16319 0000AA26 16                      		push	ss
 16320 0000AA27 07                      		pop	es
 16321 0000AA28 BF[0503]                		mov	di, MYNAME
 16322 0000AA2B 36FE06[0403]            		inc	byte [ss:DIFFNAM]
 16323 0000AA30 EBE2                    		jmp	short UserMove
 16324                                  ; ---------------------------------------------------------------------------
 16325                                  
 16326                                  UserPrint:				; ...
 16327 0000AA32 50                      		push	ax
 16328 0000AA33 B81F11                  		mov	ax, 111Fh	; (MultNET SHL 8) OR 31
 16329 0000AA36 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - PRINTER SETUP
 16330                                  					; STACK: WORD function
 16331                                  					; Return: CF set on error, AX =	error code
 16332                                  					; STACK	unchanged
 16333 0000AA38 5A                      		pop	dx
 16334 0000AA39 7302                    		jnb	short OKPA
 16335 0000AA3B EBC1                    		jmp	short useroper_error
 16336                                  ; ---------------------------------------------------------------------------
 16337                                  
 16338                                  OKPA:					; ...
 16339 0000AA3D EBDD                    		jmp	short UserBye
 16340                                  
 16341                                  ; =============== S U B	R O U T	I N E =======================================
 16342                                  
 16343                                  GetVisDrv:		; ...
 16344 0000AA3F E81A00                  		call	GETTHISDRV
 16345 0000AA42 72A5                    		jb	short RET45
 16346 0000AA44 1E                      		push	ds
 16347 0000AA45 56                      		push	si
 16348 0000AA46 36C536[A205]            		lds	si, [ss:THISCDS]
 16349 0000AA4B F744430020              		test	word [si+43h], 2000h ; [SI+curdir.flags],
 16350                                  					; curdir_splice
 16351 0000AA50 5E                      		pop	si
 16352 0000AA51 1F                      		pop	ds
 16353 0000AA52 7495                    		jz	short RET45
 16354 0000AA54 36C606[1006]0F          		mov	byte [ss:DrvErr], 0Fh ; error_invalid_drive
 16355 0000AA5A F9                      		stc
 16356 0000AA5B C3                      		retn
 16357                                  
 16358                                  ; =============== S U B	R O U T	I N E =======================================
 16359                                  
 16360                                  GETTHISDRV:		; ...
 16361 0000AA5C 08C0                    		or	al, al
 16362 0000AA5E 7505                    		jnz	short GTD10
 16363 0000AA60 36A0[3603]              		mov	al, [ss:CURDRV]
 16364 0000AA64 40                      		inc	ax
 16365                                  
 16366                                  GTD10:					; ...
 16367 0000AA65 48                      		dec	ax
 16368 0000AA66 1E                      		push	ds
 16369 0000AA67 56                      		push	si
 16370 0000AA68 36C606[2303]02          		mov	byte [ss:EXTERR_LOCUS], 2 ; errLOC_Disk
 16371 0000AA6E 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 16372 0000AA74 7421                    		jz	short GTD20
 16373 0000AA76 50                      		push	ax
 16374 0000AA77 06                      		push	es
 16375 0000AA78 57                      		push	di
 16376 0000AA79 36C706[A205][F304]      		mov	word [ss:THISCDS], DUMMYCDS
 16377 0000AA80 368C16[A405]            		mov	word [ss:THISCDS+2], ss
 16378 0000AA85 0441                    		add	al, 41h	; 'A'
 16379 0000AA87 E813FF                  		call	InitCDS
 16380 0000AA8A 26F745430040            		test	word [es:di+43h], 4000h ; [ES:DI+curdir.flags],
 16381                                  					; curdir_inuse
 16382 0000AA90 5F                      		pop	di
 16383 0000AA91 07                      		pop	es
 16384 0000AA92 58                      		pop	ax
 16385 0000AA93 740E                    		jz	short GTD30
 16386 0000AA95 EB19                    		jmp	short GTDX
 16387                                  ; ---------------------------------------------------------------------------
 16388                                  
 16389                                  GTD20:					; ...
 16390 0000AA97 E81900                  		call	GetCDSFromDrv
 16391 0000AA9A 7207                    		jb	short GTD30
 16392 0000AA9C F744430040              		test	word [si+43h], 4000h ; [SI+curdir.flags],
 16393                                  					; curdir_inuse
 16394 0000AAA1 750D                    		jnz	short GTDX
 16395                                  
 16396                                  GTD30:					; ...
 16397 0000AAA3 B00F                    		mov	al, 0Fh		; error_invalid_drive
 16398 0000AAA5 36A2[1006]              		mov	[ss:DrvErr], al
 16399 0000AAA9 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 16400 0000AAAF F9                      		stc
 16401                                  
 16402                                  GTDX:					; ...
 16403 0000AAB0 5E                      		pop	si
 16404 0000AAB1 1F                      		pop	ds
 16405 0000AAB2 C3                      		retn
 16406                                  
 16407                                  ; =============== S U B	R O U T	I N E =======================================
 16408                                  
 16409                                  GetCDSFromDrv:	; ...
 16410 0000AAB3 363A06[4700]            		cmp	al, [ss:CDSCOUNT]
 16411 0000AAB8 7202                    		jb	short GetCDS
 16412 0000AABA F9                      		stc
 16413 0000AABB C3                      		retn
 16414                                  ; ---------------------------------------------------------------------------
 16415                                  
 16416                                  GetCDS:					; ...
 16417 0000AABC 53                      		push	bx
 16418 0000AABD 50                      		push	ax
 16419 0000AABE 36C536[3C00]            		lds	si, [ss:CDSADDR]
 16420 0000AAC3 B358                    		mov	bl, 88		; curdir.size
 16421 0000AAC5 F6E3                    		mul	bl
 16422 0000AAC7 01C6                    		add	si, ax
 16423 0000AAC9 368936[A205]            		mov	word [ss:THISCDS], si
 16424 0000AACE 368C1E[A405]            		mov	word [ss:THISCDS+2], ds
 16425 0000AAD3 58                      		pop	ax
 16426 0000AAD4 5B                      		pop	bx
 16427 0000AAD5 F8                      		clc
 16428 0000AAD6 C3                      		retn
 16429                                  
 16430                                  ; ---------------------------------------------------------------------------
 16431                                  
 16432                                  TransFCB:				; ...
 16433 0000AAD7 55                      		push	bp
 16434 0000AAD8 89E5                    		mov	bp, sp
 16435 0000AADA 83EC10                  		sub	sp, 16
 16436 0000AADD 16                      		push	ss
 16437 0000AADE 07                      		pop	es
 16438 0000AADF 06                      		push	es
 16439 0000AAE0 57                      		push	di
 16440 0000AAE1 8D7EF0                  		lea	di, [bp-16]	; FCBTmp
 16441 0000AAE4 36C606[6C05]00          		mov	byte [ss:EXTFCB], 0
 16442 0000AAEA 36C606[6D05]00          		mov	byte [ss:SATTRIB], 0
 16443 0000AAF0 E809B0                  		call	GetExtended
 16444 0000AAF3 740D                    		jz	short GetDrive
 16445 0000AAF5 8A44FF                  		mov	al, [si-1]
 16446 0000AAF8 36A2[6D05]              		mov	[ss:SATTRIB], al
 16447 0000AAFC 36C606[6C05]FF          		mov	byte [ss:EXTFCB], 0FFh ; -1
 16448                                  
 16449                                  GetDrive:				; ...
 16450 0000AB02 AC                      		lodsb
 16451 0000AB03 E856FF                  		call	GETTHISDRV
 16452 0000AB06 722A                    		jb	short BadPack
 16453 0000AB08 E87703                  		call	TextFromDrive
 16454 0000AB0B B90B00                  		mov	cx, 11
 16455 0000AB0E 56                      		push	si
 16456                                  
 16457                                  FCBScan:				; ...
 16458 0000AB0F AC                      		lodsb
 16459 0000AB10 E8DBE4                  		call	GetCharType
 16460 0000AB13 A808                    		test	al, 8		; FFCB
 16461 0000AB15 741B                    		jz	short BadPack
 16462 0000AB17 E2F6                    		loop	FCBScan
 16463 0000AB19 5E                      		pop	si
 16464 0000AB1A 89FB                    		mov	bx, di
 16465 0000AB1C E83DB4                  		call	PackName
 16466 0000AB1F 5F                      		pop	di
 16467 0000AB20 07                      		pop	es
 16468 0000AB21 16                      		push	ss
 16469 0000AB22 1F                      		pop	ds
 16470 0000AB23 8D76F0                  		lea	si, [bp-16]	; FCBTmp
 16471 0000AB26 803F00                  		cmp	byte [bx], 0
 16472 0000AB29 7407                    		jz	short BadPack
 16473 0000AB2B 55                      		push	bp
 16474 0000AB2C E80E00                  		call	TransPathSet
 16475 0000AB2F 5D                      		pop	bp
 16476 0000AB30 7303                    		jnb	short FCBRet
 16477                                  
 16478                                  BadPack:				; ...
 16479 0000AB32 F9                      		stc
 16480 0000AB33 B003                    		mov	al, 3		; error_path_not_found
 16481                                  
 16482                                  FCBRet:					; ...
 16483 0000AB35 89EC                    		mov	sp, bp
 16484 0000AB37 5D                      		pop	bp
 16485                                  
 16486                                  TransPath_retn:				; ...
 16487 0000AB38 C3                      		retn
 16488                                  
 16489                                  ; =============== S U B	R O U T	I N E =======================================
 16490                                  
 16491                                  TransPath:		; ...
 16492 0000AB39 30C0                    		xor	al, al
 16493 0000AB3B EB02                    		jmp	short SetSplice
 16494                                  ; ---------------------------------------------------------------------------
 16495                                  
 16496                                  TransPathSet:				; ...
 16497 0000AB3D B0FF                    		mov	al, 0FFh	; -1
 16498                                  
 16499                                  SetSplice:				; ...
 16500 0000AB3F 36A2[4C03]              		mov	[ss:NoSetDir], al
 16501 0000AB43 B0FF                    		mov	al, 0FFh	; -1
 16502                                  
 16503                                  TransPathNoSet:				; ...
 16504 0000AB45 36A2[7105]              		mov	[ss:FSPLICE], al
 16505 0000AB49 36C606[7A05]FF          		mov	byte [ss:CMETA], 0FFh ; -1
 16506 0000AB4F 36893E[B205]            		mov	[ss:WFP_START],	di
 16507 0000AB54 36C706[B605]FFFF        		mov	word [ss:CURR_DIR_END], 0FFFFh ; -1
 16508 0000AB5B 16                      		push	ss
 16509 0000AB5C 07                      		pop	es
 16510 0000AB5D 8DAD8600                		lea	bp, [di+134]	; [DI+TEMPLEN]
 16511 0000AB61 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 16512 0000AB67 7435                    		jz	short CheckUNC
 16513 0000AB69 E8FF02                  		call	DriveFromText
 16514 0000AB6C E8EDFE                  		call	GETTHISDRV
 16515 0000AB6F 722A                    		jb	short NoPath
 16516 0000AB71 E80E03                  		call	TextFromDrive
 16517 0000AB74 8D5D01                  		lea	bx, [di+1]
 16518 0000AB77 E83501                  		call	Canonicalize
 16519 0000AB7A 72BC                    		jb	short TransPath_retn
 16520 0000AB7C 16                      		push	ss
 16521 0000AB7D 1F                      		pop	ds
 16522 0000AB7E 8B36[B205]              		mov	si, [WFP_START]
 16523 0000AB82 F606[7105]FF            		test	byte [FSPLICE], 0FFh ; -1
 16524 0000AB87 7403                    		jz	short NoServerSplice
 16525 0000AB89 E83302                  		call	Splice
 16526                                  
 16527                                  NoServerSplice:				; ...
 16528 0000AB8C 16                      		push	ss
 16529 0000AB8D 1F                      		pop	ds
 16530 0000AB8E C43E[A205]              		les	di, [THISCDS]
 16531 0000AB92 E891A5                  		call	ECritDisk
 16532 0000AB95 E8D1EA                  		call	FATREAD_CDS
 16533 0000AB98 E8ABA5                  		call	LCritDisk
 16534                                  
 16535                                  NoPath:					; ...
 16536 0000AB9B B003                    		mov	al, 3		; error_path_not_found
 16537 0000AB9D C3                      		retn
 16538                                  ; ---------------------------------------------------------------------------
 16539                                  
 16540                                  CheckUNC:				; ...
 16541 0000AB9E 36C706[A205]FFFF        		mov	word [ss:THISCDS], 0FFFFh
 16542 0000ABA5 B82311                  		mov	ax, 1123h
 16543 0000ABA8 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - QUALIFY REMOTE FILENAME
 16544                                  					; DS:SI	-> ASCIZ filename to canonicalize
 16545                                  					; ES:DI	-> 128-byte buffer for qualified name
 16546                                  					; Return: CF set if not	resolved
 16547 0000ABAA 7329                    		jnb	short UNCDone
 16548 0000ABAC E8BC02                  		call	DriveFromText
 16549 0000ABAF 50                      		push	ax
 16550 0000ABB0 8B04                    		mov	ax, [si]
 16551 0000ABB2 E856E4                  		call	PATHCHRCMP
 16552 0000ABB5 86E0                    		xchg	ah, al
 16553 0000ABB7 E851E4                  		call	PATHCHRCMP
 16554 0000ABBA 751F                    		jnz	short CheckDevice
 16555 0000ABBC 38C4                    		cmp	ah, al
 16556 0000ABBE 751B                    		jnz	short CheckDevice
 16557 0000ABC0 58                      		pop	ax
 16558 0000ABC1 A5                      		movsw
 16559                                  
 16560                                  UNCCpy:					; ...
 16561 0000ABC2 AC                      		lodsb
 16562 0000ABC3 E8F0E3                  		call	UCase
 16563 0000ABC6 08C0                    		or	al, al
 16564 0000ABC8 740E                    		jz	short UNCTerm
 16565 0000ABCA E83EE4                  		call	PATHCHRCMP
 16566 0000ABCD 89FB                    		mov	bx, di
 16567 0000ABCF AA                      		stosb
 16568 0000ABD0 75F0                    		jnz	short UNCCpy
 16569 0000ABD2 E8DA00                  		call	Canonicalize
 16570                                  
 16571                                  UNCDone:				; ...
 16572 0000ABD5 16                      		push	ss
 16573 0000ABD6 1F                      		pop	ds
 16574 0000ABD7 C3                      		retn
 16575                                  ; ---------------------------------------------------------------------------
 16576                                  
 16577                                  UNCTerm:				; ...
 16578 0000ABD8 AA                      		stosb
 16579 0000ABD9 EBFA                    		jmp	short UNCDone
 16580                                  ; ---------------------------------------------------------------------------
 16581                                  
 16582                                  CheckDevice:				; ...
 16583 0000ABDB 58                      		pop	ax
 16584 0000ABDC 803C00                  		cmp	byte [si], 0
 16585 0000ABDF 7504                    		jnz	short CheckPath
 16586 0000ABE1 B002                    		mov	al, 2		; error_file_not_found
 16587 0000ABE3 F9                      		stc
 16588 0000ABE4 C3                      		retn
 16589                                  ; ---------------------------------------------------------------------------
 16590                                  
 16591                                  CheckPath:				; ...
 16592 0000ABE5 50                      		push	ax
 16593 0000ABE6 55                      		push	bp
 16594 0000ABE7 E86FD6                  		call	CheckThisDevice
 16595 0000ABEA 5D                      		pop	bp
 16596 0000ABEB 58                      		pop	ax
 16597 0000ABEC 731C                    		jnb	short DoFile
 16598 0000ABEE 36C606[7205]FF          		mov	byte [ss:FSHARING], 0FFh ; -1
 16599 0000ABF4 E865FE                  		call	GETTHISDRV
 16600 0000ABF7 36C606[7205]00          		mov	byte [ss:FSHARING], 0
 16601 0000ABFD E88202                  		call	TextFromDrive
 16602 0000AC00 B02F                    		mov	al, '/'
 16603 0000AC02 AA                      		stosb
 16604 0000AC03 E8DFA3                  		call	StrCpy
 16605 0000AC06 F8                      		clc
 16606 0000AC07 16                      		push	ss
 16607 0000AC08 1F                      		pop	ds
 16608                                  
 16609                                  DoFile_retn:				; ...
 16610 0000AC09 C3                      		retn
 16611                                  ; ---------------------------------------------------------------------------
 16612                                  
 16613                                  DoFile:					; ...
 16614 0000AC0A E832FE                  		call	GetVisDrv
 16615 0000AC0D B003                    		mov	al, 3		; error_path_not_found
 16616 0000AC0F 72F8                    		jb	short DoFile_retn
 16617 0000AC11 1E                      		push	ds
 16618 0000AC12 56                      		push	si
 16619 0000AC13 06                      		push	es
 16620 0000AC14 57                      		push	di
 16621 0000AC15 E883D5                  		call	ValidateCDS
 16622 0000AC18 5F                      		pop	di
 16623 0000AC19 07                      		pop	es
 16624 0000AC1A 5E                      		pop	si
 16625 0000AC1B 1F                      		pop	ds
 16626 0000AC1C B003                    		mov	al, 3
 16627 0000AC1E 72E9                    		jb	short DoFile_retn
 16628 0000AC20 1E                      		push	ds
 16629 0000AC21 56                      		push	si
 16630 0000AC22 36C536[A205]            		lds	si, [ss:THISCDS]
 16631 0000AC27 89FB                    		mov	bx, di
 16632 0000AC29 035C4F                  		add	bx, [si+79]	; [SI+curdir.end]
 16633 0000AC2C 8DAD8600                		lea	bp, [di+134]	; [DI+TEMPLEN]
 16634 0000AC30 E8C1A3                  		call	FStrCpy
 16635 0000AC33 4F                      		dec	di
 16636 0000AC34 B05C                    		mov	al, '\'
 16637 0000AC36 263845FF                		cmp	[es:di-1], al
 16638 0000AC3A 7401                    		jz	short GetOrig
 16639 0000AC3C AA                      		stosb
 16640                                  
 16641                                  GetOrig:				; ...
 16642 0000AC3D 4F                      		dec	di
 16643 0000AC3E 5E                      		pop	si
 16644 0000AC3F 1F                      		pop	ds
 16645 0000AC40 E8D100                  		call	PathSep
 16646 0000AC43 7511                    		jnz	short PathAssure
 16647 0000AC45 08C0                    		or	al, al
 16648 0000AC47 7410                    		jz	short DoCanon
 16649 0000AC49 89DF                    		mov	di, bx
 16650                                  
 16651                                  SkipPath:				; ...
 16652 0000AC4B AC                      		lodsb
 16653 0000AC4C E8BCE3                  		call	PATHCHRCMP
 16654 0000AC4F 74FA                    		jz	short SkipPath
 16655 0000AC51 4E                      		dec	si
 16656 0000AC52 08C0                    		or	al, al
 16657 0000AC54 7403                    		jz	short DoCanon
 16658                                  
 16659                                  PathAssure:				; ...
 16660 0000AC56 B05C                    		mov	al, 5Ch	; '\'
 16661 0000AC58 AA                      		stosb
 16662                                  
 16663                                  DoCanon:				; ...
 16664 0000AC59 E85300                  		call	Canonicalize
 16665 0000AC5C 72AB                    		jb	short DoFile_retn
 16666 0000AC5E 16                      		push	ss
 16667 0000AC5F 1F                      		pop	ds
 16668 0000AC60 8B3E[B205]              		mov	di, [WFP_START]
 16669 0000AC64 C536[A205]              		lds	si, [THISCDS]
 16670 0000AC68 E81F02                  		call	PathPref
 16671 0000AC6B 7514                    		jnz	short DoSplice
 16672 0000AC6D 8A44FF                  		mov	al, [si-1]
 16673 0000AC70 E898E3                  		call	PATHCHRCMP
 16674 0000AC73 740C                    		jz	short DoSplice
 16675 0000AC75 26803D00                		cmp	byte [es:di], 0
 16676 0000AC79 7406                    		jz	short DoSplice
 16677 0000AC7B 47                      		inc	di
 16678 0000AC7C 36893E[B605]            		mov	[ss:CURR_DIR_END], di
 16679                                  
 16680                                  DoSplice:				; ...
 16681 0000AC81 16                      		push	ss
 16682 0000AC82 1F                      		pop	ds
 16683 0000AC83 8B36[B205]              		mov	si, [WFP_START]
 16684 0000AC87 31C9                    		xor	cx, cx
 16685 0000AC89 F606[7105]FF            		test	byte [FSPLICE], 0FFh ; -1
 16686 0000AC8E 7403                    		jz	short SkipSplice
 16687 0000AC90 E82C01                  		call	Splice
 16688                                  
 16689                                  SkipSplice:				; ...
 16690 0000AC93 16                      		push	ss
 16691 0000AC94 1F                      		pop	ds
 16692 0000AC95 C43E[A205]              		les	di, [THISCDS]
 16693 0000AC99 26F745430080            		test	word [es:di+67], 8000h ; [ES:DI+curdir.flags],
 16694                                  					; curdir_isnet
 16695 0000AC9F 750D                    		jnz	short Done
 16696 0000ACA1 E30B                    		jcxz	Done
 16697 0000ACA3 E880A4                  		call	ECritDisk
 16698 0000ACA6 E8C0E9                  		call	FATREAD_CDS
 16699 0000ACA9 E89AA4                  		call	LCritDisk
 16700 0000ACAC B003                    		mov	al, 3		; error_path_not_found
 16701                                  
 16702                                  Done:					; ...
 16703 0000ACAE C3                      		retn
 16704                                  
 16705                                  ; =============== S U B	R O U T	I N E =======================================
 16706                                  
 16707                                  Canonicalize:	; ...
 16708 0000ACAF AC                      		lodsb
 16709 0000ACB0 E858E3                  		call	PATHCHRCMP
 16710 0000ACB3 7507                    		jnz	short CanonDec
 16711 0000ACB5 39EF                    		cmp	di, bp
 16712 0000ACB7 7319                    		jnb	short CanonBad
 16713 0000ACB9 AA                      		stosb
 16714 0000ACBA EBF3                    		jmp	short Canonicalize
 16715                                  ; ---------------------------------------------------------------------------
 16716                                  
 16717                                  CanonDec:				; ...
 16718 0000ACBC 4E                      		dec	si
 16719                                  
 16720                                  CanonLoop:				; ...
 16721 0000ACBD 31C0                    		xor	ax, ax
 16722 0000ACBF 3804                    		cmp	[si], al
 16723 0000ACC1 751A                    		jnz	short DoComponent
 16724 0000ACC3 26807DFF3A              		cmp	byte [es:di-1], ':'
 16725 0000ACC8 7505                    		jnz	short DoTerminate
 16726 0000ACCA B05C                    		mov	al, '\'
 16727 0000ACCC AA                      		stosb
 16728 0000ACCD 88E0                    		mov	al, ah
 16729                                  
 16730                                  DoTerminate:				; ...
 16731 0000ACCF AA                      		stosb
 16732 0000ACD0 F8                      		clc
 16733 0000ACD1 C3                      		retn
 16734                                  ; ---------------------------------------------------------------------------
 16735                                  
 16736                                  CanonBad:				; ...
 16737 0000ACD2 E8CE01                  		call	ScanPathChar
 16738 0000ACD5 B003                    		mov	al, 3		; error_path_not_found
 16739 0000ACD7 7402                    		jz	short PathEnc
 16740 0000ACD9 B002                    		mov	al, 2		; error_file_not_found
 16741                                  
 16742                                  PathEnc:				; ...
 16743 0000ACDB F9                      		stc
 16744                                  
 16745                                  CanonBad_retn:				; ...
 16746 0000ACDC C3                      		retn
 16747                                  ; ---------------------------------------------------------------------------
 16748                                  
 16749                                  DoComponent:				; ...
 16750 0000ACDD E85100                  		call	CopyComponent
 16751 0000ACE0 72FA                    		jb	short CanonBad_retn
 16752 0000ACE2 26833D2E                		cmp	word [es:di], 2Eh ;	'.'
 16753 0000ACE6 7408                    		jz	short Skip1
 16754 0000ACE8 26813D2E2E              		cmp	word [es:di], 2E2Eh
 16755 0000ACED 750A                    		jnz	short CanonNormal
 16756 0000ACEF 4F                      		dec	di
 16757                                  
 16758                                  Skip1:					; ...
 16759 0000ACF0 E82B00                  		call	SkipBack
 16760 0000ACF3 B003                    		mov	al, 3		; error_path_not_found
 16761 0000ACF5 72E5                    		jb	short CanonBad_retn
 16762 0000ACF7 EB02                    		jmp	short CanonPath
 16763                                  ; ---------------------------------------------------------------------------
 16764                                  
 16765                                  CanonNormal:				; ...
 16766 0000ACF9 01CF                    		add	di, cx
 16767                                  
 16768                                  CanonPath:				; ...
 16769 0000ACFB E81600                  		call	PathSep
 16770 0000ACFE 75D2                    		jnz	short CanonBad
 16771 0000AD00 AC                      		lodsb
 16772 0000AD01 E807E3                  		call	PATHCHRCMP
 16773 0000AD04 75B6                    		jnz	short CanonDec
 16774 0000AD06 39EF                    		cmp	di, bp
 16775 0000AD08 73C8                    		jnb	short CanonBad
 16776 0000AD0A AA                      		stosb
 16777                                  
 16778                                  CanonPathLoop:				; ...
 16779 0000AD0B AC                      		lodsb
 16780 0000AD0C E8FCE2                  		call	PATHCHRCMP
 16781 0000AD0F 74FA                    		jz	short CanonPathLoop
 16782 0000AD11 4E                      		dec	si
 16783 0000AD12 EBA9                    		jmp	short CanonLoop
 16784                                  
 16785                                  ; =============== S U B	R O U T	I N E =======================================
 16786                                  
 16787                                  PathSep:
 16788 0000AD14 8A04                    		mov	al, [si]
 16789                                  
 16790                                  PathSepGotCh:				; ...
 16791 0000AD16 08C0                    		or	al, al
 16792 0000AD18 74C2                    		jz	short CanonBad_retn
 16793 0000AD1A E8EEE2                  		call	PATHCHRCMP
 16794 0000AD1D C3                      		retn
 16795                                  
 16796                                  ; =============== S U B	R O U T	I N E =======================================
 16797                                  
 16798                                  SkipBack:		; ...
 16799 0000AD1E 39DF                    		cmp	di, bx
 16800 0000AD20 720B                    		jb	short SkipBad
 16801 0000AD22 4F                      		dec	di
 16802 0000AD23 268A05                  		mov	al, [es:di]
 16803 0000AD26 E8E2E2                  		call	PATHCHRCMP
 16804 0000AD29 75F3                    		jnz	short SkipBack
 16805 0000AD2B F8                      		clc
 16806 0000AD2C C3                      		retn
 16807                                  ; ---------------------------------------------------------------------------
 16808                                  
 16809                                  SkipBad:				; ...
 16810 0000AD2D B003                    		mov	al, 3		; error_path_not_found
 16811 0000AD2F F9                      		stc
 16812 0000AD30 C3                      		retn
 16813                                  
 16814                                  ; =============== S U B	R O U T	I N E =======================================
 16815                                  
 16816                                  CopyComponent:	; ...
 16817 0000AD31 83EC0E                  		sub	sp, 14
 16818 0000AD34 1E                      		push	ds
 16819 0000AD35 56                      		push	si
 16820 0000AD36 06                      		push	es
 16821 0000AD37 57                      		push	di
 16822 0000AD38 55                      		push	bp
 16823 0000AD39 89E5                    		mov	bp, sp
 16824 0000AD3B B42E                    		mov	ah, '.'
 16825 0000AD3D AC                      		lodsb
 16826 0000AD3E AA                      		stosb
 16827 0000AD3F 38E0                    		cmp	al, ah
 16828 0000AD41 7518                    		jnz	short NormalComp
 16829 0000AD43 E8CEFF                  		call	PathSep
 16830 0000AD46 740B                    		jz	short NulTerm
 16831                                  
 16832                                  TryTwoDot:
 16833 0000AD48 AC                      		lodsb
 16834 0000AD49 AA                      		stosb
 16835 0000AD4A 38E0                    		cmp	al, ah
 16836 0000AD4C 7557                    		jnz	short CopyBad
 16837 0000AD4E E8C3FF                  		call	PathSep
 16838 0000AD51 7552                    		jnz	short CopyBad
 16839                                  
 16840                                  NulTerm:				; ...
 16841 0000AD53 30C0                    		xor	al, al
 16842 0000AD55 AA                      		stosb
 16843 0000AD56 897606                  		mov	[bp+6],	si	; CopySoff
 16844 0000AD59 EB47                    		jmp	short _GoodRet
 16845                                  ; ---------------------------------------------------------------------------
 16846                                  
 16847                                  NormalComp:				; ...
 16848 0000AD5B 8B7606                  		mov	si, [bp+6]	; CopySoff
 16849 0000AD5E E8E8E1                  		call	NameTrans
 16850 0000AD61 3B7606                  		cmp	si, [bp+6]
 16851 0000AD64 743F                    		jz	short CopyBad
 16852 0000AD66 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 16853 0000AD6C 7510                    		jnz	short DoPack
 16854 0000AD6E 80E201                  		and	dl, 1
 16855 0000AD71 360016[7A05]            		add	[ss:CMETA], dl
 16856 0000AD76 7F2D                    		jg	short CopyBad
 16857 0000AD78 7504                    		jnz	short DoPack
 16858 0000AD7A 08D2                    		or	dl, dl
 16859 0000AD7C 742F                    		jz	short CopyBadPath
 16860                                  
 16861                                  DoPack:					; ...
 16862 0000AD7E 897606                  		mov	[bp+6],	si
 16863 0000AD81 16                      		push	ss
 16864 0000AD82 1F                      		pop	ds
 16865 0000AD83 BE[4B05]                		mov	si, NAME1
 16866 0000AD86 8D7E0A                  		lea	di, [bp+10]	; CopyTemp
 16867 0000AD89 57                      		push	di
 16868 0000AD8A E8CFB1                  		call	PackName
 16869 0000AD8D 5F                      		pop	di
 16870 0000AD8E E86CA2                  		call	StrLen
 16871 0000AD91 49                      		dec	cx
 16872 0000AD92 034E02                  		add	cx, [bp+2]	; CopyDoff
 16873 0000AD95 3B4E00                  		cmp	cx, [bp+0]	; CopyBP
 16874 0000AD98 730B                    		jnb	short CopyBad
 16875 0000AD9A 89FE                    		mov	si, di
 16876 0000AD9C C47E02                  		les	di, [bp+2]	; CopyD
 16877 0000AD9F E852A2                  		call	FStrCpy
 16878                                  
 16879                                  _GoodRet:				; ...
 16880 0000ADA2 F8                      		clc
 16881 0000ADA3 EB0B                    		jmp	short CopyEnd
 16882                                  ; ---------------------------------------------------------------------------
 16883                                  
 16884                                  CopyBad:				; ...
 16885 0000ADA5 F9                      		stc
 16886 0000ADA6 E8FA00                  		call	ScanPathChar
 16887 0000ADA9 B002                    		mov	al, 2		; error_file_not_found
 16888 0000ADAB 7503                    		jnz	short CopyEnd
 16889                                  
 16890                                  CopyBadPath:				; ...
 16891 0000ADAD F9                      		stc
 16892 0000ADAE B003                    		mov	al, 3		; error_path_not_found
 16893                                  
 16894                                  CopyEnd:				; ...
 16895 0000ADB0 5D                      		pop	bp
 16896 0000ADB1 5F                      		pop	di
 16897 0000ADB2 07                      		pop	es
 16898 0000ADB3 5E                      		pop	si
 16899 0000ADB4 1F                      		pop	ds
 16900 0000ADB5 9F                      		lahf
 16901 0000ADB6 83C40E                  		add	sp, 14
 16902 0000ADB9 E841A2                  		call	StrLen
 16903 0000ADBC 49                      		dec	cx
 16904 0000ADBD 9E                      		sahf
 16905 0000ADBE C3                      		retn
 16906                                  
 16907                                  ; =============== S U B	R O U T	I N E =======================================
 16908                                  
 16909                                  Splice:		; ...
 16910 0000ADBF 36F606[5A00]FF          		test	byte [ss:SPLICES], 0FFh ; -1
 16911 0000ADC5 746A                    		jz	short AllDone
 16912 0000ADC7 36FF36[A205]            		push	word [ss:THISCDS]
 16913 0000ADCC 36FF36[A405]            		push	word [ss:THISCDS+2]
 16914 0000ADD1 1E                      		push	ds
 16915 0000ADD2 56                      		push	si
 16916 0000ADD3 5F                      		pop	di
 16917 0000ADD4 07                      		pop	es
 16918 0000ADD5 31C0                    		xor	ax, ax
 16919                                  
 16920                                  SpliceScan:				; ...
 16921 0000ADD7 E8D9FC                  		call	GetCDSFromDrv
 16922 0000ADDA 724B                    		jb	short SpliceDone
 16923 0000ADDC FEC0                    		inc	al
 16924 0000ADDE F744430020              		test	word [si+67], 2000h	; [SI+curdir.flags],
 16925                                  					; curdir_splice
 16926 0000ADE3 74F2                    		jz	short SpliceScan
 16927 0000ADE5 57                      		push	di
 16928 0000ADE6 E8A100                  		call	PathPref
 16929 0000ADE9 7403                    		jz	short SpliceFound
 16930                                  
 16931                                  SpliceSkip:				; ...
 16932 0000ADEB 5F                      		pop	di
 16933 0000ADEC EBE9                    		jmp	short SpliceScan
 16934                                  ; ---------------------------------------------------------------------------
 16935                                  
 16936                                  SpliceFound:				; ...
 16937 0000ADEE 26803D00                		cmp	byte [es:di], 0
 16938 0000ADF2 7508                    		jnz	short SpliceDo
 16939 0000ADF4 36F606[4C03]FF          		test	byte [ss:NoSetDir], 0FFh ; -1
 16940 0000ADFA 75EF                    		jnz	short SpliceSkip
 16941                                  
 16942                                  SpliceDo:				; ...
 16943 0000ADFC 89FE                    		mov	si, di
 16944 0000ADFE 06                      		push	es
 16945 0000ADFF 1F                      		pop	ds
 16946 0000AE00 5F                      		pop	di
 16947 0000AE01 E88000                  		call	TextFromDrive1
 16948 0000AE04 36A1[B605]              		mov	ax, [ss:CURR_DIR_END]
 16949 0000AE08 09C0                    		or	ax, ax
 16950 0000AE0A 7808                    		js	short NoPoke
 16951 0000AE0C 01F8                    		add	ax, di
 16952 0000AE0E 29F0                    		sub	ax, si
 16953 0000AE10 36A3[B605]              		mov	[ss:CURR_DIR_END], ax
 16954                                  
 16955                                  NoPoke:					; ...
 16956 0000AE14 803C00                  		cmp	byte [si], 0
 16957 0000AE17 7503                    		jnz	short SpliceCopy
 16958 0000AE19 B05C                    		mov	al, '\'
 16959 0000AE1B AA                      		stosb
 16960                                  
 16961                                  SpliceCopy:				; ...
 16962 0000AE1C E8D5A1                  		call	FStrCpy
 16963 0000AE1F 83C404                  		add	sp, 4
 16964 0000AE22 80C901                  		or	cl, 1
 16965 0000AE25 EB0C                    		jmp	short DoSet
 16966                                  ; ---------------------------------------------------------------------------
 16967                                  
 16968                                  SpliceDone:				; ...
 16969 0000AE27 368F06[A405]            		pop	word [ss:THISCDS+2]
 16970 0000AE2C 368F06[A205]            		pop	word [ss:THISCDS]
 16971                                  
 16972                                  AllDone:				; ...
 16973 0000AE31 31C9                    		xor	cx, cx
 16974                                  
 16975                                  DoSet:					; ...
 16976 0000AE33 36C536[A205]            		lds	si, [ss:THISCDS]
 16977 0000AE38 C47C45                  		les	di, [si+69]	; [SI+curdir.devptr]
 16978 0000AE3B 36893E[8A05]            		mov	word [ss:THISDPB], di
 16979 0000AE40 368C06[8C05]            		mov	word [ss:THISDPB+2], es
 16980                                  
 16981                                  Splice_retn:				; ...
 16982 0000AE45 C3                      		retn
 16983                                  
 16984                                  ; ---------------------------------------------------------------------------
 16985                                  
 16986                                  _$NameTrans:				; ...
 16987 0000AE46 1E                      		push	ds
 16988 0000AE47 56                      		push	si
 16989 0000AE48 06                      		push	es
 16990 0000AE49 57                      		push	di
 16991 0000AE4A 51                      		push	cx
 16992 0000AE4B B516                    		mov	ch, 16h		; attr_hidden+attr_system+attr_directory
 16993 0000AE4D E8C102                  		call	SetAttrib
 16994 0000AE50 BF[BE03]                		mov	di, OPENBUF
 16995 0000AE53 E8E3FC                  		call	TransPath
 16996 0000AE56 59                      		pop	cx
 16997 0000AE57 5F                      		pop	di
 16998 0000AE58 07                      		pop	es
 16999 0000AE59 5E                      		pop	si
 17000 0000AE5A 1F                      		pop	ds
 17001 0000AE5B 7303                    		jnb	short TransOK
 17002 0000AE5D E98D95                  		jmp	SYS_RET_ERR
 17003                                  ; ---------------------------------------------------------------------------
 17004                                  
 17005                                  TransOK:				; ...
 17006 0000AE60 BE[BE03]                		mov	si, OPENBUF
 17007 0000AE63 16                      		push	ss
 17008 0000AE64 1F                      		pop	ds
 17009 0000AE65 E88CA1                  		call	FStrCpy
 17010 0000AE68 E97995                  		jmp	SYS_RETURN	; SYS_RET_OK
 17011                                  
 17012                                  ; =============== S U B	R O U T	I N E =======================================
 17013                                  
 17014                                  DriveFromText:	; ...
 17015 0000AE6B 30C0                    		xor	al, al
 17016 0000AE6D 803C00                  		cmp	byte [si], 0
 17017 0000AE70 74D3                    		jz	short Splice_retn
 17018 0000AE72 807C013A                		cmp	byte [si+1], ':'
 17019 0000AE76 75CD                    		jnz	short Splice_retn
 17020 0000AE78 AD                      		lodsw
 17021 0000AE79 0C20                    		or	al, 20h
 17022 0000AE7B 2C60                    		sub	al, 60h		; 'a'-1
 17023 0000AE7D 75C6                    		jnz	short Splice_retn
 17024 0000AE7F B0FF                    		mov	al, 0FFh	; -1
 17025 0000AE81 C3                      		retn
 17026                                  
 17027                                  ; =============== S U B	R O U T	I N E =======================================
 17028                                  
 17029                                  TextFromDrive:	; ...
 17030 0000AE82 FEC0                    		inc	al
 17031                                  
 17032                                  TextFromDrive1:				; ...
 17033 0000AE84 0440                    		add	al, 40h		; 'A'-1
 17034 0000AE86 B43A                    		mov	ah, ':'         ; 3Ah
 17035 0000AE88 AB                      		stosw
 17036                                  
 17037                                  PathPref_retn:				; ...
 17038 0000AE89 C3                      		retn
 17039                                  
 17040                                  ; =============== S U B	R O U T	I N E =======================================
 17041                                  
 17042                                  PathPref:		; ...
 17043 0000AE8A E87EA1                  		call	DStrLen
 17044 0000AE8D 49                      		dec	cx
 17045 0000AE8E F3A6                    		repe cmpsb
 17046 0000AE90 75F7                    		jnz	short PathPref_retn
 17047 0000AE92 50                      		push	ax
 17048 0000AE93 8A44FF                  		mov	al, [si-1]
 17049 0000AE96 E872E1                  		call	PATHCHRCMP
 17050 0000AE99 7406                    		jz	short Prefix
 17051 0000AE9B 268A05                  		mov	al, [es:di]
 17052 0000AE9E E875FE                  		call	PathSepGotCh
 17053                                  
 17054                                  Prefix:					; ...
 17055 0000AEA1 58                      		pop	ax
 17056 0000AEA2 C3                      		retn
 17057                                  
 17058                                  ; =============== S U B	R O U T	I N E =======================================
 17059                                  
 17060                                  ScanPathChar:	; ...
 17061 0000AEA3 AC                      		lodsb
 17062 0000AEA4 E86FFE                  		call	PathSepGotCh
 17063 0000AEA7 75FA                    		jnz	short ScanPathChar
 17064 0000AEA9 E85FE1                  		call	PATHCHRCMP
 17065 0000AEAC C3                      		retn
 17066                                  
 17067                                  ; =============== S U B	R O U T	I N E =======================================
 17068                                  
 17069                                  _$OPEN:		; ...
 17070 0000AEAD 30E4                    		xor	ah, ah
 17071                                  
 17072                                  _$Open2:				; ...
 17073 0000AEAF B516                    		mov	ch, 16h		; attr_hidden+attr_system+attr_directory
 17074 0000AEB1 E85D02                  		call	SetAttrib
 17075 0000AEB4 B9[4C6A]                		mov	cx, DOS_OPEN
 17076 0000AEB7 50                      		push	ax
 17077                                  
 17078                                  AccessFile:				; ...
 17079 0000AEB8 E86BA2                  		call	ECritDisk	; call ECritSFT
 17080 0000AEBB E8C4F7                  		call	SFNFree
 17081 0000AEBE E885A2                  		call	LCritDisk	; call LCritSFT
 17082 0000AEC1 7214                    		jb	short OpenFailJ
 17083 0000AEC3 36891E[AA05]            		mov	[ss:SFN], bx
 17084 0000AEC8 36893E[9E05]            		mov	word [ss:THISSFT], di
 17085 0000AECD 368C06[A005]            		mov	word [ss:THISSFT+2], es
 17086 0000AED2 E89AF7                  		call	JFNFree
 17087 0000AED5 7303                    		jnb	short SaveJFN
 17088                                  
 17089                                  OpenFailJ:				; ...
 17090 0000AED7 E99300                  		jmp	OpenFail
 17091                                  ; ---------------------------------------------------------------------------
 17092                                  
 17093                                  SaveJFN:				; ...
 17094 0000AEDA 36893E[AE05]            		mov	word [ss:PJFN], di
 17095 0000AEDF 368C06[B005]            		mov	word [ss:PJFN+2], es
 17096 0000AEE4 36891E[AC05]            		mov	[ss:JFN], bx
 17097 0000AEE9 368B1E[AA05]            		mov	bx, [ss:SFN]
 17098 0000AEEE 26881D                  		mov	[es:di], bl
 17099 0000AEF1 89D6                    		mov	si, dx
 17100 0000AEF3 BF[BE03]                		mov	di, OPENBUF
 17101 0000AEF6 51                      		push	cx
 17102 0000AEF7 E83FFC                  		call	TransPath
 17103 0000AEFA 5B                      		pop	bx
 17104 0000AEFB 36C536[9E05]            		lds	si, [ss:THISSFT]
 17105 0000AF00 720A                    		jb	short OpenCleanJ
 17106 0000AF02 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
 17107 0000AF08 7404                    		jz	short SetSearch
 17108 0000AF0A B002                    		mov	al, 2
 17109                                  
 17110                                  OpenCleanJ:				; ...
 17111 0000AF0C EB50                    		jmp	short OpenClean
 17112                                  ; ---------------------------------------------------------------------------
 17113                                  
 17114                                  SetSearch:				; ...
 17115 0000AF0E 58                      		pop	ax
 17116 0000AF0F 31C9                    		xor	cx, cx
 17117 0000AF11 894C02                  		mov	[si+2],	cx	; [SI+SF_ENTRY.sf_mode]
 17118 0000AF14 894C33                  		mov	[si+33h], cx	; [SI+SF_ENTRY.sf_MFT]
 17119 0000AF17 81FB[4C6A]              		cmp	bx, DOS_OPEN
 17120 0000AF1B 7509                    		jnz	short _DoOper
 17121 0000AF1D A880                    		test	al, 80h
 17122 0000AF1F 7405                    		jz	short _DoOper
 17123 0000AF21 247F                    		and	al, 7Fh
 17124 0000AF23 B90010                  		mov	cx, 1000h	; sf_no_inherit
 17125                                  
 17126                                  _DoOper:				; ...
 17127 0000AF26 57                      		push	di
 17128 0000AF27 06                      		push	es
 17129 0000AF28 1E                      		push	ds
 17130 0000AF29 07                      		pop	es
 17131 0000AF2A 56                      		push	si
 17132 0000AF2B 5F                      		pop	di
 17133 0000AF2C E809BB                  		call	Set_EXT_mode
 17134 0000AF2F 07                      		pop	es
 17135 0000AF30 5F                      		pop	di
 17136 0000AF31 16                      		push	ss
 17137 0000AF32 1F                      		pop	ds
 17138 0000AF33 51                      		push	cx
 17139 0000AF34 FFD3                    		call	bx
 17140 0000AF36 59                      		pop	cx
 17141 0000AF37 C536[9E05]              		lds	si, [THISSFT]
 17142 0000AF3B 721A                    		jb	short OpenE2
 17143 0000AF3D C7040100                		mov	word [si], 1
 17144 0000AF41 094C05                  		or	[si+5],	cx	; [SI+SF_ENTRY.sf_flags]
 17145 0000AF44 36A1[AC05]              		mov	ax, [ss:JFN]
 17146                                  		;call	[ss:ShCol]	; Call far [ss:JShare+(12*4)] ;	12 = ShCol
 17147 0000AF48 36FF1E[C000]            		call	far [ss:JShare+(12*4)]
 17148 0000AF4D 36C706[AA05]FFFF        		mov	word [ss:SFN], 0FFFFh ; -1
 17149                                  
 17150                                  OpenOkj:				; ...
 17151 0000AF54 E98D94                  		jmp	SYS_RETURN	; SYS_RET_OK
 17152                                  ; ---------------------------------------------------------------------------
 17153                                  
 17154                                  OpenE2:					; ...
 17155 0000AF57 83F857                  		cmp	ax, 57h		; error_invalid_parameter
 17156 0000AF5A 7503                    		jnz	short OpenE
 17157 0000AF5C EB11                    		jmp	short OpenCritLeave
 17158                                  ; ---------------------------------------------------------------------------
 17159                                  
 17160                                  OpenClean:				; ...
 17161 0000AF5E 5B                      		pop	bx
 17162                                  
 17163                                  OpenE:					; ...
 17164 0000AF5F C7040000                		mov	word [si], 0
 17165 0000AF63 36C536[AE05]            		lds	si, [ss:PJFN]
 17166 0000AF68 C604FF                  		mov	byte [si], 0FFh ; -1
 17167 0000AF6B EB02                    		jmp	short OpenCritLeave
 17168                                  ; ---------------------------------------------------------------------------
 17169                                  
 17170                                  OpenFail:				; ...
 17171 0000AF6D FB                      		sti
 17172 0000AF6E 59                      		pop	cx
 17173                                  
 17174                                  OpenCritLeave:				; ...
 17175 0000AF6F 36C706[AA05]FFFF        		mov	word [ss:SFN], 0FFFFh ; -1
 17176 0000AF76 36833E[2403]25          		cmp	word [ss:EXTERR], 25h ; error_Code_Page_Mismatched
 17177 0000AF7C 7503                    		jnz	short NORERR
 17178 0000AF7E E97494                  		jmp	From_GetSet
 17179                                  ; ---------------------------------------------------------------------------
 17180                                  
 17181                                  NORERR:					; ...
 17182 0000AF81 E96994                  		jmp	SYS_RET_ERR
 17183                                  
 17184                                  ; ---------------------------------------------------------------------------
 17185                                  
 17186                                  _$CREAT:				; ...
 17187 0000AF84 51                      		push	cx
 17188 0000AF85 B9[2069]                		mov	cx, DOS_CREATE
 17189                                  ; START	OF FUNCTION CHUNK FOR _$CreateNewFile
 17190                                  
 17191                                  AccessSet:				; ...
 17192 0000AF88 36C606[6D05]06          		mov	byte [ss:SATTRIB], 6 ; attr_hidden+attr_system
 17193 0000AF8E E927FF                  		jmp	AccessFile
 17194                                  ; END OF FUNCTION CHUNK	FOR _$CreateNewFile
 17195                                  ; ---------------------------------------------------------------------------
 17196                                  
 17197                                  _$CHMOD:				; ...
 17198 0000AF91 BF[BE03]                		mov	di, OPENBUF
 17199 0000AF94 50                      		push	ax
 17200 0000AF95 51                      		push	cx
 17201 0000AF96 89D6                    		mov	si, dx
 17202 0000AF98 E8A2FB                  		call	TransPathSet
 17203 0000AF9B 59                      		pop	cx
 17204 0000AF9C 58                      		pop	ax
 17205 0000AF9D 7233                    		jb	short ChModErr
 17206 0000AF9F 16                      		push	ss
 17207 0000AFA0 1F                      		pop	ds
 17208 0000AFA1 803E[7A05]FF            		cmp	byte [CMETA], 0FFh ; -1
 17209 0000AFA6 752A                    		jnz	short ChModErr
 17210 0000AFA8 C606[6D05]16            		mov	byte [SATTRIB], 16h ; attr_hidden+attr_system+attr_directory
 17211 0000AFAD 2C01                    		sub	al, 1
 17212 0000AFAF 720B                    		jb	short ChModGet
 17213 0000AFB1 7416                    		jz	short ChModSet
 17214 0000AFB3 C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
 17215 0000AFB8 B001                    		mov	al, 1		; error_invalid_function
 17216                                  ; START	OF FUNCTION CHUNK FOR _$UNLINK
 17217                                  
 17218                                  chmod_errj:				; ...
 17219 0000AFBA EBC5                    		jmp	short NORERR
 17220                                  ; END OF FUNCTION CHUNK	FOR _$UNLINK
 17221                                  ; ---------------------------------------------------------------------------
 17222                                  
 17223                                  ChModGet:				; ...
 17224 0000AFBC E847B8                  		call	GET_FILE_INFO
 17225 0000AFBF 7213                    		jb	short ChModE
 17226 0000AFC1 E8B192                  		call	Get_User_Stack
 17227 0000AFC4 894404                  		mov	[si+4],	ax	; [SI+user_env.user_CX]
 17228                                  ; START	OF FUNCTION CHUNK FOR _$UNLINK
 17229                                  
 17230                                  OpenOkj2:				; ...
 17231 0000AFC7 EB8B                    		jmp	short OpenOkj
 17232                                  ; END OF FUNCTION CHUNK	FOR _$UNLINK
 17233                                  ; ---------------------------------------------------------------------------
 17234                                  
 17235                                  ChModSet:				; ...
 17236 0000AFC9 89C8                    		mov	ax, cx
 17237 0000AFCB E899B8                  		call	SET_FILE_ATTRIBUTE
 17238 0000AFCE 7204                    		jb	short ChModE
 17239                                  ; START	OF FUNCTION CHUNK FOR _$UNLINK
 17240                                  
 17241                                  OpenOkj3:				; ...
 17242 0000AFD0 EBF5                    		jmp	short OpenOkj2
 17243                                  ; ---------------------------------------------------------------------------
 17244                                  
 17245                                  ChModErr:				; ...
 17246 0000AFD2 B003                    		mov	al, 3
 17247                                  
 17248                                  ChModE:					; ...
 17249 0000AFD4 EBE4                    		jmp	short chmod_errj
 17250                                  ; END OF FUNCTION CHUNK	FOR _$UNLINK
 17251                                  
 17252                                  ; =============== S U B	R O U T	I N E =======================================
 17253                                  
 17254                                  _$UNLINK:		; ...
 17255                                  
 17256                                  ; FUNCTION CHUNK AT AFBA SIZE 00000002 BYTES
 17257                                  ; FUNCTION CHUNK AT AFC7 SIZE 00000002 BYTES
 17258                                  ; FUNCTION CHUNK AT AFD0 SIZE 00000006 BYTES
 17259                                  
 17260 0000AFD6 51                      		push	cx
 17261 0000AFD7 89D6                    		mov	si, dx
 17262 0000AFD9 BF[BE03]                		mov	di, OPENBUF
 17263 0000AFDC E85EFB                  		call	TransPathSet
 17264 0000AFDF 59                      		pop	cx
 17265 0000AFE0 72F0                    		jb	short ChModErr
 17266 0000AFE2 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
 17267 0000AFE8 750E                    		jnz	short NotFound
 17268 0000AFEA 16                      		push	ss
 17269 0000AFEB 1F                      		pop	ds
 17270 0000AFEC B506                    		mov	ch, 6		; attr_hidden+attr_system
 17271 0000AFEE E82001                  		call	SetAttrib
 17272 0000AFF1 E8F5B3                  		call	DOS_DELETE
 17273 0000AFF4 7204                    		jb	short UnlinkE
 17274                                  
 17275                                  UnlinkOk:				; ...
 17276 0000AFF6 EBD8                    		jmp	short OpenOkj3
 17277                                  ; ---------------------------------------------------------------------------
 17278                                  
 17279                                  NotFound:				; ...
 17280 0000AFF8 B003                    		mov	al, 3
 17281                                  
 17282                                  UnlinkE:				; ...
 17283 0000AFFA EBD8                    		jmp	short ChModE
 17284                                  
 17285                                  ; ---------------------------------------------------------------------------
 17286                                  
 17287                                  _$RENAME:				; ...
 17288 0000AFFC 51                      		push	cx
 17289 0000AFFD 1E                      		push	ds
 17290 0000AFFE 52                      		push	dx
 17291 0000AFFF 06                      		push	es
 17292 0000B000 1F                      		pop	ds
 17293 0000B001 89FE                    		mov	si, di
 17294 0000B003 BF[3E04]                		mov	di, RENBUF
 17295 0000B006 E834FB                  		call	TransPathSet
 17296 0000B009 36FF36[B205]            		push	word [ss:WFP_START]
 17297 0000B00E 368F06[B405]            		pop	word [ss:REN_WFP]
 17298 0000B013 5E                      		pop	si
 17299 0000B014 1F                      		pop	ds
 17300 0000B015 59                      		pop	cx
 17301                                  
 17302                                  epjc2:					; ...
 17303 0000B016 72BA                    		jb	short ChModErr
 17304 0000B018 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
 17305 0000B01E 75D8                    		jnz	short NotFound
 17306 0000B020 51                      		push	cx
 17307 0000B021 BF[BE03]                		mov	di, OPENBUF
 17308 0000B024 E816FB                  		call	TransPathSet
 17309 0000B027 59                      		pop	cx
 17310 0000B028 72EC                    		jb	short epjc2
 17311 0000B02A 16                      		push	ss
 17312 0000B02B 1F                      		pop	ds
 17313 0000B02C 803E[7A05]FF            		cmp	byte [CMETA], 0FFh
 17314 0000B031 72C5                    		jb	short NotFound
 17315 0000B033 FF36[A205]              		push	word [THISCDS]
 17316 0000B037 FF36[A405]              		push	word [THISCDS+2]
 17317 0000B03B BF[BE03]                		mov	di, OPENBUF
 17318 0000B03E 16                      		push	ss
 17319 0000B03F 07                      		pop	es
 17320 0000B040 30C0                    		xor	al, al
 17321                                  
 17322                                  rnloop:					; ...
 17323 0000B042 E86EFA                  		call	GetCDSFromDrv
 17324 0000B045 7210                    		jb	short dorn
 17325 0000B047 E8799F                  		call	StrCmp
 17326 0000B04A 7404                    		jz	short rnerr
 17327 0000B04C FEC0                    		inc	al
 17328 0000B04E EBF2                    		jmp	short rnloop
 17329                                  ; ---------------------------------------------------------------------------
 17330                                  
 17331                                  rnerr:					; ...
 17332 0000B050 83C404                  		add	sp, 4
 17333 0000B053 B010                    		mov	al, 10h		; error_current_directory
 17334 0000B055 EBA3                    		jmp	short UnlinkE
 17335                                  ; ---------------------------------------------------------------------------
 17336                                  
 17337                                  dorn:					; ...
 17338 0000B057 368F06[A405]            		pop	word [ss:THISCDS+2]
 17339 0000B05C 368F06[A205]            		pop	word [ss:THISCDS]
 17340 0000B061 16                      		push	ss
 17341 0000B062 1F                      		pop	ds
 17342 0000B063 B516                    		mov	ch, 16h		; attr_directory+attr_hidden+attr_system
 17343 0000B065 E8A900                  		call	SetAttrib
 17344 0000B068 E85EB5                  		call	DOS_RENAME
 17345 0000B06B 728D                    		jb	short UnlinkE
 17346 0000B06D EB87                    		jmp	short UnlinkOk
 17347                                  
 17348                                  ; =============== S U B	R O U T	I N E =======================================
 17349                                  
 17350                                  _$CreateNewFile:
 17351                                  
 17352                                  ; FUNCTION CHUNK AT AF88 SIZE 00000009 BYTES
 17353                                  
 17354 0000B06F 51                      		push	cx
 17355 0000B070 B9[EF69]                		mov	cx, DOS_Create_New
 17356 0000B073 E912FF                  		jmp	AccessSet
 17357                                  
 17358                                  ; =============== S U B	R O U T	I N E =======================================
 17359                                  
 17360                                  BinToAscii:		; ...
 17361 0000B076 B90404                  		mov	cx, 404h
 17362                                  
 17363                                  bta5:					; ...
 17364 0000B079 D3C0                    		rol	ax, cl
 17365 0000B07B 50                      		push	ax
 17366 0000B07C 240F                    		and	al, 0Fh
 17367 0000B07E 0441                    		add	al, 'A'
 17368 0000B080 AA                      		stosb
 17369 0000B081 58                      		pop	ax
 17370 0000B082 FECD                    		dec	ch
 17371 0000B084 75F3                    		jnz	short bta5
 17372 0000B086 C3                      		retn
 17373                                  
 17374                                  ; ---------------------------------------------------------------------------
 17375                                  
 17376                                  _$CreateTempFile:			; ...
 17377 0000B087 55                      		push	bp
 17378 0000B088 89E5                    		mov	bp, sp
 17379 0000B08A 83EC0A                  		sub	sp, 10
 17380 0000B08D F7C1D8FF                		test	cx, 0FFD8h	; ~attr_changeable
 17381 0000B091 7405                    		jz	short OKatts
 17382 0000B093 B80500                  		mov	ax, 5		; error_access_denied
 17383 0000B096 EB6D                    		jmp	short SETTMPERR
 17384                                  ; ---------------------------------------------------------------------------
 17385                                  
 17386                                  OKatts:					; ...
 17387 0000B098 894EF6                  		mov	[bp-10], cx	; attr
 17388 0000B09B 8956F8                  		mov	[bp-8],	dx	; FilPtrL
 17389 0000B09E 8C5EFA                  		mov	word [bp-6], ds ; FilPtrH
 17390 0000B0A1 8C5EFE                  		mov	word [bp-2], ds ; EndPtrH
 17391 0000B0A4 1E                      		push	ds
 17392 0000B0A5 07                      		pop	es
 17393 0000B0A6 89D7                    		mov	di, dx
 17394 0000B0A8 89F9                    		mov	cx, di
 17395 0000B0AA F7D9                    		neg	cx
 17396 0000B0AC 09C9                    		or	cx, cx
 17397 0000B0AE 7503                    		jnz	short okok
 17398 0000B0B0 B9FFFF                  		mov	cx, 0FFFFh
 17399                                  
 17400                                  okok:					; ...
 17401 0000B0B3 31C0                    		xor	ax, ax
 17402 0000B0B5 F2AE                    		repne scasb
 17403 0000B0B7 4F                      		dec	di
 17404 0000B0B8 268A45FF                		mov	al, [es:di-1]
 17405 0000B0BC E84CDF                  		call	PATHCHRCMP
 17406 0000B0BF 7403                    		jz	short SETENDPTR
 17407                                  
 17408                                  STOREPTH:
 17409 0000B0C1 B05C                    		mov	al, '\'
 17410 0000B0C3 AA                      		stosb
 17411                                  
 17412                                  SETENDPTR:				; ...
 17413 0000B0C4 897EFC                  		mov	[bp-4],	di	; EndPtrL
 17414                                  
 17415                                  CreateLoop:				; ...
 17416 0000B0C7 16                      		push	ss
 17417 0000B0C8 1F                      		pop	ds
 17418 0000B0C9 55                      		push	bp
 17419 0000B0CA E81E98                  		call	READTIME
 17420 0000B0CD 5D                      		pop	bp
 17421 0000B0CE C47EFC                  		les	di, [bp-4]	; EndPtr
 17422 0000B0D1 89C8                    		mov	ax, cx
 17423 0000B0D3 E8A0FF                  		call	BinToAscii
 17424 0000B0D6 89D0                    		mov	ax, dx
 17425 0000B0D8 E89BFF                  		call	BinToAscii
 17426 0000B0DB 30C0                    		xor	al, al
 17427 0000B0DD AA                      		stosb
 17428 0000B0DE C556F8                  		lds	dx, [bp-8]	; FilPtr
 17429 0000B0E1 8B4EF6                  		mov	cx, [bp-10]	; Attr
 17430 0000B0E4 55                      		push	bp
 17431 0000B0E5 E887FF                  		call	_$CreateNewFile
 17432 0000B0E8 5D                      		pop	bp
 17433 0000B0E9 731B                    		jnb	short CreateDone
 17434 0000B0EB 3C50                    		cmp	al, 50h		; error_file_exists
 17435 0000B0ED 74D8                    		jz	short CreateLoop
 17436 0000B0EF 3C05                    		cmp	al, 5		; error_access_denied
 17437 0000B0F1 7512                    		jnz	short SETTMPERR
 17438 0000B0F3 36833E[2403]41          		cmp	word [ss:EXTERR], 41h ; error_net_access_denied
 17439 0000B0F9 740A                    		jz	short SETTMPERR
 17440 0000B0FB 36833E[2403]53          		cmp	word [ss:EXTERR], 53h ; error_FAIL_I24
 17441 0000B101 7402                    		jz	short SETTMPERR
 17442 0000B103 EBC2                    		jmp	short CreateLoop
 17443                                  ; ---------------------------------------------------------------------------
 17444                                  
 17445                                  SETTMPERR:				; ...
 17446 0000B105 F9                      		stc
 17447                                  
 17448                                  CreateDone:				; ...
 17449 0000B106 89EC                    		mov	sp, bp
 17450 0000B108 5D                      		pop	bp
 17451 0000B109 7203                    		jb	short CreateFail
 17452 0000B10B E9D692                  		jmp	SYS_RETURN	; SYS_RET_OK
 17453                                  ; ---------------------------------------------------------------------------
 17454                                  
 17455                                  CreateFail:				; ...
 17456 0000B10E E9DC92                  		jmp	SYS_RET_ERR
 17457                                  
 17458                                  ; =============== S U B	R O U T	I N E =======================================
 17459                                  
 17460                                  SetAttrib:		; ...
 17461 0000B111 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 17462 0000B117 7502                    		jnz	short Set
 17463 0000B119 88E9                    		mov	cl, ch
 17464                                  
 17465                                  Set:					; ...
 17466 0000B11B 36880E[6D05]            		mov	[ss:SATTRIB], cl
 17467 0000B120 C3                      		retn
 17468                                  
 17469                                  ; ---------------------------------------------------------------------------
 17470                                  
 17471                                  _$Extended_Open:			; ...
 17472 0000B121 368916[F405]            		mov	[ss:EXTOPEN_FLAG], dx
 17473 0000B126 36C706[F705]0000        		mov	word [ss:EXTOPEN_IO_MODE], 0
 17474 0000B12D F7C200FE                		test	dx, 0FE00h	; RESERVED_BITS_MASK
 17475 0000B131 7545                    		jnz	short ext_inval2
 17476 0000B133 88D4                    		mov	ah, dl
 17477 0000B135 80FA00                  		cmp	dl, 0
 17478 0000B138 743E                    		jz	short ext_inval2
 17479 0000B13A 80E20F                  		and	dl, 0Fh
 17480 0000B13D 80FA02                  		cmp	dl, 2
 17481 0000B140 7736                    		ja	short ext_inval2
 17482 0000B142 80E4F0                  		and	ah, 0F0h	; NOT_EXISTS_MASK
 17483 0000B145 80FC10                  		cmp	ah, 10h
 17484 0000B148 772E                    		ja	short ext_inval2
 17485 0000B14A 368C06[FB05]            		mov	[ss:SAVE_ES], es
 17486 0000B14F 36893E[F905]            		mov	[ss:SAVE_DI], di
 17487 0000B154 36FF36[F405]            		push	word [ss:EXTOPEN_FLAG]
 17488 0000B159 368F06[FD05]            		pop	word [ss:SAVE_DX]
 17489 0000B15E 36890E[FF05]            		mov	[ss:SAVE_CX], cx
 17490 0000B163 36891E[0106]            		mov	[ss:SAVE_BX], bx
 17491 0000B168 368C1E[0506]            		mov	[ss:SAVE_DS], ds
 17492 0000B16D 368936[0306]            		mov	[ss:SAVE_SI], si
 17493 0000B172 89F2                    		mov	dx, si
 17494 0000B174 89D8                    		mov	ax, bx
 17495 0000B176 EB0B                    		jmp	short goopen2
 17496                                  ; ---------------------------------------------------------------------------
 17497                                  
 17498                                  ext_inval2:				; ...
 17499 0000B178 B001                    		mov	al, 1		; error_invalid_function
 17500                                  
 17501                                  eo_err:					; ...
 17502 0000B17A EB92                    		jmp	short CreateFail
 17503                                  ; ---------------------------------------------------------------------------
 17504 0000B17C 59                      		pop	cx
 17505 0000B17D 5E                      		pop	si
 17506 0000B17E B00D                    		mov	al, 13		; error_invalid_data
 17507 0000B180 EBF8                    		jmp	short eo_err
 17508                                  ; ---------------------------------------------------------------------------
 17509                                  
 17510                                  error_return:				; ...
 17511 0000B182 C3                      		retn
 17512                                  ; ---------------------------------------------------------------------------
 17513                                  
 17514                                  goopen2:				; ...
 17515 0000B183 F7C30020                		test	bx, 2000h
 17516 0000B187 7406                    		jz	short goopen
 17517 0000B189 36800E[F605]02          		or	byte [ss:EXTOPEN_ON], 2 ; EXT_OPEN_I24_OFF
 17518                                  
 17519                                  goopen:					; ...
 17520 0000B18F 36800E[F605]01          		or	byte [ss:EXTOPEN_ON], 1 ; EXT_OPEN_ON
 17521 0000B195 368126[F405]FF00        		and	word [ss:EXTOPEN_FLAG], 0FFh
 17522 0000B19C 36833E[F405]10          		cmp	word [ss:EXTOPEN_FLAG], 10h ; EXT_EXISTS_FAIL+EXT_NEXISTS_CREATE
 17523 0000B1A2 751A                    		jnz	short chknext
 17524 0000B1A4 E8C8FE                  		call	_$CreateNewFile
 17525 0000B1A7 72D9                    		jb	short error_return
 17526 0000B1A9 36803E[F605]00          		cmp	byte [ss:EXTOPEN_ON], 0
 17527 0000B1AF 740A                    		jz	short ok_return2
 17528 0000B1B1 36C706[F405]0200        		mov	word [ss:EXTOPEN_FLAG], 2 ; ACTION_CREATED_OPENED
 17529 0000B1B8 E98300                  		jmp	setXAttr
 17530                                  ; ---------------------------------------------------------------------------
 17531                                  
 17532                                  ok_return2:				; ...
 17533 0000B1BB E92692                  		jmp	SYS_RETURN	; SYS_RET_OK
 17534                                  ; ---------------------------------------------------------------------------
 17535                                  
 17536                                  chknext:				; ...
 17537 0000B1BE 36F706[F405]0100        		test	word [ss:EXTOPEN_FLAG], 1 ; EXT_EXISTS_OPEN
 17538 0000B1C5 7527                    		jnz	short exist_open
 17539 0000B1C7 E8BAFD                  		call	_$CREAT
 17540 0000B1CA 72B6                    		jb	short error_return
 17541 0000B1CC 36803E[F605]00          		cmp	byte [ss:EXTOPEN_ON], 0
 17542 0000B1D2 74E7                    		jz	short ok_return2
 17543 0000B1D4 36C706[F405]0200        		mov	word [ss:EXTOPEN_FLAG], 2 ; ACTION_CREATED_OPENED
 17544 0000B1DB 36F606[F605]04          		test	byte [ss:EXTOPEN_ON], 4 ; EXT_FILE_NOT_EXISTS
 17545 0000B1E1 755B                    		jnz	short setXAttr
 17546 0000B1E3 36C706[F405]0300        		mov	word [ss:EXTOPEN_FLAG], 3 ; ACTION_REPLACED_OPENED
 17547 0000B1EA EB52                    		jmp	short setXAttr
 17548                                  ; ---------------------------------------------------------------------------
 17549                                  
 17550                                  error_return2:				; ...
 17551 0000B1EC F9                      		stc
 17552 0000B1ED C3                      		retn
 17553                                  ; ---------------------------------------------------------------------------
 17554                                  
 17555                                  exist_open:				; ...
 17556 0000B1EE 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 17557 0000B1F4 7402                    		jz	short noserver
 17558 0000B1F6 88E9                    		mov	cl, ch
 17559                                  
 17560                                  noserver:				; ...
 17561 0000B1F8 E8B4FC                  		call	_$Open2
 17562 0000B1FB 7332                    		jnb	short ext_ok
 17563 0000B1FD 36803E[F605]00          		cmp	byte [ss:EXTOPEN_ON], 0
 17564 0000B203 74E7                    		jz	short error_return2
 17565 0000B205 83F802                  		cmp	ax, 2		; error_file_not_found
 17566 0000B208 75E2                    		jnz	short error_return2
 17567 0000B20A 36F706[F405]1000        		test	word [ss:EXTOPEN_FLAG], 10h ; EXT_NEXISTS_CREATE
 17568 0000B211 7502                    		jnz	short do_creat
 17569 0000B213 EB5E                    		jmp	short extexit
 17570                                  ; ---------------------------------------------------------------------------
 17571                                  
 17572                                  do_creat:				; ...
 17573 0000B215 368B0E[FF05]            		mov	cx, [ss:SAVE_CX]
 17574 0000B21A 36C536[0306]            		lds	si, [ss:SAVE_SI]
 17575 0000B21F 89F2                    		mov	dx, si
 17576 0000B221 E860FD                  		call	_$CREAT
 17577 0000B224 724D                    		jb	short extexit
 17578 0000B226 36C706[F405]0200        		mov	word [ss:EXTOPEN_FLAG], 2 ; ACTION_CREATED_OPENED
 17579 0000B22D EB0F                    		jmp	short setXAttr
 17580                                  ; ---------------------------------------------------------------------------
 17581                                  
 17582                                  ext_ok:					; ...
 17583 0000B22F 36803E[F605]00          		cmp	byte [ss:EXTOPEN_ON], 0
 17584 0000B235 7415                    		jz	short ok_return
 17585 0000B237 36C706[F405]0100        		mov	word [ss:EXTOPEN_FLAG], 1 ; ACTION_OPENED
 17586                                  
 17587                                  setXAttr:				; ...
 17588 0000B23E 50                      		push	ax
 17589 0000B23F E83390                  		call	Get_User_Stack
 17590 0000B242 36A1[F405]              		mov	ax, [ss:EXTOPEN_FLAG]
 17591 0000B246 894404                  		mov	[si+4],	ax	; [SI+user_env.user_CX]
 17592 0000B249 58                      		pop	ax
 17593 0000B24A 8904                    		mov	[si], ax	; [SI+user_env.user_AX]
 17594                                  
 17595                                  ok_return:				; ...
 17596 0000B24C E99591                  		jmp	SYS_RETURN	; SYS_RET_OK
 17597                                  ; ---------------------------------------------------------------------------
 17598 0000B24F 5B                      		pop	bx
 17599 0000B250 50                      		push	ax
 17600 0000B251 36833E[F405]02          		cmp	word [ss:EXTOPEN_FLAG], 2 ; ACTION_CREATED_OPENED
 17601 0000B257 750C                    		jnz	short justopen
 17602 0000B259 36C536[0306]            		lds	si, [ss:SAVE_SI]
 17603 0000B25E C514                    		lds	dx, [si]
 17604 0000B260 E873FD                  		call	_$UNLINK
 17605 0000B263 EB03                    		jmp	short reserror
 17606                                  ; ---------------------------------------------------------------------------
 17607                                  
 17608                                  justopen:				; ...
 17609 0000B265 E863F4                  		call	_$CLOSE
 17610                                  
 17611                                  reserror:				; ...
 17612 0000B268 58                      		pop	ax
 17613 0000B269 EB08                    		jmp	short extexit
 17614                                  ; ---------------------------------------------------------------------------
 17615 0000B26B B80200                  		mov	ax, 2		; error_file_not_found
 17616 0000B26E EB03                    		jmp	short extexit
 17617                                  ; ---------------------------------------------------------------------------
 17618 0000B270 B80100                  		mov	ax, 1		; error_invalid_function
 17619                                  
 17620                                  extexit:				; ...
 17621 0000B273 E97791                  		jmp	SYS_RET_ERR
 17622                                  ; ---------------------------------------------------------------------------
 17623                                  
 17624                                  _$LockOper:				; ...
 17625 0000B276 3C01                    		cmp	al, 1
 17626 0000B278 770C                    		ja	short lock_bad_func
 17627 0000B27A 57                      		push	di
 17628 0000B27B E8ACF3                  		call	SFFromHandle
 17629 0000B27E 7310                    		jnb	short lock_do
 17630 0000B280 5F                      		pop	di
 17631 0000B281 B006                    		mov	al, 6		; error_invalid_handle
 17632                                  
 17633                                  lockoperr:				; ...
 17634 0000B283 E96791                  		jmp	SYS_RET_ERR
 17635                                  ; ---------------------------------------------------------------------------
 17636                                  
 17637                                  lock_bad_func:				; ...
 17638 0000B286 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 17639 0000B28C B001                    		mov	al, 1		; error_invalid_function
 17640                                  
 17641                                  lockoperrj:				; ...
 17642 0000B28E EBF3                    		jmp	short lockoperr
 17643                                  ; ---------------------------------------------------------------------------
 17644                                  
 17645                                  lock_do:				; ...
 17646 0000B290 89C3                    		mov	bx, ax
 17647 0000B292 BD[A903]                		mov	bp, Lock_Buffer
 17648 0000B295 895600                  		mov	[bp+0],	dx	; [BP+LockBuf.Lock_position]
 17649 0000B298 894E02                  		mov	[bp+2],	cx	; [BP+LockBuf.Lock_position+2]
 17650 0000B29B 59                      		pop	cx
 17651 0000B29C 894E04                  		mov	[bp+4],	cx	; [BP+LockBuf.Lock_length]
 17652 0000B29F 897606                  		mov	[bp+6],	si	; [BP+LockBuf.Lock_length+2]
 17653 0000B2A2 B90100                  		mov	cx, 1
 17654 0000B2A5 16                      		push	ss
 17655 0000B2A6 1F                      		pop	ds
 17656 0000B2A7 89EA                    		mov	dx, bp
 17657 0000B2A9 A801                    		test	al, 1		; UNLOCK_ALL
 17658 0000B2AB 7502                    		jnz	short DOS_Unlock
 17659 0000B2AD EB1C                    		jmp	short DOS_Lock
 17660                                  ; ---------------------------------------------------------------------------
 17661                                  
 17662                                  DOS_Unlock:				; ...
 17663 0000B2AF 26F6450680              		test	byte [es:di+6], 80h	; [ES:DI+SF_ENTRY.sf_flags+1],
 17664                                  					; (sf_isnet>>8)
 17665 0000B2B4 7407                    		jz	short LOCAL_UNLOCK
 17666 0000B2B6 B80A11                  		mov	ax, 110Ah
 17667 0000B2B9 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - LOCK	REGION OF FILE
 17668                                  					; BX = file handle, CX:DX = starting offset, SI	= high word of size
 17669                                  					; STACK: WORD low word of size,	ES:DI -> SFT
 17670                                  					; SFT DPB field	-> DPB of drive	containing file, SS = DOS CS
 17671                                  					; Return: CF set error
 17672 0000B2BB EB04                    		jmp	short ValChk
 17673                                  ; ---------------------------------------------------------------------------
 17674                                  
 17675                                  LOCAL_UNLOCK:				; ...
 17676                                  		;call	[clr_block]	; Call far [JShare+(7*4)] ; 7 =	clr_block
 17677 0000B2BD FF1E[AC00]              		call	far [JShare+(7*4)]
 17678                                  ValChk:					; ...
 17679 0000B2C1 7302                    		jnb	short Lock_OK
 17680 0000B2C3 EBC9                    		jmp	short lockoperrj
 17681                                  ; ---------------------------------------------------------------------------
 17682                                  
 17683                                  Lock_OK:				; ...
 17684 0000B2C5 A1[0C06]                		mov	ax, [TEMP_VAR]
 17685 0000B2C8 E91991                  		jmp	SYS_RETURN	; SYS_RET_OK
 17686                                  ; ---------------------------------------------------------------------------
 17687                                  
 17688                                  DOS_Lock:				; ...
 17689 0000B2CB 26F6450680              		test	byte [es:di+6], 80h
 17690 0000B2D0 7407                    		jz	short LOCAL_LOCK
 17691 0000B2D2 B80A11                  		mov	ax, 110Ah
 17692 0000B2D5 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - LOCK	REGION OF FILE
 17693                                  					; BX = file handle, CX:DX = starting offset, SI	= high word of size
 17694                                  					; STACK: WORD low word of size,	ES:DI -> SFT
 17695                                  					; SFT DPB field	-> DPB of drive	containing file, SS = DOS CS
 17696                                  					; Return: CF set error
 17697 0000B2D7 EBE8                    		jmp	short ValChk
 17698                                  ; ---------------------------------------------------------------------------
 17699                                  
 17700                                  LOCAL_LOCK:				; ...
 17701                                  		;call	[set_block]	; Call far [JShare+(6*4)] ; 6 =	Set_Block
 17702 0000B2D9 FF1E[A800]              		call	far [JShare+(6*4)]
 17703 0000B2DD EBE2                    		jmp	short ValChk
 17704                                  
 17705                                  ; =============== S U B	R O U T	I N E =======================================
 17706                                  
 17707                                  LOCK_CHECK:		; ...
 17708 0000B2DF 8B1E[1A00]              		mov	bx, [RetryCount]
 17709                                  
 17710                                  LockRetry:				; ...
 17711 0000B2E3 53                      		push	bx
 17712 0000B2E4 50                      		push	ax
 17713                                  		;call	[chk_block]	; Call far [JShare+(8*4)] ; 8 =	chk_block
 17714 0000B2E5 FF1E[B000]              		call	far [JShare+(8*4)]
 17715 0000B2E9 58                      		pop	ax
 17716 0000B2EA 5B                      		pop	bx
 17717 0000B2EB 7307                    		jnb	short lc_ret_label
 17718 0000B2ED E82C9D                  		call	Idle
 17719 0000B2F0 4B                      		dec	bx
 17720 0000B2F1 75F0                    		jnz	short LockRetry
 17721 0000B2F3 F9                      		stc
 17722                                  
 17723                                  lc_ret_label:				; ...
 17724 0000B2F4 C3                      		retn
 17725                                  
 17726                                  ; =============== S U B	R O U T	I N E =======================================
 17727                                  
 17728                                  LOCK_VIOLATION:	; ...
 17729 0000B2F5 1E                      		push	ds
 17730 0000B2F6 06                      		push	es
 17731 0000B2F7 57                      		push	di
 17732 0000B2F8 51                      		push	cx
 17733 0000B2F9 B82100                  		mov	ax, 21h		; error_lock_violation
 17734 0000B2FC C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
 17735 0000B301 C42E[8A05]              		les	bp, [THISDPB]
 17736 0000B305 BF0100                  		mov	di, 1
 17737 0000B308 89F9                    		mov	cx, di
 17738 0000B30A 268B560B                		mov	dx, [es:bp+11]	; [ES:BP+DPB.FIRST_SECTOR]
 17739 0000B30E E869DF                  		call	HARDERR
 17740 0000B311 59                      		pop	cx
 17741 0000B312 5F                      		pop	di
 17742 0000B313 07                      		pop	es
 17743 0000B314 1F                      		pop	ds
 17744 0000B315 3C01                    		cmp	al, 1
 17745 0000B317 74DB                    		jz	short lc_ret_label
 17746 0000B319 F9                      		stc
 17747 0000B31A C3                      		retn
 17748                                  
 17749                                  ; =============== S U B	R O U T	I N E =======================================
 17750                                  
 17751                                  CheckShare:		; ...
 17752 0000B31B 1E                      		push	ds
 17753 0000B31C 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 17754 0000B321 803E[0303]00            		cmp	byte [fShare], 0
 17755 0000B326 1F                      		pop	ds
 17756 0000B327 C3                      		retn
 17757                                  
 17758                                  ; =============== S U B	R O U T	I N E =======================================
 17759                                  
 17760                                  SHARE_CHECK:	; ...
 17761                                  		;call	[MFT_enter]	; call far [JShare+(1*4)] ; 1 =	MFT_Enter
 17762 0000B328 FF1E[9400]              		call	far [JShare+(1*4)] 
 17763                                  shchk_retn:				; ...
 17764 0000B32C C3                      		retn
 17765                                  
 17766                                  ; =============== S U B	R O U T	I N E =======================================
 17767                                  
 17768                                  SHARE_VIOLATION:
 17769 0000B32D 1E                      		push	ds
 17770 0000B32E 06                      		push	es
 17771 0000B32F 57                      		push	di
 17772 0000B330 C606[7505]00            		mov	byte [READOP], 0
 17773 0000B335 C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
 17774 0000B33A C42E[8A05]              		les	bp, [THISDPB]
 17775 0000B33E BF0100                  		mov	di, 1
 17776 0000B341 89F9                    		mov	cx, di
 17777 0000B343 268B5611                		mov	dx, [es:bp+17]	; [ES:BP+DPB.DIR_SECTOR]
 17778 0000B347 E830DF                  		call	HARDERR
 17779 0000B34A 5F                      		pop	di
 17780 0000B34B 07                      		pop	es
 17781 0000B34C 1F                      		pop	ds
 17782 0000B34D 3C01                    		cmp	al, 1
 17783 0000B34F 74DB                    		jz	short shchk_retn
 17784 0000B351 F9                      		stc
 17785 0000B352 C3                      		retn
 17786                                  
 17787                                  ; =============== S U B	R O U T	I N E =======================================
 17788                                  
 17789                                  ShareEnd:		; ...
 17790                                  		;call	[MFTClose]	; call far [JShare+(2*4)] ; 2 =	MFTClose
 17791 0000B353 FF1E[9800]              		call	far [JShare+(2*4)]
 17792 0000B357 C3                      		retn
 17793                                  
 17794                                  ; =============== S U B	R O U T	I N E =======================================
 17795                                  
 17796                                  ShareEnter:		; ...
 17797 0000B358 51                      		push	cx
 17798                                  
 17799                                  retry:					; ...
 17800 0000B359 8B0E[1A00]              		mov	cx, [RetryCount]
 17801                                  
 17802                                  attempt:				; ...
 17803 0000B35D C43E[9E05]              		les	di, [THISSFT]
 17804 0000B361 31C0                    		xor	ax, ax
 17805 0000B363 26894533                		mov	[es:di+51], ax	; [ES:DI+SF_ENTRY.sf_MFT]
 17806 0000B367 51                      		push	cx
 17807 0000B368 E8BDFF                  		call	SHARE_CHECK
 17808 0000B36B 59                      		pop	cx
 17809 0000B36C 730A                    		jnb	short done
 17810 0000B36E E8AB9C                  		call	Idle
 17811 0000B371 E2EA                    		loop	attempt
 17812 0000B373 E8B7FF                  		call	SHARE_VIOLATION
 17813 0000B376 73E1                    		jnb	short retry
 17814                                  
 17815                                  done:					; ...
 17816 0000B378 59                      		pop	cx
 17817 0000B379 C3                      		retn
 17818                                  
 17819                                  ; =============== S U B	R O U T	I N E =======================================
 17820                                  
 17821                                  ExecReady:
 17822 0000B37A 89D6                    		mov	si, dx
 17823 0000B37C F744020100              		test	word [si+2], 1 ; [si+ERStruc.ER_Flags],ER_EXE
 17824 0000B381 7413                    		jz	short er_setver
 17825 0000B383 8B4408                  		mov	ax, [si+8]	; [si+ERStruc.ER_PSP]
 17826 0000B386 83C010                  		add	ax, 10h
 17827 0000B389 8EC0                    		mov	es, ax
 17828 0000B38B 8B4C0A                  		mov	cx, [si+10]	; [si+ERStruc.ER_StartAddr]
 17829 0000B38E 8B440C                  		mov	ax, [si+12]	; [si+ERStruc.ER_StartAddr+2]
 17830                                  		;call	[ss:FixExePatch]	
 17831 0000B391 36FF16[1212]            		call	word [ss:FixExePatch]
 17832                                  
 17833                                  er_setver:				; ...
 17834 0000B396 F744020200              		test	word [si+2], 2 ; [si+ERStruc.ER_Flags],ER_OVERLAY
 17835 0000B39B 7518                    		jnz	short er_chkdoshi
 17836 0000B39D 1E                      		push	ds
 17837 0000B39E 56                      		push	si
 17838 0000B39F C57404                  		lds	si, [si+4]	; [si+ERStruc.ER_ProgName]
 17839 0000B3A2 E834ED                  		call	Save_Begin	; call Scan_Execname1
 17840 0000B3A5 E845ED                  		call	Scan_Special_Entries
 17841 0000B3A8 5E                      		pop	si
 17842 0000B3A9 1F                      		pop	ds
 17843 0000B3AA 8E4408                  		mov	es, word [si+8] ; [si+ERStruc.ER_PSP]
 17844 0000B3AD 36A1[BD0E]              		mov	ax, [ss:SPECIAL_VERSION]
 17845 0000B3B1 26A3[4000]              		mov	word [es:SFTFCB], ax ; [es:PDB.Version]
 17846                                  
 17847                                  er_chkdoshi:				; ...
 17848 0000B3B5 36803E[1112]00          		cmp	byte [ss:DosHasHMA], 0
 17849 0000B3BB 7420                    		jz	short er_done
 17850 0000B3BD 8B4408                  		mov	ax, [si+8]	; [si+ERStruc.ER_PSP]
 17851 0000B3C0 36800E[8600]04          		or	byte [ss:DOS_FLAG], 4
 17852 0000B3C6 F744020100              		test	word [si+2], 1 ; EXECA20OFF
 17853 0000B3CB 7507                    		jnz	short er_setA20
 17854 0000B3CD 1E                      		push	ds
 17855 0000B3CE 8ED8                    		mov	ds, ax
 17856 0000B3D0 E86103                  		call	IsCopyProt
 17857 0000B3D3 1F                      		pop	ds
 17858                                  
 17859                                  er_setA20:				; ...
 17860 0000B3D4 36FE06[8500]            		inc	byte [ss:A20OFF_COUNT]
 17861 0000B3D9 36A3[6300]              		mov	[ss:A20OFF_PSP], ax
 17862                                  
 17863                                  er_done:				; ...
 17864 0000B3DD 31C0                    		xor	ax, ax
 17865 0000B3DF C3                      		retn
 17866                                  
 17867                                  ; ---------------------------------------------------------------------------
 17868 0000B3E0 06                      exepatch_start	db 6			; ...
 17869 0000B3E1 8CD8                    		db 8Ch,0D8h
 17870 0000B3E3 2BC2                    _first_stop	db 2Bh,0C2h
 17871 0000B3E5 8ED8                    		db 8Eh,0D8h
 17872 0000B3E7 8EC0                    		db 8Eh,0C0h
 17873 0000B3E9 BF0F00                  		db 0BFh,0Fh,0
 17874 0000B3EC 57                      		db 57h
 17875 0000B3ED B91000                  		db 0B9h,10h,0
 17876 0000B3F0 B0FF                    		db 0B0h,0FFh
 17877 0000B3F2 F3AE                    		db 0F3h,0AEh
 17878 0000B3F4 47                      		db 47h
 17879 0000B3F5 8BF7                    		db 8Bh,0F7h
 17880 0000B3F7 5F58                    		db 5Fh,58h
 17881 0000B3F9 2BC2                    _second_stop	db 2Bh,0C2h
 17882 0000B3FB 8EC0                    second		db 8Eh,0C0h
 17883 0000B3FD B90402                  		db 0B9h,4,2
 17884 0000B400 8BC6                    		db 8Bh,0C6h
 17885 0000B402 F7D0                    		db 0F7h,0D0h
 17886 0000B404 D3E8                    		db 0D3h,0E8h
 17887 0000B406 7413                    		db 74h,13h
 17888 0000B408 8CDA                    		db 8Ch,0DAh
 17889 0000B40A 83CEF0                  		db 83h,0CEh,0F0h
 17890 0000B40D 2BD0                    		db 2Bh,0D0h
 17891 0000B40F 7308                    		db 73h,8
 17892 0000B411 F7DA                    		db 0F7h,0DAh
 17893 0000B413 D3E2                    		db 0D3h,0E2h
 17894 0000B415 2BF2                    		db 2Bh,0F2h
 17895 0000B417 33D2                    		db 33h,0D2h
 17896 0000B419 8EDA                    		db 8Eh,0DAh
 17897 0000B41B 87F7                    		db 87h,0F7h
 17898 0000B41D 1E                      		db 1Eh
 17899 0000B41E 06                      		db 6
 17900 0000B41F 1F                      		db 1Fh
 17901 0000B420 07                      		db 7
 17902 0000B421 FECD                    		db 0FEh,0CDh
 17903 0000B423 75DB                    		db 75h,0DBh
 17904 0000B425 AC                      		db 0ACh
 17905 0000B426 92                      		db 92h
 17906 0000B427 4E                      		db 4Eh
 17907 0000B428 AD                      		db 0ADh
 17908 0000B429 8BC8                    		db 8Bh,0C8h
 17909 0000B42B 46                      		db 46h
 17910 0000B42C 8AC2                    		db 8Ah,0C2h
 17911 0000B42E 24FE                    		db 24h,0FEh
 17912 0000B430 3CB0                    		db 3Ch,0B0h
 17913 0000B432 7505                    		db 75h,5
 17914 0000B434 AC                      		db 0ACh
 17915 0000B435 F3AA                    		db 0F3h,0AAh
 17916 0000B437 EB06                    		db 0EBh,6
 17917 0000B439 3CB2                    		db 3Ch,0B2h
 17918 0000B43B 756C                    		db 75h,6Ch
 17919 0000B43D F3A4                    		db 0F3h,0A4h
 17920 0000B43F 92                      		db 92h
 17921 0000B440 A801                    		db 0A8h,1
 17922 0000B442 74B9                    		db 74h,0B9h
 17923 0000B444 9090                    		db 90h,90h
 17924 0000B446 8CC3                    scan_patch1	db 8Ch,0C3h		; ...
 17925 0000B448 8CD8                    		db 8Ch,0D8h
 17926 0000B44A 2BC2                    		db 2Bh,0C2h
 17927 0000B44C 8ED8                    		db 8Eh,0D8h
 17928 0000B44E 8EC0                    		db 8Eh,0C0h
 17929 0000B450 BF0F00                  		db 0BFh,0Fh,0
 17930 0000B453 B91000                  		db 0B9h,10h,0
 17931 0000B456 B0FF                    		db 0B0h,0FFh
 17932 0000B458 F3AE                    		db 0F3h,0AEh
 17933 0000B45A 47                      		db 47h
 17934 0000B45B 8BF7                    		db 8Bh,0F7h
 17935 0000B45D 8BC3                    		db 8Bh,0C3h
 17936 0000B45F 2BC2                    		db 2Bh,0C2h
 17937 0000B461 8EC0                    		db 8Eh,0C0h
 17938 0000B463 BF0F00                  		db 0BFh,0Fh,0
 17939 0000B466 B104                    		db 0B1h,4
 17940 0000B468 8BC6                    		db 8Bh,0C6h
 17941 0000B46A F7D0                    		db 0F7h,0D0h
 17942 0000B46C D3E8                    		db 0D3h,0E8h
 17943 0000B46E 7409                    		db 74h,9
 17944 0000B470 8CDA                    		db 8Ch,0DAh
 17945 0000B472 2BD0                    		db 2Bh,0D0h
 17946 0000B474 8EDA                    		db 8Eh,0DAh
 17947 0000B476 83CEF0                  		db 83h,0CEh,0F0h
 17948 0000B479 8BC7                    		db 8Bh,0C7h
 17949 0000B47B F7D0                    		db 0F7h,0D0h
 17950 0000B47D D3E8                    		db 0D3h,0E8h
 17951 0000B47F 7409                    		db 74h,9
 17952 0000B481 8CC2                    		db 8Ch,0C2h
 17953 0000B483 2BD0                    		db 2Bh,0D0h
 17954 0000B485 8EC2                    		db 8Eh,0C2h
 17955 0000B487 83CFF0                  		db 83h,0CFh,0F0h
 17956 0000B48A 8CC3                    scan_patch2	db 8Ch,0C3h		; ...
 17957 0000B48C 8CD8                    		db 8Ch,0D8h
 17958 0000B48E 48                      		db 48h
 17959 0000B48F 8ED8                    		db 8Eh,0D8h
 17960 0000B491 8EC0                    		db 8Eh,0C0h
 17961 0000B493 BF0F00                  		db 0BFh,0Fh,0
 17962 0000B496 B91000                  		db 0B9h,10h,0
 17963 0000B499 B0FF                    		db 0B0h,0FFh
 17964 0000B49B F3AE                    		db 0F3h,0AEh
 17965 0000B49D 47                      		db 47h
 17966 0000B49E 8BF7                    		db 8Bh,0F7h
 17967 0000B4A0 8BC3                    		db 8Bh,0C3h
 17968 0000B4A2 48                      		db 48h
 17969 0000B4A3 8EC0                    		db 8Eh,0C0h
 17970 0000B4A5 BF0F00                  		db 0BFh,0Fh,0
 17971 0000B4A8 B104                    		db 0B1h,4
 17972 0000B4AA 8BC6                    		db 8Bh,0C6h
 17973 0000B4AC F7D0                    		db 0F7h,0D0h
 17974 0000B4AE D3E8                    		db 0D3h,0E8h
 17975 0000B4B0 740A                    		db 74h,0Ah
 17976 0000B4B2 8CDA                    		db 8Ch,0DAh
 17977 0000B4B4 2BD0                    		db 2Bh,0D0h
 17978 0000B4B6 8EDA                    		db 8Eh,0DAh
 17979 0000B4B8 81CEF0FF                		db 81h,0CEh,0F0h,0FFh
 17980 0000B4BC 8BC7                    		db 8Bh,0C7h
 17981 0000B4BE F7D0                    		db 0F7h,0D0h
 17982 0000B4C0 D3E8                    		db 0D3h,0E8h
 17983 0000B4C2 740A                    		db 74h,0Ah
 17984 0000B4C4 8CC2                    		db 8Ch,0C2h
 17985 0000B4C6 2BD0                    		db 2Bh,0D0h
 17986 0000B4C8 8EC2                    		db 8Eh,0C2h
 17987 0000B4CA 81CFF0FF                		db 81h,0CFh,0F0h,0FFh
 17988 0000B4CE 8CC3                    scan_patch3	db 8Ch,0C3h		; ...
 17989 0000B4D0 8CD8                    		db 8Ch,0D8h
 17990 0000B4D2 48                      		db 48h
 17991 0000B4D3 8ED8                    		db 8Eh,0D8h
 17992 0000B4D5 8EC0                    		db 8Eh,0C0h
 17993 0000B4D7 BF0F00                  		db 0BFh,0Fh,0
 17994 0000B4DA B91000                  		db 0B9h,10h,0
 17995 0000B4DD B0FF                    		db 0B0h,0FFh
 17996 0000B4DF F3AE                    		db 0F3h,0AEh
 17997 0000B4E1 47                      		db 47h
 17998 0000B4E2 8BF7                    		db 8Bh,0F7h
 17999 0000B4E4 8BC3                    		db 8Bh,0C3h
 18000 0000B4E6 48                      		db 48h
 18001 0000B4E7 8EC0                    		db 8Eh,0C0h
 18002 0000B4E9 BF0F00                  		db 0BFh,0Fh,0
 18003 0000B4EC B104                    		db 0B1h,4
 18004 0000B4EE 8BC6                    		db 8Bh,0C6h
 18005 0000B4F0 F7D0                    		db 0F7h,0D0h
 18006 0000B4F2 D3E8                    		db 0D3h,0E8h
 18007 0000B4F4 7409                    		db 74h,9
 18008 0000B4F6 8CDA                    		db 8Ch,0DAh
 18009 0000B4F8 2BD0                    		db 2Bh,0D0h
 18010 0000B4FA 8EDA                    		db 8Eh,0DAh
 18011 0000B4FC 83CEF0                  		db 83h,0CEh,0F0h
 18012 0000B4FF 8BC7                    		db 8Bh,0C7h
 18013 0000B501 F7D0                    		db 0F7h,0D0h
 18014 0000B503 D3E8                    		db 0D3h,0E8h
 18015 0000B505 7409                    		db 74h,9
 18016 0000B507 8CC2                    		db 8Ch,0C2h
 18017 0000B509 2BD0                    		db 2Bh,0D0h
 18018 0000B50B 8EC2                    		db 8Eh,0C2h
 18019 0000B50D 83CFF0                  		db 83h,0CFh,0F0h
 18020 0000B510 AC                      scan_com	db 0ACh			; ...
 18021 0000B511 8AD0                    		db 8Ah,0D0h
 18022 0000B513 4E                      		db 4Eh
 18023 0000B514 AD                      		db 0ADh
 18024 0000B515 8BC8                    		db 8Bh,0C8h
 18025 0000B517 46                      		db 46h
 18026 0000B518 8AC2                    		db 8Ah,0C2h
 18027 0000B51A 24FE                    		db 24h,0FEh
 18028 0000B51C 3CB0                    		db 3Ch,0B0h
 18029 0000B51E 7506                    		db 75h,6
 18030 0000B520 AC                      		db 0ACh
 18031 0000B521 F3AA                    		db 0F3h,0AAh
 18032 0000B523 EB0790                  		db 0EBh,7,90h
 18033 0000B526 3CB2                    		db 3Ch,0B2h
 18034 0000B528 756B                    		db 75h,6Bh
 18035 0000B52A F3A4                    		db 0F3h,0A4h
 18036 0000B52C 8AC2                    		db 8Ah,0C2h
 18037 0000B52E A801                    		db 0A8h,1
 18038                                  
 18039                                  ; =============== S U B	R O U T	I N E =======================================
 18040                                  
 18041                                  ExePatch:		; ...
 18042 0000B530 E80600                  		call	ExePackPatch
 18043                                  		;call	[ss:RationalPatchPtr]
 18044 0000B533 36FF16[1412]            		call	word [ss:RationalPatchPtr]
 18045 0000B538 C3                      		retn
 18046                                  
 18047                                  ; =============== S U B	R O U T	I N E =======================================
 18048                                  
 18049                                  ExePackPatch:	; ...
 18050 0000B539 53                      		push	bx
 18051 0000B53A 8CC3                    		mov	bx, es
 18052 0000B53C 81FBFF0F                		cmp	bx, 0FFFh
 18053 0000B540 7602                    		jbe	short ep_cont
 18054 0000B542 5B                      		pop	bx
 18055 0000B543 C3                      		retn
 18056                                  ; ---------------------------------------------------------------------------
 18057                                  
 18058                                  ep_cont:				; ...
 18059 0000B544 1E                      		push	ds
 18060 0000B545 06                      		push	es
 18061 0000B546 50                      		push	ax
 18062 0000B547 51                      		push	cx
 18063 0000B548 56                      		push	si
 18064 0000B549 57                      		push	di
 18065 0000B54A 83E902                  		sub	cx, 2
 18066 0000B54D 7303                    		jnb	short epp_1
 18067 0000B54F E9C500                  		jmp	ep_notpacked
 18068                                  ; ---------------------------------------------------------------------------
 18069                                  
 18070                                  epp_1:					; ...
 18071 0000B552 89CF                    		mov	di, cx
 18072 0000B554 8EC0                    		mov	es, ax
 18073 0000B556 36893E[8700]            		mov	[ss:UNPACK_OFFSET], di
 18074 0000B55B 26813D5242              		cmp	word [es:di], 4252h	; 'RB'
 18075 0000B560 7403                    		jz	short epp_2
 18076 0000B562 E9B200                  		jmp	ep_notpacked
 18077                                  ; ---------------------------------------------------------------------------
 18078                                  
 18079                                  epp_2:					; ...
 18080 0000B565 0E                      		push	cs
 18081 0000B566 1F                      		pop	ds
 18082 0000B567 83C76C                  		add	di, 6Ch		; PATCH1_COM_OFFSET
 18083 0000B56A E8B200                  		call	chk_common_str
 18084 0000B56D 7524                    		jnz	short ep_chkpatch2
 18085 0000B56F BE[46B4]                		mov	si, scan_patch1
 18086 0000B572 368B3E[8700]            		mov	di, [ss:UNPACK_OFFSET]
 18087 0000B577 83C728                  		add	di, 28h		; PATCH1_OFFSET
 18088 0000B57A B94400                  		mov	cx, 68		; size_scan_patch1
 18089                                  					; = scan_patch2	- scan_patch1
 18090 0000B57D BB8E00                  		mov	bx, 142
 18091 0000B580 B84EEF                  		mov	ax, 0EF4Eh	; PATCH1_CHKSUM
 18092 0000B583 E8AD00                  		call	chk_patchsum
 18093 0000B586 7208                    		jb	short ep_done1
 18094 0000B588 BE[E0B3]                		mov	si, exepatch_start ; str1
 18095 0000B58B B96600                  		mov	cx, 102
 18096 0000B58E F3A4                    		rep movsb
 18097                                  
 18098                                  ep_done1:				; ...
 18099 0000B590 E98400                  		jmp	ep_notpacked	; ep_done
 18100                                  ; ---------------------------------------------------------------------------
 18101                                  
 18102                                  ep_chkpatch2:				; ...
 18103 0000B593 BF7600                  		mov	di, 76h		; PATCH2_COM_OFFSET
 18104 0000B596 E88600                  		call	chk_common_str
 18105 0000B599 7544                    		jnz	short ep_chkpatch3
 18106 0000B59B BE[8AB4]                		mov	si, scan_patch2
 18107 0000B59E BF3200                  		mov	di, 32h		; PATCH2_OFFSET
 18108 0000B5A1 B94400                  		mov	cx, 68		; size_scan_patch2
 18109 0000B5A4 BB8C00                  		mov	bx, 140		; CHKSUM2_LEN
 18110 0000B5A7 B8B278                  		mov	ax, 78B2h	; PATCH2_CHKSUM
 18111 0000B5AA E88600                  		call	chk_patchsum
 18112 0000B5AD 7311                    		jnb	short ep_patchcode2
 18113 0000B5AF BE[8AB4]                		mov	si, scan_patch2
 18114 0000B5B2 B94400                  		mov	cx, 68		; size_scan_patch2
 18115                                  					; = scan_patch3	- scan_patch2
 18116 0000B5B5 BB8100                  		mov	bx, 129		; CHKSUM2A_LEN
 18117 0000B5B8 B8471C                  		mov	ax, 1C47h	; PATCH2A_CHKSUM
 18118 0000B5BB E87500                  		call	chk_patchsum
 18119 0000B5BE 7257                    		jb	short ep_notpacked
 18120                                  
 18121                                  ep_patchcode2:				; ...
 18122 0000B5C0 BE[E0B3]                		mov	si, exepatch_start ; str1
 18123 0000B5C3 B90300                  		mov	cx, 3		; first_stop =
 18124                                  					; _first_stop -	exepact_start (str1)
 18125 0000B5C6 F3A4                    		rep movsb
 18126 0000B5C8 B89048                  		mov	ax, 4890h	; dec ax, nop
 18127 0000B5CB AB                      		stosw
 18128 0000B5CC 83C602                  		add	si, 2
 18129 0000B5CF B91400                  		mov	cx, 20		; second_stop =
 18130                                  					; _secondstop -	_first_stop
 18131 0000B5D2 F3A4                    		rep movsb
 18132 0000B5D4 AB                      		stosw			; dec ax, nop
 18133 0000B5D5 83C602                  		add	si, 2
 18134 0000B5D8 B94B00                  		mov	cx, 75		; last_stop =
 18135                                  					; scan_patch1 -	second
 18136 0000B5DB F3A4                    		rep movsb
 18137 0000B5DD EB38                    		jmp	short ep_notpacked ; ep_done
 18138                                  ; ---------------------------------------------------------------------------
 18139                                  
 18140                                  ep_chkpatch3:				; ...
 18141 0000B5DF BF7400                  		mov	di, 74h		; PATCH3_COM_OFFSET
 18142 0000B5E2 E83A00                  		call	chk_common_str
 18143 0000B5E5 7530                    		jnz	short ep_notpacked
 18144 0000B5E7 BE[CEB4]                		mov	si, scan_patch3
 18145 0000B5EA BF3200                  		mov	di, 32h		; PATCH3_OFFSET
 18146 0000B5ED B94200                  		mov	cx, 66		; size_scan_patch3
 18147                                  					; = scan_com - scan_patch3
 18148 0000B5F0 BB8B00                  		mov	bx, 139		; CHKSUM3_LEN
 18149 0000B5F3 B8DE4E                  		mov	ax, 4EDEh	; PATCH3_CHKSUM
 18150 0000B5F6 E83A00                  		call	chk_patchsum
 18151 0000B5F9 721C                    		jb	short ep_notpacked
 18152 0000B5FB BE[E0B3]                		mov	si, exepatch_start ; str1
 18153 0000B5FE B90300                  		mov	cx, 3		; first_stop
 18154 0000B601 F3A4                    		rep movsb
 18155 0000B603 B048                    		mov	al, 48h		; dec ax
 18156 0000B605 AA                      		stosb
 18157 0000B606 83C602                  		add	si, 2
 18158 0000B609 B91400                  		mov	cx, 20		; second_stop
 18159 0000B60C F3A4                    		rep movsb
 18160 0000B60E AA                      		stosb			; dec ax
 18161 0000B60F 83C602                  		add	si, 2
 18162 0000B612 B94B00                  		mov	cx, 75		; last_stop
 18163 0000B615 F3A4                    		rep movsb
 18164                                  
 18165                                  ep_notpacked:				; ...
 18166 0000B617 5F                      		pop	di
 18167 0000B618 5E                      		pop	si
 18168 0000B619 59                      		pop	cx
 18169 0000B61A 58                      		pop	ax
 18170 0000B61B 07                      		pop	es
 18171 0000B61C 1F                      		pop	ds
 18172 0000B61D 5B                      		pop	bx
 18173 0000B61E C3                      		retn
 18174                                  
 18175                                  ; =============== S U B	R O U T	I N E =======================================
 18176                                  
 18177                                  chk_common_str:	; ...
 18178 0000B61F BE[10B5]                		mov	si, scan_com
 18179 0000B622 B92000                  		mov	cx, 32		; size_scan_com
 18180                                  					; = offset ExePatch - offset scan_com
 18181 0000B625 F3A6                    		repe cmpsb
 18182 0000B627 7409                    		jz	short ccs_done
 18183 0000B629 26807DFF56              		cmp	byte [es:di-1], 56h
 18184 0000B62E 7502                    		jnz	short ccs_done
 18185 0000B630 F3A6                    		repe cmpsb
 18186                                  
 18187                                  ccs_done:				; ...
 18188 0000B632 C3                      		retn
 18189                                  
 18190                                  ; ---------------------------------------------------------------------------
 18191                                  
 18192                                  chk_patchsum:				; ...
 18193 0000B633 57                      		push	di
 18194 0000B634 F3A6                    		repe cmpsb
 18195 0000B636 751A                    		jnz	short cp_fail
 18196 0000B638 368B3E[8700]            		mov	di, [ss:UNPACK_OFFSET]
 18197 0000B63D 89D9                    		mov	cx, bx
 18198 0000B63F 89C3                    		mov	bx, ax
 18199 0000B641 31C0                    		xor	ax, ax
 18200                                  
 18201                                  ep_chksum:				; ...
 18202 0000B643 260305                  		add	ax, [es:di]
 18203 0000B646 83C702                  		add	di, 2
 18204 0000B649 E2F8                    		loop	ep_chksum
 18205 0000B64B 5F                      		pop	di
 18206 0000B64C 39D8                    		cmp	ax, bx
 18207 0000B64E 7502                    		jnz	short cp_fail
 18208 0000B650 F8                      		clc
 18209 0000B651 C3                      		retn
 18210                                  ; ---------------------------------------------------------------------------
 18211                                  
 18212                                  cp_fail:				; ...
 18213 0000B652 F9                      		stc
 18214 0000B653 C3                      		retn
 18215                                  ; ---------------------------------------------------------------------------
 18216 0000B654 000020000000400001-     RScanPattern1	db 0, 0, 20h, 0, 0, 0, 40h, 0, 1, 0 ; ...
 18216 0000B65D 00                 
 18217 0000B65E 8B0E100090E2FEE8        RScanPattern2	db 8Bh,	0Eh, 10h, 0, 90h, 0E2h,	0FEh, 0E8h ; ...
 18218 0000B666 8B0E1000E2FEE8          RScanPattern3	db 8Bh,	0Eh, 10h, 0, 0E2h, 0FEh, 0E8h ;	...
 18219                                  
 18220                                  ; =============== S U B	R O U T	I N E =======================================
 18221                                  
 18222                                  RationalPatch:	; ...
 18223 0000B66D FC                      		cld
 18224 0000B66E 50                      		push	ax
 18225 0000B66F 53                      		push	bx
 18226 0000B670 51                      		push	cx
 18227 0000B671 52                      		push	dx
 18228 0000B672 56                      		push	si
 18229 0000B673 57                      		push	di
 18230 0000B674 06                      		push	es
 18231 0000B675 1E                      		push	ds
 18232 0000B676 BF0A00                  		mov	di, 0Ah
 18233 0000B679 0E                      		push	cs
 18234 0000B67A 1F                      		pop	ds
 18235 0000B67B BE[54B6]                		mov	si, RScanPattern1
 18236 0000B67E B90A00                  		mov	cx, 10		; RLen1
 18237 0000B681 F3A6                    		repe cmpsb
 18238 0000B683 754A                    		jnz	short rpexit
 18239 0000B685 26A10000                		mov	ax, [es:0]
 18240 0000B689 3D5C01                  		cmp	ax, 348
 18241 0000B68C 7241                    		jb	short rpexit
 18242 0000B68E 3D7F01                  		cmp	ax, 383
 18243 0000B691 773C                    		ja	short rpexit
 18244 0000B693 E85A00                  		call	VerifyVersion
 18245 0000B696 7537                    		jnz	short rpexit
 18246 0000B698 268B0E1600              		mov	cx, [es:16h]
 18247 0000B69D 81E90002                		sub	cx, 200h
 18248 0000B6A1 268E062000              		mov	es, word [es:20h]
 18249 0000B6A6 BE[5EB6]                		mov	si, RScanPattern2
 18250 0000B6A9 BA0800                  		mov	dx, 8		; RLen2
 18251 0000B6AC E82900                  		call	ScanCodeSeq
 18252 0000B6AF 740B                    		jz	short rpfound
 18253 0000B6B1 BE[66B6]                		mov	si, RScanPattern3
 18254 0000B6B4 BA0F00                  		mov	dx, 15		; RLen3
 18255 0000B6B7 E81E00                  		call	ScanCodeSeq
 18256 0000B6BA 7513                    		jnz	short rpexit
 18257                                  
 18258                                  rpfound:				; ...
 18259 0000B6BC B09A                    		mov	al, 9Ah		; far call opcode
 18260 0000B6BE AA                      		stosb
 18261 0000B6BF B8[1612]                		mov	ax, RatBugCode
 18262 0000B6C2 AB                      		stosw
 18263 0000B6C3 8CD0                    		mov	ax, ss
 18264 0000B6C5 AB                      		stosw
 18265 0000B6C6 89D1                    		mov	cx, dx
 18266 0000B6C8 83E906                  		sub	cx, 6
 18267 0000B6CB B090                    		mov	al, 90h		; NOPs
 18268 0000B6CD F3AA                    		rep stosb
 18269                                  
 18270                                  rpexit:					; ...
 18271 0000B6CF 1F                      		pop	ds
 18272 0000B6D0 07                      		pop	es
 18273 0000B6D1 5F                      		pop	di
 18274 0000B6D2 5E                      		pop	si
 18275 0000B6D3 5A                      		pop	dx
 18276 0000B6D4 59                      		pop	cx
 18277 0000B6D5 5B                      		pop	bx
 18278 0000B6D6 58                      		pop	ax
 18279 0000B6D7 C3                      		retn
 18280                                  
 18281                                  ; =============== S U B	R O U T	I N E =======================================
 18282                                  
 18283                                  ScanCodeSeq:	; ...
 18284 0000B6D8 51                      		push	cx
 18285 0000B6D9 29D1                    		sub	cx, dx
 18286 0000B6DB 41                      		inc	cx
 18287 0000B6DC BF0002                  		mov	di, 200h
 18288                                  
 18289                                  scsagain:				; ...
 18290 0000B6DF 56                      		push	si
 18291 0000B6E0 57                      		push	di
 18292 0000B6E1 51                      		push	cx
 18293 0000B6E2 89D1                    		mov	cx, dx
 18294 0000B6E4 F3A6                    		repe cmpsb
 18295 0000B6E6 59                      		pop	cx
 18296 0000B6E7 5F                      		pop	di
 18297 0000B6E8 5E                      		pop	si
 18298 0000B6E9 7403                    		jz	short scsfound
 18299 0000B6EB 47                      		inc	di
 18300 0000B6EC E2F1                    		loop	scsagain
 18301                                  
 18302                                  scsfound:				; ...
 18303 0000B6EE 59                      		pop	cx
 18304 0000B6EF C3                      		retn
 18305                                  
 18306                                  ; =============== S U B	R O U T	I N E =======================================
 18307                                  
 18308                                  VerifyVersion:	; ...
 18309 0000B6F0 268B362A00              		mov	si, [es:2Ah]
 18310 0000B6F5 B30A                    		mov	bl, 10
 18311 0000B6F7 83C603                  		add	si, 3
 18312 0000B6FA E81200                  		call	VVDigit
 18313 0000B6FD 750F                    		jnz	short vvexit
 18314 0000B6FF E80D00                  		call	VVDigit
 18315 0000B702 750A                    		jnz	short vvexit
 18316 0000B704 26803C2E                		cmp	byte [es:si], '.' ; 2Eh
 18317 0000B708 7504                    		jnz	short vvexit
 18318 0000B70A 4E                      		dec	si
 18319 0000B70B E80100                  		call	VVDigit
 18320                                  
 18321                                  vvexit:					; ...
 18322 0000B70E C3                      		retn
 18323                                  
 18324                                  ; =============== S U B	R O U T	I N E =======================================
 18325                                  
 18326                                  VVDigit:
 18327 0000B70F F6F3                    		div	bl
 18328 0000B711 80C430                  		add	ah, '0'         ; 30h
 18329 0000B714 4E                      		dec	si
 18330 0000B715 26386401                		cmp	[es:si+1], ah
 18331 0000B719 B400                    		mov	ah, 0
 18332 0000B71B C3                      		retn
 18333                                  
 18334                                  ; ---------------------------------------------------------------------------
 18335 0000B71C 89264801                CPScanPattern	db 89h,	26h, 48h, 1	; ...
 18336                                  					; mov [148],sp
 18337 0000B720 8C0E4C01                		db 8Ch,	0Eh, 4Ch, 1	; mov [14C],cs
 18338 0000B724 C7064A010001            		db 0C7h, 6, 4Ah, 1, 0, 1 ; mov [14A],100h
 18339 0000B72A 8C0E1301                		db 8Ch,	0Eh, 13h, 1	; mov [113],cs
 18340 0000B72E B82001                  		db 0B8h, 20h, 1		; mov ax,120h
 18341 0000B731 BE0001                  		db 0BEh, 0, 1		; mov si,100h
 18342                                  
 18343                                  ; =============== S U B	R O U T	I N E =======================================
 18344                                  
 18345                                  IsCopyProt:		; ...
 18346 0000B734 813E1B014353            		cmp	word [11Bh], 5343h ; [CPID1Offset], ID1
 18347 0000B73A 752D                    		jnz	short CP_done
 18348 0000B73C 813E73014450            		cmp	word [173h], 5044h ; [CPID2Offset], ID2
 18349 0000B742 7525                    		jnz	short CP_done
 18350 0000B744 813E460113F4            		cmp	word [146h], 0F413h ; [CPID3Offset], ID3
 18351 0000B74A 751D                    		jnz	short CP_done
 18352 0000B74C 813E24010080            		cmp	word [124h], 8000h ; [CPID4Offset], ID4
 18353 0000B752 7515                    		jnz	short CP_done
 18354 0000B754 0E                      		push	cs
 18355 0000B755 07                      		pop	es
 18356 0000B756 BF[1CB7]                		mov	di, CPScanPattern
 18357 0000B759 BE7501                  		mov	si, 175h	; CPStartOffset
 18358 0000B75C B91800                  		mov	cx, 24		; CPSPlen
 18359 0000B75F F3A6                    		repe cmpsb
 18360 0000B761 7506                    		jnz	short CP_done
 18361 0000B763 36C606[8500]0A          		mov	byte [ss:A20OFF_COUNT], 0Ah
 18362                                  
 18363                                  CP_done:				; ...
 18364 0000B769 C3                      		retn
 18365                                  
 18366                                  ; ---------------------------------------------------------------------------
 18367                                  
 18368                                  SYSBUF:					; ...
 18369 0000B76A CF                      		iret			; initiret
 18370                                  ; ---------------------------------------------------------------------------
 18371 0000B76B 7000                    InitBioDataSeg	dw 70h			; ...
 18372                                  
 18373                                  ; =============== S U B	R O U T	I N E =======================================
 18374                                  
 18375                                  ParaRound:		; ...
 18376 0000B76D 83C00F                  		add	ax, 0Fh		; add ax, 15
 18377 0000B770 D1D8                    		rcr	ax, 1
 18378 0000B772 D1E8                    		shr	ax, 1
 18379 0000B774 D1E8                    		shr	ax, 1
 18380 0000B776 D1E8                    		shr	ax, 1
 18381 0000B778 C3                      		retn
 18382                                  
 18383                                  ; ---------------------------------------------------------------------------
 18384                                  
 18385                                  DOSINIT:				; ...
 18386 0000B779 FA                      		cli
 18387 0000B77A FC                      		cld
 18388 0000B77B 52                      		push	dx
 18389 0000B77C 56                      		push	si
 18390 0000B77D 1E                      		push	ds
 18391 0000B77E 57                      		push	di
 18392 0000B77F 8CC3                    		mov	bx, es
 18393 0000B781 B8[77BC]                		mov	ax, DOSCODE_END ; MEMSTRT
 18394 0000B784 83C00F                  		add	ax, 15
 18395 0000B787 83E0F0                  		and	ax, 0FFF0h	; ~15
 18396 0000B78A 89C6                    		mov	si, ax
 18397 0000B78C 8CC8                    		mov	ax, cs
 18398 0000B78E 8ED8                    		mov	ds, ax
 18399 0000B790 2E8E06[6BB7]            		mov	es, [cs:InitBioDataSeg]
 18400 0000B795 268E060300              		mov	es, word [es:3]
 18401 0000B79A 31FF                    		xor	di, di
 18402 0000B79C B96213                  		mov	cx, 4962	; MSDAT001E ; size of DOSDATA
 18403 0000B79F F3A4                    		rep movsb
 18404 0000B7A1 5F                      		pop	di
 18405 0000B7A2 1F                      		pop	ds
 18406 0000B7A3 5E                      		pop	si
 18407 0000B7A4 5A                      		pop	dx
 18408 0000B7A5 06                      		push	es
 18409 0000B7A6 1E                      		push	ds
 18410 0000B7A7 07                      		pop	es
 18411 0000B7A8 1F                      		pop	ds
 18412 0000B7A9 893E[4010]              		mov	word [BiosDataPtr], di
 18413 0000B7AD 891E[4210]              		mov	word [BiosDataPtr+2], bx
 18414 0000B7B1 2E8C1E[D73D]            		mov	[cs:DosDSeg], ds
 18415 0000B7B6 2E8C1E[1A90]            		mov	[cs:LowInt23Seg], ds
 18416 0000B7BB 2E8C1E[1E90]            		mov	[cs:LowInt24Seg], ds
 18417 0000B7C0 2E8C1E[2290]            		mov	[cs:LowInt28Seg], ds
 18418 0000B7C5 8916[4603]              		mov	[ENDMEM], dx
 18419 0000B7C9 8926[8405]              		mov	[USER_SP], sp
 18420 0000B7CD 8C16[8605]              		mov	[USER_SS], ss
 18421 0000B7D1 8CD8                    		mov	ax, ds
 18422 0000B7D3 8ED0                    		mov	ss, ax
 18423 0000B7D5 BC[2009]                		mov	sp, DSKSTACK
 18424 0000B7D8 C706[1212][C1A1]        		mov	word [FixExePatch], RetExePatch
 18425 0000B7DE C706[1412][C1A1]        		mov	word [RationalPatchPtr], RetExePatch
 18426 0000B7E4 C706[6100][C1A1]        		mov	word [ChkCopyProt], RetExePatch
 18427 0000B7EA 8CC8                    		mov	ax, cs
 18428 0000B7EC A3[AA0A]                		mov	[TEMP_DOSLOC], ax
 18429 0000B7EF 8C06[4A00]              		mov	word [NULDEV+2], es
 18430 0000B7F3 8936[4800]              		mov	word [NULDEV], si
 18431 0000B7F7 8C1E[F20F]              		mov	[Win386_Info_16], ds ; [Win386_Info+16]
 18432                                  					; [Win386_Info+Win386_SIS.Instance_Data_Ptr+2]
 18433 0000B7FB 56                      		push	si
 18434 0000B7FC B90700                  		mov	cx, 7
 18435 0000B7FF BE[F60F]                		mov	si, Instance_Table_2 ; Instance_Table+2
 18436                                  
 18437                                  Instance_init_loop:			; ...
 18438 0000B802 8C1C                    		mov	word [si], ds
 18439 0000B804 83C606                  		add	si, 6		; size_of_Win386_IIS
 18440 0000B807 E2F9                    		loop	Instance_init_loop
 18441 0000B809 B90500                  		mov	cx, 5
 18442 0000B80C BE[ED11]                		mov	si, OldInstanceJunk_6 ; OldInstanceJunk+6
 18443                                  
 18444                                  OldInstance_init_loop:			; ...
 18445 0000B80F 8C1C                    		mov	word [si], ds
 18446 0000B811 83C606                  		add	si, 6
 18447 0000B814 E2F9                    		loop	OldInstance_init_loop
 18448 0000B816 5E                      		pop	si
 18449 0000B817 06                      		push	es
 18450 0000B818 1F                      		pop	ds
 18451 0000B819 1E                      		push	ds
 18452 0000B81A 31C0                    		xor	ax, ax
 18453 0000B81C 8ED8                    		mov	ds, ax
 18454 0000B81E B8[6AB7]                		mov	ax, SYSBUF ; initiret
 18455 0000B821 A3A800                  		mov	[0A8h], ax	; [2Ah*4] ; [addr_int_ibm]
 18456 0000B824 8CC8                    		mov	ax, cs
 18457 0000B826 A3AA00                  		mov	[0AAh], ax	; [(2Ah*4)+2] ;	[addr_int_ibm+2]
 18458 0000B829 1F                      		pop	ds
 18459 0000B82A E83702                  		call	CHARINIT
 18460 0000B82D 56                      		push	si
 18461 0000B82E 16                      		push	ss
 18462 0000B82F 07                      		pop	es
 18463 0000B830 BF[D200]                		mov	di, SFTABL_6 ; SFTABL+6
 18464                                  					; SFTABL+SFT.SFTable
 18465 0000B833 B80300                  		mov	ax, 3
 18466 0000B836 AB                      		stosw
 18467 0000B837 FEC8                    		dec	al
 18468 0000B839 AB                      		stosw
 18469 0000B83A 30C0                    		xor	al, al
 18470 0000B83C AA                      		stosb
 18471 0000B83D B0C3                    		mov	al, 0C3h	; devid_device_EOF|devid_device|ISCIN|ISCOUT
 18472 0000B83F AB                      		stosw
 18473 0000B840 89F0                    		mov	ax, si
 18474 0000B842 AB                      		stosw
 18475 0000B843 8CD8                    		mov	ax, ds
 18476 0000B845 AB                      		stosw
 18477 0000B846 31C0                    		xor	ax, ax		; 0
 18478 0000B848 AB                      		stosw
 18479 0000B849 AB                      		stosw
 18480 0000B84A AB                      		stosw
 18481 0000B84B 48                      		dec	ax		; -1
 18482 0000B84C AB                      		stosw
 18483 0000B84D AB                      		stosw
 18484 0000B84E 40                      		inc	ax		; 0
 18485 0000B84F AB                      		stosw
 18486 0000B850 AB                      		stosw
 18487 0000B851 83C707                  		add	di, 7		; SF_ENTRY.sf_name-SF_ENTRY.sf_cluspos
 18488 0000B854 83C60A                  		add	si, 10		; SYSDEV.NAME
 18489 0000B857 B90400                  		mov	cx, 4
 18490 0000B85A F3A5                    		rep movsw
 18491 0000B85C B103                    		mov	cl, 3
 18492 0000B85E B020                    		mov	al, 20h	; ' '
 18493 0000B860 F3AA                    		rep stosb
 18494 0000B862 5E                      		pop	si
 18495 0000B863 804C0403                		or	byte [si+4], 3 ; [SI+SYSDEV.ATT],ISCIN|ISCOUT
 18496 0000B867 368936[3200]            		mov	word [ss:BCON], si
 18497 0000B86C 368C1E[3400]            		mov	word [ss:BCON+2], ds
 18498                                  
 18499                                  CHAR_INIT_LOOP:				; ...
 18500 0000B871 C534                    		lds	si, [si]
 18501 0000B873 E8EE01                  		call	CHARINIT
 18502 0000B876 F6440408                		test	byte [si+4], 8 ; [SI+SYSDEV.ATT],ISCLOCK
 18503 0000B87A 74F5                    		jz	short CHAR_INIT_LOOP
 18504 0000B87C 368936[2E00]            		mov	word [ss:BCLOCK], si
 18505 0000B881 368C1E[3000]            		mov	word [ss:BCLOCK+2],	ds
 18506 0000B886 BD6213                  		mov	bp, 4962	; MSDAT001E
 18507 0000B889 36892E[2600]            		mov	word [ss:SYSINITVARS], bp ;	[ss:DPBHEAD]
 18508 0000B88E 368C06[2800]            		mov	word [ss:SYSINITVARS+2], es	; [ss:DPBHEAD+2]
 18509                                  
 18510                                  PERDRV:					; ...
 18511 0000B893 C534                    		lds	si, [si]	; [SI+SYSDEV.NEXT]
 18512 0000B895 83FEFF                  		cmp	si, 0FFFFh	; -1
 18513 0000B898 747B                    		jz	short CONTINIT
 18514 0000B89A E8C701                  		call	CHARINIT
 18515 0000B89D F744040080              		test	word [si+4], 8000h ; [SI+SYSDEV.ATT],DEVTYP
 18516 0000B8A2 75EF                    		jnz	short PERDRV
 18517 0000B8A4 368A0E[6703]            		mov	cl, [ss:CALLMED] ; [SS:CALLUNIT]
 18518 0000B8A9 30ED                    		xor	ch, ch
 18519 0000B8AB 884C0A                  		mov	[si+10], cl	; [si+SYSDEV.NAME]
 18520 0000B8AE 368A16[4600]            		mov	dl, [ss:NUMIO]
 18521 0000B8B3 30F6                    		xor	dh, dh
 18522 0000B8B5 36000E[4600]            		add	[ss:NUMIO], cl
 18523 0000B8BA 1E                      		push	ds
 18524 0000B8BB 56                      		push	si
 18525 0000B8BC 36C51E[6C03]            		lds	bx, [ss:CALLSCNT] ; [SS:CALLBPB]
 18526                                  
 18527                                  PERUNIT:				; ...
 18528 0000B8C1 8B37                    		mov	si, [bx]
 18529 0000B8C3 43                      		inc	bx
 18530 0000B8C4 43                      		inc	bx
 18531 0000B8C5 26885600                		mov	[es:bp+0], dl	; [ES:BP+DPB.DRIVE]
 18532 0000B8C9 26887601                		mov	[es:bp+1], dh	; [ES:BP+DPB.UNIT]
 18533 0000B8CD 53                      		push	bx
 18534 0000B8CE 51                      		push	cx
 18535 0000B8CF 52                      		push	dx
 18536 0000B8D0 E8F694                  		call	_$SETDPB
 18537 0000B8D3 268B4602                		mov	ax, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 18538 0000B8D7 363B06[3600]            		cmp	ax, [ss:MAXSEC]
 18539 0000B8DC 7604                    		jbe	short NOTMAX
 18540 0000B8DE 36A3[3600]              		mov	[ss:MAXSEC], ax
 18541                                  
 18542                                  NOTMAX:					; ...
 18543 0000B8E2 89E8                    		mov	ax, bp
 18544 0000B8E4 83C021                  		add	ax, 33		; DPBSIZ
 18545 0000B8E7 26894619                		mov	[es:bp+25], ax	; [ES:BP+DPB.NEXT_DPB]
 18546 0000B8EB 268C461B                		mov	word [es:bp+27], es	; [ES:BP+DPB.NEXT_DPB+2]
 18547 0000B8EF 26C64618FF              		mov	byte [es:bp+24], 0FFh ; [ES:BP+DPB.FIRST_ACCESS],-1
 18548 0000B8F4 5A                      		pop	dx
 18549 0000B8F5 59                      		pop	cx
 18550 0000B8F6 5B                      		pop	bx
 18551 0000B8F7 8CD8                    		mov	ax, ds
 18552 0000B8F9 5E                      		pop	si
 18553 0000B8FA 1F                      		pop	ds
 18554 0000B8FB 26897613                		mov	[es:bp+19], si	; [ES:BP+DPB.DRIVER_ADDR]
 18555 0000B8FF 268C5E15                		mov	word [es:bp+21], ds ; [ES:BP+DPB.DRIVER_ADDR+2]
 18556 0000B903 1E                      		push	ds
 18557 0000B904 56                      		push	si
 18558 0000B905 FEC6                    		inc	dh
 18559 0000B907 FEC2                    		inc	dl
 18560 0000B909 8ED8                    		mov	ds, ax
 18561 0000B90B 83C521                  		add	bp, 33		; DPBSIZ
 18562 0000B90E E2B1                    		loop	PERUNIT
 18563 0000B910 5E                      		pop	si
 18564 0000B911 1F                      		pop	ds
 18565 0000B912 E97EFF                  		jmp	PERDRV
 18566                                  ; ---------------------------------------------------------------------------
 18567                                  
 18568                                  CONTINIT:				; ...
 18569 0000B915 83ED21                  		sub	bp, 33		; DPBSIZ
 18570 0000B918 C74619FFFF              		mov	word [bp+25], 0FFFFh ; -1
 18571 0000B91D C7461BFFFF              		mov	word [bp+27], 0FFFFh ; -1
 18572 0000B922 83C521                  		add	bp, 33
 18573 0000B925 16                      		push	ss
 18574 0000B926 1F                      		pop	ds
 18575 0000B927 89E8                    		mov	ax, bp
 18576 0000B929 E841FE                  		call	ParaRound
 18577 0000B92C 8CDA                    		mov	dx, ds
 18578 0000B92E 01C2                    		add	dx, ax
 18579 0000B930 BB0F00                  		mov	bx, 0Fh
 18580 0000B933 8B0E[4603]              		mov	cx, [ENDMEM]
 18581 0000B937 8C1E[A203]              		mov	[DSKCHRET_3], ds ; [DSKCHRET+3] ; [DOSSEG_INIT]
 18582 0000B93B 52                      		push	dx
 18583 0000B93C A1[AA0A]                		mov	ax, [TEMP_DOSLOC]
 18584 0000B93F 8EC0                    		mov	es, ax
 18585 0000B941 C706[AA0A]FFFF          		mov	word [TEMP_DOSLOC], 0FFFFh ; -1
 18586 0000B947 E8F601                  		call	patch_vec_segments
 18587 0000B94A E83602                  		call	patch_misc_segments
 18588 0000B94D 8C06[AA0A]              		mov	[TEMP_DOSLOC], es
 18589 0000B951 5A                      		pop	dx
 18590 0000B952 31C0                    		xor	ax, ax
 18591 0000B954 8ED8                    		mov	ds, ax
 18592 0000B956 8EC0                    		mov	es, ax
 18593 0000B958 BF9000                  		mov	di, 90h		; addr_int_fatal_abort
 18594                                  					; 4*int_fatal_abort
 18595 0000B95B 36A1[AA0A]              		mov	ax, [ss:TEMP_DOSLOC]
 18596 0000B95F 894502                  		mov	[di+2],	ax
 18597 0000B962 BF8200                  		mov	di, 82h		; INTBASE+2
 18598 0000B965 C7060000[FB91]          		mov	word [0], DIVOV
 18599 0000B96B BF8000                  		mov	di, 80h		; INTBASE
 18600 0000B96E B8[C540]                		mov	ax, IRETT
 18601 0000B971 B90900                  		mov	cx, 9
 18602                                  
 18603                                  iset1:					; ...
 18604 0000B974 AB                      		stosw
 18605 0000B975 83C702                  		add	di, 2
 18606 0000B978 E2FA                    		loop	iset1
 18607 0000B97A 83C704                  		add	di, 4
 18608 0000B97D B90600                  		mov	cx, 6
 18609                                  
 18610                                  iset2:					; ...
 18611 0000B980 AB                      		stosw
 18612 0000B981 83C702                  		add	di, 2
 18613 0000B984 E2FA                    		loop	iset2
 18614 0000B986 83C708                  		add	di, 8
 18615 0000B989 B90E00                  		mov	cx, 14
 18616                                  
 18617                                  iset3:					; ...
 18618 0000B98C AB                      		stosw
 18619 0000B98D 83C702                  		add	di, 2
 18620 0000B990 E2FA                    		loop	iset3
 18621 0000B992 C706BC00[B044]          		mov	word [0BCh], INT2F ; [02Fh*4],INT2F
 18622 0000B998 36A1[AA0A]              		mov	ax, [ss:TEMP_DOSLOC]
 18623 0000B99C A3BE00                  		mov	[0BEh], ax	; [(02Fh*4)+2]
 18624 0000B99F C606C000EA              		mov	byte [0C0h], 0EAh ; [ENTRYPOINT],mi_long_jmp
 18625 0000B9A4 C706C100[C640]          		mov	word [0C1h], CALL_ENTRY ;	 [ENTRYPOINT+1]
 18626 0000B9AA C7068000[BF40]          		mov	word [80h], QUIT ; [addr_int_abort]
 18627 0000B9B0 C7068400[EB40]          		mov	word [84h], COMMAND ; [addr_int_command]
 18628 0000B9B6 C70688000001            		mov	word [88h], 100h	; [addr_int_terminate]
 18629 0000B9BC 89168A00                		mov	[8Ah], dx	; [addr_int_terminate+2]
 18630 0000B9C0 C7069400[D842]          		mov	word [94h], ABSDRD ; [addr_int_disk_read]
 18631 0000B9C6 C7069800[5F43]          		mov	word [98h], ABSDWRT ; [addr_int_disk_write]
 18632 0000B9CC C7069C00[64A1]          		mov	word [9Ch], STAY_RESIDENT	; [addr_int_keep_process]
 18633 0000B9D2 16                      		push	ss
 18634 0000B9D3 1F                      		pop	ds
 18635 0000B9D4 16                      		push	ss
 18636 0000B9D5 07                      		pop	es
 18637 0000B9D6 52                      		push	dx
 18638 0000B9D7 42                      		inc	dx
 18639 0000B9D8 8916[3003]              		mov	[CurrentPDB], dx
 18640 0000B9DC 31FF                    		xor	di, di
 18641 0000B9DE 8EC2                    		mov	es, dx
 18642 0000B9E0 31C0                    		xor	ax, ax
 18643 0000B9E2 B98000                  		mov	cx, 128
 18644 0000B9E5 F3AB                    		rep stosw
 18645 0000B9E7 A1[4603]                		mov	ax, [ENDMEM]
 18646 0000B9EA E83E95                  		call	SETMEM
 18647 0000B9ED 16                      		push	ss
 18648 0000B9EE 1F                      		pop	ds
 18649 0000B9EF BF1800                  		mov	di, 24		; PDB.JFN_TABLE
 18650 0000B9F2 31C0                    		xor	ax, ax
 18651 0000B9F4 AB                      		stosw
 18652 0000B9F5 AA                      		stosb
 18653 0000B9F6 B0FF                    		mov	al, 0FFh
 18654 0000B9F8 B91100                  		mov	cx, 17		; FILPERPROC-3
 18655 0000B9FB F3AA                    		rep stosb
 18656 0000B9FD 16                      		push	ss
 18657 0000B9FE 07                      		pop	es
 18658 0000B9FF 8C1E[2C00]              		mov	word [SFT_ADDR+2], ds
 18659 0000BA03 BE[280D]                		mov	si, SysInitTable
 18660 0000BA06 268C4406                		mov	word [es:si+6], es ; [es:si+SYSI_EXT.Country_Tab+2]
 18661 0000BA0A 268C4402                		mov	word [es:si+2], es ; [es:si+SYSI_EXT.SysInitVars+2]
 18662 0000BA0E 268C06[3A00]            		mov	word [es:BUFFHEAD+2], es
 18663 0000BA13 BE[6D00]                		mov	si, BufferQueue ; HASHINITVAR
 18664 0000BA16 268936[3800]            		mov	word [es:BUFFHEAD],	si
 18665 0000BA1B 5A                      		pop	dx
 18666 0000BA1C 8916[2E03]              		mov	word [DMAADD+2],	dx
 18667 0000BA20 268916[2400]            		mov	[es:arena_head], dx
 18668 0000BA25 8EDA                    		mov	ds, dx
 18669 0000BA27 C60600005A              		mov	byte [0], 5Ah ; 'Z' ; [ARENA.SIGNATURE],
 18670                                  					; arena_signature_end
 18671 0000BA2C C70601000000            		mov	word [1], 0 ; [ARENA.OWNER],
 18672                                  					; arena_owner_system
 18673 0000BA32 36A1[4603]              		mov	ax, [ss:ENDMEM]
 18674 0000BA36 29D0                    		sub	ax, dx
 18675 0000BA38 48                      		dec	ax
 18676 0000BA39 A30300                  		mov	[3],	ax	; [ARENA.SIZE]
 18677 0000BA3C BF[D200]                		mov	di, SFTABL_6 ; SFTABL+6
 18678                                  					; SFTABL+SFT.SFTable
 18679 0000BA3F B80300                  		mov	ax, 3
 18680 0000BA42 AB                      		stosw
 18681 0000BA43 BF[280D]                		mov	di, SysInitTable
 18682 0000BA46 42                      		inc	dx
 18683 0000BA47 8EDA                    		mov	ds, dx
 18684 0000BA49 BA[B7BA]                		mov	dx, _seg_reinit
 18685 0000BA4C B9[E0B3]                		mov	cx, exepatch_start
 18686 0000BA4F 81E9[D03D]              		sub	cx, _$STARTCODE
 18687 0000BA53 B8[6AB7]                		mov	ax, SYSBUF
 18688 0000BA56 2D[D03D]                		sub	ax, _$STARTCODE
 18689 0000BA59 368B26[8405]            		mov	sp, [ss:USER_SP]
 18690 0000BA5E 368E16[8605]            		mov	ss, [ss:USER_SS]
 18691 0000BA63 CB                      		retf
 18692                                  
 18693                                  ; =============== S U B	R O U T	I N E =======================================
 18694                                  
 18695                                  CHARINIT:		; ...
 18696 0000BA64 36C606[5A03]1A          		mov	byte [ss:DEVCALL], 1Ah ; [SS:DEVCALL_REQLEN],DINITHL
 18697 0000BA6A 36C606[5B03]00          		mov	byte [ss:DEVCALL+1], 0 ; [SS:DEVCALL_REQUNIT],0
 18698 0000BA70 36C606[5C03]00          		mov	byte [ss:DEVCALL_REQFUNC], 0 ; [SS:DEVCALL_REQFUNC],DEVINIT
 18699 0000BA76 36C706[5D03]0000        		mov	word [ss:DEVCALL_REQSTAT], 0 ; [SS:DEVCALL_REQSTAT],0
 18700 0000BA7D 06                      		push	es
 18701 0000BA7E 53                      		push	bx
 18702 0000BA7F 50                      		push	ax
 18703 0000BA80 BB[5A03]                		mov	bx, DEVCALL
 18704 0000BA83 16                      		push	ss
 18705 0000BA84 07                      		pop	es
 18706 0000BA85 E82ACB                  		call	DEVIOCALL2
 18707 0000BA88 58                      		pop	ax
 18708 0000BA89 5B                      		pop	bx
 18709 0000BA8A 07                      		pop	es
 18710 0000BA8B C3                      		retn
 18711                                  
 18712                                  ; =============== S U B	R O U T	I N E =======================================
 18713                                  
 18714                                  check_XMM:		; ...
 18715 0000BA8C 50                      		push	ax
 18716 0000BA8D B80043                  		mov	ax, 4300h	; (XMM_MULTIPLEX<<8)+XMM_INSTALL_CHECK
 18717 0000BA90 CD2F                    		int	2Fh		; - Multiplex -	XMS - INSTALLATION CHECK
 18718                                  					; Return: AL = 80h XMS driver installed
 18719                                  					; AL <>	80h no driver
 18720 0000BA92 3C80                    		cmp	al, 80h
 18721 0000BA94 751D                    		jnz	short cXMM_no_driver
 18722 0000BA96 53                      		push	bx
 18723 0000BA97 52                      		push	dx
 18724 0000BA98 1E                      		push	ds
 18725 0000BA99 06                      		push	es
 18726 0000BA9A B81043                  		mov	ax, 4310h	; (XMM_MULTIPLEX<<8)+XMM_FUNCTION_ADDR
 18727 0000BA9D CD2F                    		int	2Fh		; - Multiplex -	XMS - GET DRIVER ADDRESS
 18728                                  					; Return: ES:BX	-> driver entry	point
 18729 0000BA9F 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 18730 0000BAA4 891E[6311]              		mov	word [XMMcontrol], bx
 18731 0000BAA8 8C06[6511]              		mov	word [XMMcontrol+2], es
 18732                                  
 18733                                  cXMMexit:
 18734 0000BAAC F8                      		clc
 18735 0000BAAD 07                      		pop	es
 18736 0000BAAE 1F                      		pop	ds
 18737 0000BAAF 5A                      		pop	dx
 18738 0000BAB0 5B                      		pop	bx
 18739 0000BAB1 58                      		pop	ax
 18740 0000BAB2 C3                      		retn
 18741                                  ; ---------------------------------------------------------------------------
 18742                                  
 18743                                  cXMM_no_driver:				; ...
 18744 0000BAB3 F9                      		stc
 18745 0000BAB4 58                      		pop	ax
 18746 0000BAB5 C3                      		retn
 18747                                  
 18748                                  ; ---------------------------------------------------------------------------
 18749 0000BAB6 00                      num_entry	db 0			; ...
 18750                                  ; ---------------------------------------------------------------------------
 18751                                  
 18752                                  _seg_reinit:				; ...
 18753 0000BAB7 1E                      		push	ds
 18754 0000BAB8 2E8E1E[D73D]            		mov	ds, [cs:DosDSeg]
 18755 0000BABD E8C300                  		call	patch_misc_segments
 18756 0000BAC0 83F800                  		cmp	ax, 0
 18757 0000BAC3 756E                    		jnz	short patch_vec_seg
 18758 0000BAC5 2E803E[B6BA]00          		cmp	byte [cs:num_entry], 0
 18759 0000BACB 7508                    		jnz	short second_entry
 18760 0000BACD 8CD8                    		mov	ax, ds
 18761 0000BACF E86E00                  		call	patch_vec_segments
 18762 0000BAD2 E8FF00                  		call	patch_offset
 18763                                  
 18764                                  second_entry:				; ...
 18765 0000BAD5 8CC0                    		mov	ax, es
 18766 0000BAD7 BF[6210]                		mov	di, DOSINTTABLE
 18767 0000BADA B90900                  		mov	cx, 9
 18768 0000BADD 1E                      		push	ds
 18769 0000BADE 07                      		pop	es
 18770                                  
 18771                                  dosinttabloop:				; ...
 18772 0000BADF 83C702                  		add	di, 2
 18773 0000BAE2 AB                      		stosw
 18774 0000BAE3 E2FA                    		loop	dosinttabloop
 18775 0000BAE5 3D00F0                  		cmp	ax, 0F000h
 18776 0000BAE8 724E                    		jb	short sr_done
 18777 0000BAEA E89FFF                  		call	check_XMM
 18778 0000BAED 7249                    		jb	short sr_done
 18779 0000BAEF E86E01                  		call	patch_in_nops
 18780 0000BAF2 C606[1112]01            		mov	byte [DosHasHMA], 1
 18781 0000BAF7 C706[1212][30B5]        		mov	word [FixExePatch], ExePatch
 18782 0000BAFD C706[6100][34B7]        		mov	word [ChkCopyProt], IsCopyProt
 18783                                  
 18784                                  Get_CPU_Type:				; WhatCPUType
 18785 0000BB03 9C                      		pushf
 18786 0000BB04 53                      		push	bx
 18787 0000BB05 31DB                    		xor	bx, bx
 18788 0000BB07 31C0                    		xor	ax, ax
 18789 0000BB09 50                      		push	ax
 18790 0000BB0A 9D                      		popf
 18791 0000BB0B 9C                      		pushf
 18792 0000BB0C 58                      		pop	ax
 18793 0000BB0D 2500F0                  		and	ax, 0F000h
 18794 0000BB10 3D00F0                  		cmp	ax, 0F000h
 18795 0000BB13 740E                    		jz	short cpu_8086
 18796 0000BB15 B800F0                  		mov	ax, 0F000h
 18797 0000BB18 50                      		push	ax
 18798 0000BB19 9D                      		popf
 18799 0000BB1A 9C                      		pushf
 18800 0000BB1B 58                      		pop	ax
 18801 0000BB1C 2500F0                  		and	ax, 0F000h
 18802 0000BB1F 7401                    		jz	short cpu_286
 18803 0000BB21 43                      		inc	bx
 18804                                  
 18805                                  cpu_286:				; ...
 18806 0000BB22 43                      		inc	bx
 18807                                  
 18808                                  cpu_8086:				; ...
 18809 0000BB23 89D8                    		mov	ax, bx
 18810 0000BB25 5B                      		pop	bx
 18811 0000BB26 9D                      		popf
 18812 0000BB27 3C01                    		cmp	al, 1
 18813 0000BB29 750D                    		jnz	short sr_done
 18814 0000BB2B C706[1412][6DB6]        		mov	word [RationalPatchPtr], RationalPatch
 18815 0000BB31 EB05                    		jmp	short sr_done
 18816                                  ; ---------------------------------------------------------------------------
 18817                                  
 18818                                  patch_vec_seg:				; ...
 18819 0000BB33 8CC0                    		mov	ax, es
 18820 0000BB35 E80800                  		call	patch_vec_segments
 18821                                  
 18822                                  sr_done:				; ...
 18823 0000BB38 2EC606[B6BA]01          		mov	byte [cs:num_entry], 1
 18824 0000BB3E 1F                      		pop	ds
 18825 0000BB3F CB                      		retf
 18826                                  
 18827                                  ; =============== S U B	R O U T	I N E =======================================
 18828                                  
 18829                                  patch_vec_segments:	; ...
 18830 0000BB40 06                      		push	es
 18831 0000BB41 31C9                    		xor	cx, cx
 18832 0000BB43 8EC1                    		mov	es, cx
 18833 0000BB45 BF8200                  		mov	di, 82h		; INTBASE+2
 18834                                  					; di ->	segment	of int 20 vector
 18835 0000BB48 26A30200                		mov	[es:2],	ax
 18836 0000BB4C B90200                  		mov	cx, 2
 18837                                  
 18838                                  ps_set1:				; ...
 18839 0000BB4F AB                      		stosw
 18840 0000BB50 83C702                  		add	di, 2
 18841 0000BB53 E2FA                    		loop	ps_set1
 18842 0000BB55 83C704                  		add	di, 4
 18843 0000BB58 AB                      		stosw
 18844 0000BB59 83C706                  		add	di, 6
 18845 0000BB5C B90400                  		mov	cx, 4
 18846                                  
 18847                                  ps_set2:				; ...
 18848 0000BB5F AB                      		stosw
 18849 0000BB60 83C702                  		add	di, 2
 18850 0000BB63 E2FA                    		loop	ps_set2
 18851 0000BB65 83C704                  		add	di, 4
 18852 0000BB68 B90600                  		mov	cx, 6
 18853                                  
 18854                                  ps_set3:				; ...
 18855 0000BB6B AB                      		stosw
 18856 0000BB6C 83C702                  		add	di, 2
 18857 0000BB6F E2FA                    		loop	ps_set3
 18858 0000BB71 83C708                  		add	di, 8
 18859 0000BB74 B90E00                  		mov	cx, 14
 18860                                  
 18861                                  ps_set4:				; ...
 18862 0000BB77 AB                      		stosw
 18863 0000BB78 83C702                  		add	di, 2
 18864 0000BB7B E2FA                    		loop	ps_set4
 18865 0000BB7D 26A3C300                		mov	[es:0C3h], ax	; [es:ENTRYPOINT+3]
 18866 0000BB81 07                      		pop	es
 18867 0000BB82 C3                      		retn
 18868                                  
 18869                                  ; =============== S U B	R O U T	I N E =======================================
 18870                                  
 18871                                  patch_misc_segments: ; ...
 18872 0000BB83 53                      		push	bx
 18873 0000BB84 06                      		push	es
 18874 0000BB85 50                      		push	ax
 18875 0000BB86 8CC0                    		mov	ax, es
 18876 0000BB88 1E                      		push	ds
 18877 0000BB89 07                      		pop	es
 18878 0000BB8A BF[9000]                		mov	di, JShare
 18879 0000BB8D 8B1E[AA0A]              		mov	bx, [TEMP_DOSLOC]
 18880 0000BB91 B90F00                  		mov	cx, 15
 18881                                  
 18882                                  jumptabloop:				; ...
 18883 0000BB94 83C702                  		add	di, 2
 18884 0000BB97 83FBFF                  		cmp	bx, -1
 18885 0000BB9A 7405                    		jz	short share_patch
 18886 0000BB9C 263B1D                  		cmp	bx, [es:di]
 18887 0000BB9F 7501                    		jnz	short no_share_patch
 18888                                  
 18889                                  share_patch:				; ...
 18890 0000BBA1 AB                      		stosw
 18891                                  
 18892                                  no_share_patch:				; ...
 18893 0000BBA2 E2F0                    		loop	jumptabloop
 18894 0000BBA4 BE[2A12]                		mov	si, COUNTRY_CDPG
 18895 0000BBA7 8C5C4F                  		mov	word [si+4Fh], ds ; [si+DOS_CCDPG.ccUcase_ptr+2]
 18896 0000BBAA 8C5C54                  		mov	word [si+54h], ds ; [si+DOS_CCDPG.ccFileUcase_ptr+2]
 18897 0000BBAD 8C5C59                  		mov	word [si+59h], ds ; [si+DOS_CCDPG.ccFileChar_ptr+2]
 18898 0000BBB0 8C5C5E                  		mov	word [si+5Eh], ds ; [si+DOS_CCDPG.ccCollate_ptr+2]
 18899 0000BBB3 8C9C8000                		mov	word [si+80h], ds ; [si+DOS_CCDPG.ccMono_ptr+2]
 18900 0000BBB7 8C5C63                  		mov	word [si+63h], ds ; [si+DOS_CCDPG.ccDBCS_ptr+2]
 18901 0000BBBA BE[300D]                		mov	si, FastOpenTable
 18902 0000BBBD 833E[AA0A]FF            		cmp	word [TEMP_DOSLOC], 0FFFFh ; -1
 18903 0000BBC2 7409                    		jz	short fast_patch
 18904 0000BBC4 8B0E[AA0A]              		mov	cx, [TEMP_DOSLOC]
 18905 0000BBC8 3B4C04                  		cmp	cx, [si+4]	; [si+fastopen_entry.name_caching+2]
 18906 0000BBCB 7503                    		jnz	short no_fast_patch
 18907                                  
 18908                                  fast_patch:				; ...
 18909 0000BBCD 894404                  		mov	[si+4],	ax
 18910                                  
 18911                                  no_fast_patch:				; ...
 18912 0000BBD0 58                      		pop	ax
 18913 0000BBD1 07                      		pop	es
 18914 0000BBD2 5B                      		pop	bx
 18915 0000BBD3 C3                      		retn
 18916                                  
 18917                                  ; =============== S U B	R O U T	I N E =======================================
 18918                                  
 18919                                  patch_offset:	; ...
 18920 0000BBD4 06                      		push	es
 18921 0000BBD5 31C0                    		xor	ax, ax
 18922 0000BBD7 8EC0                    		mov	es, ax
 18923 0000BBD9 26C7060000[8A10]        		mov	word [es:0], ldivov
 18924 0000BBE0 BF8000                  		mov	di, 80h		; INTBASE
 18925                                  					; di-> offset of int 20	handler
 18926 0000BBE3 B8[DA10]                		mov	ax, lirett
 18927 0000BBE6 B90200                  		mov	cx, 2
 18928                                  
 18929                                  po_iset1:				; ...
 18930 0000BBE9 AB                      		stosw
 18931 0000BBEA 83C702                  		add	di, 2
 18932 0000BBED E2FA                    		loop	po_iset1
 18933 0000BBEF 83C704                  		add	di, 4
 18934 0000BBF2 AB                      		stosw
 18935 0000BBF3 83C706                  		add	di, 6
 18936 0000BBF6 B90400                  		mov	cx, 4
 18937                                  
 18938                                  po_iset2:				; ...
 18939 0000BBF9 AB                      		stosw
 18940 0000BBFA 83C702                  		add	di, 2
 18941 0000BBFD E2FA                    		loop	po_iset2
 18942 0000BBFF 83C704                  		add	di, 4
 18943 0000BC02 B90600                  		mov	cx, 6
 18944                                  
 18945                                  po_iset3:				; ...
 18946 0000BC05 AB                      		stosw
 18947 0000BC06 83C702                  		add	di, 2
 18948 0000BC09 E2FA                    		loop	po_iset3
 18949 0000BC0B 83C708                  		add	di, 8
 18950 0000BC0E B90E00                  		mov	cx, 14
 18951                                  
 18952                                  po_iset4:				; ...
 18953 0000BC11 AB                      		stosw
 18954 0000BC12 83C702                  		add	di, 2
 18955 0000BC15 E2FA                    		loop	po_iset4
 18956 0000BC17 26C706BC00[C610]        		mov	word [es:0BCh], lint2f
 18957 0000BC1E 26C606C000EA            		mov	byte [es:0C0h], 0EAh ; [es:ENTRYPOINT],mi_long_jmp
 18958 0000BC24 26C706C100[D010]        		mov	word [es:0C1h], lcall_entry
 18959 0000BC2B 26C7068000[9410]        		mov	word [es:80h], lquit	; [es:addr_int_abort]
 18960 0000BC32 26C7068400[9E10]        		mov	word [es:84h], lcommand ; [es:addr_int_command]
 18961 0000BC39 26C7069400[A810]        		mov	word [es:94h], labsdrd ; [es:addr_int_disk_read]
 18962 0000BC40 26C7069800[B210]        		mov	word [es:98h], labsdwrt ; [es:addr_int_disk_write]
 18963 0000BC47 26C7069C00[BC10]        		mov	word [es:9Ch], lstay_resident ; [es:addr_int_keep_process]
 18964 0000BC4E 07                      		pop	es
 18965 0000BC4F C3                      		retn
 18966                                  
 18967                                  ; ---------------------------------------------------------------------------
 18968 0000BC50 [8A10]                  patch_table	dw ldivov	; ...
 18969                                  					; i0patch
 18970 0000BC52 [9410]                  		dw lquit		; i20patch
 18971 0000BC54 [9E10]                  		dw lcommand	; i21patch
 18972 0000BC56 [A810]                  		dw labsdrd	; i25patch
 18973 0000BC58 [B210]                  		dw labsdwrt	; i26patch
 18974 0000BC5A [BC10]                  		dw lstay_resident ; i27patch
 18975 0000BC5C [C610]                  		dw lint2f	; i2fpatch
 18976 0000BC5E [D010]                  		dw lcall_entry	; cpmpatch
 18977                                  ; ---------------------------------------------------------------------------
 18978                                  
 18979                                  patch_in_nops:				; ...
 18980 0000BC60 50                      		push	ax
 18981 0000BC61 56                      		push	si
 18982 0000BC62 BE[50BC]                		mov	si, patch_table
 18983 0000BC65 B89090                  		mov	ax, 9090h	; nop, nop
 18984 0000BC68 B90800                  		mov	cx, 8		; patch_table_size
 18985                                  
 18986                                  pin_loop:				; ...
 18987 0000BC6B 2E8B3C                  		mov	di, [cs:si]
 18988 0000BC6E AB                      		stosw
 18989 0000BC6F 83C602                  		add	si, 2
 18990 0000BC72 E2F7                    		loop	pin_loop
 18991 0000BC74 5E                      		pop	si
 18992 0000BC75 58                      		pop	ax
 18993 0000BC76 C3                      		retn
 18994                                  ; ---------------------------------------------------------------------------
 18995 0000BC77 000000000000000000      DOSCODE_END	db 9 dup(0)		; ...
 18996                                  
 18997                                  ; ===========================================================================
 18998                                  ; ----------------------------------------------------------------------------
 18999                                  ; 06/12/2022 - Retro DOS v4.0 (Modified MSDOS 5.0 MSDOS.SYS)
 19000                                  ; ----------------------------------------------------------------------------
 19001                                  
 19002                                  segment .data  vstart=0 ; 06/12/2022
 19003                                  								
 19004                                  ; ============================================================================
 19005                                  
 19006                                  DOSDATASTART:
 19007 00000000 00000000                DATASTART	db 4 dup(0)
 19008 00000004 0100                    DataVersion	dw 1
 19009 00000006 0000000000000000        WinoldPatch1	db 8 dup(0)		; ...
 19010 0000000E 0000                    MYNUM		dw 0			; ...
 19011 00000010 0000                    FCBLRU		dw 0			; ...
 19012 00000012 0000                    OpenLRU		dw 0
 19013 00000014 FFFFFFFF                OEM_HANDLER	dd 0FFFFFFFFh
 19014 00000018 [F741]                  LeaveAddr	dw LeaveDOS	; DOSCODE:LeaveDOS
 19015 0000001A 0300                    RetryCount	dw 3			; ...
 19016 0000001C 0100                    RetryLoop	dw 1			; ...
 19017 0000001E FFFFFFFF                LastBuffer	dd 0FFFFFFFFh		; ...
 19018 00000022 0000                    CONTPOS		dw 0			; ...
 19019 00000024 0000                    arena_head	dw 0			; ...
 19020 00000026 00000000                SYSINITVARS	dd 0			; ...
 19021                                  					; DPBHEAD
 19022 0000002A CC000000                SFT_ADDR	dd 0CCh			; ...
 19023 0000002E 00000000                BCLOCK		dd 0			; ...
 19024 00000032 00000000                BCON		dd 0			; ...
 19025 00000036 8000                    MAXSEC		dw 128			; ...
 19026 00000038 00000000                BUFFHEAD	dd 0			; ...
 19027 0000003C 00000000                CDSADDR		dd 0			; ...
 19028 00000040 00000000                SFTFCB		dd 0			; ...
 19029 00000044 0000                    KEEPCOUNT	dw 0
 19030 00000046 00                      NUMIO		db 0			; ...
 19031 00000047 00                      CDSCOUNT	db 0			; ...
 19032 00000048 00000000                NULDEV		dd 0			; ...
 19033 0000004C 0480                    		dw 8004h		; DEVTYP|ISNULL
 19034 0000004E [C60D]                  		dw SNULDEV
 19035 00000050 [CC0D]                  		dw INULDEV
 19036 00000052 4E554C2020202020        		db 'NUL     '
 19037 0000005A 00                      SPLICES		db 0			; ...
 19038 0000005B 0000                    Special_Entries	dw 0
 19039 0000005D 00000000                UU_IFS_DOS_CALL	dd 0			; ...
 19040 00000061 0000                    ChkCopyProt	dw 0			; ...
 19041 00000063 0000                    A20OFF_PSP	dw 0			; ...
 19042 00000065 0000                    BUFFERS_PARM1	dw 0
 19043 00000067 0000                    BUFFERS_PARM2	dw 0
 19044 00000069 00                      BOOTDRIVE	db 0			; ...
 19045 0000006A 00                      DDMOVE		db 0			; ...
 19046 0000006B 0000                    EXT_MEM_SIZE	dw 0
 19047 0000006D 00000000                BufferQueue	dd 0			; ...
 19048 00000071 0000                    DirtyBufferCount dw 0			; ...
 19049 00000073 00000000                SC_CACHE_PTR	dd 0			; ...
 19050 00000077 0000                    SC_CACHE_COUNT	dw 0			; ...
 19051 00000079 00                      BuffInHMA	db 0			; ...
 19052 0000007A 00000000                LoMemBuff	dd 0			; ...
 19053 0000007E 000000                  UU_BUF_EMS_FIRST_PAGE db 3 dup(0)
 19054 00000081 FFFF                    CL0FATENTRY	dw -1			; ...
 19055 00000083 00                      IoStatFail	db 0			; ...
 19056 00000084 00                      ALLOCMSAVE	db 0			; ...
 19057 00000085 00                      A20OFF_COUNT	db 0			; ...
 19058 00000086 00                      DOS_FLAG	db 0			; ...
 19059 00000087 0000                    UNPACK_OFFSET	dw 0			; ...
 19060 00000089 00                      UMBFLAG		db 0			; ...
 19061 0000008A 0000                    SAVE_AX		dw 0			; ...
 19062 0000008C FFFF                    UMB_HEAD	dw -1			; ...
 19063 0000008E 0100                    START_ARENA	dw 1			; ...
 19064 00000090 [AA44]                  JShare		dw BadCall	; ...
 19065 00000092 0000                    		dw 0
 19066 00000094 [AE44]                  MFT_enter	dw OKCall		; ...
 19067 00000096 0000                    		dw 0
 19068 00000098 [AE44]                  MFTClose	dw OKCall		; ...
 19069 0000009A 0000                    		dw 0
 19070 0000009C [AA44]                  MFTclU		dw BadCall		; ...
 19071 0000009E 0000                    		dw 0
 19072 000000A0 [AA44]                  MFTCloseP	dw BadCall	; ...
 19073 000000A2 0000                    		dw 0
 19074 000000A4 [AA44]                  MFTcloN		dw BadCall	; ...
 19075 000000A6 0000                    		dw 0
 19076 000000A8 [AA44]                  set_block	dw BadCall		; ...
 19077 000000AA 0000                    		dw 0
 19078 000000AC [AA44]                  clr_block	dw BadCall		; ...
 19079 000000AE 0000                    		dw 0
 19080 000000B0 [AE44]                  chk_block	dw OKCall		; ...
 19081 000000B2 0000                    		dw 0
 19082 000000B4 [AA44]                  MFT_get		dw BadCall		; ...
 19083 000000B6 0000                    		dw 0
 19084 000000B8 [AA44]                  ShSave		dw BadCall	; ...
 19085 000000BA 0000                    		dw 0
 19086 000000BC [AA44]                  ShChk		dw BadCall	; ...
 19087 000000BE 0000                    		dw 0
 19088 000000C0 [AE44]                  ShCol		dw OKCall		; ...
 19089 000000C2 0000                    		dw 0
 19090 000000C4 [AA44]                  ShCloseFile	dw BadCall	; ...
 19091 000000C6 0000                    		dw 0
 19092 000000C8 [AA44]                  ShSU		dw BadCall	; ...
 19093 000000CA 0000                    		dw 0
 19094 000000CC FFFF                    SFTABL		dw -1
 19095 000000CE FFFF                    		dw -1
 19096 000000D0 0500                    		dw 5
 19097 000000D2 000000000000000000-     SFTABL_6	db 295 dup(0)		; SFTABL+6
 19097 000000DB 000000000000000000-
 19097 000000E4 000000000000000000-
 19097 000000ED 000000000000000000-
 19097 000000F6 000000000000000000-
 19097 000000FF 000000000000000000-
 19097 00000108 000000000000000000-
 19097 00000111 000000000000000000-
 19097 0000011A 000000000000000000-
 19097 00000123 000000000000000000-
 19097 0000012C 000000000000000000-
 19097 00000135 000000000000000000-
 19097 0000013E 000000000000000000-
 19097 00000147 000000000000000000-
 19097 00000150 000000000000000000-
 19097 00000159 000000000000000000-
 19097 00000162 000000000000000000-
 19097 0000016B 000000000000000000-
 19097 00000174 000000000000000000-
 19097 0000017D 000000000000000000-
 19097 00000186 000000000000000000-
 19097 0000018F 000000000000000000-
 19097 00000198 000000000000000000-
 19097 000001A1 000000000000000000-
 19097 000001AA 000000000000000000-
 19097 000001B3 000000000000000000-
 19097 000001BC 000000000000000000-
 19097 000001C5 000000000000000000-
 19097 000001CE 000000000000000000-
 19097 000001D7 000000000000000000-
 19097 000001E0 000000000000000000-
 19097 000001E9 000000000000000000-
 19097 000001F2 00000000000000     
 19098 000001F9 00                      CARPOS		db 0			; ...
 19099 000001FA 00                      STARTPOS	db 0			; ...
 19100 000001FB 000000000000000000-     INBUF		db 128 dup(0)		; ...
 19100 00000204 000000000000000000-
 19100 0000020D 000000000000000000-
 19100 00000216 000000000000000000-
 19100 0000021F 000000000000000000-
 19100 00000228 000000000000000000-
 19100 00000231 000000000000000000-
 19100 0000023A 000000000000000000-
 19100 00000243 000000000000000000-
 19100 0000024C 000000000000000000-
 19100 00000255 000000000000000000-
 19100 0000025E 000000000000000000-
 19100 00000267 000000000000000000-
 19100 00000270 000000000000000000-
 19100 00000279 0000               
 19101 0000027B 000000000000000000-     CONBUF		db 131 dup(0)		; ...
 19101 00000284 000000000000000000-
 19101 0000028D 000000000000000000-
 19101 00000296 000000000000000000-
 19101 0000029F 000000000000000000-
 19101 000002A8 000000000000000000-
 19101 000002B1 000000000000000000-
 19101 000002BA 000000000000000000-
 19101 000002C3 000000000000000000-
 19101 000002CC 000000000000000000-
 19101 000002D5 000000000000000000-
 19101 000002DE 000000000000000000-
 19101 000002E7 000000000000000000-
 19101 000002F0 000000000000000000-
 19101 000002F9 0000000000         
 19102 000002FE 00                      PFLAG		db 0			; ...
 19103 000002FF 00                      VERFLG		db 0			; ...
 19104 00000300 03                      CHARCO		db 11b			; ...
 19105 00000301 2F                      chSwitch	db '/'
 19106 00000302 00                      AllocMethod	db 0			; ...
 19107 00000303 00                      fShare		db 0			; ...
 19108 00000304 01                      DIFFNAM		db 1			; ...
 19109 00000305 202020202020202020-     MYNAME		db 16 dup(20h)		; ...
 19109 0000030E 20202020202020     
 19110 00000315 [0C0D]                  CritPatch	dw redir_patch
 19111 00000317 [0C0D]                  		dw redir_patch
 19112 00000319 [0C0D]                  		dw redir_patch
 19113 0000031B [0C0D]                  		dw redir_patch
 19114 0000031D 0000                    		dw 0
 19115 0000031F 90                      		db 90h			; align	2
 19116 00000320 00                      ERRORMODE	db 0			; ...
 19117                                  					; SWAP_START
 19118 00000321 00                      INDOS		db 0			; ...
 19119 00000322 FF                      WPERR		db -1			; ...
 19120 00000323 00                      EXTERR_LOCUS	db 0			; ...
 19121 00000324 0000                    EXTERR		dw 0			; ...
 19122 00000326 00                      EXTERR_ACTION	db 0			; ...
 19123 00000327 00                      EXTERR_CLASS	db 0			; ...
 19124 00000328 00000000                EXTERRPT	dd 0			; ...
 19125 0000032C 80000000                DMAADD		dd 80h			; ...
 19126 00000330 0000                    CurrentPDB	dw 0			; ...
 19127 00000332 0000                    ConC_Spsave	dw 0			; ...
 19128 00000334 0000                    exit_code	dw 0			; ...
 19129 00000336 00                      CURDRV		db 0			; ...
 19130 00000337 00                      CNTCFLAG	db 0			; ...
 19131 00000338 00                      CPSWFLAG	db 0
 19132 00000339 00                      CPSWSAVE	db 0
 19133 0000033A 0000                    USER_IN_AX	dw 0			; ...
 19134                                  					; SWAP_ALWAYS
 19135 0000033C 0000                    PROC_ID		dw 0			; ...
 19136 0000033E 0000                    USER_ID		dw 0			; ...
 19137 00000340 0000                    FirstArena	dw 0			; ...
 19138 00000342 0000                    BestArena	dw 0			; ...
 19139 00000344 0000                    LastArena	dw 0			; ...
 19140 00000346 0000                    ENDMEM		dw 0			; ...
 19141 00000348 0000                    LASTENT		dw 0			; ...
 19142 0000034A 00                      FAILERR		db 0			; ...
 19143 0000034B 00                      ALLOWED		db 0			; ...
 19144 0000034C 00                      NoSetDir	db 0			; ...
 19145 0000034D 00                      DidCTRLC	db 0			; ...
 19146 0000034E 00                      SpaceFlag	db 0			; ...
 19147 0000034F 90                      		db 90h			; align	2
 19148 00000350 00                      DAY		db 0			; ...
 19149 00000351 00                      MONTH		db 0			; ...
 19150 00000352 0000                    YEAR		dw 0			; ...
 19151 00000354 FFFF                    DAYCNT		dw 0FFFFh		; ...
 19152 00000356 00                      WEEKDAY		db 0			; ...
 19153 00000357 00                      CONSWAP		db 0			; ...
 19154 00000358 01                      IDLEINT		db 1			; ...
 19155 00000359 00                      fAborting	db 0			; ...
 19156 0000035A 0000                    DEVCALL		dw 0			; ...
 19157 0000035C 00                      DEVCALL_REQFUNC	db 0			; ...
 19158 0000035D 0000                    DEVCALL_REQSTAT	dw 0			; ...
 19159 0000035F 0000000000000000        		db 8 dup(0)
 19160 00000367 00                      CALLMED		db 0			; ...
 19161 00000368 00000000                CALLXADD	db 0,0,0,0		; ...
 19162 0000036C 0000                    CALLSCNT	dw 0			; ...
 19163 0000036E 0000                    CALLSSEC	dw 0			; ...
 19164 00000370 00000000                CALLVIDRW	dd 0			; ...
 19165 00000374 00000000                CALLNEWSC	dd 0			; ...
 19166 00000378 00000000                CALLDEVAD	dd 0			; ...
 19167 0000037C 00                      IOCALL_REQLEN	db 0			; ...
 19168                                  					; IOCALL
 19169 0000037D 00                      IOCALL_REQUNIT	db 0			; ...
 19170 0000037E 00                      IOCALL_REQFUNC	db 0			; ...
 19171 0000037F 0000                    IOCALL_REQSTAT	db 2 dup(0)		; ...
 19172 00000381 0000000000000000        		db 8 dup(0)
 19173 00000389 00                      IOCTL_REQ_MAJORFUNCTION	db 0		; ...
 19174 0000038A 00                      IOCTL_REQ_MINORFUNCTION	db 0		; ...
 19175 0000038B 00                      IOCTL_REQ_REG_SI db 0			; ...
 19176 0000038C 00                      IOCTL_IOXAD_2	db 0			; ...
 19177 0000038D 00                      IOCTL_REQ_REG_DI db 0			; ...
 19178 0000038E 00                      IOCTL_IOSCNT	db 0			; ...
 19179 0000038F 0000                    IOCTL_REQ_GENERICIOCTL_PACKET dw 0	; ...
 19180 00000391 00                      IOCTL_REQ_GENERICIOCTL_PACKET_2	db 0	; ...
 19181 00000392 0E                      DSKSTCALL	db 14			; ...
 19182                                  					; DRDNDHL
 19183 00000393 00                      		db 0
 19184 00000394 05                      DSKSTCOM	db 5			; ...
 19185                                  					; DEVRDND
 19186 00000395 0000                    DSKSTST		dw 0			; ...
 19187 00000397 0000000000000000        		db 8 dup(0)
 19188 0000039F 00                      DSKCHRET	db 0			; ...
 19189 000003A0 [BC03]                  DSKCHRET_1	dw DEVIOBUF		; DSKCHRET+1
 19190 000003A2 0000                    DSKCHRET_3	dw 0			; DSKCHRET+3
 19191 000003A4 0100                    DSKSTCNT	dw 1			; ...
 19192 000003A6 0000                    		dw 0
 19193 000003A8 00                      CreatePDB	db 0			; ...
 19194 000003A9 0000000000000000        Lock_Buffer	db 8 dup(0)		; ...
 19195 000003B1 90                      		db 90h
 19196 000003B2 000000FF                USERNUM		dd 0FF000000h		; ...
 19197 000003B6 000000000000            TIMEBUF		dw 3 dup(0)		; ...
 19198 000003BC 0000                    DEVIOBUF	dw 0			; ...
 19199 000003BE 000000000000000000-     OPENBUF		db 128 dup(0)		; ...
 19199 000003C7 000000000000000000-
 19199 000003D0 000000000000000000-
 19199 000003D9 000000000000000000-
 19199 000003E2 000000000000000000-
 19199 000003EB 000000000000000000-
 19199 000003F4 000000000000000000-
 19199 000003FD 000000000000000000-
 19199 00000406 000000000000000000-
 19199 0000040F 000000000000000000-
 19199 00000418 000000000000000000-
 19199 00000421 000000000000000000-
 19199 0000042A 000000000000000000-
 19199 00000433 000000000000000000-
 19199 0000043C 0000               
 19200 0000043E 000000000000000000-     RENBUF		db 128 dup(0)		; ...
 19200 00000447 000000000000000000-
 19200 00000450 000000000000000000-
 19200 00000459 000000000000000000-
 19200 00000462 000000000000000000-
 19200 0000046B 000000000000000000-
 19200 00000474 000000000000000000-
 19200 0000047D 000000000000000000-
 19200 00000486 000000000000000000-
 19200 0000048F 000000000000000000-
 19200 00000498 000000000000000000-
 19200 000004A1 000000000000000000-
 19200 000004AA 000000000000000000-
 19200 000004B3 000000000000000000-
 19200 000004BC 0000               
 19201 000004BE 000000000000000000-     SEARCHBUF	db 53 dup(0)		; ...
 19201 000004C7 000000000000000000-
 19201 000004D0 000000000000000000-
 19201 000004D9 000000000000000000-
 19201 000004E2 000000000000000000-
 19201 000004EB 0000000000000000   
 19202 000004F3 000000000000000000-     DUMMYCDS	db 88 dup(0)		; ...
 19202 000004FC 000000000000000000-
 19202 00000505 000000000000000000-
 19202 0000050E 000000000000000000-
 19202 00000517 000000000000000000-
 19202 00000520 000000000000000000-
 19202 00000529 000000000000000000-
 19202 00000532 000000000000000000-
 19202 0000053B 000000000000000000-
 19202 00000544 00000000000000     
 19203 0000054B 000000000000000000-     NAME1		db 12 dup(0)		; ...
 19203 00000554 000000             
 19204 00000557 000000000000000000-     NAME2		db 13 dup(0)		; ...
 19204 00000560 00000000           
 19205 00000564 0000                    DESTSTART	dw 0			; ...
 19206 00000566 0000000000              		db 5 dup(0)
 19207 0000056B 00                      ATTRIB		db 0			; ...
 19208 0000056C 00                      EXTFCB		db 0			; ...
 19209 0000056D 00                      SATTRIB		db 0			; ...
 19210 0000056E 00                      OPEN_ACCESS	db 0			; ...
 19211 0000056F 00                      FOUNDDEL	db 0			; ...
 19212 00000570 00                      FOUND_DEV	db 0			; ...
 19213 00000571 00                      FSPLICE		db 0			; ...
 19214 00000572 00                      FSHARING	db 0			; ...
 19215 00000573 00                      SECCLUSPOS	db 0			; ...
 19216 00000574 00                      TRANS		db 0			; ...
 19217 00000575 00                      READOP		db 0			; ...
 19218 00000576 00                      THISDRV		db 0			; ...
 19219 00000577 00                      CLUSFAC		db 0			; ...
 19220 00000578 00                      CLUSSPLIT	db 0			; ...
 19221 00000579 00                      INSMODE		db 0			; ...
 19222 0000057A 00                      CMETA		db 0			; ...
 19223 0000057B 00                      VOLID		db 0			; ...
 19224 0000057C 00                      EXIT_TYPE	db 0			; ...
 19225 0000057D 90                      		db 90h
 19226 0000057E 00                      CREATING	db 0			; ...
 19227 0000057F 00                      DELALL		db 0			; ...
 19228 00000580 00000000                EXITHOLD	dd 0			; ...
 19229 00000584 0000                    USER_SP		dw 0			; ...
 19230 00000586 0000                    USER_SS		dw 0			; ...
 19231 00000588 0000                    CONTSTK		dw 0			; ...
 19232 0000058A 00000000                THISDPB		dd 0			; ...
 19233 0000058E 0000                    CLUSSAVE	dw 0			; ...
 19234 00000590 00000000                CLUSSEC		dd 0			; ...
 19235 00000594 0000                    PREREAD		dw 0			; ...
 19236 00000596 0000                    FATBYT		dw 0			; ...
 19237 00000598 00                      FATBYTE		db 0			; ...
 19238 00000599 00                      		db 0
 19239 0000059A 00000000                DEVPT		dd 0			; ...
 19240 0000059E 00000000                THISSFT		dd 0			; ...
 19241 000005A2 00000000                THISCDS		dd 0			; ...
 19242 000005A6 00000000                THISFCB		dd 0			; ...
 19243 000005AA FFFF                    SFN		dw 0FFFFh		; ...
 19244 000005AC 0000                    JFN		dw 0			; ...
 19245 000005AE 00000000                PJFN		dd 0			; ...
 19246 000005B2 0000                    WFP_START	dw 0			; ...
 19247 000005B4 0000                    REN_WFP		dw 0			; ...
 19248 000005B6 0000                    CURR_DIR_END	dw 0			; ...
 19249 000005B8 0000                    NEXTADD		dw 0			; ...
 19250 000005BA 0000                    LASTPOS		dw 0			; ...
 19251 000005BC 0000                    CLUSNUM		dw 0			; ...
 19252 000005BE 00000000                DIRSEC		dd 0			; ...
 19253 000005C2 0000                    DIRSTART	dw 0			; ...
 19254 000005C4 00000000                SECPOS		dd 0			; ...
 19255 000005C8 00000000                VALSEC		dd 0			; ...
 19256 000005CC 0000                    BYTSECPOS	dw 0			; ...
 19257 000005CE 00000000                BYTPOS		dd 0			; ...
 19258 000005D2 0000                    BYTCNT1		dw 0			; ...
 19259 000005D4 0000                    BYTCNT2		dw 0			; ...
 19260 000005D6 0000                    SECCNT		dw 0			; ...
 19261 000005D8 0000                    ENTFREE		dw 0			; ...
 19262 000005DA 0000                    ENTLAST		dw 0			; ...
 19263 000005DC 0000                    NXTCLUSNUM	dw 0			; ...
 19264 000005DE 00000000                GROWCNT		dd 0			; ...
 19265 000005E2 00000000                CURBUF		dd 0			; ...
 19266 000005E6 00000000                CONSFT		dd 0			; ...
 19267 000005EA 0000                    SAVEBX		dw 0			; ...
 19268 000005EC 0000                    SAVEDS		dw 0			; ...
 19269 000005EE 0000                    RESTORE_TMP	dw 0			; ...
 19270 000005F0 0000                    NSS		dw 0			; ...
 19271 000005F2 0000                    NSP		dw 0			; ...
 19272 000005F4 0000                    EXTOPEN_FLAG	dw 0			; ...
 19273 000005F6 00                      EXTOPEN_ON	db 0			; ...
 19274 000005F7 0000                    EXTOPEN_IO_MODE	dw 0			; ...
 19275 000005F9 0000                    SAVE_DI		dw 0			; ...
 19276 000005FB 0000                    SAVE_ES		dw 0			; ...
 19277 000005FD 0000                    SAVE_DX		dw 0			; ...
 19278 000005FF 0000                    SAVE_CX		dw 0			; ...
 19279 00000601 0000                    SAVE_BX		dw 0			; ...
 19280 00000603 0000                    SAVE_SI		dw 0			; ...
 19281 00000605 0000                    SAVE_DS		dw 0			; ...
 19282 00000607 0000                    HIGH_SECTOR	dw 0			; ...
 19283 00000609 0000                    		dw 0
 19284 0000060B 00                      DISK_FULL	db 0			; ...
 19285 0000060C 0000                    TEMP_VAR	dw 0			; ...
 19286 0000060E 0000                    TEMP_VAR2	dw 0			; ...
 19287 00000610 00                      DrvErr		db 0			; ...
 19288 00000611 0000                    DOS34_FLAG	dw 0			; ...
 19289 00000613 0000000000000000        		db 8 dup(0)
 19290 0000061B 0000                    AbsRdWr_SS	dw 0			; ...
 19291 0000061D 0000                    AbsRdWr_SP	dw 0			; ...
 19292 0000061F 00                      		db 0
 19293 00000620 000000000000000000-     RENAMEDMA	db 384 dup(0)		; ...
 19293 00000629 000000000000000000-
 19293 00000632 000000000000000000-
 19293 0000063B 000000000000000000-
 19293 00000644 000000000000000000-
 19293 0000064D 000000000000000000-
 19293 00000656 000000000000000000-
 19293 0000065F 000000000000000000-
 19293 00000668 000000000000000000-
 19293 00000671 000000000000000000-
 19293 0000067A 000000000000000000-
 19293 00000683 000000000000000000-
 19293 0000068C 000000000000000000-
 19293 00000695 000000000000000000-
 19293 0000069E 000000000000000000-
 19293 000006A7 000000000000000000-
 19293 000006B0 000000000000000000-
 19293 000006B9 000000000000000000-
 19293 000006C2 000000000000000000-
 19293 000006CB 000000000000000000-
 19293 000006D4 000000000000000000-
 19293 000006DD 000000000000000000-
 19293 000006E6 000000000000000000-
 19293 000006EF 000000000000000000-
 19293 000006F8 000000000000000000-
 19293 00000701 000000000000000000-
 19293 0000070A 000000000000000000-
 19293 00000713 000000000000000000-
 19293 0000071C 000000000000000000-
 19293 00000725 000000000000000000-
 19293 0000072E 000000000000000000-
 19293 00000737 000000000000000000-
 19293 00000740 000000000000000000-
 19293 00000749 000000000000000000-
 19293 00000752 000000000000000000-
 19293 0000075B 000000000000000000-
 19293 00000764 000000000000000000-
 19293 0000076D 000000000000000000-
 19293 00000776 000000000000000000-
 19293 0000077F 000000000000000000-
 19293 00000788 000000000000000000-
 19293 00000791 000000000000000000-
 19293 0000079A 000000000000       
 19294 000007A0 000000000000000000-     AUXSTACK	db 384 dup(0)		; ...
 19294 000007A9 000000000000000000-
 19294 000007B2 000000000000000000-
 19294 000007BB 000000000000000000-
 19294 000007C4 000000000000000000-
 19294 000007CD 000000000000000000-
 19294 000007D6 000000000000000000-
 19294 000007DF 000000000000000000-
 19294 000007E8 000000000000000000-
 19294 000007F1 000000000000000000-
 19294 000007FA 000000000000000000-
 19294 00000803 000000000000000000-
 19294 0000080C 000000000000000000-
 19294 00000815 000000000000000000-
 19294 0000081E 000000000000000000-
 19294 00000827 000000000000000000-
 19294 00000830 000000000000000000-
 19294 00000839 000000000000000000-
 19294 00000842 000000000000000000-
 19294 0000084B 000000000000000000-
 19294 00000854 000000000000000000-
 19294 0000085D 000000000000000000-
 19294 00000866 000000000000000000-
 19294 0000086F 000000000000000000-
 19294 00000878 000000000000000000-
 19294 00000881 000000000000000000-
 19294 0000088A 000000000000000000-
 19294 00000893 000000000000000000-
 19294 0000089C 000000000000000000-
 19294 000008A5 000000000000000000-
 19294 000008AE 000000000000000000-
 19294 000008B7 000000000000000000-
 19294 000008C0 000000000000000000-
 19294 000008C9 000000000000000000-
 19294 000008D2 000000000000000000-
 19294 000008DB 000000000000000000-
 19294 000008E4 000000000000000000-
 19294 000008ED 000000000000000000-
 19294 000008F6 000000000000000000-
 19294 000008FF 000000000000000000-
 19294 00000908 000000000000000000-
 19294 00000911 000000000000000000-
 19294 0000091A 000000000000       
 19295 00000920 000000000000000000-     DSKSTACK	db 384 dup(0)		; ...
 19295 00000929 000000000000000000-
 19295 00000932 000000000000000000-
 19295 0000093B 000000000000000000-
 19295 00000944 000000000000000000-
 19295 0000094D 000000000000000000-
 19295 00000956 000000000000000000-
 19295 0000095F 000000000000000000-
 19295 00000968 000000000000000000-
 19295 00000971 000000000000000000-
 19295 0000097A 000000000000000000-
 19295 00000983 000000000000000000-
 19295 0000098C 000000000000000000-
 19295 00000995 000000000000000000-
 19295 0000099E 000000000000000000-
 19295 000009A7 000000000000000000-
 19295 000009B0 000000000000000000-
 19295 000009B9 000000000000000000-
 19295 000009C2 000000000000000000-
 19295 000009CB 000000000000000000-
 19295 000009D4 000000000000000000-
 19295 000009DD 000000000000000000-
 19295 000009E6 000000000000000000-
 19295 000009EF 000000000000000000-
 19295 000009F8 000000000000000000-
 19295 00000A01 000000000000000000-
 19295 00000A0A 000000000000000000-
 19295 00000A13 000000000000000000-
 19295 00000A1C 000000000000000000-
 19295 00000A25 000000000000000000-
 19295 00000A2E 000000000000000000-
 19295 00000A37 000000000000000000-
 19295 00000A40 000000000000000000-
 19295 00000A49 000000000000000000-
 19295 00000A52 000000000000000000-
 19295 00000A5B 000000000000000000-
 19295 00000A64 000000000000000000-
 19295 00000A6D 000000000000000000-
 19295 00000A76 000000000000000000-
 19295 00000A7F 000000000000000000-
 19295 00000A88 000000000000000000-
 19295 00000A91 000000000000000000-
 19295 00000A9A 000000000000       
 19296                                  					; IOSTACK
 19297 00000AA0 00                      PRINTER_FLAG	db 0			; ...
 19298 00000AA1 00                      VOLCHNG_FLAG	db 0			; ...
 19299 00000AA2 00                      VIRTUAL_OPEN	db 0			; ...
 19300 00000AA3 00                      FSeek_drive	db 0
 19301 00000AA4 0000                    FSeek_firclus	dw 0
 19302 00000AA6 0000                    FSeek_logclus	dw 0
 19303 00000AA8 0000                    FSeek_logsave	dw 0
 19304 00000AAA FFFF                    TEMP_DOSLOC	dw -1			; ...
 19305 00000AAC 00                      SWAP_END	db 0			; ...
 19306 00000AAD 8000                    UCASE_TAB	dw 128			; ...
 19307 00000AAF 809A45418E418F80        UCASE_TAB_2	db 128,154,069,065,142,065,143,128 ; ...
 19308 00000AB7 4545454949498E8F        		db 069,069,069,073,073,073,142,143
 19309 00000ABF 9092924F994F5555        		db 144,146,146,079,153,079,085,085
 19310 00000AC7 59999A9B9C9D9E9F        		db 089,153,154,155,156,157,158,159
 19311 00000ACF 41494F55A5A5A6A7        		db 065,073,079,085,165,165,166,167
 19312 00000AD7 A8A9AAABACADAEAF        		db 168,169,170,171,172,173,174,175
 19313 00000ADF B0B1B2B3B4B5B6B7        		db 176,177,178,179,180,181,182,183
 19314 00000AE7 B8B9BABBBCBDBEBF        		db 184,185,186,187,188,189,190,191
 19315 00000AEF C0C1C2C3C4C5C6C7        		db 192,193,194,195,196,197,198,199
 19316 00000AF7 C8C9CACBCCCDCECF        		db 200,201,202,203,204,205,206,207
 19317 00000AFF D0D1D2D3D4D5D6D7        		db 208,209,210,211,212,213,214,215
 19318 00000B07 D8D9DADBDCDDDEDF        		db 216,217,218,219,220,221,222,223
 19319 00000B0F E0E1E2E3E4E5E6E7        		db 224,225,226,227,228,229,230,231
 19320 00000B17 E8E9EAEBECEDEEEF        		db 232,233,234,235,236,237,238,239
 19321 00000B1F F0F1F2F3F4F5F6F7        		db 240,241,242,243,244,245,246,247
 19322 00000B27 F8F9FAFBFCFDFEFF        		db 248,249,250,251,252,253,254,255
 19323 00000B2F 8000                    FILE_UCASE_TAB	dw 128			; ...
 19324 00000B31 809A45418E418F80        FILE_UCASE_TAB_2 db 128,154,069,065,142,065,143,128 ; ...
 19325 00000B39 4545454949498E8F        		db 069,069,069,073,073,073,142,143
 19326 00000B41 9092924F994F5555        		db 144,146,146,079,153,079,085,085
 19327 00000B49 59999A9B9C9D9E9F        		db 089,153,154,155,156,157,158,159
 19328 00000B51 41494F55A5A5A6A7        		db 065,073,079,085,165,165,166,167
 19329 00000B59 A8A9AAABACADAEAF        		db 168,169,170,171,172,173,174,175
 19330 00000B61 B0B1B2B3B4B5B6B7        		db 176,177,178,179,180,181,182,183
 19331 00000B69 B8B9BABBBCBDBEBF        		db 184,185,186,187,188,189,190,191
 19332 00000B71 C0C1C2C3C4C5C6C7        		db 192,193,194,195,196,197,198,199
 19333 00000B79 C8C9CACBCCCDCECF        		db 200,201,202,203,204,205,206,207
 19334 00000B81 D0D1D2D3D4D5D6D7        		db 208,209,210,211,212,213,214,215
 19335 00000B89 D8D9DADBDCDDDEDF        		db 216,217,218,219,220,221,222,223
 19336 00000B91 E0E1E2E3E4E5E6E7        		db 224,225,226,227,228,229,230,231
 19337 00000B99 E8E9EAEBECEDEEEF        		db 232,233,234,235,236,237,238,239
 19338 00000BA1 F0F1F2F3F4F5F6F7        		db 240,241,242,243,244,245,246,247
 19339 00000BA9 F8F9FAFBFCFDFEFF        		db 248,249,250,251,252,253,254,255
 19340 00000BB1 1600                    FILE_CHAR_TAB	dw 22			; ...
 19341 00000BB3 0100FF                  		db 1, 0, 255
 19342 00000BB6 000020                  		db 0, 0, 20h
 19343 00000BB9 020E                    		db 2, 14
 19344 00000BBB 2E222F5C5B5D3A7C3C-     		db '."/\[]:|<>+=;,'
 19344 00000BC4 3E2B3D3B2C         
 19345 00000BC9 000000000000000000-     		db 24 dup(0)
 19345 00000BD2 000000000000000000-
 19345 00000BDB 000000000000       
 19346 00000BE1 0001                    COLLATE_TAB	dw 256			; ...
 19347 00000BE3 0001020304050607        		db 0, 1, 2, 3, 4, 5, 6,	7
 19348 00000BEB 08090A0B0C0D0E0F        		db 8, 9, 10, 11, 12, 13, 14, 15
 19349 00000BF3 1011121314151617        		db 16, 17, 18, 19, 20, 21, 22, 23
 19350 00000BFB 18191A1B1C1D1E1F        		db 24, 25, 26, 27, 28, 29, 30, 31
 19351 00000C03 20212223242526          		db ' ', '!', '"', '#', '$', '%', '&'
 19352 00000C0A 27                      		db 27h
 19353 00000C0B 28292A2B2C2D2E2F        		db '(', ')', '*', '+', ',', '-', '.', '/'
 19354 00000C13 3031323334353637        		db '0', '1', '2', '3', '4', '5', '6', '7'
 19355 00000C1B 38393A3B3C3D3E3F        		db '8', '9', ':', ';', '<', '=', '>', '?'
 19356 00000C23 4041424344454647        		db '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G'
 19357 00000C2B 48494A4B4C4D4E4F        		db 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'
 19358 00000C33 5051525354555657        		db 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W'
 19359 00000C3B 58595A5B5C5D5E5F        		db 'X', 'Y', 'Z', '[', '\', ']', '^', '_'
 19360 00000C43 6041424344454647        		db '`', 'A', 'B', 'C', 'D', 'E', 'F', 'G'
 19361 00000C4B 48494A4B4C4D4E4F        		db 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'
 19362 00000C53 5051525354555657        		db 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W'
 19363 00000C5B 58595A7B7C7D7E7F        		db 'X', 'Y', 'Z', '{', '|', '}', '~', ''
 19364 00000C63 4355454141414143        		db 'C', 'U', 'E', 'A', 'A', 'A', 'A', 'C'
 19365 00000C6B 4545454949494141        		db 'E', 'E', 'E', 'I', 'I', 'I', 'A', 'A'
 19366 00000C73 4541414F4F4F5555        		db 'E', 'A', 'A', 'O', 'O', 'O', 'U', 'U'
 19367 00000C7B 594F552424242424        		db 'Y', 'O', 'U', '$', '$', '$', '$', '$'
 19368 00000C83 41494F554E4E            		db 'A', 'I', 'O', 'U', 'N', 'N'
 19369 00000C89 A6A7                    		db 166,	167
 19370 00000C8B 3F                      		db '?'
 19371 00000C8C A9AAABAC                		db 169,	170, 171, 172
 19372 00000C90 212222                  		db '!', '"', '"'
 19373 00000C93 B0B1B2B3B4B5B6B7        		db 176,	177, 178, 179, 180, 181, 182, 183
 19374 00000C9B B8B9BABBBCBDBEBF        		db 184,	185, 186, 187, 188, 189, 190, 191
 19375 00000CA3 C0C1C2C3C4C5C6C7        		db 192,	193, 194, 195, 196, 197, 198, 199
 19376 00000CAB C8C9CACBCCCDCECF        		db 200,	201, 202, 203, 204, 205, 206, 207
 19377 00000CB3 D0D1D2D3D4D5D6D7        		db 208,	209, 210, 211, 212, 213, 214, 215
 19378 00000CBB D8D9DADBDCDDDEDF        		db 216,	217, 218, 219, 220, 221, 222, 223
 19379 00000CC3 E0                      		db 224
 19380 00000CC4 53                      		db 'S'
 19381 00000CC5 E2E3E4E5E6E7E8E9        		db 226,	227, 228, 229, 230, 231, 232, 233
 19382 00000CCD EAEBECEDEEEFF0F1        		db 234,	235, 236, 237, 238, 239, 240, 241
 19383 00000CD5 F2F3F4F5F6F7F8F9        		db 242,	243, 244, 245, 246, 247, 248, 249
 19384 00000CDD FAFBFCFDFEFF            		db 250,	251, 252, 253, 254, 255
 19385 00000CE3 000000000000000000-     DBCS_TAB	dw 9 dup(0)		; ...
 19385 00000CEC 000000000000000000 
 19386                                  ; ---------------------------------------------------------------------------
 19387                                  
 19388                                  MAP_CASE:				; ...
 19389 00000CF5 3C80                    		cmp	al, 80h
 19390 00000CF7 7301                    		jnb	short Map1
 19391 00000CF9 CB                      		retf
 19392                                  ; ---------------------------------------------------------------------------
 19393                                  
 19394                                  Map1:					; ...
 19395 00000CFA 2C80                    		sub	al, 80h
 19396 00000CFC 1E                      		push	ds
 19397 00000CFD 53                      		push	bx
 19398 00000CFE BB[AF0A]                		mov	bx, UCASE_TAB_2 ; UCASE_TAB+2
 19399 00000D01 0E                      		push	cs
 19400 00000D02 1F                      		pop	ds
 19401 00000D03 D7                      		xlat
 19402 00000D04 5B                      		pop	bx
 19403 00000D05 1F                      		pop	ds
 19404 00000D06 CB                      		retf
 19405                                  ; ---------------------------------------------------------------------------
 19406 00000D07 00                      InterChar	db 0
 19407 00000D08 00                      InterCon	db 0
 19408 00000D09 00                      SaveCurFlg	db 0
 19409 00000D0A 0000                    TEMPSEG		dw 0			; ...
 19410 00000D0C 00                      redir_patch	db 0			; ...
 19411 00000D0D 0000000000              		db 5 dup(0)
 19412 00000D12 05                      		db 5
 19413 00000D13 00                      		db 0
 19414 00000D14 C8A6                    YRTAB		db 200,	166		; ...
 19415 00000D16 C8A5                    		db 200,	165
 19416 00000D18 C8A5                    		db 200,	165
 19417 00000D1A C8A5                    		db 200,	165
 19418 00000D1C 1F                      MONTAB		db 31			; ...
 19419 00000D1D 1C                      february	db 28			; ...
 19420 00000D1E 1F                      		db 31
 19421 00000D1F 1E                      		db 30
 19422 00000D20 1F                      		db 31
 19423 00000D21 1E                      		db 30
 19424 00000D22 1F                      		db 31
 19425 00000D23 1F                      		db 31
 19426 00000D24 1E                      		db 30
 19427 00000D25 1F                      		db 31
 19428 00000D26 1E                      		db 30
 19429 00000D27 1F                      		db 31
 19430 00000D28 [2600]                  SysInitTable	dw SYSINITVARS	; ...
 19431 00000D2A 0000                    		dw 0
 19432 00000D2C [2A12]                  		dw COUNTRY_CDPG
 19433 00000D2E 0000                    		dw 0
 19434 00000D30 0200                    FastOpenTable	dw 2			; ...
 19435 00000D32 [BC50]                  FastOpenTable_2	dw FastRet	; ...
 19436 00000D34 0000                    		dw 0
 19437 00000D36 [BC50]                  		dw FastRet
 19438 00000D38 0000                    		dw 0
 19439 00000D3A 00                      FastOpenFlg	db 0			; ...
 19440 00000D3B 000000000000000000-     FastOpen_Ext_Info db 11	dup( 0)		; ...
 19440 00000D44 0000               
 19441 00000D46 000000000000000000-     Dir_Info_Buff	db 32 dup( 0)		; ...
 19441 00000D4F 000000000000000000-
 19441 00000D58 000000000000000000-
 19441 00000D61 0000000000         
 19442 00000D66 0000                    Next_Element_Start dw 0			; ...
 19443 00000D68 0000                    Del_ExtCluster	dw 0
 19444 00000D6A [6C0D]                  USER_SP_2F	dw FAKE_STACK_2F	; ...
 19445 00000D6C 000000000000000000-     FAKE_STACK_2F	dw 14 dup(0)		; ...
 19445 00000D75 000000000000000000-
 19445 00000D7E 000000000000000000-
 19445 00000D87 00                 
 19446                                  					; DOS_TEMP
 19447 00000D88 0000000000000000        Hash_Temp	dw 4 dup(0)
 19448 00000D90 00                      SCAN_FLAG	db 0			; ...
 19449 00000D91 0000                    DATE_FLAG	dw 0			; ...
 19450 00000D93 0000                    FETCHI_TAG	dw 0			; OBSOLETE
 19451 00000D95 00000000                MSG_EXTERROR	dd 0
 19452 00000D99 00000000                		dd 0
 19453 00000D9D 00000000                		dd 0
 19454 00000DA1 00000000                		dd 0
 19455 00000DA5 00000000                		dd 0
 19456 00000DA9 FFFFFFFF                SEQ_SECTOR	dd -1			; ...
 19457 00000DAD 0000                    SC_SECTOR_SIZE	dw 0			; ...
 19458 00000DAF 00                      SC_DRIVE	db 0			; ...
 19459 00000DB0 FF                      CurSC_DRIVE	db -1			; ...
 19460 00000DB1 00000000                CurSC_SECTOR	dd 0			; ...
 19461 00000DB5 0000                    SC_STATUS	dw 0			; ...
 19462 00000DB7 00                      SC_FLAG		db 0			; ...
 19463 00000DB8 0000                    AbsDskErr	dw 0			; ...
 19464 00000DBA 4E4F204E414D452020-     NO_NAME_ID	db 'NO NAME    '        ; ...
 19464 00000DC3 2020               
 19465 00000DC5 00                      LOOKSIZ		db 0
 19466                                  ; ---------------------------------------------------------------------------
 19467                                  
 19468                                  SNULDEV:				; ...
 19469 00000DC6 26814F030001            		or	word [es:bx+3], 100h ; [es:bx+SRHEAD.REQSTAT],
 19470                                  					; STDON
 19471                                  
 19472                                  INULDEV:				; ...
 19473 00000DCC CB                      		retf
 19474                                  ; ---------------------------------------------------------------------------
 19475 00000DCD 0000000000000000        WinoldPatch2	db 8 dup(0)		; ...
 19476 00000DD5 0000000000              UmbSave2	db 5 dup(0)		; ...
 19477 00000DDA 00                      UmbSaveFlag	db 0			; ...
 19478 00000DDB 010704FF                ERR_TABLE_21	db 1, 7, 4, 0FFh	; ...
 19479 00000DDF 02080302                		db 2, 8, 3, 2
 19480 00000DE3 03080302                		db 3, 8, 3, 2
 19481 00000DE7 04010401                		db 4, 1, 4, 1
 19482 00000DEB 050303FF                		db 5, 3, 3, 0FFh
 19483 00000DEF 06070401                		db 6, 7, 4, 1
 19484 00000DF3 07070505                		db 7, 7, 5, 5
 19485 00000DF7 08010405                		db 8, 1, 4, 5
 19486 00000DFB 09070405                		db 9, 7, 4, 5
 19487 00000DFF 0A070405                		db 0Ah,	7, 4, 5
 19488 00000E03 0B090301                		db 0Bh,	9, 3, 1
 19489 00000E07 0C070401                		db 0Ch,	7, 4, 1
 19490 00000E0B 0D090401                		db 0Dh,	9, 4, 1
 19491 00000E0F 0F080302                		db 0Fh,	8, 3, 2
 19492 00000E13 10030302                		db 10h,	3, 3, 2
 19493 00000E17 110D0302                		db 11h,	0Dh, 3,	2
 19494 00000E1B 12080302                		db 12h,	8, 3, 2
 19495 00000E1F 500C0302                		db 50h,	0Ch, 3,	2
 19496 00000E23 200A0202                		db 20h,	0Ah, 2,	2
 19497 00000E27 210A0202                		db 21h,	0Ah, 2,	2
 19498 00000E2B 540104FF                		db 54h,	1, 4, 0FFh
 19499 00000E2F 56030301                		db 56h,	3, 3, 1
 19500 00000E33 52010402                		db 52h,	1, 4, 2
 19501 00000E37 32090303                		db 32h,	9, 3, 3
 19502 00000E3B 550C0303                		db 55h,	0Ch, 3,	3
 19503 00000E3F 57090301                		db 57h,	9, 3, 1
 19504 00000E43 530D0401                		db 53h,	0Dh, 4,	1
 19505 00000E47 24010405                		db 24h,	1, 4, 5
 19506 00000E4B 26010401                		db 26h,	1, 4, 1
 19507 00000E4F 27010401                		db 27h,	1, 4, 1
 19508 00000E53 5A0D0402                		db 5Ah,	0Dh, 4,	2
 19509 00000E57 FFFFFFFF                		db 0FFh, 0FFh, 0FFh, 0FFh
 19510 00000E5B 130B0702                ERR_TABLE_24	db 13h,	0Bh, 7,	2	; ...
 19511 00000E5F 14040501                		db 14h,	4, 5, 1
 19512 00000E63 150507FF                		db 15h,	5, 7, 0FFh
 19513 00000E67 16040501                		db 16h,	4, 5, 1
 19514 00000E6B 170B0402                		db 17h,	0Bh, 4,	2
 19515 00000E6F 18040501                		db 18h,	4, 5, 1
 19516 00000E73 19050102                		db 19h,	5, 1, 2
 19517 00000E77 1A0B0702                		db 1Ah,	0Bh, 7,	2
 19518 00000E7B 1B0B0402                		db 1Bh,	0Bh, 4,	2
 19519 00000E7F 1C020704                		db 1Ch,	2, 7, 4
 19520 00000E83 1D0504FF                		db 1Dh,	5, 4, 0FFh
 19521 00000E87 1E0504FF                		db 1Eh,	5, 4, 0FFh
 19522 00000E8B 1F0D04FF                		db 1Fh,	0Dh, 4,	0FFh
 19523 00000E8F 200A0202                		db 20h,	0Ah, 2,	2
 19524 00000E93 210A0202                		db 21h,	0Ah, 2,	2
 19525 00000E97 220B0702                		db 22h,	0Bh, 7,	2
 19526 00000E9B 32090303                		db 32h,	9, 3, 3
 19527 00000E9F 23070401                		db 23h,	7, 4, 1
 19528 00000EA3 24010405                		db 24h,	1, 4, 5
 19529 00000EA7 FF0D05FF                		db 0FFh, 0Dh, 5, 0FFh
 19530 00000EAB 131415161718191A        ErrMap24	db 13h,	14h, 15h, 16h, 17h, 18h, 19h, 1Ah ; ...
 19531 00000EB3 1B1C1D1E1F1F1F22        		db 1Bh,	1Ch, 1Dh, 1Eh, 1Fh, 1Fh, 1Fh, 22h
 19532 00000EBB 0000                    FIRST_BUFF_ADDR	dw 0			; ...
 19533 00000EBD 0000                    SPECIAL_VERSION	dw 0			; ...
 19534 00000EBF 000000000000000000-     FAKE_COUNT	db 255 dup(0)
 19534 00000EC8 000000000000000000-
 19534 00000ED1 000000000000000000-
 19534 00000EDA 000000000000000000-
 19534 00000EE3 000000000000000000-
 19534 00000EEC 000000000000000000-
 19534 00000EF5 000000000000000000-
 19534 00000EFE 000000000000000000-
 19534 00000F07 000000000000000000-
 19534 00000F10 000000000000000000-
 19534 00000F19 000000000000000000-
 19534 00000F22 000000000000000000-
 19534 00000F2B 000000000000000000-
 19534 00000F34 000000000000000000-
 19534 00000F3D 000000000000000000-
 19534 00000F46 000000000000000000-
 19534 00000F4F 000000000000000000-
 19534 00000F58 000000000000000000-
 19534 00000F61 000000000000000000-
 19534 00000F6A 000000000000000000-
 19534 00000F73 000000000000000000-
 19534 00000F7C 000000000000000000-
 19534 00000F85 000000000000000000-
 19534 00000F8E 000000000000000000-
 19534 00000F97 000000000000000000-
 19534 00000FA0 000000000000000000-
 19534 00000FA9 000000000000000000-
 19534 00000FB2 000000000000000000-
 19534 00000FBB 000000             
 19535 00000FBE 0000                    OLD_FIRSTCLUS	dw 0			; ...
 19536 00000FC0 0000                    exec_init_SP	dw 0			; ...
 19537 00000FC2 0000                    exec_init_SS	dw 0			; ...
 19538 00000FC4 0000                    exec_init_IP	dw 0			; ...
 19539 00000FC6 0000                    exec_init_CS	dw 0			; ...
 19540 00000FC8 0000                    exec_signature	dw 0			; ...
 19541 00000FCA 0000                    exec_len_mod_512 dw 0
 19542 00000FCC 0000                    exec_pages	dw 0			; ...
 19543 00000FCE 0000                    exec_rle_count	dw 0			; ...
 19544 00000FD0 0000                    exec_par_dir	dw 0			; ...
 19545 00000FD2 0000                    exec_min_BSS	dw 0			; ...
 19546 00000FD4 0000                    exec_max_BSS	dw 0			; ...
 19547 00000FD6 0000                    exec_SS		dw 0			; ...
 19548 00000FD8 0000                    exec_SP		dw 0			; ...
 19549 00000FDA 0000                    exec_chksum	dw 0
 19550 00000FDC 0000                    exec_IP		dw 0			; ...
 19551 00000FDE 0000                    exec_CS		dw 0
 19552 00000FE0 0000                    exec_rle_table	dw 0			; ...
 19553 00000FE2 030000000000000000-     Win386_Info	db 3, 13 dup(0)		; ...
 19553 00000FEB 0000000000         
 19554 00000FF0 [F40F]                  		dw Instance_Table
 19555 00000FF2 0000                    Win386_Info_16	dw 0			; ...
 19556 00000FF4 [2200]                  Instance_Table	dw CONTPOS	; ...
 19557 00000FF6 0000                    Instance_Table_2 dw 0			; ...
 19558 00000FF8 0200                    		dw 2
 19559 00000FFA [3200]                  		dw BCON
 19560 00000FFC 0000                    		dw 0
 19561 00000FFE 0400                    		dw 4
 19562 00001000 [F901]                  		dw CARPOS
 19563 00001002 0000                    		dw 0
 19564 00001004 0601                    		dw 106h
 19565 00001006 [0003]                  		dw CHARCO
 19566 00001008 0000                    		dw 0
 19567 0000100A 0100                    		dw 1
 19568 0000100C [C00F]                  		dw exec_init_SP
 19569 0000100E 0000                    		dw 0
 19570 00001010 2200                    		dw 22h
 19571 00001012 [8900]                  		dw UMBFLAG
 19572 00001014 0000                    		dw 0
 19573 00001016 0100                    		dw 1
 19574 00001018 [8C00]                  		dw UMB_HEAD
 19575 0000101A 0000                    		dw 0
 19576 0000101C 0200                    		dw 2
 19577 0000101E 0000                    		dw 0
 19578 00001020 0000                    		dw 0
 19579 00001022 05                      Win386_DOSVars	db 5			; ...
 19580                                  					; Major	version	5
 19581 00001023 00                      		db 0			; Minor	version	0
 19582 00001024 [EC05]                  		dw SAVEDS
 19583 00001026 [EA05]                  		dw SAVEBX
 19584 00001028 [2103]                  		dw INDOS
 19585 0000102A [3E03]                  		dw USER_ID
 19586 0000102C [1503]                  		dw CritPatch
 19587 0000102E [8C00]                  		dw UMB_HEAD
 19588 00001030 00                      IsWin386	db 0			; ...
 19589 00001031 633A5C77696E613230-     VxDpath		db 'c:\wina20.386',0    ; ...
 19589 0000103A 2E33383600         
 19590 0000103F 01                      DriverLoad	db 1			; ...
 19591 00001040 00000000                BiosDataPtr	dd 0			; ...
 19592 00001044 36F6062003FF            		db 36h,	0F6h, 6, 20h, 3, 0FFh ;	Patch for Sidekick
 19593 0000104A 750C                    		db 75h,	0Ch
 19594 0000104C 36FF365803              		db 36h,	0FFh, 36h, 58h,	3
 19595 00001051 CD28                    		db 0CDh, 28h
 19596 00001053 803E200300              		db 80h,	3Eh, 20h, 3, 0	; Patch	for PortOfEntry
 19597 00001058 7537                    		db 75h,	37h
 19598 0000105A BCA00A                  		db 0BCh, 0A0h, 0Ah
 19599 0000105D 00000000                LocalSFT	dd 0			; ...
 19600 00001061 90                      		db 90h			; align	2
 19601 00001062 [FB91]                  DOSINTTABLE	dw DIVOV		; ...
 19602 00001064 0000                    		dw 0
 19603 00001066 [BF40]                  DOSINTTABLE_4	dw QUIT		; ...
 19604 00001068 0000                    		dw 0
 19605 0000106A [EB40]                  DOSINTTABLE_8	dw COMMAND	; ...
 19606 0000106C 0000                    		dw 0
 19607 0000106E [D842]                  DOSINTTABLE_12	dw ABSDRD	; ...
 19608 00001070 0000                    		dw 0
 19609 00001072 [5F43]                  DOSINTTABLE_16	dw ABSDWRT	; ...
 19610 00001074 0000                    		dw 0
 19611 00001076 [64A1]                  DOSINTTABLE_20	dw STAY_RESIDENT	; ...
 19612 00001078 0000                    		dw 0
 19613 0000107A [B044]                  DOSINTTABLE_24	dw INT2F		; ...
 19614 0000107C 0000                    		dw 0
 19615 0000107E [C640]                  DOSINTTABLE_28	dw CALL_ENTRY	; ...
 19616 00001080 0000                    		dw 0
 19617 00001082 [C540]                  		dw IRETT
 19618 00001084 0000                    		dw 0
 19619 00001086 0000                    SS_Save		dw 0			; ...
 19620 00001088 0000                    SP_Save		dw 0			; ...
 19621                                  ; ---------------------------------------------------------------------------
 19622                                  
 19623                                  ldivov:					; ...
 19624 0000108A EB03                    		jmp	short divov_cont ; i0patch
 19625                                  ; ---------------------------------------------------------------------------
 19626 0000108C E8E000                  		call	EnsureA20ON
 19627                                  
 19628                                  divov_cont:				; ...
 19629                                  		;jmp	dword [cs:DOSINTTABLE]
 19630 0000108F 2EFF2E[6210]            		jmp	far [cs:DOSINTTABLE]
 19631                                  ; ---------------------------------------------------------------------------
 19632                                  
 19633                                  lquit:					; ...
 19634 00001094 EB03                    		jmp	short quit_cont	; i20patch
 19635                                  ; ---------------------------------------------------------------------------
 19636 00001096 E8D600                  		call	EnsureA20ON
 19637                                  
 19638                                  quit_cont:				; ...
 19639                                  		;jmp	dword [cs:DOSINTTABLE_4]
 19640 00001099 2EFF2E[6610]            		jmp	far [cs:DOSINTTABLE+4]
 19641                                  ; ---------------------------------------------------------------------------
 19642                                  
 19643                                  lcommand:				; ...
 19644 0000109E EB03                    		jmp	short command_cont ; i21patch
 19645                                  ; ---------------------------------------------------------------------------
 19646 000010A0 E8CC00                  		call	EnsureA20ON
 19647                                  
 19648                                  command_cont:				; ...
 19649                                  		;jmp	dword [cs:DOSINTTABLE_8]
 19650 000010A3 2EFF2E[6A10]            		jmp	far [cs:DOSINTTABLE+8]
 19651                                  ; ---------------------------------------------------------------------------
 19652                                  
 19653                                  labsdrd:				; ...
 19654 000010A8 EB03                    		jmp	short absdrd_cont ; i25patch
 19655                                  ; ---------------------------------------------------------------------------
 19656 000010AA E8C200                  		call	EnsureA20ON
 19657                                  
 19658                                  absdrd_cont:				; ...
 19659                                  		;jmp	dword [cs:DOSINTTABLE_12]
 19660 000010AD 2EFF2E[6E10]            		jmp	far [cs:DOSINTTABLE+12]
 19661                                  ; ---------------------------------------------------------------------------
 19662                                  
 19663                                  labsdwrt:				; ...
 19664 000010B2 EB03                    		jmp	short absdwrt_cont ; i26patch
 19665                                  ; ---------------------------------------------------------------------------
 19666 000010B4 E8B800                  		call	EnsureA20ON
 19667                                  
 19668                                  absdwrt_cont:				; ...
 19669                                  		;jmp	dword [cs:DOSINTTABLE_16]
 19670 000010B7 2EFF2E[7210]            		jmp	far [cs:DOSINTTABLE+16]
 19671                                  ; ---------------------------------------------------------------------------
 19672                                  
 19673                                  lstay_resident:				; ...
 19674 000010BC EB03                    		jmp	short sr_cont	; i27patch
 19675                                  ; ---------------------------------------------------------------------------
 19676 000010BE E8AE00                  		call	EnsureA20ON
 19677                                  
 19678                                  sr_cont:				; ...
 19679                                  		;jmp	dword [cs:DOSINTTABLE_20]
 19680 000010C1 2EFF2E[7610]            		jmp	far [cs:DOSINTTABLE+20]
 19681                                  ; ---------------------------------------------------------------------------
 19682                                  
 19683                                  lint2f:					; ...
 19684 000010C6 EB03                    		jmp	short int2f_cont ; i2fpatch
 19685                                  ; ---------------------------------------------------------------------------
 19686 000010C8 E8A400                  		call	EnsureA20ON
 19687                                  
 19688                                  int2f_cont:				; ...
 19689                                  		;jmp	dword [cs:DOSINTTABLE_24]
 19690 000010CB 2EFF2E[7A10]            		jmp	far [cs:DOSINTTABLE+24]
 19691                                  ; ---------------------------------------------------------------------------
 19692                                  
 19693                                  lcall_entry:				; ...
 19694 000010D0 EB03                    		jmp	short callentry_cont ; cpmpatch
 19695                                  ; ---------------------------------------------------------------------------
 19696 000010D2 E89A00                  		call	EnsureA20ON
 19697                                  
 19698                                  callentry_cont:				; ...
 19699                                  		;jmp	dword [cs:DOSINTTABLE_28]
 19700 000010D5 2EFF2E[7E10]            		jmp	far [cs:DOSINTTABLE+28]
 19701                                  ; ---------------------------------------------------------------------------
 19702                                  
 19703                                  lirett:					; ...
 19704 000010DA CF                      		iret
 19705                                  ; ---------------------------------------------------------------------------
 19706 000010DB 00000000                DosRetAddr23	dd 0			; ...
 19707 000010DF 00000000                DosRetAddr24	dd 0			; ...
 19708 000010E3 00000000                DosRetAddr28	dd 0
 19709                                  ; ---------------------------------------------------------------------------
 19710                                  
 19711                                  LowInt23:				; ...
 19712 000010E7 2E8F06[DB10]            		pop	word [cs:DosRetAddr23]
 19713 000010EC 2E8F06[DD10]            		pop	word [cs:DosRetAddr23+2]
 19714 000010F1 CD23                    		int	23h		; DOS -	CONTROL	"C" EXIT ADDRESS
 19715                                  					; Return: return via RETF 2 with CF set
 19716                                  					; DOS will abort program with errorlevel 0
 19717                                  					; else
 19718                                  					; interrupted DOS call continues
 19719 000010F3 E87900                  		call	EnsureA20ON
 19720                                  		;jmp	[cs:DosRetAddr23]
 19721 000010F6 2EFF2E[DB10]            		jmp	far [cs:DosRetAddr23]
 19722                                  ; ---------------------------------------------------------------------------
 19723                                  
 19724                                  LowInt24:				; ...
 19725 000010FB 2E8F06[DF10]            		pop	word [cs:DosRetAddr24]
 19726 00001100 2E8F06[E110]            		pop	word [cs:DosRetAddr24+2]
 19727 00001105 CD24                    		int	24h		; DOS -	FATAL ERROR HANDLER ADDRESS
 19728                                  					; Automatically	called upon detection of unrecoverable I/O error.
 19729 00001107 E86500                  		call	EnsureA20ON
 19730                                  		;jmp	[cs:DosRetAddr24]
 19731 0000110A 2EFF2E[DF10]            		jmp	far [cs:DosRetAddr24]
 19732                                  ; ---------------------------------------------------------------------------
 19733                                  
 19734                                  LowInt28:				; ...
 19735 0000110F CD28                    		int	28h		; DOS 2+ internal - KEYBOARD BUSY LOOP
 19736 00001111 E85B00                  		call	EnsureA20ON
 19737 00001114 CB                      		retf
 19738                                  ; ---------------------------------------------------------------------------
 19739                                  
 19740                                  disa20_xfer:				; ...
 19741 00001115 E83F00                  		call	XMMDisableA20
 19742 00001118 FA                      		cli
 19743 00001119 2EC606[2103]00          		mov	byte [cs:INDOS], 0
 19744 0000111F 8ED0                    		mov	ss, ax
 19745 00001121 89FC                    		mov	sp, di
 19746 00001123 FB                      		sti
 19747 00001124 1E                      		push	ds
 19748 00001125 56                      		push	si
 19749 00001126 8EC2                    		mov	es, dx
 19750 00001128 8EDA                    		mov	ds, dx
 19751 0000112A 89D8                    		mov	ax, bx
 19752 0000112C CB                      		retf
 19753                                  ; ---------------------------------------------------------------------------
 19754                                  
 19755                                  disa20_iret:				; ...
 19756 0000112D E82700                  		call	XMMDisableA20
 19757 00001130 FE0E[2103]              		dec	byte [INDOS]
 19758 00001134 8E16[8605]              		mov	ss, word [USER_SS]
 19759 00001138 8B26[8405]              		mov	sp, [USER_SP]
 19760 0000113C 89E5                    		mov	bp, sp
 19761 0000113E 884600                  		mov	[bp+0],	al
 19762 00001141 A1[F205]                		mov	ax, [NSP]
 19763 00001144 A3[8405]                		mov	[USER_SP], ax
 19764 00001147 A1[F005]                		mov	ax, [NSS]
 19765 0000114A A3[8605]                		mov	[USER_SS], ax
 19766 0000114D 58                      		pop	ax
 19767 0000114E 5B                      		pop	bx
 19768 0000114F 59                      		pop	cx
 19769 00001150 5A                      		pop	dx
 19770 00001151 5E                      		pop	si
 19771 00001152 5F                      		pop	di
 19772 00001153 5D                      		pop	bp
 19773 00001154 1F                      		pop	ds
 19774 00001155 07                      		pop	es
 19775 00001156 CF                      		iret
 19776                                  
 19777                                  ; =============== S U B	R O U T	I N E =======================================
 19778                                  
 19779                                  XMMDisableA20:	; ...
 19780 00001157 53                      		push	bx
 19781 00001158 50                      		push	ax
 19782 00001159 B406                    		mov	ah, 6
 19783                                  		;call	[cs:XMMcontrol]
 19784 0000115B 2EFF1E[6311]            		call	far [cs:XMMcontrol]
 19785 00001160 58                      		pop	ax
 19786 00001161 5B                      		pop	bx
 19787 00001162 C3                      		retn
 19788                                  
 19789                                  ; ---------------------------------------------------------------------------
 19790 00001163 00000000                XMMcontrol	dd 0			; ...
 19791 00001167 80000000                LowMemory	dd 80h			; ...
 19792 0000116B 9000FFFF                HighMemory	dd 0FFFF0090h		; ...
 19793                                  
 19794                                  ; =============== S U B	R O U T	I N E =======================================
 19795                                  
 19796                                  
 19797                                   EnsureA20ON:	; ...
 19798 0000116F 9C                      		pushf
 19799 00001170 1E                      		push	ds
 19800 00001171 06                      		push	es
 19801 00001172 51                      		push	cx
 19802 00001173 56                      		push	si
 19803 00001174 57                      		push	di
 19804 00001175 2EC536[6711]            		lds	si, [cs:LowMemory]
 19805 0000117A 2EC43E[6B11]            		les	di, [cs:HighMemory]
 19806 0000117F B90400                  		mov	cx, 4
 19807 00001182 FC                      		cld
 19808 00001183 F3A7                    		repe cmpsw
 19809 00001185 7407                    		jz	short EA20_OFF
 19810                                  
 19811                                  EA20_RET:				; ...
 19812 00001187 5F                      		pop	di
 19813 00001188 5E                      		pop	si
 19814 00001189 59                      		pop	cx
 19815 0000118A 07                      		pop	es
 19816 0000118B 1F                      		pop	ds
 19817 0000118C 9D                      		popf
 19818 0000118D C3                      		retn
 19819                                  ; ---------------------------------------------------------------------------
 19820                                  
 19821                                  EA20_OFF:				; ...
 19822 0000118E 53                      		push	bx
 19823 0000118F 50                      		push	ax
 19824 00001190 8CD0                    		mov	ax, ss
 19825 00001192 2EA3[8610]              		mov	[cs:SS_Save], ax
 19826 00001196 2E8926[8810]            		mov	[cs:SP_Save], sp
 19827 0000119B 8CC8                    		mov	ax, cs
 19828 0000119D 8ED0                    		mov	ss, ax
 19829 0000119F BC[A007]                		mov	sp, AUXSTACK
 19830 000011A2 B405                    		mov	ah, 5		; XMM_LOCAL_ENABLE_A20
 19831                                  		;call	[cs:XMMcontrol]
 19832 000011A4 2EFF1E[6311]            		call	far [cs:XMMcontrol]
 19833 000011A9 09C0                    		or	ax, ax
 19834 000011AB 740F                    		jz	short XMMerror
 19835 000011AD 2EA1[8610]              		mov	ax, [cs:SS_Save]
 19836 000011B1 8ED0                    		mov	ss, ax
 19837 000011B3 2E8B26[8810]            		mov	sp, [cs:SP_Save]
 19838 000011B8 58                      		pop	ax
 19839 000011B9 5B                      		pop	bx
 19840 000011BA EBCB                    		jmp	short EA20_RET
 19841                                  ; ---------------------------------------------------------------------------
 19842                                  
 19843                                  XMMerror:				; ...
 19844 000011BC B40F                    		mov	ah, 0Fh
 19845 000011BE CD10                    		int	10h		; - VIDEO - SELECT DISPLAY PAGE
 19846                                  					; AL = display page, 0-7  for modes 0 &	1, 0-3	for modes 2 & 3
 19847 000011C0 3C07                    		cmp	al, 7
 19848 000011C2 7406                    		jz	short XMMcont
 19849 000011C4 30E4                    		xor	ah, ah
 19850 000011C6 B002                    		mov	al, 2
 19851 000011C8 CD10                    		int	10h		; - VIDEO -
 19852                                  
 19853                                  XMMcont:				; ...
 19854 000011CA B405                    		mov	ah, 5
 19855 000011CC 30C0                    		xor	al, al
 19856 000011CE CD10                    		int	10h		; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
 19857                                  					; AL = character, BH = display page (alpha modes)
 19858                                  					; BL = foreground color	(graphics modes)
 19859 000011D0 BE[B812]                		mov	si, XMMERRMSG ; "\r\nA20 Hardware Error\r\n$"
 19860 000011D3 0E                      		push	cs
 19861 000011D4 1F                      		pop	ds
 19862 000011D5 FC                      		cld
 19863                                  
 19864                                  XMMprnt:				; ...
 19865 000011D6 AC                      		lodsb
 19866 000011D7 3C24                    		cmp	al, '$'
 19867 000011D9 7409                    		jz	short XMMStall
 19868 000011DB B40E                    		mov	ah, 0Eh
 19869 000011DD BB0700                  		mov	bx, 7
 19870 000011E0 CD10                    		int	10h		; - VIDEO -
 19871 000011E2 EBF2                    		jmp	short XMMprnt
 19872                                  ; ---------------------------------------------------------------------------
 19873                                  
 19874                                  XMMStall:				; ...
 19875 000011E4 FB                      		sti
 19876 000011E5 EBFD                    		jmp	short XMMStall
 19877                                  
 19878                                  ; ---------------------------------------------------------------------------
 19879 000011E7 7000                    OldInstanceJunk	dw 70h			; ...
 19880 000011E9 0000                    		dw 0
 19881 000011EB 0600                    		dw 6
 19882 000011ED 0000                    OldInstanceJunk_6 dw 0			; ...
 19883 000011EF [2200]                  		dw CONTPOS
 19884 000011F1 0200                    		dw 2
 19885 000011F3 0000                    		dw 0
 19886 000011F5 [3200]                  		dw BCON
 19887 000011F7 0400                    		dw 4
 19888 000011F9 0000                    		dw 0
 19889 000011FB [F901]                  		dw CARPOS
 19890 000011FD 0601                    		dw 106h
 19891 000011FF 0000                    		dw 0
 19892 00001201 [0003]                  		dw CHARCO
 19893 00001203 0100                    		dw 1
 19894 00001205 0000                    		dw 0
 19895 00001207 [C00F]                  		dw exec_init_SP
 19896 00001209 2200                    		dw 34
 19897 0000120B 7000                    		dw 70h
 19898 0000120D 0C00                    		dw 0Ch			; DOSBIODATASEG:ALTAH
 19899 0000120F 0100                    		dw 1
 19900 00001211 00                      DosHasHMA	db 0			; ...
 19901 00001212 0000                    FixExePatch	dw 0			; ...
 19902 00001214 0000                    RationalPatchPtr dw 0			; ...
 19903                                  ; ---------------------------------------------------------------------------
 19904                                  
 19905                                  RatBugCode:				; ...
 19906 00001216 51                      		push	cx
 19907 00001217 8B0E[1000]              		mov	cx, [FCBLRU]	; [10h]
 19908                                  
 19909                                  rbc_loop:				; ...
 19910 0000121B E2FE                    		loop	rbc_loop
 19911 0000121D 59                      		pop	cx
 19912 0000121E CB                      		retf
 19913                                  ; ---------------------------------------------------------------------------
 19914 0000121F 000000000000000000-     UmbSave1	db 11 dup(0)		; ...
 19914 00001228 0000               
 19915 0000122A 0000000000000000        COUNTRY_CDPG	db 0, 0, 0, 0, 0, 0, 0,	0 ; ...
 19916 00001232 5C434F554E5452592E-     		db '\COUNTRY.SYS',0
 19916 0000123B 53595300           
 19917 0000123F 000000000000000000-     		db 51 dup(0)
 19917 00001248 000000000000000000-
 19917 00001251 000000000000000000-
 19917 0000125A 000000000000000000-
 19917 00001263 000000000000000000-
 19917 0000126C 000000000000       
 19918 00001272 B501                    		dw 437
 19919 00001274 0600                    		dw 6
 19920 00001276 02                      COUNTRY_CDPG_76	db 2			; ...
 19921 00001277 [AD0A]                  		dw UCASE_TAB
 19922 00001279 0000                    		dw 0
 19923 0000127B 04                      		db 4
 19924 0000127C [2F0B]                  		dw FILE_UCASE_TAB
 19925 0000127E 0000                    		dw 0
 19926 00001280 05                      		db 5
 19927 00001281 [B10B]                  		dw FILE_CHAR_TAB
 19928 00001283 0000                    		dw 0
 19929 00001285 06                      		db 6
 19930 00001286 [E10B]                  		dw COLLATE_TAB
 19931 00001288 0000                    		dw 0
 19932 0000128A 07                      		db 7
 19933 0000128B [E30C]                  		dw DBCS_TAB
 19934 0000128D 0000                    		dw 0
 19935 0000128F 01                      		db 1
 19936 00001290 2600                    		dw 38			; NEW_COUNTRY_SIZE
 19937 00001292 0100                    		dw 1
 19938 00001294 B501                    		dw 437
 19939 00001296 0000                    COUNTRY_CDPG_108 dw 0			; ...
 19940 00001298 2400000000              		db '$',0,0,0,0
 19941 0000129D 2C002E002D003A00        		db ',',0,'.',0,'-',0,':',0
 19942 000012A5 00                      		db 0
 19943 000012A6 02                      		db 2
 19944 000012A7 00                      		db 0
 19945 000012A8 [F50C]                  		dw MAP_CASE
 19946 000012AA 0000                    		dw 0
 19947 000012AC 2C00                    		db ',',0
 19948 000012AE 000000000000000000-     		dw 0, 0, 0, 0, 0
 19948 000012B7 00                 
 19949 000012B8 0D0A                    XMMERRMSG	db 0Dh,0Ah		; ...
 19950 000012BA 413230204861726477-     		db 'A20 Hardware Error',0Dh,0Ah,'$'
 19950 000012C3 617265204572726F72-
 19950 000012CC 0D0A24             
 19951 000012CF 36C536                  DOSP1_ID	db 36h,	0C5h, 36h
 19952 000012D2 3605C57407E8            DOSP1_THISSFT	db 36h,	5, 0C5h, 74h, 7, 0E8h
 19953 000012D8 90                      		db 90h
 19954 000012D9 90                      		db 90h
 19955 000012DA 36C536                  DOSP12_ID	db 36h,	0C5h, 36h
 19956 000012DD 3605C57407E8            DOSP12_THISSFT	db 36h,	5, 0C5h, 74h, 7, 0E8h
 19957 000012E3 510657BA                DOSP3_ID	db 51h,	6, 57h,	0BAh
 19958 000012E7 2902E8                  DOSP3_CONBUF	db 29h,	2, 0E8h
 19959 000012EA 9AE35F07                		db 9Ah,	0E3h, 5Fh, 7
 19960 000012EE 59                      		db 59h
 19961 000012EF 51                      DOSP5_ID	db 51h
 19962 000012F0 AC3C1A7405              		db 0ACh, 3Ch, 1Ah, 74h,	5
 19963 000012F5 E8                      		db 0E8h
 19964 000012F6 2E8C1E                  DOSP7_ID	db 2Eh,	8Ch, 1Eh
 19965 000012F9 7E05                    DOSP7_SAVEDS	db 7Eh,	5
 19966 000012FB 2E891E                  		db 2Eh,	89h, 1Eh
 19967 000012FE 7C05                    DOSP7_SAVEBX	db 7Ch,	5
 19968 00001300 8CCB                    		db 8Ch,	0CBh
 19969 00001302 8EDB                    		db 8Eh,	0DBh
 19970 00001304 FE06                    		db 0FEh, 6
 19971 00001306 CF02                    DOSP7_INDOS	db 0CFh, 2
 19972 00001308 33C0                    		db 33h,	0C0h
 19973 0000130A 50                      DOSP8_ID	db 50h
 19974 0000130B 36A1                    		db 36h,	0A1h
 19975 0000130D EA02                    DOSP8_USER_ID	db 0EAh, 2
 19976 0000130F 263B45                  		db 26h,	3Bh, 45h
 19977 00001312 2F58                    		db 2Fh,	58h
 19978 00001314 061F                    DOSP10_ID	db 6, 1Fh
 19979 00001316 8BDF                    DOSP10_LOC	db 8Bh,	0DFh
 19980 00001318 33C08BD0E8              		db 33h,	0C0h, 8Bh, 0D0h, 0E8h
 19981 0000131D DF0E                    		db 0DFh, 0Eh
 19982 0000131F 1E36C5363605E8AF0E      		db 1Eh,	36h, 0C5h, 36h,	36h, 5,	0E8h, 0AFh, 0Eh
 19983 00001328 8BD7B486368B3E          		db 8Bh,	0D7h, 0B4h, 86h, 36h, 8Bh, 3Eh
 19984 0000132F 0903                    		db 9, 3
 19985 00001331 F7C700807419E84717      		db 0F7h, 0C7h, 0, 80h, 74h, 19h, 0E8h, 47h, 17h
 19986 0000133A 8BFA0AC074103C0374-     		db 8Bh,	0FAh, 0Ah, 0C0h, 74h, 10h, 3Ch,	3, 74h,	3
 19986 00001343 03                 
 19987 00001344 1FEBCF                  		db 1Fh,	0EBh, 0CFh
 19988 00001347 5F                      		db 5Fh
 19989 00001348 36C43E3605E9A104        		db 36h,	0C4h, 3Eh, 36h,	5, 0E9h, 0A1h, 4
 19990 00001350 5F8BFA                  		db 5Fh,	8Bh, 0FAh
 19991 00001353 AC                      DOSP13_ID	db 0ACh
 19992 00001354 3C24                    		db 3Ch,	24h
 19993 00001356 7408                    		db 74h,	8
 19994 00001358 B307                    		db 0B3h, 7
 19995 0000135A B40E                    		db 0B4h, 0Eh
 19996 0000135C CD10                    		db 0CDh, 10h
 19997 0000135E EBF3                    		db 0EBh, 0F3h
 19998 00001360 EBFE                    		db 0EBh, 0FEh
 19999                                  
 20000                                  ; 05/12/2022 - Retro DOS v4.0 (Modified MSDOS 5.0 MSDOS.SYS)
 20001                                  DOSDATAEND equ $
 20002                                  DOSDATASIZE equ DOSDATAEND - DOSDATASTART ; = 4962 for MSDOS 5.0 MSDOS.SYS
 20003                                  MSDAT001E equ DOSDATAEND - DOSDATASTART
 20004                                  
 20005                                  ;DOSDATALAST ENDS
 20006                                  
 20007                                  ; Retro DOS v4.0 by Erdogan Tan (Redevelopment of MSDOS 5.0 KERNEL via NASM)
 20008                                  ; DECEMBER 2022, ISTANBUL - TURKIYE.
 20009                                  ;============================================================================
 20010                                  ;	END
 20011                                  ;============================================================================
 20012                                  ; Retro DOS v4.0 by Erdogan Tan (Redevelopment of MSDOS 6.21 KERNEL via NASM)
 20013                                  ; -----------------------------
 20014                                  ; MAY 2019, ISTANBUL - TURKIYE.
