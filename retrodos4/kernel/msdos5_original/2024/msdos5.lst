     1                                  ; MSDOS.SYS
     2                                  ; Original MSDOS 5.0 Kernel (Source Code in NASM syntax)
     3                                  ;
     4                                  ; - Assembler: NASM 2.15 - 
     5                                  ; ((nasm msdos5.asm -l msdos5.lst -o MSDOS5.BIN -Z error.txt))
     6                                  ;				  -o MSDOS.SYS
     7                                  ;	
     8                                  ; (Disassembled and re-written by Erdogan Tan for finding the reason of
     9                                  ;  the AutoCAD R12 running problem of Retro DOS v4.0-v4.1-v4.2-v5.0 Kernels)
    10                                  ; 
    11                                  ; Erdogan Tan - 09/07/2024 - Istanbul
    12                                  ;
    13                                  ; +-------------------------------------------------------------------------+
    14                                  ; |   This file	has been generated by The Interactive Disassembler (IDA)    |
    15                                  ; |	      Copyright	(c) 2013 Hex-Rays, <support@hex-rays.com>	    |
    16                                  ; +-------------------------------------------------------------------------+
    17                                  ;
    18                                  ; Input	MD5   :	926BAF897B78FE053F29FC8FF8CFD7C5
    19                                  ; Input	CRC32 :	64D3C385
    20                                  
    21                                  ; ---------------------------------------------------------------------------
    22                                  ; File Name   :	C:\Users\Erdoðan\Desktop\MSDOS5.SYS
    23                                  ; Format      :	Binary file
    24                                  ; Base Address:	0000h Range: 0000h - 9212h Loaded length: 9212h
    25                                  
    26                                  ; ----------------------------------------------------------------------------
    27                                  ; 06/12/2022 - Retro DOS v4.0 (Modified MSDOS 5.0 MSDOS.SYS)
    28                                  ; ----------------------------------------------------------------------------
    29                                  
    30                                  segment .code vstart=3DD0h ; 06/12/2022
    31                                  								
    32                                  ; ============================================================================
    33                                  
    34                                  	; 05/12/2022 - RetroDOS v4.0 (Modified MSDOS 5.0 MSDOS.SYS)
    35                                  	PARASTART equ 3DD0h ; BIOSDATASTART+BIOSDATASIZE
    36                                  			    ; +BIOSCODESIZE+DOSDATASIZE (rounded up)
    37                                  
    38                                  	;[ORG PARASTART]	
    39                                  
    40                                  _$STARTCODE:				; ...
    41 00000000 E9A679                  		jmp	DOSINIT
    42                                  ; ---------------------------------------------------------------------------
    43 00000003 [0000]                  		dw _$STARTCODE		; PARASTART
    44 00000005 7000                    BioDataSeg	dw 70h
    45 00000007 0000                    DosDSeg		dw 0			; ...
    46 00000009 05                      MSMAJOR		db 5			; MAJOR_VERSION
    47 0000000A 00                      MSMINOR		db 0			; MINOR_VERSION
    48 0000000B 38020102                I21_MAP_E_TAB	db 38h,	2, 1, 2		; ...
    49 0000000F 3903030205              		db 39h,	3, 3, 2, 5
    50 00000014 3A0410030205            		db 3Ah,	4, 10h,	3, 2, 5
    51 0000001A 3B020203                		db 3Bh,	2, 2, 3
    52 0000001E 3C0403020405            		db 3Ch,	4, 3, 2, 4, 5
    53 00000024 3D0603020C041A05        		db 3Dh,	6, 3, 2, 0Ch, 4, 1Ah, 5
    54 0000002C 3E0106                  		db 3Eh,	1, 6
    55 0000002F 3F020605                		db 3Fh,	2, 6, 5
    56 00000033 40020605                		db 40h,	2, 6, 5
    57 00000037 4103030205              		db 41h,	3, 3, 2, 5
    58 0000003C 42020601                		db 42h,	2, 6, 1
    59 00000040 430403020105            		db 43h,	4, 3, 2, 1, 5
    60 00000046 44050F0D010605          		db 44h,	5, 0Fh,	0Dh, 1,	6, 5
    61 0000004D 45020604                		db 45h,	2, 6, 4
    62 00000051 46020604                		db 46h,	2, 6, 4
    63 00000055 47021A0F                		db 47h,	2, 1Ah,	0Fh
    64 00000059 48020708                		db 48h,	2, 7, 8
    65 0000005D 49020709                		db 49h,	2, 7, 9
    66 00000061 4A03070908              		db 4Ah,	3, 7, 9, 8
    67 00000066 4B08030102040B0A08-     		db 4Bh,	8, 3, 1, 2, 4, 0Bh, 0Ah, 8, 5
    67 0000006F 05                 
    68 00000070 4E03030212              		db 4Eh,	3, 3, 2, 12h
    69 00000075 4F0112                  		db 4Fh,	1, 12h
    70 00000078 56051103021005          		db 56h,	5, 11h,	3, 2, 10h, 5
    71 0000007F 570406080D01            		db 57h,	4, 6, 8, 0Dh, 1
    72 00000085 580101                  		db 58h,	1, 1
    73 00000088 5A0403020405            		db 5Ah,	4, 3, 2, 4, 5
    74 0000008E 5B055003020405          		db 5Bh,	5, 50h,	3, 2, 4, 5
    75 00000095 5C0406012421            		db 5Ch,	4, 6, 1, 24h, 21h
    76 0000009B 65020102                		db 65h,	2, 1, 2
    77 0000009F 66020102                		db 66h,	2, 1, 2
    78 000000A3 680106                  		db 68h,	1, 6
    79 000000A6 6703040801              		db 67h,	3, 4, 8, 1
    80 000000AB 6C0A03020C0450081A-     		db 6Ch,	0Ah, 3,	2, 0Ch,	4, 50h,	8, 1Ah,	0Dh, 1,	5
    80 000000B4 0D0105             
    81 000000B7 69040F0D0105FF          		db 69h,	4, 0Fh,	0Dh, 1,	5, 0FFh
    82 000000BE [C763]                  DISPATCH	dw _$ABORT	; ...
    83 000000C0 [FC16]                  		dw _$STD_CON_INPUT
    84 000000C2 [0517]                  		dw _$STD_CON_OUTPUT
    85 000000C4 [BB17]                  		dw _$STD_AUX_INPUT
    86 000000C6 [D817]                  		dw _$STD_AUX_OUTPUT
    87 000000C8 [DE17]                  		dw _$STD_PRINTER_OUTPUT
    88 000000CA [3816]                  		dw _$RAW_CON_IO
    89 000000CC [6716]                  		dw _$RAW_CON_INPUT
    90 000000CE [D613]                  		dw _$STD_CON_INPUT_NO_ECHO
    91 000000D0 [3014]                  		dw _$STD_CON_STRING_OUTPUT
    92 000000D2 [3C14]                  		dw _$STD_CON_STRING_INPUT
    93 000000D4 [F217]                  		dw _$STD_CON_INPUT_STATUS
    94 000000D6 [FC17]                  		dw _$STD_CON_INPUT_FLUSH
    95 000000D8 [C40F]                  		dw _$DISK_RESET
    96 000000DA [9B0E]                  		dw _$SET_DEFAULT_DRIVE
    97 000000DC [E81E]                  		dw _$FCB_OPEN
    98 000000DE [A418]                  		dw _$FCB_CLOSE
    99 000000E0 [FB1F]                  		dw _$DIR_SEARCH_FIRST
   100 000000E2 [8F20]                  		dw _$DIR_SEARCH_NEXT
   101 000000E4 [4118]                  		dw _$FCB_DELETE
   102 000000E6 [E71F]                  		dw _$FCB_SEQ_READ
   103 000000E8 [EC1F]                  		dw _$FCB_SEQ_WRITE
   104 000000EA [CD1F]                  		dw _$FCB_CREATE
   105 000000EC [1519]                  		dw _$FCB_RENAME
   106 000000EE [3006]                  		dw NO_OP
   107 000000F0 [960E]                  		dw _$GET_DEFAULT_DRIVE
   108 000000F2 [8B0E]                  		dw _$SET_DMA
   109 000000F4 [500F]                  		dw _$SLEAZEFUNC
   110 000000F6 [520F]                  		dw _$SLEAZEFUNCDL
   111 000000F8 [3006]                  		dw NO_OP
   112 000000FA [3006]                  		dw NO_OP
   113 000000FC [940F]                  		dw _$GET_DEFAULT_DPB
   114 000000FE [3006]                  		dw NO_OP
   115 00000100 [F11F]                  		dw _$FCB_RANDOM_READ
   116 00000102 [F61F]                  		dw _$FCB_RANDOM_WRITE
   117 00000104 [5518]                  		dw _$GET_FCB_FILE_LENGTH
   118 00000106 [2918]                  		dw _$GET_FCB_POSITION
   119 00000108 [BD0E]                  		dw _$SET_INTERRUPT_VECTOR
   120 0000010A [D210]                  		dw _$CREATE_PROCESS_DATA_BLOCK
   121 0000010C [E21F]                  		dw _$FCB_RANDOM_READ_BLOCK
   122 0000010E [DD1F]                  		dw _$FCB_RANDOM_WRITE_BLOCK
   123 00000110 [450F]                  		dw _$PARSE_FILE_DESCRIPTOR
   124 00000112 [5C0A]                  		dw _$GET_DATE
   125 00000114 [790A]                  		dw _$SET_DATE
   126 00000116 [990A]                  		dw _$GET_TIME
   127 00000118 [AA0A]                  		dw _$SET_TIME
   128 0000011A [690C]                  		dw _$SET_VERIFY_ON_WRITE
   129 0000011C [770E]                  		dw _$GET_DMA
   130 0000011E [3F0C]                  		dw _$GET_VERSION
   131 00000120 [6B63]                  		dw _$KEEP_PROCESS
   132 00000122 [960F]                  		dw _$GET_DPB
   133 00000124 [7502]                  		dw _$SET_CTRL_C_TRAPPING
   134 00000126 [7C0F]                  		dw _$GET_INDOS_FLAG
   135 00000128 [AD0E]                  		dw _$GET_INTERRUPT_VECTOR
   136 0000012A [4E0E]                  		dw _$GET_DRIVE_FREESPACE
   137 0000012C [EC0E]                  		dw _$CHAR_OPER
   138 0000012E [700C]                  		dw _$INTERNATIONAL
   139 00000130 [FD22]                  		dw _$MKDIR
   140 00000132 [4522]                  		dw _$RMDIR
   141 00000134 [8122]                  		dw _$CHDIR
   142 00000136 [B471]                  		dw _$CREAT
   143 00000138 [DD70]                  		dw _$OPEN
   144 0000013A [FB68]                  		dw _$CLOSE
   145 0000013C [0A6A]                  		dw _$READ
   146 0000013E [706A]                  		dw _$WRITE
   147 00000140 [0672]                  		dw _$UNLINK
   148 00000142 [756A]                  		dw _$LSEEK
   149 00000144 [C171]                  		dw _$CHMOD
   150 00000146 [5E23]                  		dw _$IOCTL
   151 00000148 [2B6B]                  		dw _$DUP
   152 0000014A [4B6B]                  		dw _$DUP2
   153 0000014C [CC21]                  		dw _$CURRENT_DIR
   154 0000014E [5E64]                  		dw _$ALLOC
   155 00000150 [E365]                  		dw _$DEALLOC
   156 00000152 [BF65]                  		dw _$SETBLOCK
   157 00000154 [345D]                  		dw _$EXEC
   158 00000156 [A363]                  		dw _$EXIT
   159 00000158 [2A5D]                  		dw _$WAIT
   160 0000015A [0221]                  		dw _$FIND_FIRST
   161 0000015C [5A21]                  		dw _$FIND_NEXT
   162 0000015E [CC02]                  		dw _$SET_CURRENT_PDB
   163 00000160 [D802]                  		dw _$GET_CURRENT_PDB
   164 00000162 [880F]                  		dw _$GET_IN_VARS
   165 00000164 [F90F]                  		dw _$SETDPB
   166 00000166 [640C]                  		dw _$GET_VERIFY_ON_WRITE
   167 00000168 [C110]                  		dw _$DUP_PDB
   168 0000016A [2C72]                  		dw _$RENAME
   169 0000016C [DD6A]                  		dw _$FILE_TIMES
   170 0000016E [1966]                  		dw _$ALLOCOPER
   171 00000170 [000F]                  		dw _$GetExtendedError
   172 00000172 [B772]                  		dw _$CreateTempFile
   173 00000174 [9F72]                  		dw _$CreateNewFile
   174 00000176 [A674]                  		dw _$LockOper
   175 00000178 [0267]                  		dw _$ServerCall
   176 0000017A [1A6C]                  		dw _$UserOper
   177 0000017C [7B6B]                  		dw _$AssignOper
   178 0000017E [7670]                  		dw _$NameTrans
   179 00000180 [3006]                  		dw NO_OP
   180 00000182 [D802]                  		dw _$GET_CURRENT_PDB
   181 00000184 [2D0F]                  		dw _$ECS_Call
   182 00000186 [E402]                  		dw _$SET_PRINTER_FLAG
   183 00000188 [FB0C]                  		dw _$GetExtCntry
   184 0000018A [F90D]                  		dw _$GetSetCdPg
   185 0000018C [4869]                  		dw _$ExtHandle
   186 0000018E [2E69]                  		dw _$COMMIT
   187 00000190 [DA11]                  		dw _$GSetMediaID
   188 00000192 [2E69]                  		dw _$COMMIT
   189 00000194 [3006]                  		dw NO_OP
   190 00000196 [5173]                  		dw _$Extended_Open
   191 00000198 [ED06]                  FOO		dw Leave2F	; ...
   192 0000019A [9C01]                  Dtab		dw DOSTable	; ...
   193 0000019C 30                      DOSTable	db 48			; ...
   194 0000019D [3109]                  		dw DOSInstall
   195 0000019F [4A30]                  		dw DOS_CLOSE
   196 000001A1 [E10E]                  		dw RECSET
   197 000001A3 [2B09]                  		dw DOSGetGroup
   198 000001A5 [3B52]                  		dw PATHCHRCMP
   199 000001A7 [0717]                  		dw OUTT
   200 000001A9 [1755]                  		dw NET_I24_ENTRY
   201 000001AB [BF5A]                  		dw PLACEBUF
   202 000001AD [4B31]                  		dw FREE_SFT
   203 000001AF [755C]                  		dw BUFWRITE
   204 000001B1 [5D75]                  		dw SHARE_VIOLATION
   205 000001B3 [862D]                  		dw SHARE_ERROR
   206 000001B5 [6F2D]                  		dw SET_SFT_MODE
   207 000001B7 [F10A]                  		dw DATE16
   208 000001B9 [4C12]                  		dw Idle
   209 000001BB [B85A]                  		dw SCANPLACE
   210 000001BD [4C12]                  		dw Idle
   211 000001BF [1512]                  		dw StrCpy
   212 000001C1 [2D12]                  		dw StrLen
   213 000001C3 [E651]                  		dw UCase
   214 000001C5 [FC5A]                  		dw POINTCOMP
   215 000001C7 [4C5C]                  		dw CHECKFLUSH
   216 000001C9 [7468]                  		dw SFFromSFN
   217 000001CB [E36C]                  		dw GetCDSFromDrv
   218 000001CD [A504]                  		dw Get_User_Stack
   219 000001CF [8C6C]                  		dw GETTHISDRV
   220 000001D1 [9B70]                  		dw DriveFromText
   221 000001D3 [9B0B]                  		dw SETYEAR
   222 000001D5 [350C]                  		dw DSUM
   223 000001D7 [8F0B]                  		dw DSLIDE
   224 000001D9 [F311]                  		dw StrCmp
   225 000001DB [CD6B]                  		dw InitCDS
   226 000001DD [3D68]                  		dw pJFNFromHandle
   227 000001DF [7670]                  		dw _$NameTrans
   228 000001E1 [5706]                  		dw CAL_LK
   229 000001E3 [3D43]                  		dw DEVNAME
   230 000001E5 [4C12]                  		dw Idle
   231 000001E7 [3B12]                  		dw DStrLen
   232 000001E9 [F012]                  		dw NLS_OPEN
   233 000001EB [FB68]                  		dw _$CLOSE
   234 000001ED [F612]                  		dw NLS_LSEEK
   235 000001EF [0A6A]                  		dw _$READ
   236 000001F1 [B012]                  		dw FastInit
   237 000001F3 [3313]                  		dw NLS_IOCTL
   238 000001F5 [2213]                  		dw GetDevList
   239 000001F7 [5013]                  		dw NLS_GETEXT
   240 000001F9 [5513]                  		dw MSG_RETRIEVAL
   241 000001FB [3006]                  		dw NO_OP
   242 000001FD 4D5320444F53205665-     ms_copyright	db 'MS DOS Version 5.00 (C)Copyright 1981-1991 Microsoft Corp License'
   242 00000206 7273696F6E20352E30-
   242 0000020F 3020284329436F7079-
   242 00000218 726967687420313938-
   242 00000221 312D31393931204D69-
   242 0000022A 63726F736F66742043-
   242 00000233 6F7270204C6963656E-
   242 0000023C 7365               
   243 0000023E 64204D617465726961-     		db 'd Material - Property of Microsoft All rights reserved '
   243 00000247 6C202D2050726F7065-
   243 00000250 727479206F66204D69-
   243 00000259 63726F736F66742041-
   243 00000262 6C6C20726967687473-
   243 0000026B 207265736572766564-
   243 00000274 20                 
   244                                  ; ---------------------------------------------------------------------------
   245                                  
   246                                  _$SET_CTRL_C_TRAPPING:			; ...
   247 00000275 3C06                    		cmp	al, 6
   248 00000277 7603                    		jbe	short scct_1
   249 00000279 B0FF                    		mov	al, 0FFh
   250 0000027B CF                      		iret
   251                                  ; ---------------------------------------------------------------------------
   252                                  
   253                                  scct_1:					; ...
   254 0000027C 1E                      		push	ds
   255 0000027D 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   256 00000282 50                      		push	ax
   257 00000283 56                      		push	si
   258 00000284 BE[3703]                		mov	si, CNTCFLAG
   259 00000287 30E4                    		xor	ah, ah
   260 00000289 09C0                    		or	ax, ax
   261 0000028B 7504                    		jnz	short scct_2
   262 0000028D 8A14                    		mov	dl, [si]
   263 0000028F EB35                    		jmp	short scct_6	; scct_9s
   264                                  ; ---------------------------------------------------------------------------
   265                                  
   266                                  scct_2:					; ...
   267 00000291 48                      		dec	ax
   268 00000292 7507                    		jnz	short scct_3
   269 00000294 80E201                  		and	dl, 1
   270 00000297 8814                    		mov	[si], dl
   271 00000299 EB2B                    		jmp	short scct_6	; scct_9s
   272                                  ; ---------------------------------------------------------------------------
   273                                  
   274                                  scct_3:					; ...
   275 0000029B 48                      		dec	ax
   276 0000029C 7507                    		jnz	short scct_4
   277 0000029E 80E201                  		and	dl, 1
   278 000002A1 8614                    		xchg	dl, [si]
   279 000002A3 EB21                    		jmp	short scct_6	; scct_9s
   280                                  ; ---------------------------------------------------------------------------
   281                                  
   282                                  scct_4:					; ...
   283 000002A5 83F803                  		cmp	ax, 3
   284 000002A8 7506                    		jnz	short scct_5
   285 000002AA 8A16[6900]              		mov	dl, [BOOTDRIVE]
   286 000002AE EB16                    		jmp	short scct_6	; scct_9s
   287                                  ; ---------------------------------------------------------------------------
   288                                  
   289                                  scct_5:					; ...
   290 000002B0 83F804                  		cmp	ax, 4
   291 000002B3 7511                    		jnz	short scct_6	; scct_9s
   292 000002B5 BB0500                  		mov	bx, 5		; (MINOR_VERSION<<8)+MAJOR_VERSION
   293 000002B8 B200                    		mov	dl, 0		; DOSREVNM
   294 000002BA 30F6                    		xor	dh, dh
   295 000002BC 803E[1112]00            		cmp	byte [DosHasHMA],	0
   296 000002C1 7403                    		jz	short scct_6
   297 000002C3 80CE10                  		or	dh, 10h		; DOSINHMA
   298                                  
   299                                  scct_6:					; ...
   300 000002C6 5E                      		pop	si		; scct_9s
   301 000002C7 58                      		pop	ax
   302 000002C8 1F                      		pop	ds
   303 000002C9 CF                      		iret
   304                                  ; ---------------------------------------------------------------------------
   305                                  
   306                                  SetCtrlShortEntry:			; ...
   307 000002CA EBA9                    		jmp	short _$SET_CTRL_C_TRAPPING
   308                                  ; ---------------------------------------------------------------------------
   309                                  
   310                                  _$SET_CURRENT_PDB:			; ...
   311 000002CC 1E                      		push	ds
   312 000002CD 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   313 000002D2 891E[3003]              		mov	[CurrentPDB], bx
   314 000002D6 1F                      		pop	ds
   315 000002D7 CF                      		iret
   316                                  ; ---------------------------------------------------------------------------
   317                                  
   318                                  _$GET_CURRENT_PDB:			; ...
   319 000002D8 1E                      		push	ds
   320 000002D9 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   321 000002DE 8B1E[3003]              		mov	bx, [CurrentPDB]
   322 000002E2 1F                      		pop	ds
   323 000002E3 CF                      		iret
   324                                  ; ---------------------------------------------------------------------------
   325                                  
   326                                  _$SET_PRINTER_FLAG:			; ...
   327 000002E4 1E                      		push	ds
   328 000002E5 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   329 000002EA A2[A00A]                		mov	[PRINTER_FLAG], al
   330 000002ED 1F                      		pop	ds
   331 000002EE CF                      		iret
   332                                  ; ---------------------------------------------------------------------------
   333                                  
   334                                  QUIT:					; ...
   335 000002EF 30E4                    		xor	ah, ah
   336 000002F1 EB2E                    		jmp	short SAVREGS
   337                                  ; ---------------------------------------------------------------------------
   338                                  
   339                                  BADCALL:				; ...
   340 000002F3 30C0                    		xor	al, al
   341                                  
   342                                  IRETT:					; ...
   343 000002F5 CF                      		iret
   344                                  ; ---------------------------------------------------------------------------
   345                                  
   346                                  CALL_ENTRY:				; ...
   347 000002F6 1E                      		push	ds
   348 000002F7 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   349 000002FC 8F06[EC05]              		pop	word [SAVEDS]
   350 00000300 58                      		pop	ax
   351 00000301 58                      		pop	ax
   352 00000302 8F06[8405]              		pop	word [USER_SP]
   353 00000306 9C                      		pushf
   354 00000307 FA                      		cli
   355 00000308 50                      		push	ax
   356 00000309 FF36[8405]              		push	word [USER_SP]
   357 0000030D FF36[EC05]              		push	word [SAVEDS]
   358 00000311 1F                      		pop	ds
   359 00000312 80F924                  		cmp	cl, 36		; MAXCALL
   360 00000315 77DC                    		ja	short BADCALL
   361 00000317 88CC                    		mov	ah, cl
   362 00000319 EB06                    		jmp	short SAVREGS
   363                                  ; ---------------------------------------------------------------------------
   364                                  
   365                                  COMMAND:				; ...
   366 0000031B FA                      		cli
   367 0000031C 80FC6C                  		cmp	ah, 6Ch
   368 0000031F 77D2                    		ja	short BADCALL
   369                                  
   370                                  SAVREGS:				; ...
   371 00000321 80FC33                  		cmp	ah, 33h
   372 00000324 7218                    		jb	short loc_410E
   373 00000326 74A2                    		jz	short SetCtrlShortEntry
   374 00000328 80FC64                  		cmp	ah, 64h
   375 0000032B 7711                    		ja	short loc_410E
   376 0000032D 74B5                    		jz	short _$SET_PRINTER_FLAG
   377 0000032F 80FC51                  		cmp	ah, 51h
   378 00000332 74A4                    		jz	short _$GET_CURRENT_PDB
   379 00000334 80FC62                  		cmp	ah, 62h
   380 00000337 749F                    		jz	short _$GET_CURRENT_PDB
   381 00000339 80FC50                  		cmp	ah, 50h
   382 0000033C 748E                    		jz	short _$SET_CURRENT_PDB
   383                                  
   384                                  loc_410E:				; ...
   385 0000033E 06                      		push	es
   386 0000033F 1E                      		push	ds
   387 00000340 55                      		push	bp
   388 00000341 57                      		push	di
   389 00000342 56                      		push	si
   390 00000343 52                      		push	dx
   391 00000344 51                      		push	cx
   392 00000345 53                      		push	bx
   393 00000346 50                      		push	ax
   394 00000347 8CD8                    		mov	ax, ds
   395 00000349 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   396 0000034E A3[EC05]                		mov	[SAVEDS], ax
   397 00000351 891E[EA05]              		mov	[SAVEBX], bx
   398 00000355 A1[8405]                		mov	ax, [USER_SP]
   399 00000358 A3[F205]                		mov	[NSP], ax
   400 0000035B A1[8605]                		mov	ax, [USER_SS]
   401 0000035E A3[F005]                		mov	[NSS], ax
   402 00000361 31C0                    		xor	ax, ax
   403 00000363 A2[7205]                		mov	[FSHARING], al
   404 00000366 F606[3010]01            		test	byte [IsWin386], 1
   405 0000036B 7503                    		jnz	short loc_4140
   406 0000036D A3[3E03]                		mov	[USER_ID], ax
   407                                  
   408                                  loc_4140:				; ...
   409 00000370 FE06[2103]              		inc	byte [INDOS]
   410 00000374 8926[8405]              		mov	[USER_SP], sp
   411 00000378 8C16[8605]              		mov	[USER_SS], ss
   412 0000037C A1[3003]                		mov	ax, [CurrentPDB]
   413 0000037F A3[3C03]                		mov	[PROC_ID], ax
   414 00000382 8ED8                    		mov	ds, ax
   415 00000384 58                      		pop	ax
   416 00000385 50                      		push	ax
   417 00000386 89262E00                		mov	[2Eh], sp	; [PDB.USER_STACK]
   418 0000038A 8C163000                		mov	word [30h], ss	; [PDB.USER_STACK+2]
   419 0000038E 2E8E16[0700]            		mov	ss, [cs:DosDSeg]
   420                                  
   421                                  REDISP:					; ...
   422 00000393 BC[A007]                		mov	sp, AUXSTACK
   423 00000396 FB                      		sti
   424 00000397 8CD3                    		mov	bx, ss
   425 00000399 8EDB                    		mov	ds, bx
   426 0000039B 93                      		xchg	ax, bx
   427 0000039C 31C0                    		xor	ax, ax
   428 0000039E 36A2[F605]              		mov	[ss:EXTOPEN_ON], al
   429 000003A2 368126[1106]0008        		and	word [ss:DOS34_FLAG], 800h
   430 000003A9 36A2[5703]              		mov	[ss:CONSWAP], al
   431 000003AD 36A2[4C03]              		mov	[ss:NoSetDir], al
   432 000003B1 36A2[4A03]              		mov	byte [ss:FAILERR], al
   433 000003B5 40                      		inc	ax
   434 000003B6 36A2[5803]              		mov	[ss:IDLEINT], al ; 1
   435 000003BA 93                      		xchg	ax, bx
   436 000003BB 88E3                    		mov	bl, ah
   437 000003BD D1E3                    		shl	bx, 1
   438 000003BF FC                      		cld
   439 000003C0 08E4                    		or	ah, ah
   440 000003C2 7417                    		jz	short DSKROUT
   441 000003C4 80FC59                  		cmp	ah, 59h		; GETEXTENDEDERROR
   442 000003C7 7444                    		jz	short DISPCALL
   443 000003C9 80FC0C                  		cmp	ah, 12		; STD_CON_INPUT_FLUSH
   444 000003CC 770D                    		ja	short DSKROUT
   445                                  
   446                                  IOROUT:
   447 000003CE 36803E[2003]00          		cmp	byte [ss:ERRORMODE], 0
   448 000003D4 7537                    		jnz	short DISPCALL
   449 000003D6 BC[A00A]                		mov	sp, PRINTER_FLAG	; IOSTACK
   450 000003D9 EB32                    		jmp	short DISPCALL
   451                                  ; ---------------------------------------------------------------------------
   452                                  
   453                                  DSKROUT:				; ...
   454 000003DB 36A3[3A03]              		mov	[ss:USER_IN_AX], ax
   455 000003DF 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1
   456 000003E5 36C606[2003]00          		mov	byte [ss:ERRORMODE], 0
   457 000003EB 36C606[2203]FF          		mov	byte [ss:WPERR], 0FFh
   458 000003F1 50                      		push	ax
   459 000003F2 B482                    		mov	ah, 82h
   460 000003F4 CD2A                    		int	2Ah		; Microsoft Networks - END DOS CRITICAL	SECTIONS 0 THROUGH 7
   461 000003F6 58                      		pop	ax
   462 000003F7 36C606[5803]00          		mov	byte [ss:IDLEINT], 0
   463 000003FD BC[2009]                		mov	sp, DSKSTACK
   464 00000400 36F606[3703]FF          		test	byte [ss:CNTCFLAG], 0FFh ; -1
   465 00000406 7405                    		jz	short DISPCALL
   466 00000408 50                      		push	ax
   467 00000409 E8484E                  		call	DSKSTATCHK
   468 0000040C 58                      		pop	ax
   469                                  
   470                                  DISPCALL:				; ...
   471 0000040D 2E8B9F[BE00]            		mov	bx, [cs:DISPATCH+bx] ; [CS:BX+DISPATCH]
   472 00000412 36871E[EA05]            		xchg	bx, [ss:SAVEBX]
   473 00000417 368E1E[EC05]            		mov	ds, [ss:SAVEDS]
   474                                  		;call	[ss:SAVEBX]
   475 0000041C 36FF16[EA05]            		call	word [SS:SAVEBX] ; near call
   476 00000421 368026[8600]FB          		and	byte [ss:DOS_FLAG], 0FBh
   477                                  
   478                                  LeaveDOS:				; ...
   479 00000427 FA                      		cli
   480 00000428 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   481 0000042D 803E[8500]00            		cmp	byte [A20OFF_COUNT], 0
   482 00000432 7527                    		jnz	short disa20
   483                                  
   484                                  LeaveA20On:				; ...
   485 00000434 FE0E[2103]              		dec	byte [INDOS]
   486 00000438 8E16[8605]              		mov	ss, [USER_SS]
   487 0000043C 8B26[8405]              		mov	sp, [USER_SP]
   488 00000440 89E5                    		mov	bp, sp
   489 00000442 884600                  		mov	[bp+0],	al
   490 00000445 A1[F205]                		mov	ax, [NSP]
   491 00000448 A3[8405]                		mov	[USER_SP], ax
   492 0000044B A1[F005]                		mov	ax, [NSS]
   493 0000044E A3[8605]                		mov	[USER_SS], ax
   494 00000451 58                      		pop	ax
   495 00000452 5B                      		pop	bx
   496 00000453 59                      		pop	cx
   497 00000454 5A                      		pop	dx
   498 00000455 5E                      		pop	si
   499 00000456 5F                      		pop	di
   500 00000457 5D                      		pop	bp
   501 00000458 1F                      		pop	ds
   502 00000459 07                      		pop	es
   503 0000045A CF                      		iret
   504                                  ; ---------------------------------------------------------------------------
   505                                  
   506                                  disa20:					; ...
   507 0000045B 8B1E[6300]              		mov	bx, [A20OFF_PSP]
   508 0000045F 3B1E[3003]              		cmp	bx, [CurrentPDB]
   509 00000463 75CF                    		jnz	short LeaveA20On
   510 00000465 FE0E[8500]              		dec	byte [A20OFF_COUNT]
   511 00000469 1E                      		push	ds
   512 0000046A BB[2D11]                		mov	bx, disa20_iret
   513 0000046D 53                      		push	bx
   514 0000046E CB                      		retf
   515                                  ; ---------------------------------------------------------------------------
   516                                  
   517                                  restore_world:				; ...
   518 0000046F 2E8E06[0700]            		mov	es, [cs:DosDSeg]
   519 00000474 268F06[EE05]            		pop	word [es:RESTORE_TMP]
   520 00000479 58                      		pop	ax
   521 0000047A 5B                      		pop	bx
   522 0000047B 59                      		pop	cx
   523 0000047C 5A                      		pop	dx
   524 0000047D 5E                      		pop	si
   525 0000047E 5F                      		pop	di
   526 0000047F 5D                      		pop	bp
   527 00000480 1F                      		pop	ds
   528 00000481 26FF26[EE05]            		jmp	[es:RESTORE_TMP]
   529                                  ; ---------------------------------------------------------------------------
   530                                  
   531                                  save_world:				; ...
   532 00000486 2E8E06[0700]            		mov	es, [cs:DosDSeg]
   533 0000048B 268F06[EE05]            		pop	word [es:RESTORE_TMP]
   534 00000490 1E                      		push	ds
   535 00000491 55                      		push	bp
   536 00000492 57                      		push	di
   537 00000493 56                      		push	si
   538 00000494 52                      		push	dx
   539 00000495 51                      		push	cx
   540 00000496 53                      		push	bx
   541 00000497 50                      		push	ax
   542 00000498 26FF36[EE05]            		push	word [es:RESTORE_TMP]
   543 0000049D 55                      		push	bp
   544 0000049E 89E5                    		mov	bp, sp
   545 000004A0 8E4614                  		mov	es, word [bp+20]
   546 000004A3 5D                      		pop	bp
   547 000004A4 C3                      		retn
   548                                  
   549                                  ; =============== S U B	R O U T	I N E =======================================
   550                                  
   551                                  		Get_User_Stack:	; ...
   552 000004A5 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   553 000004AA C536[8405]              		lds	si, [USER_SP]
   554 000004AE C3                      		retn
   555                                  
   556                                  ; ---------------------------------------------------------------------------
   557 000004AF 02                      ERRIN		db 2			; ...
   558 000004B0 06                      		db 6
   559 000004B1 0C                      		db 12
   560 000004B2 04                      		db 4
   561 000004B3 08                      		db 8
   562 000004B4 00                      		db 0
   563 000004B5 80                      ERROUT		db 80h
   564 000004B6 40                      		db 40h
   565 000004B7 02                      		db 2
   566 000004B8 10                      		db 10h
   567 000004B9 04                      		db 4
   568 000004BA 03                      		db 3
   569                                  
   570                                  ; =============== S U B	R O U T	I N E =======================================
   571                                  
   572                                  
   573                                   AbsSetup:		; ...
   574 000004BB 36FE06[2103]            		inc	byte [ss:INDOS]
   575 000004C0 FB                      		sti
   576 000004C1 FC                      		cld
   577 000004C2 1E                      		push	ds
   578 000004C3 16                      		push	ss
   579 000004C4 1F                      		pop	ds
   580 000004C5 E80C01                  		call	GETBP
   581 000004C8 7206                    		jb	short errdriv
   582 000004CA 26C7461FFFFF            		mov	word [es:bp+1Fh], -1 ; [ES:BP+DPB.FREE_CNT]
   583                                  
   584                                  errdriv:				; ...
   585 000004D0 1F                      		pop	ds
   586 000004D1 7301                    		jnb	short AbsSetup2
   587                                  
   588                                  AbsSetup_retn:				; ...
   589 000004D3 C3                      		retn
   590                                  ; ---------------------------------------------------------------------------
   591                                  
   592                                  AbsSetup2:				; ...
   593 000004D4 36C706[0706]0000        		mov	word [ss:HIGH_SECTOR], 0
   594 000004DB E85604                  		call	RW32_CONVERT
   595 000004DE 72F3                    		jb	short AbsSetup_retn
   596 000004E0 E82058                  		call	SET_RQ_SC_PARMS
   597 000004E3 1E                      		push	ds
   598 000004E4 56                      		push	si
   599 000004E5 50                      		push	ax
   600 000004E6 16                      		push	ss
   601 000004E7 1F                      		pop	ds
   602 000004E8 BE[BE03]                		mov	si, OPENBUF
   603 000004EB 8804                    		mov	[si], al
   604 000004ED 800441                  		add	byte [si], 'A' ; 41h
   605 000004F0 C744013A00              		mov	word [si+1], ':' ; 3Ah
   606 000004F5 B80003                  		mov	ax, 300h
   607 000004F8 F8                      		clc
   608 000004F9 CD2A                    		int	2Ah		; Microsoft Networks - CHECK DIRECT I/O
   609                                  					; DS:SI	-> ASCIZ disk device name (may be full path or only drive
   610                                  					; specifier--must include the colon)
   611                                  					; Return: CF clear if absolute disk access allowed
   612 000004FB 58                      		pop	ax
   613 000004FC 5E                      		pop	si
   614 000004FD 1F                      		pop	ds
   615 000004FE 73D3                    		jnb	short AbsSetup_retn
   616 00000500 36C706[2403]3200        		mov	word [ss:EXTERR], 32h
   617 00000507 C3                      		retn
   618                                  ; ---------------------------------------------------------------------------
   619                                  
   620                                  ABSDRD:					; ...
   621 00000508 FA                      		cli
   622 00000509 50                      		push	ax
   623 0000050A 8CD8                    		mov	ax, ds
   624 0000050C 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   625 00000511 A3[0A0D]                		mov	[TEMPSEG], ax
   626 00000514 58                      		pop	ax
   627 00000515 06                      		push	es
   628 00000516 8C16[1B06]              		mov	[AbsRdWr_SS], ss
   629 0000051A 8926[1D06]              		mov	[AbsRdWr_SP], sp
   630 0000051E 2E8E16[0700]            		mov	ss, [cs:DosDSeg]
   631 00000523 BC[2009]                		mov	sp, DSKSTACK
   632 00000526 8E1E[0A0D]              		mov	ds, [TEMPSEG]
   633 0000052A 06                      		push	es
   634 0000052B E858FF                  		call	save_world
   635 0000052E 06                      		push	es
   636 0000052F E889FF                  		call	AbsSetup
   637 00000532 723D                    		jb	short ILEAVE
   638 00000534 E81F0E                  		call	ECritDisk
   639 00000537 36C606[B00D]FF          		mov	byte [ss:CurSC_DRIVE], 0FFh ; -1
   640 0000053D E8360E                  		call	LCritDisk
   641 00000540 E87233                  		call	DSKREAD
   642 00000543 7513                    		jnz	short ERR_LEAVE
   643 00000545 89F9                    		mov	cx, di
   644 00000547 368C1E[0E06]            		mov	[ss:TEMP_VAR2],	ds
   645 0000054C 36891E[0C06]            		mov	[ss:TEMP_VAR], bx
   646 00000551 E8B835                  		call	DskRdBufScan
   647 00000554 EB1B                    		jmp	short ILEAVE
   648                                  ; ---------------------------------------------------------------------------
   649                                  
   650                                  TLEAVE:					; ...
   651 00000556 7419                    		jz	short ILEAVE
   652                                  
   653                                  ERR_LEAVE:				; ...
   654 00000558 06                      		push	es
   655 00000559 0E                      		push	cs
   656 0000055A 07                      		pop	es
   657 0000055B 30E4                    		xor	ah, ah
   658 0000055D B90600                  		mov	cx, 6		; NUMERR
   659 00000560 BF[AF04]                		mov	di, ERRIN
   660 00000563 F2AE                    		repne scasb
   661 00000565 7504                    		jnz	short LEAVECODE
   662 00000567 268A6505                		mov	ah, [es:di+5]
   663                                  
   664                                  LEAVECODE:				; ...
   665 0000056B 07                      		pop	es
   666 0000056C 36A3[B80D]              		mov	[ss:AbsDskErr],	ax
   667 00000570 F9                      		stc
   668                                  
   669                                  ILEAVE:					; ...
   670 00000571 07                      		pop	es
   671 00000572 E8FAFE                  		call	restore_world
   672 00000575 07                      		pop	es
   673 00000576 FA                      		cli
   674 00000577 36A1[B80D]              		mov	ax, [ss:AbsDskErr]
   675 0000057B 36FE0E[2103]            		dec	byte [ss:INDOS]
   676 00000580 16                      		push	ss
   677 00000581 07                      		pop	es
   678 00000582 268E16[1B06]            		mov	ss, [es:AbsRdWr_SS]
   679 00000587 268B26[1D06]            		mov	sp, [es:AbsRdWr_SP]
   680 0000058C 07                      		pop	es
   681 0000058D FB                      		sti
   682 0000058E CB                      		retf
   683                                  ; ---------------------------------------------------------------------------
   684                                  
   685                                  ABSDWRT:				; ...
   686 0000058F FA                      		cli
   687 00000590 50                      		push	ax
   688 00000591 8CD8                    		mov	ax, ds
   689 00000593 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   690 00000598 A3[0A0D]                		mov	[TEMPSEG], ax
   691 0000059B 58                      		pop	ax
   692 0000059C 06                      		push	es
   693 0000059D 8C16[1B06]              		mov	[AbsRdWr_SS], ss
   694 000005A1 8926[1D06]              		mov	[AbsRdWr_SP], sp
   695 000005A5 2E8E16[0700]            		mov	ss, [cs:DosDSeg]
   696 000005AA BC[2009]                		mov	sp, DSKSTACK
   697 000005AD 8E1E[0A0D]              		mov	ds, [TEMPSEG]
   698 000005B1 06                      		push	es
   699 000005B2 E8D1FE                  		call	save_world
   700 000005B5 06                      		push	es
   701 000005B6 E802FF                  		call	AbsSetup
   702 000005B9 72B6                    		jb	short ILEAVE
   703 000005BB E8980D                  		call	ECritDisk
   704 000005BE 36C606[B00D]FF          		mov	byte [ss:CurSC_DRIVE], 0FFh ; -1
   705 000005C4 E8B403                  		call	Fastxxx_Purge
   706 000005C7 E8AC0D                  		call	LCritDisk
   707 000005CA 1E                      		push	ds
   708 000005CB E83638                  		call	DskWrtBufPurge
   709 000005CE 1F                      		pop	ds
   710 000005CF E80C33                  		call	DSKWRITE
   711 000005D2 EB82                    		jmp	short TLEAVE
   712                                  
   713                                  ; =============== S U B	R O U T	I N E =======================================
   714                                  
   715                                  GETBP:		; ...
   716 000005D4 50                      		push	ax
   717 000005D5 0401                    		add	al, 1
   718 000005D7 7216                    		jb	short SKIPGET
   719 000005D9 E8B066                  		call	GETTHISDRV
   720 000005DC 7311                    		jnb	short SKIPGET
   721 000005DE 30E4                    		xor	ah, ah
   722 000005E0 83F81A                  		cmp	ax, 1Ah		; error_not_DOS_disk
   723 000005E3 740A                    		jz	short SKIPGET
   724 000005E5 F9                      		stc
   725 000005E6 A3[2403]                		mov	[EXTERR], ax
   726 000005E9 C706[B80D]0102          		mov	word [AbsDskErr], 201h
   727                                  
   728                                  SKIPGET:				; ...
   729 000005EF 58                      		pop	ax
   730 000005F0 7301                    		jnb	short getbp_t
   731 000005F2 C3                      		retn
   732                                  ; ---------------------------------------------------------------------------
   733                                  
   734                                  getbp_t:				; ...
   735 000005F3 C42E[A205]              		les	bp, [THISCDS]
   736 000005F7 26F746430080            		test	word [es:bp+43h], 8000h ; [ES:BP+curdir.flags],
   737                                  					; curdir_isnet
   738 000005FD 7408                    		jz	short GETBP_CDS
   739 000005FF C706[2403]3200          		mov	word [EXTERR], 32h ; '2' ; error_not_supported
   740 00000605 F9                      		stc
   741                                  
   742                                  GETBP_RETN:
   743 00000606 C3                      		retn
   744                                  ; ---------------------------------------------------------------------------
   745                                  
   746                                  GETBP_CDS:				; ...
   747 00000607 26C46E45                		les	bp, [es:bp+45h]	; [ES:BP+curdir.devptr]
   748                                  
   749                                  GOTDPB:					; ...
   750 0000060B 892E[8A05]              		mov	word [THISDPB], bp
   751 0000060F 8C06[8C05]              		mov	word [THISDPB+2], es
   752 00000613 C3                      		retn
   753                                  ; ---------------------------------------------------------------------------
   754                                  ; START	OF FUNCTION CHUNK FOR _$CLOSE
   755                                  
   756                                  SYS_RETURN:				; ...
   757 00000614 E88EFE                  		call	Get_User_Stack	; SYS_RETURN_OK
   758 00000617 836416FE                		and	word [si+16h], 0FFFEh ; [SI+user_env.user_F],
   759                                  					; ~f_Carry
   760 0000061B EB10                    		jmp	short DO_RET
   761                                  ; ---------------------------------------------------------------------------
   762                                  
   763                                  SYS_RET_ERR:				; ...
   764 0000061D 30E4                    		xor	ah, ah
   765 0000061F E86C00                  		call	ETAB_LK
   766 00000622 E81A00                  		call	ErrorMap
   767                                  
   768                                  From_GetSet:				; ...
   769 00000625 E87DFE                  		call	Get_User_Stack
   770 00000628 834C1601                		or	word [si+16h], 1 ; [SI+user_env.user_F],
   771                                  					; f_Carry
   772 0000062C F9                      		stc
   773                                  
   774                                  DO_RET:					; ...
   775 0000062D 8904                    		mov	[si], ax
   776 0000062F C3                      		retn
   777                                  ; END OF FUNCTION CHUNK	FOR _$CLOSE
   778                                  ; ---------------------------------------------------------------------------
   779                                  
   780                                  NO_OP:					; ...
   781 00000630 30C0                    		xor	al, al
   782 00000632 C3                      		retn
   783                                  
   784                                  ; =============== S U B	R O U T	I N E =======================================
   785                                  
   786                                  FCB_RET_ER:
   787 00000633 30E4                    		xor	ah, ah
   788 00000635 36A3[2403]              		mov	word [ss:EXTERR], ax
   789 00000639 E80300                  		call	ErrorMap
   790 0000063C B0FF                    		mov	al, 0FFh	; -1
   791 0000063E C3                      		retn
   792                                  
   793                                  ; =============== S U B	R O U T	I N E =======================================
   794                                  
   795                                  ErrorMap:
   796 0000063F 56                      		push	si
   797 00000640 BE[DB0D]                		mov	si, ERR_TABLE_21
   798 00000643 36803E[4A03]00          		cmp	byte [ss:FAILERR], 0
   799 00000649 7407                    		jz	short EXTENDED_NORMAL
   800 0000064B 36C706[2403]5300        		mov	word [ss:EXTERR], 53h ; error_FAIL_I24
   801                                  
   802                                  EXTENDED_NORMAL:			; ...
   803 00000652 E80200                  		call	CAL_LK
   804 00000655 5E                      		pop	si
   805 00000656 C3                      		retn
   806                                  
   807                                  ; =============== S U B	R O U T	I N E =======================================
   808                                  
   809                                  
   810                                   CAL_LK:		; ...
   811 00000657 1E                      		push	ds
   812 00000658 50                      		push	ax
   813 00000659 53                      		push	bx
   814 0000065A 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   815 0000065F 8B1E[2403]              		mov	bx, [EXTERR]
   816                                  
   817                                  TABLK1:					; ...
   818 00000663 AC                      		lodsb
   819 00000664 3CFF                    		cmp	al, 0FFh
   820 00000666 7409                    		jz	short GOT_VALS
   821 00000668 38D8                    		cmp	al, bl
   822 0000066A 7405                    		jz	short GOT_VALS
   823 0000066C 83C603                  		add	si, 3
   824 0000066F EBF2                    		jmp	short TABLK1
   825                                  ; ---------------------------------------------------------------------------
   826                                  
   827                                  GOT_VALS:				; ...
   828 00000671 AD                      		lodsw
   829 00000672 80FCFF                  		cmp	ah, 0FFh
   830 00000675 7404                    		jz	short NO_SET_ACT
   831 00000677 8826[2603]              		mov	[EXTERR_ACTION], ah
   832                                  
   833                                  NO_SET_ACT:				; ...
   834 0000067B 3CFF                    		cmp	al, 0FFh
   835 0000067D 7403                    		jz	short NO_SET_CLS
   836 0000067F A2[2703]                		mov	[EXTERR_CLASS], al
   837                                  
   838                                  NO_SET_CLS:				; ...
   839 00000682 AC                      		lodsb
   840 00000683 3CFF                    		cmp	al, 0FFh
   841 00000685 7403                    		jz	short NO_SET_LOC
   842 00000687 A2[2303]                		mov	[EXTERR_LOCUS], al
   843                                  
   844                                  NO_SET_LOC:				; ...
   845 0000068A 5B                      		pop	bx
   846 0000068B 58                      		pop	ax
   847 0000068C 1F                      		pop	ds
   848 0000068D C3                      		retn
   849                                  
   850                                  ; =============== S U B	R O U T	I N E =======================================
   851                                  
   852                                  ETAB_LK:
   853 0000068E 1E                      		push	ds
   854 0000068F 56                      		push	si
   855 00000690 51                      		push	cx
   856 00000691 53                      		push	bx
   857 00000692 16                      		push	ss
   858 00000693 1F                      		pop	ds
   859 00000694 A3[2403]                		mov	[EXTERR], ax
   860 00000697 BE[0B00]                		mov	si, I21_MAP_E_TAB
   861 0000069A 88C7                    		mov	bh, al
   862 0000069C 8A1E[3B03]              		mov	bl, byte [USER_IN_AX+1]
   863                                  
   864                                  TABLK2:					; ...
   865                                  		;lods	word [cs:si] ; cs lodsw
   866 000006A0 2E                      		cs
   867 000006A1 AD                      		lodsw
   868 000006A2 3CFF                    		cmp	al, 0FFh
   869 000006A4 740C                    		jz	short NOT_IN_TABLE
   870 000006A6 38D8                    		cmp	al, bl
   871 000006A8 740C                    		jz	short GOT_CALL
   872 000006AA 86E0                    		xchg	ah, al
   873 000006AC 30E4                    		xor	ah, ah
   874 000006AE 01C6                    		add	si, ax
   875 000006B0 EBEE                    		jmp	short TABLK2
   876                                  ; ---------------------------------------------------------------------------
   877                                  
   878                                  NOT_IN_TABLE:				; ...
   879 000006B2 88F8                    		mov	al, bh
   880 000006B4 EB0C                    		jmp	short NO_MAP
   881                                  ; ---------------------------------------------------------------------------
   882                                  
   883                                  GOT_CALL:				; ...
   884 000006B6 88E1                    		mov	cl, ah
   885 000006B8 30ED                    		xor	ch, ch
   886                                  
   887                                  CHECK_CODE:				; ...
   888                                  		;lods	byte [cs:si] ; cs lodsb
   889 000006BA 2E                      		cs
   890 000006BB AC                      		lodsb
   891 000006BC 38F8                    		cmp	al, bh
   892 000006BE 7402                    		jz	short NO_MAP
   893 000006C0 E2F8                    		loop	CHECK_CODE
   894                                  
   895                                  NO_MAP:					; ...
   896 000006C2 30E4                    		xor	ah, ah
   897 000006C4 5B                      		pop	bx
   898 000006C5 59                      		pop	cx
   899 000006C6 5E                      		pop	si
   900 000006C7 1F                      		pop	ds
   901 000006C8 C3                      		retn
   902                                  
   903                                  ; =============== S U B	R O U T	I N E =======================================
   904                                  
   905                                  SetBad:		; ...
   906 000006C9 B80100                  		mov	ax, 1		; error_invalid_function
   907 000006CC 1E                      		push	ds
   908 000006CD 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   909 000006D2 C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
   910 000006D7 1F                      		pop	ds
   911 000006D8 F9                      		stc
   912 000006D9 C3                      		retn
   913                                  
   914                                  ; =============== S U B	R O U T	I N E =======================================
   915                                  
   916                                  BadCall:
   917 000006DA E8ECFF                  		call	SetBad
   918 000006DD CB                      		retf
   919                                  
   920                                  ; ---------------------------------------------------------------------------
   921                                  
   922                                  OKCall:
   923 000006DE F8                      		clc
   924 000006DF CB                      		retf
   925                                  
   926                                  ; ---------------------------------------------------------------------------
   927                                  
   928                                  INT2F:					; ...
   929 000006E0 FB                      		sti
   930 000006E1 80FC11                  		cmp	ah, 11h		; MultNET
   931 000006E4 750A                    		jnz	short INT2FSHR
   932                                  
   933                                  TestInstall:				; ...
   934 000006E6 08C0                    		or	al, al
   935 000006E8 7403                    		jz	short Leave2F
   936                                  
   937                                  BadFunc:				; ...
   938 000006EA E8DCFF                  		call	SetBad
   939                                  
   940                                  Leave2F:				; ...
   941 000006ED CA0200                  		retf	2
   942                                  ; ---------------------------------------------------------------------------
   943                                  
   944                                  INT2FSHR:				; ...
   945 000006F0 80FC10                  		cmp	ah, 10h		; MultSHARE
   946 000006F3 74F1                    		jz	short TestInstall
   947 000006F5 80FC14                  		cmp	ah, 14h		; NLSFUNC
   948 000006F8 74EC                    		jz	short TestInstall
   949 000006FA 80FC12                  		cmp	ah, 12h		; MultDOS
   950 000006FD 7503                    		jnz	short check_win
   951 000006FF E91102                  		jmp	DispatchDOS
   952                                  ; ---------------------------------------------------------------------------
   953                                  
   954                                  check_win:				; ...
   955 00000702 80FC16                  		cmp	ah, 16h		; MultWin386
   956 00000705 740D                    		jz	short Win386_Msg
   957 00000707 80FC46                  		cmp	ah, 46h		; WINOLDAP
   958 0000070A 7503                    		jnz	short next_i2f
   959 0000070C E9B801                  		jmp	winold_swap
   960                                  ; ---------------------------------------------------------------------------
   961                                  
   962                                  next_i2f:				; ...
   963                                  		;jmp	far ptr	70h:5
   964 0000070F EA05007000              		jmp	0070h:0005h
   965                                  ; ---------------------------------------------------------------------------
   966                                  
   967                                  Win386_Msg:				; ...
   968 00000714 1E                      		push	ds
   969 00000715 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
   970 0000071A 3C03                    		cmp	al, 3
   971 0000071C 7503                    		jnz	short Win386_Msg_exit
   972 0000071E E93701                  		jmp	OldWin386Init
   973                                  ; ---------------------------------------------------------------------------
   974                                  
   975                                  Win386_Msg_exit:			; ...
   976 00000721 3C06                    		cmp	al, 6
   977 00000723 7503                    		jnz	short Win386_Msg_devcall
   978 00000725 E9DC00                  		jmp	Win386_Leaving
   979                                  ; ---------------------------------------------------------------------------
   980                                  
   981                                  Win386_Msg_devcall:			; ...
   982 00000728 3C07                    		cmp	al, 7
   983 0000072A 7503                    		jnz	short Win386_Msg_init
   984 0000072C E91801                  		jmp	Win386_Query
   985                                  ; ---------------------------------------------------------------------------
   986                                  
   987                                  Win386_Msg_init:			; ...
   988 0000072F 3C05                    		cmp	al, 5
   989 00000731 7403                    		jz	short Win386_Starting
   990 00000733 E98001                  		jmp	win_nexti2f
   991                                  ; ---------------------------------------------------------------------------
   992                                  
   993                                  Win386_Starting:			; ...
   994 00000736 F7C20100                		test	dx, 1
   995 0000073A 7403                    		jz	short Win386_vchk
   996 0000073C E97701                  		jmp	win_nexti2f
   997                                  ; ---------------------------------------------------------------------------
   998                                  
   999                                  Win386_vchk:				; ...
  1000 0000073F C706[E80F]0000          		mov	word [Win386_Info+6], 0 ; [Win386_Info+Win386_SIS.Virt_Dev_File_Ptr]
  1001 00000745 C706[EA0F]0000          		mov	word [Win386_Info+8], 0 ; [Win386_Info+Win386_SIS.Virt_Dev_File_Ptr+2]
  1002 0000074B 81FF0A03                		cmp	di, 30Ah	; version 3.10
  1003 0000074F 7203                    		jb	short Win386_vxd
  1004 00000751 E99400                  		jmp	noVxD31
  1005                                  ; ---------------------------------------------------------------------------
  1006                                  
  1007                                  Win386_vxd:				; ...
  1008 00000754 50                      		push	ax
  1009 00000755 53                      		push	bx
  1010 00000756 51                      		push	cx
  1011 00000757 52                      		push	dx
  1012 00000758 56                      		push	si
  1013 00000759 57                      		push	di
  1014 0000075A 8B1E[8C00]              		mov	bx, [UMB_HEAD]
  1015 0000075E 83FBFF                  		cmp	bx, 0FFFFh
  1016 00000761 7422                    		jz	short Vxd31
  1017 00000763 C606[DA0D]01            		mov	byte [UmbSaveFlag], 1
  1018 00000768 1E                      		push	ds
  1019 00000769 06                      		push	es
  1020 0000076A 8CD8                    		mov	ax, ds
  1021 0000076C 8EC0                    		mov	es, ax
  1022 0000076E 8EDB                    		mov	ds, bx
  1023 00000770 31F6                    		xor	si, si
  1024 00000772 FC                      		cld
  1025 00000773 BF[1F12]                		mov	di, UmbSave1
  1026 00000776 B90B00                  		mov	cx, 11
  1027 00000779 F3A4                    		rep movsb
  1028 0000077B BF[D50D]                		mov	di, UmbSave2
  1029 0000077E B90500                  		mov	cx, 5
  1030 00000781 F3A4                    		rep movsb
  1031 00000783 07                      		pop	es
  1032 00000784 1F                      		pop	ds
  1033                                  
  1034                                  Vxd31:					; ...
  1035 00000785 F606[8600]02            		test	byte [DOS_FLAG], 2
  1036 0000078A 7408                    		jz	short Dont_Supress
  1037 0000078C 5F                      		pop	di
  1038 0000078D 5E                      		pop	si
  1039 0000078E 5A                      		pop	dx
  1040 0000078F 59                      		pop	cx
  1041 00000790 5B                      		pop	bx
  1042 00000791 58                      		pop	ax
  1043 00000792 EB54                    		jmp	short noVxD31
  1044                                  ; ---------------------------------------------------------------------------
  1045                                  
  1046                                  Dont_Supress:				; ...
  1047 00000794 A0[6900]                		mov	al, [BOOTDRIVE]
  1048 00000797 0440                    		add	al, 40h	; '@'   ; 'A' - 1
  1049 00000799 A2[3110]                		mov	byte [VxDpath], al ; "c:\\wina20.386"
  1050 0000079C B46C                    		mov	ah, 6Ch		; ExtOpen
  1051 0000079E B000                    		mov	al, 0
  1052 000007A0 BB8020                  		mov	bx, 2080h
  1053 000007A3 B90700                  		mov	cx, 7
  1054 000007A6 BA0100                  		mov	dx, 1
  1055 000007A9 BE[3110]                		mov	si, VxDpath ; "c:\\wina20.386"
  1056 000007AC BFFFFF                  		mov	di, 0FFFFh
  1057 000007AF CD21                    		int	21h		; DOS -	4.0 - EXTENDED OPEN/CREATE
  1058                                  					; BL = open mode as in AL for normal open (INT 21h/AH=3Dh)
  1059                                  					; BH = flags, CX = create attribute, DL	= action if file exists/does not exists
  1060                                  					; DH = 00h (reserved), DS:SI ->	ASCIZ file name
  1061 000007B1 5F                      		pop	di
  1062 000007B2 5E                      		pop	si
  1063 000007B3 5A                      		pop	dx
  1064 000007B4 59                      		pop	cx
  1065 000007B5 731E                    		jnb	short VxDthere
  1066 000007B7 52                      		push	dx
  1067 000007B8 1E                      		push	ds
  1068 000007B9 56                      		push	si
  1069 000007BA BE[B009]                		mov	si, NoVxDErrMsg ; "You must have	the file WINA20.386 in th"...
  1070 000007BD 0E                      		push	cs
  1071 000007BE 1F                      		pop	ds
  1072 000007BF B96300                  		mov	cx, 99
  1073 000007C2 B402                    		mov	ah, 2
  1074 000007C4 FC                      		cld
  1075                                  
  1076                                  vxdlp:					; ...
  1077 000007C5 AC                      		lodsb
  1078 000007C6 86D0                    		xchg	dl, al
  1079 000007C8 CD21                    		int	21h		; DOS -	DISPLAY	OUTPUT
  1080                                  					; DL = character to send to standard output
  1081 000007CA E2F9                    		loop	vxdlp
  1082 000007CC 5E                      		pop	si
  1083 000007CD 1F                      		pop	ds
  1084 000007CE 5A                      		pop	dx
  1085 000007CF 5B                      		pop	bx
  1086 000007D0 58                      		pop	ax
  1087 000007D1 41                      		inc	cx
  1088 000007D2 E9E100                  		jmp	win_nexti2f
  1089                                  ; ---------------------------------------------------------------------------
  1090                                  
  1091                                  VxDthere:				; ...
  1092 000007D5 89C3                    		mov	bx, ax
  1093 000007D7 B43E                    		mov	ah, 3Eh
  1094 000007D9 CD21                    		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
  1095                                  					; BX = file handle
  1096 000007DB BB[E20F]                		mov	bx, Win386_Info
  1097 000007DE C74706[3110]            		mov	word [bx+6], VxDpath ; [Win386_Info+Win386_SIS.Virt_Dev_File_Ptr],
  1098                                  					; VxDpath
  1099 000007E3 8C5F08                  		mov	word [bx+8], ds ; [Win386_Info+Win386_SIS.Virt_Dev_File_Ptr+2]
  1100 000007E6 5B                      		pop	bx
  1101 000007E7 58                      		pop	ax
  1102                                  
  1103                                  noVxD31:				; ...
  1104 000007E8 800E[3010]01            		or	byte [IsWin386], 1
  1105 000007ED 800E[0C0D]01            		or	byte [redir_patch], 1
  1106 000007F2 52                      		push	dx
  1107 000007F3 89DA                    		mov	dx, bx
  1108 000007F5 BB[E20F]                		mov	bx, Win386_Info
  1109 000007F8 895702                  		mov	[bx+2],	dx
  1110 000007FB 8C4704                  		mov	word [bx+4], es
  1111 000007FE 5A                      		pop	dx
  1112 000007FF 1E                      		push	ds
  1113 00000800 07                      		pop	es
  1114 00000801 E9B200                  		jmp	win_nexti2f
  1115                                  ; ---------------------------------------------------------------------------
  1116                                  
  1117                                  Win386_Leaving:				; ...
  1118 00000804 F7C20100                		test	dx, 1
  1119 00000808 7403                    		jz	short Win386_Leaving_c
  1120 0000080A E9A900                  		jmp	win_nexti2f
  1121                                  ; ---------------------------------------------------------------------------
  1122                                  
  1123                                  Win386_Leaving_c:			; ...
  1124 0000080D 803E[DA0D]01            		cmp	byte [UmbSaveFlag], 1
  1125 00000812 7527                    		jnz	short noumb
  1126 00000814 C606[DA0D]00            		mov	byte [UmbSaveFlag], 0
  1127 00000819 50                      		push	ax
  1128 0000081A 06                      		push	es
  1129 0000081B 51                      		push	cx
  1130 0000081C 56                      		push	si
  1131 0000081D 57                      		push	di
  1132 0000081E A1[8C00]                		mov	ax, [UMB_HEAD]
  1133 00000821 8EC0                    		mov	es, ax
  1134 00000823 31FF                    		xor	di, di
  1135 00000825 FC                      		cld
  1136 00000826 BE[1F12]                		mov	si, UmbSave1
  1137 00000829 B90B00                  		mov	cx, 11
  1138 0000082C F3A4                    		rep movsb
  1139 0000082E BE[D50D]                		mov	si, UmbSave2
  1140 00000831 B90500                  		mov	cx, 5
  1141 00000834 F3A4                    		rep movsb
  1142 00000836 5F                      		pop	di
  1143 00000837 5E                      		pop	si
  1144 00000838 59                      		pop	cx
  1145 00000839 07                      		pop	es
  1146 0000083A 58                      		pop	ax
  1147                                  
  1148                                  noumb:					; ...
  1149 0000083B 8026[3010]00            		and	byte [IsWin386], 0
  1150 00000840 8026[0C0D]00            		and	byte [redir_patch], 0
  1151 00000845 EB6F                    		jmp	short win_nexti2f
  1152                                  ; ---------------------------------------------------------------------------
  1153                                  
  1154                                  Win386_Query:				; ...
  1155 00000847 83FB15                  		cmp	bx, 15h		; Win386_DOSMGR
  1156 0000084A 756A                    		jnz	short win_nexti2f
  1157 0000084C 09C9                    		or	cx, cx
  1158 0000084E 7512                    		jnz	short dosmgr_func
  1159 00000850 41                      		inc	cx
  1160 00000851 BB[2210]                		mov	bx, Win386_DOSVars
  1161 00000854 1E                      		push	ds
  1162 00000855 07                      		pop	es
  1163 00000856 EB5C                    		jmp	short PopIret
  1164                                  ; ---------------------------------------------------------------------------
  1165                                  
  1166                                  OldWin386Init:				; ...
  1167 00000858 58                      		pop	ax
  1168 00000859 BE[E711]                		mov	si, OldInstanceJunk
  1169 0000085C B84852                  		mov	ax, 5248h	; 'HR'
  1170 0000085F E9ADFE                  		jmp	next_i2f
  1171                                  ; ---------------------------------------------------------------------------
  1172                                  
  1173                                  dosmgr_func:				; ...
  1174 00000862 49                      		dec	cx
  1175 00000863 7436                    		jz	short win386_patch
  1176 00000865 49                      		dec	cx
  1177 00000866 744C                    		jz	short PopIret
  1178 00000868 49                      		dec	cx
  1179 00000869 7434                    		jz	short win386_size
  1180 0000086B 49                      		dec	cx
  1181 0000086C 743C                    		jz	short win386_inst
  1182 0000086E 49                      		dec	cx
  1183 0000086F 7543                    		jnz	short PopIret
  1184 00000871 8CC0                    		mov	ax, es
  1185 00000873 48                      		dec	ax
  1186 00000874 06                      		push	es
  1187 00000875 8EC0                    		mov	es, ax
  1188 00000877 26803D44                		cmp	byte [es:di], 'D'
  1189 0000087B 7517                    		jnz	short cantsize
  1190 0000087D 40                      		inc	ax
  1191 0000087E 26394501                		cmp	[es:di+1], ax
  1192 00000882 7510                    		jnz	short cantsize
  1193 00000884 268B4503                		mov	ax, [es:di+3]
  1194 00000888 07                      		pop	es
  1195 00000889 BB1000                  		mov	bx, 16
  1196 0000088C F7E3                    		mul	bx
  1197 0000088E 89C1                    		mov	cx, ax
  1198 00000890 89D3                    		mov	bx, dx
  1199 00000892 EB1A                    		jmp	short win386_done
  1200                                  ; ---------------------------------------------------------------------------
  1201                                  
  1202                                  cantsize:				; ...
  1203 00000894 07                      		pop	es
  1204 00000895 31C0                    		xor	ax, ax
  1205 00000897 31D2                    		xor	dx, dx
  1206 00000899 EB19                    		jmp	short PopIret
  1207                                  ; ---------------------------------------------------------------------------
  1208                                  
  1209                                  win386_patch:				; ...
  1210 0000089B 89D3                    		mov	bx, dx
  1211 0000089D EB0F                    		jmp	short win386_done
  1212                                  ; ---------------------------------------------------------------------------
  1213                                  
  1214                                  win386_size:				; ...
  1215 0000089F F7C20100                		test	dx, 1
  1216 000008A3 740F                    		jz	short PopIret
  1217 000008A5 B95800                  		mov	cx, 88		; curdirLen
  1218 000008A8 EB04                    		jmp	short win386_done
  1219                                  ; ---------------------------------------------------------------------------
  1220                                  
  1221                                  win386_inst:				; ...
  1222 000008AA 31D2                    		xor	dx, dx
  1223 000008AC EB06                    		jmp	short PopIret
  1224                                  ; ---------------------------------------------------------------------------
  1225                                  
  1226                                  win386_done:				; ...
  1227 000008AE B87CB9                  		mov	ax, 0B97Ch	; WIN_OP_DONE
  1228 000008B1 BAABA2                  		mov	dx, 0A2ABh	; DOSMGR_OP_DONE
  1229                                  
  1230                                  PopIret:				; ...
  1231 000008B4 1F                      		pop	ds
  1232 000008B5 CF                      		iret
  1233                                  ; ---------------------------------------------------------------------------
  1234                                  
  1235                                  win_nexti2f:				; ...
  1236 000008B6 1F                      		pop	ds
  1237 000008B7 E955FE                  		jmp	next_i2f
  1238                                  ; ---------------------------------------------------------------------------
  1239                                  
  1240                                  getwinlast:				; ...
  1241 000008BA 8B36[3003]              		mov	si, [CurrentPDB]
  1242 000008BE 4E                      		dec	si
  1243 000008BF 8EC6                    		mov	es, si
  1244 000008C1 2603360300              		add	si, [es:3]
  1245 000008C6 C3                      		retn
  1246                                  ; ---------------------------------------------------------------------------
  1247                                  
  1248                                  winold_swap:				; ...
  1249 000008C7 1E                      		push	ds
  1250 000008C8 06                      		push	es
  1251 000008C9 56                      		push	si
  1252 000008CA 57                      		push	di
  1253 000008CB 51                      		push	cx
  1254 000008CC 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  1255 000008D1 3C01                    		cmp	al, 1
  1256 000008D3 751B                    		jnz	short swapin
  1257 000008D5 E8E2FF                  		call	getwinlast
  1258 000008D8 1E                      		push	ds
  1259 000008D9 07                      		pop	es
  1260 000008DA 8EDE                    		mov	ds, si
  1261 000008DC 31F6                    		xor	si, si
  1262 000008DE BF[0600]                		mov	di, WinoldPatch1
  1263 000008E1 B90800                  		mov	cx, 8
  1264 000008E4 FC                      		cld
  1265 000008E5 51                      		push	cx
  1266 000008E6 F3A4                    		rep movsb
  1267 000008E8 59                      		pop	cx
  1268 000008E9 BF[CD0D]                		mov	di, WinoldPatch2
  1269 000008EC F3A4                    		rep movsb
  1270 000008EE EB1B                    		jmp	short winold_done
  1271                                  ; ---------------------------------------------------------------------------
  1272                                  
  1273                                  swapin:					; ...
  1274 000008F0 3C02                    		cmp	al, 2
  1275 000008F2 7517                    		jnz	short winold_done
  1276 000008F4 E8C3FF                  		call	getwinlast
  1277 000008F7 8EC6                    		mov	es, si
  1278 000008F9 31FF                    		xor	di, di
  1279 000008FB BE0600                  		mov	si, 6
  1280 000008FE B90800                  		mov	cx, 8
  1281 00000901 FC                      		cld
  1282 00000902 51                      		push	cx
  1283 00000903 F3A4                    		rep movsb
  1284 00000905 59                      		pop	cx
  1285 00000906 BE[CD0D]                		mov	si, WinoldPatch2
  1286 00000909 F3A4                    		rep movsb
  1287                                  
  1288                                  winold_done:				; ...
  1289 0000090B 59                      		pop	cx
  1290 0000090C 5F                      		pop	di
  1291 0000090D 5E                      		pop	si
  1292 0000090E 07                      		pop	es
  1293 0000090F 1F                      		pop	ds
  1294 00000910 E9FCFD                  		jmp	next_i2f
  1295                                  ; ---------------------------------------------------------------------------
  1296                                  
  1297                                  DispatchDOS:				; ...
  1298 00000913 2EFF36[9801]            		push	word [cs:FOO]
  1299 00000918 2EFF36[9A01]            		push	word [cs:Dtab]
  1300 0000091D 50                      		push	ax
  1301 0000091E 55                      		push	bp
  1302 0000091F 89E5                    		mov	bp, sp
  1303 00000921 8B460E                  		mov	ax, [bp+0Eh]
  1304 00000924 5D                      		pop	bp
  1305 00000925 E83E09                  		call	TableDispatch
  1306 00000928 E9BFFD                  		jmp	BadFunc
  1307                                  ; ---------------------------------------------------------------------------
  1308                                  
  1309                                  DOSGetGroup:				; ...
  1310 0000092B 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  1311 00000930 C3                      		retn
  1312                                  ; ---------------------------------------------------------------------------
  1313                                  
  1314                                  DOSInstall:				; ...
  1315 00000931 B0FF                    		mov	al, 0FFh
  1316 00000933 C3                      		retn
  1317                                  
  1318                                  ; =============== S U B	R O U T	I N E =======================================
  1319                                  
  1320                                  
  1321                                   RW32_CONVERT:	; ...
  1322 00000934 83F9FF                  		cmp	cx, 0FFFFh
  1323 00000937 742A                    		jz	short new32format
  1324 00000939 50                      		push	ax
  1325 0000093A 52                      		push	dx
  1326 0000093B 268B460D                		mov	ax, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
  1327 0000093F 268A5604                		mov	dl, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  1328 00000943 80FAFE                  		cmp	dl, 0FEh	; Sectors/cluster - 1
  1329 00000946 7408                    		jz	short letold
  1330 00000948 FEC2                    		inc	dl
  1331 0000094A 30F6                    		xor	dh, dh
  1332 0000094C F7E2                    		mul	dx
  1333 0000094E 09D2                    		or	dx, dx
  1334                                  
  1335                                  letold:					; ...
  1336 00000950 5A                      		pop	dx
  1337 00000951 58                      		pop	ax
  1338 00000952 7425                    		jz	short old_style
  1339 00000954 1E                      		push	ds
  1340 00000955 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  1341 0000095A C706[B80D]0702          		mov	word [AbsDskErr], 207h
  1342 00000960 1F                      		pop	ds
  1343 00000961 F9                      		stc
  1344 00000962 C3                      		retn
  1345                                  ; ---------------------------------------------------------------------------
  1346                                  
  1347                                  new32format:				; ...
  1348 00000963 8B5702                  		mov	dx, [bx+2]	; [BX+ABS_32RW.SECTOR_RBA+2]
  1349 00000966 1E                      		push	ds
  1350 00000967 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  1351 0000096C 8916[0706]              		mov	word [HIGH_SECTOR], dx
  1352 00000970 1F                      		pop	ds
  1353 00000971 8B17                    		mov	dx, [bx]	; [BX+ABS_32RW.SECTOR_RBA]
  1354 00000973 8B4F04                  		mov	cx, [bx+4]	; [BX+ABS_32RW.ABS_RW_COUNT]
  1355 00000976 C55F06                  		lds	bx, [bx+6]	; [BX+ABS_32RW.BUFFER_ADDR]
  1356                                  
  1357                                  old_style:				; ...
  1358 00000979 F8                      		clc
  1359 0000097A C3                      		retn
  1360                                  
  1361                                  ; =============== S U B	R O U T	I N E =======================================
  1362                                  
  1363                                  Fastxxx_Purge:
  1364 0000097B 50                      		push	ax
  1365 0000097C 56                      		push	si
  1366 0000097D 52                      		push	dx
  1367 0000097E 1E                      		push	ds
  1368 0000097F 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  1369 00000984 F606[3A0D]80            		test	byte [FastOpenFlg], 80h ; Fast_yes
  1370 00000989 1F                      		pop	ds
  1371 0000098A 740B                    		jz	short nofast
  1372 0000098C B401                    		mov	ah, 1		; FastOpen_ID
  1373 0000098E B005                    		mov	al, 5		; FONC_purge
  1374 00000990 268A5600                		mov	dl, [es:bp+0]
  1375 00000994 E85B1E                  		call	Fast_Dispatch
  1376                                  
  1377                                  nofast:					; ...
  1378 00000997 5A                      		pop	dx
  1379 00000998 5E                      		pop	si
  1380 00000999 58                      		pop	ax
  1381 0000099A C3                      		retn
  1382                                  
  1383                                  ; ---------------------------------------------------------------------------
  1384 0000099B 0D0A                    DIVMES		db 0Dh,0Ah		; ...
  1385 0000099D 446976696465206F76-     		db 'Divide overflow',0Dh,0Ah
  1385 000009A6 6572666C6F770D0A   
  1386 000009AE 1300                    DivMesLen	dw 19			; ...
  1387 000009B0 596F75206D75737420-     NoVxDErrMsg	db 'You must have the file WINA20.386 in the root of your boot drive',0Dh ; ...
  1387 000009B9 686176652074686520-
  1387 000009C2 66696C652057494E41-
  1387 000009CB 32302E33383620696E-
  1387 000009D4 2074686520726F6F74-
  1387 000009DD 206F6620796F757220-
  1387 000009E6 626F6F742064726976-
  1387 000009EF 650D               
  1388 000009F1 0A                      		db 0Ah
  1389 000009F2 746F2072756E205769-     		db 'to run Windows in Enhanced Mode',0Dh,0Ah
  1389 000009FB 6E646F777320696E20-
  1389 00000A04 456E68616E63656420-
  1389 00000A0D 4D6F64650D0A       
  1390 00000A13 59                      NLS_YES		db 'Y'                  ; ...
  1391 00000A14 4E                      NLS_NO		db 'N'                  ; ...
  1392 00000A15 79                      NLS_yes2	db 'y'                  ; ...
  1393 00000A16 6E                      NLS_no2		db 'n'                  ; ...
  1394 00000A17 1B                      CANCHAR		db 1Bh			; ...
  1395 00000A18 00                      ESCCHAR		db 0			; ...
  1396 00000A19 40                      ESCTAB		db 64			; ...
  1397 00000A1A 4D                      		db 77
  1398 00000A1B 3B                      		db 59
  1399 00000A1C 53                      		db 83
  1400 00000A1D 3C                      		db 60
  1401 00000A1E 3E                      		db 62
  1402 00000A1F 3D                      		db 61
  1403 00000A20 3D                      		db 61
  1404 00000A21 3F                      		db 63
  1405 00000A22 4B                      		db 75
  1406 00000A23 52                      		db 82
  1407 00000A24 52                      		db 82
  1408 00000A25 41                      		db 65
  1409 00000A26 41                      		db 65
  1410 00000A27 [7714]                  ESCFUNC		dw GETCH		; ...
  1411 00000A29 [9915]                  		dw TWOESC
  1412 00000A2B [2116]                  		dw EXITINS
  1413 00000A2D [2116]                  		dw EXITINS	; ENTERINS
  1414 00000A2F [2215]                  		dw BACKSP
  1415 00000A31 [0D16]                  		dw REEDIT
  1416 00000A33 [0F15]                  		dw KILNEW
  1417 00000A35 [A015]                  		dw COPYLIN
  1418 00000A37 [D315]                  		dw SKIPSTR
  1419 00000A39 [A615]                  		dw COPYSTR
  1420 00000A3B [C915]                  		dw SKIPONE
  1421 00000A3D [AB15]                  		dw COPYONE
  1422 00000A3F [AB15]                  		dw COPYONE
  1423 00000A41 [2916]                  		dw CTRLZ
  1424                                  ; ---------------------------------------------------------------------------
  1425                                  ; START	OF FUNCTION CHUNK FOR _$STD_CON_STRING_INPUT
  1426                                  
  1427                                  OEMFunctionKey:				; ...
  1428 00000A43 E89009                  		call	_$STD_CON_INPUT_NO_ECHO
  1429 00000A46 B10E                    		mov	cl, 14		; ESCTABLEN
  1430 00000A48 57                      		push	di
  1431 00000A49 BF[190A]                		mov	di, ESCTAB
  1432 00000A4C 06                      		push	es
  1433 00000A4D 0E                      		push	cs
  1434 00000A4E 07                      		pop	es
  1435 00000A4F F2AE                    		repne scasb
  1436 00000A51 07                      		pop	es
  1437 00000A52 5F                      		pop	di
  1438 00000A53 D1E1                    		shl	cx, 1
  1439 00000A55 89CD                    		mov	bp, cx
  1440 00000A57 2EFFA6[270A]            		jmp	[cs:ESCFUNC+bp]	; [CS:BP+ESCFUNC]
  1441                                  ; END OF FUNCTION CHUNK	FOR _$STD_CON_STRING_INPUT
  1442                                  ; ---------------------------------------------------------------------------
  1443                                  
  1444                                  _$GET_DATE:				; ...
  1445 00000A5C 16                      		push	ss
  1446 00000A5D 1F                      		pop	ds
  1447 00000A5E E8BA00                  		call	READTIME
  1448 00000A61 A1[5203]                		mov	ax, [YEAR]
  1449 00000A64 8B1E[5003]              		mov	bx, word [DAY]
  1450 00000A68 E83AFA                  		call	Get_User_Stack
  1451 00000A6B 895C06                  		mov	[si+6],	bx	; [SI+user_env.user_DX]
  1452 00000A6E 05BC07                  		add	ax, 1980
  1453 00000A71 894404                  		mov	[si+4],	ax	; [SI+user_env.user_CX]
  1454 00000A74 36A0[5603]              		mov	al, [ss:WEEKDAY]
  1455                                  
  1456                                  RET20:					; ...
  1457 00000A78 C3                      		retn
  1458                                  ; ---------------------------------------------------------------------------
  1459                                  
  1460                                  _$SET_DATE:				; ...
  1461 00000A79 B0FF                    		mov	al, -1		; 0FFh
  1462 00000A7B 81E9BC07                		sub	cx, 1980
  1463 00000A7F 72F7                    		jb	short RET20
  1464 00000A81 83F977                  		cmp	cx, 119
  1465 00000A84 7712                    		ja	short RET24
  1466 00000A86 08F6                    		or	dh, dh
  1467 00000A88 74EE                    		jz	short RET20
  1468 00000A8A 08D2                    		or	dl, dl
  1469 00000A8C 74EA                    		jz	short RET20
  1470 00000A8E 80FE0C                  		cmp	dh, 0Ch
  1471 00000A91 7705                    		ja	short RET24
  1472 00000A93 16                      		push	ss
  1473 00000A94 1F                      		pop	ds
  1474 00000A95 E81901                  		call	DODATE
  1475                                  
  1476                                  RET24:					; ...
  1477 00000A98 C3                      		retn
  1478                                  ; ---------------------------------------------------------------------------
  1479                                  
  1480                                  _$GET_TIME:				; ...
  1481 00000A99 16                      		push	ss
  1482 00000A9A 1F                      		pop	ds
  1483 00000A9B E87D00                  		call	READTIME
  1484 00000A9E E804FA                  		call	Get_User_Stack
  1485 00000AA1 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  1486 00000AA4 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  1487 00000AA7 30C0                    		xor	al, al
  1488                                  
  1489                                  RET26:					; ...
  1490 00000AA9 C3                      		retn
  1491                                  ; ---------------------------------------------------------------------------
  1492                                  
  1493                                  _$SET_TIME:				; ...
  1494 00000AAA B0FF                    		mov	al, -1
  1495 00000AAC 80FD18                  		cmp	ch, 24
  1496 00000AAF 73F8                    		jnb	short RET26
  1497 00000AB1 80F93C                  		cmp	cl, 60
  1498 00000AB4 73F3                    		jnb	short RET26
  1499 00000AB6 80FE3C                  		cmp	dh, 60
  1500 00000AB9 73EE                    		jnb	short RET26
  1501 00000ABB 80FA64                  		cmp	dl, 100
  1502 00000ABE 73E9                    		jnb	short RET26
  1503 00000AC0 51                      		push	cx
  1504 00000AC1 52                      		push	dx
  1505 00000AC2 16                      		push	ss
  1506 00000AC3 1F                      		pop	ds
  1507 00000AC4 BB[B603]                		mov	bx, TIMEBUF
  1508 00000AC7 B90600                  		mov	cx, 6
  1509 00000ACA 31D2                    		xor	dx, dx
  1510 00000ACC 89D0                    		mov	ax, dx
  1511 00000ACE 53                      		push	bx
  1512 00000ACF E88C3D                  		call	SETREAD
  1513 00000AD2 1E                      		push	ds
  1514 00000AD3 C536[2E00]              		lds	si, [BCLOCK]
  1515 00000AD7 E8083D                  		call	DEVIOCALL2
  1516 00000ADA 1F                      		pop	ds
  1517 00000ADB 5B                      		pop	bx
  1518 00000ADC E8B23D                  		call	SETWRITE
  1519 00000ADF 8F06[BA03]              		pop	word [TIMEBUF+4]
  1520 00000AE3 8F06[B803]              		pop	word [TIMEBUF+2]
  1521 00000AE7 C536[2E00]              		lds	si, [BCLOCK]
  1522 00000AEB E8F43C                  		call	DEVIOCALL2
  1523 00000AEE 30C0                    		xor	al, al
  1524 00000AF0 C3                      		retn
  1525                                  
  1526                                  ; =============== S U B	R O U T	I N E =======================================
  1527                                  
  1528                                  
  1529                                   DATE16:		; ...
  1530 00000AF1 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  1531 00000AF6 51                      		push	cx
  1532 00000AF7 06                      		push	es
  1533 00000AF8 E82000                  		call	READTIME
  1534 00000AFB 07                      		pop	es
  1535 00000AFC D0E1                    		shl	cl, 1
  1536 00000AFE D0E1                    		shl	cl, 1
  1537 00000B00 D1E1                    		shl	cx, 1
  1538 00000B02 D1E1                    		shl	cx, 1
  1539 00000B04 D1E1                    		shl	cx, 1
  1540 00000B06 D0EE                    		shr	dh, 1
  1541 00000B08 08F1                    		or	cl, dh
  1542 00000B0A 89CA                    		mov	dx, cx
  1543 00000B0C A1[5103]                		mov	ax, word [MONTH]
  1544 00000B0F B104                    		mov	cl, 4
  1545 00000B11 D2E0                    		shl	al, cl
  1546 00000B13 D1E0                    		shl	ax, 1
  1547 00000B15 59                      		pop	cx
  1548 00000B16 0A06[5003]              		or	al, [DAY]
  1549                                  
  1550                                  RET21:					; ...
  1551 00000B1A C3                      		retn
  1552                                  
  1553                                  ; =============== S U B	R O U T	I N E =======================================
  1554                                  
  1555                                  READTIME:		; ...
  1556 00000B1B C706[910D]0000          		mov	word [DATE_FLAG], 0
  1557 00000B21 56                      		push	si
  1558 00000B22 53                      		push	bx
  1559 00000B23 BB[B603]                		mov	bx, TIMEBUF
  1560 00000B26 B90600                  		mov	cx, 6
  1561 00000B29 31D2                    		xor	dx, dx
  1562 00000B2B 89D0                    		mov	ax, dx
  1563 00000B2D E82E3D                  		call	SETREAD
  1564 00000B30 1E                      		push	ds
  1565 00000B31 C536[2E00]              		lds	si, [BCLOCK]
  1566 00000B35 E8AA3C                  		call	DEVIOCALL2
  1567 00000B38 1F                      		pop	ds
  1568 00000B39 5B                      		pop	bx
  1569 00000B3A 5E                      		pop	si
  1570 00000B3B A1[B603]                		mov	ax, [TIMEBUF]
  1571 00000B3E 8B0E[B803]              		mov	cx, [TIMEBUF+2]
  1572 00000B42 8B16[BA03]              		mov	dx, [TIMEBUF+4]
  1573 00000B46 3B06[5403]              		cmp	ax, [DAYCNT]
  1574 00000B4A 74CE                    		jz	short RET21
  1575 00000B4C 3D36AB                  		cmp	ax, 43830	; FOURYEARS*30
  1576 00000B4F 733D                    		jnb	short RET22
  1577 00000B51 A3[5403]                		mov	[DAYCNT], ax
  1578 00000B54 56                      		push	si
  1579 00000B55 51                      		push	cx
  1580 00000B56 52                      		push	dx
  1581 00000B57 31D2                    		xor	dx, dx
  1582 00000B59 B9B505                  		mov	cx, 1461	; FOURYEARS
  1583 00000B5C F7F1                    		div	cx
  1584 00000B5E D1E0                    		shl	ax, 1
  1585 00000B60 D1E0                    		shl	ax, 1
  1586 00000B62 D1E0                    		shl	ax, 1
  1587 00000B64 89C1                    		mov	cx, ax
  1588 00000B66 BE[140D]                		mov	si, YRTAB
  1589 00000B69 E82300                  		call	DSLIDE
  1590 00000B6C D1E9                    		shr	cx, 1
  1591 00000B6E 7304                    		jnb	short SK
  1592 00000B70 81C2C800                		add	dx, 200
  1593                                  
  1594                                  SK:					; ...
  1595 00000B74 E82400                  		call	SETYEAR
  1596 00000B77 B101                    		mov	cl, 1
  1597 00000B79 BE[1C0D]                		mov	si, MONTAB
  1598 00000B7C E81000                  		call	DSLIDE
  1599 00000B7F 880E[5103]              		mov	[MONTH], cl
  1600 00000B83 42                      		inc	dx
  1601 00000B84 8816[5003]              		mov	[DAY], dl
  1602 00000B88 E89700                  		call	WKDAY
  1603 00000B8B 5A                      		pop	dx
  1604 00000B8C 59                      		pop	cx
  1605 00000B8D 5E                      		pop	si
  1606                                  
  1607                                  RET22:					; ...
  1608 00000B8E C3                      		retn
  1609                                  
  1610                                  ; =============== S U B	R O U T	I N E =======================================
  1611                                  
  1612                                  DSLIDE:		; ...
  1613 00000B8F B400                    		mov	ah, 0
  1614                                  
  1615                                  DSLIDE1:				; ...
  1616 00000B91 AC                      		lodsb
  1617 00000B92 39C2                    		cmp	dx, ax
  1618 00000B94 72F8                    		jb	short RET22
  1619 00000B96 29C2                    		sub	dx, ax
  1620 00000B98 41                      		inc	cx
  1621 00000B99 EBF6                    		jmp	short DSLIDE1
  1622                                  
  1623                                  ; =============== S U B	R O U T	I N E =======================================
  1624                                  
  1625                                  SETYEAR:
  1626 00000B9B 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  1627 00000BA0 880E[5203]              		mov	byte [YEAR], cl
  1628                                  
  1629                                  CHKYR:					; ...
  1630 00000BA4 F6C103                  		test	cl, 3
  1631 00000BA7 B01C                    		mov	al, 28
  1632 00000BA9 7502                    		jnz	short SAVFEB
  1633 00000BAB FEC0                    		inc	al
  1634                                  
  1635                                  SAVFEB:					; ...
  1636 00000BAD A2[1D0D]                		mov	[february], al ; [MONTAB+1]
  1637                                  
  1638                                  RET23:					; ...
  1639 00000BB0 C3                      		retn
  1640                                  
  1641                                  ; =============== S U B	R O U T	I N E =======================================
  1642                                  
  1643                                  DODATE:		; ...
  1644 00000BB1 E8F0FF                  		call	CHKYR
  1645 00000BB4 88F0                    		mov	al, dh
  1646 00000BB6 BB[1B0D]                		mov	bx, YRTAB+7	; offset MONTAB-1
  1647 00000BB9 D7                      		xlat
  1648 00000BBA 38D0                    		cmp	al, dl
  1649 00000BBC B0FF                    		mov	al, -1
  1650 00000BBE 72F0                    		jb	short RET23
  1651 00000BC0 E8D8FF                  		call	SETYEAR
  1652 00000BC3 8916[5003]              		mov	word [DAY], dx
  1653 00000BC7 D1E9                    		shr	cx, 1
  1654 00000BC9 D1E9                    		shr	cx, 1
  1655 00000BCB B8B505                  		mov	ax, 1461	; FOURYEARS
  1656 00000BCE 89D3                    		mov	bx, dx
  1657 00000BD0 F7E1                    		mul	cx
  1658 00000BD2 8A0E[5203]              		mov	cl, byte [YEAR]
  1659 00000BD6 80E103                  		and	cl, 3
  1660 00000BD9 BE[140D]                		mov	si, YRTAB
  1661 00000BDC 89C2                    		mov	dx, ax
  1662 00000BDE D1E1                    		shl	cx, 1
  1663 00000BE0 E85200                  		call	DSUM
  1664 00000BE3 88F9                    		mov	cl, bh
  1665 00000BE5 BE[1C0D]                		mov	si, MONTAB
  1666 00000BE8 49                      		dec	cx
  1667 00000BE9 E84900                  		call	DSUM
  1668 00000BEC 88D9                    		mov	cl, bl
  1669 00000BEE 49                      		dec	cx
  1670 00000BEF 01CA                    		add	dx, cx
  1671 00000BF1 92                      		xchg	ax, dx
  1672 00000BF2 A3[5403]                		mov	[DAYCNT], ax
  1673 00000BF5 56                      		push	si
  1674 00000BF6 53                      		push	bx
  1675 00000BF7 50                      		push	ax
  1676 00000BF8 BB[B603]                		mov	bx, TIMEBUF
  1677 00000BFB B90600                  		mov	cx, 6
  1678 00000BFE 31D2                    		xor	dx, dx
  1679 00000C00 89D0                    		mov	ax, dx
  1680 00000C02 53                      		push	bx
  1681 00000C03 E8583C                  		call	SETREAD
  1682 00000C06 1E                      		push	ds
  1683 00000C07 C536[2E00]              		lds	si, [BCLOCK]
  1684 00000C0B E8D43B                  		call	DEVIOCALL2
  1685 00000C0E 1F                      		pop	ds
  1686 00000C0F 5B                      		pop	bx
  1687 00000C10 E87E3C                  		call	SETWRITE
  1688 00000C13 8F06[B603]              		pop	word [TIMEBUF]
  1689 00000C17 1E                      		push	ds
  1690 00000C18 C536[2E00]              		lds	si, [BCLOCK]
  1691 00000C1C E8C33B                  		call	DEVIOCALL2
  1692 00000C1F 1F                      		pop	ds
  1693 00000C20 5B                      		pop	bx
  1694 00000C21 5E                      		pop	si
  1695                                  
  1696                                  WKDAY:					; ...
  1697 00000C22 A1[5403]                		mov	ax, [DAYCNT]
  1698 00000C25 31D2                    		xor	dx, dx
  1699 00000C27 B90700                  		mov	cx, 7
  1700 00000C2A 40                      		inc	ax
  1701 00000C2B 40                      		inc	ax
  1702 00000C2C F7F1                    		div	cx
  1703 00000C2E 8816[5603]              		mov	[WEEKDAY], dl
  1704 00000C32 30C0                    		xor	al, al
  1705 00000C34 C3                      		retn
  1706                                  
  1707                                  ; =============== S U B	R O U T	I N E =======================================
  1708                                  
  1709                                  DSUM:		; ...
  1710 00000C35 B400                    		mov	ah, 0
  1711 00000C37 E305                    		jcxz	DUSUM9
  1712                                  
  1713                                  DSUM1:					; ...
  1714 00000C39 AC                      		lodsb
  1715 00000C3A 01C2                    		add	dx, ax
  1716 00000C3C E2FB                    		loop	DSUM1
  1717                                  
  1718                                  DUSUM9:					; ...
  1719 00000C3E C3                      		retn
  1720                                  ; ---------------------------------------------------------------------------
  1721                                  
  1722                                  _$GET_VERSION:				; ...
  1723 00000C3F 16                      		push	ss
  1724 00000C40 1F                      		pop	ds
  1725 00000C41 8B1E[B403]              		mov	bx, word [USERNUM+2]
  1726 00000C45 8B0E[B203]              		mov	cx, word [USERNUM]
  1727 00000C49 3C01                    		cmp	al, 1
  1728 00000C4B 7502                    		jnz	short Norm_Vers
  1729 00000C4D 30FF                    		xor	bh, bh
  1730                                  
  1731                                  Norm_Vers:				; ...
  1732 00000C4F 1E                      		push	ds
  1733 00000C50 8E1E[3003]              		mov	ds, [CurrentPDB]
  1734 00000C54 A14000                  		mov	ax, [40h]	; [PDB.Version]
  1735 00000C57 1F                      		pop	ds
  1736 00000C58 E84AF8                  		call	Get_User_Stack
  1737 00000C5B 8904                    		mov	[si], ax	; [SI+user_env.user_AX]
  1738 00000C5D 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  1739 00000C60 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  1740 00000C63 C3                      		retn
  1741                                  ; ---------------------------------------------------------------------------
  1742                                  
  1743                                  _$GET_VERIFY_ON_WRITE:			; ...
  1744 00000C64 36A0[FF02]              		mov	al, [ss:VERFLG]
  1745 00000C68 C3                      		retn
  1746                                  ; ---------------------------------------------------------------------------
  1747                                  
  1748                                  _$SET_VERIFY_ON_WRITE:			; ...
  1749 00000C69 2401                    		and	al, 1
  1750 00000C6B 36A2[FF02]              		mov	[ss:VERFLG], al
  1751                                  
  1752                                  RET27:					; ...
  1753 00000C6F C3                      		retn
  1754                                  ; ---------------------------------------------------------------------------
  1755                                  
  1756                                  _$INTERNATIONAL:			; ...
  1757 00000C70 3CFF                    		cmp	al, 0FFh
  1758 00000C72 7404                    		jz	short BX_HAS_CODE
  1759 00000C74 88C3                    		mov	bl, al
  1760 00000C76 30FF                    		xor	bh, bh
  1761                                  
  1762                                  BX_HAS_CODE:				; ...
  1763 00000C78 1E                      		push	ds
  1764 00000C79 07                      		pop	es
  1765 00000C7A 52                      		push	dx
  1766 00000C7B 5F                      		pop	di
  1767 00000C7C 16                      		push	ss
  1768 00000C7D 1F                      		pop	ds
  1769 00000C7E 83FFFF                  		cmp	di, 0FFFFh	; -1
  1770 00000C81 7465                    		jz	short international_set
  1771 00000C83 09DB                    		or	bx, bx
  1772 00000C85 7505                    		jnz	short international_find
  1773 00000C87 BE[2A12]                		mov	si, COUNTRY_CDPG
  1774 00000C8A EB41                    		jmp	short international_copy
  1775                                  ; ---------------------------------------------------------------------------
  1776                                  
  1777                                  international_find:			; ...
  1778 00000C8C BD0000                  		mov	bp, 0
  1779 00000C8F E80B00                  		call	international_get
  1780 00000C92 725C                    		jb	short errtn
  1781 00000C94 83FB00                  		cmp	bx, 0
  1782 00000C97 7534                    		jnz	short international_copy
  1783 00000C99 89D3                    		mov	bx, dx
  1784 00000C9B EB40                    		jmp	short international_ok3
  1785                                  
  1786                                  ; =============== S U B	R O U T	I N E =======================================
  1787                                  
  1788                                  
  1789                                   international_get:	; ...
  1790 00000C9D BE[2A12]                		mov	si, COUNTRY_CDPG
  1791 00000CA0 363B5C68                		cmp	bx, [ss:si+68h]	; [SI+DOS_CCDPG.ccDosCountry]
  1792 00000CA4 74C9                    		jz	short RET27
  1793 00000CA6 89DA                    		mov	dx, bx
  1794 00000CA8 31DB                    		xor	bx, bx
  1795 00000CAA B80014                  		mov	ax, 1400h
  1796 00000CAD CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - INSTALLATION CHECK
  1797                                  					; Return: AL = 00h not installed, OK to	install
  1798                                  					; 01h not installed, not OK
  1799                                  					; FFh installed
  1800 00000CAF 3CFF                    		cmp	al, 0FFh
  1801 00000CB1 7516                    		jnz	short interr
  1802 00000CB3 09ED                    		or	bp, bp
  1803 00000CB5 7507                    		jnz	short stcdpg
  1804 00000CB7 B80414                  		mov	ax, 1404h
  1805 00000CBA CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - GET COUNTRY INFO
  1806                                  					; BX = code page, DX = country code, DS:SI -> internal code page structure
  1807                                  					; ES:DI	-> user	buffer
  1808                                  					; Return: AL = status
  1809 00000CBC EB05                    		jmp	short chkok
  1810                                  ; ---------------------------------------------------------------------------
  1811                                  
  1812                                  stcdpg:					; ...
  1813 00000CBE B80314                  		mov	ax, 1403h
  1814 00000CC1 CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - SET COUNTRY INFO
  1815                                  					; DS:SI	-> internal code page structure
  1816                                  					; BX = code page, DX = country code
  1817                                  					; Return: AL = status
  1818                                  
  1819                                  chkok:					; ...
  1820 00000CC3 08C0                    		or	al, al
  1821 00000CC5 74A8                    		jz	short RET27
  1822                                  
  1823                                  setcarry:				; ...
  1824 00000CC7 F9                      		stc
  1825 00000CC8 C3                      		retn
  1826                                  ; ---------------------------------------------------------------------------
  1827                                  
  1828                                  interr:					; ...
  1829 00000CC9 B0FF                    		mov	al, 0FFh
  1830 00000CCB EBFA                    		jmp	short setcarry
  1831                                  
  1832                                  ; ---------------------------------------------------------------------------
  1833                                  
  1834                                  international_copy:			; ...
  1835 00000CCD 368B5C68                		mov	bx, [ss:si+68h]	; [ss:SI+DOS_CCDPG.ccDosCountry]
  1836 00000CD1 BE[9612]                		mov	si, COUNTRY_CDPG_108 ; COUNTRY_CDPG + 108
  1837 00000CD4 B91800                  		mov	cx, 24		; OLD_COUNTRY_SIZE
  1838 00000CD7 1E                      		push	ds
  1839 00000CD8 16                      		push	ss
  1840 00000CD9 1F                      		pop	ds
  1841 00000CDA F3A4                    		rep movsb
  1842 00000CDC 1F                      		pop	ds
  1843                                  
  1844                                  international_ok3:			; ...
  1845 00000CDD E8C5F7                  		call	Get_User_Stack
  1846 00000CE0 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  1847                                  
  1848                                  international_ok:			; ...
  1849 00000CE3 89D8                    		mov	ax, bx
  1850                                  
  1851                                  SYS_RET_OK_jmp:				; ...
  1852 00000CE5 E92CF9                  		jmp	SYS_RETURN	; SYS_RET_OK
  1853                                  ; ---------------------------------------------------------------------------
  1854                                  
  1855                                  international_set:			; ...
  1856 00000CE8 BD0100                  		mov	bp, 1
  1857 00000CEB E8AFFF                  		call	international_get
  1858 00000CEE 73F3                    		jnb	short international_ok
  1859                                  
  1860                                  errtn:					; ...
  1861 00000CF0 3CFF                    		cmp	al, 0FFh
  1862 00000CF2 7403                    		jz	short errtn2
  1863                                  
  1864                                  errtn1:					; ...
  1865 00000CF4 E926F9                  		jmp	SYS_RET_ERR
  1866                                  ; ---------------------------------------------------------------------------
  1867                                  
  1868                                  errtn2:					; ...
  1869 00000CF7 B001                    		mov	al, 1		; error_invalid_function
  1870 00000CF9 EBF9                    		jmp	short errtn1
  1871                                  ; ---------------------------------------------------------------------------
  1872                                  
  1873                                  _$GetExtCntry:				; ...
  1874 00000CFB 3C20                    		cmp	al, 20h		; CAP_ONE_CHAR
  1875 00000CFD 7269                    		jb	short notcap
  1876 00000CFF A880                    		test	al, 80h		; UPPER_TABLE
  1877 00000D01 7505                    		jnz	short fileupper
  1878 00000D03 BB[AF0A]                		mov	bx, UCASE_TAB_2 ; UCASE_TAB+2
  1879 00000D06 EB03                    		jmp	short capit
  1880                                  ; ---------------------------------------------------------------------------
  1881                                  
  1882                                  fileupper:				; ...
  1883 00000D08 BB[310B]                		mov	bx, FILE_UCASE_TAB_2 ; FILE_UCASE_TAB+2
  1884                                  
  1885                                  capit:					; ...
  1886 00000D0B 3C20                    		cmp	al, 20h		; CAP_ONE_CHAR
  1887 00000D0D 750D                    		jnz	short chkyes
  1888 00000D0F 88D0                    		mov	al, dl
  1889 00000D11 E8F744                  		call	GETLET3
  1890 00000D14 E88EF7                  		call	Get_User_Stack
  1891 00000D17 884406                  		mov	[si+6],	al	; [SI+user_env.user_DX]
  1892 00000D1A EB24                    		jmp	short nono
  1893                                  ; ---------------------------------------------------------------------------
  1894                                  
  1895                                  chkyes:					; ...
  1896 00000D1C 3C23                    		cmp	al, 23h		; CHECK_YES_NO
  1897 00000D1E 7522                    		jnz	short capstring
  1898 00000D20 31C0                    		xor	ax, ax
  1899 00000D22 2E3A16[130A]            		cmp	dl, [cs:NLS_YES] ; 'Y'
  1900 00000D27 7416                    		jz	short yesyes
  1901 00000D29 2E3A16[150A]            		cmp	dl, [cs:NLS_yes2] ; 'y'
  1902 00000D2E 740F                    		jz	short yesyes
  1903 00000D30 2E3A16[140A]            		cmp	dl, [cs:NLS_NO]	; 'n'
  1904 00000D35 7409                    		jz	short nono
  1905 00000D37 2E3A16[160A]            		cmp	dl, [cs:NLS_no2]
  1906 00000D3C 7402                    		jz	short nono
  1907 00000D3E 40                      		inc	ax
  1908                                  
  1909                                  yesyes:					; ...
  1910 00000D3F 40                      		inc	ax
  1911                                  
  1912                                  nono:					; ...
  1913 00000D40 EBA3                    		jmp	short SYS_RET_OK_jmp
  1914                                  ; ---------------------------------------------------------------------------
  1915                                  
  1916                                  capstring:				; ...
  1917 00000D42 89D6                    		mov	si, dx
  1918 00000D44 3C21                    		cmp	al, 21h		; CAP_STRING
  1919 00000D46 750F                    		jnz	short capascii
  1920 00000D48 09C9                    		or	cx, cx
  1921 00000D4A 74F4                    		jz	short nono
  1922                                  
  1923                                  concap:					; ...
  1924 00000D4C AC                      		lodsb
  1925 00000D4D E8BB44                  		call	GETLET3
  1926 00000D50 8844FF                  		mov	[si-1],	al
  1927 00000D53 E2F7                    		loop	concap
  1928 00000D55 EBE9                    		jmp	short nono
  1929                                  ; ---------------------------------------------------------------------------
  1930                                  
  1931                                  capascii:				; ...
  1932 00000D57 3C22                    		cmp	al, 22h		; CAP_ASCIIZ
  1933 00000D59 7545                    		jnz	short capinval
  1934                                  
  1935                                  concap2:				; ...
  1936 00000D5B AC                      		lodsb
  1937 00000D5C 08C0                    		or	al, al
  1938 00000D5E 74E0                    		jz	short nono
  1939 00000D60 E8A844                  		call	GETLET3
  1940 00000D63 8844FF                  		mov	[si-1],	al
  1941 00000D66 EBF3                    		jmp	short concap2
  1942                                  ; ---------------------------------------------------------------------------
  1943                                  
  1944                                  notcap:					; ...
  1945 00000D68 83F905                  		cmp	cx, 5
  1946 00000D6B 7278                    		jb	short sizeerror
  1947 00000D6D 16                      		push	ss
  1948 00000D6E 1F                      		pop	ds
  1949 00000D6F BE[2A12]                		mov	si, COUNTRY_CDPG
  1950 00000D72 83FAFF                  		cmp	dx, 0FFFFh	; -1
  1951 00000D75 7503                    		jnz	short GETCDPG
  1952 00000D77 8B5468                  		mov	dx, [si+68h]	; [SI+DOS_CCDPG.ccDosCountry]
  1953                                  
  1954                                  GETCDPG:				; ...
  1955 00000D7A 83FBFF                  		cmp	bx, 0FFFFh	; -1
  1956 00000D7D 7503                    		jnz	short CHKAGAIN
  1957 00000D7F 8B5C6A                  		mov	bx, [si+6Ah]	; [SI+DOS_CCDPG.ccDosCodePage]
  1958                                  
  1959                                  CHKAGAIN:				; ...
  1960 00000D82 3B5468                  		cmp	dx, [si+68h]	; [SI+DOS_CCDPG.ccDosCountry]
  1961 00000D85 7551                    		jnz	short CHKNLS
  1962 00000D87 3B5C6A                  		cmp	bx, [si+6Ah]	; [SI+DOS_CCDPG.ccDosCodePage]
  1963 00000D8A 754C                    		jnz	short CHKNLS
  1964 00000D8C 8B5C48                  		mov	bx, [si+48h]	; [SI+DOS_CCDPG.ccSysCodePage]
  1965 00000D8F 51                      		push	cx
  1966 00000D90 8B4C4A                  		mov	cx, [si+4Ah]	; [SI+DOS_CCDPG.ccNumber_of_entries]
  1967 00000D93 BE[7612]                		mov	si, COUNTRY_CDPG_76 ; COUNTRY_CDPG+76
  1968                                  					; COUNTRY_CDPG+DOS_CCDPG.ccSetUcase
  1969                                  
  1970                                  NXTENTRY:				; ...
  1971 00000D96 3A04                    		cmp	al, [si]
  1972 00000D98 740B                    		jz	short FOUNDIT
  1973 00000D9A 83C605                  		add	si, 5
  1974 00000D9D E2F7                    		loop	NXTENTRY
  1975 00000D9F 59                      		pop	cx
  1976                                  
  1977                                  capinval:				; ...
  1978 00000DA0 B001                    		mov	al, 1
  1979                                  
  1980                                  SYS_RET_ERR_jmp:			; ...
  1981 00000DA2 E978F8                  		jmp	SYS_RET_ERR
  1982                                  ; ---------------------------------------------------------------------------
  1983                                  
  1984                                  FOUNDIT:				; ...
  1985 00000DA5 A4                      		movsb
  1986 00000DA6 59                      		pop	cx
  1987 00000DA7 3C01                    		cmp	al, 1		; SetCountryInfo
  1988 00000DA9 7414                    		jz	short setsize
  1989 00000DAB B90400                  		mov	cx, 4
  1990 00000DAE B80500                  		mov	ax, 5
  1991                                  
  1992                                  OK_RETN:				; ...
  1993 00000DB1 F3A4                    		rep movsb
  1994 00000DB3 89C1                    		mov	cx, ax
  1995 00000DB5 89D8                    		mov	ax, bx
  1996                                  
  1997                                  GETDONE:				; ...
  1998 00000DB7 E8EBF6                  		call	Get_User_Stack
  1999 00000DBA 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  2000                                  
  2001                                  nono_jmp:				; ...
  2002 00000DBD EB81                    		jmp	short nono
  2003                                  ; ---------------------------------------------------------------------------
  2004                                  
  2005                                  setsize:				; ...
  2006 00000DBF 83E903                  		sub	cx, 3
  2007 00000DC2 390C                    		cmp	[si], cx
  2008 00000DC4 7302                    		jnb	short setsize2
  2009 00000DC6 8B0C                    		mov	cx, [si]
  2010                                  
  2011                                  setsize2:				; ...
  2012 00000DC8 26890D                  		mov	[es:di], cx
  2013 00000DCB 83C702                  		add	di, 2
  2014 00000DCE 83C602                  		add	si, 2
  2015 00000DD1 89C8                    		mov	ax, cx
  2016 00000DD3 83C003                  		add	ax, 3
  2017 00000DD6 EBD9                    		jmp	short OK_RETN
  2018                                  ; ---------------------------------------------------------------------------
  2019                                  
  2020                                  CHKNLS:					; ...
  2021 00000DD8 30E4                    		xor	ah, ah
  2022 00000DDA 50                      		push	ax
  2023 00000DDB 5D                      		pop	bp
  2024 00000DDC B80014                  		mov	ax, 1400h
  2025 00000DDF CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - INSTALLATION CHECK
  2026                                  					; Return: AL = 00h not installed, OK to	install
  2027                                  					; 01h not installed, not OK
  2028                                  					; FFh installed
  2029 00000DE1 3CFF                    		cmp	al, 0FFh
  2030 00000DE3 7404                    		jz	short NLSNXT
  2031                                  
  2032                                  sizeerror:				; ...
  2033 00000DE5 B001                    		mov	al, 1		; error_invalid_function
  2034                                  
  2035                                  sys_ret_err_jmp2:			; ...
  2036 00000DE7 EBB9                    		jmp	short SYS_RET_ERR_jmp
  2037                                  ; ---------------------------------------------------------------------------
  2038                                  
  2039                                  NLSNXT:					; ...
  2040 00000DE9 B80214                  		mov	ax, 1402h
  2041 00000DEC CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - GET COUNTRY INFO
  2042                                  					; BP = subfunction, BX = code page
  2043                                  					; DX = country code, DS:SI -> internal code page structure
  2044                                  					; ES:DI	-> user	buffer,	CX = size of user buffer
  2045                                  					; Return: AL = status
  2046                                  					; 00h successful
  2047                                  					; else DOS error code
  2048 00000DEE 3C00                    		cmp	al, 0
  2049 00000DF0 7505                    		jnz	short NLSERROR
  2050 00000DF2 8B4448                  		mov	ax, [si+48h]	; [SI+DOS_CCDPG.ccSysCodePage]
  2051 00000DF5 EBC0                    		jmp	short GETDONE
  2052                                  ; ---------------------------------------------------------------------------
  2053                                  
  2054                                  NLSERROR:				; ...
  2055 00000DF7 EBEE                    		jmp	short sys_ret_err_jmp2
  2056                                  ; ---------------------------------------------------------------------------
  2057                                  
  2058                                  _$GetSetCdPg:				; ...
  2059 00000DF9 16                      		push	ss
  2060 00000DFA 1F                      		pop	ds
  2061 00000DFB BE[2A12]                		mov	si, COUNTRY_CDPG
  2062 00000DFE 3C01                    		cmp	al, 1
  2063 00000E00 7511                    		jnz	short setglpg
  2064 00000E02 8B5C6A                  		mov	bx, [si+6Ah]	; [SI+DOS_CCDPG.ccDosCodePage]
  2065 00000E05 8B5448                  		mov	dx, [si+48h]	; [SI+DOS_CCDPG.ccSysCodePage]
  2066 00000E08 E89AF6                  		call	Get_User_Stack
  2067 00000E0B 895C02                  		mov	[si+2],	bx
  2068 00000E0E 895406                  		mov	[si+6],	dx
  2069                                  
  2070                                  OK_RETURN:				; ...
  2071 00000E11 EBAA                    		jmp	short nono_jmp
  2072                                  ; ---------------------------------------------------------------------------
  2073                                  
  2074                                  setglpg:				; ...
  2075 00000E13 3C02                    		cmp	al, 2
  2076 00000E15 7533                    		jnz	short nomem
  2077 00000E17 8B5468                  		mov	dx, [si+68h]	; [SI+DOS_CCDPG.ccDosCountry]
  2078 00000E1A B80014                  		mov	ax, 1400h
  2079 00000E1D CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - INSTALLATION CHECK
  2080                                  					; Return: AL = 00h not installed, OK to	install
  2081                                  					; 01h not installed, not OK
  2082                                  					; FFh installed
  2083 00000E1F 3CFF                    		cmp	al, 0FFh
  2084 00000E21 7527                    		jnz	short nomem
  2085 00000E23 B80114                  		mov	ax, 1401h
  2086 00000E26 CD2F                    		int	2Fh		; - Multiplex -	NLSFUNC.COM - CHANGE CODE PAGE
  2087                                  					; DS:SI	-> internal code page structure
  2088                                  					; BX = new code	page, DX = country code???
  2089                                  					; Return: AL = status
  2090                                  					; 00h successful
  2091                                  					; else DOS error code
  2092 00000E28 08C0                    		or	al, al
  2093 00000E2A 74E5                    		jz	short OK_RETURN
  2094 00000E2C 3C41                    		cmp	al, 65
  2095 00000E2E 7518                    		jnz	short seterr
  2096 00000E30 B84100                  		mov	ax, 65
  2097 00000E33 A3[2403]                		mov	[EXTERR], ax
  2098 00000E36 C606[2603]06            		mov	byte [EXTERR_ACTION], 6 ; errACT_Ignore
  2099 00000E3B C606[2703]05            		mov	byte [EXTERR_CLASS], 5 ; errCLASS_HrdFail
  2100 00000E40 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  2101 00000E45 E9DDF7                  		jmp	From_GetSet
  2102                                  ; ---------------------------------------------------------------------------
  2103                                  
  2104                                  seterr:					; ...
  2105 00000E48 EBAD                    		jmp	short NLSERROR
  2106                                  ; ---------------------------------------------------------------------------
  2107                                  
  2108                                  nomem:					; ...
  2109 00000E4A B001                    		mov	al, 1		; error_invalid_function
  2110 00000E4C EBFA                    		jmp	short seterr
  2111                                  ; ---------------------------------------------------------------------------
  2112                                  
  2113                                  _$GET_DRIVE_FREESPACE:			; ...
  2114 00000E4E 16                      		push	ss
  2115 00000E4F 1F                      		pop	ds
  2116 00000E50 88D0                    		mov	al, dl
  2117 00000E52 E8375E                  		call	GETTHISDRV
  2118                                  
  2119                                  SET_AX_RET:				; ...
  2120 00000E55 7218                    		jb	short BADFDRV
  2121 00000E57 E8971F                  		call	DISK_INFO
  2122 00000E5A 87D3                    		xchg	dx, bx
  2123 00000E5C 72F7                    		jb	short SET_AX_RET
  2124 00000E5E 30E4                    		xor	ah, ah
  2125                                  
  2126                                  DoSt:					; ...
  2127 00000E60 E842F6                  		call	Get_User_Stack
  2128 00000E63 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  2129 00000E66 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  2130 00000E69 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  2131 00000E6C 8904                    		mov	[si], ax	; [SI+user_env.user_AX]
  2132 00000E6E C3                      		retn
  2133                                  ; ---------------------------------------------------------------------------
  2134                                  
  2135                                  BADFDRV:				; ...
  2136 00000E6F E8C1F7                  		call	FCB_RET_ER
  2137 00000E72 B8FFFF                  		mov	ax, 0FFFFh	; -1
  2138 00000E75 EBE9                    		jmp	short DoSt
  2139                                  ; ---------------------------------------------------------------------------
  2140                                  
  2141                                  _$GET_DMA:				; ...
  2142 00000E77 368B1E[2C03]            		mov	bx, word [ss:DMAADD]
  2143 00000E7C 368B0E[2E03]            		mov	cx, word [ss:DMAADD+2]
  2144 00000E81 E821F6                  		call	Get_User_Stack
  2145 00000E84 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  2146 00000E87 894C10                  		mov	[si+10h], cx	; [SI+user_env.user_ES]
  2147 00000E8A C3                      		retn
  2148                                  ; ---------------------------------------------------------------------------
  2149                                  
  2150                                  _$SET_DMA:				; ...
  2151 00000E8B 368916[2C03]            		mov	word [ss:DMAADD], dx
  2152 00000E90 368C1E[2E03]            		mov	word [ss:DMAADD+2],	ds
  2153 00000E95 C3                      		retn
  2154                                  ; ---------------------------------------------------------------------------
  2155                                  
  2156                                  _$GET_DEFAULT_DRIVE:			; ...
  2157 00000E96 36A0[3603]              		mov	al, [ss:CURDRV]
  2158 00000E9A C3                      		retn
  2159                                  ; ---------------------------------------------------------------------------
  2160                                  
  2161                                  _$SET_DEFAULT_DRIVE:			; ...
  2162 00000E9B 88D0                    		mov	al, dl
  2163 00000E9D FEC0                    		inc	al
  2164 00000E9F E8CD5D                  		call	GetVisDrv
  2165 00000EA2 7204                    		jb	short SETRET
  2166 00000EA4 36A2[3603]              		mov	[ss:CURDRV], al
  2167                                  
  2168                                  SETRET:					; ...
  2169 00000EA8 36A0[4700]              		mov	al, [ss:CDSCOUNT]
  2170 00000EAC C3                      		retn
  2171                                  
  2172                                  ; =============== S U B	R O U T	I N E =======================================
  2173                                  
  2174                                  
  2175                                   _$GET_INTERRUPT_VECTOR: ; ...
  2176 00000EAD E83100                  		call	RECSET
  2177 00000EB0 26C41F                  		les	bx, [es:bx]
  2178 00000EB3 E8EFF5                  		call	Get_User_Stack
  2179 00000EB6 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  2180 00000EB9 8C4410                  		mov	word [si+10h], es ;	[SI+user_env.user_ES]
  2181 00000EBC C3                      		retn
  2182                                  
  2183                                  ; ---------------------------------------------------------------------------
  2184                                  
  2185                                  _$SET_INTERRUPT_VECTOR:			; ...
  2186 00000EBD E82100                  		call	RECSET
  2187 00000EC0 FA                      		cli
  2188 00000EC1 268917                  		mov	[es:bx], dx
  2189 00000EC4 268C5F02                		mov	word [es:bx+2], ds
  2190 00000EC8 FB                      		sti
  2191 00000EC9 36F606[8600]04          		test	byte [ss:DOS_FLAG], 4 ; EXECA20OFF
  2192 00000ECF 7501                    		jnz	short siv_1
  2193 00000ED1 C3                      		retn
  2194                                  ; ---------------------------------------------------------------------------
  2195                                  
  2196                                  siv_1:					; ...
  2197 00000ED2 36803E[8500]00          		cmp	byte [ss:A20OFF_COUNT], 0
  2198 00000ED8 7506                    		jnz	short siv_2
  2199 00000EDA 36C606[8500]01          		mov	byte [ss:A20OFF_COUNT], 1
  2200                                  
  2201                                  siv_2:					; ...
  2202 00000EE0 C3                      		retn
  2203                                  
  2204                                  ; =============== S U B	R O U T	I N E =======================================
  2205                                  
  2206                                  
  2207                                   RECSET:		; ...
  2208 00000EE1 31DB                    		xor	bx, bx
  2209 00000EE3 8EC3                    		mov	es, bx
  2210 00000EE5 88C3                    		mov	bl, al
  2211 00000EE7 D1E3                    		shl	bx, 1
  2212 00000EE9 D1E3                    		shl	bx, 1
  2213 00000EEB C3                      		retn
  2214                                  
  2215                                  ; ---------------------------------------------------------------------------
  2216                                  
  2217                                  _$CHAR_OPER:				; ...
  2218 00000EEC 08C0                    		or	al, al
  2219 00000EEE B22F                    		mov	dl, '/'
  2220 00000EF0 7407                    		jz	short chop_1
  2221 00000EF2 3C02                    		cmp	al, 2
  2222 00000EF4 B2FF                    		mov	dl, 0FFh	; -1
  2223 00000EF6 7401                    		jz	short chop_1
  2224 00000EF8 C3                      		retn
  2225                                  ; ---------------------------------------------------------------------------
  2226                                  
  2227                                  chop_1:					; ...
  2228 00000EF9 E8A9F5                  		call	Get_User_Stack
  2229 00000EFC 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  2230 00000EFF C3                      		retn
  2231                                  ; ---------------------------------------------------------------------------
  2232                                  
  2233                                  _$GetExtendedError:			; ...
  2234 00000F00 16                      		push	ss
  2235 00000F01 1F                      		pop	ds
  2236 00000F02 A1[2403]                		mov	ax, [EXTERR]
  2237 00000F05 C43E[2803]              		les	di, [EXTERRPT]
  2238 00000F09 8B1E[2603]              		mov	bx, word [EXTERR_ACTION]	; BL = Action
  2239                                  					; BH = Class
  2240 00000F0D 8A2E[2303]              		mov	ch, [EXTERR_LOCUS]
  2241 00000F11 E891F5                  		call	Get_User_Stack
  2242 00000F14 897C0A                  		mov	[si+0Ah], di	; [SI+user_env.user_DI]
  2243 00000F17 8C4410                  		mov	word [si+10h], es ;	[SI+user_env.user_ES]
  2244 00000F1A 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
  2245 00000F1D 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  2246                                  
  2247                                  jmp_SYS_RET_OK:				; ...
  2248 00000F20 E9F1F6                  		jmp	SYS_RETURN
  2249                                  ; ---------------------------------------------------------------------------
  2250 00000F23 56                      		push	si
  2251 00000F24 BE[2A12]                		mov	si, COUNTRY_CDPG
  2252 00000F27 368B446A                		mov	ax, [ss:si+6Ah]	; [SI+DOS_CCDPG.ccDosCodePage]
  2253 00000F2B 5E                      		pop	si
  2254 00000F2C C3                      		retn
  2255                                  ; ---------------------------------------------------------------------------
  2256                                  
  2257                                  _$ECS_Call:				; ...
  2258 00000F2D 08C0                    		or	al, al
  2259 00000F2F 7512                    		jnz	short _okok
  2260 00000F31 E871F5                  		call	Get_User_Stack
  2261 00000F34 C74408[E50C]            		mov	word [si+8], DBCS_TAB+2 ;
  2262                                  					; [si+user_env.user_SI]
  2263 00000F39 06                      		push	es
  2264 00000F3A 2E8E06[0700]            		mov	es, [cs:DosDSeg]
  2265 00000F3F 8C440E                  		mov	word [si+0Eh], es ;	[SI+user_env.user_DS]
  2266 00000F42 07                      		pop	es
  2267                                  
  2268                                  _okok:					; ...
  2269 00000F43 EBDB                    		jmp	short jmp_SYS_RET_OK
  2270                                  ; ---------------------------------------------------------------------------
  2271                                  
  2272                                  _$PARSE_FILE_DESCRIPTOR:		; ...
  2273 00000F45 E85F41                  		call	MAKEFCB
  2274 00000F48 56                      		push	si
  2275 00000F49 E859F5                  		call	Get_User_Stack
  2276 00000F4C 8F4408                  		pop	word [si+8]	; [SI+user_env.user_SI]
  2277 00000F4F C3                      		retn
  2278                                  ; ---------------------------------------------------------------------------
  2279                                  
  2280                                  _$SLEAZEFUNC:				; ...
  2281 00000F50 B200                    		mov	dl, 0
  2282                                  
  2283                                  _$SLEAZEFUNCDL:				; ...
  2284 00000F52 16                      		push	ss
  2285 00000F53 1F                      		pop	ds
  2286 00000F54 88D0                    		mov	al, dl
  2287 00000F56 E8335D                  		call	GETTHISDRV
  2288                                  
  2289                                  SET_AL_RET:				; ...
  2290 00000F59 721E                    		jb	short BADSLDRIVE
  2291 00000F5B E8931E                  		call	DISK_INFO
  2292 00000F5E 72F9                    		jb	short SET_AL_RET
  2293 00000F60 8826[9805]              		mov	[FATBYTE], ah
  2294 00000F64 BF[9805]                		mov	di, FATBYTE
  2295 00000F67 30E4                    		xor	ah, ah
  2296 00000F69 E839F5                  		call	Get_User_Stack
  2297 00000F6C 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  2298 00000F6F 895C06                  		mov	[si+6],	bx	; [SI+user_env.user_DCX]
  2299 00000F72 897C02                  		mov	[si+2],	di	; [SI+user_env.user_BX]
  2300 00000F75 8C540E                  		mov	word [si+0Eh], ss ;	[SI+user_env.user_DS]
  2301 00000F78 C3                      		retn
  2302                                  ; ---------------------------------------------------------------------------
  2303                                  
  2304                                  BADSLDRIVE:				; ...
  2305 00000F79 E9B7F6                  		jmp	FCB_RET_ER
  2306                                  ; ---------------------------------------------------------------------------
  2307                                  
  2308                                  _$GET_INDOS_FLAG:			; ...
  2309 00000F7C E826F5                  		call	Get_User_Stack
  2310 00000F7F C74402[2103]            		mov	word [si+2], INDOS ; word [SI+user_env.user_BX]
  2311 00000F84 8C5410                  		mov	word [si+10h], ss  ; [SI+user_env.user_ES]
  2312 00000F87 C3                      		retn
  2313                                  ; ---------------------------------------------------------------------------
  2314                                  
  2315                                  _$GET_IN_VARS:				; ...
  2316 00000F88 E81AF5                  		call	Get_User_Stack
  2317 00000F8B C74402[2600]            		mov	word [si+2], SYSINITVARS ;
  2318                                  					; [SI+user_env.user_BX]
  2319 00000F90 8C5410                  		mov	word [si+10h], ss ; [SI+user_env.user_ES]
  2320 00000F93 C3                      		retn
  2321                                  ; ---------------------------------------------------------------------------
  2322                                  
  2323                                  _$GET_DEFAULT_DPB:			; ...
  2324 00000F94 B200                    		mov	dl, 0
  2325                                  
  2326                                  _$GET_DPB:				; ...
  2327 00000F96 16                      		push	ss
  2328 00000F97 1F                      		pop	ds
  2329 00000F98 88D0                    		mov	al, dl
  2330 00000F9A E8EF5C                  		call	GETTHISDRV
  2331 00000F9D 7222                    		jb	short ISNODRV
  2332 00000F9F C43E[A205]              		les	di, [THISCDS]
  2333 00000FA3 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  2334                                  					; (curdir_isnet>>8)
  2335 00000FA8 7517                    		jnz	short ISNODRV
  2336 00000FAA E8A903                  		call	ECritDisk
  2337 00000FAD E8E948                  		call	FATREAD_CDS
  2338 00000FB0 E8C303                  		call	LCritDisk
  2339 00000FB3 720C                    		jb	short ISNODRV
  2340 00000FB5 E8EDF4                  		call	Get_User_Stack
  2341 00000FB8 896C02                  		mov	[si+2],	bp	; [SI+user_env.user_BX]
  2342 00000FBB 8C440E                  		mov	word [si+0Eh], es ;	[SI+user_env.user_DS]
  2343 00000FBE 30C0                    		xor	al, al
  2344 00000FC0 C3                      		retn
  2345                                  ; ---------------------------------------------------------------------------
  2346                                  
  2347                                  ISNODRV:				; ...
  2348 00000FC1 B0FF                    		mov	al, 0FFh	; -1
  2349 00000FC3 C3                      		retn
  2350                                  ; ---------------------------------------------------------------------------
  2351                                  
  2352                                  _$DISK_RESET:				; ...
  2353 00000FC4 B0FF                    		mov	al, -1		; 0FFh
  2354 00000FC6 16                      		push	ss
  2355 00000FC7 1F                      		pop	ds
  2356 00000FC8 E88B03                  		call	ECritDisk
  2357 00000FCB 830E[1106]04            		or	word [DOS34_FLAG], 4 ; FROM_DISK_RESET
  2358 00000FD0 E8374C                  		call	FLUSHBUF
  2359 00000FD3 8326[1106]FB            		and	word [DOS34_FLAG], 0FFFBh ; NO_FROM_DISK_RESET
  2360 00000FD8 C706[B50D]0000          		mov	word [SC_STATUS], 0
  2361 00000FDE BBFFFF                  		mov	bx, -1
  2362 00000FE1 891E[2000]              		mov	word [LastBuffer+2], bx
  2363 00000FE5 891E[1E00]              		mov	word [LastBuffer], bx
  2364 00000FE9 E88A03                  		call	LCritDisk
  2365 00000FEC B8FFFF                  		mov	ax, -1		; 0FFFFh
  2366 00000FEF 50                      		push	ax
  2367 00000FF0 B82011                  		mov	ax, 1120h
  2368 00000FF3 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - FLUSH ALL DISK BUFFERS
  2369                                  					; DS = DOS CS
  2370                                  					; Return: CF clear (successful)
  2371 00000FF5 58                      		pop	ax
  2372 00000FF6 C3                      		retn
  2373                                  ; ---------------------------------------------------------------------------
  2374 00000FF7 0300                    _word_3		dw 3			; ...
  2375                                  ; ---------------------------------------------------------------------------
  2376                                  
  2377                                  _$SETDPB:				; ...
  2378 00000FF9 89EF                    		mov	di, bp
  2379 00000FFB 83C702                  		add	di, 2
  2380 00000FFE AD                      		lodsw
  2381 00000FFF AB                      		stosw
  2382 00001000 807C0300                		cmp	byte [si+3], 0 ; [SI+A_BPB.BPB_NUMBEROFFATS-2]
  2383 00001004 7507                    		jnz	short yesfat
  2384 00001006 26C6450400              		mov	byte [es:di+4], 0 ;	[ES:DI+DPB.FAT_COUNT-4]
  2385 0000100B EB77                    		jmp	short setend
  2386                                  ; ---------------------------------------------------------------------------
  2387                                  
  2388                                  yesfat:					; ...
  2389 0000100D 89C2                    		mov	dx, ax
  2390 0000100F AC                      		lodsb
  2391 00001010 FEC8                    		dec	al
  2392 00001012 AA                      		stosb
  2393 00001013 FEC0                    		inc	al
  2394 00001015 30E4                    		xor	ah, ah
  2395                                  
  2396                                  LOG2LOOP:				; ...
  2397 00001017 A801                    		test	al, 1
  2398 00001019 7506                    		jnz	short SAVLOG
  2399 0000101B FEC4                    		inc	ah
  2400 0000101D D0E8                    		shr	al, 1
  2401 0000101F EBF6                    		jmp	short LOG2LOOP
  2402                                  ; ---------------------------------------------------------------------------
  2403                                  
  2404                                  SAVLOG:					; ...
  2405 00001021 88E0                    		mov	al, ah
  2406 00001023 AA                      		stosb
  2407 00001024 88C3                    		mov	bl, al
  2408 00001026 A5                      		movsw
  2409 00001027 AC                      		lodsb
  2410 00001028 AA                      		stosb
  2411 00001029 88C7                    		mov	bh, al
  2412 0000102B AD                      		lodsw
  2413 0000102C AB                      		stosw
  2414 0000102D B105                    		mov	cl, 5
  2415 0000102F D3EA                    		shr	dx, cl
  2416 00001031 48                      		dec	ax
  2417 00001032 01D0                    		add	ax, dx
  2418 00001034 89D1                    		mov	cx, dx
  2419 00001036 31D2                    		xor	dx, dx
  2420 00001038 F7F1                    		div	cx
  2421 0000103A 89C1                    		mov	cx, ax
  2422 0000103C 47                      		inc	di
  2423 0000103D 47                      		inc	di
  2424 0000103E A5                      		movsw
  2425 0000103F AC                      		lodsb
  2426 00001040 26884617                		mov	[es:bp+17h], al	; [ES:BP+DPB.MEDIA]
  2427 00001044 AD                      		lodsw
  2428 00001045 AB                      		stosw
  2429 00001046 88FA                    		mov	dl, bh
  2430 00001048 30F6                    		xor	dh, dh
  2431 0000104A F7E2                    		mul	dx
  2432 0000104C 26034606                		add	ax, [es:bp+6]	; [ES:BP+DPB.FIRST_FAT]
  2433 00001050 AB                      		stosw
  2434 00001051 01C8                    		add	ax, cx
  2435 00001053 2689460B                		mov	[es:bp+0Bh], ax	; [ES:BP+DPB.FIRST_SECTOR]
  2436 00001057 88D9                    		mov	cl, bl
  2437 00001059 26837E0D00              		cmp	word [es:bp+0Dh], 0
  2438 0000105E 751C                    		jnz	short normal_dpb
  2439 00001060 30ED                    		xor	ch, ch
  2440 00001062 8B5C08                  		mov	bx, [si+8]	; [SI+A_BPB.BPB_BIGTOTALSECTORS-A_BPB.BPB_SECTORSPERTRACK]
  2441 00001065 8B540A                  		mov	dx, [si+0Ah]	; [SI+A_BPB.BPB_BIGTOTALSECTORS-A_BPB.BPB_SECTORSPERTRACK+2]
  2442 00001068 29C3                    		sub	bx, ax
  2443 0000106A 83DA00                  		sbb	dx, 0
  2444 0000106D 09C9                    		or	cx, cx
  2445 0000106F 7407                    		jz	short norot
  2446                                  
  2447                                  rott:					; ...
  2448 00001071 F8                      		clc
  2449 00001072 D1DA                    		rcr	dx, 1
  2450 00001074 D1DB                    		rcr	bx, 1
  2451 00001076 E2F9                    		loop	rott
  2452                                  
  2453                                  norot:					; ...
  2454 00001078 89D8                    		mov	ax, bx
  2455 0000107A EB08                    		jmp	short setend
  2456                                  ; ---------------------------------------------------------------------------
  2457                                  
  2458                                  normal_dpb:				; ...
  2459 0000107C 262B460D                		sub	ax, [es:bp+0Dh]
  2460 00001080 F7D8                    		neg	ax
  2461 00001082 D3E8                    		shr	ax, cl
  2462                                  
  2463                                  setend:					; ...
  2464 00001084 40                      		inc	ax
  2465 00001085 89C3                    		mov	bx, ax
  2466 00001087 268B460F                		mov	ax, [es:bp+0Fh]	; [ES:BP+DPB.FAT_SIZE]
  2467 0000108B 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
  2468 0000108F 81FBF60F                		cmp	bx, 0FF6h	; 4096-10
  2469 00001093 720B                    		jb	short setend_fat12
  2470 00001095 D1EA                    		shr	dx, 1
  2471 00001097 D1D8                    		rcr	ax, 1
  2472 00001099 3DF70F                  		cmp	ax, 0FF7h	; 4096-10+1
  2473 0000109C 7210                    		jb	short setend_faterr
  2474 0000109E EB09                    		jmp	short setend_fat16
  2475                                  ; ---------------------------------------------------------------------------
  2476                                  
  2477                                  setend_fat12:				; ...
  2478 000010A0 01C0                    		add	ax, ax
  2479 000010A2 11D2                    		adc	dx, dx
  2480 000010A4 2EF736[F70F]            		div	word [cs:_word_3]
  2481                                  
  2482                                  setend_fat16:				; ...
  2483 000010A9 48                      		dec	ax
  2484 000010AA 39D8                    		cmp	ax, bx
  2485 000010AC 7602                    		jbe	short setend_fat
  2486                                  
  2487                                  setend_faterr:				; ...
  2488 000010AE 89D8                    		mov	ax, bx
  2489                                  
  2490                                  setend_fat:				; ...
  2491 000010B0 2689460D                		mov	[es:bp+0Dh], ax	; [ES:BP+DPB.MAX_CLUSTER]
  2492 000010B4 26C7461D0000            		mov	word [es:bp+1Dh], 0 ; [ES:BP+DPB.NEXT_FREE]
  2493 000010BA 26C7461FFFFF            		mov	word [es:bp+1Fh], -1 ; [ES:BP+DPB.FREE_CNT]
  2494 000010C0 C3                      		retn
  2495                                  
  2496                                  ; =============== S U B	R O U T	I N E =======================================
  2497                                  
  2498                                  _$DUP_PDB:	
  2499 000010C1 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  2500 000010C6 C606[A803]FF            		mov	byte [CreatePDB], 0FFh
  2501 000010CB 8E1E[3003]              		mov	ds, [CurrentPDB]
  2502 000010CF 56                      		push	si
  2503 000010D0 EB0A                    		jmp	short CreateCopy
  2504                                  ; ---------------------------------------------------------------------------
  2505                                  
  2506                                  _$CREATE_PROCESS_DATA_BLOCK:		; ...
  2507 000010D2 E8D0F3                  		call	Get_User_Stack
  2508 000010D5 8E5C14                  		mov	ds, word [si+14h] ; [SI+user_env.user_CS]
  2509 000010D8 FF360200                		push	word [2]	; [PDB.BLOCK_LEN]
  2510                                  
  2511                                  CreateCopy:				; ...
  2512 000010DC 8EC2                    		mov	es, dx
  2513 000010DE 31F6                    		xor	si, si
  2514 000010E0 89F7                    		mov	di, si
  2515 000010E2 B98000                  		mov	cx, 128
  2516 000010E5 F3A5                    		rep movsw
  2517 000010E7 B91400                  		mov	cx, 20		; FILPERPROC
  2518 000010EA BF1800                  		mov	di, 18h		; PDB.JFN_TABLE
  2519 000010ED 1E                      		push	ds
  2520 000010EE C5363400                		lds	si, [34h]	; [PDB.JFN_Pointer]
  2521 000010F2 F3A4                    		rep movsb
  2522 000010F4 1F                      		pop	ds
  2523 000010F5 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  2524 000010FA 803E[A803]00            		cmp	byte [CreatePDB], 0
  2525 000010FF 744D                    		jz	short Create_PDB_cont
  2526 00001101 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  2527 00001106 31DB                    		xor	bx, bx
  2528 00001108 B91400                  		mov	cx, 20
  2529                                  
  2530                                  Create_dup_jfn:				; ...
  2531 0000110B 06                      		push	es
  2532 0000110C E84B57                  		call	SFFromHandle
  2533 0000110F B0FF                    		mov	al, -1		; 0FFh
  2534 00001111 7224                    		jb	short CreateStash
  2535 00001113 26F6450610              		test	byte [es:di+6], 10h ; [ES:DI+SF_ENTRY.sf_flags+1],
  2536                                  					; (sf_no_inherit>>8)
  2537 00001118 751D                    		jnz	short CreateStash
  2538 0000111A 268A6502                		mov	ah, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  2539 0000111E 80E4F0                  		and	ah, 0F0h	; SHARING_MASK
  2540 00001121 80FC70                  		cmp	ah, 70h		; SHARING_NET_FCB
  2541 00001124 7411                    		jz	short CreateStash
  2542 00001126 893E[9E05]              		mov	word [THISSFT], di
  2543 0000112A 8C06[A005]              		mov	word [THISSFT+2], es
  2544 0000112E E8091A                  		call	DOS_DUP
  2545 00001131 E80957                  		call	pJFNFromHandle
  2546 00001134 268A05                  		mov	al, [es:di]
  2547                                  
  2548                                  CreateStash:				; ...
  2549 00001137 07                      		pop	es
  2550 00001138 26884718                		mov	[es:bx+18h], al	; [ES:BX+PDB.JFN_TABLE]
  2551 0000113C 43                      		inc	bx
  2552 0000113D E2CC                    		loop	Create_dup_jfn
  2553 0000113F 8B1E[3003]              		mov	bx, [CurrentPDB]
  2554 00001143 26891E1600              		mov	[es:16h], bx	; [ES:PDB.PARENT_PID]
  2555 00001148 8C06[3003]              		mov	[CurrentPDB], es
  2556 0000114C 8EDB                    		mov	ds, bx
  2557                                  
  2558                                  Create_PDB_cont:			; ...
  2559 0000114E 1E                      		push	ds
  2560 0000114F 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  2561 00001154 C606[A803]00            		mov	byte [CreatePDB], 0
  2562 00001159 1F                      		pop	ds
  2563 0000115A 58                      		pop	ax
  2564                                  
  2565                                  SETMEM:					; ...
  2566 0000115B 31C9                    		xor	cx, cx
  2567 0000115D 8ED9                    		mov	ds, cx
  2568 0000115F 8EC2                    		mov	es, dx
  2569 00001161 BE8800                  		mov	si, 88h		; addr_int_terminate
  2570 00001164 BF0A00                  		mov	di, 0Ah		; SAVEXIT
  2571 00001167 B90600                  		mov	cx, 6
  2572 0000116A F3A5                    		rep movsw
  2573 0000116C 26A30200                		mov	[es:2],	ax
  2574 00001170 29D0                    		sub	ax, dx
  2575 00001172 3DFF0F                  		cmp	ax, 0FFFh	; MAXDIF
  2576 00001175 7603                    		jbe	short HAVDIF
  2577 00001177 B8FF0F                  		mov	ax, 0FFFh
  2578                                  
  2579                                  HAVDIF:					; ...
  2580 0000117A 83E810                  		sub	ax, 10h
  2581 0000117D BB0C00                  		mov	bx, 0Ch		; ENTRYPOINTSEG
  2582 00001180 29C3                    		sub	bx, ax
  2583 00001182 B104                    		mov	cl, 4
  2584 00001184 D3E0                    		shl	ax, cl
  2585 00001186 8EDA                    		mov	ds, dx
  2586 00001188 A30600                  		mov	[6],	ax	; [PDB.CPM_CALL+1]
  2587 0000118B 891E0800                		mov	[8],	bx	; [PDB.CPM_CALL+3]
  2588 0000118F 3DF0FE                  		cmp	ax, 0FEF0h	; WRAPOFFSET
  2589 00001192 740C                    		jz	short addr_ok
  2590 00001194 C7060600C000            		mov	word [6], 0C0h
  2591 0000119A C70608000000            		mov	word [8], 0
  2592                                  
  2593                                  addr_ok:				; ...
  2594 000011A0 C7060000CD20            		mov	word [0], 20CDh ; [PDB.EXIT_CALL],
  2595                                  					; (int_abort*256) + mi_INT
  2596 000011A6 C60605009A              		mov	byte [5], 9Ah ; [PDB.CPM_CALL],mi_Long_CALL
  2597 000011AB C7065000CD21            		mov	word [50h], 21CDh ; [PDB.CALL_SYSTEM],
  2598                                  					; (int_command*256) + mi_INT
  2599 000011B1 C6065200CB              		mov	byte [52h], 0CBh	; [PDB.CALL_SYSTEM+2],mi_Long_RET
  2600 000011B6 C70634001800            		mov	word [34h], 18h ; [PDB.JFN_Pointer],PDB.JFN_TABLE
  2601 000011BC 8C1E3600                		mov	word [36h], ds ;	[PDB.JFN_Pointer+2]
  2602 000011C0 C70632001400            		mov	word [32h], 20 ;	[PDB.JFN_Length],FILPERPROC
  2603 000011C6 C7063800FFFF            		mov	word [38h], 0FFFFh ; [PDB.Next_PDB],-1
  2604 000011CC C7063A00FFFF            		mov	word [3Ah], 0FFFFh ; [PDB.Next_PDB+2],-1
  2605 000011D2 26C70640000500          		mov	word [es:40h], 5 ; [ES:PDB.Version],
  2606                                  					; (MINOR_VERSION*256)+MAJOR_VERSION
  2607 000011D9 C3                      		retn
  2608                                  
  2609                                  ; ---------------------------------------------------------------------------
  2610                                  
  2611                                  _$GSetMediaID:				; ...
  2612 000011DA B96608                  		mov	cx, 866h	; RAWIO	- GET_MEDIA_ID
  2613 000011DD 3C00                    		cmp	al, 0		; get ?
  2614 000011DF 7407                    		jz	short doioctl	; yes
  2615 000011E1 3C01                    		cmp	al, 1		; set ?
  2616 000011E3 7509                    		jnz	short errorfunc	; no, error
  2617 000011E5 B94608                  		mov	cx, 846h	; RAWIO	- SET_MEDIA_ID
  2618                                  
  2619                                  doioctl:				; ...
  2620 000011E8 B00D                    		mov	al, 0Dh		; generic IOCTL
  2621 000011EA E87111                  		call	_$IOCTL
  2622 000011ED C3                      		retn
  2623                                  ; ---------------------------------------------------------------------------
  2624                                  
  2625                                  errorfunc:				; ...
  2626 000011EE B001                    		mov	al, 1		; error_invalid_function
  2627 000011F0 E92AF4                  		jmp	SYS_RET_ERR
  2628                                  
  2629                                  ; =============== S U B	R O U T	I N E =======================================
  2630                                  
  2631                                  
  2632                                   StrCmp:		; ...
  2633 000011F3 56                      		push	si
  2634 000011F4 57                      		push	di
  2635 000011F5 50                      		push	ax
  2636                                  
  2637                                  Cmplp:					; ...
  2638 000011F6 AC                      		lodsb
  2639 000011F7 E8EC3F                  		call	UCase
  2640 000011FA E83E40                  		call	PATHCHRCMP
  2641 000011FD 88C4                    		mov	ah, al
  2642 000011FF 268A05                  		mov	al, [es:di]
  2643 00001202 47                      		inc	di
  2644 00001203 E8E03F                  		call	UCase
  2645 00001206 E83240                  		call	PATHCHRCMP
  2646 00001209 38C4                    		cmp	ah, al
  2647 0000120B 7504                    		jnz	short PopRet
  2648 0000120D 08C0                    		or	al, al
  2649 0000120F 75E5                    		jnz	short Cmplp
  2650                                  
  2651                                  PopRet:					; ...
  2652 00001211 58                      		pop	ax
  2653 00001212 5F                      		pop	di
  2654 00001213 5E                      		pop	si
  2655 00001214 C3                      		retn
  2656                                  
  2657                                  ; =============== S U B	R O U T	I N E =======================================
  2658                                  
  2659                                  
  2660                                   StrCpy:		; ...
  2661 00001215 50                      		push	ax
  2662                                  
  2663                                  CPYLoop:				; ...
  2664 00001216 AC                      		lodsb
  2665 00001217 E8CC3F                  		call	UCase
  2666 0000121A E81E40                  		call	PATHCHRCMP
  2667 0000121D AA                      		stosb
  2668 0000121E 08C0                    		or	al, al
  2669 00001220 75F4                    		jnz	short CPYLoop
  2670 00001222 58                      		pop	ax
  2671 00001223 C3                      		retn
  2672                                  
  2673                                  ; =============== S U B	R O U T	I N E =======================================
  2674                                  
  2675                                  FStrCpy:
  2676 00001224 50                      		push	ax
  2677                                  
  2678                                  FCPYLoop:				; ...
  2679 00001225 AC                      		lodsb
  2680 00001226 AA                      		stosb
  2681 00001227 08C0                    		or	al, al
  2682 00001229 75FA                    		jnz	short FCPYLoop
  2683 0000122B 58                      		pop	ax
  2684 0000122C C3                      		retn
  2685                                  
  2686                                  ; =============== S U B	R O U T	I N E =======================================
  2687                                  
  2688                                  StrLen:		; ...
  2689 0000122D 57                      		push	di
  2690 0000122E 50                      		push	ax
  2691 0000122F B9FFFF                  		mov	cx, 65535
  2692 00001232 30C0                    		xor	al, al
  2693 00001234 F2AE                    		repne scasb
  2694 00001236 F7D1                    		not	cx
  2695 00001238 58                      		pop	ax
  2696 00001239 5F                      		pop	di
  2697 0000123A C3                      		retn
  2698                                  
  2699                                  ; =============== S U B	R O U T	I N E =======================================
  2700                                  
  2701                                  DStrLen:
  2702 0000123B E80700                  		call	XCHGP
  2703 0000123E E8ECFF                  		call	StrLen
  2704 00001241 E80100                  		call	XCHGP
  2705 00001244 C3                      		retn
  2706                                  
  2707                                  ; =============== S U B	R O U T	I N E =======================================
  2708                                  
  2709                                  XCHGP:		; ...
  2710 00001245 1E                      		push	ds
  2711 00001246 06                      		push	es
  2712 00001247 1F                      		pop	ds
  2713 00001248 07                      		pop	es
  2714 00001249 87F7                    		xchg	si, di
  2715                                  
  2716                                  xchgp_retn:				; ...
  2717 0000124B C3                      		retn
  2718                                  
  2719                                  ; =============== S U B	R O U T	I N E =======================================
  2720                                  
  2721                                  Idle:		; ...
  2722 0000124C 36803E[7205]00          		cmp	byte [ss:FSHARING], 0
  2723 00001252 75F7                    		jnz	short xchgp_retn
  2724 00001254 51                      		push	cx
  2725 00001255 368B0E[1C00]            		mov	cx, [ss:RetryLoop]
  2726 0000125A E308                    		jcxz	Idle3
  2727                                  
  2728                                  Idle1:					; ...
  2729 0000125C 51                      		push	cx
  2730 0000125D 31C9                    		xor	cx, cx
  2731                                  
  2732                                  Idle2:					; ...
  2733 0000125F E2FE                    		loop	Idle2
  2734 00001261 59                      		pop	cx
  2735 00001262 E2F8                    		loop	Idle1
  2736                                  
  2737                                  Idle3:					; ...
  2738 00001264 59                      		pop	cx
  2739 00001265 C3                      		retn
  2740                                  
  2741                                  ; ---------------------------------------------------------------------------
  2742                                  
  2743                                  TableDispatch:				; ...
  2744 00001266 55                      		push	bp
  2745 00001267 89E5                    		mov	bp, sp
  2746 00001269 53                      		push	bx
  2747 0000126A 8B5E06                  		mov	bx, [bp+6]	; [BP+TFrame.Tab]
  2748 0000126D 2E8A1F                  		mov	bl, [cs:bx]
  2749 00001270 385E04                  		cmp	[bp+4],	bl	; [BP+TFrame.Index]
  2750 00001273 7317                    		jnb	short TableError
  2751 00001275 8A5E04                  		mov	bl, [bp+4]	; [BP+TFrame.Index]
  2752 00001278 30FF                    		xor	bh, bh
  2753 0000127A D1E3                    		shl	bx, 1
  2754 0000127C 43                      		inc	bx
  2755 0000127D 035E06                  		add	bx, [bp+6]	; [BP+TFrame.Tab]
  2756 00001280 2E8B1F                  		mov	bx, [cs:bx]
  2757 00001283 895E06                  		mov	[bp+6],	bx	; [BP+TFrame.Tab]
  2758 00001286 5B                      		pop	bx
  2759 00001287 5D                      		pop	bp
  2760 00001288 83C404                  		add	sp, 4
  2761 0000128B C3                      		retn
  2762                                  ; ---------------------------------------------------------------------------
  2763                                  
  2764                                  TableError:				; ...
  2765 0000128C 5B                      		pop	bx
  2766 0000128D 5D                      		pop	bp
  2767 0000128E C20600                  		retn	6
  2768                                  
  2769                                  ; =============== S U B	R O U T	I N E =======================================
  2770                                  
  2771                                  TestNet:
  2772 00001291 2E8E06[0700]            		mov	es, [cs:DosDSeg]
  2773 00001296 26C43E[A205]            		les	di, [es:THISCDS]
  2774 0000129B 83FFFF                  		cmp	di, -1
  2775 0000129E 7408                    		jz	short CMCRet
  2776 000012A0 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  2777                                  					; (curdir_isnet>>8)
  2778 000012A5 7501                    		jnz	short CMCRet
  2779 000012A7 C3                      		retn
  2780                                  ; ---------------------------------------------------------------------------
  2781                                  
  2782                                  CMCRet:					; ...
  2783 000012A8 F5                      		cmc
  2784 000012A9 C3                      		retn
  2785                                  
  2786                                  ; =============== S U B	R O U T	I N E =======================================
  2787                                  
  2788                                  IsSFTNet:		; ...
  2789 000012AA 26F6450680              		test	byte [es:di+6], 80h	; [ES:DI+SF_ENTRY.sf_flags+1],
  2790                                  					; (sf_isnet>>8)
  2791 000012AF C3                      		retn
  2792                                  
  2793                                  ; ---------------------------------------------------------------------------
  2794                                  
  2795                                  FastInit:				; ...
  2796 000012B0 06                      		push	es
  2797 000012B1 2E8E06[0700]            		mov	es, [cs:DosDSeg]
  2798 000012B6 BF[320D]                		mov	di, FastOpenTable_2 ; FastTable+2
  2799 000012B9 4B                      		dec	bx
  2800 000012BA 89DA                    		mov	dx, bx
  2801 000012BC D1E3                    		shl	bx, 1
  2802 000012BE D1E3                    		shl	bx, 1
  2803 000012C0 01DF                    		add	di, bx
  2804 000012C2 268B4502                		mov	ax, [es:di+2]
  2805 000012C6 8CC9                    		mov	cx, cs
  2806 000012C8 39C8                    		cmp	ax, cx
  2807 000012CA 7407                    		jz	short ok_install
  2808 000012CC 09C0                    		or	ax, ax
  2809 000012CE 7403                    		jz	short ok_install
  2810 000012D0 F9                      		stc
  2811 000012D1 EB17                    		jmp	short FSret
  2812                                  ; ---------------------------------------------------------------------------
  2813                                  
  2814                                  ok_install:				; ...
  2815 000012D3 83FEFF                  		cmp	si, -1
  2816 000012D6 7412                    		jz	short FSret
  2817 000012D8 8CD9                    		mov	cx, ds
  2818 000012DA 26894D02                		mov	[es:di+2], cx
  2819 000012DE 268935                  		mov	[es:di], si
  2820 000012E1 BF[3A0D]                		mov	di, FastOpenFlg ; FastFlg
  2821 000012E4 01D7                    		add	di, dx
  2822 000012E6 26800D80                		or	byte [es:di], 80h ; Fast_yes
  2823                                  
  2824                                  FSret:					; ...
  2825 000012EA 07                      		pop	es
  2826 000012EB C3                      		retn
  2827                                  ; ---------------------------------------------------------------------------
  2828                                  
  2829                                  FastRet:				; ...
  2830 000012EC F9                      		stc
  2831 000012ED 19C0                    		sbb	ax, ax
  2832 000012EF CB                      		retf
  2833                                  ; ---------------------------------------------------------------------------
  2834                                  
  2835                                  NLS_OPEN:				; ...
  2836 000012F0 88C8                    		mov	al, cl
  2837 000012F2 E8E85D                  		call	_$OPEN
  2838 000012F5 C3                      		retn
  2839                                  ; ---------------------------------------------------------------------------
  2840                                  
  2841                                  NLS_LSEEK:				; ...
  2842 000012F6 36FF36[8405]            		push	word [ss:USER_SP]
  2843 000012FB 36FF36[8605]            		push	word [ss:USER_SS]
  2844 00001300 E81000                  		call	Fake_User_Stack
  2845 00001303 89E8                    		mov	ax, bp
  2846 00001305 E86D57                  		call	_$LSEEK
  2847 00001308 368F06[8605]            		pop	word [ss:USER_SS]
  2848 0000130D 368F06[8405]            		pop	word [ss:USER_SP]
  2849 00001312 C3                      		retn
  2850                                  
  2851                                  ; =============== S U B	R O U T	I N E =======================================
  2852                                  
  2853                                  Fake_User_Stack:
  2854 00001313 36A1[6A0D]              		mov	ax, [ss:USER_SP_2F]
  2855 00001317 36A3[8405]              		mov	[ss:USER_SP], ax
  2856 0000131B 8CD0                    		mov	ax, ss
  2857 0000131D 36A3[8605]              		mov	[ss:USER_SS], ax
  2858 00001321 C3                      		retn
  2859                                  
  2860                                  ; ---------------------------------------------------------------------------
  2861                                  
  2862                                  GetDevList:				; ...
  2863 00001322 BE[280D]                		mov	si, SysInitTable
  2864 00001325 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  2865 0000132A C534                    		lds	si, [si]
  2866 0000132C 8B4422                  		mov	ax, [si+22h]	; [SI+SYSI.DEV]
  2867 0000132F 8B5C24                  		mov	bx, [si+24h]	; [SI+SYSI.DEV+2]
  2868 00001332 C3                      		retn
  2869                                  ; ---------------------------------------------------------------------------
  2870                                  
  2871                                  NLS_IOCTL:				; ...
  2872 00001333 36FF36[8405]            		push	word [ss:USER_SP]
  2873 00001338 36FF36[8605]            		push	word [ss:USER_SS]
  2874 0000133D E8D3FF                  		call	Fake_User_Stack
  2875 00001340 89E8                    		mov	ax, bp
  2876 00001342 E81910                  		call	_$IOCTL
  2877 00001345 368F06[8605]            		pop	word [ss:USER_SS]
  2878 0000134A 368F06[8405]            		pop	word [ss:USER_SP]
  2879 0000134F C3                      		retn
  2880                                  ; ---------------------------------------------------------------------------
  2881                                  
  2882                                  NLS_GETEXT:				; ...
  2883 00001350 36A1[2403]              		mov	ax, [ss:EXTERR]
  2884 00001354 C3                      		retn
  2885                                  ; ---------------------------------------------------------------------------
  2886                                  
  2887                                  MSG_RETRIEVAL:				; ...
  2888 00001355 C3                      		retn
  2889                                  
  2890                                  ; =============== S U B	R O U T	I N E =======================================
  2891                                  
  2892                                  ECritDisk:		; ...
  2893 00001356 9C                      		pushf			; ECritMEM
  2894                                  					; ECritSFT
  2895 00001357 36803E[0C0D]00          		cmp	byte [ss:redir_patch], 0
  2896 0000135D 740F                    		jz	short ECritDisk_2
  2897 0000135F EB01                    		jmp	short ECritDisk_1
  2898                                  ; ---------------------------------------------------------------------------
  2899                                  
  2900                                  ECritDisk_iret:				; ...
  2901 00001361 CF                      		iret
  2902                                  ; ---------------------------------------------------------------------------
  2903                                  
  2904                                  ECritDisk_1:				; ...
  2905 00001362 0E                      		push	cs
  2906 00001363 E8FBFF                  		call	ECritDisk_iret
  2907                                  
  2908                                  ECritDisk_0:
  2909 00001366 50                      		push	ax
  2910 00001367 B80180                  		mov	ax, 8001h
  2911 0000136A CD2A                    		int	2Ah		; Microsoft Networks - BEGIN DOS CRITICAL SECTION
  2912                                  					; AL = critical	section	number (00h-0Fh)
  2913 0000136C 58                      		pop	ax
  2914 0000136D C3                      		retn
  2915                                  ; ---------------------------------------------------------------------------
  2916                                  
  2917                                  ECritDisk_2:				; ...
  2918 0000136E EB01                    		jmp	short ECritDisk_3
  2919                                  ; ---------------------------------------------------------------------------
  2920                                  
  2921                                  ECritDisk_iret2:			; ...
  2922 00001370 CF                      		iret
  2923                                  ; ---------------------------------------------------------------------------
  2924                                  
  2925                                  ECritDisk_3:				; ...
  2926 00001371 0E                      		push	cs
  2927 00001372 E8FBFF                  		call	ECritDisk_iret2
  2928 00001375 C3                      		retn
  2929                                  
  2930                                  ; =============== S U B	R O U T	I N E =======================================
  2931                                  
  2932                                  LCritDisk:		; ...
  2933 00001376 9C                      		pushf			; LCritMEM
  2934                                  					; LCritSFT
  2935 00001377 36803E[0C0D]00          		cmp	byte [ss:redir_patch], 0
  2936 0000137D 740F                    		jz	short LCritDisk_2
  2937 0000137F EB01                    		jmp	short LCritDisk_1
  2938                                  ; ---------------------------------------------------------------------------
  2939                                  
  2940                                  LCritDisk_iret:				; ...
  2941 00001381 CF                      		iret
  2942                                  ; ---------------------------------------------------------------------------
  2943                                  
  2944                                  LCritDisk_1:				; ...
  2945 00001382 0E                      		push	cs
  2946 00001383 E8FBFF                  		call	LCritDisk_iret
  2947 00001386 50                      		push	ax
  2948 00001387 B80181                  		mov	ax, 8101h
  2949 0000138A CD2A                    		int	2Ah		; Microsoft Networks - END DOS CRITICAL	SECTION
  2950                                  					; AL = critical	section	number (00h-0Fh)
  2951 0000138C 58                      		pop	ax
  2952 0000138D C3                      		retn
  2953                                  ; ---------------------------------------------------------------------------
  2954                                  
  2955                                  LCritDisk_2:				; ...
  2956 0000138E EB01                    		jmp	short LCritDisk_3
  2957                                  ; ---------------------------------------------------------------------------
  2958                                  
  2959                                  LCritDisk_iret2:			; ...
  2960 00001390 CF                      		iret
  2961                                  ; ---------------------------------------------------------------------------
  2962                                  
  2963                                  LCritDisk_3:				; ...
  2964 00001391 0E                      		push	cs
  2965 00001392 E8FBFF                  		call	LCritDisk_iret2
  2966 00001395 C3                      		retn
  2967                                  
  2968                                  ; =============== S U B	R O U T	I N E =======================================
  2969                                  
  2970                                  ECritDevice:	; ...
  2971 00001396 9C                      		pushf
  2972 00001397 36803E[0C0D]00          		cmp	byte [ss:redir_patch], 0
  2973 0000139D 740F                    		jz	short ECritDevice_2
  2974 0000139F EB01                    		jmp	short ECritDevice_1
  2975                                  ; ---------------------------------------------------------------------------
  2976                                  
  2977                                  ECritDevice_iret:			; ...
  2978 000013A1 CF                      		iret
  2979                                  ; ---------------------------------------------------------------------------
  2980                                  
  2981                                  ECritDevice_1:				; ...
  2982 000013A2 0E                      		push	cs
  2983 000013A3 E8FBFF                  		call	ECritDevice_iret
  2984 000013A6 50                      		push	ax
  2985 000013A7 B80280                  		mov	ax, 8002h
  2986 000013AA CD2A                    		int	2Ah		; Microsoft Networks - BEGIN DOS CRITICAL SECTION
  2987                                  					; AL = critical	section	number (00h-0Fh)
  2988 000013AC 58                      		pop	ax
  2989 000013AD C3                      		retn
  2990                                  ; ---------------------------------------------------------------------------
  2991                                  
  2992                                  ECritDevice_2:				; ...
  2993 000013AE EB01                    		jmp	short ECritDevice_3
  2994                                  ; ---------------------------------------------------------------------------
  2995                                  
  2996                                  ECritDevice_iret2:			; ...
  2997 000013B0 CF                      		iret
  2998                                  ; ---------------------------------------------------------------------------
  2999                                  
  3000                                  ECritDevice_3:				; ...
  3001 000013B1 0E                      		push	cs
  3002 000013B2 E8FBFF                  		call	ECritDevice_iret2
  3003 000013B5 C3                      		retn
  3004                                  
  3005                                  ; =============== S U B	R O U T	I N E =======================================
  3006                                  
  3007                                  
  3008                                   LCritDevice:	; ...
  3009 000013B6 9C                      		pushf			; LCritMEM
  3010                                  					; LCritSFT
  3011 000013B7 36803E[0C0D]00          		cmp	byte [ss:redir_patch], 0
  3012 000013BD 740F                    		jz	short LCritDevice_2
  3013 000013BF EB01                    		jmp	short LCritDevice_1
  3014                                  ; ---------------------------------------------------------------------------
  3015                                  
  3016                                  LCritDevice_iret:			; ...
  3017 000013C1 CF                      		iret
  3018                                  ; ---------------------------------------------------------------------------
  3019                                  
  3020                                  LCritDevice_1:				; ...
  3021 000013C2 0E                      		push	cs
  3022 000013C3 E8FBFF                  		call	LCritDevice_iret
  3023 000013C6 50                      		push	ax
  3024 000013C7 B80281                  		mov	ax, 8102h
  3025 000013CA CD2A                    		int	2Ah		; Microsoft Networks - END DOS CRITICAL	SECTION
  3026                                  					; AL = critical	section	number (00h-0Fh)
  3027 000013CC 58                      		pop	ax
  3028 000013CD C3                      		retn
  3029                                  ; ---------------------------------------------------------------------------
  3030                                  
  3031                                  LCritDevice_2:				; ...
  3032 000013CE EB01                    		jmp	short LCritDevice_3
  3033                                  ; ---------------------------------------------------------------------------
  3034                                  
  3035                                  LCritDevice_iret2:			; ...
  3036 000013D0 CF                      		iret
  3037                                  ; ---------------------------------------------------------------------------
  3038                                  
  3039                                  LCritDevice_3:				; ...
  3040 000013D1 0E                      		push	cs
  3041 000013D2 E8FBFF                  		call	LCritDevice_iret2
  3042 000013D5 C3                      		retn
  3043                                  
  3044                                  ; =============== S U B	R O U T	I N E =======================================
  3045                                  
  3046                                  _$STD_CON_INPUT_NO_ECHO:
  3047 000013D6 1E                      		push	ds
  3048 000013D7 56                      		push	si
  3049                                  
  3050                                  INTEST:					; ...
  3051 000013D8 E8303F                  		call	STATCHK
  3052 000013DB 753B                    		jnz	short GET
  3053 000013DD 36803E[A00A]00          		cmp	byte [ss:PRINTER_FLAG], 0
  3054 000013E3 7505                    		jnz	short no_sys_wait
  3055 000013E5 B405                    		mov	ah, 5
  3056 000013E7 E81E32                  		call	IOFUNC
  3057                                  
  3058                                  no_sys_wait:				; ...
  3059 000013EA B484                    		mov	ah, 84h
  3060 000013EC CD2A                    		int	2Ah		; Microsoft Networks - KEYBOARD	BUSY LOOP
  3061 000013EE 36803E[910D]FF          		cmp	byte [ss:DATE_FLAG], 0FFh ; -1
  3062 000013F4 751B                    		jnz	short NoUpdate
  3063 000013F6 50                      		push	ax
  3064 000013F7 53                      		push	bx
  3065 000013F8 51                      		push	cx
  3066 000013F9 52                      		push	dx
  3067 000013FA 1E                      		push	ds
  3068 000013FB 16                      		push	ss
  3069 000013FC 1F                      		pop	ds
  3070 000013FD B80000                  		mov	ax, 0
  3071 00001400 E8D202                  		call	Save_Restore_Packet
  3072 00001403 E815F7                  		call	READTIME
  3073 00001406 B80100                  		mov	ax, 1
  3074 00001409 E8C902                  		call	Save_Restore_Packet
  3075 0000140C 1F                      		pop	ds
  3076 0000140D 5A                      		pop	dx
  3077 0000140E 59                      		pop	cx
  3078 0000140F 5B                      		pop	bx
  3079 00001410 58                      		pop	ax
  3080                                  
  3081                                  NoUpdate:				; ...
  3082 00001411 36FF06[910D]            		inc	word [ss:DATE_FLAG]
  3083 00001416 EBC0                    		jmp	short INTEST
  3084                                  ; ---------------------------------------------------------------------------
  3085                                  
  3086                                  GET:					; ...
  3087 00001418 30E4                    		xor	ah, ah
  3088 0000141A E8EB31                  		call	IOFUNC
  3089 0000141D 5E                      		pop	si
  3090 0000141E 1F                      		pop	ds
  3091 0000141F 36C606[900D]00          		mov	byte [ss:SCAN_FLAG], 0
  3092 00001425 3C00                    		cmp	al, 0
  3093 00001427 7506                    		jnz	short noscan
  3094 00001429 36C606[900D]01          		mov	byte [ss:SCAN_FLAG], 1
  3095                                  
  3096                                  noscan:					; ...
  3097 0000142F C3                      		retn
  3098                                  
  3099                                  ; ---------------------------------------------------------------------------
  3100                                  
  3101                                  _$STD_CON_STRING_OUTPUT:		; ...
  3102 00001430 89D6                    		mov	si, dx
  3103                                  
  3104                                  STRING_OUT1:				; ...
  3105 00001432 AC                      		lodsb
  3106 00001433 3C24                    		cmp	al, '$'
  3107 00001435 74F8                    		jz	short noscan
  3108 00001437 E8CD02                  		call	OUTT
  3109 0000143A EBF6                    		jmp	short STRING_OUT1
  3110                                  
  3111                                  ; =============== S U B	R O U T	I N E =======================================
  3112                                  
  3113                                  _$STD_CON_STRING_INPUT:
  3114                                  
  3115                                  ; FUNCTION CHUNK AT 4813 SIZE 00000019 BYTES
  3116                                  
  3117 0000143C 8CD0                    		mov	ax, ss
  3118 0000143E 8EC0                    		mov	es, ax
  3119 00001440 89D6                    		mov	si, dx
  3120 00001442 30ED                    		xor	ch, ch
  3121 00001444 AD                      		lodsw
  3122 00001445 08C0                    		or	al, al
  3123 00001447 74E6                    		jz	short noscan
  3124 00001449 88E3                    		mov	bl, ah
  3125 0000144B 88EF                    		mov	bh, ch
  3126 0000144D 38D8                    		cmp	al, bl
  3127 0000144F 7605                    		jbe	short NOEDIT
  3128 00001451 80380D                  		cmp	byte [bx+si], 0Dh ;	c_CR
  3129 00001454 7402                    		jz	short EDITON
  3130                                  
  3131                                  NOEDIT:					; ...
  3132 00001456 88EB                    		mov	bl, ch
  3133                                  
  3134                                  EDITON:					; ...
  3135 00001458 88C2                    		mov	dl, al
  3136 0000145A 4A                      		dec	dx
  3137                                  
  3138                                  NEWLIN:					; ...
  3139 0000145B 36A0[F901]              		mov	al, [ss:CARPOS]
  3140 0000145F 36A2[FA01]              		mov	[ss:STARTPOS], al
  3141 00001463 56                      		push	si
  3142 00001464 BF[FB01]                		mov	di, INBUF
  3143 00001467 36882E[7905]            		mov	[ss:INSMODE], ch
  3144 0000146C 88EF                    		mov	bh, ch
  3145 0000146E 88EE                    		mov	dh, ch
  3146 00001470 E863FF                  		call	_$STD_CON_INPUT_NO_ECHO
  3147 00001473 3C0A                    		cmp	al, 0Ah		; c_LF
  3148 00001475 7503                    		jnz	short GOTCH
  3149                                  
  3150                                  GETCH:					; ...
  3151 00001477 E85CFF                  		call	_$STD_CON_INPUT_NO_ECHO
  3152                                  
  3153                                  GOTCH:					; ...
  3154 0000147A 3C06                    		cmp	al, 6		; "F"-"@"
  3155 0000147C 74F9                    		jz	short GETCH
  3156 0000147E 2E3A06[180A]            		cmp	al, [cs:ESCCHAR]
  3157 00001483 7443                    		jz	short ESCAPE
  3158 00001485 3C7F                    		cmp	al, 7Fh		; c_DEL
  3159 00001487 7436                    		jz	short BACKSPJ
  3160 00001489 3C08                    		cmp	al, 8		; c_BS
  3161 0000148B 7432                    		jz	short BACKSPJ
  3162 0000148D 3C17                    		cmp	al, 17h		; W"-"@"
  3163 0000148F 90                      		nop
  3164 00001490 90                      		nop
  3165 00001491 3C15                    		cmp	al, 15h		; "U"-"@"
  3166 00001493 90                      		nop
  3167 00001494 90                      		nop
  3168 00001495 3C0D                    		cmp	al, 0Dh		; c_CR
  3169 00001497 7432                    		jz	short ENDLIN
  3170 00001499 3C0A                    		cmp	al, 0Ah		; c_LF
  3171 0000149B 7444                    		jz	short PHYCRLF
  3172 0000149D 2E3A06[170A]            		cmp	al, [cs:CANCHAR] ; 1Bh
  3173 000014A2 746B                    		jz	short KILNEW
  3174                                  
  3175                                  SAVCH:					; ...
  3176 000014A4 38D6                    		cmp	dh, dl
  3177 000014A6 7319                    		jnb	short BUFFUL
  3178 000014A8 AA                      		stosb
  3179 000014A9 FEC6                    		inc	dh
  3180 000014AB E8F002                  		call	BUFOUT
  3181 000014AE 36803E[7905]00          		cmp	byte [ss:INSMODE], 0
  3182 000014B4 75C1                    		jnz	short GETCH
  3183 000014B6 38DF                    		cmp	bh, bl
  3184 000014B8 73BD                    		jnb	short GETCH
  3185 000014BA 46                      		inc	si
  3186 000014BB FEC7                    		inc	bh
  3187 000014BD EBB8                    		jmp	short GETCH
  3188                                  ; ---------------------------------------------------------------------------
  3189                                  
  3190                                  BACKSPJ:				; ...
  3191 000014BF EB61                    		jmp	short BACKSP
  3192                                  ; ---------------------------------------------------------------------------
  3193                                  
  3194                                  BUFFUL:					; ...
  3195 000014C1 B007                    		mov	al, 7
  3196 000014C3 E84102                  		call	OUTT
  3197 000014C6 EBAF                    		jmp	short GETCH
  3198                                  ; ---------------------------------------------------------------------------
  3199                                  
  3200                                  ESCAPE:					; ...
  3201 000014C8 E978F5                  		jmp	OEMFunctionKey
  3202                                  ; ---------------------------------------------------------------------------
  3203                                  
  3204                                  ENDLIN:					; ...
  3205 000014CB AA                      		stosb
  3206 000014CC E83802                  		call	OUTT
  3207 000014CF 5F                      		pop	di
  3208 000014D0 8875FF                  		mov	[di-1],	dh
  3209 000014D3 FEC6                    		inc	dh
  3210                                  
  3211                                  COPYNEW:				; ...
  3212 000014D5 1E                      		push	ds
  3213 000014D6 06                      		push	es
  3214 000014D7 1F                      		pop	ds
  3215 000014D8 07                      		pop	es
  3216 000014D9 BE[FB01]                		mov	si, INBUF
  3217 000014DC 88F1                    		mov	cl, dh
  3218 000014DE F3A4                    		rep movsb
  3219                                  
  3220                                  OLDBAK_RETN:				; ...
  3221 000014E0 C3                      		retn
  3222                                  ; ---------------------------------------------------------------------------
  3223                                  
  3224                                  PHYCRLF:				; ...
  3225 000014E1 E84A01                  		call	CRLF
  3226 000014E4 EB91                    		jmp	short GETCH
  3227                                  ; ---------------------------------------------------------------------------
  3228                                  
  3229                                  LineDel:				; ...
  3230 000014E6 08F6                    		or	dh, dh
  3231 000014E8 748D                    		jz	short GETCH
  3232 000014EA E83B00                  		call	BackSpace
  3233 000014ED EBF7                    		jmp	short LineDel
  3234                                  ; ---------------------------------------------------------------------------
  3235                                  
  3236                                  WordDel:				; ...
  3237 000014EF E83600                  		call	BackSpace	; WordLoop
  3238 000014F2 08F6                    		or	dh, dh
  3239 000014F4 7416                    		jz	short GetChJ
  3240 000014F6 268A45FF                		mov	al, [es:di-1]
  3241 000014FA 3C30                    		cmp	al, '0'
  3242 000014FC 720E                    		jb	short GetChJ
  3243 000014FE 3C39                    		cmp	al, '9'
  3244 00001500 76ED                    		jbe	short WordDel
  3245 00001502 0C20                    		or	al, 20h
  3246 00001504 3C61                    		cmp	al, 'a'
  3247 00001506 7204                    		jb	short GetChJ
  3248 00001508 3C7A                    		cmp	al, 'z'
  3249 0000150A 76E3                    		jbe	short WordDel
  3250                                  
  3251                                  GetChJ:					; ...
  3252 0000150C E968FF                  		jmp	GETCH
  3253                                  ; ---------------------------------------------------------------------------
  3254                                  
  3255                                  KILNEW:					; ...
  3256 0000150F B05C                    		mov	al, '\'
  3257 00001511 E8F301                  		call	OUTT
  3258 00001514 5E                      		pop	si
  3259                                  
  3260                                  PUTNEW:					; ...
  3261 00001515 E81601                  		call	CRLF
  3262 00001518 36A0[FA01]              		mov	al, [ss:STARTPOS]
  3263 0000151C E85C02                  		call	TAB
  3264 0000151F E939FF                  		jmp	NEWLIN
  3265                                  ; ---------------------------------------------------------------------------
  3266                                  
  3267                                  BACKSP:					; ...
  3268 00001522 E80300                  		call	BackSpace
  3269 00001525 E94FFF                  		jmp	GETCH
  3270                                  
  3271                                  ; =============== S U B	R O U T	I N E =======================================
  3272                                  
  3273                                  BackSpace:
  3274 00001528 08F6                    		or	dh, dh
  3275 0000152A 7419                    		jz	short OLDBAK
  3276 0000152C E85800                  		call	BACKUP
  3277 0000152F 268A05                  		mov	al, [es:di]
  3278 00001532 3C20                    		cmp	al, 20h	; ' '
  3279 00001534 730F                    		jnb	short OLDBAK
  3280 00001536 3C09                    		cmp	al, 9		; c_HT
  3281 00001538 741B                    		jz	short BAKTAB
  3282 0000153A 3C15                    		cmp	al, 15h		; "U"-"@"
  3283 0000153C 7407                    		jz	short OLDBAK
  3284 0000153E 3C14                    		cmp	al, 14h		; "T"-"@"
  3285 00001540 7403                    		jz	short OLDBAK
  3286 00001542 E84500                  		call	BACKMES
  3287                                  
  3288                                  OLDBAK:					; ...
  3289 00001545 36803E[7905]00          		cmp	byte [ss:INSMODE], 0
  3290 0000154B 7593                    		jnz	short OLDBAK_RETN
  3291 0000154D 08FF                    		or	bh, bh
  3292 0000154F 748F                    		jz	short OLDBAK_RETN
  3293 00001551 FECF                    		dec	bh
  3294 00001553 4E                      		dec	si
  3295 00001554 C3                      		retn
  3296                                  ; ---------------------------------------------------------------------------
  3297                                  
  3298                                  BAKTAB:					; ...
  3299 00001555 57                      		push	di
  3300 00001556 4F                      		dec	di
  3301 00001557 FD                      		std
  3302 00001558 88F1                    		mov	cl, dh
  3303 0000155A B020                    		mov	al, 20h	; ' '
  3304 0000155C 53                      		push	bx
  3305 0000155D B307                    		mov	bl, 7
  3306 0000155F E30E                    		jcxz	FIGTAB
  3307                                  
  3308                                  FNDPOS:					; ...
  3309 00001561 AE                      		scasb
  3310 00001562 7609                    		jbe	short CHKCNT
  3311 00001564 26807D0109              		cmp	byte [es:di+1], 9
  3312 00001569 7409                    		jz	short HAVTAB
  3313 0000156B FECB                    		dec	bl
  3314                                  
  3315                                  CHKCNT:					; ...
  3316 0000156D E2F2                    		loop	FNDPOS
  3317                                  
  3318                                  FIGTAB:					; ...
  3319 0000156F 362A1E[FA01]            		sub	bl, [ss:STARTPOS]
  3320                                  
  3321                                  HAVTAB:					; ...
  3322 00001574 28F3                    		sub	bl, dh
  3323 00001576 00D9                    		add	cl, bl
  3324 00001578 80E107                  		and	cl, 7
  3325 0000157B FC                      		cld
  3326 0000157C 5B                      		pop	bx
  3327 0000157D 5F                      		pop	di
  3328 0000157E 74C5                    		jz	short OLDBAK
  3329                                  
  3330                                  TABBAK:					; ...
  3331 00001580 E80700                  		call	BACKMES
  3332 00001583 E2FB                    		loop	TABBAK
  3333 00001585 EBBE                    		jmp	short OLDBAK
  3334                                  
  3335                                  ; ---------------------------------------------------------------------------
  3336                                  
  3337                                  BACKUP:					; ...
  3338 00001587 FECE                    		dec	dh
  3339 00001589 4F                      		dec	di
  3340                                  
  3341                                  BACKMES:				; ...
  3342 0000158A B008                    		mov	al, 8		; c_BS
  3343 0000158C E87801                  		call	OUTT
  3344 0000158F B020                    		mov	al, 20h	; ' '
  3345 00001591 E87301                  		call	OUTT
  3346 00001594 B008                    		mov	al, 8
  3347 00001596 E96E01                  		jmp	OUTT
  3348                                  ; ---------------------------------------------------------------------------
  3349                                  
  3350                                  TWOESC:					; ...
  3351 00001599 2EA0[180A]              		mov	al, [cs:ESCCHAR]
  3352 0000159D E904FF                  		jmp	SAVCH
  3353                                  ; ---------------------------------------------------------------------------
  3354                                  
  3355                                  COPYLIN:				; ...
  3356 000015A0 88D9                    		mov	cl, bl
  3357 000015A2 28F9                    		sub	cl, bh
  3358 000015A4 EB07                    		jmp	short COPYEACH
  3359                                  ; ---------------------------------------------------------------------------
  3360                                  
  3361                                  COPYSTR:				; ...
  3362 000015A6 E83400                  		call	FINDOLD
  3363 000015A9 EB02                    		jmp	short COPYEACH
  3364                                  ; ---------------------------------------------------------------------------
  3365                                  
  3366                                  COPYONE:				; ...
  3367 000015AB B101                    		mov	cl, 1
  3368                                  
  3369                                  COPYEACH:				; ...
  3370 000015AD 36C606[7905]00          		mov	byte [ss:INSMODE], 0
  3371 000015B3 38D6                    		cmp	dh, dl
  3372 000015B5 740F                    		jz	short GETCH2
  3373 000015B7 38DF                    		cmp	bh, bl
  3374 000015B9 740B                    		jz	short GETCH2
  3375 000015BB AC                      		lodsb
  3376 000015BC AA                      		stosb
  3377 000015BD E8DE01                  		call	BUFOUT
  3378 000015C0 FEC7                    		inc	bh
  3379 000015C2 FEC6                    		inc	dh
  3380 000015C4 E2E7                    		loop	COPYEACH
  3381                                  
  3382                                  GETCH2:					; ...
  3383 000015C6 E9AEFE                  		jmp	GETCH
  3384                                  ; ---------------------------------------------------------------------------
  3385                                  
  3386                                  SKIPONE:				; ...
  3387 000015C9 38DF                    		cmp	bh, bl
  3388 000015CB 74F9                    		jz	short GETCH2
  3389 000015CD FEC7                    		inc	bh
  3390 000015CF 46                      		inc	si
  3391 000015D0 E9A4FE                  		jmp	GETCH
  3392                                  ; ---------------------------------------------------------------------------
  3393                                  
  3394                                  SKIPSTR:				; ...
  3395 000015D3 E80700                  		call	FINDOLD
  3396 000015D6 01CE                    		add	si, cx
  3397 000015D8 00CF                    		add	bh, cl
  3398 000015DA E99AFE                  		jmp	GETCH
  3399                                  ; ---------------------------------------------------------------------------
  3400                                  
  3401                                  FINDOLD:				; ...
  3402 000015DD E8F6FD                  		call	_$STD_CON_INPUT_NO_ECHO
  3403 000015E0 2E3A06[180A]            		cmp	al, [cs:ESCCHAR]
  3404 000015E5 7505                    		jnz	short FINDSETUP
  3405 000015E7 E8ECFD                  		call	_$STD_CON_INPUT_NO_ECHO
  3406 000015EA EB1D                    		jmp	short NOTFND
  3407                                  ; ---------------------------------------------------------------------------
  3408                                  
  3409                                  FINDSETUP:				; ...
  3410 000015EC 88D9                    		mov	cl, bl
  3411 000015EE 28F9                    		sub	cl, bh
  3412 000015F0 7417                    		jz	short NOTFND
  3413 000015F2 49                      		dec	cx
  3414 000015F3 7414                    		jz	short NOTFND
  3415 000015F5 06                      		push	es
  3416 000015F6 1E                      		push	ds
  3417 000015F7 07                      		pop	es
  3418 000015F8 57                      		push	di
  3419 000015F9 89F7                    		mov	di, si
  3420 000015FB 47                      		inc	di
  3421 000015FC F2AE                    		repne scasb
  3422 000015FE 5F                      		pop	di
  3423 000015FF 07                      		pop	es
  3424 00001600 7507                    		jnz	short NOTFND
  3425 00001602 F6D1                    		not	cl
  3426 00001604 00D9                    		add	cl, bl
  3427 00001606 28F9                    		sub	cl, bh
  3428                                  
  3429                                  ; =============== S U B	R O U T	I N E =======================================
  3430                                  
  3431                                  FINDOLD_RETN:
  3432 00001608 C3                      		retn
  3433                                  
  3434                                  ; ---------------------------------------------------------------------------
  3435                                  
  3436                                  NOTFND:					; ...
  3437 00001609 5D                      		pop	bp
  3438 0000160A E96AFE                  		jmp	GETCH
  3439                                  ; ---------------------------------------------------------------------------
  3440                                  
  3441                                  REEDIT:					; ...
  3442 0000160D B040                    		mov	al, '@'
  3443 0000160F E8F500                  		call	OUTT
  3444 00001612 5F                      		pop	di
  3445 00001613 57                      		push	di
  3446 00001614 06                      		push	es
  3447 00001615 1E                      		push	ds
  3448 00001616 E8BCFE                  		call	COPYNEW
  3449 00001619 1F                      		pop	ds
  3450 0000161A 07                      		pop	es
  3451 0000161B 5E                      		pop	si
  3452 0000161C 88F3                    		mov	bl, dh
  3453 0000161E E9F4FE                  		jmp	PUTNEW
  3454                                  ; ---------------------------------------------------------------------------
  3455                                  
  3456                                  EXITINS:				; ...
  3457 00001621 36F616[7905]            		not	byte [ss:INSMODE] ; ENTERINS
  3458 00001626 E94EFE                  		jmp	GETCH
  3459                                  ; ---------------------------------------------------------------------------
  3460                                  
  3461                                  CTRLZ:					; ...
  3462 00001629 B01A                    		mov	al, 1Ah		; "Z"-"@"
  3463 0000162B E976FE                  		jmp	SAVCH
  3464                                  
  3465                                  ; =============== S U B	R O U T	I N E =======================================
  3466                                  
  3467                                  CRLF:		; ...
  3468 0000162E B00D                    		mov	al, 0Dh		; c_CR
  3469 00001630 E8D400                  		call	OUTT
  3470 00001633 B00A                    		mov	al, 0Ah		; c_LF
  3471 00001635 E9CF00                  		jmp	OUTT
  3472                                  
  3473                                  ; =============== S U B	R O U T	I N E =======================================
  3474                                  
  3475                                  _$RAW_CON_IO:	; ...
  3476 00001638 88D0                    		mov	al, dl
  3477 0000163A 3CFF                    		cmp	al, 0FFh
  3478 0000163C 7403                    		jz	short rci1
  3479 0000163E EB43                    		jmp	short RAWOUT
  3480                                  ; ---------------------------------------------------------------------------
  3481 00001640 90                      		nop			; db 90h ; align 2
  3482                                  
  3483                                  rci1:					; ...
  3484 00001641 36C43E[8405]            		les	di, [ss:USER_SP]
  3485 00001646 31DB                    		xor	bx, bx
  3486 00001648 E85421                  		call	GET_IO_SFT
  3487 0000164B 72BB                    		jb	short FINDOLD_RETN
  3488 0000164D B401                    		mov	ah, 1
  3489 0000164F E8B62F                  		call	IOFUNC
  3490 00001652 750B                    		jnz	short RESFLG
  3491 00001654 E8863C                  		call	SPOOLINT
  3492 00001657 26804D1640              		or	byte [es:di+16h], 40h ; [ES:DI+user_env.user_F]
  3493 0000165C 30C0                    		xor	al, al
  3494                                  
  3495                                  RET17:					; ...
  3496 0000165E C3                      		retn
  3497                                  ; ---------------------------------------------------------------------------
  3498                                  
  3499                                  RESFLG:					; ...
  3500 0000165F 26806516BF              		and	byte [es:di+16h], 0BFh
  3501                                  
  3502                                  rci0:					; ...
  3503 00001664 E8763C                  		call	SPOOLINT
  3504                                  
  3505                                  _$RAW_CON_INPUT:			; ...
  3506 00001667 53                      		push	bx
  3507 00001668 31DB                    		xor	bx, bx
  3508 0000166A E83221                  		call	GET_IO_SFT
  3509 0000166D 5B                      		pop	bx
  3510 0000166E 72EE                    		jb	short RET17
  3511 00001670 B401                    		mov	ah, 1
  3512 00001672 E8932F                  		call	IOFUNC
  3513 00001675 7506                    		jnz	short rci5
  3514 00001677 B484                    		mov	ah, 84h
  3515 00001679 CD2A                    		int	2Ah		; Microsoft Networks - KEYBOARD	BUSY LOOP
  3516 0000167B EBE7                    		jmp	short rci0
  3517                                  ; ---------------------------------------------------------------------------
  3518                                  
  3519                                  rci5:					; ...
  3520 0000167D 30E4                    		xor	ah, ah
  3521 0000167F E8862F                  		call	IOFUNC
  3522 00001682 C3                      		retn
  3523                                  
  3524                                  ; =============== S U B	R O U T	I N E =======================================
  3525                                  
  3526                                  RAWOUT:
  3527 00001683 53                      		push	bx
  3528 00001684 BB0100                  		mov	bx, 1
  3529 00001687 E81521                  		call	GET_IO_SFT
  3530 0000168A 721B                    		jb	short RAWRET1
  3531 0000168C 8B5C05                  		mov	bx, [si+5]	; [SI+SF_ENTRY.sf_flags]
  3532 0000168F 81E38080                		and	bx, 8080h	; sf_isnet+devid_device
  3533 00001693 81FB8000                		cmp	bx, 80h
  3534 00001697 7510                    		jnz	short RAWNORM
  3535 00001699 1E                      		push	ds
  3536 0000169A C55C07                  		lds	bx, [si+7]	; [SI+SF_ENTRY.sf_devptr]
  3537 0000169D F6470410                		test	byte [bx+4], 10h ; [BX+SYSDEV.ATT],
  3538                                  					; ISSPEC
  3539 000016A1 1F                      		pop	ds
  3540 000016A2 7405                    		jz	short RAWNORM
  3541 000016A4 CD29                    		int	29h		; DOS 2+ internal - FAST PUTCHAR
  3542                                  					; AL = character to display
  3543                                  
  3544                                  RAWRET:					; ...
  3545 000016A6 F8                      		clc
  3546                                  
  3547                                  RAWRET1:				; ...
  3548 000016A7 5B                      		pop	bx
  3549                                  
  3550                                  RAWRET2:				; ...
  3551 000016A8 C3                      		retn
  3552                                  ; ---------------------------------------------------------------------------
  3553                                  
  3554                                  RAWNORM:				; ...
  3555 000016A9 E80700                  		call	RAWOUT3
  3556 000016AC EBF8                    		jmp	short RAWRET
  3557                                  
  3558                                  ; ---------------------------------------------------------------------------
  3559                                  
  3560                                  RAWOUT2:				; ...
  3561 000016AE E8EE20                  		call	GET_IO_SFT
  3562 000016B1 72F5                    		jb	short RAWRET2
  3563                                  
  3564                                  ; =============== S U B	R O U T	I N E =======================================
  3565                                  
  3566                                  RAWOUT3:
  3567 000016B3 50                      		push	ax
  3568 000016B4 EB0D                    		jmp	short RAWOSTRTRAWOSTRT
  3569                                  ; ---------------------------------------------------------------------------
  3570                                  
  3571                                  ROLP:					; ...
  3572 000016B6 E8243C                  		call	SPOOLINT
  3573 000016B9 36810E[1106]0002        		or	word [ss:DOS34_FLAG], 200h ; CTRL_BREAK_FLAG
  3574 000016C0 E8913B                  		call	DSKSTATCHK
  3575                                  
  3576                                  RAWOSTRTRAWOSTRT:			; ...
  3577 000016C3 B403                    		mov	ah, 3
  3578 000016C5 E8402F                  		call	IOFUNC
  3579 000016C8 74EC                    		jz	short ROLP
  3580 000016CA 40                      		inc	ax
  3581 000016CB 58                      		pop	ax
  3582 000016CC 7405                    		jz	short nosend
  3583 000016CE B402                    		mov	ah, 2
  3584 000016D0 E8352F                  		call	IOFUNC
  3585                                  
  3586                                  nosend:					; ...
  3587 000016D3 F8                      		clc
  3588 000016D4 C3                      		retn
  3589                                  
  3590                                  ; =============== S U B	R O U T	I N E =======================================
  3591                                  
  3592                                  Save_Restore_Packet:
  3593 000016D5 1E                      		push	ds
  3594 000016D6 06                      		push	es
  3595 000016D7 56                      		push	si
  3596 000016D8 57                      		push	di
  3597 000016D9 83F800                  		cmp	ax, 0
  3598 000016DC 7408                    		jz	short save_packet
  3599 000016DE BE[6C0D]                		mov	si, FAKE_STACK_2F
  3600 000016E1 BF[5A03]                		mov	di, DEVCALL
  3601 000016E4 EB06                    		jmp	short set_seg
  3602                                  ; ---------------------------------------------------------------------------
  3603                                  
  3604                                  save_packet:				; ...
  3605 000016E6 BF[6C0D]                		mov	di, FAKE_STACK_2F
  3606 000016E9 BE[5A03]                		mov	si, DEVCALL
  3607                                  
  3608                                  set_seg:				; ...
  3609 000016EC 8CD0                    		mov	ax, ss
  3610 000016EE 8ED8                    		mov	ds, ax
  3611 000016F0 8EC0                    		mov	es, ax
  3612 000016F2 B90B00                  		mov	cx, 11
  3613 000016F5 F3A5                    		rep movsw
  3614 000016F7 5F                      		pop	di
  3615 000016F8 5E                      		pop	si
  3616 000016F9 07                      		pop	es
  3617 000016FA 1F                      		pop	ds
  3618 000016FB C3                      		retn
  3619                                  
  3620                                  ; =============== S U B	R O U T	I N E =======================================
  3621                                  
  3622                                  _$STD_CON_INPUT:
  3623 000016FC E8D7FC                  		call	_$STD_CON_INPUT_NO_ECHO
  3624 000016FF 50                      		push	ax
  3625 00001700 E80400                  		call	OUTT
  3626 00001703 58                      		pop	ax
  3627                                  
  3628                                  CON_INPUT_RETN:				; ...
  3629 00001704 C3                      		retn
  3630                                  
  3631                                  ; ---------------------------------------------------------------------------
  3632                                  
  3633                                  _$STD_CON_OUTPUT:			; ...
  3634 00001705 88D0                    		mov	al, dl
  3635                                  
  3636                                  OUTT:					; ...
  3637 00001707 3C20                    		cmp	al, 20h	; ' '
  3638 00001709 725C                    		jb	short CTRLOUT
  3639 0000170B 3C7F                    		cmp	al, 7Fh		; c_DEL	; 127
  3640 0000170D 7405                    		jz	short OUTCH
  3641                                  
  3642                                  OUTCHA:
  3643 0000170F 36FE06[F901]            		inc	byte [ss:CARPOS]
  3644                                  
  3645                                  OUTCH:					; ...
  3646 00001714 1E                      		push	ds
  3647 00001715 56                      		push	si
  3648 00001716 36FE06[0003]            		inc	byte [ss:CHARCO]
  3649 0000171B 368026[0003]3F          		and	byte [ss:CHARCO], 3Fh ; 00111111b
  3650 00001721 7505                    		jnz	short OUTSKIP
  3651 00001723 50                      		push	ax
  3652 00001724 E8E43B                  		call	STATCHK
  3653 00001727 58                      		pop	ax
  3654                                  
  3655                                  OUTSKIP:				; ...
  3656 00001728 E858FF                  		call	RAWOUT
  3657 0000172B 5E                      		pop	si
  3658 0000172C 1F                      		pop	ds
  3659 0000172D 36F606[FE02]FF          		test	byte [ss:PFLAG], 0FFh ; -1
  3660 00001733 74CF                    		jz	short CON_INPUT_RETN
  3661 00001735 53                      		push	bx
  3662 00001736 1E                      		push	ds
  3663 00001737 56                      		push	si
  3664 00001738 BB0100                  		mov	bx, 1
  3665 0000173B E86120                  		call	GET_IO_SFT
  3666 0000173E 7221                    		jb	short TRIPOPJ
  3667 00001740 8B5C05                  		mov	bx, [si+5]	; [SI+SF_ENTRY.sf_flags]
  3668 00001743 F6C780                  		test	bh, 80h		; (sf_isnet>>8)
  3669 00001746 7519                    		jnz	short TRIPOPJ
  3670 00001748 F6C380                  		test	bl, 80h		; devid_device
  3671 0000174B 7414                    		jz	short TRIPOPJ
  3672 0000174D BB0400                  		mov	bx, 4
  3673 00001750 E84C20                  		call	GET_IO_SFT
  3674 00001753 720C                    		jb	short TRIPOPJ
  3675 00001755 F6440608                		test	byte [si+6], 8 ; [SI+SF_ENTRY.sf_flags+1],
  3676                                  					; (sf_net_spool>>8)
  3677 00001759 7409                    		jz	short LISSTRT2J
  3678 0000175B 36C606[FE02]00          		mov	byte [ss:PFLAG], 0
  3679                                  
  3680                                  TRIPOPJ:				; ...
  3681 00001761 E98A00                  		jmp	TRIPOP
  3682                                  ; ---------------------------------------------------------------------------
  3683                                  
  3684                                  LISSTRT2J:				; ...
  3685 00001764 E98400                  		jmp	LISSTRT2
  3686                                  ; ---------------------------------------------------------------------------
  3687                                  
  3688                                  CTRLOUT:				; ...
  3689 00001767 3C0D                    		cmp	al, 0Dh		; c_CR
  3690 00001769 7420                    		jz	short ZERPOS
  3691 0000176B 3C08                    		cmp	al, 8		; c_BS
  3692 0000176D 7427                    		jz	short BACKPOS
  3693 0000176F 3C09                    		cmp	al, 9		; c_HT
  3694 00001771 75A1                    		jnz	short OUTCH
  3695 00001773 36A0[F901]              		mov	al, [ss:CARPOS]
  3696 00001777 0CF8                    		or	al, 0F8h
  3697 00001779 F6D8                    		neg	al
  3698                                  
  3699                                  TAB:					; ...
  3700 0000177B 51                      		push	cx
  3701 0000177C 88C1                    		mov	cl, al
  3702 0000177E B500                    		mov	ch, 0
  3703 00001780 E307                    		jcxz	POPTAB
  3704                                  
  3705                                  TABLP:					; ...
  3706 00001782 B020                    		mov	al, 20h	; ' '
  3707 00001784 E880FF                  		call	OUTT
  3708 00001787 E2F9                    		loop	TABLP
  3709                                  
  3710                                  POPTAB:					; ...
  3711 00001789 59                      		pop	cx
  3712 0000178A C3                      		retn
  3713                                  ; ---------------------------------------------------------------------------
  3714                                  
  3715                                  ZERPOS:					; ...
  3716 0000178B 36C606[F901]00          		mov	byte [ss:CARPOS], 0
  3717 00001791 EB81                    		jmp	short OUTCH
  3718                                  ; ---------------------------------------------------------------------------
  3719                                  
  3720                                  OUTJ:					; ...
  3721 00001793 E971FF                  		jmp	OUTT
  3722                                  ; ---------------------------------------------------------------------------
  3723                                  
  3724                                  BACKPOS:				; ...
  3725 00001796 36FE0E[F901]            		dec	byte [ss:CARPOS]
  3726 0000179B E976FF                  		jmp	OUTCH
  3727                                  
  3728                                  ; =============== S U B	R O U T	I N E =======================================
  3729                                  
  3730                                  
  3731                                   BUFOUT:		; ...
  3732 0000179E 3C20                    		cmp	al, 20h	; ' '
  3733 000017A0 73F1                    		jnb	short OUTJ
  3734 000017A2 3C09                    		cmp	al, 9
  3735 000017A4 74ED                    		jz	short OUTJ
  3736 000017A6 3C15                    		cmp	al, 15h		; "U"-"@"
  3737 000017A8 740D                    		jz	short CTRLU
  3738 000017AA 3C14                    		cmp	al, 14h		; "T"-"@"
  3739 000017AC 7409                    		jz	short CTRLU
  3740                                  
  3741                                  NOT_CTRLU:
  3742 000017AE 50                      		push	ax
  3743 000017AF B05E                    		mov	al, '^'
  3744 000017B1 E853FF                  		call	OUTT
  3745 000017B4 58                      		pop	ax
  3746 000017B5 0C40                    		or	al, 40h
  3747                                  
  3748                                  CTRLU:					; ...
  3749 000017B7 E84DFF                  		call	OUTT
  3750                                  
  3751                                  BUFOUT_RETN:				; ...
  3752 000017BA C3                      		retn
  3753                                  
  3754                                  ; ---------------------------------------------------------------------------
  3755                                  
  3756                                  _$STD_AUX_INPUT:			; ...
  3757 000017BB E84D3B                  		call	STATCHK
  3758 000017BE BB0300                  		mov	bx, 3
  3759 000017C1 E8DB1F                  		call	GET_IO_SFT
  3760 000017C4 72F4                    		jb	short BUFOUT_RETN
  3761 000017C6 EB03                    		jmp	short TAISTRT
  3762                                  ; ---------------------------------------------------------------------------
  3763                                  
  3764                                  AUXILP:					; ...
  3765 000017C8 E8123B                  		call	SPOOLINT
  3766                                  
  3767                                  TAISTRT:				; ...
  3768 000017CB B401                    		mov	ah, 1
  3769 000017CD E8382E                  		call	IOFUNC
  3770 000017D0 74F6                    		jz	short AUXILP
  3771 000017D2 30E4                    		xor	ah, ah
  3772 000017D4 E8312E                  		call	IOFUNC
  3773 000017D7 C3                      		retn
  3774                                  ; ---------------------------------------------------------------------------
  3775                                  
  3776                                  _$STD_AUX_OUTPUT:			; ...
  3777 000017D8 53                      		push	bx
  3778 000017D9 BB0300                  		mov	bx, 3
  3779 000017DC EB04                    		jmp	short SENDOUT
  3780                                  ; ---------------------------------------------------------------------------
  3781                                  
  3782                                  _$STD_PRINTER_OUTPUT:			; ...
  3783 000017DE 53                      		push	bx
  3784 000017DF BB0400                  		mov	bx, 4
  3785                                  
  3786                                  SENDOUT:				; ...
  3787 000017E2 88D0                    		mov	al, dl
  3788 000017E4 50                      		push	ax
  3789 000017E5 E8233B                  		call	STATCHK
  3790 000017E8 58                      		pop	ax
  3791 000017E9 1E                      		push	ds
  3792 000017EA 56                      		push	si
  3793                                  
  3794                                  LISSTRT2:				; ...
  3795 000017EB E8C0FE                  		call	RAWOUT2
  3796                                  
  3797                                  TRIPOP:					; ...
  3798 000017EE 5E                      		pop	si
  3799 000017EF 1F                      		pop	ds
  3800 000017F0 5B                      		pop	bx
  3801                                  
  3802                                  SCIS_RETN:				; ...
  3803 000017F1 C3                      		retn
  3804                                  ; ---------------------------------------------------------------------------
  3805                                  
  3806                                  _$STD_CON_INPUT_STATUS:			; ...
  3807 000017F2 E8163B                  		call	STATCHK
  3808 000017F5 B000                    		mov	al, 0
  3809 000017F7 74F8                    		jz	short SCIS_RETN
  3810 000017F9 0CFF                    		or	al, 0FFh	; -1
  3811 000017FB C3                      		retn
  3812                                  ; ---------------------------------------------------------------------------
  3813                                  
  3814                                  _$STD_CON_INPUT_FLUSH:			; ...
  3815 000017FC 50                      		push	ax
  3816 000017FD 52                      		push	dx
  3817 000017FE 31DB                    		xor	bx, bx
  3818 00001800 E89C1F                  		call	GET_IO_SFT
  3819 00001803 7205                    		jb	short BADJFNCON
  3820 00001805 B404                    		mov	ah, 4
  3821 00001807 E8FE2D                  		call	IOFUNC
  3822                                  
  3823                                  BADJFNCON:				; ...
  3824 0000180A 5A                      		pop	dx
  3825 0000180B 58                      		pop	ax
  3826 0000180C 88C4                    		mov	ah, al
  3827 0000180E 3C01                    		cmp	al, 1
  3828 00001810 7413                    		jz	short REDISPJ
  3829 00001812 3C06                    		cmp	al, 6
  3830 00001814 740F                    		jz	short REDISPJ
  3831 00001816 3C07                    		cmp	al, 7
  3832 00001818 740B                    		jz	short REDISPJ
  3833 0000181A 3C08                    		cmp	al, 8
  3834 0000181C 7407                    		jz	short REDISPJ
  3835 0000181E 3C0A                    		cmp	al, 10
  3836 00001820 7403                    		jz	short REDISPJ
  3837 00001822 B000                    		mov	al, 0
  3838 00001824 C3                      		retn
  3839                                  ; ---------------------------------------------------------------------------
  3840                                  
  3841                                  REDISPJ:				; ...
  3842 00001825 FA                      		cli
  3843 00001826 E96AEB                  		jmp	REDISP
  3844                                  ; ---------------------------------------------------------------------------
  3845                                  
  3846                                  _$GET_FCB_POSITION:			; ...
  3847 00001829 E80005                  		call	GetExtended
  3848 0000182C E8D004                  		call	GetExtent
  3849 0000182F 894421                  		mov	[si+21h], ax	; [SI+SYS_FCB.RR]
  3850 00001832 885423                  		mov	[si+23h], dl	; [SI+SYS_FCB.RR+2]
  3851 00001835 837C0E40                		cmp	word [si+0Eh], 64 ;	[SI+SYS_FCB.RECSIZ]
  3852 00001839 7303                    		jnb	short GetFCBBye
  3853 0000183B 887424                  		mov	[si+24h], dh	; [SI+SYS_FCB.RR+2+1]
  3854                                  
  3855                                  GetFCBBye:				; ...
  3856 0000183E E9EFED                  		jmp	NO_OP
  3857                                  ; ---------------------------------------------------------------------------
  3858                                  
  3859                                  _$FCB_DELETE:				; ...
  3860 00001841 BF[BE03]                		mov	di, OPENBUF
  3861 00001844 E8C054                  		call	TransFCB
  3862 00001847 7209                    		jb	short BadPath
  3863 00001849 16                      		push	ss
  3864 0000184A 1F                      		pop	ds
  3865 0000184B E8CB0D                  		call	DOS_DELETE
  3866 0000184E 7202                    		jb	short BadPath
  3867                                  
  3868                                  GoodPath:				; ...
  3869 00001850 EBEC                    		jmp	short GetFCBBye
  3870                                  ; ---------------------------------------------------------------------------
  3871                                  
  3872                                  BadPath:				; ...
  3873 00001852 E9DEED                  		jmp	FCB_RET_ER
  3874                                  ; ---------------------------------------------------------------------------
  3875                                  
  3876                                  _$GET_FCB_FILE_LENGTH:			; ...
  3877 00001855 E8D404                  		call	GetExtended
  3878 00001858 BF[BE03]                		mov	di, OPENBUF
  3879 0000185B 1E                      		push	ds
  3880 0000185C 56                      		push	si
  3881 0000185D E8A754                  		call	TransFCB
  3882 00001860 5E                      		pop	si
  3883 00001861 1F                      		pop	ds
  3884 00001862 72EE                    		jb	short BadPath
  3885 00001864 1E                      		push	ds
  3886 00001865 56                      		push	si
  3887 00001866 16                      		push	ss
  3888 00001867 1F                      		pop	ds
  3889 00001868 E8CB11                  		call	GET_FILE_INFO
  3890 0000186B 5E                      		pop	si
  3891 0000186C 1F                      		pop	ds
  3892 0000186D 72E3                    		jb	short BadPath
  3893 0000186F 89DA                    		mov	dx, bx
  3894 00001871 89F8                    		mov	ax, di
  3895 00001873 8B5C0E                  		mov	bx, [si+0Eh]	; [SI+SYS_FCB.RECSIZ]
  3896 00001876 09DB                    		or	bx, bx
  3897 00001878 7503                    		jnz	short GetSize
  3898 0000187A BB8000                  		mov	bx, 128
  3899                                  
  3900                                  GetSize:				; ...
  3901 0000187D 89C7                    		mov	di, ax
  3902 0000187F 89D0                    		mov	ax, dx
  3903 00001881 31D2                    		xor	dx, dx
  3904 00001883 F7F3                    		div	bx
  3905 00001885 50                      		push	ax
  3906 00001886 89F8                    		mov	ax, di
  3907 00001888 F7F3                    		div	bx
  3908 0000188A 89D1                    		mov	cx, dx
  3909 0000188C 5A                      		pop	dx
  3910 0000188D E306                    		jcxz	LengthStore
  3911 0000188F 83C001                  		add	ax, 1
  3912 00001892 83D200                  		adc	dx, 0
  3913                                  
  3914                                  LengthStore:				; ...
  3915 00001895 894421                  		mov	[si+21h], ax	; [SI+SYS_FCB.RR]
  3916 00001898 885423                  		mov	[si+23h], dl	; [SI+SYS_FCB.RR+2]
  3917 0000189B 08F6                    		or	dh, dh
  3918 0000189D 74B1                    		jz	short GoodPath
  3919 0000189F 887424                  		mov	[si+24h], dh	; [SI+SYS_FCB.RR+3]
  3920                                  
  3921                                  GoodRet:				; ...
  3922 000018A2 EBAC                    		jmp	short GoodPath
  3923                                  ; ---------------------------------------------------------------------------
  3924                                  
  3925                                  _$FCB_CLOSE:				; ...
  3926 000018A4 30C0                    		xor	al, al
  3927 000018A6 E88304                  		call	GetExtended
  3928 000018A9 7403                    		jz	short NoAttr
  3929 000018AB 8A44FF                  		mov	al, [si-1]
  3930                                  
  3931                                  NoAttr:					; ...
  3932 000018AE 36A2[6B05]              		mov	[ss:ATTRIB], al
  3933 000018B2 E8E503                  		call	SFTFromFCB
  3934 000018B5 72EB                    		jb	short GoodRet
  3935 000018B7 268A4504                		mov	al, [es:di+4]	; [ES:DI+SF_ENTRY.sf_attr]
  3936 000018BB 30E4                    		xor	ah, ah
  3937 000018BD 50                      		push	ax
  3938 000018BE E88A5C                  		call	CheckShare
  3939 000018C1 7508                    		jnz	short NoStash
  3940 000018C3 36A0[6B05]              		mov	al, [ss:ATTRIB]
  3941 000018C7 26884504                		mov	[es:di+4], al	; [ES:DI+SF_ENTRY.sf_attr]
  3942                                  
  3943                                  NoStash:				; ...
  3944 000018CB 8B4414                  		mov	ax, [si+14h]	; [SI+SYS_FCB.FDATE]
  3945 000018CE 2689450F                		mov	[es:di+0Fh], ax	; [ES:DI+SF_ENTRY.sf_date]
  3946 000018D2 8B4416                  		mov	ax, [si+16h]	; [SI+SYS_FCB.FTIME]
  3947 000018D5 2689450D                		mov	[es:di+0Dh], ax	; [ES:DI+SF_ENTRY.sf_time]
  3948 000018D9 8B4410                  		mov	ax, [si+10h]	; [SI+SYS_FCB.FILSIZ]
  3949 000018DC 26894511                		mov	[es:di+11h], ax	; [ES:DI+SF_ENTRY.sf_size]
  3950 000018E0 8B4412                  		mov	ax, [si+12h]	; [SI+SYS_FCB.FILSIZ+2]
  3951 000018E3 26894513                		mov	[es:di+13h], ax	; [ES:DI+SF_ENTRY.sf_size+2]
  3952 000018E7 26814D050040            		or	word [es:di+5], 4000h ; [ES:DI+SF_ENTRY.sf_flags],
  3953                                  					; sf_close_nodate
  3954 000018ED 16                      		push	ss
  3955 000018EE 1F                      		pop	ds
  3956 000018EF E85817                  		call	DOS_CLOSE
  3957 000018F2 C43E[9E05]              		les	di, [THISSFT]
  3958 000018F6 59                      		pop	cx
  3959 000018F7 26884D04                		mov	[es:di+4], cl	; [ES:DI+SF_ENTRY.sf_attr]
  3960 000018FB 9C                      		pushf
  3961 000018FC 26833D00                		cmp	word [es:di], 0 ; [ES:DI+SF_ENTRY.sf_ref_count]
  3962 00001900 7507                    		jnz	short CloseOK
  3963 00001902 50                      		push	ax
  3964 00001903 B04D                    		mov	al, 'M'         ; 4Dh
  3965 00001905 E80203                  		call	BlastSFT
  3966 00001908 58                      		pop	ax
  3967                                  
  3968                                  CloseOK:				; ...
  3969 00001909 9D                      		popf
  3970 0000190A 7396                    		jnb	short GoodRet
  3971 0000190C 3C06                    		cmp	al, 6		; error_invalid_handle
  3972 0000190E 7492                    		jz	short GoodRet
  3973 00001910 B002                    		mov	al, 2		; error_file_not_found
  3974                                  
  3975                                  fcb_close_err:				; ...
  3976 00001912 E91EED                  		jmp	FCB_RET_ER
  3977                                  ; ---------------------------------------------------------------------------
  3978                                  
  3979                                  _$FCB_RENAME:				; ...
  3980 00001915 E81404                  		call	GetExtended
  3981 00001918 52                      		push	dx
  3982 00001919 8A04                    		mov	al, [si]
  3983 0000191B 83C610                  		add	si, 10h
  3984 0000191E BF[3E04]                		mov	di, RENBUF
  3985 00001921 FF34                    		push	word [si]
  3986 00001923 1E                      		push	ds
  3987 00001924 56                      		push	si
  3988 00001925 8804                    		mov	[si], al
  3989 00001927 89F2                    		mov	dx, si
  3990 00001929 E8DB53                  		call	TransFCB
  3991 0000192C 5E                      		pop	si
  3992 0000192D 1F                      		pop	ds
  3993 0000192E 8F04                    		pop	word [si]
  3994 00001930 5A                      		pop	dx
  3995 00001931 721A                    		jb	short fren90
  3996 00001933 368B36[B205]            		mov	si, [ss:WFP_START]
  3997 00001938 368936[B405]            		mov	[ss:REN_WFP], si
  3998 0000193D BF[BE03]                		mov	di, OPENBUF
  3999 00001940 E8C453                  		call	TransFCB
  4000 00001943 7208                    		jb	short fren90
  4001 00001945 E8B10E                  		call	DOS_RENAME
  4002 00001948 7203                    		jb	short fren90
  4003 0000194A E9E3EC                  		jmp	NO_OP		; FCB_RET_OK
  4004                                  ; ---------------------------------------------------------------------------
  4005                                  
  4006                                  fren90:					; ...
  4007 0000194D EBC3                    		jmp	short fcb_close_err
  4008                                  
  4009                                  ; =============== S U B	R O U T	I N E =======================================
  4010                                  
  4011                                  SaveFCBInfo:
  4012 0000194F 36C43E[9E05]            		les	di, [ss:THISSFT]
  4013 00001954 E853F9                  		call	IsSFTNet
  4014 00001957 740B                    		jz	short SaveLocal
  4015 00001959 268B450B                		mov	ax, [es:di+0Bh]	; [ES:DI+sf_serial_ID]
  4016 0000195D 89441C                  		mov	[si+1Ch], ax	; [SI+fcb_netID]
  4017 00001960 B380                    		mov	bl, 80h		; FCBNETWORK
  4018 00001962 EB67                    		jmp	short SaveSFN
  4019                                  ; ---------------------------------------------------------------------------
  4020                                  
  4021                                  SaveLocal:				; ...
  4022 00001964 E8E45B                  		call	CheckShare
  4023 00001967 7402                    		jz	short SaveNoShare
  4024 00001969 EB5B                    		jmp	short SaveShare
  4025                                  ; ---------------------------------------------------------------------------
  4026                                  
  4027                                  SaveNoShare:				; ...
  4028 0000196B 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  4029                                  					; devid_device
  4030 00001970 7542                    		jnz	short SaveNoShareDev
  4031 00001972 268B451B                		mov	ax, [es:di+1Bh]	; [ES:DI+SF_ENTRY.sf_dirsec]
  4032 00001976 89441D                  		mov	[si+1Dh], ax	; [SI+fcb_nsl_dirsec]
  4033 00001979 268B451D                		mov	ax, [es:di+1Dh]	; [es:di+SF_ENTRY.sf_dirsec+2]
  4034 0000197D 268A5D04                		mov	bl, [es:di+4]	; [es:di+SF_ENTRY.sf_attr]
  4035 00001981 88DF                    		mov	bh, bl
  4036 00001983 D0CB                    		ror	bl, 1
  4037 00001985 D0E7                    		shl	bh, 1
  4038 00001987 08FB                    		or	bl, bh
  4039 00001989 80E3C0                  		and	bl, 0C0h
  4040 0000198C 08D8                    		or	al, bl
  4041 0000198E 884418                  		mov	[si+18h], al	; [si+fcb_sfn]
  4042 00001991 268A451F                		mov	al, [es:di+1Fh]	; [ES:DI+SF_ENTRY.sf_dirpos]
  4043 00001995 88441F                  		mov	[si+1Fh], al	; [SI+fcb_nsl_dirpos]
  4044 00001998 268B450B                		mov	ax, [es:di+0Bh]	; [ES:DI+SF_ENTRY.sf_firclus]
  4045 0000199C 89441B                  		mov	[si+1Bh], ax	; [SI+fcb_nsl_firclus]
  4046 0000199F B300                    		mov	bl, 0
  4047                                  
  4048                                  SetFCBBits:				; ...
  4049 000019A1 268B4505                		mov	ax, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  4050 000019A5 24C0                    		and	al, 0C0h
  4051 000019A7 260A4502                		or	al, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  4052 000019AB 88441A                  		mov	[si+1Ah], al	; [SI+fcb_nsl_bits]
  4053 000019AE 08DB                    		or	bl, bl
  4054 000019B0 742A                    		jz	short SaveNoSFN
  4055 000019B2 EB17                    		jmp	short SaveSFN
  4056                                  ; ---------------------------------------------------------------------------
  4057                                  
  4058                                  SaveNoShareDev:				; ...
  4059 000019B4 268B4507                		mov	ax, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  4060 000019B8 89441A                  		mov	[si+1Ah], ax	; [SI+fcb_nsld_drvptr]
  4061 000019BB 268B4509                		mov	ax, [es:di+9]	; [ES:DI+SF_ENTRY.sf_devptr+2]
  4062 000019BF 89441C                  		mov	[si+1Ch], ax	; [SI+fcb_nsld_drvptr+2]
  4063 000019C2 B340                    		mov	bl, 40h		; FCBDEVICE
  4064 000019C4 EBDB                    		jmp	short SetFCBBits
  4065                                  ; ---------------------------------------------------------------------------
  4066                                  
  4067                                  SaveShare:				; ...
  4068                                  		;call	dword [ss:ShSave] ; Call far [ss:JShare+(10*4)]
  4069 000019C6 36FF1E[B800]            		call	far [ss:JShare+(10*4)]
  4070                                  SaveSFN:				; ...
  4071 000019CB 8D45FA                  		lea	ax, [di-6]	; [DI-SFT.SFTable]
  4072 000019CE 362B06[4000]            		sub	ax, word [ss:SFTFCB]
  4073 000019D3 53                      		push	bx
  4074 000019D4 B33B                    		mov	bl, 59		; SF_ENTRY.size
  4075 000019D6 F6F3                    		div	bl
  4076 000019D8 884418                  		mov	[si+18h], al	; [SI+fcb_sfn]
  4077 000019DB 5B                      		pop	bx
  4078                                  
  4079                                  SaveNoSFN:				; ...
  4080 000019DC 268B4505                		mov	ax, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  4081 000019E0 243F                    		and	al, 3Fh
  4082 000019E2 08D8                    		or	al, bl
  4083 000019E4 884419                  		mov	[si+19h], al	; [SI+fcb_l_drive]
  4084 000019E7 36A1[1000]              		mov	ax, [ss:FCBLRU]
  4085 000019EB 40                      		inc	ax
  4086 000019EC 26894515                		mov	[es:di+15h], ax	; [ES:DI+sf_LRU]
  4087 000019F0 7506                    		jnz	short SimpleStuff
  4088 000019F2 BB1500                  		mov	bx, 15h		; SF_ENTRY.sf_position
  4089 000019F5 E80500                  		call	ResetLRU
  4090                                  
  4091                                  SimpleStuff:				; ...
  4092 000019F8 36A3[1000]              		mov	[ss:FCBLRU], ax
  4093 000019FC C3                      		retn
  4094                                  
  4095                                  ; =============== S U B	R O U T	I N E =======================================
  4096                                  
  4097                                  ResetLRU:		; ...
  4098 000019FD B80080                  		mov	ax, 8000h
  4099 00001A00 06                      		push	es
  4100 00001A01 57                      		push	di
  4101 00001A02 36C43E[4000]            		les	di, [ss:SFTFCB]
  4102 00001A07 268B4D04                		mov	cx, [es:di+4]	; [ES:DI+SFT.SFCount]
  4103 00001A0B 8D7D06                  		lea	di, [di+6]	; [DI+SFT.SFTable]
  4104                                  
  4105                                  ovScan:					; ...
  4106 00001A0E 262901                  		sub	[es:bx+di], ax
  4107 00001A11 7703                    		ja	short ovLoop
  4108 00001A13 268901                  		mov	[es:bx+di], ax
  4109                                  
  4110                                  ovLoop:					; ...
  4111 00001A16 83C73B                  		add	di, 59		; SF_ENTRY.size
  4112 00001A19 E2F3                    		loop	ovScan
  4113 00001A1B 5F                      		pop	di
  4114 00001A1C 07                      		pop	es
  4115 00001A1D 268901                  		mov	[es:bx+di], ax
  4116 00001A20 C3                      		retn
  4117                                  
  4118                                  ; =============== S U B	R O U T	I N E =======================================
  4119                                  
  4120                                  LRUFCB:		; ...
  4121 00001A21 06                      		push	es
  4122 00001A22 E861EA                  		call	save_world
  4123 00001A25 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  4124 00001A2A 08C0                    		or	al, al
  4125 00001A2C 751A                    		jnz	short lru1
  4126 00001A2E 8B3E[5D10]              		mov	di, word [LocalSFT]
  4127 00001A32 0B3E[5F10]              		or	di, word [LocalSFT+2]
  4128 00001A36 7410                    		jz	short lru1
  4129 00001A38 C43E[5D10]              		les	di, [LocalSFT]
  4130                                  
  4131                                  gotlocalSFT:				; ...
  4132 00001A3C 893E[9E05]              		mov	word [THISSFT], di
  4133 00001A40 8C06[A005]              		mov	word [THISSFT+2], es
  4134 00001A44 F8                      		clc
  4135 00001A45 E9AE00                  		jmp	LRUDone
  4136                                  ; ---------------------------------------------------------------------------
  4137                                  
  4138                                  lru1:					; ...
  4139 00001A48 C43E[4000]              		les	di, [SFTFCB]
  4140 00001A4C 268B4D04                		mov	cx, [es:di+4]	; [es:di+SFT.SFCount]
  4141 00001A50 8D7D06                  		lea	di, [di+6]	; [di+SFT.SFTable]
  4142 00001A53 BBFFFF                  		mov	bx, 0FFFFh	; -1
  4143 00001A56 89DE                    		mov	si, bx
  4144 00001A58 89DA                    		mov	dx, bx
  4145 00001A5A 89DD                    		mov	bp, bx
  4146                                  
  4147                                  findSFT:				; ...
  4148 00001A5C 26830D00                		or	word [es:di], 0 ; [es:di+SF_ENTRY.sf_ref_count]
  4149 00001A60 744E                    		jz	short gotSFT
  4150 00001A62 26833DFF                		cmp	word [es:di], 0FFFFh ; [es:di+SF_ENTRY.sf_ref_count],
  4151                                  					; sf_busy
  4152 00001A66 7448                    		jz	short gotSFT
  4153 00001A68 26F745050080            		test	word [es:di+5], 8000h ; [ES:DI+SF_ENTRY.sf_flags],
  4154                                  					; sf_isnet
  4155 00001A6E 7532                    		jnz	short lru5
  4156 00001A70 E8D85A                  		call	CheckShare
  4157 00001A73 752D                    		jnz	short lru5
  4158                                  
  4159                                  hackpoint:				; ...
  4160 00001A75 893E[5D10]              		mov	word [LocalSFT],	di
  4161 00001A79 8C06[5F10]              		mov	word [LocalSFT+2], es
  4162 00001A7D 08C0                    		or	al, al
  4163 00001A7F 74BB                    		jz	short gotlocalSFT
  4164 00001A81 26395D15                		cmp	[es:di+15h], bx	; [es:di+sf_LRU]
  4165 00001A85 7306                    		jnb	short lru4
  4166 00001A87 268B5D15                		mov	bx, [es:di+15h]	; [es:di+sf_LRU]
  4167 00001A8B 89FE                    		mov	si, di
  4168                                  
  4169                                  lru4:					; ...
  4170 00001A8D 83C73B                  		add	di, 59		; SF_ENTRY.size
  4171 00001A90 E2CA                    		loop	findSFT
  4172 00001A92 89F7                    		mov	di, si
  4173 00001A94 83FEFF                  		cmp	si, -1
  4174 00001A97 7517                    		jnz	short gotSFT
  4175 00001A99 89EF                    		mov	di, bp
  4176 00001A9B 83FDFF                  		cmp	bp, -1
  4177 00001A9E 7530                    		jnz	short gotnetSFT
  4178                                  
  4179                                  noSFT:
  4180 00001AA0 EB51                    		jmp	short errorbadSFT
  4181                                  ; ---------------------------------------------------------------------------
  4182                                  
  4183                                  lru5:					; ...
  4184 00001AA2 26395515                		cmp	[es:di+15h], dx	; [es:di+sf_LRU]
  4185 00001AA6 73E5                    		jnb	short lru4
  4186 00001AA8 268B5515                		mov	dx, [es:di+15h]	; [es:di+sf_LRU]
  4187 00001AAC 89FD                    		mov	bp, di
  4188 00001AAE EBDD                    		jmp	short lru4
  4189                                  ; ---------------------------------------------------------------------------
  4190                                  
  4191                                  gotSFT:					; ...
  4192 00001AB0 08C0                    		or	al, al
  4193 00001AB2 74C1                    		jz	short hackpoint
  4194 00001AB4 8CC0                    		mov	ax, es
  4195 00001AB6 393E[5D10]              		cmp	word [LocalSFT],	di
  4196 00001ABA 7506                    		jnz	short notinvalid
  4197 00001ABC 3906[5F10]              		cmp	word [LocalSFT+2], ax
  4198 00001AC0 7403                    		jz	short zerolocalSFT
  4199                                  
  4200                                  notinvalid:				; ...
  4201 00001AC2 E977FF                  		jmp	gotlocalSFT
  4202                                  ; ---------------------------------------------------------------------------
  4203                                  
  4204                                  zerolocalSFT:				; ...
  4205 00001AC5 31C0                    		xor	ax, ax
  4206 00001AC7 A3[5D10]                		mov	word [LocalSFT],	ax
  4207 00001ACA A3[5F10]                		mov	word [LocalSFT+2], ax
  4208 00001ACD E96CFF                  		jmp	gotlocalSFT
  4209                                  ; ---------------------------------------------------------------------------
  4210                                  
  4211                                  gotnetSFT:				; ...
  4212 00001AD0 08C0                    		or	al, al
  4213 00001AD2 7508                    		jnz	short closenet
  4214 00001AD4 893E[5D10]              		mov	word [LocalSFT],	di
  4215 00001AD8 8C06[5F10]              		mov	word [LocalSFT+2], es
  4216                                  
  4217                                  closenet:				; ...
  4218 00001ADC 893E[9E05]              		mov	word [THISSFT], di
  4219 00001AE0 8C06[A005]              		mov	word [THISSFT+2], es
  4220                                  
  4221                                  LRUClose:				; ...
  4222 00001AE4 26833D00                		cmp	word [es:di], 0 ; [es:di+SF_ENTRY.sf_ref_count]
  4223 00001AE8 740C                    		jz	short LRUDone
  4224 00001AEA E85D15                  		call	DOS_CLOSE
  4225 00001AED 73F5                    		jnb	short LRUClose
  4226 00001AEF 3C06                    		cmp	al, 6
  4227 00001AF1 74F1                    		jz	short LRUClose
  4228                                  
  4229                                  errorbadSFT:				; ...
  4230 00001AF3 F9                      		stc
  4231 00001AF4 EB05                    		jmp	short LRUDead
  4232                                  ; ---------------------------------------------------------------------------
  4233                                  
  4234                                  LRUDone:				; ...
  4235 00001AF6 30C0                    		xor	al, al
  4236 00001AF8 E80F01                  		call	BlastSFT
  4237                                  
  4238                                  LRUDead:				; ...
  4239 00001AFB E871E9                  		call	restore_world
  4240 00001AFE 07                      		pop	es
  4241 00001AFF 2E8E06[0700]            		mov	es, [cs:DosDSeg]
  4242 00001B04 26C43E[9E05]            		les	di, [es:THISSFT]
  4243 00001B09 7201                    		jb	short LruFCB_err
  4244 00001B0B C3                      		retn
  4245                                  ; ---------------------------------------------------------------------------
  4246                                  
  4247                                  LruFCB_err:				; ...
  4248 00001B0C B023                    		mov	al, 23h		; error_FCB_unavailable
  4249 00001B0E C3                      		retn
  4250                                  
  4251                                  ; =============== S U B	R O U T	I N E =======================================
  4252                                  
  4253                                  RegenCopyName:	; ...
  4254 00001B0F AC                      		lodsb
  4255 00001B10 E8D336                  		call	UCase
  4256                                  
  4257                                  StuffChar2:
  4258 00001B13 AA                      		stosb
  4259 00001B14 E2F9                    		loop	RegenCopyName	; CopyName
  4260 00001B16 C3                      		retn
  4261                                  
  4262                                  ; =============== S U B	R O U T	I N E =======================================
  4263                                  
  4264                                  FCBRegen:		; ...
  4265 00001B17 8A4419                  		mov	al, [si+19h]	; [SI+fcb_l_drive]
  4266 00001B1A A880                    		test	al, 80h
  4267 00001B1C 741C                    		jz	short RegenNoSharing
  4268 00001B1E E82A5A                  		call	CheckShare
  4269 00001B21 7509                    		jnz	short RegenFail
  4270 00001B23 B80011                  		mov	ax, 1100h
  4271 00001B26 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - INSTALLATION	CHECK
  4272                                  					; Return: AL = 00h  not	installed, OK to install
  4273                                  					; 01h  not installed, not OK to	install
  4274                                  					; FFh  installed
  4275 00001B28 08C0                    		or	al, al
  4276 00001B2A 740C                    		jz	short RegenDead
  4277                                  
  4278                                  RegenFail:				; ...
  4279 00001B2C 36A1[3A03]              		mov	ax, [ss:USER_IN_AX]
  4280 00001B30 80FC10                  		cmp	ah, 10h
  4281 00001B33 7403                    		jz	short RegenDead
  4282 00001B35 E89801                  		call	FCBHardErr
  4283                                  
  4284                                  RegenDead:				; ...
  4285 00001B38 F9                      		stc
  4286                                  
  4287                                  FCBRegen_retn:				; ...
  4288 00001B39 C3                      		retn
  4289                                  ; ---------------------------------------------------------------------------
  4290                                  
  4291                                  RegenNoSharing:				; ...
  4292 00001B3A E80E5A                  		call	CheckShare
  4293 00001B3D 75ED                    		jnz	short RegenFail
  4294 00001B3F 50                      		push	ax
  4295 00001B40 B000                    		mov	al, 0
  4296 00001B42 E8DCFE                  		call	LRUFCB
  4297 00001B45 58                      		pop	ax
  4298 00001B46 72F1                    		jb	short FCBRegen_retn
  4299 00001B48 26C745020280            		mov	word [es:di+2], 8002h ; [ES:DI+SF_ENTRY.sf_mode],
  4300                                  					; sf_isFCB+open_for_both+SHARING_COMP
  4301 00001B4E 243F                    		and	al, 3Fh
  4302 00001B50 98                      		cbw
  4303 00001B51 0D0040                  		or	ax, 4000h	; sf_close_nodate
  4304 00001B54 8A4C1A                  		mov	cl, [si+1Ah]	; [SI+fcb_nsl_bits]
  4305 00001B57 88CD                    		mov	ch, cl
  4306 00001B59 80E5C0                  		and	ch, 0C0h
  4307 00001B5C 08E8                    		or	al, ch
  4308 00001B5E 80E10F                  		and	cl, 0Fh		; access_mask
  4309 00001B61 26884D02                		mov	[es:di+2], cl	; ES:DI+SF_ENTRY.sf_mode]
  4310 00001B65 26894505                		mov	[es:di+5], ax	; [ES:DI+SF_ENTRY.sf_flags]
  4311 00001B69 36A1[3C03]              		mov	ax, [ss:PROC_ID]
  4312 00001B6D 26894531                		mov	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
  4313 00001B71 1E                      		push	ds
  4314 00001B72 56                      		push	si
  4315 00001B73 06                      		push	es
  4316 00001B74 57                      		push	di
  4317 00001B75 16                      		push	ss
  4318 00001B76 07                      		pop	es
  4319 00001B77 BF[4B05]                		mov	di, NAME1
  4320 00001B7A B90800                  		mov	cx, 8
  4321 00001B7D 46                      		inc	si
  4322 00001B7E E88EFF                  		call	RegenCopyName
  4323 00001B81 16                      		push	ss
  4324 00001B82 1F                      		pop	ds
  4325 00001B83 C606[6B05]16            		mov	byte [ATTRIB], 16h ; attr_hidden+attr_system+attr_directory
  4326 00001B88 E8B227                  		call	DEVNAME
  4327 00001B8B 5F                      		pop	di
  4328 00001B8C 07                      		pop	es
  4329 00001B8D 5E                      		pop	si
  4330 00001B8E 1F                      		pop	ds
  4331 00001B8F 7219                    		jb	short RegenFileNoSharing
  4332 00001B91 26887D05                		mov	[es:di+5], bh	; [ES:DI+SF_ENTRY.sf_flags]
  4333 00001B95 26C6450400              		mov	byte [es:di+4], 0 ;	[ES:DI+SF_ENTRY.sf_attr]
  4334 00001B9A 36C536[9A05]            		lds	si, [ss:DEVPT]
  4335 00001B9F 26897507                		mov	[es:di+7], si	; [ES:DI+SF_ENTRY.sf_devptr]
  4336 00001BA3 268C5D09                		mov	word [es:di+9], ds ; [ES:DI+SF_ENTRY.sf_devptr+2]
  4337 00001BA7 C3                      		retn
  4338                                  ; ---------------------------------------------------------------------------
  4339                                  
  4340                                  RegenDeadJ:				; ...
  4341 00001BA8 EB8E                    		jmp	short RegenDead
  4342                                  ; ---------------------------------------------------------------------------
  4343                                  
  4344                                  RegenFileNoSharing:			; ...
  4345 00001BAA 268B4505                		mov	ax, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  4346 00001BAE 83E03F                  		and	ax, 3Fh
  4347 00001BB1 1E                      		push	ds
  4348 00001BB2 56                      		push	si
  4349 00001BB3 E80250                  		call	FIND_DPB
  4350 00001BB6 26897507                		mov	[es:di+7], si	; [ES:DI+SF_ENTRY.sf_devptr]
  4351 00001BBA 268C5D09                		mov	word [es:di+9], ds ; [ES:DI+SF_ENTRY.sf_devptr+2]
  4352 00001BBE 5E                      		pop	si
  4353 00001BBF 1F                      		pop	ds
  4354 00001BC0 72E6                    		jb	short RegenDeadJ
  4355 00001BC2 8B441D                  		mov	ax, [si+1Dh]	; [SI+fcb_nsl_dirsec]
  4356 00001BC5 2689451B                		mov	[es:di+1Bh], ax	; [ES:DI+SF_ENTRY.sf_dirsec]
  4357 00001BC9 8A4418                  		mov	al, [si+18h]	; [si+fcb_sfn]
  4358 00001BCC 24C0                    		and	al, 0C0h
  4359 00001BCE 88C4                    		mov	ah, al
  4360 00001BD0 D0C4                    		rol	ah, 1
  4361 00001BD2 D0E8                    		shr	al, 1
  4362 00001BD4 08E0                    		or	al, ah
  4363 00001BD6 243F                    		and	al, 3Fh
  4364 00001BD8 26884504                		mov	[es:di+4], al	; [es:di+SF_ENTRY.sf_attr]
  4365 00001BDC 8A4418                  		mov	al, [si+18h]	; [si+fcb_sfn]
  4366 00001BDF 243F                    		and	al, 3Fh
  4367 00001BE1 28E4                    		sub	ah, ah
  4368 00001BE3 2689451D                		mov	[es:di+1Dh], ax	; [es:di+SF_ENTRY.sf_dirsec+2]
  4369 00001BE7 8B441B                  		mov	ax, [si+1Bh]	; [SI+fcb_nsl_firclus]
  4370 00001BEA 2689450B                		mov	[es:di+0Bh], ax	; [ES:DI+SF_ENTRY.sf_firclus]
  4371 00001BEE 26894535                		mov	[es:di+35h], ax	; [ES:DI+SF_ENTRY.sf_lstclus]
  4372 00001BF2 8A441F                  		mov	al, [si+1Fh]	; SI+fcb_nsl_dirpos]
  4373 00001BF5 2688451F                		mov	[es:di+1Fh], al	; [ES:DI+SF_ENTRY.sf_dirpos]
  4374 00001BF9 26FF05                  		inc	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
  4375 00001BFC 8D7401                  		lea	si, [si+1]	; [SI+SYS_FCB.name]
  4376 00001BFF 8D7D20                  		lea	di, [di+20h]	; [DI+SF_ENTRY.sf_name]
  4377 00001C02 B90B00                  		mov	cx, 11		; SYS_FCB.EXTENT-SYS_FCB.name ;	12-1
  4378 00001C05 E807FF                  		call	RegenCopyName
  4379 00001C08 F8                      		clc
  4380 00001C09 C3                      		retn
  4381                                  
  4382                                  ; =============== S U B	R O U T	I N E =======================================
  4383                                  
  4384                                  BlastSFT:		; ...
  4385 00001C0A 57                      		push	di
  4386 00001C0B B93B00                  		mov	cx, 59		; SF_ENTRY.size
  4387 00001C0E F3AA                    		rep stosb
  4388 00001C10 5F                      		pop	di
  4389 00001C11 29C0                    		sub	ax, ax
  4390 00001C13 268905                  		mov	[es:di], ax	; [es:di+SFT_ENTRY.sf_ref_count]
  4391 00001C16 26894515                		mov	[es:di+15h], ax	; [es:di+sf_LRU]
  4392 00001C1A 48                      		dec	ax
  4393 00001C1B 26894517                		mov	[es:di+17h], ax	; [es:di+sf_OpenAge]
  4394 00001C1F C3                      		retn
  4395                                  
  4396                                  ; =============== S U B	R O U T	I N E =======================================
  4397                                  
  4398                                  CheckFCB:		; ...
  4399 00001C20 F64419C0                		test	byte [si+19h], 0C0h	; [si+fcb_l_drive],
  4400                                  					; FCBNETWORK|FCBSHARE|FCBDEVICE
  4401 00001C24 7450                    		jz	short BadSFT
  4402 00001C26 36C43E[4000]            		les	di, [ss:SFTFCB]
  4403 00001C2B 26384504                		cmp	[es:di+4], al	; [ES:DI+SFT.SFCount]
  4404 00001C2F 7245                    		jb	short BadSFT
  4405 00001C31 B33B                    		mov	bl, 59		; SF_ENTRY.size
  4406 00001C33 F6E3                    		mul	bl
  4407 00001C35 8D7D06                  		lea	di, [di+6]	; [DI+SFT.SFTable]
  4408 00001C38 01C7                    		add	di, ax
  4409 00001C3A 36A1[3C03]              		mov	ax, [ss:PROC_ID]
  4410 00001C3E 26394531                		cmp	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
  4411 00001C42 7532                    		jnz	short BadSFT
  4412 00001C44 26833D00                		cmp	word [es:di], 0 ; [ES:DI+SF_ENTRY.sf_ref_count]
  4413 00001C48 742C                    		jz	short BadSFT
  4414 00001C4A 8A4419                  		mov	al, [si+19h]	; [SI+fcb_l_drive]
  4415 00001C4D A880                    		test	al, 80h		; FCBSPECIAL
  4416 00001C4F 7431                    		jz	short CheckNoShare
  4417 00001C51 50                      		push	ax
  4418 00001C52 24C0                    		and	al, 0C0h	; FCBMASK
  4419 00001C54 3CC0                    		cmp	al, 0C0h	; FCBSHARE
  4420 00001C56 58                      		pop	ax
  4421 00001C57 751F                    		jnz	short CheckNet
  4422                                  		;call	dword [ss:ShChk] ; Call far [ss:JShare+(11*4)]
  4423 00001C59 36FF1E[BC00]            		call	far [ss:JShare+(11*4)]
  4424 00001C5E 7216                    		jb	short BadSFT
  4425 00001C60 EB06                    		jmp	short CheckD
  4426                                  ; ---------------------------------------------------------------------------
  4427                                  
  4428                                  CheckFirClus:				; [ES:DI+SF_ENTRY.sf_firclus]
  4429 00001C62 263B5D0B                		cmp	bx, [es:di+0Bh]
  4430 00001C66 750E                    		jnz	short BadSFT
  4431                                  
  4432                                  CheckD:					; ...
  4433 00001C68 243F                    		and	al, 3Fh
  4434 00001C6A 268A6505                		mov	ah, [es:di+5]
  4435 00001C6E 80E43F                  		and	ah, 3Fh
  4436 00001C71 38C4                    		cmp	ah, al
  4437 00001C73 7501                    		jnz	short BadSFT
  4438                                  
  4439                                  CheckD_retn:				; ...
  4440 00001C75 C3                      		retn
  4441                                  ; ---------------------------------------------------------------------------
  4442                                  
  4443                                  BadSFT:					; ...
  4444 00001C76 F9                      		stc
  4445 00001C77 C3                      		retn
  4446                                  ; ---------------------------------------------------------------------------
  4447                                  
  4448                                  CheckNet:				; ...
  4449 00001C78 8B441C                  		mov	ax, [si+1Ch]	; [SI+fcb_netID]
  4450 00001C7B 263B450B                		cmp	ax, [es:di+0Bh]	; [ES:DI+sf_serial_ID]
  4451 00001C7F 75F5                    		jnz	short BadSFT
  4452 00001C81 C3                      		retn
  4453                                  ; ---------------------------------------------------------------------------
  4454                                  
  4455                                  CheckNoShare:				; ...
  4456 00001C82 A840                    		test	al, 40h		; FCBDEVICE
  4457 00001C84 7500                    		jnz	short $+2	; CheckNoShareDev
  4458                                  
  4459                                  CheckNoShareDev:			; ...
  4460 00001C86 8B5C1A                  		mov	bx, [si+1Ah]	; [SI+fcb_nsld_drvptr]
  4461 00001C89 263B5D07                		cmp	bx, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  4462 00001C8D 75E7                    		jnz	short BadSFT
  4463 00001C8F 8B5C1C                  		mov	bx, [si+1Ch]	; [SI+fcb_nsld_drvptr+2]
  4464 00001C92 263B5D09                		cmp	bx, [es:di+9]	; [ES:DI+SF_ENTRY.sf_devptr+2]
  4465 00001C96 75DE                    		jnz	short BadSFT
  4466 00001C98 EBCE                    		jmp	short CheckD
  4467                                  
  4468                                  ; =============== S U B	R O U T	I N E =======================================
  4469                                  
  4470                                  SFTFromFCB:		; ...
  4471 00001C9A 50                      		push	ax
  4472 00001C9B 53                      		push	bx
  4473 00001C9C 8A4418                  		mov	al, [si+18h]	; [SI+fcb_sfn]
  4474 00001C9F E87EFF                  		call	CheckFCB
  4475 00001CA2 5B                      		pop	bx
  4476 00001CA3 58                      		pop	ax
  4477 00001CA4 36893E[9E05]            		mov	word [ss:THISSFT], di
  4478 00001CA9 368C06[A005]            		mov	word [ss:THISSFT+2], es
  4479 00001CAE 7311                    		jnb	short Set_SFT
  4480 00001CB0 06                      		push	es
  4481 00001CB1 E8D2E7                  		call	save_world
  4482 00001CB4 E860FE                  		call	FCBRegen
  4483 00001CB7 E8B5E7                  		call	restore_world
  4484 00001CBA 07                      		pop	es
  4485 00001CBB 36A1[2403]              		mov	ax, [ss:EXTERR]
  4486 00001CBF 72B4                    		jb	short CheckD_retn
  4487                                  
  4488                                  Set_SFT:				; ...
  4489 00001CC1 36C43E[9E05]            		les	di, [ss:THISSFT]
  4490 00001CC6 36FF36[3C03]            		push	word [ss:PROC_ID]
  4491 00001CCB 268F4531                		pop	word [es:di+31h] ; [ES:DI+SF_ENTRY.sf_PID]
  4492 00001CCF C3                      		retn
  4493                                  
  4494                                  ; =============== S U B	R O U T	I N E =======================================
  4495                                  
  4496                                  FCBHardErr:		; ...
  4497 00001CD0 2E8E06[0700]            		mov	es, [cs:DosDSeg]
  4498 00001CD5 B82300                  		mov	ax, 23h		; error_FCB_unavailable
  4499 00001CD8 26C606[4B03]08          		mov	byte [es:ALLOWED], 8 ; Allowed_FAIL
  4500 00001CDE 26C42E[8A05]            		les	bp, [es:THISDPB]
  4501 00001CE3 BF0100                  		mov	di, 1
  4502 00001CE6 89F9                    		mov	cx, di
  4503 00001CE8 268B560B                		mov	dx, [es:bp+0Bh]	; [ES:BP+DPB.FIRST_SECTOR]
  4504 00001CEC E8BB37                  		call	HARDERR
  4505 00001CEF F9                      		stc
  4506 00001CF0 C3                      		retn
  4507                                  
  4508                                  ; =============== S U B	R O U T	I N E =======================================
  4509                                  
  4510                                  GetRR:		; ...
  4511 00001CF1 8B4421                  		mov	ax, [si+21h]	; [SI+SYS_FCB.RR]
  4512 00001CF4 8B5423                  		mov	dx, [si+23h]	; [SI+SYS_FCB.RR+2]
  4513 00001CF7 83FB40                  		cmp	bx, 64
  4514 00001CFA 7202                    		jb	short GetRRBye
  4515 00001CFC 30F6                    		xor	dh, dh
  4516                                  
  4517                                  GetRRBye:				; ...
  4518 00001CFE C3                      		retn
  4519                                  
  4520                                  ; =============== S U B	R O U T	I N E =======================================
  4521                                  
  4522                                  GetExtent:		; ...
  4523 00001CFF 8A4420                  		mov	al, [si+20h]	; [SI+SYS_FCB.NR]
  4524 00001D02 8B540C                  		mov	dx, [si+0Ch]	; [SI+SYS_FCB.EXTENT]
  4525 00001D05 D0E0                    		shl	al, 1
  4526 00001D07 D1EA                    		shr	dx, 1
  4527 00001D09 D0D8                    		rcr	al, 1
  4528 00001D0B 88D4                    		mov	ah, dl
  4529 00001D0D 88F2                    		mov	dl, dh
  4530 00001D0F 30F6                    		xor	dh, dh
  4531 00001D11 C3                      		retn
  4532                                  
  4533                                  ; =============== S U B	R O U T	I N E =======================================
  4534                                  
  4535                                  SetExtent:		; ...
  4536 00001D12 50                      		push	ax
  4537 00001D13 52                      		push	dx
  4538 00001D14 89C1                    		mov	cx, ax
  4539 00001D16 247F                    		and	al, 7Fh
  4540 00001D18 884420                  		mov	[si+20h], al	; [SI+SYS_FCB.NR]
  4541 00001D1B 80E180                  		and	cl, 80h
  4542 00001D1E D1E1                    		shl	cx, 1
  4543 00001D20 D1D2                    		rcl	dx, 1
  4544 00001D22 88E8                    		mov	al, ch
  4545 00001D24 88D4                    		mov	ah, dl
  4546 00001D26 89440C                  		mov	[si+0Ch], ax	; [SI+SYS_FCB.EXTENT]
  4547 00001D29 5A                      		pop	dx
  4548 00001D2A 58                      		pop	ax
  4549 00001D2B C3                      		retn
  4550                                  
  4551                                  ; =============== S U B	R O U T	I N E =======================================
  4552                                  
  4553                                  GetExtended:	; ...
  4554 00001D2C 89D6                    		mov	si, dx
  4555 00001D2E 803CFF                  		cmp	byte [si], 0FFh ; -1
  4556 00001D31 7503                    		jnz	short GetBye
  4557 00001D33 83C607                  		add	si, 7
  4558                                  
  4559                                  GetBye:					; ...
  4560 00001D36 39D6                    		cmp	si, dx
  4561                                  
  4562                                  getextd_retn:				; ...
  4563 00001D38 C3                      		retn
  4564                                  
  4565                                  ; =============== S U B	R O U T	I N E =======================================
  4566                                  
  4567                                  GetRecSize:		; ...
  4568 00001D39 8B5C0E                  		mov	bx, [si+0Eh]	; [SI+SYS_FCB.RECSIZ]
  4569 00001D3C 09DB                    		or	bx, bx
  4570 00001D3E 75F8                    		jnz	short getextd_retn
  4571 00001D40 BB8000                  		mov	bx, 128
  4572 00001D43 895C0E                  		mov	[si+0Eh], bx	; [SI+SYS_FCB.RECSIZ]
  4573 00001D46 C3                      		retn
  4574                                  
  4575                                  ; ---------------------------------------------------------------------------
  4576                                  
  4577                                  FCBIO:					; ...
  4578 00001D47 55                      		push	bp
  4579 00001D48 89E5                    		mov	bp, sp
  4580 00001D4A 83EC14                  		sub	sp, 14h
  4581 00001D4D 8846EC                  		mov	[bp-14h], al	; FCBOp
  4582 00001D50 C646FF00                		mov	byte [bp-1], 0 ; FCBErr
  4583 00001D54 E8D5FF                  		call	GetExtended
  4584 00001D57 F646EC08                		test	byte [bp-14h], 8 ; FCBOp,BLOCK
  4585 00001D5B 7503                    		jnz	short GetPos
  4586 00001D5D B90100                  		mov	cx, 1
  4587                                  
  4588                                  GetPos:					; ...
  4589 00001D60 894EFD                  		mov	[bp-3],	cx	; cRec
  4590 00001D63 E899FF                  		call	GetExtent
  4591 00001D66 E8D0FF                  		call	GetRecSize
  4592 00001D69 895EF7                  		mov	[bp-9],	bx	; RecSize
  4593 00001D6C F646EC02                		test	byte [bp-14h], 2 ; FCBOp,RANDOM
  4594 00001D70 7403                    		jz	short GetRec
  4595 00001D72 E87CFF                  		call	GetRR
  4596                                  
  4597                                  GetRec:					; ...
  4598 00001D75 8946F9                  		mov	[bp-7],	ax	; RecPosL
  4599 00001D78 8956FB                  		mov	[bp-5],	dx	; RecPosH
  4600 00001D7B E894FF                  		call	SetExtent
  4601 00001D7E 8B46FB                  		mov	ax, [bp-5]	; RecPosH
  4602 00001D81 F7E3                    		mul	bx
  4603 00001D83 89C7                    		mov	di, ax
  4604 00001D85 8B46F9                  		mov	ax, [bp-7]	; RecPosL
  4605 00001D88 F7E3                    		mul	bx
  4606 00001D8A 01FA                    		add	dx, di
  4607 00001D8C 8946F3                  		mov	[bp-0Dh], ax	; bPosL
  4608 00001D8F 8956F5                  		mov	[bp-0Bh], dx	; bPosH
  4609 00001D92 8B46FD                  		mov	ax, [bp-3]	; cRec
  4610 00001D95 F7E3                    		mul	bx
  4611 00001D97 8946F1                  		mov	[bp-0Fh], ax	; cByte
  4612 00001D9A 360306[2C03]            		add	ax, word [ss:DMAADD]
  4613 00001D9F 83D200                  		adc	dx, 0
  4614 00001DA2 7419                    		jz	short DoOper
  4615 00001DA4 C646FF02                		mov	byte [bp-1], 2 ; FCBErr,FTRIM
  4616 00001DA8 36A1[2C03]              		mov	ax, word [ss:DMAADD]
  4617 00001DAC F7D8                    		neg	ax
  4618 00001DAE 7501                    		jnz	short DoDiv
  4619 00001DB0 48                      		dec	ax
  4620                                  
  4621                                  DoDiv:					; ...
  4622 00001DB1 31D2                    		xor	dx, dx
  4623 00001DB3 F7F3                    		div	bx
  4624 00001DB5 8946FD                  		mov	[bp-3],	ax	; cRec
  4625 00001DB8 F7E3                    		mul	bx
  4626 00001DBA 8946F1                  		mov	[bp-0Fh], ax	; cByte
  4627                                  
  4628                                  DoOper:					; ...
  4629 00001DBD 31DB                    		xor	bx, bx
  4630 00001DBF 895EEF                  		mov	[bp-11h], bx	; cResult
  4631 00001DC2 395EF1                  		cmp	[bp-0Fh], bx	; cByte
  4632 00001DC5 7508                    		jnz	short DoGetExt
  4633 00001DC7 F646FF02                		test	byte [bp-1], 2 ; FCBErr,FTRIM
  4634 00001DCB 7402                    		jz	short DoGetExt
  4635 00001DCD EB76                    		jmp	short SkipOp
  4636                                  ; ---------------------------------------------------------------------------
  4637                                  
  4638                                  DoGetExt:				; ...
  4639 00001DCF E8C8FE                  		call	SFTFromFCB
  4640 00001DD2 730F                    		jnb	short ContinueOp
  4641                                  
  4642                                  FCBDeath:				; ...
  4643 00001DD4 E85CE8                  		call	FCB_RET_ER
  4644 00001DD7 C746ED0000              		mov	word [bp-13h], 0 ; cRecRes
  4645 00001DDC C646FF01                		mov	byte [bp-1], 1 ; FCBErr,FEOF
  4646 00001DE0 E9EF00                  		jmp	FCBSave
  4647                                  ; ---------------------------------------------------------------------------
  4648                                  
  4649                                  ContinueOp:				; ...
  4650 00001DE3 8B4410                  		mov	ax, [si+10h]	; [SI+SYS_FCB.FILSIZ]
  4651 00001DE6 26894511                		mov	[es:di+11h], ax	; [ES:DI+SF_ENTRY.sf_size]
  4652 00001DEA 8B4412                  		mov	ax, [si+12h]	; [SI+SYS_FCB.FILSIZ+2]
  4653 00001DED 26894513                		mov	[es:di+13h], ax	; [ES:DI+SF_ENTRY.sf_size+2]
  4654 00001DF1 8B46F3                  		mov	ax, [bp-0Dh]	; bPosL
  4655 00001DF4 8B56F5                  		mov	dx, [bp-0Bh]	; bPosH
  4656 00001DF7 26894515                		mov	[es:di+15h], ax	; [ES:DI+SF_ENTRY.sf_position]
  4657 00001DFB 26875517                		xchg	dx, [es:di+17h]	; [ES:DI+SF_ENTRY.sf_position+2]
  4658 00001DFF 52                      		push	dx
  4659 00001E00 8B4EF1                  		mov	cx, [bp-0Fh]	; cByte
  4660 00001E03 BF[1934]                		mov	di, DOS_READ
  4661 00001E06 F646EC04                		test	byte [bp-14h], 4 ; FCBOp,FCBREAD
  4662 00001E0A 7503                    		jnz	short DoContext
  4663 00001E0C BF[4836]                		mov	di, DOS_WRITE
  4664                                  
  4665                                  DoContext:				; ...
  4666 00001E0F 55                      		push	bp
  4667 00001E10 1E                      		push	ds
  4668 00001E11 56                      		push	si
  4669 00001E12 16                      		push	ss
  4670 00001E13 1F                      		pop	ds
  4671 00001E14 FFD7                    		call	di ; DOS_READ	; or DOS_WRITE
  4672 00001E16 5E                      		pop	si
  4673 00001E17 1F                      		pop	ds
  4674 00001E18 5D                      		pop	bp
  4675 00001E19 72B9                    		jb	short FCBDeath
  4676 00001E1B 36803E[0B06]00          		cmp	byte [ss:DISK_FULL], 0
  4677 00001E21 740A                    		jz	short NODSKFULL
  4678 00001E23 36C606[0B06]00          		mov	byte [ss:DISK_FULL], 0
  4679 00001E29 C646FF01                		mov	byte [bp-1], 1 ; FCBErr,FEOF
  4680                                  
  4681                                  NODSKFULL:				; ...
  4682 00001E2D 894EEF                  		mov	[bp-11h], cx	; cResult
  4683 00001E30 E81CFB                  		call	SaveFCBInfo
  4684 00001E33 268F4517                		pop	word [es:di+17h] ; [ES:DI+SF_ENTRY.sf_position+2]
  4685 00001E37 268B4511                		mov	ax, [es:di+11h]	; [ES:DI+SF_ENTRY.sf_size]
  4686 00001E3B 894410                  		mov	[si+10h], ax	; [SI+SYS_FCB.FILSIZ]
  4687 00001E3E 268B4513                		mov	ax, [es:di+13h]	; [ES:DI+SF_ENTRY.sf_size+2]
  4688 00001E42 894412                  		mov	[si+12h], ax	; [SI+SYS_FCB.FILSIZ+2]
  4689                                  
  4690                                  SkipOp:					; ...
  4691 00001E45 8B46EF                  		mov	ax, [bp-11h]	; cResult
  4692 00001E48 31D2                    		xor	dx, dx
  4693 00001E4A F776F7                  		div	word [bp-9]	; RecSize
  4694 00001E4D 8946ED                  		mov	[bp-13h], ax	; cRecRes
  4695 00001E50 0146F9                  		add	[bp-7],	ax	; RecPosL
  4696 00001E53 8356FB00                		adc	word [bp-5], 0 ; RecPosH
  4697 00001E57 3B46FD                  		cmp	ax, [bp-3]	; cRec
  4698 00001E5A 7411                    		jz	short TryBlank
  4699 00001E5C F646EC04                		test	byte [bp-14h], 4 ; FCBOp,FCBREAD
  4700 00001E60 7507                    		jnz	short SetEOF
  4701 00001E62 26F6450580              		test	byte [es:di+5], 80h
  4702 00001E67 7504                    		jnz	short TryBlank
  4703                                  
  4704                                  SetEOF:					; ...
  4705 00001E69 C646FF01                		mov	byte [bp-1], 1 ; FCBErr,FEOF
  4706                                  
  4707                                  TryBlank:				; ...
  4708 00001E6D 09D2                    		or	dx, dx
  4709 00001E6F 7426                    		jz	short SetExt
  4710 00001E71 8346F901                		add	word [bp-7], 1 ; RecPosL
  4711 00001E75 8356FB00                		adc	word [bp-5], 0 ; RecPosH
  4712 00001E79 F646EC04                		test	byte [bp-14h], 4 ; FCBOp,FCBREAD
  4713 00001E7D 7418                    		jz	short SetExt
  4714 00001E7F FF46ED                  		inc	word [bp-13h] ; cRecRes
  4715 00001E82 C646FF03                		mov	byte [bp-1], 3 ; FCBErr,FTRIM+FEOF
  4716 00001E86 8B4EF7                  		mov	cx, [bp-9]	; RecSize
  4717 00001E89 29D1                    		sub	cx, dx
  4718 00001E8B 30C0                    		xor	al, al
  4719 00001E8D 36C43E[2C03]            		les	di, [ss:DMAADD]
  4720 00001E92 037EEF                  		add	di, [bp-11h]	; cResult
  4721 00001E95 F3AA                    		rep stosb
  4722                                  
  4723                                  SetExt:					; ...
  4724 00001E97 8B56FB                  		mov	dx, [bp-5]	; RecPosH
  4725 00001E9A 8B46F9                  		mov	ax, [bp-7]	; RecPosL
  4726 00001E9D F646EC02                		test	byte [bp-14h], 2 ; FCBOp,RANDOM
  4727 00001EA1 7406                    		jz	short DoSetExt
  4728 00001EA3 F646EC08                		test	byte [bp-14h], 8 ; FCBOp,BLOCK
  4729 00001EA7 7403                    		jz	short TrySetRR
  4730                                  
  4731                                  DoSetExt:				; ...
  4732 00001EA9 E866FE                  		call	SetExtent
  4733                                  
  4734                                  TrySetRR:				; ...
  4735 00001EAC F646EC08                		test	byte [bp-14h], 8 ; FCBOp,BLOCK
  4736 00001EB0 740F                    		jz	short TryReturn
  4737 00001EB2 894421                  		mov	[si+21h], ax	; [SI+SYS_FCB.RR]
  4738 00001EB5 885423                  		mov	[si+23h], dl	; [SI+SYS_FCB.RR+2]
  4739 00001EB8 837C0E40                		cmp	word [si+0Eh], 64 ;	[SI+SYS_FCB.RECSIZ]
  4740 00001EBC 7303                    		jnb	short TryReturn
  4741 00001EBE 887424                  		mov	[si+24h], dh	; [SI+SYS_FCB.RR+2+1]
  4742                                  
  4743                                  TryReturn:				; ...
  4744 00001EC1 F646EC04                		test	byte [bp-14h], 4 ; FCBOp,FCBREAD
  4745 00001EC5 750B                    		jnz	short FCBSave
  4746 00001EC7 1E                      		push	ds
  4747 00001EC8 E826EC                  		call	DATE16
  4748 00001ECB 1F                      		pop	ds
  4749 00001ECC 894414                  		mov	[si+14h], ax	; [SI+SYS_FCB.FDATE]
  4750 00001ECF 895416                  		mov	[si+16h], dx	; [SI+SYS_FCB.FTIME]
  4751                                  
  4752                                  FCBSave:				; ...
  4753 00001ED2 F646EC08                		test	byte [bp-14h], 8 ; FCBOp,BLOCK
  4754 00001ED6 7409                    		jz	short DoReturn
  4755 00001ED8 8B4EED                  		mov	cx, [bp-13h]	; cRecRes
  4756 00001EDB E8C7E5                  		call	Get_User_Stack
  4757 00001EDE 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
  4758                                  
  4759                                  DoReturn:				; ...
  4760 00001EE1 8A46FF                  		mov	al, [bp-1]	; FCBErr
  4761 00001EE4 89EC                    		mov	sp, bp
  4762 00001EE6 5D                      		pop	bp
  4763 00001EE7 C3                      		retn
  4764                                  
  4765                                  ; =============== S U B	R O U T	I N E =======================================
  4766                                  
  4767                                  _$FCB_OPEN:		; ...
  4768 00001EE8 B80200                  		mov	ax, 2		; SHARING_COMPAT+open_for_both
  4769 00001EEB B9[7C2C]                		mov	cx, DOS_OPEN
  4770                                  
  4771                                  DoAccess:				; ...
  4772 00001EEE 1E                      		push	ds
  4773 00001EEF 52                      		push	dx
  4774 00001EF0 51                      		push	cx
  4775 00001EF1 50                      		push	ax
  4776 00001EF2 BF[BE03]                		mov	di, OPENBUF
  4777 00001EF5 E80F4E                  		call	TransFCB
  4778 00001EF8 58                      		pop	ax
  4779 00001EF9 59                      		pop	cx
  4780 00001EFA 5A                      		pop	dx
  4781 00001EFB 1F                      		pop	ds
  4782 00001EFC 7303                    		jnb	short FindFCB
  4783                                  
  4784                                  FCBOpenErr:				; ...
  4785 00001EFE E932E7                  		jmp	FCB_RET_ER
  4786                                  ; ---------------------------------------------------------------------------
  4787                                  
  4788                                  FindFCB:				; ...
  4789 00001F01 E828FE                  		call	GetExtended
  4790 00001F04 50                      		push	ax
  4791 00001F05 B001                    		mov	al, 1
  4792 00001F07 E817FB                  		call	LRUFCB
  4793 00001F0A 58                      		pop	ax
  4794 00001F0B 722A                    		jb	short HardMessage
  4795 00001F0D 26C745020080            		mov	word [es:di+2], 8000h ; [es:di+SF_ENTRY.sf_mode],
  4796                                  					; sf_isFCB
  4797 00001F13 1E                      		push	ds
  4798 00001F14 56                      		push	si
  4799 00001F15 53                      		push	bx
  4800 00001F16 89CE                    		mov	si, cx
  4801 00001F18 16                      		push	ss
  4802 00001F19 1F                      		pop	ds
  4803 00001F1A FFD6                    		call	si
  4804 00001F1C 5B                      		pop	bx
  4805 00001F1D 5E                      		pop	si
  4806 00001F1E 1F                      		pop	ds
  4807 00001F1F 36C43E[9E05]            		les	di, [ss:THISSFT]
  4808 00001F24 7318                    		jnb	short FCBOK
  4809 00001F26 50                      		push	ax
  4810 00001F27 B052                    		mov	al, 'R'         ; 52h
  4811 00001F29 E8DEFC                  		call	BlastSFT
  4812 00001F2C 58                      		pop	ax
  4813 00001F2D 83F804                  		cmp	ax, 4		; error_too_many_open_files
  4814 00001F30 7405                    		jz	short HardMessage
  4815 00001F32 83F824                  		cmp	ax, 24h		; error_sharing_buffer_exceeded
  4816 00001F35 7505                    		jnz	short DeadFCB
  4817                                  
  4818                                  HardMessage:				; ...
  4819 00001F37 50                      		push	ax
  4820 00001F38 E895FD                  		call	FCBHardErr
  4821 00001F3B 58                      		pop	ax
  4822                                  
  4823                                  DeadFCB:				; ...
  4824 00001F3C EBC0                    		jmp	short FCBOpenErr
  4825                                  ; ---------------------------------------------------------------------------
  4826                                  
  4827                                  FCBOK:					; ...
  4828 00001F3E E869F3                  		call	IsSFTNet
  4829 00001F41 750F                    		jnz	short FCBOK2
  4830 00001F43 E80556                  		call	CheckShare
  4831 00001F46 750A                    		jnz	short FCBOK2
  4832 00001F48 36893E[5D10]            		mov	word [ss:LocalSFT],	di
  4833 00001F4D 368C06[5F10]            		mov	word [ss:LocalSFT+2], es
  4834                                  
  4835                                  FCBOK2:					; ...
  4836 00001F52 26FF05                  		inc	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
  4837 00001F55 E8F7F9                  		call	SaveFCBInfo
  4838 00001F58 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  4839                                  					; devid_device
  4840 00001F5D 7509                    		jnz	short FCBNoDrive
  4841 00001F5F 8A04                    		mov	al, [si]
  4842 00001F61 E8284D                  		call	GETTHISDRV
  4843 00001F64 FEC0                    		inc	al
  4844 00001F66 8804                    		mov	[si], al
  4845                                  
  4846                                  FCBNoDrive:				; ...
  4847 00001F68 C7440E8000              		mov	word [si+0Eh], 128 ; [SI+SYS_FCB.RECSIZ]
  4848 00001F6D 268B450D                		mov	ax, [es:di+0Dh]	; [ES:DI+SF_ENTRY.sf_time]
  4849 00001F71 894416                  		mov	[si+16h], ax	; [SI+SYS_FCB.FTIME]
  4850 00001F74 268B450F                		mov	ax, [es:di+0Fh]	; [ES:DI+SF_ENTRY.sf_date]
  4851 00001F78 894414                  		mov	[si+14h], ax	; [SI+SYS_FCB.FDATE]
  4852 00001F7B 268B4511                		mov	ax, [es:di+11h]	; [ES:DI+SF_ENTRY.sf_size]
  4853 00001F7F 894410                  		mov	[si+10h], ax	; [SI+SYS_FCB.FILSIZ]
  4854 00001F82 268B4513                		mov	ax, [es:di+13h]	; [ES:DI+SF_ENTRY.sf_size+2]
  4855 00001F86 894412                  		mov	[si+12h], ax	; [SI+SYS_FCB.FILSIZ+2]
  4856 00001F89 31C0                    		xor	ax, ax
  4857 00001F8B 89440C                  		mov	[si+0Ch], ax	; [SI+SYS_FCB.EXTENT]
  4858 00001F8E 36C43E[4000]            		les	di, [ss:SFTFCB]
  4859 00001F93 268A6504                		mov	ah, [es:di+4]	; [ES:DI+SFT.SFCount]
  4860                                  
  4861                                  OpenScan:				; ...
  4862 00001F97 3A4418                  		cmp	al, [si+18h]	; [SI+fcb_sfn]
  4863 00001F9A 7407                    		jz	short SkipCheck
  4864 00001F9C 50                      		push	ax
  4865 00001F9D E880FC                  		call	CheckFCB
  4866 00001FA0 58                      		pop	ax
  4867 00001FA1 7309                    		jnb	short OpenFound
  4868                                  
  4869                                  SkipCheck:				; ...
  4870 00001FA3 FEC0                    		inc	al
  4871 00001FA5 38E0                    		cmp	al, ah
  4872 00001FA7 75EE                    		jnz	short OpenScan
  4873                                  
  4874                                  OpenDone:				; ...
  4875 00001FA9 30C0                    		xor	al, al
  4876 00001FAB C3                      		retn
  4877                                  ; ---------------------------------------------------------------------------
  4878                                  
  4879                                  OpenFound:				; ...
  4880 00001FAC 884418                  		mov	[si+18h], al	; [SI+fcb_sfn]
  4881 00001FAF 26FF05                  		inc	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
  4882 00001FB2 36A1[1000]              		mov	ax, [ss:FCBLRU]
  4883 00001FB6 26894515                		mov	[es:di+15h], ax	; [ES:DI+sf_LRU]
  4884 00001FBA 16                      		push	ss
  4885 00001FBB 1F                      		pop	ds
  4886 00001FBC C43E[9E05]              		les	di, [THISSFT]
  4887 00001FC0 26FF0D                  		dec	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
  4888 00001FC3 E8BD55                  		call	ShareEnd
  4889 00001FC6 B043                    		mov	al, 'C'         ; 43h
  4890 00001FC8 E83FFC                  		call	BlastSFT
  4891 00001FCB EBDC                    		jmp	short OpenDone
  4892                                  
  4893                                  ; ---------------------------------------------------------------------------
  4894                                  
  4895                                  _$FCB_CREATE:				; ...
  4896 00001FCD B9[502B]                		mov	cx, DOS_CREATE
  4897 00001FD0 31C0                    		xor	ax, ax
  4898 00001FD2 E857FD                  		call	GetExtended
  4899 00001FD5 7403                    		jz	short DoAccessJ
  4900 00001FD7 8A44FF                  		mov	al, [si-1]
  4901                                  
  4902                                  DoAccessJ:				; ...
  4903 00001FDA E911FF                  		jmp	DoAccess
  4904                                  ; ---------------------------------------------------------------------------
  4905                                  
  4906                                  _$FCB_RANDOM_WRITE_BLOCK:		; ...
  4907 00001FDD B00A                    		mov	al, 0Ah		; RANDOM+BLOCK
  4908 00001FDF E965FD                  		jmp	FCBIO
  4909                                  ; ---------------------------------------------------------------------------
  4910                                  
  4911                                  _$FCB_RANDOM_READ_BLOCK:		; ...
  4912 00001FE2 B00E                    		mov	al, 0Eh		; RANDOM+FCBREAD+BLOCK
  4913 00001FE4 E960FD                  		jmp	FCBIO
  4914                                  ; ---------------------------------------------------------------------------
  4915                                  
  4916                                  _$FCB_SEQ_READ:				; ...
  4917 00001FE7 B004                    		mov	al, 4		; FCBREAD
  4918 00001FE9 E95BFD                  		jmp	FCBIO
  4919                                  ; ---------------------------------------------------------------------------
  4920                                  
  4921                                  _$FCB_SEQ_WRITE:			; ...
  4922 00001FEC B000                    		mov	al, 0
  4923 00001FEE E956FD                  		jmp	FCBIO
  4924                                  ; ---------------------------------------------------------------------------
  4925                                  
  4926                                  _$FCB_RANDOM_READ:			; ...
  4927 00001FF1 B006                    		mov	al, 6		; RANDOM+FCBREAD
  4928 00001FF3 E951FD                  		jmp	FCBIO
  4929                                  ; ---------------------------------------------------------------------------
  4930                                  
  4931                                  _$FCB_RANDOM_WRITE:			; ...
  4932 00001FF6 B002                    		mov	al, 2		; RANDOM
  4933 00001FF8 E94CFD                  		jmp	FCBIO
  4934                                  ; ---------------------------------------------------------------------------
  4935                                  
  4936                                  _$DIR_SEARCH_FIRST:			; ...
  4937 00001FFB 368916[A605]            		mov	word [ss:THISFCB], dx
  4938 00002000 368C1E[A805]            		mov	word [ss:THISFCB+2], ds
  4939 00002005 89D6                    		mov	si, dx
  4940 00002007 803CFF                  		cmp	byte [si], 0FFh
  4941 0000200A 7503                    		jnz	short NORMFCB4
  4942 0000200C 83C607                  		add	si, 7
  4943                                  
  4944                                  NORMFCB4:				; ...
  4945 0000200F FF34                    		push	word [si]
  4946 00002011 16                      		push	ss
  4947 00002012 07                      		pop	es
  4948 00002013 BF[BE03]                		mov	di, OPENBUF
  4949 00002016 E8EE4C                  		call	TransFCB
  4950 00002019 7304                    		jnb	short SearchIt
  4951 0000201B 5B                      		pop	bx
  4952                                  
  4953                                  dcf_errj:				; ...
  4954 0000201C E914E6                  		jmp	FCB_RET_ER
  4955                                  ; ---------------------------------------------------------------------------
  4956                                  
  4957                                  SearchIt:				; ...
  4958 0000201F 16                      		push	ss
  4959 00002020 1F                      		pop	ds
  4960 00002021 FF36[2C03]              		push	word [DMAADD]
  4961 00002025 FF36[2E03]              		push	word [DMAADD+2]
  4962 00002029 C706[2C03][BE04]        		mov	word [DMAADD], SEARCHBUF
  4963 0000202F 8C1E[2E03]              		mov	word [DMAADD+2], ds
  4964 00002033 E88B01                  		call	GET_FAST_SEARCH
  4965 00002036 8F06[2E03]              		pop	word [DMAADD+2]
  4966 0000203A 8F06[2C03]              		pop	word [DMAADD]
  4967 0000203E 7303                    		jnb	short SearchSet
  4968 00002040 5B                      		pop	bx
  4969 00002041 EBD9                    		jmp	short dcf_errj
  4970                                  ; ---------------------------------------------------------------------------
  4971                                  
  4972                                  SearchSet:				; ...
  4973 00002043 BE[BE04]                		mov	si, SEARCHBUF
  4974 00002046 C43E[A605]              		les	di, [THISFCB]
  4975 0000204A F606[6C05]FF            		test	byte [EXTFCB], 0FFh
  4976 0000204F 7403                    		jz	short NORMFCB1
  4977 00002051 83C707                  		add	di, 7
  4978                                  
  4979                                  NORMFCB1:				; ...
  4980 00002054 5B                      		pop	bx
  4981 00002055 08DB                    		or	bl, bl
  4982 00002057 7506                    		jnz	short SearchDrv
  4983 00002059 8A1E[3603]              		mov	bl, [CURDRV]
  4984 0000205D FEC3                    		inc	bl
  4985                                  
  4986                                  SearchDrv:				; ...
  4987 0000205F AC                      		lodsb
  4988 00002060 86C3                    		xchg	al, bl
  4989 00002062 47                      		inc	di
  4990 00002063 B90A00                  		mov	cx, 10		; 20/2
  4991 00002066 F3A5                    		rep movsw
  4992 00002068 86C3                    		xchg	al, bl
  4993 0000206A AA                      		stosb
  4994 0000206B C43E[2C03]              		les	di, [DMAADD]
  4995 0000206F F606[6C05]FF            		test	byte [EXTFCB], 0FFh
  4996 00002074 740E                    		jz	short NORMFCB2
  4997 00002076 B0FF                    		mov	al, 0FFh
  4998 00002078 AA                      		stosb
  4999 00002079 FEC0                    		inc	al
  5000 0000207B B90500                  		mov	cx, 5
  5001 0000207E F3AA                    		rep stosb
  5002 00002080 A0[6D05]                		mov	al, [SATTRIB]
  5003 00002083 AA                      		stosb
  5004                                  
  5005                                  NORMFCB2:				; ...
  5006 00002084 88D8                    		mov	al, bl
  5007 00002086 AA                      		stosb
  5008 00002087 B91000                  		mov	cx, 16
  5009 0000208A F3A5                    		rep movsw
  5010 0000208C E9A1E5                  		jmp	NO_OP		; FCB_RET_OK
  5011                                  ; ---------------------------------------------------------------------------
  5012                                  
  5013                                  _$DIR_SEARCH_NEXT:			; ...
  5014 0000208F 368916[A605]            		mov	word [ss:THISFCB], dx
  5015 00002094 368C1E[A805]            		mov	word [ss:THISFCB+2], ds
  5016 00002099 36C606[6D05]00          		mov	byte [ss:SATTRIB], 0
  5017 0000209F 36C606[6C05]00          		mov	byte [ss:EXTFCB], 0
  5018 000020A5 16                      		push	ss
  5019 000020A6 07                      		pop	es
  5020 000020A7 BF[BE04]                		mov	di, SEARCHBUF
  5021 000020AA 89D6                    		mov	si, dx
  5022 000020AC 803CFF                  		cmp	byte [si], 0FFh
  5023 000020AF 750D                    		jnz	short NORMFCB6
  5024 000020B1 83C606                  		add	si, 6
  5025 000020B4 AC                      		lodsb
  5026 000020B5 36A2[6D05]              		mov	[ss:SATTRIB], al
  5027 000020B9 36FE0E[6C05]            		dec	byte [ss:EXTFCB]
  5028                                  
  5029                                  NORMFCB6:				; ...
  5030 000020BE AC                      		lodsb
  5031 000020BF 50                      		push	ax
  5032 000020C0 8A4414                  		mov	al, [si+20]
  5033 000020C3 AA                      		stosb
  5034 000020C4 B90A00                  		mov	cx, 10		; 20/2
  5035 000020C7 F3A5                    		rep movsw
  5036 000020C9 16                      		push	ss
  5037 000020CA 1F                      		pop	ds
  5038 000020CB FF36[2C03]              		push	word [DMAADD]
  5039 000020CF FF36[2E03]              		push	word [DMAADD+2]
  5040 000020D3 C706[2C03][BE04]        		mov	word [DMAADD], SEARCHBUF
  5041 000020D9 8C1E[2E03]              		mov	word [DMAADD+2],	ds
  5042 000020DD E8630E                  		call	DOS_SEARCH_NEXT
  5043 000020E0 8F06[2E03]              		pop	word [DMAADD+2]
  5044 000020E4 8F06[2C03]              		pop	word [DMAADD]
  5045 000020E8 7203                    		jb	short SearchNoMore
  5046 000020EA E956FF                  		jmp	SearchSet
  5047                                  ; ---------------------------------------------------------------------------
  5048                                  
  5049                                  SearchNoMore:				; ...
  5050 000020ED C43E[A605]              		les	di, [THISFCB]
  5051 000020F1 F606[6C05]FF            		test	byte [EXTFCB], 0FFh
  5052 000020F6 7403                    		jz	short NORMFCB8
  5053 000020F8 83C707                  		add	di, 7
  5054                                  
  5055                                  NORMFCB8:				; ...
  5056 000020FB 5B                      		pop	bx
  5057 000020FC 26881D                  		mov	[es:di], bl
  5058 000020FF E931E5                  		jmp	FCB_RET_ER
  5059                                  ; ---------------------------------------------------------------------------
  5060                                  
  5061                                  _$FIND_FIRST:				; ...
  5062 00002102 89D6                    		mov	si, dx
  5063 00002104 36880E[6D05]            		mov	[ss:SATTRIB], cl
  5064 00002109 BF[BE03]                		mov	di, OPENBUF
  5065 0000210C E85E4C                  		call	TransPathSet
  5066 0000210F 7305                    		jnb	short Find_it
  5067                                  
  5068                                  FindError:
  5069 00002111 B003                    		mov	al, 3
  5070                                  
  5071                                  FF_errj:				; ...
  5072 00002113 E907E5                  		jmp	SYS_RET_ERR
  5073                                  ; ---------------------------------------------------------------------------
  5074                                  
  5075                                  Find_it:				; ...
  5076 00002116 16                      		push	ss
  5077 00002117 1F                      		pop	ds
  5078 00002118 FF36[2C03]              		push	word [DMAADD]
  5079 0000211C FF36[2E03]              		push	word [DMAADD+2]
  5080 00002120 C706[2C03][BE04]        		mov	word [DMAADD], SEARCHBUF
  5081 00002126 8C1E[2E03]              		mov	word [DMAADD+2],	ds
  5082 0000212A E89400                  		call	GET_FAST_SEARCH
  5083 0000212D 8F06[2E03]              		pop	word [DMAADD+2]
  5084 00002131 8F06[2C03]              		pop	word [DMAADD]
  5085 00002135 7302                    		jnb	short FindSet
  5086                                  
  5087                                  FFF_errj:				; ...
  5088 00002137 EBDA                    		jmp	short FF_errj
  5089                                  ; ---------------------------------------------------------------------------
  5090                                  
  5091                                  FindSet:				; ...
  5092 00002139 BE[BE04]                		mov	si, SEARCHBUF
  5093 0000213C C43E[2C03]              		les	di, [DMAADD]
  5094 00002140 B91500                  		mov	cx, 21
  5095 00002143 F3A4                    		rep movsb
  5096 00002145 56                      		push	si
  5097 00002146 8A440B                  		mov	al, [si+0Bh]	; [SI+dir_entry.dir_attr]
  5098 00002149 AA                      		stosb
  5099 0000214A 83C616                  		add	si, 16h		; dir_entry.dir_time
  5100 0000214D A5                      		movsw
  5101 0000214E A5                      		movsw
  5102 0000214F 46                      		inc	si
  5103 00002150 46                      		inc	si
  5104 00002151 A5                      		movsw
  5105 00002152 A5                      		movsw
  5106 00002153 5E                      		pop	si
  5107 00002154 E83500                  		call	PackName
  5108 00002157 E9BAE4                  		jmp	SYS_RETURN	; SYS_RET_OK
  5109                                  ; ---------------------------------------------------------------------------
  5110                                  
  5111                                  _$FIND_NEXT:				; ...
  5112 0000215A 16                      		push	ss
  5113 0000215B 07                      		pop	es
  5114 0000215C BF[BE04]                		mov	di, SEARCHBUF
  5115 0000215F 36C536[2C03]            		lds	si, [ss:DMAADD]
  5116 00002164 B91500                  		mov	cx, 21
  5117 00002167 F3A4                    		rep movsb
  5118 00002169 16                      		push	ss
  5119 0000216A 1F                      		pop	ds
  5120 0000216B FF36[2C03]              		push	word [DMAADD]
  5121 0000216F FF36[2E03]              		push	word [DMAADD+2]
  5122 00002173 C706[2C03][BE04]        		mov	word [DMAADD], SEARCHBUF
  5123 00002179 8C1E[2E03]              		mov	word [DMAADD+2],	ds
  5124 0000217D E8C30D                  		call	DOS_SEARCH_NEXT
  5125 00002180 8F06[2E03]              		pop	word [DMAADD+2]
  5126 00002184 8F06[2C03]              		pop	word [DMAADD]
  5127 00002188 73AF                    		jnb	short FindSet
  5128 0000218A EBAB                    		jmp	short FFF_errj
  5129                                  
  5130                                  ; =============== S U B	R O U T	I N E =======================================
  5131                                  
  5132                                  PackName:		; ...
  5133 0000218C B90800                  		mov	cx, 8
  5134 0000218F F3A4                    		rep movsb
  5135                                  
  5136                                  main_kill_tail:				; ...
  5137 00002191 26807DFF20              		cmp	byte [es:di-1], 20h	; ' '
  5138 00002196 7507                    		jnz	short find_check_dot
  5139 00002198 4F                      		dec	di
  5140 00002199 41                      		inc	cx
  5141 0000219A 83F908                  		cmp	cx, 8
  5142 0000219D 72F2                    		jb	short main_kill_tail
  5143                                  
  5144                                  find_check_dot:				; ...
  5145 0000219F 813C2020                		cmp	word [si], 2020h ; (" " << 8) | " "
  5146 000021A3 7506                    		jnz	short got_ext
  5147 000021A5 807C0220                		cmp	byte [si+2], 20h ; ' '
  5148 000021A9 7412                    		jz	short find_done
  5149                                  
  5150                                  got_ext:				; ...
  5151 000021AB B02E                    		mov	al, '.'         ; 2Eh
  5152 000021AD AA                      		stosb
  5153 000021AE B90300                  		mov	cx, 3
  5154 000021B1 F3A4                    		rep movsb
  5155                                  
  5156                                  ext_kill_tail:				; ...
  5157 000021B3 26807DFF20              		cmp	byte [es:di-1], 20h	; ' '
  5158 000021B8 7503                    		jnz	short find_done
  5159 000021BA 4F                      		dec	di
  5160 000021BB EBF6                    		jmp	short ext_kill_tail
  5161                                  ; ---------------------------------------------------------------------------
  5162                                  
  5163                                  find_done:				; ...
  5164 000021BD 31C0                    		xor	ax, ax
  5165 000021BF AA                      		stosb
  5166 000021C0 C3                      		retn
  5167                                  
  5168                                  ; =============== S U B	R O U T	I N E =======================================
  5169                                  
  5170                                  GET_FAST_SEARCH:
  5171 000021C1 36810E[1106]0004        		or	word [ss:DOS34_FLAG], 400h ; SEARCH_FASTOPEN
  5172 000021C8 E8870C                  		call	DOS_SEARCH_FIRST
  5173 000021CB C3                      		retn
  5174                                  
  5175                                  ; ---------------------------------------------------------------------------
  5176                                  
  5177                                  _$CURRENT_DIR:				; ...
  5178 000021CC E887F1                  		call	ECritDisk
  5179 000021CF 88D0                    		mov	al, dl
  5180 000021D1 E89B4A                  		call	GetVisDrv
  5181 000021D4 7310                    		jnb	short CurrentValidate
  5182                                  
  5183                                  CurdirErr:				; ...
  5184 000021D6 E89DF1                  		call	LCritDisk
  5185 000021D9 1E                      		push	ds
  5186 000021DA 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  5187 000021DF A0[1006]                		mov	al, [DrvErr]
  5188 000021E2 1F                      		pop	ds
  5189                                  
  5190                                  curdir_errj:				; ...
  5191 000021E3 E937E4                  		jmp	SYS_RET_ERR
  5192                                  ; ---------------------------------------------------------------------------
  5193                                  
  5194                                  CurrentValidate:			; ...
  5195 000021E6 1E                      		push	ds
  5196 000021E7 56                      		push	si
  5197 000021E8 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  5198 000021ED C536[A205]              		lds	si, [THISCDS]
  5199 000021F1 F744430080              		test	word [si+43h], 8000h ; [SI+curdir.flags],
  5200                                  					; curdir_isnet
  5201 000021F6 7500                    		jnz	short $+2
  5202                                  
  5203                                  DoCheck:				; ...
  5204 000021F8 1E                      		push	ds
  5205 000021F9 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
  5206 000021FE C606[4C03]00            		mov	byte [NoSetDir], 0
  5207 00002203 1F                      		pop	ds
  5208 00002204 BF[BE03]                		mov	di, OPENBUF
  5209 00002207 E8C121                  		call	ValidateCDS
  5210 0000220A 06                      		push	es
  5211 0000220B 57                      		push	di
  5212 0000220C 5E                      		pop	si
  5213 0000220D 1F                      		pop	ds
  5214 0000220E 5F                      		pop	di
  5215 0000220F 07                      		pop	es
  5216 00002210 72C4                    		jb	short CurdirErr
  5217 00002212 83C600                  		add	si, 0		; curdir.text
  5218 00002215 03744F                  		add	si, [si+4Fh]	; [SI+curdir.end]
  5219 00002218 803C5C                  		cmp	byte [si], '\' ; 5Ch
  5220 0000221B 7501                    		jnz	short CurrentCopy
  5221 0000221D 46                      		inc	si
  5222                                  
  5223                                  CurrentCopy:				; ...
  5224 0000221E 50                      		push	ax
  5225 0000221F AC                      		lodsb
  5226 00002220 08C0                    		or	al, al
  5227 00002222 7413                    		jz	short FOK
  5228 00002224 3C05                    		cmp	al, 5
  5229 00002226 740D                    		jz	short FCHANGE
  5230 00002228 EB01                    		jmp	short FFF
  5231                                  ; ---------------------------------------------------------------------------
  5232                                  
  5233                                  FCPYNEXT:				; ...
  5234 0000222A AC                      		lodsb
  5235                                  
  5236                                  FFF:					; ...
  5237 0000222B 3C5C                    		cmp	al, '\'
  5238 0000222D 7508                    		jnz	short FOK
  5239 0000222F AA                      		stosb
  5240 00002230 AC                      		lodsb
  5241 00002231 3C05                    		cmp	al, 5
  5242 00002233 7502                    		jnz	short FOK
  5243                                  
  5244                                  FCHANGE:				; ...
  5245 00002235 B0E5                    		mov	al, 0E5h
  5246                                  
  5247                                  FOK:					; ...
  5248 00002237 AA                      		stosb
  5249 00002238 08C0                    		or	al, al
  5250 0000223A 75EE                    		jnz	short FCPYNEXT
  5251 0000223C 58                      		pop	ax
  5252 0000223D 30C0                    		xor	al, al
  5253 0000223F E834F1                  		call	LCritDisk
  5254 00002242 E9CFE3                  		jmp	SYS_RETURN
  5255                                  ; ---------------------------------------------------------------------------
  5256                                  
  5257                                  _$RMDIR:				; ...
  5258 00002245 52                      		push	dx
  5259 00002246 1E                      		push	ds
  5260 00002247 89D6                    		mov	si, dx
  5261 00002249 BF[BE03]                		mov	di, OPENBUF
  5262 0000224C 57                      		push	di
  5263 0000224D E8254B                  		call	TransPathNoSet
  5264 00002250 5F                      		pop	di
  5265 00002251 7306                    		jnb	short rmlset
  5266 00002253 1F                      		pop	ds
  5267 00002254 5A                      		pop	dx
  5268 00002255 B003                    		mov	al, 3
  5269                                  
  5270                                  rmdir_errj:				; ...
  5271 00002257 EB8A                    		jmp	short curdir_errj
  5272                                  ; ---------------------------------------------------------------------------
  5273                                  
  5274                                  rmlset:					; ...
  5275 00002259 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
  5276 0000225F 7512                    		jnz	short rmerr
  5277 00002261 16                      		push	ss
  5278 00002262 07                      		pop	es
  5279 00002263 30C0                    		xor	al, al
  5280                                  
  5281                                  rmloop:					; ...
  5282 00002265 E87B4A                  		call	GetCDSFromDrv
  5283 00002268 720F                    		jb	short rmcont
  5284 0000226A E886EF                  		call	StrCmp
  5285 0000226D 7404                    		jz	short rmerr
  5286 0000226F FEC0                    		inc	al
  5287 00002271 EBF2                    		jmp	short rmloop
  5288                                  ; ---------------------------------------------------------------------------
  5289                                  
  5290                                  rmerr:					; ...
  5291 00002273 1F                      		pop	ds
  5292 00002274 5A                      		pop	dx
  5293 00002275 B010                    		mov	al, 10h		; error_current_directory
  5294                                  
  5295                                  chdir_errj:				; ...
  5296 00002277 EBDE                    		jmp	short rmdir_errj
  5297                                  ; ---------------------------------------------------------------------------
  5298                                  
  5299                                  rmcont:					; ...
  5300 00002279 1F                      		pop	ds
  5301 0000227A 5A                      		pop	dx
  5302 0000227B BE[3B33]                		mov	si, DOS_RMDIR
  5303                                  		;jmp	DoDirCall	; // NASM converts this to short jump 
  5304                                  		;nop
  5305                                  		;jmp	short DoDirCall
  5306 0000227E E9                      		db 0E9h			; // for locating _$CHDIR at 6051h 
  5307 0000227F 7F00                    		dw DoDirCall-($+2)
  5308                                  ; ---------------------------------------------------------------------------
  5309                                  
  5310                                  _$CHDIR:				; ...
  5311 00002281 BF[BE03]                		mov	di, OPENBUF
  5312 00002284 89D6                    		mov	si, dx
  5313 00002286 E8E04A                  		call	TransPath
  5314 00002289 7304                    		jnb	short ChDirCrack
  5315                                  
  5316                                  ChDirErrP:				; ...
  5317 0000228B B003                    		mov	al, 3		; error_path_not_found
  5318                                  
  5319                                  ChDirErr:				; ...
  5320 0000228D EBE8                    		jmp	short chdir_errj
  5321                                  ; ---------------------------------------------------------------------------
  5322                                  
  5323                                  ChDirCrack:				; ...
  5324 0000228F 803E[7A05]FF            		cmp	byte [CMETA], 0FFh ; -1
  5325 00002294 75F5                    		jnz	short ChDirErrP
  5326 00002296 C43E[A205]              		les	di, [THISCDS]
  5327 0000229A 83FFFF                  		cmp	di, 0FFFFh	; -1
  5328 0000229D 74EC                    		jz	short ChDirErrP
  5329 0000229F E85410                  		call	DOS_CHDIR
  5330 000022A2 72E9                    		jb	short ChDirErr
  5331 000022A4 C43E[A205]              		les	di, [THISCDS]
  5332 000022A8 26F745430020            		test	word [es:di+43h], 2000h ; [ES:DI+curdir.flags],
  5333                                  					; curdir_splice
  5334 000022AE 7425                    		jz	short GotCDS
  5335 000022B0 06                      		push	es
  5336 000022B1 57                      		push	di
  5337 000022B2 51                      		push	cx
  5338 000022B3 E8EFE1                  		call	Get_User_Stack
  5339 000022B6 8B7C06                  		mov	di, [si+6]	; [SI+user_env.user_DX]
  5340 000022B9 8E5C0E                  		mov	ds, word [si+0Eh] ;	[SI+user_env.user_DS]
  5341 000022BC BE[BE03]                		mov	si, OPENBUF
  5342 000022BF 87F7                    		xchg	si, di
  5343 000022C1 30C0                    		xor	al, al
  5344 000022C3 57                      		push	di
  5345 000022C4 E8AE4A                  		call	TransPathNoSet
  5346 000022C7 5E                      		pop	si
  5347 000022C8 C43E[A205]              		les	di, [THISCDS]
  5348 000022CC 26C74549FFFF            		mov	word [es:di+49h], 0FFFFh ; [ES:DI+curdir.ID]
  5349 000022D2 59                      		pop	cx
  5350 000022D3 5F                      		pop	di
  5351 000022D4 07                      		pop	es
  5352                                  
  5353                                  GotCDS:					; ...
  5354 000022D5 E85200                  		call	Check_PathLen
  5355 000022D8 77B1                    		ja	short ChDirErrP
  5356 000022DA 26F745430080            		test	word [es:di+43h], 8000h ; [ES:DI+curdir.flags],
  5357                                  					; curdir_isnet
  5358 000022E0 7513                    		jnz	short SkipRecency
  5359 000022E2 26F745430020            		test	word [es:di+43h], 2000h ; [ES:DI+curdir.flags],
  5360                                  					; curdir_splice
  5361 000022E8 7403                    		jz	short setdirclus
  5362 000022EA B9FFFF                  		mov	cx, 0FFFFh	; -1
  5363                                  
  5364                                  setdirclus:				; ...
  5365 000022ED 26894D49                		mov	[es:di+49h], cx	; [ES:DI+curdir.ID]
  5366 000022F1 C43E[A205]              		les	di, [THISCDS]
  5367                                  
  5368                                  SkipRecency:				; ...
  5369 000022F5 E82CEF                  		call	FStrCpy
  5370 000022F8 30C0                    		xor	al, al
  5371                                  
  5372                                  mkdir_ok:				; ...
  5373 000022FA E917E3                  		jmp	SYS_RETURN
  5374                                  ; ---------------------------------------------------------------------------
  5375                                  
  5376                                  _$MKDIR:				; ...
  5377 000022FD BE[F631]                		mov	si, DOS_MKDIR
  5378                                  
  5379                                  DoDirCall:				; ...
  5380 00002300 BF[BE03]                		mov	di, OPENBUF
  5381 00002303 56                      		push	si
  5382 00002304 89D6                    		mov	si, dx
  5383 00002306 E8604A                  		call	TransPath
  5384 00002309 5E                      		pop	si
  5385 0000230A 7305                    		jnb	short MkDirCrack
  5386                                  
  5387                                  MkErrP:					; ...
  5388 0000230C B003                    		mov	al, 3		; error_path_not_found
  5389                                  
  5390                                  MkErr:					; ...
  5391 0000230E E90CE3                  		jmp	SYS_RET_ERR
  5392                                  ; ---------------------------------------------------------------------------
  5393                                  
  5394                                  MkDirCrack:				; ...
  5395 00002311 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
  5396 00002317 75F3                    		jnz	short MkErrP
  5397 00002319 56                      		push	si
  5398 0000231A E80D00                  		call	Check_PathLen
  5399 0000231D 5E                      		pop	si
  5400 0000231E 7604                    		jbe	short pathok
  5401 00002320 B005                    		mov	al, 5		; error_access_denied
  5402 00002322 EBEA                    		jmp	short MkErr
  5403                                  ; ---------------------------------------------------------------------------
  5404                                  
  5405                                  pathok:					; ...
  5406 00002324 FFD6                    		call	si
  5407 00002326 72E6                    		jb	short MkErr
  5408 00002328 EBD0                    		jmp	short mkdir_ok
  5409                                  
  5410                                  ; =============== S U B	R O U T	I N E =======================================
  5411                                  
  5412                                  Check_PathLen:	; ...
  5413 0000232A 368B36[B205]            		mov	si, [ss:WFP_START]
  5414                                  
  5415                                  Check_PathLen2:				; ...
  5416 0000232F 16                      		push	ss
  5417 00002330 1F                      		pop	ds
  5418 00002331 51                      		push	cx
  5419 00002332 E806EF                  		call	DStrLen
  5420 00002335 83F943                  		cmp	cx, 67		; DIRSTRLEN
  5421 00002338 59                      		pop	cx
  5422 00002339 C3                      		retn
  5423                                  
  5424                                  ; ---------------------------------------------------------------------------
  5425 0000233A [7823]                  IOCTLJMPTABLE	dw ioctl_getset_data ; ...
  5426 0000233C [7823]                  		dw ioctl_getset_data
  5427 0000233E [C723]                  		dw ioctl_control_string
  5428 00002340 [C723]                  		dw ioctl_control_string
  5429 00002342 [2725]                  		dw ioctl_get_dev
  5430 00002344 [2725]                  		dw ioctl_get_dev
  5431 00002346 [E123]                  		dw ioctl_status
  5432 00002348 [E123]                  		dw ioctl_status
  5433 0000234A [8424]                  		dw ioctl_rem_media
  5434 0000234C [C224]                  		dw ioctl_drive_attr
  5435 0000234E [1625]                  		dw ioctl_handle_redir
  5436 00002350 [FF23]                  		dw Set_Retry_Parameters
  5437 00002352 [0D24]                  		dw GENERICIOCTLHANDLE
  5438 00002354 [2424]                  		dw GENERICIOCTL
  5439 00002356 [D425]                  		dw ioctl_drive_owner
  5440 00002358 [D425]                  		dw ioctl_drive_owner
  5441 0000235A [0D24]                  		dw GENERICIOCTLHANDLE
  5442 0000235C [2424]                  		dw GENERICIOCTL
  5443                                  
  5444                                  ; =============== S U B	R O U T	I N E =======================================
  5445                                  
  5446                                  _$IOCTL:
  5447                                  
  5448                                  ; FUNCTION CHUNK AT 628F SIZE 00000003 BYTES
  5449                                  ; FUNCTION CHUNK AT 62DF SIZE 00000002 BYTES
  5450                                  ; FUNCTION CHUNK AT 62E3 SIZE 00000003 BYTES
  5451                                  ; FUNCTION CHUNK AT 62F4 SIZE 00000003 BYTES
  5452                                  ; FUNCTION CHUNK AT 62FC SIZE 0000005E BYTES
  5453                                  
  5454 0000235E 8CDE                    		mov	si, ds
  5455 00002360 16                      		push	ss
  5456 00002361 1F                      		pop	ds
  5457 00002362 3C11                    		cmp	al, 11h
  5458 00002364 770F                    		ja	short ioctl_bad_funj2
  5459 00002366 50                      		push	ax
  5460 00002367 89C7                    		mov	di, ax
  5461 00002369 81E7FF00                		and	di, 0FFh
  5462 0000236D D1E7                    		shl	di, 1
  5463 0000236F 58                      		pop	ax
  5464 00002370 2EFFA5[3A23]            		jmp	[cs:IOCTLJMPTABLE+di]
  5465                                  ; ---------------------------------------------------------------------------
  5466                                  
  5467                                  ioctl_bad_funj2:			; ...
  5468 00002375 E90401                  		jmp	ioctl_bad_fun
  5469                                  ; ---------------------------------------------------------------------------
  5470                                  
  5471                                  ioctl_getset_data:			; ...
  5472 00002378 E8DF44                  		call	SFFromHandle
  5473 0000237B 7305                    		jnb	short ioctl_check_permissions
  5474                                  
  5475                                  ioctl_bad_handle:			; ...
  5476 0000237D B006                    		mov	al, 6		; error_invalid_handle
  5477                                  
  5478                                  ioctl_error:				; ...
  5479 0000237F E99BE2                  		jmp	SYS_RET_ERR
  5480                                  ; ---------------------------------------------------------------------------
  5481                                  
  5482                                  ioctl_check_permissions:		; ...
  5483 00002382 3C00                    		cmp	al, 0
  5484 00002384 268A4505                		mov	al, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  5485 00002388 741B                    		jz	short ioctl_read
  5486 0000238A 08F6                    		or	dh, dh
  5487 0000238C 7404                    		jz	short ioctl_check_device
  5488 0000238E B00D                    		mov	al, 0Dh		; error_invalid_data
  5489 00002390 EBED                    		jmp	short ioctl_error
  5490                                  ; ---------------------------------------------------------------------------
  5491                                  
  5492                                  ioctl_check_device:			; ...
  5493 00002392 A880                    		test	al, 80h		; devid_device
  5494 00002394 74DF                    		jz	short ioctl_bad_funj2
  5495 00002396 80CA80                  		or	dl, 80h		; devid_device
  5496 00002399 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  5497 0000239E 26885505                		mov	[es:di+5], dl	; [ES:DI+SF_ENTRY.sf_flags]
  5498                                  
  5499                                  ioctl_ok:				; ...
  5500 000023A2 E96FE2                  		jmp	SYS_RETURN	; SYS_RET_OK
  5501                                  ; ---------------------------------------------------------------------------
  5502                                  
  5503                                  ioctl_read:				; ...
  5504 000023A5 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2
  5505 000023AA 30E4                    		xor	ah, ah
  5506 000023AC A880                    		test	al, 80h		; devid_device
  5507 000023AE 740D                    		jz	short ioctl_no_high
  5508 000023B0 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  5509 000023B5 26C47D07                		les	di, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  5510 000023B9 268A6505                		mov	ah, [es:di+5]	; [ES:DI+SYSDEV.ATT+1]
  5511                                  
  5512                                  ioctl_no_high:				; ...
  5513 000023BD 89C2                    		mov	dx, ax
  5514 000023BF E8E3E0                  		call	Get_User_Stack
  5515 000023C2 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  5516                                  
  5517                                  ioctl_ok_j:				; ...
  5518 000023C5 EBDB                    		jmp	short ioctl_ok
  5519                                  ; ---------------------------------------------------------------------------
  5520                                  
  5521                                  ioctl_control_string:			; ...
  5522 000023C7 E89044                  		call	SFFromHandle
  5523 000023CA 72B1                    		jb	short ioctl_bad_handle
  5524 000023CC 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  5525                                  					; devid_device
  5526 000023D1 74A2                    		jz	short ioctl_bad_funj2
  5527 000023D3 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; [EXTERR_LOCUS],errLOC_SerDev
  5528 000023D8 26C47D07                		les	di, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  5529 000023DC 30DB                    		xor	bl, bl
  5530 000023DE E94B01                  		jmp	ioctl_do_string
  5531                                  ; ---------------------------------------------------------------------------
  5532                                  
  5533                                  ioctl_status:				; ...
  5534 000023E1 B401                    		mov	ah, 1
  5535 000023E3 2C06                    		sub	al, 6
  5536 000023E5 7402                    		jz	short ioctl_get_status
  5537 000023E7 B403                    		mov	ah, 3
  5538                                  
  5539                                  ioctl_get_status:			; ...
  5540 000023E9 50                      		push	ax
  5541 000023EA E8B213                  		call	GET_IO_SFT
  5542 000023ED 58                      		pop	ax
  5543 000023EE 7302                    		jnb	short DO_IOFUNC
  5544 000023F0 EB8B                    		jmp	short ioctl_bad_handle
  5545                                  ; ---------------------------------------------------------------------------
  5546                                  
  5547                                  DO_IOFUNC:				; ...
  5548 000023F2 E81322                  		call	IOFUNC
  5549 000023F5 88C4                    		mov	ah, al
  5550 000023F7 B0FF                    		mov	al, 0FFh
  5551 000023F9 7502                    		jnz	short ioctl_status_ret
  5552 000023FB FEC0                    		inc	al
  5553                                  
  5554                                  ioctl_status_ret:			; ...
  5555 000023FD EBC6                    		jmp	short ioctl_ok_j
  5556                                  ; ---------------------------------------------------------------------------
  5557                                  
  5558                                  Set_Retry_Parameters:			; ...
  5559 000023FF 890E[1C00]              		mov	[RetryLoop],	cx
  5560 00002403 09D2                    		or	dx, dx
  5561 00002405 7475                    		jz	short ioctl_bad_fun
  5562 00002407 8916[1A00]              		mov	[RetryCount], dx
  5563 0000240B EBF0                    		jmp	short ioctl_status_ret
  5564                                  ; ---------------------------------------------------------------------------
  5565                                  
  5566                                  GENERICIOCTLHANDLE:			; ...
  5567 0000240D E84A44                  		call	SFFromHandle
  5568 00002410 726F                    		jb	short ioctl_bad_handlej
  5569 00002412 26F6450680              		test	byte [es:di+6], 80h	; [ES:DI+SF_ENTRY.sf_flags+1],
  5570                                  					; (sf_isnet>>8)
  5571 00002417 7563                    		jnz	short ioctl_bad_fun
  5572 00002419 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  5573 0000241E 26C47D07                		les	di, [es:di+7]	; [es:di+SF_ENTRY.sf_devptr]
  5574 00002422 EB0F                    		jmp	short Do_GenIOCTL
  5575                                  ; ---------------------------------------------------------------------------
  5576                                  
  5577                                  GENERICIOCTL:				; ...
  5578 00002424 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  5579 00002429 80FD08                  		cmp	ch, 8		; IOC_DC
  5580 0000242C 754E                    		jnz	short ioctl_bad_fun
  5581 0000242E E88701                  		call	Check_If_Net
  5582 00002431 7549                    		jnz	short ioctl_bad_fun
  5583                                  
  5584                                  Do_GenIOCTL:				; ...
  5585 00002433 26F6450440              		test	byte [es:di+4], 40h ; [ES:DI+SYSDEV.ATT],
  5586                                  					; DEV320
  5587 00002438 7442                    		jz	short ioctl_bad_fun
  5588 0000243A C606[7E03]13            		mov	byte [IOCALL_REQFUNC], 13h ; GENIOCTL
  5589 0000243F 3C10                    		cmp	al, 10h		; IOCTL_QUERY_HANDLE
  5590 00002441 7C0C                    		jl	short SetIOCtlBlock
  5591 00002443 26F6450480              		test	byte [es:di+4], 80h ; [ES:DI+SYSDEV.ATT],IOQUERY
  5592 00002448 7432                    		jz	short ioctl_bad_fun
  5593 0000244A C606[7E03]19            		mov	byte [IOCALL_REQFUNC], 19h ; IOCTL_QUERY
  5594                                  
  5595                                  SetIOCtlBlock:				; ...
  5596 0000244F 06                      		push	es
  5597 00002450 57                      		push	di
  5598 00002451 C606[7C03]17            		mov	byte [IOCALL_REQLEN], 17h ; IOCTL_REQ.size
  5599 00002456 881E[7D03]              		mov	[IOCALL_REQUNIT], bl
  5600 0000245A 882E[8903]              		mov	[IOCTL_REQ_MAJORFUNCTION], ch ; [IOCALL+IOCTL_REQ.MAJORFUNCTION]
  5601 0000245E 880E[8A03]              		mov	[IOCTL_REQ_MINORFUNCTION], cl ; [IOCALL+IOCTL_REQ.MINORFUNCTION]
  5602 00002462 8936[8B03]              		mov	word [IOCTL_REQ_REG_SI], si ; [IOCALL+IOCTL_REQ.REG_SI]
  5603 00002466 893E[8D03]              		mov	word [IOCTL_REQ_REG_DI], di ; [IOCALL+IOCTL_REQ.REG_DI]
  5604 0000246A 8916[8F03]              		mov	[IOCTL_REQ_GENERICIOCTL_PACKET], dx ; [IOCALL+IOCTL_REQ.GENERICIOCTL_PACKET]
  5605 0000246E 8936[9103]              		mov	word [IOCTL_REQ_GENERICIOCTL_PACKET_2], si ; [IOCALL+IOCTL_REQ.GENERICIOCTL_PACKET+2]
  5606 00002472 BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL
  5607 00002475 16                      		push	ss
  5608 00002476 07                      		pop	es
  5609 00002477 5E                      		pop	si
  5610 00002478 1F                      		pop	ds
  5611 00002479 E9E900                  		jmp	ioctl_do_IO
  5612                                  ; ---------------------------------------------------------------------------
  5613                                  
  5614                                  ioctl_bad_fun:				; ...
  5615 0000247C B001                    		mov	al, 1		; error_invalid_function
  5616 0000247E E99CE1                  		jmp	SYS_RET_ERR
  5617                                  ; ---------------------------------------------------------------------------
  5618                                  
  5619                                  ioctl_bad_handlej:			; ...
  5620 00002481 E9F9FE                  		jmp	ioctl_bad_handle
  5621                                  
  5622                                  ; ---------------------------------------------------------------------------
  5623                                  
  5624                                  ioctl_rem_media:			; ...
  5625 00002484 E83101                  		call	Check_If_Net
  5626 00002487 75F3                    		jnz	short ioctl_bad_fun
  5627 00002489 26F6450508              		test	byte [es:di+5], 8 ;	[es:di+SYSDEV.ATT+1],
  5628                                  					; (DEVOPCL>>8)
  5629 0000248E 74EC                    		jz	short ioctl_bad_fun
  5630 00002490 36C606[7E03]0F          		mov	byte [ss:IOCALL_REQFUNC], 0Fh ; DEVRMD ; 15
  5631 00002496 B00D                    		mov	al, 0Dh		; REMHL	; 13
  5632 00002498 88DC                    		mov	ah, bl
  5633 0000249A 36A3[7C03]              		mov	word [ss:IOCALL_REQLEN], ax
  5634 0000249E 31C0                    		xor	ax, ax
  5635 000024A0 36A3[7F03]              		mov	word [ss:IOCALL_REQSTAT], ax
  5636 000024A4 06                      		push	es
  5637 000024A5 1F                      		pop	ds
  5638 000024A6 89FE                    		mov	si, di
  5639 000024A8 16                      		push	ss
  5640 000024A9 07                      		pop	es
  5641 000024AA BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL
  5642 000024AD 1E                      		push	ds
  5643 000024AE 56                      		push	si
  5644 000024AF E83023                  		call	DEVIOCALL2
  5645 000024B2 5E                      		pop	si
  5646 000024B3 1F                      		pop	ds
  5647 000024B4 36A1[7F03]              		mov	ax, word [ss:IOCALL_REQSTAT]
  5648 000024B8 250002                  		and	ax, 200h	; STBUI
  5649 000024BB B109                    		mov	cl, 9
  5650 000024BD D3E8                    		shr	ax, cl
  5651                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5652                                  
  5653                                  ioctl_da_ok_j:				; ...
  5654 000024BF E952E1                  		jmp	SYS_RETURN	; SYS_RET_OK
  5655                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5656                                  ; ---------------------------------------------------------------------------
  5657                                  
  5658                                  ioctl_drive_attr:			; ...
  5659 000024C2 88D8                    		mov	al, bl
  5660 000024C4 E8C547                  		call	GETTHISDRV
  5661 000024C7 7248                    		jb	short ioctl_drv_err
  5662 000024C9 E8BE00                  		call	Get_Driver_BL
  5663 000024CC 7243                    		jb	short ioctl_drv_err
  5664 000024CE 268B5504                		mov	dx, [es:di+4]	; [es:di+SYSDEV.ATT]
  5665 000024D2 88C3                    		mov	bl, al
  5666 000024D4 36C43E[A205]            		les	di, [ss:THISCDS]
  5667 000024D9 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  5668                                  					; (curdir_isnet>>8)
  5669 000024DE 7403                    		jz	short IOCTLShare
  5670 000024E0 BA0010                  		mov	dx, 1000h
  5671                                  
  5672                                  IOCTLShare:				; ...
  5673 000024E3 16                      		push	ss
  5674 000024E4 1F                      		pop	ds
  5675 000024E5 BE[BE03]                		mov	si, OPENBUF
  5676 000024E8 80C341                  		add	bl, 'A'         ; 41h
  5677 000024EB 881C                    		mov	[si], bl
  5678 000024ED C744013A00              		mov	word [si+1], 3Ah ; ':'
  5679 000024F2 B80003                  		mov	ax, 300h
  5680 000024F5 F8                      		clc
  5681 000024F6 CD2A                    		int	2Ah		; Microsoft Networks - CHECK DIRECT I/O
  5682                                  					; DS:SI	-> ASCIZ disk device name (may be full path or only drive
  5683                                  					; specifier--must include the colon)
  5684                                  					; Return: CF clear if absolute disk access allowed
  5685 000024F8 7304                    		jnb	short IOCTLLocal
  5686 000024FA 81CA0002                		or	dx, 200h
  5687                                  
  5688                                  IOCTLLocal:				; ...
  5689 000024FE 26F6454410              		test	byte [es:di+44h], 10h ; [ES:DI+curdir.flags+1],
  5690                                  					; (curdir_local>>8)
  5691 00002503 7404                    		jz	short ioctl_set_DX
  5692 00002505 81CA0080                		or	dx, 8000h
  5693                                  
  5694                                  ioctl_set_DX:				; ...
  5695 00002509 E899DF                  		call	Get_User_Stack
  5696 0000250C 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
  5697                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5698                                  
  5699                                  ioctl_gd_ok_j:				; ...
  5700 0000250F EBAE                    		jmp	short ioctl_da_ok_j
  5701                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5702                                  ; ---------------------------------------------------------------------------
  5703                                  
  5704                                  ioctl_drv_err:				; ...
  5705 00002511 B00F                    		mov	al, 0Fh		; error_invalid_drive
  5706                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5707                                  
  5708                                  ioctl_gd_err_j:				; ...
  5709 00002513 E907E1                  		jmp	SYS_RET_ERR
  5710                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5711                                  ; ---------------------------------------------------------------------------
  5712                                  
  5713                                  ioctl_handle_redir:			; ...
  5714 00002516 E84143                  		call	SFFromHandle
  5715 00002519 7303                    		jnb	short ioctl_got_sft
  5716 0000251B E95FFE                  		jmp	ioctl_bad_handle
  5717                                  ; ---------------------------------------------------------------------------
  5718                                  
  5719                                  ioctl_got_sft:				; ...
  5720 0000251E 268B5505                		mov	dx, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  5721 00002522 EBE5                    		jmp	short ioctl_set_DX
  5722                                  ; ---------------------------------------------------------------------------
  5723                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5724                                  
  5725                                  ioctl_bad_funj:				; ...
  5726 00002524 E955FF                  		jmp	ioctl_bad_fun
  5727                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5728                                  ; ---------------------------------------------------------------------------
  5729                                  
  5730                                  ioctl_get_dev:				; ...
  5731 00002527 E88E00                  		call	Check_If_Net
  5732 0000252A 75F8                    		jnz	short ioctl_bad_funj
  5733                                  ; START	OF FUNCTION CHUNK FOR _$IOCTL
  5734                                  
  5735                                  ioctl_do_string:			; ...
  5736 0000252C 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+SYSDEV.ATT+1],
  5737                                  					; (DEVIOCTL>>8)
  5738 00002531 74F1                    		jz	short ioctl_bad_funj
  5739 00002533 C606[7E03]03            		mov	byte [IOCALL_REQFUNC], 3 ; DEVRDIOCTL
  5740 00002538 A801                    		test	al, 1
  5741 0000253A 7405                    		jz	short ioctl_control_call
  5742 0000253C C606[7E03]0C            		mov	byte [IOCALL_REQFUNC], 12 ; [IOCALL_REQFUNC],
  5743                                  					; DEVWRIOCTL
  5744                                  
  5745                                  ioctl_control_call:			; ...
  5746 00002541 B016                    		mov	al, 22		; DRDWRHL
  5747 00002543 88DC                    		mov	ah, bl
  5748 00002545 A3[7C03]                		mov	word [IOCALL_REQLEN], ax
  5749 00002548 31C0                    		xor	ax, ax
  5750 0000254A A3[7F03]                		mov	word [IOCALL_REQSTAT], ax
  5751 0000254D A2[8903]                		mov	[IOCTL_REQ_MAJORFUNCTION], al ; [IOMED]
  5752 00002550 890E[8E03]              		mov	word [IOCTL_IOSCNT], cx ; [IOSCNT]
  5753 00002554 8916[8A03]              		mov	word [IOCTL_REQ_MINORFUNCTION], dx ; [IOXAD]
  5754 00002558 8936[8C03]              		mov	word [IOCTL_IOXAD_2], si	; [IOXAD+2]
  5755 0000255C 06                      		push	es
  5756 0000255D 1F                      		pop	ds
  5757 0000255E 89FE                    		mov	si, di
  5758 00002560 16                      		push	ss
  5759 00002561 07                      		pop	es
  5760 00002562 BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL
  5761                                  
  5762                                  ioctl_do_IO:				; ...
  5763 00002565 E87A22                  		call	DEVIOCALL2
  5764 00002568 36F606[8003]80          		test	byte [ss:IOCALL_REQSTAT+1], 80h ; [SS:IOCALL_REQSTAT+1],
  5765                                  					; (STERR>>8)
  5766 0000256E 7506                    		jnz	short ioctl_string_err
  5767 00002570 36A1[8E03]              		mov	ax, word [ss:IOCTL_IOSCNT] ; [SS:IOSCNT]
  5768 00002574 EB99                    		jmp	short ioctl_gd_ok_j
  5769                                  ; ---------------------------------------------------------------------------
  5770                                  
  5771                                  ioctl_string_err:			; ...
  5772 00002576 368B3E[7F03]            		mov	di, word [ss:IOCALL_REQSTAT]
  5773                                  
  5774                                  device_err:				;
  5775 0000257B 81E7FF00                		and	di, 0FFh	; STECODE
  5776 0000257F 89F8                    		mov	ax, di
  5777 00002581 E82331                  		call	SET_I24_EXTENDED_ERROR
  5778 00002584 36A1[2403]              		mov	ax, [ss:EXTERR]
  5779 00002588 EB89                    		jmp	short ioctl_gd_err_j
  5780                                  ; END OF FUNCTION CHUNK	FOR _$IOCTL
  5781                                  
  5782                                  ; =============== S U B	R O U T	I N E =======================================
  5783                                  
  5784                                  Get_Driver_BL:	; ...
  5785 0000258A 50                      		push	ax
  5786 0000258B 88D8                    		mov	al, bl
  5787 0000258D E8FC46                  		call	GETTHISDRV
  5788 00002590 7224                    		jb	short ioctl_bad_drv
  5789 00002592 30DB                    		xor	bl, bl
  5790 00002594 C606[2303]03            		mov	byte [EXTERR_LOCUS], 3 ; errLOC_Net
  5791 00002599 C43E[A205]              		les	di, [THISCDS]
  5792 0000259D 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  5793                                  					; (curdir_isnet>>8)
  5794 000025A2 26C47D45                		les	di, [es:di+45h]	; [ES:DI+curdir.devptr]
  5795 000025A6 750D                    		jnz	short got_dev_ptr
  5796 000025A8 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  5797 000025AD 268A5D01                		mov	bl, [es:di+1]	; [ES:DI+DPB.UNIT]
  5798 000025B1 26C47D13                		les	di, [es:di+13h]	; [ES:DI+DPB.DRIVER_ADDR]
  5799                                  
  5800                                  got_dev_ptr:				; ...
  5801 000025B5 F8                      		clc
  5802                                  
  5803                                  ioctl_bad_drv:				; ...
  5804 000025B6 58                      		pop	ax
  5805 000025B7 C3                      		retn
  5806                                  
  5807                                  ; ---------------------------------------------------------------------------
  5808                                  
  5809                                  Check_If_Net:				; ...
  5810 000025B8 E8CFFF                  		call	Get_Driver_BL
  5811 000025BB 720E                    		jb	short ioctl_drv_err_pop
  5812 000025BD 06                      		push	es
  5813 000025BE 57                      		push	di
  5814 000025BF C43E[A205]              		les	di, [THISCDS]
  5815 000025C3 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
  5816                                  					; (curdir_isnet>>8)
  5817 000025C8 5F                      		pop	di
  5818 000025C9 07                      		pop	es
  5819 000025CA C3                      		retn
  5820                                  ; ---------------------------------------------------------------------------
  5821                                  
  5822                                  ioctl_drv_err_pop:			; ...
  5823 000025CB 58                      		pop	ax
  5824 000025CC E942FF                  		jmp	ioctl_drv_err
  5825                                  ; ---------------------------------------------------------------------------
  5826                                  
  5827                                  ioctl_bad_funj3:			; ...
  5828 000025CF E9AAFE                  		jmp	ioctl_bad_fun
  5829                                  ; ---------------------------------------------------------------------------
  5830                                  
  5831                                  ioctl_string_errj:			; ...
  5832 000025D2 EBA2                    		jmp	short ioctl_string_err
  5833                                  ; ---------------------------------------------------------------------------
  5834                                  
  5835                                  ioctl_drive_owner:			; ...
  5836 000025D4 E8E1FF                  		call	Check_If_Net
  5837 000025D7 75F6                    		jnz	short ioctl_bad_funj3
  5838 000025D9 26F6450440              		test	byte [es:di+4], 40h ; [ES:DI+SYSDEV.ATT],
  5839                                  					; DEV320
  5840 000025DE 74EF                    		jz	short ioctl_bad_funj3
  5841 000025E0 C606[7E03]17            		mov	byte [IOCALL_REQFUNC], 23 ; DEVGETOWN
  5842 000025E5 3C0E                    		cmp	al, 0Eh
  5843 000025E7 7405                    		jz	short GetOwner
  5844                                  
  5845                                  SetOwner:				; DEVSETOWN
  5846 000025E9 C606[7E03]18            		mov	byte [IOCALL_REQFUNC], 24
  5847                                  
  5848                                  GetOwner:				; ...
  5849 000025EE B00D                    		mov	al, 13		; OWNHL
  5850 000025F0 88DC                    		mov	ah, bl
  5851 000025F2 A3[7C03]                		mov	word [IOCALL_REQLEN], ax
  5852 000025F5 31C0                    		xor	ax, ax
  5853 000025F7 A3[7F03]                		mov	word [IOCALL_REQSTAT], ax
  5854 000025FA 06                      		push	es
  5855 000025FB 1F                      		pop	ds
  5856 000025FC 89FE                    		mov	si, di
  5857 000025FE 16                      		push	ss
  5858 000025FF 07                      		pop	es
  5859 00002600 BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL
  5860 00002603 1E                      		push	ds
  5861 00002604 56                      		push	si
  5862 00002605 E8DA21                  		call	DEVIOCALL2
  5863 00002608 5E                      		pop	si
  5864 00002609 1F                      		pop	ds
  5865 0000260A 36F606[8003]80          		test	byte [ss:IOCALL_REQSTAT+1], 80h ; (STERR>>8)
  5866 00002610 75C0                    		jnz	short ioctl_string_errj
  5867 00002612 36A0[7D03]              		mov	al, [ss:IOCALL_REQUNIT]
  5868 00002616 E9FBDF                  		jmp	SYS_RETURN	; SYS_RET_OK
  5869                                  
  5870                                  ; =============== S U B	R O U T	I N E =======================================
  5871                                  
  5872                                  DOS_DELETE:		; ...
  5873 00002619 E875EC                  		call	TestNet
  5874 0000261C 7306                    		jnb	short LOCAL_DELETE
  5875 0000261E B81311                  		mov	ax, 1113h
  5876 00002621 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - DELETE REMOTE FILE
  5877                                  					; SS = DS = DOS	CS, SDA	first filename pointer -> fully-qualified filename in DOS CS
  5878                                  					; SDA CDS pointer -> current directory structure for drive with	file
  5879                                  					; Return: CF set on error
  5880 00002623 C3                      		retn
  5881                                  ; ---------------------------------------------------------------------------
  5882                                  
  5883                                  LOCAL_DELETE:				; ...
  5884 00002624 C606[6F05]00            		mov	byte [FOUNDDEL], 0
  5885 00002629 E82AED                  		call	ECritDisk
  5886 0000262C C706[7E05]00E5          		mov	word [CREATING], 0E500h ; DIRFREE*256+0
  5887 00002632 8B36[B205]              		mov	si, [WFP_START]
  5888                                  
  5889                                  SKPNUL:					; ...
  5890 00002636 AC                      		lodsb
  5891 00002637 08C0                    		or	al, al
  5892 00002639 75FB                    		jnz	short SKPNUL
  5893 0000263B 83EE04                  		sub	si, 4
  5894 0000263E 813C2A2E                		cmp	word [si], 2E2Ah ; "*."
  5895 00002642 7506                    		jnz	short TEST_QUEST
  5896 00002644 807C022A                		cmp	byte [si+2], '*'
  5897 00002648 741F                    		jz	short CHECK_ATTS
  5898                                  
  5899                                  TEST_QUEST:				; ...
  5900 0000264A 83EE09                  		sub	si, 9
  5901 0000264D 87FE                    		xchg	di, si
  5902 0000264F 16                      		push	ss
  5903 00002650 07                      		pop	es
  5904 00002651 B83F3F                  		mov	ax, '??'        ; 3F3Fh
  5905 00002654 B90400                  		mov	cx, 4
  5906 00002657 F3AF                    		repe scasw
  5907 00002659 751C                    		jnz	short NOT_ALL
  5908 0000265B 87FE                    		xchg	di, si
  5909 0000265D AD                      		lodsw
  5910 0000265E 3D2E3F                  		cmp	ax, 3F2Eh	; ".?"
  5911 00002661 7514                    		jnz	short NOT_ALL
  5912 00002663 AD                      		lodsw
  5913 00002664 3D3F3F                  		cmp	ax, '??'
  5914 00002667 750E                    		jnz	short NOT_ALL
  5915                                  
  5916                                  CHECK_ATTS:				; ...
  5917 00002669 A0[6D05]                		mov	al, [SATTRIB]
  5918 0000266C 241F                    		and	al, 1Fh		; attr_hidden+attr_system+attr_directory
  5919                                  					; +attr_volume_id+attr_read_only
  5920 0000266E 3C1F                    		cmp	al, 1Fh
  5921 00002670 7505                    		jnz	short NOT_ALL
  5922 00002672 C606[7F05]00            		mov	byte [DELALL], 0
  5923                                  
  5924                                  NOT_ALL:				; ...
  5925 00002677 C606[4C03]01            		mov	byte [NoSetDir], 1
  5926 0000267C E8F819                  		call	GetPathNoSet
  5927 0000267F 7313                    		jnb	short Del_found
  5928 00002681 750C                    		jnz	short _bad_path
  5929 00002683 08C9                    		or	cl, cl
  5930 00002685 7408                    		jz	short _bad_path
  5931                                  
  5932                                  No_file:				; ...
  5933 00002687 B80200                  		mov	ax, 2		; error_file_not_found
  5934                                  
  5935                                  ErrorReturn:				; ...
  5936 0000268A F9                      		stc
  5937 0000268B E8E8EC                  		call	LCritDisk
  5938 0000268E C3                      		retn
  5939                                  ; ---------------------------------------------------------------------------
  5940                                  
  5941                                  _bad_path:				; ...
  5942 0000268F B80300                  		mov	ax, 3		; error_path_not_found
  5943 00002692 EBF6                    		jmp	short ErrorReturn
  5944                                  ; ---------------------------------------------------------------------------
  5945                                  
  5946                                  Del_found:				; ...
  5947 00002694 750C                    		jnz	short NOT_DIR
  5948 00002696 803E[7F05]00            		cmp	byte [DELALL], 0
  5949 0000269B 7405                    		jz	short NOT_DIR
  5950                                  
  5951                                  Del_access_err:				; ...
  5952 0000269D B80500                  		mov	ax, 5		; error_access_denied
  5953 000026A0 EBE8                    		jmp	short ErrorReturn
  5954                                  ; ---------------------------------------------------------------------------
  5955                                  
  5956                                  NOT_DIR:				; ...
  5957 000026A2 08E4                    		or	ah, ah
  5958 000026A4 78F7                    		js	short Del_access_err
  5959                                  
  5960                                  DELFILE:				; ...
  5961 000026A6 800E[6F05]01            		or	byte [FOUNDDEL], 1 ; FILEFOUND
  5962 000026AB 1E                      		push	ds
  5963 000026AC 8A26[7F05]              		mov	ah, [DELALL]
  5964 000026B0 C53E[E205]              		lds	di, [CURBUF]
  5965 000026B4 36F606[6B05]01          		test	byte [ss:ATTRIB], 1 ; attr_read_only
  5966 000026BA 7509                    		jnz	short DoDelete
  5967 000026BC F6470B01                		test	byte [bx+0Bh], 1 ; [BX+dir_entry.dir_attr],
  5968                                  					; attr_read_only
  5969 000026C0 7403                    		jz	short DoDelete
  5970 000026C2 1F                      		pop	ds
  5971 000026C3 EB32                    		jmp	short DELNXT
  5972                                  ; ---------------------------------------------------------------------------
  5973                                  
  5974                                  DoDelete:				; ...
  5975 000026C5 E88500                  		call	REN_DEL_Check
  5976 000026C8 7303                    		jnb	short DEL_SHARE_OK
  5977 000026CA 1F                      		pop	ds
  5978 000026CB EB2A                    		jmp	short DELNXT
  5979                                  ; ---------------------------------------------------------------------------
  5980                                  
  5981                                  DEL_SHARE_OK:				; ...
  5982 000026CD F6450540                		test	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
  5983 000026D1 7507                    		jnz	short yesdirty
  5984 000026D3 E84036                  		call	INC_DIRTY_COUNT
  5985 000026D6 804D0540                		or	byte [di+5], 40h
  5986                                  
  5987                                  yesdirty:				; ...
  5988 000026DA 8827                    		mov	[bx], ah	; [BX+dir_entry.dir_name]
  5989 000026DC 8B1C                    		mov	bx, [si]
  5990 000026DE 1F                      		pop	ds
  5991 000026DF 800E[6F05]10            		or	byte [FOUNDDEL], 10h ; FILEDELETED
  5992 000026E4 83FB02                  		cmp	bx, 2
  5993 000026E7 720E                    		jb	short DELNXT
  5994 000026E9 263B5E0D                		cmp	bx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
  5995 000026ED 7708                    		ja	short DELNXT
  5996 000026EF E87729                  		call	RELEASE
  5997 000026F2 7253                    		jb	short No_fileJ
  5998 000026F4 E8C400                  		call	FastOpen_Delete
  5999                                  
  6000                                  DELNXT:					; ...
  6001 000026F7 C42E[8A05]              		les	bp, [THISDPB]
  6002 000026FB E8DC18                  		call	GETENTRY
  6003 000026FE 7247                    		jb	short No_fileJ
  6004 00002700 E80E18                  		call	NEXTENT
  6005 00002703 73A1                    		jnb	short DELFILE
  6006 00002705 C42E[8A05]              		les	bp, [THISDPB]
  6007 00002709 268A4600                		mov	al, [es:bp+0]
  6008 0000270D E8FA34                  		call	FLUSHBUF
  6009 00002710 7235                    		jb	short No_fileJ
  6010 00002712 F606[6F05]10            		test	byte [FOUNDDEL], 10h ; FILEDELETED
  6011 00002717 7427                    		jz	short DelError
  6012 00002719 F606[6B05]08            		test	byte [ATTRIB], 8 ; attr_volume_id
  6013 0000271E 741C                    		jz	short No_Set_Flag
  6014 00002720 50                      		push	ax
  6015 00002721 06                      		push	es
  6016 00002722 57                      		push	di
  6017 00002723 C43E[A205]              		les	di, [THISCDS]
  6018 00002727 268A25                  		mov	ah, [es:di]
  6019 0000272A 80EC41                  		sub	ah, 'A'
  6020 0000272D 8826[A10A]              		mov	[VOLCHNG_FLAG], ah
  6021 00002731 30FF                    		xor	bh, bh
  6022 00002733 E8EE04                  		call	Set_Media_ID
  6023 00002736 E86031                  		call	FATREAD_CDS
  6024 00002739 5F                      		pop	di
  6025 0000273A 07                      		pop	es
  6026 0000273B 58                      		pop	ax
  6027                                  
  6028                                  No_Set_Flag:				; ...
  6029 0000273C E837EC                  		call	LCritDisk
  6030 0000273F C3                      		retn
  6031                                  ; ---------------------------------------------------------------------------
  6032                                  
  6033                                  DelError:				; ...
  6034 00002740 F606[6F05]01            		test	byte [FOUNDDEL], 1 ; FILEFOUND
  6035 00002745 7503                    		jnz	short Del_access_errJ
  6036                                  
  6037                                  No_fileJ:				; ...
  6038 00002747 E93DFF                  		jmp	No_file
  6039                                  ; ---------------------------------------------------------------------------
  6040                                  
  6041                                  Del_access_errJ:			; ...
  6042 0000274A E950FF                  		jmp	Del_access_err
  6043                                  
  6044                                  ; =============== S U B	R O U T	I N E =======================================
  6045                                  
  6046                                  REN_DEL_Check:	; ...
  6047 0000274D 1E                      		push	ds
  6048 0000274E 57                      		push	di
  6049 0000274F 50                      		push	ax
  6050 00002750 53                      		push	bx
  6051 00002751 56                      		push	si
  6052 00002752 16                      		push	ss
  6053 00002753 07                      		pop	es
  6054 00002754 368B3E[B205]            		mov	di, [ss:WFP_START]
  6055 00002759 89DE                    		mov	si, bx
  6056 0000275B 368E1E[E405]            		mov	ds, word [ss:CURBUF+2]
  6057 00002760 89FB                    		mov	bx, di
  6058 00002762 83C302                  		add	bx, 2
  6059 00002765 E8C5EA                  		call	StrLen
  6060 00002768 49                      		dec	cx
  6061 00002769 01CF                    		add	di, cx
  6062 0000276B E8E047                  		call	SkipBack
  6063 0000276E 47                      		inc	di
  6064 0000276F 36893E[0106]            		mov	[ss:SAVE_BX], di
  6065 00002774 E815FA                  		call	PackName
  6066 00002777 5E                      		pop	si
  6067 00002778 5B                      		pop	bx
  6068 00002779 53                      		push	bx
  6069 0000277A 56                      		push	si
  6070 0000277B 16                      		push	ss
  6071 0000277C 1F                      		pop	ds
  6072                                  		;call	dword [ShCloseFile] ; Call far [JShare+(13*4)]
  6073 0000277D FF1E[C400]              		call	far [JShare+(13*4)]
  6074 00002781 8C1E[A005]              		mov	word [THISSFT+2], ds
  6075 00002785 C706[9E05]6507          		mov	word [THISSFT], 765h ; AUXSTACK-SF_ENTRY.size
  6076 0000278B 30E4                    		xor	ah, ah
  6077 0000278D E84925                  		call	DOOPEN
  6078 00002790 C43E[9E05]              		les	di, [THISSFT]
  6079 00002794 26C745021000            		mov	word [es:di+2], 10h	; [ES:DI+SF_ENTRY.sf_mode],
  6080                                  					; SHARING_DENY_BOTH
  6081 0000279A 26C7050100              		mov	word [es:di], 1 ; [ES:DI+SF_ENTRY.sf_ref_count]
  6082 0000279F E8E64D                  		call	ShareEnter
  6083 000027A2 720D                    		jb	short CheckDone
  6084 000027A4 C43E[9E05]              		les	di, [THISSFT]
  6085 000027A8 26C7050000              		mov	word [es:di], 0
  6086 000027AD E8D34D                  		call	ShareEnd
  6087 000027B0 F8                      		clc
  6088                                  
  6089                                  CheckDone:				; ...
  6090 000027B1 C42E[8A05]              		les	bp, [THISDPB]
  6091 000027B5 5E                      		pop	si
  6092 000027B6 5B                      		pop	bx
  6093 000027B7 58                      		pop	ax
  6094 000027B8 5F                      		pop	di
  6095 000027B9 1F                      		pop	ds
  6096 000027BA C3                      		retn
  6097                                  
  6098                                  ; ---------------------------------------------------------------------------
  6099                                  
  6100                                  FastOpen_Delete:			; ...
  6101 000027BB 9C                      		pushf
  6102 000027BC 56                      		push	si
  6103 000027BD 53                      		push	bx
  6104 000027BE 50                      		push	ax
  6105 000027BF 368B36[B205]            		mov	si, [ss:WFP_START]
  6106 000027C4 B003                    		mov	al, 3		; FONC_delete
  6107                                  ; START	OF FUNCTION CHUNK FOR FastOpen_Update
  6108                                  
  6109                                  fastinvoke:				; ...
  6110 000027C6 BB[320D]                		mov	bx, FastOpenTable_2 ; FastTable+2
  6111                                  		;call	dword [bx]	; CALL far [BX]
  6112 000027C9 FF1F                    		call	far [bx]
  6113 000027CB 58                      		pop	ax
  6114 000027CC 5B                      		pop	bx
  6115 000027CD 5E                      		pop	si
  6116 000027CE 9D                      		popf
  6117 000027CF C3                      		retn
  6118                                  ; END OF FUNCTION CHUNK	FOR FastOpen_Update
  6119                                  
  6120                                  ; =============== S U B	R O U T	I N E =======================================
  6121                                  
  6122                                  FastOpen_Rename:
  6123 000027D0 9C                      		pushf
  6124 000027D1 56                      		push	si
  6125 000027D2 57                      		push	di
  6126 000027D3 53                      		push	bx
  6127 000027D4 50                      		push	ax
  6128 000027D5 368B36[B405]            		mov	si, [ss:REN_WFP]
  6129 000027DA BF[4B05]                		mov	di, NAME1
  6130 000027DD B006                    		mov	al, 6		; FONC_Rename
  6131 000027DF BB[320D]                		mov	bx, FastOpenTable_2
  6132                                  		;call	dword [bx]	; CALL far [BX]
  6133 000027E2 FF1F                    		call	far [bx]
  6134 000027E4 58                      		pop	ax
  6135 000027E5 5B                      		pop	bx
  6136 000027E6 5F                      		pop	di
  6137 000027E7 5E                      		pop	si
  6138 000027E8 9D                      		popf
  6139 000027E9 C3                      		retn
  6140                                  
  6141                                  ; =============== S U B	R O U T	I N E =======================================
  6142                                  
  6143                                  FastOpen_Update:
  6144                                  
  6145                                  ; FUNCTION CHUNK AT 6596 SIZE 0000000A BYTES
  6146                                  
  6147 000027EA 9C                      		pushf
  6148 000027EB 56                      		push	si
  6149 000027EC 53                      		push	bx
  6150 000027ED 50                      		push	ax
  6151 000027EE B004                    		mov	al, 4		; FONC_update
  6152 000027F0 EBD4                    		jmp	short fastinvoke
  6153                                  
  6154                                  ; =============== S U B	R O U T	I N E =======================================
  6155                                  
  6156                                  Fast_Dispatch:	; ...
  6157 000027F2 BE[320D]                		mov	si, FastOpenTable_2 ; FastTable+2
  6158                                  		;call	dword [ss:si] ; CALL far [SS:SI]
  6159 000027F5 36FF1C                  		call	far [ss:si]
  6160 000027F8 C3                      		retn
  6161                                  
  6162                                  ; =============== S U B	R O U T	I N E =======================================
  6163                                  
  6164                                  DOS_RENAME:		; ...
  6165 000027F9 E895EA                  		call	TestNet
  6166 000027FC 7306                    		jnb	short LOCAL_RENAME
  6167 000027FE B81111                  		mov	ax, 1111h
  6168 00002801 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - RENAME REMOTE FILE
  6169                                  					; SS = DS = DOS	CS, SDA	first filename pointer = offset	of fully-qualified old name
  6170                                  					; SDA CDS pointer -> current directory
  6171                                  					; Return: CF set on error
  6172 00002803 C3                      		retn
  6173                                  ; ---------------------------------------------------------------------------
  6174                                  
  6175                                  LOCAL_RENAME:				; ...
  6176 00002804 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  6177 00002809 8B36[B205]              		mov	si, [WFP_START]
  6178 0000280D 8B3E[B405]              		mov	di, [REN_WFP]
  6179 00002811 8A04                    		mov	al, [si]
  6180 00002813 8A25                    		mov	ah, [di]
  6181 00002815 0D2020                  		or	ax, 2020h	; Lower	case
  6182 00002818 38E0                    		cmp	al, ah
  6183 0000281A 7405                    		jz	short SAMEDRV
  6184 0000281C B81100                  		mov	ax, 11h		; error_not_same_device
  6185 0000281F F9                      		stc
  6186 00002820 C3                      		retn
  6187                                  ; ---------------------------------------------------------------------------
  6188                                  
  6189                                  SAMEDRV:				; ...
  6190 00002821 FF36[2E03]              		push	word [DMAADD+2]
  6191 00002825 FF36[2C03]              		push	word [DMAADD]
  6192 00002829 8C1E[2E03]              		mov	word [DMAADD+2], ds
  6193 0000282D C706[2C03][2006]        		mov	word [DMAADD], RENAMEDMA
  6194 00002833 C606[7005]00            		mov	byte [FOUND_DEV], 0
  6195 00002838 E81BEB                  		call	ECritDisk
  6196 0000283B E81406                  		call	DOS_SEARCH_FIRST
  6197 0000283E 7315                    		jnb	short Check_Dev
  6198 00002840 83F812                  		cmp	ax, 12h		; error_no_more_files
  6199 00002843 7503                    		jnz	short GOTERR
  6200 00002845 B80200                  		mov	ax, 2		; error_file_not_found
  6201                                  
  6202                                  GOTERR:					; ...
  6203 00002848 F9                      		stc
  6204                                  
  6205                                  RENAME_POP:				; ...
  6206 00002849 8F06[2C03]              		pop	word [DMAADD]
  6207 0000284D 8F06[2E03]              		pop	word [DMAADD+2]
  6208 00002851 E822EB                  		call	LCritDisk
  6209 00002854 C3                      		retn
  6210                                  ; ---------------------------------------------------------------------------
  6211                                  
  6212                                  Check_Dev:				; ...
  6213 00002855 B80500                  		mov	ax, 5		; error_access_denied
  6214 00002858 1E                      		push	ds
  6215 00002859 C536[2C03]              		lds	si, [DMAADD]
  6216 0000285D 83C615                  		add	si, 21		; find_buf.attr
  6217 00002860 F6440B10                		test	byte [si+11], 10h ; [SI+dir_entry.dir_attr],
  6218                                  					; attr_directory
  6219 00002864 7407                    		jz	short notdir
  6220 00002866 8B36[B405]              		mov	si, [REN_WFP]
  6221 0000286A E8C2FA                  		call	Check_PathLen2
  6222                                  
  6223                                  notdir:					; ...
  6224 0000286D 1F                      		pop	ds
  6225 0000286E 77D8                    		ja	short GOTERR
  6226 00002870 803E[7005]00            		cmp	byte [FOUND_DEV], 0
  6227 00002875 75D1                    		jnz	short GOTERR
  6228 00002877 89DE                    		mov	si, bx
  6229 00002879 83C61A                  		add	si, 26		; dir_entry.dir_first
  6230 0000287C E8CEFE                  		call	REN_DEL_Check
  6231 0000287F 7305                    		jnb	short REN_OK1
  6232 00002881 B82000                  		mov	ax, 20h		; error_sharing_violation
  6233 00002884 EBC3                    		jmp	short RENAME_POP
  6234                                  ; ---------------------------------------------------------------------------
  6235                                  
  6236                                  REN_OK1:				; ...
  6237 00002886 56                      		push	si
  6238 00002887 C536[2C03]              		lds	si, [DMAADD]
  6239 0000288B 83C615                  		add	si, 21
  6240 0000288E F6440B10                		test	byte [si+11], 10h ;	[SI+dir_entry.dir_attr],
  6241                                  					; attr_directory
  6242 00002892 7403                    		jz	short NOT_DIR1
  6243 00002894 5E                      		pop	si
  6244 00002895 EB04                    		jmp	short SWAP_SOURCE
  6245                                  ; ---------------------------------------------------------------------------
  6246                                  
  6247                                  NOT_DIR1:				; ...
  6248 00002897 5E                      		pop	si
  6249 00002898 E820FF                  		call	FastOpen_Delete
  6250                                  
  6251                                  SWAP_SOURCE:				; ...
  6252 0000289B A1[B205]                		mov	ax, [WFP_START]
  6253 0000289E 8B36[B405]              		mov	si, [REN_WFP]
  6254 000028A2 8936[B205]              		mov	[WFP_START], si
  6255 000028A6 A3[B405]                		mov	[REN_WFP], ax
  6256 000028A9 C706[B605]FFFF          		mov	word [CURR_DIR_END], 0FFFFh ; -1
  6257 000028AF C706[7E05]FFE5          		mov	word [CREATING], 0E5FFh ; DIRFREE*256+0FFh
  6258 000028B5 E8BF17                  		call	GetPathNoSet
  6259 000028B8 7223                    		jb	short NODEST
  6260 000028BA 08E4                    		or	ah, ah
  6261 000028BC 7933                    		jns	short SAVEDEST
  6262                                  
  6263                                  BAD_ACC:				; ...
  6264 000028BE B80500                  		mov	ax, 5		; error_access_denied
  6265 000028C1 F9                      		stc
  6266                                  
  6267                                  RENAME_CLEAN:				; ...
  6268 000028C2 9C                      		pushf
  6269 000028C3 50                      		push	ax
  6270 000028C4 A0[7605]                		mov	al, [THISDRV]
  6271 000028C7 E84033                  		call	FLUSHBUF
  6272 000028CA 58                      		pop	ax
  6273 000028CB 803E[4A03]00            		cmp	byte [FAILERR], 0
  6274 000028D0 7504                    		jnz	short BAD_ERR
  6275 000028D2 9D                      		popf
  6276 000028D3 E973FF                  		jmp	RENAME_POP
  6277                                  ; ---------------------------------------------------------------------------
  6278                                  
  6279                                  BAD_ERR:				; ...
  6280 000028D6 58                      		pop	ax
  6281                                  
  6282                                  _BAD_PATH:				; error_path_not_found
  6283 000028D7 B80300                  		mov	ax, 3
  6284 000028DA E96BFF                  		jmp	GOTERR
  6285                                  ; ---------------------------------------------------------------------------
  6286                                  
  6287                                  NODEST:					; ...
  6288 000028DD 750B                    		jnz	short BAD_PATH
  6289 000028DF 803E[4A03]00            		cmp	byte [FAILERR], 0
  6290 000028E4 7504                    		jnz	short BAD_PATH
  6291 000028E6 08C9                    		or	cl, cl
  6292 000028E8 7507                    		jnz	short SAVEDEST
  6293                                  
  6294                                  BAD_PATH:				; ...
  6295 000028EA B80300                  		mov	ax, 3		; error_path_not_found
  6296 000028ED F9                      		stc
  6297 000028EE E958FF                  		jmp	RENAME_POP
  6298                                  ; ---------------------------------------------------------------------------
  6299                                  
  6300                                  SAVEDEST:				; ...
  6301 000028F1 16                      		push	ss
  6302 000028F2 07                      		pop	es
  6303 000028F3 BF[5705]                		mov	di, NAME2
  6304 000028F6 BE[4B05]                		mov	si, NAME1
  6305 000028F9 B90B00                  		mov	cx, 11
  6306 000028FC F3A4                    		rep movsb
  6307 000028FE A1[C205]                		mov	ax, [DIRSTART]
  6308 00002901 A3[6405]                		mov	[DESTSTART],	ax
  6309                                  
  6310                                  BUILDDEST:				; ...
  6311 00002904 16                      		push	ss
  6312 00002905 07                      		pop	es
  6313 00002906 BB[3506]                		mov	bx, RENAMEDMA+15h ; RENAMEDMA+21
  6314 00002909 BF[4B05]                		mov	di, NAME1
  6315 0000290C BE[5705]                		mov	si, NAME2
  6316 0000290F B90B00                  		mov	cx, 11
  6317 00002912 E81501                  		call	NEW_RENAME
  6318 00002915 C606[6B05]16            		mov	byte [ATTRIB], 16h ; attr_all
  6319 0000291A C606[7E05]FF            		mov	byte [CREATING], 0FFh
  6320 0000291F E81B1A                  		call	DEVNAME
  6321 00002922 739A                    		jnb	short BAD_ACC
  6322 00002924 8B1E[6405]              		mov	bx, [DESTSTART]
  6323 00002928 C42E[8A05]              		les	bp, [THISDPB]
  6324 0000292C E8DD16                  		call	SETDIRSRCH
  6325 0000292F 728D                    		jb	short BAD_ACC
  6326 00002931 E88C15                  		call	FINDENTRY
  6327 00002934 7388                    		jnb	short BAD_ACC
  6328 00002936 803E[4A03]00            		cmp	byte [FAILERR], 0
  6329 0000293B 752A                    		jnz	short BAD_ACCJ
  6330 0000293D A1[6405]                		mov	ax, [DESTSTART]
  6331 00002940 3B06[2F06]              		cmp	ax, word [RENAMEDMA+0Fh]	; [RENAMEDMA+15]
  6332 00002944 745D                    		jz	short SIMPLE_RENAME
  6333 00002946 A0[4006]                		mov	al, [RENAMEDMA+20h] ; [RENAMEDMA+32]
  6334                                  					; [RENAMEDMA+21+dir_entry.dir_attr]
  6335 00002949 A810                    		test	al, 10h		; attr_directory
  6336 0000294B 751A                    		jnz	short BAD_ACCJ
  6337 0000294D A2[6B05]                		mov	byte [ATTRIB], al
  6338 00002950 8C1E[A005]              		mov	word [THISSFT+2], ds
  6339 00002954 BE[6507]                		mov	si, RENAMEDMA+145h ; RENAMEDMA+325
  6340                                  					; AUXSTACK-SF_ENTRY.size
  6341 00002957 8936[9E05]              		mov	word [THISSFT], si
  6342 0000295B C744020200              		mov	word [si+2], 2 ; [SI+SF_ENTRY.sf_mode],
  6343                                  					; SHARING_COMPAT+open_for_both
  6344 00002960 31C9                    		xor	cx, cx
  6345 00002962 E8DB21                  		call	RENAME_MAKE
  6346 00002965 7303                    		jnb	short GOT_DEST
  6347                                  
  6348                                  BAD_ACCJ:				; ...
  6349 00002967 E954FF                  		jmp	BAD_ACC
  6350                                  ; ---------------------------------------------------------------------------
  6351                                  
  6352                                  GOT_DEST:				; ...
  6353 0000296A 53                      		push	bx
  6354 0000296B C43E[9E05]              		les	di, [THISSFT]
  6355 0000296F E8114C                  		call	ShareEnd
  6356 00002972 5B                      		pop	bx
  6357 00002973 C43E[E205]              		les	di, [CURBUF]
  6358 00002977 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  6359                                  					; buf_dirty
  6360 0000297C 7508                    		jnz	short yesdirty1
  6361 0000297E E89533                  		call	INC_DIRTY_COUNT
  6362 00002981 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  6363                                  					; buf_dirty
  6364                                  
  6365                                  yesdirty1:				; ...
  6366 00002986 89DF                    		mov	di, bx
  6367 00002988 83C70B                  		add	di, 11		; dir_entry.dir_attr
  6368 0000298B BE[4006]                		mov	si, RENAMEDMA+20h
  6369 0000298E B91500                  		mov	cx, 21		; dir_entry.size-dir_entry.dir_attr
  6370 00002991 F3A4                    		rep movsb
  6371 00002993 E87D00                  		call	GET_SOURCE
  6372 00002996 7277                    		jb	short RENAME_OVER
  6373 00002998 89DF                    		mov	di, bx
  6374 0000299A 8E06[E405]              		mov	es, word [CURBUF+2]
  6375 0000299E B0E5                    		mov	al, 0E5h	; DIRFREE
  6376 000029A0 AA                      		stosb
  6377 000029A1 EB13                    		jmp	short DIRTY_IT
  6378                                  ; ---------------------------------------------------------------------------
  6379                                  
  6380                                  SIMPLE_RENAME:				; ...
  6381 000029A3 E86D00                  		call	GET_SOURCE
  6382 000029A6 7267                    		jb	short RENAME_OVER
  6383 000029A8 89DF                    		mov	di, bx
  6384 000029AA 8E06[E405]              		mov	es, word [CURBUF+2]
  6385 000029AE BE[4B05]                		mov	si, NAME1
  6386 000029B1 B90B00                  		mov	cx, 11
  6387 000029B4 F3A4                    		rep movsb
  6388                                  
  6389                                  DIRTY_IT:				; ...
  6390 000029B6 8B3E[E205]              		mov	di, word [CURBUF]
  6391 000029BA 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  6392                                  					; buf_dirty
  6393 000029BF 7508                    		jnz	short yesdirty2
  6394 000029C1 E85233                  		call	INC_DIRTY_COUNT
  6395 000029C4 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  6396                                  					; buf_dirty
  6397                                  
  6398                                  yesdirty2:				; ...
  6399 000029C9 56                      		push	si
  6400 000029CA C536[2C03]              		lds	si, [DMAADD]
  6401 000029CE 83C615                  		add	si, 21		; find_buf.attr
  6402 000029D1 F6440B10                		test	byte [si+11], 10h ; [SI+dir_entry.dir_attr],
  6403                                  					; attr_directory
  6404 000029D5 7406                    		jz	short NOT_DIR2
  6405 000029D7 E8F6FD                  		call	FastOpen_Rename
  6406 000029DA 5E                      		pop	si
  6407 000029DB EB01                    		jmp	short NOT_DIRTY1
  6408                                  ; ---------------------------------------------------------------------------
  6409                                  
  6410                                  NOT_DIR2:				; ...
  6411 000029DD 5E                      		pop	si
  6412                                  
  6413                                  NOT_DIRTY1:				; ...
  6414 000029DE BE[2106]                		mov	si, RENAMEDMA+1
  6415 000029E1 E872E9                  		call	ECritDisk
  6416 000029E4 C606[7E05]00            		mov	byte [CREATING], 0
  6417 000029E9 E8A305                  		call	RENAME_NEXT
  6418 000029EC 7221                    		jb	short RENAME_OVER
  6419 000029EE 8D771A                  		lea	si, [bx+26]	; [BX+dir_entry.dir_first]
  6420 000029F1 E859FD                  		call	REN_DEL_Check
  6421 000029F4 7306                    		jnb	short REN_OK2
  6422 000029F6 B82000                  		mov	ax, 20h		; error_sharing_violation
  6423 000029F9 E9C6FE                  		jmp	RENAME_CLEAN
  6424                                  ; ---------------------------------------------------------------------------
  6425                                  
  6426                                  REN_OK2:				; ...
  6427 000029FC A0[4006]                		mov	al, [RENAMEDMA+20h] ; [RENAMEDMA+21+dir_entry.dir_attr]
  6428 000029FF A810                    		test	al, 10h		; attr_directory
  6429 00002A01 7406                    		jz	short Ren_Directory
  6430 00002A03 E8B5FD                  		call	FastOpen_Delete
  6431 00002A06 E9FBFE                  		jmp	BUILDDEST
  6432                                  ; ---------------------------------------------------------------------------
  6433                                  
  6434                                  Ren_Directory:				; ...
  6435 00002A09 E8C4FD                  		call	FastOpen_Rename
  6436 00002A0C E9F5FE                  		jmp	BUILDDEST
  6437                                  ; ---------------------------------------------------------------------------
  6438                                  
  6439                                  RENAME_OVER:				; ...
  6440 00002A0F F8                      		clc
  6441 00002A10 E9AFFE                  		jmp	RENAME_CLEAN
  6442                                  
  6443                                  ; =============== S U B	R O U T	I N E =======================================
  6444                                  
  6445                                  GET_SOURCE:		; ...
  6446 00002A13 8B1E[2F06]              		mov	bx, word [RENAMEDMA+0Fh]
  6447 00002A17 C42E[8A05]              		les	bp, [THISDPB]
  6448 00002A1B E8EE15                  		call	SETDIRSRCH
  6449 00002A1E 7209                    		jb	short gs_ret_label
  6450 00002A20 E8F918                  		call	STARTSRCH
  6451 00002A23 A1[2D06]                		mov	ax, word [RENAMEDMA+0Dh]
  6452 00002A26 E8B415                  		call	GETENT
  6453                                  
  6454                                  gs_ret_label:				; ...
  6455 00002A29 C3                      		retn
  6456                                  
  6457                                  ; =============== S U B	R O U T	I N E =======================================
  6458                                  
  6459                                  NEW_RENAME:		; ...
  6460 00002A2A AC                      		lodsb
  6461 00002A2B 3C3F                    		cmp	al, '?'         ; 3Fh
  6462 00002A2D 7502                    		jnz	short NOCHG
  6463 00002A2F 8A07                    		mov	al, [bx]
  6464                                  
  6465                                  NOCHG:					; ...
  6466 00002A31 AA                      		stosb
  6467 00002A32 43                      		inc	bx
  6468 00002A33 E2F5                    		loop	NEW_RENAME
  6469 00002A35 C3                      		retn
  6470                                  
  6471                                  ; =============== S U B	R O U T	I N E =======================================
  6472                                  
  6473                                  GET_FILE_INFO:	; ...
  6474 00002A36 E858E8                  		call	TestNet
  6475 00002A39 7306                    		jnb	short LOCAL_INFO
  6476 00002A3B B80F11                  		mov	ax, 110Fh	; (MultNET SHL 8) OR 15
  6477 00002A3E CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - GET REMOTE FILE'S ATTRIBUTES
  6478                                  					; SS = DOS CS, SDA first filename pointer -> fully-qualified name of file
  6479                                  					; SDA CDS pointer -> current directory
  6480                                  					; Return: CF set on error, AX =	file attributes
  6481 00002A40 C3                      		retn
  6482                                  ; ---------------------------------------------------------------------------
  6483                                  
  6484                                  LOCAL_INFO:				; ...
  6485 00002A41 E812E9                  		call	ECritDisk
  6486 00002A44 C606[4C03]01            		mov	byte [NoSetDir], 1
  6487 00002A49 E8DC00                  		call	GET_FAST_PATH
  6488 00002A4C 7313                    		jnb	short info_check_dev
  6489                                  
  6490                                  NO_PATH:				; ...
  6491 00002A4E 750C                    		jnz	short bad_path1
  6492 00002A50 08C9                    		or	cl, cl
  6493 00002A52 7408                    		jz	short bad_path1
  6494                                  
  6495                                  info_no_file:				; ...
  6496 00002A54 B80200                  		mov	ax, 2		; error_file_not_found
  6497                                  
  6498                                  BadRet:					; ...
  6499 00002A57 F9                      		stc
  6500                                  
  6501                                  JustRet:				; ...
  6502 00002A58 E81BE9                  		call	LCritDisk
  6503 00002A5B C3                      		retn
  6504                                  ; ---------------------------------------------------------------------------
  6505                                  
  6506                                  bad_path1:				; ...
  6507 00002A5C B80300                  		mov	ax, 3		; error_path_not_found
  6508 00002A5F EBF6                    		jmp	short BadRet
  6509                                  ; ---------------------------------------------------------------------------
  6510                                  
  6511                                  info_check_dev:				; ...
  6512 00002A61 08E4                    		or	ah, ah
  6513 00002A63 78EF                    		js	short info_no_file
  6514 00002A65 833E[E205]FF            		cmp	word [CURBUF], 0FFFFh ; -1
  6515 00002A6A 7507                    		jnz	short not_root
  6516 00002A6C 30E4                    		xor	ah, ah
  6517 00002A6E B010                    		mov	al, 10h		; attr_directory
  6518 00002A70 F8                      		clc
  6519 00002A71 EBE5                    		jmp	short JustRet
  6520                                  ; ---------------------------------------------------------------------------
  6521                                  
  6522                                  not_root:				; ...
  6523 00002A73 1E                      		push	ds
  6524 00002A74 8E1E[E405]              		mov	ds, word [CURBUF+2]
  6525 00002A78 89DE                    		mov	si, bx
  6526 00002A7A 31DB                    		xor	bx, bx
  6527 00002A7C 89DF                    		mov	di, bx
  6528 00002A7E 8B4C16                  		mov	cx, [si+16h]	; [SI+dir_entry.dir_time]
  6529 00002A81 8B5418                  		mov	dx, [si+18h]	; [SI+dir_entry.dir_date]
  6530 00002A84 30E4                    		xor	ah, ah
  6531 00002A86 8A440B                  		mov	al, [si+0Bh]	; [SI+dir_entry.dir_attr]
  6532 00002A89 A810                    		test	al, 10h		; attr_directory
  6533 00002A8B 7506                    		jnz	short NO_SIZE
  6534 00002A8D 8B7C1C                  		mov	di, [si+1Ch]	; [SI+dir_entry.dir_size_l]
  6535 00002A90 8B5C1E                  		mov	bx, [si+1Eh]	; [SI+dir_entry.dir_size_h]
  6536                                  
  6537                                  NO_SIZE:				; ...
  6538 00002A93 1F                      		pop	ds
  6539 00002A94 F8                      		clc
  6540 00002A95 EBC1                    		jmp	short JustRet
  6541                                  
  6542                                  ; =============== S U B	R O U T	I N E =======================================
  6543                                  
  6544                                  SET_FILE_ATTRIBUTE:	; ...
  6545 00002A97 A9D8FF                  		test	ax, 0FFD8h	; ~attr_changeable
  6546 00002A9A 7414                    		jz	short set_look
  6547                                  
  6548                                  _BAD_ACC:				; ...
  6549 00002A9C C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
  6550 00002AA1 C606[2703]07            		mov	byte [EXTERR_CLASS], 7 ; errCLASS_Apperr
  6551 00002AA6 C606[2603]04            		mov	byte [EXTERR_ACTION], 4 ; errACT_Abort
  6552 00002AAB B80500                  		mov	ax, 5		; error_access_denied
  6553 00002AAE F9                      		stc
  6554 00002AAF C3                      		retn
  6555                                  ; ---------------------------------------------------------------------------
  6556                                  
  6557                                  set_look:				; ...
  6558 00002AB0 E8DEE7                  		call	TestNet
  6559 00002AB3 7308                    		jnb	short LOCAL_SET
  6560 00002AB5 50                      		push	ax
  6561 00002AB6 B80E11                  		mov	ax, 110Eh	; (MultNET SHL 8) OR 14
  6562 00002AB9 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - SET REMOTE FILE'S ATTRIBUTES
  6563                                  					; SS = DOS CS, SDA first filename pointer -> fully-qualified name of file
  6564                                  					; SDA CDS pointer -> current directory
  6565                                  					; STACK: WORD new file attributes
  6566                                  					; Return: CF set on error
  6567 00002ABB 5B                      		pop	bx
  6568 00002ABC C3                      		retn
  6569                                  ; ---------------------------------------------------------------------------
  6570                                  
  6571                                  LOCAL_SET:				; ...
  6572 00002ABD E896E8                  		call	ECritDisk
  6573 00002AC0 50                      		push	ax
  6574 00002AC1 C606[4C03]01            		mov	byte [NoSetDir], 1
  6575 00002AC6 E8A815                  		call	GETPATH
  6576 00002AC9 7303                    		jnb	short set_check_device
  6577 00002ACB 5B                      		pop	bx
  6578 00002ACC EB80                    		jmp	short NO_PATH
  6579                                  ; ---------------------------------------------------------------------------
  6580                                  
  6581                                  set_check_device:			; ...
  6582 00002ACE 08E4                    		or	ah, ah
  6583 00002AD0 7906                    		jns	short set_check_share
  6584 00002AD2 58                      		pop	ax
  6585 00002AD3 E8A0E8                  		call	LCritDisk
  6586 00002AD6 EBC4                    		jmp	short _BAD_ACC
  6587                                  ; ---------------------------------------------------------------------------
  6588                                  
  6589                                  set_check_share:			; ...
  6590 00002AD8 58                      		pop	ax
  6591 00002AD9 833E[E205]FF            		cmp	word [CURBUF], -1 ; 0FFFFh
  6592 00002ADE 740A                    		jz	short cannot_set_root
  6593 00002AE0 E86AFC                  		call	REN_DEL_Check
  6594 00002AE3 730B                    		jnb	short set_do
  6595 00002AE5 B82000                  		mov	ax, 20h		; error_sharing_violation
  6596 00002AE8 EB3A                    		jmp	short OK_BYE
  6597                                  ; ---------------------------------------------------------------------------
  6598                                  
  6599                                  cannot_set_root:			; ...
  6600 00002AEA B80500                  		mov	ax, 5		; error_access_denied
  6601 00002AED F9                      		stc
  6602 00002AEE EB34                    		jmp	short OK_BYE
  6603                                  ; ---------------------------------------------------------------------------
  6604                                  
  6605                                  set_do:					; ...
  6606 00002AF0 C43E[E205]              		les	di, [CURBUF]
  6607 00002AF4 2680670BD8              		and	byte [es:bx+0Bh], 0D8h ; [ES:BX+dir_entry.dir_attr],~attr_changeable
  6608 00002AF9 2608470B                		or	[es:bx+0Bh], al	; [ES:BX+dir_entry.dir_attr]
  6609 00002AFD 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],buf_dirty
  6610 00002B02 7508                    		jnz	short yesdirty3
  6611 00002B04 E80F32                  		call	INC_DIRTY_COUNT
  6612 00002B07 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],buf_dirty
  6613                                  
  6614                                  yesdirty3:				; ...
  6615 00002B0C A0[7605]                		mov	al, [THISDRV]
  6616 00002B0F 52                      		push	dx
  6617 00002B10 57                      		push	di
  6618 00002B11 B400                    		mov	ah, 0
  6619 00002B13 88C2                    		mov	dl, al
  6620 00002B15 89DF                    		mov	di, bx
  6621 00002B17 E8D0FC                  		call	FastOpen_Update
  6622 00002B1A 5F                      		pop	di
  6623 00002B1B 5A                      		pop	dx
  6624 00002B1C E8EB30                  		call	FLUSHBUF
  6625 00002B1F 7303                    		jnb	short OK_BYE
  6626 00002B21 B80200                  		mov	ax, 2		; error_file_not_found
  6627                                  
  6628                                  OK_BYE:					; ...
  6629 00002B24 E84FE8                  		call	LCritDisk
  6630 00002B27 C3                      		retn
  6631                                  
  6632                                  ; =============== S U B	R O U T	I N E =======================================
  6633                                  
  6634                                  GET_FAST_PATH:
  6635 00002B28 36800E[3A0D]01          		or	byte [ss:FastOpenFlg], 1 ; FastOpen_Set
  6636 00002B2E E84015                  		call	GETPATH
  6637 00002B31 9C                      		pushf
  6638 00002B32 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  6639 00002B38 9D                      		popf
  6640 00002B39 C3                      		retn
  6641                                  
  6642                                  ; =============== S U B	R O U T	I N E =======================================
  6643                                  
  6644                                  DOS_DUP:
  6645 00002B3A 2E8E06[0700]            		mov	es, [cs:DosDSeg]
  6646 00002B3F 26C43E[9E05]            		les	di, [es:THISSFT]
  6647                                  
  6648                                  DOS_Dup_Direct:				; ...
  6649 00002B44 E863E7                  		call	IsSFTNet
  6650 00002B47 7503                    		jnz	short DO_INC
  6651 00002B49 E8121C                  		call	DEV_OPEN_SFT
  6652                                  
  6653                                  DO_INC:					; ...
  6654 00002B4C 26FF05                  		inc	word [es:di]	; [ES:DI+SF_ENTRY.sf_ref_count]
  6655 00002B4F C3                      		retn
  6656                                  
  6657                                  ; ---------------------------------------------------------------------------
  6658                                  
  6659                                  DOS_CREATE:				; ...
  6660 00002B50 30E4                    		xor	ah, ah
  6661                                  
  6662                                  Create_inter:				; ...
  6663 00002B52 A880                    		test	al, 80h		; ~(attr_all+attr_ignore+attr_volume_id)
  6664 00002B54 7512                    		jnz	short AttErr
  6665 00002B56 A808                    		test	al, 8		; attr_volume_id
  6666 00002B58 7408                    		jz	short NoReset
  6667 00002B5A 810E[1106]8000          		or	word [DOS34_FLAG], 80h ; DBCS_VOLID
  6668 00002B60 B008                    		mov	al, 8		; attr_volume_id
  6669                                  
  6670                                  NoReset:				; ...
  6671 00002B62 0C20                    		or	al, 20h		; attr_archive
  6672 00002B64 A850                    		test	al, 50h		; attr_directory+attr_device
  6673 00002B66 740A                    		jz	short ATT_OK
  6674                                  
  6675                                  AttErr:					; ...
  6676 00002B68 B80500                  		mov	ax, 5		; Attribute problem
  6677 00002B6B C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
  6678 00002B70 EB67                    		jmp	short SET_MKND_ERR
  6679                                  ; ---------------------------------------------------------------------------
  6680                                  
  6681                                  ATT_OK:					; ...
  6682 00002B72 C43E[9E05]              		les	di, [THISSFT]
  6683 00002B76 06                      		push	es
  6684 00002B77 C436[A205]              		les	si, [THISCDS]
  6685 00002B7B 83FEFF                  		cmp	si, -1		; 0FFFFh
  6686 00002B7E 751D                    		jnz	short TEST_RE_NET
  6687 00002B80 07                      		pop	es
  6688 00002B81 F606[F605]01            		test	byte [EXTOPEN_ON], 1 ; EXT_OPEN_ON
  6689 00002B86 740D                    		jz	short NOEXTOP
  6690                                  
  6691                                  IFS_extopen:				; ...
  6692 00002B88 50                      		push	ax
  6693 00002B89 B82E11                  		mov	ax, 112Eh	; (MultNET SHL 8) OR 46
  6694 00002B8C CD2F                    		int	2Fh		; Multiplex - DOS 4 IFSFUNC.EXE	- ???
  6695                                  					; SS = DS = DOS	CS, STACK: WORD	???   low byte = ???
  6696                                  					; Return: CF set on error
  6697                                  					; CF clear if successful
  6698 00002B8E 5B                      		pop	bx
  6699 00002B8F C606[F605]00            		mov	byte [EXTOPEN_ON], 0
  6700 00002B94 C3                      		retn
  6701                                  ; ---------------------------------------------------------------------------
  6702                                  
  6703                                  NOEXTOP:				; ...
  6704 00002B95 50                      		push	ax
  6705 00002B96 B81811                  		mov	ax, 1118h
  6706 00002B99 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CREATE/TRUNCATE FILE
  6707                                  					; ES:DI	-> uninitialized SFT, SS = DOS CS
  6708                                  					; SDA first filename pointer ->	fully-qualified	name of	file
  6709                                  					; STACK: WORD file creation mode???
  6710 00002B9B 5B                      		pop	bx
  6711 00002B9C C3                      		retn
  6712                                  ; ---------------------------------------------------------------------------
  6713                                  
  6714                                  TEST_RE_NET:				; ...
  6715 00002B9D 26F744430080            		test	word [es:si+43h], 8000h ; [ES:SI+curdir.flags],
  6716                                  					; curdir_isnet
  6717 00002BA3 07                      		pop	es
  6718 00002BA4 7419                    		jz	short LOCAL_CREATE
  6719 00002BA6 E8BF00                  		call	Set_EXT_mode
  6720 00002BA9 7205                    		jb	short dochk
  6721 00002BAB 26834D0202              		or	word [es:di+2], 2 ; [ES:DI+SF_ENTRY.sf_mode],
  6722                                  					; SHARING_COMPAT+open_for_both
  6723                                  
  6724                                  dochk:					; ...
  6725 00002BB0 F606[F605]01            		test	byte [EXTOPEN_ON], 1
  6726 00002BB5 75D1                    		jnz	short IFS_extopen
  6727 00002BB7 50                      		push	ax
  6728 00002BB8 B81711                  		mov	ax, 1117h	; (MultNET SHL 8) OR 23
  6729 00002BBB CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CREATE/TRUNCATE REMOTE FILE
  6730                                  					; ES:DI	-> uninitialized SFT, SS = DOS CS
  6731                                  					; SDA first filename pointer ->	fully-qualified	name of	file to	open
  6732                                  					; SDA CDS pointer -> current directory
  6733                                  					; Return: CF set on error
  6734 00002BBD 5B                      		pop	bx
  6735 00002BBE C3                      		retn
  6736                                  ; ---------------------------------------------------------------------------
  6737                                  
  6738                                  LOCAL_CREATE:				; ...
  6739 00002BBF E8A600                  		call	Set_EXT_mode
  6740 00002BC2 7205                    		jb	short setdone
  6741 00002BC4 26834D0202              		or	word [es:di+2], 2 ; [ES:DI+SF_ENTRY.sf_mode],
  6742                                  					; SHARING_COMPAT+open_for_both
  6743                                  
  6744                                  setdone:				; ...
  6745 00002BC9 E88AE7                  		call	ECritDisk
  6746 00002BCC E84B1F                  		call	MakeNode
  6747 00002BCF 7317                    		jnb	short Create_ok
  6748 00002BD1 C606[A10A]FF            		mov	byte [VOLCHNG_FLAG], 0FFh ; -1
  6749 00002BD6 E89DE7                  		call	LCritDisk
  6750                                  
  6751                                  SET_MKND_ERR:				; ...
  6752 00002BD9 BB[E02B]                		mov	bx, CRTERRTAB
  6753                                  		;xlat	byte [cs:bx] ; CS XLAT
  6754 00002BDC 2E                      		cs
  6755 00002BDD D7                      		xlat
  6756 00002BDE F9                      		stc
  6757 00002BDF C3                      		retn
  6758                                  ; ---------------------------------------------------------------------------
  6759 00002BE0 00                      CRTERRTAB	db 0			; ...
  6760 00002BE1 05                      		db 5			; error_access_denied
  6761 00002BE2 52                      		db 52h			; error_cannot_make
  6762 00002BE3 50                      		db 50h			; error_file_exists
  6763 00002BE4 03                      		db 3			; error_path_not_found
  6764 00002BE5 05                      		db 5			; error_access_denied
  6765 00002BE6 20                      		db 20h			; error_sharing_violation
  6766 00002BE7 02                      		db 2			; error_file_not_found
  6767                                  ; ---------------------------------------------------------------------------
  6768                                  
  6769                                  Create_ok:				; ...
  6770 00002BE8 E8D0FB                  		call	FastOpen_Delete
  6771 00002BEB A0[6D05]                		mov	al, [SATTRIB]
  6772 00002BEE A808                    		test	al, 8		; attr_volume_id
  6773 00002BF0 741C                    		jz	short NoVolLabel
  6774 00002BF2 C43E[A205]              		les	di, [THISCDS]
  6775 00002BF6 268A25                  		mov	ah, [es:di]	; [ES:DI+curdir.text]
  6776 00002BF9 80EC41                  		sub	ah, 'A'         ; 41h
  6777 00002BFC 8826[A10A]              		mov	[VOLCHNG_FLAG], ah
  6778 00002C00 B701                    		mov	bh, 1
  6779 00002C02 E81F00                  		call	Set_Media_ID
  6780 00002C05 E84EE7                  		call	ECritDisk
  6781 00002C08 E88E2C                  		call	FATREAD_CDS
  6782 00002C0B E868E7                  		call	LCritDisk
  6783                                  
  6784                                  NoVolLabel:				; ...
  6785 00002C0E B80200                  		mov	ax, 2
  6786 00002C11 C43E[9E05]              		les	di, [THISSFT]
  6787                                  		;call	dword [ShSU]	; call far [JShare+(14*4)]
  6788 00002C15 FF1E[C800]              		call	far [JShare+(14*4)]
  6789 00002C19 E85AE7                  		call	LCritDisk
  6790 00002C1C E95001                  		jmp	SET_SFT_MODE
  6791                                  ; ---------------------------------------------------------------------------
  6792                                  
  6793                                  DOS_Create_New:				; ...
  6794 00002C1F B401                    		mov	ah, 1
  6795 00002C21 E92EFF                  		jmp	Create_inter
  6796                                  
  6797                                  ; =============== S U B	R O U T	I N E =======================================
  6798                                  
  6799                                  Set_Media_ID:	; ...
  6800 00002C24 50                      		push	ax
  6801 00002C25 06                      		push	es
  6802 00002C26 57                      		push	di
  6803 00002C27 FEC4                    		inc	ah
  6804 00002C29 88E3                    		mov	bl, ah
  6805 00002C2B B00D                    		mov	al, 0Dh		; generic IOCTL
  6806 00002C2D B96608                  		mov	cx, 866h	; get media id
  6807 00002C30 BA[6C0D]                		mov	dx, FAKE_STACK_2F ; Packet_Temp
  6808 00002C33 53                      		push	bx
  6809 00002C34 52                      		push	dx
  6810 00002C35 30FF                    		xor	bh, bh
  6811 00002C37 E824F7                  		call	_$IOCTL
  6812 00002C3A 5A                      		pop	dx
  6813 00002C3B 5B                      		pop	bx
  6814 00002C3C 7224                    		jb	short geterr
  6815 00002C3E 08FF                    		or	bh, bh
  6816 00002C40 7405                    		jz	short NoName	; delete volume	id
  6817 00002C42 BE[4B05]                		mov	si, NAME1 ; set volume id
  6818 00002C45 EB03                    		jmp	short doset
  6819                                  ; ---------------------------------------------------------------------------
  6820                                  
  6821                                  NoName:					; ...
  6822 00002C47 BE[BA0D]                		mov	si, NO_NAME_ID ;	"NO NAME    "
  6823                                  
  6824                                  doset:					; ...
  6825 00002C4A 89D7                    		mov	di, dx
  6826 00002C4C 83C706                  		add	di, 6		; MEDIA_ID_INFO.MEDIA_Label
  6827 00002C4F 16                      		push	ss
  6828 00002C50 1F                      		pop	ds
  6829 00002C51 16                      		push	ss
  6830 00002C52 07                      		pop	es
  6831 00002C53 B90B00                  		mov	cx, 11
  6832 00002C56 F3A4                    		rep movsb
  6833 00002C58 B94608                  		mov	cx, 846h	; set volume id
  6834 00002C5B B00D                    		mov	al, 0Dh
  6835 00002C5D 30FF                    		xor	bh, bh
  6836 00002C5F E8FCF6                  		call	_$IOCTL
  6837                                  
  6838                                  geterr:					; ...
  6839 00002C62 16                      		push	ss
  6840 00002C63 1F                      		pop	ds
  6841 00002C64 5F                      		pop	di
  6842 00002C65 07                      		pop	es
  6843 00002C66 58                      		pop	ax
  6844 00002C67 C3                      		retn
  6845                                  
  6846                                  ; =============== S U B	R O U T	I N E =======================================
  6847                                  
  6848                                  Set_EXT_mode:	; ...
  6849 00002C68 36F606[F605]01          		test	byte [ss:EXTOPEN_ON], 1 ; [ss:EXTOPEN_ON],EXT_OPEN_ON
  6850 00002C6E 740B                    		jz	short NOTEX
  6851 00002C70 50                      		push	ax
  6852 00002C71 36A1[0106]              		mov	ax, [ss:SAVE_BX]
  6853 00002C75 26094502                		or	[es:di+2], ax	; [ES:DI+SF_ENTRY.sf_mode]
  6854 00002C79 58                      		pop	ax
  6855 00002C7A F9                      		stc
  6856                                  
  6857                                  NOTEX:					; ...
  6858 00002C7B C3                      		retn
  6859                                  
  6860                                  ; ---------------------------------------------------------------------------
  6861                                  
  6862                                  DOS_OPEN:				; ...
  6863 00002C7C C606[4C03]00            		mov	byte [NoSetDir], 0
  6864 00002C81 E84001                  		call	Check_Access_AX
  6865 00002C84 722B                    		jb	short do_ret_label
  6866 00002C86 C43E[9E05]              		les	di, [THISSFT]
  6867 00002C8A 30E4                    		xor	ah, ah
  6868 00002C8C 26884502                		mov	[es:di+2], al	; [ES:DI+SF_ENTRY.sf_mode]
  6869 00002C90 06                      		push	es
  6870 00002C91 C436[A205]              		les	si, [THISCDS]
  6871 00002C95 83FEFF                  		cmp	si, -1
  6872 00002C98 7530                    		jnz	short TEST_RE_NET1
  6873 00002C9A 07                      		pop	es
  6874 00002C9B F606[F605]01            		test	byte [EXTOPEN_ON], 1 ; EXT_OPEN_ON
  6875 00002CA0 7410                    		jz	short _NOEXTOP
  6876                                  
  6877                                  _IFS_extopen:				; ...
  6878 00002CA2 A0[0106]                		mov	al, byte [SAVE_BX]
  6879 00002CA5 50                      		push	ax
  6880 00002CA6 B82E11                  		mov	ax, 112Eh	; (MultNET*256)+46
  6881 00002CA9 CD2F                    		int	2Fh		; Multiplex - DOS 4 IFSFUNC.EXE	- ???
  6882                                  					; SS = DS = DOS	CS, STACK: WORD	???   low byte = ???
  6883                                  					; Return: CF set on error
  6884                                  					; CF clear if successful
  6885 00002CAB 5B                      		pop	bx
  6886 00002CAC C606[F605]00            		mov	byte [EXTOPEN_ON], 0
  6887                                  
  6888                                  do_ret_label:				; ...
  6889 00002CB1 C3                      		retn
  6890                                  ; ---------------------------------------------------------------------------
  6891                                  
  6892                                  _NOEXTOP:				; ...
  6893 00002CB2 F606[8600]01            		test	byte [DOS_FLAG], 1 ; EXECOPEN
  6894 00002CB7 7409                    		jz	short not_exec_open
  6895 00002CB9 F606[1206]08            		test	byte [DOS34_FLAG+1], 8 ; (EXEC_AWARE_REDIR>>8)
  6896 00002CBE 7402                    		jz	short not_exec_open
  6897 00002CC0 B023                    		mov	al, 23h		; SHARING_DENY_WRITE+EXEC_OPEN
  6898                                  
  6899                                  not_exec_open:				; ...
  6900 00002CC2 50                      		push	ax
  6901 00002CC3 B81611                  		mov	ax, 1116h	; (MultNET SHL 8) OR 22
  6902 00002CC6 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - OPEN	EXISTING REMOTE	FILE
  6903                                  					; ES:DI	-> uninitialized SFT, SS = DOS CS
  6904                                  					; SDA first filename pointer ->	fully-qualified	name of	file to	open
  6905                                  					; STACK: WORD file open	mode
  6906                                  					; Return: CF set on error
  6907 00002CC8 5B                      		pop	bx
  6908 00002CC9 C3                      		retn
  6909                                  ; ---------------------------------------------------------------------------
  6910                                  
  6911                                  TEST_RE_NET1:				; ...
  6912 00002CCA 26F744430080            		test	word [es:si+43h], 8000h ; [ES:SI+curdir.flags],
  6913                                  					; curdir_isnet
  6914 00002CD0 07                      		pop	es
  6915 00002CD1 7409                    		jz	short LOCAL_OPEN
  6916 00002CD3 F606[F605]01            		test	byte [EXTOPEN_ON], 1
  6917 00002CD8 75C8                    		jnz	short _IFS_extopen
  6918 00002CDA EBD6                    		jmp	short _NOEXTOP
  6919                                  ; ---------------------------------------------------------------------------
  6920                                  
  6921                                  LOCAL_OPEN:				; ...
  6922 00002CDC E877E6                  		call	ECritDisk
  6923 00002CDF 800E[3A0D]05            		or	byte [FastOpenFlg], 5 ; FastOpen_Set+Special_Fill_Set
  6924 00002CE4 E88A13                  		call	GETPATH
  6925 00002CE7 7320                    		jnb	short Open_found
  6926 00002CE9 7514                    		jnz	short bad_path2
  6927 00002CEB 08C9                    		or	cl, cl
  6928 00002CED 7410                    		jz	short bad_path2
  6929 00002CEF B80200                  		mov	ax, 2		; error_file_not_found
  6930                                  
  6931                                  OpenBadRet:				; ...
  6932 00002CF2 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  6933 00002CF8 F9                      		stc
  6934 00002CF9 E87AE6                  		call	LCritDisk
  6935 00002CFC E98600                  		jmp	Clear_FastOpen
  6936                                  ; ---------------------------------------------------------------------------
  6937                                  
  6938                                  bad_path2:				; ...
  6939 00002CFF B80300                  		mov	ax, 3		; error_path_not_found
  6940 00002D02 EBEE                    		jmp	short OpenBadRet
  6941                                  ; ---------------------------------------------------------------------------
  6942                                  
  6943                                  Open_Bad_Access:			; ...
  6944 00002D04 B80500                  		mov	ax, 5		; error_access_denied
  6945 00002D07 EBE9                    		jmp	short OpenBadRet
  6946                                  ; ---------------------------------------------------------------------------
  6947                                  
  6948                                  Open_found:				; ...
  6949 00002D09 74F9                    		jz	short Open_Bad_Access
  6950 00002D0B 08E4                    		or	ah, ah
  6951 00002D0D 783F                    		js	short open_ok
  6952 00002D0F 8E06[E405]              		mov	es, word [CURBUF+2]
  6953 00002D13 268A470B                		mov	al, [es:bx+0Bh]	; [ES:BX+dir_entry.dir_attr]
  6954 00002D17 A808                    		test	al, 8		; attr_volume_id
  6955 00002D19 75E9                    		jnz	short Open_Bad_Access
  6956 00002D1B A801                    		test	al, 1		; attr_read_only
  6957 00002D1D 742F                    		jz	short open_ok
  6958 00002D1F 1E                      		push	ds
  6959 00002D20 56                      		push	si
  6960 00002D21 C536[9E05]              		lds	si, [THISSFT]
  6961 00002D25 8B4C02                  		mov	cx, [si+2]	; [SI+SF_ENTRY.sf_mode]
  6962 00002D28 F7C10080                		test	cx, 8000h	; sf_isFCB
  6963 00002D2C 750A                    		jnz	short ResetAccess
  6964 00002D2E 88CA                    		mov	dl, cl
  6965 00002D30 80E2F0                  		and	dl, 0F0h	; SHARING_MASK
  6966 00002D33 80FA70                  		cmp	dl, 70h		; SHARING_NET_FCB
  6967 00002D36 7508                    		jnz	short NormalOpen
  6968                                  
  6969                                  ResetAccess:				; ...
  6970 00002D38 83E1F0                  		and	cx, 0FFF0h	; ~access_mask
  6971 00002D3B 894C02                  		mov	[si+2],	cx	; [SI+SF_ENTRY.sf_mode]
  6972 00002D3E EB0C                    		jmp	short FillSFT
  6973                                  ; ---------------------------------------------------------------------------
  6974                                  
  6975                                  NormalOpen:				; ...
  6976 00002D40 80E10F                  		and	cl, 0Fh		; access_mask
  6977 00002D43 80F900                  		cmp	cl, 0		; open_for_read
  6978 00002D46 7404                    		jz	short FillSFT
  6979 00002D48 5E                      		pop	si
  6980 00002D49 1F                      		pop	ds
  6981 00002D4A EBB8                    		jmp	short Open_Bad_Access
  6982                                  ; ---------------------------------------------------------------------------
  6983                                  
  6984                                  FillSFT:				; ...
  6985 00002D4C 5E                      		pop	si
  6986 00002D4D 1F                      		pop	ds
  6987                                  
  6988                                  open_ok:				; ...
  6989 00002D4E E8881F                  		call	DOOPEN
  6990 00002D51 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  6991 00002D57 E84A00                  		call	DO_SHARE_CHECK
  6992 00002D5A 7305                    		jnb	short SHARE_OK
  6993 00002D5C E817E6                  		call	LCritDisk
  6994 00002D5F EB24                    		jmp	short Clear_FastOpen
  6995                                  ; ---------------------------------------------------------------------------
  6996                                  
  6997                                  SHARE_OK:				; ...
  6998 00002D61 B80300                  		mov	ax, 3
  6999 00002D64 C43E[9E05]              		les	di, [THISSFT]
  7000                                  		;call	dword [ShSU] ; call far [JShare+(14*4)]
  7001 00002D68 FF1E[C800]              		call	far [JShare+(14*4)]
  7002 00002D6C E807E6                  		call	LCritDisk
  7003                                  
  7004                                  SET_SFT_MODE:				; ...
  7005 00002D6F C43E[9E05]              		les	di, [THISSFT]
  7006 00002D73 E8E819                  		call	DEV_OPEN_SFT
  7007 00002D76 26F745020080            		test	word [es:di+2], 8000h ; ES:DI+SF_ENTRY.sf_mode],
  7008                                  					; sf_isFCB
  7009 00002D7C 7407                    		jz	short Clear_FastOpen
  7010 00002D7E A1[3003]                		mov	ax, [CurrentPDB]
  7011 00002D81 26894531                		mov	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
  7012                                  
  7013                                  Clear_FastOpen:				; ...
  7014 00002D85 C3                      		retn
  7015                                  
  7016                                  ; =============== S U B	R O U T	I N E =======================================
  7017                                  
  7018                                  SHARE_ERROR:	; ...
  7019 00002D86 26F745020080            		test	word [es:di+2], 8000h ; [ES:DI+SF_ENTRY.sf_mode],
  7020                                  					; sf_isFCB
  7021 00002D8C 750C                    		jnz	short _HARD_ERR
  7022 00002D8E 268A4D02                		mov	cl, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  7023 00002D92 80E1F0                  		and	cl, 0F0h	; SHARING_MASK
  7024 00002D95 80F900                  		cmp	cl, 0		; SHARING_COMPAT
  7025 00002D98 7505                    		jnz	short _NO_HARD_ERR
  7026                                  
  7027                                  _HARD_ERR:				; ...
  7028 00002D9A E8C047                  		call	SHARE_VIOLATION
  7029 00002D9D 73E6                    		jnb	short Clear_FastOpen
  7030                                  
  7031                                  _NO_HARD_ERR:				; ...
  7032 00002D9F B82000                  		mov	ax, 20h		; error_sharing_violation
  7033 00002DA2 F9                      		stc
  7034 00002DA3 C3                      		retn
  7035                                  
  7036                                  ; =============== S U B	R O U T	I N E =======================================
  7037                                  
  7038                                  DO_SHARE_CHECK:	; ...
  7039 00002DA4 E8AFE5                  		call	ECritDisk
  7040                                  
  7041                                  OPN_RETRY:				; ...
  7042 00002DA7 8B0E[1A00]              		mov	cx, [RetryCount]
  7043                                  
  7044                                  OpenShareRetry:				; ...
  7045 00002DAB 51                      		push	cx
  7046 00002DAC E8A947                  		call	SHARE_CHECK
  7047 00002DAF 59                      		pop	cx
  7048 00002DB0 730E                    		jnb	short Share_Ok2
  7049 00002DB2 E897E4                  		call	Idle
  7050 00002DB5 E2F4                    		loop	OpenShareRetry
  7051 00002DB7 C43E[9E05]              		les	di, [THISSFT]
  7052 00002DBB E8C8FF                  		call	SHARE_ERROR
  7053 00002DBE 73E7                    		jnb	short OPN_RETRY
  7054                                  
  7055                                  Share_Ok2:				; ...
  7056 00002DC0 E8B3E5                  		call	LCritDisk
  7057 00002DC3 C3                      		retn
  7058                                  
  7059                                  ; =============== S U B	R O U T	I N E =======================================
  7060                                  
  7061                                  Check_Access_AX:
  7062 00002DC4 A2[6E05]                		mov	[OPEN_ACCESS], al
  7063 00002DC7 53                      		push	bx
  7064 00002DC8 88C3                    		mov	bl, al
  7065 00002DCA 80E3F0                  		and	bl, 0F0h	; SHARING_MASK
  7066 00002DCD 803E[7205]FF            		cmp	byte [FSHARING], -1
  7067 00002DD2 7505                    		jnz	short CheckShareMode
  7068 00002DD4 80FB70                  		cmp	bl, 70h		; SHARING_NET_FCB
  7069 00002DD7 7405                    		jz	short CheckAccessMode
  7070                                  
  7071                                  CheckShareMode:				; ...
  7072 00002DD9 80FB40                  		cmp	bl, 40h
  7073 00002DDC 770D                    		ja	short Make_Bad_Access
  7074                                  
  7075                                  CheckAccessMode:			; ...
  7076 00002DDE 88C3                    		mov	bl, al
  7077 00002DE0 80E30F                  		and	bl, 0Fh		; access_mask
  7078 00002DE3 80FB02                  		cmp	bl, 2
  7079 00002DE6 7703                    		ja	short Make_Bad_Access
  7080 00002DE8 5B                      		pop	bx
  7081 00002DE9 F8                      		clc
  7082 00002DEA C3                      		retn
  7083                                  ; ---------------------------------------------------------------------------
  7084                                  
  7085                                  Make_Bad_Access:			; ...
  7086 00002DEB B80C00                  		mov	ax, 0Ch		; error_invalid_access
  7087 00002DEE 5B                      		pop	bx
  7088 00002DEF F9                      		stc
  7089 00002DF0 C3                      		retn
  7090                                  
  7091                                  ; =============== S U B	R O U T	I N E =======================================
  7092                                  
  7093                                  DISK_INFO:		; ...
  7094 00002DF1 E89DE4                  		call	TestNet
  7095 00002DF4 7306                    		jnb	short LOCAL_DSK_INFO
  7096 00002DF6 B80C11                  		mov	ax, 110Ch
  7097 00002DF9 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - GET DISK SPACE
  7098                                  					; ES:DI	-> current directory
  7099                                  					; Return: AL = sectors per cluster, BX = total clusters
  7100                                  					; CX = bytes per sector, DX = number of	available clusters
  7101 00002DFB C3                      		retn
  7102                                  ; ---------------------------------------------------------------------------
  7103                                  
  7104                                  LOCAL_DSK_INFO:				; ...
  7105 00002DFC C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  7106 00002E01 E852E5                  		call	ECritDisk
  7107 00002E04 E8922A                  		call	FATREAD_CDS
  7108 00002E07 7241                    		jb	short CRIT_LEAVE
  7109 00002E09 BB0200                  		mov	bx, 2
  7110 00002E0C E8D628                  		call	UNPACK
  7111 00002E0F 7239                    		jb	short CRIT_LEAVE
  7112 00002E11 C536[E205]              		lds	si, [CURBUF]
  7113 00002E15 8A6414                  		mov	ah, [si+14h]	; [SI+BUFINSIZ]
  7114 00002E18 16                      		push	ss
  7115 00002E19 1F                      		pop	ds
  7116 00002E1A 268B4E0D                		mov	cx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
  7117 00002E1E 268B561F                		mov	dx, [es:bp+1Fh]	; [ES:BP+DPB.FREE_CNT]
  7118 00002E22 83FAFF                  		cmp	dx, -1		; 0FFFFh
  7119 00002E25 7404                    		jz	short DoScan
  7120 00002E27 39CA                    		cmp	dx, cx
  7121 00002E29 7223                    		jb	short GotVal
  7122                                  
  7123                                  DoScan:					; ...
  7124 00002E2B 31D2                    		xor	dx, dx
  7125 00002E2D 49                      		dec	cx
  7126                                  
  7127                                  SCANFREE:				; ...
  7128 00002E2E E8B428                  		call	UNPACK
  7129 00002E31 7217                    		jb	short CRIT_LEAVE
  7130 00002E33 7501                    		jnz	short NOTFREECLUS
  7131 00002E35 42                      		inc	dx
  7132                                  
  7133                                  NOTFREECLUS:				; ...
  7134 00002E36 43                      		inc	bx
  7135 00002E37 E2F5                    		loop	SCANFREE
  7136 00002E39 4B                      		dec	bx
  7137                                  
  7138                                  ReturnVals:				; ...
  7139 00002E3A 4B                      		dec	bx
  7140 00002E3B 268A4604                		mov	al, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  7141 00002E3F FEC0                    		inc	al
  7142 00002E41 268B4E02                		mov	cx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  7143 00002E45 2689561F                		mov	[es:bp+1Fh], dx	; [ES:BP+DPB.FREE_CNT]
  7144 00002E49 F8                      		clc
  7145                                  
  7146                                  CRIT_LEAVE:				; ...
  7147 00002E4A E829E5                  		call	LCritDisk
  7148 00002E4D C3                      		retn
  7149                                  ; ---------------------------------------------------------------------------
  7150                                  
  7151                                  GotVal:					; ...
  7152 00002E4E 89CB                    		mov	bx, cx
  7153 00002E50 EBE8                    		jmp	short ReturnVals
  7154                                  
  7155                                  ; =============== S U B	R O U T	I N E =======================================
  7156                                  
  7157                                  DOS_SEARCH_FIRST:	; ...
  7158 00002E52 C43E[A205]              		les	di, [THISCDS]
  7159 00002E56 83FFFF                  		cmp	di, 0FFFFh	; -1
  7160 00002E59 7506                    		jnz	short TEST_RE_NET2
  7161 00002E5B B81911                  		mov	ax, 1119h
  7162 00002E5E CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - ???
  7163 00002E60 C3                      		retn
  7164                                  ; ---------------------------------------------------------------------------
  7165                                  
  7166                                  TEST_RE_NET2:				; ...
  7167 00002E61 26F745430080            		test	word [es:di+43h], 8000h ; [ES:DI+curdir.flags],
  7168                                  					; curdir_isnet
  7169 00002E67 7406                    		jz	short LOCAL_SEARCH_FIRST
  7170 00002E69 B81B11                  		mov	ax, 111Bh	; (MultNET<<8)|27
  7171 00002E6C CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - FINDFIRST
  7172                                  					; SS = DS = DOS	CS, [DTA] = uninitialized 21-byte findfirst search data
  7173                                  					; SDA first filename pointer ->	fully-qualified	search template
  7174                                  					; SDA CDS pointer -> current directory
  7175                                  					; Return: CF set on error
  7176 00002E6E C3                      		retn
  7177                                  ; ---------------------------------------------------------------------------
  7178                                  
  7179                                  LOCAL_SEARCH_FIRST:			; ...
  7180 00002E6F E8E4E4                  		call	ECritDisk
  7181 00002E72 F706[1106]0004          		test	word [DOS34_FLAG], 400h ; SEARCH_FASTOPEN
  7182 00002E78 7405                    		jz	short NOFN
  7183 00002E7A 800E[3A0D]01            		or	byte [FastOpenFlg], 1 ; FastOpen_Set
  7184                                  
  7185                                  NOFN:					; ...
  7186 00002E7F C606[4C03]01            		mov	byte [NoSetDir], 1
  7187 00002E84 E84401                  		call	CHECK_QUESTION
  7188 00002E87 7305                    		jnb	short norm_GETPATH
  7189 00002E89 8026[3A0D]80            		and	byte [FastOpenFlg], 80h ; Fast_yes
  7190                                  
  7191                                  norm_GETPATH:				; ...
  7192 00002E8E E8E011                  		call	GETPATH
  7193 00002E91 7319                    		jnb	short find_check_dev
  7194 00002E93 7512                    		jnz	short bad_path3
  7195 00002E95 08C9                    		or	cl, cl
  7196 00002E97 740E                    		jz	short bad_path3
  7197                                  
  7198                                  find_no_more:				; ...
  7199 00002E99 B81200                  		mov	ax, 12h		; error_no_more_files
  7200                                  
  7201                                  BadBye:					; ...
  7202 00002E9C 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  7203 00002EA2 F9                      		stc
  7204 00002EA3 E8D0E4                  		call	LCritDisk
  7205 00002EA6 C3                      		retn
  7206                                  ; ---------------------------------------------------------------------------
  7207                                  
  7208                                  bad_path3:				; ...
  7209 00002EA7 B80300                  		mov	ax, 3
  7210 00002EAA EBF0                    		jmp	short BadBye
  7211                                  ; ---------------------------------------------------------------------------
  7212                                  
  7213                                  find_check_dev:				; ...
  7214 00002EAC 08E4                    		or	ah, ah
  7215 00002EAE 790A                    		jns	short found_entry
  7216 00002EB0 C706[4803]FFFF          		mov	word [LASTENT], 0FFFFh ; -1
  7217 00002EB6 FE06[7005]              		inc	byte [FOUND_DEV]
  7218                                  
  7219                                  found_entry:				; ...
  7220 00002EBA C43E[2C03]              		les	di, [DMAADD]
  7221 00002EBE 8B36[B205]              		mov	si, [WFP_START]
  7222 00002EC2 AC                      		lodsb
  7223 00002EC3 2C40                    		sub	al, 40h		; 'A'-1
  7224 00002EC5 AA                      		stosb
  7225                                  
  7226                                  found_it:				; ...
  7227 00002EC6 C43E[2C03]              		les	di, [DMAADD]
  7228 00002ECA 47                      		inc	di
  7229 00002ECB 1E                      		push	ds
  7230 00002ECC F606[3A0D]10            		test	byte [FastOpenFlg], 10h ; Set_For_Search
  7231 00002ED1 7408                    		jz	short notfast
  7232 00002ED3 89DE                    		mov	si, bx
  7233 00002ED5 8E1E[E405]              		mov	ds, word [CURBUF+2]
  7234 00002ED9 EB03                    		jmp	short movmov
  7235                                  ; ---------------------------------------------------------------------------
  7236                                  
  7237                                  notfast:				; ...
  7238 00002EDB BE[4B05]                		mov	si, NAME1
  7239                                  
  7240                                  movmov:					; ...
  7241 00002EDE A4                      		movsb
  7242 00002EDF 26807DFF05              		cmp	byte [es:di-1], 5
  7243 00002EE4 7505                    		jnz	short NOTKANJB
  7244 00002EE6 26C645FFE5              		mov	byte [es:di-1], 0E5h
  7245                                  
  7246                                  NOTKANJB:				; ...
  7247 00002EEB B90A00                  		mov	cx, 10
  7248 00002EEE F3A4                    		rep movsb
  7249 00002EF0 1F                      		pop	ds
  7250 00002EF1 A0[6B05]                		mov	al, [ATTRIB]
  7251 00002EF4 AA                      		stosb
  7252 00002EF5 50                      		push	ax
  7253 00002EF6 A1[4803]                		mov	ax, [LASTENT]
  7254 00002EF9 AB                      		stosw
  7255 00002EFA A1[C205]                		mov	ax, [DIRSTART]
  7256 00002EFD AB                      		stosw
  7257 00002EFE 83C704                  		add	di, 4
  7258 00002F01 58                      		pop	ax
  7259 00002F02 08E4                    		or	ah, ah
  7260 00002F04 781B                    		js	short DOSREL
  7261 00002F06 833E[E205]FF            		cmp	word [CURBUF], -1 ; 0FFFFh
  7262 00002F0B 7510                    		jnz	short OKSTORE
  7263 00002F0D F606[3A0D]10            		test	byte [FastOpenFlg], 10h ; Set_For_Search
  7264 00002F12 7509                    		jnz	short OKSTORE
  7265 00002F14 26C745F8FFFF            		mov	word [es:di-8], 0FFFFh ; -1
  7266 00002F1A E97CFF                  		jmp	find_no_more
  7267                                  ; ---------------------------------------------------------------------------
  7268                                  
  7269                                  OKSTORE:				; ...
  7270 00002F1D 8E1E[E405]              		mov	ds, word [CURBUF+2]
  7271                                  
  7272                                  DOSREL:					; ...
  7273 00002F21 89DE                    		mov	si, bx
  7274 00002F23 B92000                  		mov	cx, 32		; dir_entry.size
  7275 00002F26 89F8                    		mov	ax, di
  7276 00002F28 F3A4                    		rep movsb
  7277 00002F2A 89C7                    		mov	di, ax
  7278 00002F2C 26803D05                		cmp	byte [es:di], 5
  7279 00002F30 7504                    		jnz	short NO05
  7280 00002F32 26C605E5                		mov	byte [es:di], 0E5h
  7281                                  
  7282                                  NO05:					; ...
  7283 00002F36 368026[3A0D]80          		and	byte [ss:FastOpenFlg], 80h ; Fast_yes
  7284 00002F3C 16                      		push	ss
  7285 00002F3D 1F                      		pop	ds
  7286 00002F3E F8                      		clc
  7287 00002F3F E834E4                  		call	LCritDisk
  7288 00002F42 C3                      		retn
  7289                                  
  7290                                  ; =============== S U B	R O U T	I N E =======================================
  7291                                  
  7292                                  DOS_SEARCH_NEXT:
  7293 00002F43 C43E[2C03]              		les	di, [DMAADD]
  7294 00002F47 268A05                  		mov	al, [es:di]
  7295 00002F4A A880                    		test	al, 80h
  7296 00002F4C 7406                    		jz	short LOCAL_SEARCH_NEXT
  7297 00002F4E B81C11                  		mov	ax, 111Ch
  7298 00002F51 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - FINDNEXT
  7299                                  					; SS = DS = DOS	CS, [DTA] = 21-byte findfirst search data
  7300                                  					; Return: CF set on error, AX =	DOS error code
  7301                                  					; CF clear if successful
  7302 00002F53 C3                      		retn
  7303                                  ; ---------------------------------------------------------------------------
  7304                                  
  7305                                  LOCAL_SEARCH_NEXT:			; ...
  7306 00002F54 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  7307 00002F59 E8FAE3                  		call	ECritDisk
  7308 00002F5C C706[A205][F304]        		mov	word [THISCDS], DUMMYCDS
  7309 00002F62 8C1E[A405]              		mov	word [THISCDS+2], ds
  7310 00002F66 0440                    		add	al, 40h		; 'A'-1
  7311 00002F68 E8623C                  		call	InitCDS
  7312 00002F6B 7236                    		jb	short No_files
  7313 00002F6D C43E[A205]              		les	di, [THISCDS]
  7314 00002F71 26C46D45                		les	bp, [es:di+45h]	; [ES:DI+curdir.devptr]
  7315 00002F75 E893D6                  		call	GOTDPB
  7316 00002F78 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
  7317 00002F7C A2[7605]                		mov	[THISDRV], al
  7318 00002F7F C706[7E05]00E5          		mov	word [CREATING], 0E500h ; (DIRFREE*256)+0
  7319 00002F85 C606[4C03]01            		mov	byte [NoSetDir], 1
  7320 00002F8A C536[2C03]              		lds	si, [DMAADD]
  7321 00002F8E AC                      		lodsb
  7322                                  
  7323                                  RENAME_NEXT:				; ...
  7324 00002F8F 16                      		push	ss
  7325 00002F90 07                      		pop	es
  7326 00002F91 BF[4B05]                		mov	di, NAME1
  7327 00002F94 B90B00                  		mov	cx, 11
  7328 00002F97 F3A4                    		rep movsb
  7329 00002F99 AC                      		lodsb
  7330 00002F9A 36A2[6B05]              		mov	[ss:ATTRIB], al
  7331 00002F9E AD                      		lodsw
  7332 00002F9F 09C0                    		or	ax, ax
  7333 00002FA1 7903                    		jns	short cont_load
  7334                                  
  7335                                  No_files:				; ...
  7336 00002FA3 E9F3FE                  		jmp	find_no_more
  7337                                  ; ---------------------------------------------------------------------------
  7338                                  
  7339                                  cont_load:				; ...
  7340 00002FA6 50                      		push	ax
  7341 00002FA7 AD                      		lodsw
  7342 00002FA8 89C3                    		mov	bx, ax
  7343 00002FAA 16                      		push	ss
  7344 00002FAB 1F                      		pop	ds
  7345 00002FAC C42E[8A05]              		les	bp, [THISDPB]
  7346 00002FB0 E85910                  		call	SETDIRSRCH
  7347 00002FB3 7303                    		jnb	short SEARCH_GOON
  7348 00002FB5 58                      		pop	ax
  7349 00002FB6 EBEB                    		jmp	short No_files
  7350                                  ; ---------------------------------------------------------------------------
  7351                                  
  7352                                  SEARCH_GOON:				; ...
  7353 00002FB8 E86113                  		call	STARTSRCH
  7354 00002FBB 58                      		pop	ax
  7355 00002FBC E81E10                  		call	GETENT
  7356 00002FBF 72E2                    		jb	short No_files
  7357 00002FC1 E84D0F                  		call	NEXTENT
  7358 00002FC4 72DD                    		jb	short No_files
  7359 00002FC6 30E4                    		xor	ah, ah
  7360 00002FC8 E9FBFE                  		jmp	found_it
  7361                                  
  7362                                  ; =============== S U B	R O U T	I N E =======================================
  7363                                  
  7364                                  CHECK_QUESTION:	; ...
  7365 00002FCB 16                      		push	ss
  7366 00002FCC 1F                      		pop	ds
  7367 00002FCD 368B36[B205]            		mov	si, [ss:WFP_START]
  7368                                  
  7369                                  getnext:				; ...
  7370 00002FD2 AC                      		lodsb
  7371 00002FD3 08C0                    		or	al, al
  7372 00002FD5 7405                    		jz	short NO_Question
  7373 00002FD7 3C3F                    		cmp	al, '?'
  7374 00002FD9 75F7                    		jnz	short getnext
  7375 00002FDB F9                      		stc
  7376                                  
  7377                                  NO_Question:				; ...
  7378 00002FDC C3                      		retn
  7379                                  
  7380                                  ; =============== S U B	R O U T	I N E =======================================
  7381                                  
  7382                                  DOS_ABORT:		; ...
  7383 00002FDD 368E06[3003]            		mov	es, [ss:CurrentPDB]
  7384 00002FE2 268B0E3200              		mov	cx, [es:32h]	; [ES:PDB.JFN_Length]
  7385                                  
  7386                                  reset_free_jfn:				; ...
  7387 00002FE7 89CB                    		mov	bx, cx
  7388 00002FE9 51                      		push	cx
  7389 00002FEA 4B                      		dec	bx
  7390 00002FEB E80D39                  		call	_$CLOSE
  7391 00002FEE 59                      		pop	cx
  7392 00002FEF E2F6                    		loop	reset_free_jfn
  7393 00002FF1 16                      		push	ss
  7394 00002FF2 1F                      		pop	ds
  7395 00002FF3 B81D11                  		mov	ax, 111Dh	; Net_Abort, MultNET, 29
  7396 00002FF6 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CLOSE ALL REMOTE FILES FOR PROCESS
  7397                                  					; DS???, SS = DOS CS
  7398                                  		;call	dword [MFTCloseP] ; call far [JShare+(4*4)]
  7399 00002FF8 FF1E[A000]              		call	far [JShare+(4*4)]
  7400 00002FFC 36C43E[4000]            		les	di, [ss:SFTFCB]
  7401 00003001 268B4D04                		mov	cx, [es:di+4]	; [es:di+SFT.SFCount]
  7402 00003005 E317                    		jcxz	FCBScanDone
  7403 00003007 8D7D06                  		lea	di, [di+6]	; [DI+SFT.SFTable]
  7404 0000300A 36A1[3C03]              		mov	ax, [ss:PROC_ID]
  7405                                  
  7406                                  FCBTest:				; ...
  7407 0000300E 26394531                		cmp	[es:di+31h], ax	; [es:di+SF_ENTRY.sf_PID]
  7408 00003012 7505                    		jnz	short FCBNext
  7409 00003014 26C7050000              		mov	word [es:di], 0 ; [es:di+SF_ENTRY.sf_ref_count]
  7410                                  
  7411                                  FCBNext:				; ...
  7412 00003019 83C73B                  		add	di, 3Bh	; ';'
  7413 0000301C E2F0                    		loop	FCBTest
  7414                                  
  7415                                  FCBScanDone:				; ...
  7416 0000301E 31DB                    		xor	bx, bx
  7417                                  
  7418                                  Scan:					; ...
  7419 00003020 53                      		push	bx
  7420 00003021 E85038                  		call	SFFromSFN
  7421 00003024 5B                      		pop	bx
  7422 00003025 7301                    		jnb	short Scan1
  7423 00003027 C3                      		retn
  7424                                  ; ---------------------------------------------------------------------------
  7425                                  
  7426                                  Scan1:					; ...
  7427 00003028 26833DFF                		cmp	word [es:di], 0FFFFh ; [es:di+SF_ENTRY.sf_ref_count],
  7428                                  					; sf_busy
  7429 0000302C 7519                    		jnz	short scan_next
  7430 0000302E 36A1[3C03]              		mov	ax, [ss:PROC_ID]
  7431 00003032 26394531                		cmp	[es:di+31h], ax	; [es:di+SF_ENTRY.sf_PID]
  7432 00003036 750F                    		jnz	short scan_next
  7433 00003038 36A1[3E03]              		mov	ax, [ss:USER_ID]
  7434 0000303C 2639452F                		cmp	[es:di+2Fh], ax	; [es:di+SF_ENTRY.sf_UID]
  7435 00003040 7505                    		jnz	short scan_next
  7436 00003042 26C7050000              		mov	word [es:di], 0 ; [es:di+SF_ENTRY.sf_ref_count]
  7437                                  
  7438                                  scan_next:				; ...
  7439 00003047 43                      		inc	bx
  7440 00003048 EBD6                    		jmp	short Scan
  7441                                  
  7442                                  ; =============== S U B	R O U T	I N E =======================================
  7443                                  
  7444                                  DOS_CLOSE:		; ...
  7445 0000304A C43E[9E05]              		les	di, [THISSFT]
  7446 0000304E 268B5D05                		mov	bx, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  7447 00003052 F7C30080                		test	bx, 8000h	; sf_isnet
  7448 00003056 7406                    		jz	short LocalClose
  7449 00003058 B80611                  		mov	ax, 1106h
  7450 0000305B CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CLOSE REMOTE	FILE
  7451                                  					; ES:DI	-> SFT
  7452                                  					; SFT DPB field	-> DPB of drive	containing file
  7453                                  					; Return: CF set on error, AX =	DOS error code
  7454                                  					; CF clear if successful
  7455 0000305D C3                      		retn
  7456                                  ; ---------------------------------------------------------------------------
  7457                                  
  7458                                  LocalClose:				; ...
  7459 0000305E E8F5E2                  		call	ECritDisk
  7460 00003061 E87001                  		call	SetSFTTimes
  7461 00003064 E8E400                  		call	FREE_SFT
  7462 00003067 16                      		push	ss
  7463 00003068 1F                      		pop	ds
  7464 00003069 50                      		push	ax
  7465 0000306A 53                      		push	bx
  7466 0000306B E81545                  		call	ShareEnd
  7467 0000306E 5B                      		pop	bx
  7468 0000306F 58                      		pop	ax
  7469                                  
  7470                                  CloseEntry:				; ...
  7471 00003070 50                      		push	ax
  7472 00003071 F7C3C000                		test	bx, 0C0h	; devid_file_clean+devid_device
  7473 00003075 7403                    		jz	short rdir
  7474 00003077 E9BE00                  		jmp	FREE_SFT_OK
  7475                                  ; ---------------------------------------------------------------------------
  7476                                  
  7477                                  rdir:					; ...
  7478 0000307A E8DB00                  		call	DirFromSFT
  7479 0000307D B005                    		mov	al, 5		; error_access_denied
  7480 0000307F 7303                    		jnb	short clook
  7481 00003081 E9B500                  		jmp	CloseFinish
  7482                                  ; ---------------------------------------------------------------------------
  7483                                  
  7484                                  clook:					; ...
  7485 00003084 57                      		push	di
  7486 00003085 56                      		push	si
  7487 00003086 8D7420                  		lea	si, [si+20h]	; [SI+SF_ENTRY.sf_name]
  7488 00003089 E8B9E1                  		call	XCHGP
  7489 0000308C E8E00E                  		call	MetaCompare
  7490 0000308F E8B3E1                  		call	XCHGP
  7491 00003092 5E                      		pop	si
  7492 00003093 5F                      		pop	di
  7493 00003094 740C                    		jz	short CLOSE_GO
  7494 00003096 89F7                    		mov	di, si
  7495 00003098 1E                      		push	ds
  7496 00003099 07                      		pop	es
  7497 0000309A 16                      		push	ss
  7498 0000309B 1F                      		pop	ds
  7499 0000309C F9                      		stc
  7500 0000309D B002                    		mov	al, 2
  7501 0000309F E99700                  		jmp	CloseFinish
  7502                                  ; ---------------------------------------------------------------------------
  7503                                  
  7504                                  CLOSE_GO:				; ...
  7505 000030A2 F744020080              		test	word [si+2], 8000h ; [SI+SF_ENTRY.sf_mode],
  7506                                  					; sf_isFCB
  7507 000030A7 740D                    		jz	short nofcb
  7508 000030A9 268A6D0B                		mov	ch, [es:di+0Bh]	; [ES:DI+dir_entry.dir_attr]
  7509 000030AD 8A4404                  		mov	al, [si+4]	; [SI+SF_ENTRY.sf_attr]
  7510 000030B0 36A2[6B05]              		mov	[ss:ATTRIB], al
  7511 000030B4 EB07                    		jmp	short setattr
  7512                                  ; ---------------------------------------------------------------------------
  7513                                  
  7514                                  nofcb:					; ...
  7515 000030B6 8A4404                  		mov	al, [si+4]	; [SI+SF_ENTRY.sf_attr]
  7516 000030B9 2688450B                		mov	[es:di+0Bh], al	; [ES:DI+dir_entry.dir_attr]
  7517                                  
  7518                                  setattr:				; ...
  7519 000030BD 26804D0B20              		or	byte [es:di+0Bh], 20h ; [ES:DI+dir_entry.dir_attr],
  7520                                  					; attr_archive
  7521 000030C2 268B451A                		mov	ax, [es:di+1Ah]	; [ES:DI+dir_entry.dir_first]
  7522 000030C6 36A3[BE0F]              		mov	[ss:OLD_FIRSTCLUS], ax
  7523 000030CA 8B440B                  		mov	ax, [si+0Bh]	; [SI+SF_ENTRY.sf_firclus]
  7524 000030CD 2689451A                		mov	[es:di+1Ah], ax	; [ES:DI+dir_entry.dir_first]
  7525 000030D1 8B4411                  		mov	ax, [si+11h]	; [SI+SF_ENTRY.sf_size]
  7526 000030D4 2689451C                		mov	[es:di+1Ch], ax	; [ES:DI+dir_entry.dir_size_l]
  7527 000030D8 8B4413                  		mov	ax, [si+13h]	; [SI+SF_ENTRY.sf_size+2]
  7528 000030DB 2689451E                		mov	[es:di+1Eh], ax	; [ES:DI+dir_entry.dir_size_h]
  7529 000030DF 8B440F                  		mov	ax, [si+0Fh]	; [SI+SF_ENTRY.sf_date]
  7530 000030E2 26894518                		mov	[es:di+18h], ax	; [ES:DI+dir_entry.dir_date]
  7531 000030E6 8B440D                  		mov	ax, [si+0Dh]	; [SI+SF_ENTRY.sf_time]
  7532 000030E9 26894516                		mov	[es:di+16h], ax	; [ES:DI+dir_entry.dir_time]
  7533 000030ED 26F6470540              		test	byte [es:bx+5], 40h	; [ES:BX+BUFFINFO.buf_flags],
  7534                                  					; buf_dirty
  7535 000030F2 7508                    		jnz	short yesdirty4
  7536 000030F4 E81F2C                  		call	INC_DIRTY_COUNT
  7537 000030F7 26804F0540              		or	byte [es:bx+5], 40h	; [ES:BX+BUFFINFO.buf_flags],
  7538                                  					; buf_dirty
  7539                                  
  7540                                  yesdirty4:				; ...
  7541 000030FC 1E                      		push	ds
  7542 000030FD 56                      		push	si
  7543 000030FE 8B4C0B                  		mov	cx, [si+0Bh]	; [SF_ENTRY.sf_firclus]
  7544 00003101 36A0[7605]              		mov	al, [ss:THISDRV]
  7545 00003105 52                      		push	dx
  7546 00003106 B400                    		mov	ah, 0
  7547 00003108 88C2                    		mov	dl, al
  7548 0000310A 09C9                    		or	cx, cx
  7549 0000310C 750D                    		jnz	short do_update2
  7550 0000310E B403                    		mov	ah, 3
  7551 00003110 8B7C1B                  		mov	di, [si+1Bh]	; [SI+SF_ENTRY.sf_dirsec]
  7552 00003113 8B4C1D                  		mov	cx, [si+1Dh]	; [SI+SF_ENTRY.sf_dirsec+2]
  7553 00003116 8A741F                  		mov	dh, [si+1Fh]	; [SI+SF_ENTRY.sf_dirpos]
  7554 00003119 EB0E                    		jmp	short do_update
  7555                                  ; ---------------------------------------------------------------------------
  7556                                  
  7557                                  do_update2:				; ...
  7558 0000311B 363B0E[BE0F]            		cmp	cx, [ss:OLD_FIRSTCLUS]
  7559 00003120 7407                    		jz	short do_update
  7560 00003122 B402                    		mov	ah, 2
  7561 00003124 368B0E[BE0F]            		mov	cx, [ss:OLD_FIRSTCLUS]
  7562                                  
  7563                                  do_update:				; ...
  7564 00003129 16                      		push	ss
  7565 0000312A 1F                      		pop	ds
  7566 0000312B E8BCF6                  		call	FastOpen_Update
  7567 0000312E 5A                      		pop	dx
  7568 0000312F E8D82A                  		call	FLUSHBUF
  7569 00003132 5F                      		pop	di
  7570 00003133 07                      		pop	es
  7571 00003134 B005                    		mov	al, 5		; error_access_denied
  7572 00003136 7201                    		jb	short CloseFinish
  7573                                  
  7574                                  FREE_SFT_OK:				; ...
  7575 00003138 F8                      		clc
  7576                                  
  7577                                  CloseFinish:				; ...
  7578 00003139 9C                      		pushf
  7579 0000313A E82916                  		call	DEV_CLOSE_SFT
  7580 0000313D 9D                      		popf
  7581 0000313E 59                      		pop	cx
  7582 0000313F 9C                      		pushf
  7583 00003140 49                      		dec	cx
  7584 00003141 7503                    		jnz	short NoFree
  7585 00003143 26890D                  		mov	[es:di], cx	; [ES:DI+SF_ENTRY.sf_ref_Count]
  7586                                  
  7587                                  NoFree:					; ...
  7588 00003146 E82DE2                  		call	LCritDisk
  7589 00003149 9D                      		popf
  7590 0000314A C3                      		retn
  7591                                  
  7592                                  ; =============== S U B	R O U T	I N E =======================================
  7593                                  
  7594                                  FREE_SFT:		; ...
  7595 0000314B 9C                      		pushf
  7596 0000314C 268B05                  		mov	ax, [es:di]	; [ES:DI+SF_ENTRY.sf_ref_count]
  7597 0000314F 48                      		dec	ax
  7598 00003150 7501                    		jnz	short SetCount
  7599 00003152 48                      		dec	ax
  7600                                  
  7601                                  SetCount:				; ...
  7602 00003153 268705                  		xchg	ax, [es:di]	; [ES:DI+SF_ENTRY.sf_ref_count]
  7603 00003156 9D                      		popf
  7604 00003157 C3                      		retn
  7605                                  
  7606                                  ; =============== S U B	R O U T	I N E =======================================
  7607                                  
  7608                                  DirFromSFT:		; ...
  7609 00003158 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  7610 0000315D 06                      		push	es
  7611 0000315E 57                      		push	di
  7612 0000315F 268B551D                		mov	dx, [es:di+1Dh]	; [ES:DI+SF_ENTRY.sf_dirsec+2]
  7613 00003163 8916[0706]              		mov	word [HIGH_SECTOR], dx
  7614 00003167 268B551B                		mov	dx, [es:di+1Bh]	; [ES:DI+SF_ENTRY.sf_dirsec]
  7615 0000316B FF36[0706]              		push	word [HIGH_SECTOR]
  7616 0000316F 52                      		push	dx
  7617 00003170 E81427                  		call	FATREAD_SFT
  7618 00003173 5A                      		pop	dx
  7619 00003174 8F06[0706]              		pop	word [HIGH_SECTOR]
  7620 00003178 7225                    		jb	short PopDone
  7621 0000317A 30C0                    		xor	al, al
  7622 0000317C C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
  7623 00003181 E88729                  		call	GETBUFFR
  7624 00003184 7219                    		jb	short PopDone
  7625 00003186 5E                      		pop	si
  7626 00003187 1F                      		pop	ds
  7627 00003188 36C43E[E205]            		les	di, [ss:CURBUF]
  7628 0000318D 26804D0504              		or	byte [es:di+5], 4
  7629 00003192 89FB                    		mov	bx, di
  7630 00003194 8D7D14                  		lea	di, [di+14h]
  7631 00003197 B020                    		mov	al, 20h	; ' '
  7632 00003199 F6641F                  		mul	byte [si+1Fh]
  7633 0000319C 01C7                    		add	di, ax
  7634 0000319E C3                      		retn
  7635                                  ; ---------------------------------------------------------------------------
  7636                                  
  7637                                  PopDone:				; ...
  7638 0000319F 5F                      		pop	di
  7639 000031A0 07                      		pop	es
  7640                                  
  7641                                  PopDone_retn:				; ...
  7642 000031A1 C3                      		retn
  7643                                  
  7644                                  ; =============== S U B	R O U T	I N E =======================================
  7645                                  
  7646                                  DOS_COMMIT:		; ...
  7647 000031A2 C43E[9E05]              		les	di, [THISSFT]
  7648 000031A6 268B5D05                		mov	bx, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  7649 000031AA F7C3C000                		test	bx, 0C0h	; devid_file_clean+devid_device
  7650 000031AE 75F1                    		jnz	short PopDone_retn
  7651 000031B0 F7C30080                		test	bx, 8000h	; sf_isnet
  7652 000031B4 7406                    		jz	short LOCAL_COMMIT
  7653 000031B6 B80711                  		mov	ax, 1107h
  7654 000031B9 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - COMMIT REMOTE FILE
  7655                                  					; ES:DI	-> SFT
  7656                                  					; SFT DPB field	-> DPB of drive	containing file
  7657                                  					; Return: CF set on error, AX =	DOS error code
  7658                                  					; CF clear if successful
  7659 000031BB C3                      		retn
  7660                                  ; ---------------------------------------------------------------------------
  7661                                  
  7662                                  LOCAL_COMMIT:				; ...
  7663 000031BC E897E1                  		call	ECritDisk
  7664 000031BF E894E1                  		call	ECritDisk
  7665 000031C2 E80F00                  		call	SetSFTTimes
  7666 000031C5 B8FFFF                  		mov	ax, -1
  7667 000031C8 E8A5FE                  		call	CloseEntry
  7668 000031CB 9C                      		pushf
  7669 000031CC E88F15                  		call	DEV_OPEN_SFT
  7670 000031CF 9D                      		popf
  7671 000031D0 E8A3E1                  		call	LCritDisk
  7672                                  
  7673                                  localcommit_retn:			; ...
  7674 000031D3 C3                      		retn
  7675                                  
  7676                                  ; =============== S U B	R O U T	I N E =======================================
  7677                                  
  7678                                  SetSFTTimes:	; ...
  7679 000031D4 F7C3C000                		test	bx, 0C0h	; devid_file_clean+devid_device
  7680 000031D8 75F9                    		jnz	short localcommit_retn
  7681 000031DA F7C30040                		test	bx, 4000h	; sf_close_nodate
  7682 000031DE 75F3                    		jnz	short localcommit_retn
  7683 000031E0 50                      		push	ax
  7684 000031E1 53                      		push	bx
  7685 000031E2 E80CD9                  		call	DATE16
  7686 000031E5 2689450F                		mov	[es:di+0Fh], ax	; [ES:DI+SF_ENTRY.sf_date]
  7687 000031E9 2689550D                		mov	[es:di+0Dh], dx	; [ES:DI+SF_ENTRY.sf_time]
  7688 000031ED 31C0                    		xor	ax, ax
  7689                                  		;call	dword [ShSU] ; call far [JShare+(14*4)]
  7690 000031EF FF1E[C800]              		call	far [JShare+(14*4)]
  7691 000031F3 5B                      		pop	bx
  7692 000031F4 58                      		pop	ax
  7693 000031F5 C3                      		retn
  7694                                  
  7695                                  ; ---------------------------------------------------------------------------
  7696                                  
  7697                                  DOS_MKDIR:				; ...
  7698 000031F6 E898E0                  		call	TestNet
  7699 000031F9 7314                    		jnb	short LOCAL_MKDIR
  7700 000031FB B80311                  		mov	ax, 1103h
  7701 000031FE CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - MAKE	REMOTE DIRECTORY
  7702                                  					; SS = DOS CS
  7703                                  					; SDA first filename pointer ->	fully-qualified	directory name
  7704                                  					; SDA CDS pointer -> current directory
  7705                                  					; Return: CF set on error, AX =	DOS error code
  7706                                  					; CF clear if successful
  7707 00003200 C3                      		retn
  7708                                  ; ---------------------------------------------------------------------------
  7709                                  ; START	OF FUNCTION CHUNK FOR DOS_CHDIR
  7710                                  
  7711                                  NODEACCERRJ:				; ...
  7712 00003201 B80500                  		mov	ax, 5		; error_access_denied
  7713                                  
  7714                                  _BadRet:				; ...
  7715 00003204 F9                      		stc
  7716 00003205 E86EE1                  		call	LCritDisk
  7717 00003208 C3                      		retn
  7718                                  ; END OF FUNCTION CHUNK	FOR DOS_CHDIR
  7719                                  ; ---------------------------------------------------------------------------
  7720                                  
  7721                                  PATHNFJ:				; ...
  7722 00003209 E86AE1                  		call	LCritDisk
  7723 0000320C E9CAF9                  		jmp	SET_MKND_ERR
  7724                                  ; ---------------------------------------------------------------------------
  7725                                  
  7726                                  LOCAL_MKDIR:				; ...
  7727 0000320F E844E1                  		call	ECritDisk
  7728 00003212 8C16[A005]              		mov	word [THISSFT+2], ss
  7729 00003216 C706[9E05][3E04]        		mov	word [THISSFT], RENBUF
  7730 0000321C C706[7104]0000          		mov	word [RENBUF+33h], 0 ; [RENBUF+SF_ENTRY.sf_MFT]
  7731 00003222 B010                    		mov	al, 10h		; attr_directory
  7732 00003224 E8F318                  		call	MakeNode
  7733 00003227 72E0                    		jb	short PATHNFJ
  7734 00003229 83F803                  		cmp	ax, 3
  7735 0000322C 74D3                    		jz	short NODEACCERRJ
  7736 0000322E C42E[8A05]              		les	bp, [THISDPB]
  7737 00003232 C53E[E205]              		lds	di, [CURBUF]
  7738 00003236 29FE                    		sub	si, di
  7739 00003238 56                      		push	si
  7740 00003239 FF7508                  		push	word [di+8]	; [DI+BUFFINFO.buf_sector+2]
  7741 0000323C FF7506                  		push	word [di+6]	; [DI+BUFFINFO.buf_sector]
  7742 0000323F 16                      		push	ss
  7743 00003240 1F                      		pop	ds
  7744 00003241 FF36[C205]              		push	word [DIRSTART]
  7745 00003245 31C0                    		xor	ax, ax
  7746 00003247 A3[C205]                		mov	[DIRSTART], ax
  7747 0000324A E80018                  		call	NEWDIR
  7748 0000324D 7277                    		jb	short NODEEXISTSPOPDEL
  7749 0000324F E88B0D                  		call	GETENT
  7750 00003252 7272                    		jb	short NODEEXISTSPOPDEL
  7751 00003254 C43E[E205]              		les	di, [CURBUF]
  7752 00003258 26F6450540              		test	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],
  7753                                  					; buf_dirty
  7754 0000325D 7508                    		jnz	short yesdirty5
  7755 0000325F E8B42A                  		call	INC_DIRTY_COUNT
  7756 00003262 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+BUFFINFO.buf_flags],buf_dirty
  7757                                  
  7758                                  yesdirty5:				; ...
  7759 00003267 83C714                  		add	di, 20		; BUFINSIZ
  7760 0000326A B82E20                  		mov	ax, 202Eh	; ". "
  7761 0000326D 8B16[C205]              		mov	dx, [DIRSTART]
  7762 00003271 E88218                  		call	SETDOTENT
  7763 00003274 B82E2E                  		mov	ax, 2E2Eh	; ".."
  7764 00003277 5A                      		pop	dx
  7765 00003278 E87B18                  		call	SETDOTENT
  7766 0000327B C42E[8A05]              		les	bp, [THISDPB]
  7767 0000327F C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
  7768 00003284 5A                      		pop	dx
  7769 00003285 8F06[0706]              		pop	word [HIGH_SECTOR]
  7770 00003289 30C0                    		xor	al, al
  7771 0000328B E87D28                  		call	GETBUFFR
  7772 0000328E 7263                    		jb	short NODEEXISTSP
  7773 00003290 8B16[C205]              		mov	dx, [DIRSTART]
  7774 00003294 C53E[E205]              		lds	di, [CURBUF]
  7775 00003298 804D0504                		or	byte [di+5], 4
  7776 0000329C 5E                      		pop	si
  7777 0000329D 01FE                    		add	si, di
  7778 0000329F 8914                    		mov	[si], dx
  7779 000032A1 31D2                    		xor	dx, dx
  7780 000032A3 895402                  		mov	[si+2],	dx
  7781 000032A6 895404                  		mov	[si+4],	dx
  7782                                  
  7783                                  ; =============== S U B	R O U T	I N E =======================================
  7784                                  
  7785                                  DIRUP:		; ...
  7786 000032A9 F6450540                		test	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
  7787 000032AD 7507                    		jnz	short yesdirty6
  7788 000032AF E8642A                  		call	INC_DIRTY_COUNT
  7789 000032B2 804D0540                		or	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
  7790                                  
  7791                                  yesdirty6:				; ...
  7792 000032B6 16                      		push	ss
  7793 000032B7 1F                      		pop	ds
  7794 000032B8 268A4600                		mov	al, [es:bp+0]
  7795 000032BC E84B29                  		call	FLUSHBUF
  7796 000032BF B80500                  		mov	ax, 5
  7797 000032C2 E8B1E0                  		call	LCritDisk
  7798 000032C5 C3                      		retn
  7799                                  
  7800                                  ; ---------------------------------------------------------------------------
  7801                                  
  7802                                  NODEEXISTSPOPDEL:			; ...
  7803 000032C6 5A                      		pop	dx
  7804 000032C7 5A                      		pop	dx
  7805 000032C8 8F06[0706]              		pop	word [HIGH_SECTOR]
  7806 000032CC C42E[8A05]              		les	bp, [THISDPB]
  7807 000032D0 C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
  7808 000032D5 30C0                    		xor	al, al
  7809 000032D7 E83128                  		call	GETBUFFR
  7810 000032DA 7217                    		jb	short NODEEXISTSP
  7811 000032DC C53EE205                		lds	di, [5E2h]
  7812 000032E0 804D0504                		or	byte [di+5], 4
  7813 000032E4 5E                      		pop	si
  7814 000032E5 01FE                    		add	si, di
  7815 000032E7 83EE1A                  		sub	si, 1Ah
  7816 000032EA C604E5                  		mov	byte [si], 0E5h
  7817 000032ED E8B9FF                  		call	DIRUP
  7818                                  
  7819                                  NODEEXISTS:				; ...
  7820 000032F0 E90EFF                  		jmp	NODEACCERRJ
  7821                                  ; ---------------------------------------------------------------------------
  7822                                  
  7823                                  NODEEXISTSP:				; ...
  7824 000032F3 5E                      		pop	si
  7825 000032F4 EBFA                    		jmp	short NODEEXISTS
  7826                                  
  7827                                  ; =============== S U B	R O U T	I N E =======================================
  7828                                  
  7829                                  DOS_CHDIR:		; ...
  7830                                  
  7831                                  arg_7E		equ 80h
  7832                                  
  7833                                  ; FUNCTION CHUNK AT 6FD1 SIZE 00000008 BYTES
  7834                                  ; FUNCTION CHUNK AT 713D SIZE 00000003 BYTES
  7835                                  
  7836 000032F6 E898DF                  		call	TestNet
  7837 000032F9 7306                    		jnb	short LOCAL_CHDIR
  7838 000032FB B80511                  		mov	ax, 1105h
  7839 000032FE CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - CHDIR
  7840                                  					; SS = DOS CS
  7841                                  					; SDA first filename pointer ->	fully-qualified	directory name
  7842                                  					; SDA CDS pointer -> current directory
  7843                                  					; Return: CF set on error, AX =	DOS error code
  7844                                  					; CF clear if successful
  7845 00003300 C3                      		retn
  7846                                  ; ---------------------------------------------------------------------------
  7847                                  
  7848                                  LOCAL_CHDIR:				; ...
  7849 00003301 E852E0                  		call	ECritDisk
  7850 00003304 26F745430020            		test	word [es:di+43h], 2000h ; [ES:DI+curdir.flags],curdir_splice
  7851 0000330A 7406                    		jz	short nojoin
  7852 0000330C 26C74549FFFF            		mov	word [es:di+49h], 0FFFFh ; [ES:DI+curdir.ID]
  7853                                  
  7854                                  nojoin:					; ...
  7855 00003312 C606[4C03]00            		mov	byte [NoSetDir], 0
  7856 00003317 C606[6D05]16            		mov	byte [SATTRIB], 16h ; attr_directory+attr_system+attr_hidden
  7857 0000331C 800E[3A0D]01            		or	byte [FastOpenFlg], 1 ; FastOpen_Set
  7858 00003321 E84D0D                  		call	GETPATH
  7859 00003324 9C                      		pushf
  7860 00003325 8026[3A0D]80            		and	byte [FastOpenFlg], 80h ; Fast_yes
  7861 0000332A 9D                      		popf
  7862 0000332B B80300                  		mov	ax, 3		; error_path_not_found
  7863 0000332E 7207                    		jb	short ChDirDone
  7864 00003330 753B                    		jnz	short NOTDIRPATH
  7865 00003332 8B0E[C205]              		mov	cx, [DIRSTART]
  7866 00003336 F8                      		clc
  7867                                  
  7868                                  ChDirDone:				; ...
  7869 00003337 E83CE0                  		call	LCritDisk
  7870 0000333A C3                      		retn
  7871                                  
  7872                                  ; ---------------------------------------------------------------------------
  7873                                  
  7874                                  DOS_RMDIR:				; ...
  7875 0000333B E853DF                  		call	TestNet
  7876 0000333E 7306                    		jnb	short LOCAL_RMDIR
  7877 00003340 B80111                  		mov	ax, 1101h
  7878 00003343 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - REMOVE REMOTE DIRECTORY
  7879                                  					; SS = DOS CS
  7880                                  					; SDA first filename pointer ->	fully-qualified	directory name
  7881                                  					; SDA CDS pointer -> current directory
  7882                                  					; Return: CF set on error, AX =	DOS error code
  7883                                  					; CF clear if successful
  7884 00003345 C3                      		retn
  7885                                  ; ---------------------------------------------------------------------------
  7886                                  
  7887                                  LOCAL_RMDIR:				; ...
  7888 00003346 E80DE0                  		call	ECritDisk
  7889 00003349 C606[4C03]00            		mov	byte [NoSetDir], 0
  7890 0000334E C606[6D05]16            		mov	byte [SATTRIB], 16h ; attr_directory+attr_system+attr_hidden
  7891 00003353 E81B0D                  		call	GETPATH
  7892 00003356 720C                    		jb	short NOPATH
  7893 00003358 7513                    		jnz	short NOTDIRPATH
  7894 0000335A 8B3E[C205]              		mov	di, [DIRSTART]
  7895 0000335E 09FF                    		or	di, di
  7896 00003360 750E                    		jnz	short rmdir_get_buf
  7897 00003362 EB09                    		jmp	short NOTDIRPATH
  7898                                  ; ---------------------------------------------------------------------------
  7899                                  
  7900                                  NOPATH:					; ...
  7901 00003364 B80300                  		mov	ax, 3		; error_path_not_found
  7902 00003367 E99AFE                  		jmp	_BadRet
  7903                                  ; ---------------------------------------------------------------------------
  7904                                  
  7905                                  NOTDIRPATHPOP:				; ...
  7906 0000336A 58                      		pop	ax
  7907 0000336B 58                      		pop	ax
  7908                                  
  7909                                  NOTDIRPATHPOP2:				; ...
  7910 0000336C 58                      		pop	ax
  7911                                  ; START	OF FUNCTION CHUNK FOR DOS_CHDIR
  7912                                  
  7913                                  NOTDIRPATH:				; ...
  7914 0000336D E991FE                  		jmp	NODEACCERRJ
  7915                                  ; END OF FUNCTION CHUNK	FOR DOS_CHDIR
  7916                                  ; ---------------------------------------------------------------------------
  7917                                  
  7918                                  rmdir_get_buf:				; ...
  7919 00003370 C53E[E205]              		lds	di, [CURBUF]
  7920 00003374 29FB                    		sub	bx, di
  7921 00003376 53                      		push	bx
  7922 00003377 FF7508                  		push	word [di+8]	; [DI+BUFFINFO.buf_sector+2]
  7923 0000337A FF7506                  		push	word [di+6]	; [DI+BUFFINFO.buf_sector]
  7924 0000337D 16                      		push	ss
  7925 0000337E 1F                      		pop	ds
  7926 0000337F 16                      		push	ss
  7927 00003380 07                      		pop	es
  7928 00003381 BF[4B05]                		mov	di, NAME1
  7929 00003384 B03F                    		mov	al, '?'
  7930 00003386 B90B00                  		mov	cx, 11
  7931 00003389 F3AA                    		rep stosb
  7932 0000338B 30C0                    		xor	al, al
  7933 0000338D AA                      		stosb
  7934 0000338E E88B0F                  		call	STARTSRCH
  7935 00003391 E8460C                  		call	GETENTRY
  7936 00003394 72D4                    		jb	short NOTDIRPATHPOP
  7937 00003396 8E1E[E405]              		mov	ds, word [CURBUF+2]
  7938 0000339A 89DE                    		mov	si, bx
  7939 0000339C AD                      		lodsw
  7940 0000339D 3D2E20                  		cmp	ax, 202Eh	; (' ' SHL 8) OR '.'
  7941 000033A0 75C8                    		jnz	short NOTDIRPATHPOP
  7942 000033A2 83C61E                  		add	si, 30		; dir_entry.size-2
  7943 000033A5 AD                      		lodsw
  7944 000033A6 3D2E2E                  		cmp	ax, 2E2Eh	; ('.' SHL 8) OR '.'
  7945 000033A9 75BF                    		jnz	short NOTDIRPATHPOP
  7946 000033AB 16                      		push	ss
  7947 000033AC 1F                      		pop	ds
  7948 000033AD C706[4803]0200          		mov	word [LASTENT], 2
  7949 000033B3 E8240C                  		call	GETENTRY
  7950 000033B6 72B2                    		jb	short NOTDIRPATHPOP
  7951 000033B8 C606[6B05]16            		mov	byte [ATTRIB], 16h ; attr_directory+attr_hidden+attr_system
  7952 000033BD E8170B                  		call	SRCH
  7953 000033C0 73A8                    		jnb	short NOTDIRPATHPOP
  7954 000033C2 803E[4A03]00            		cmp	byte [FAILERR], 0
  7955 000033C7 75A1                    		jnz	short NOTDIRPATHPOP
  7956 000033C9 C42E[8A05]              		les	bp, [THISDPB]
  7957 000033CD 8B1E[C205]              		mov	bx, [DIRSTART]
  7958 000033D1 E8951C                  		call	RELEASE
  7959 000033D4 7294                    		jb	short NOTDIRPATHPOP
  7960 000033D6 5A                      		pop	dx
  7961 000033D7 8F06[0706]              		pop	word [HIGH_SECTOR]
  7962 000033DB C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
  7963 000033E0 30C0                    		xor	al, al
  7964 000033E2 E82627                  		call	GETBUFFR
  7965 000033E5 7285                    		jb	short NOTDIRPATHPOP2
  7966 000033E7 C53EE205                		lds	di, [5E2h]
  7967 000033EB 804D0504                		or	byte [di+5], 4
  7968 000033EF 5B                      		pop	bx
  7969 000033F0 01FB                    		add	bx, di
  7970 000033F2 C607E5                  		mov	byte [bx], 0E5h
  7971 000033F5 1E                      		push	ds
  7972 000033F6 16                      		push	ss
  7973 000033F7 1F                      		pop	ds
  7974 000033F8 E8C0F3                  		call	FastOpen_Delete
  7975 000033FB 1F                      		pop	ds
  7976 000033FC E9AAFE                  		jmp	DIRUP
  7977                                  
  7978                                  ; =============== S U B	R O U T	I N E =======================================
  7979                                  
  7980                                  SWAPBACK:
  7981 000033FF C606[5703]00            		mov	byte [CONSWAP], 0
  7982 00003404 C3                      		retn
  7983                                  
  7984                                  ; =============== S U B	R O U T	I N E =======================================
  7985                                  
  7986                                  SWAPCON:
  7987 00003405 C606[5703]01            		mov	byte [CONSWAP], 1
  7988 0000340A 50                      		push	ax
  7989 0000340B A1[9E05]                		mov	ax, word [THISSFT]
  7990 0000340E A3[E605]                		mov	word [CONSFT], ax
  7991 00003411 A1[A005]                		mov	ax, word [THISSFT+2]
  7992 00003414 A3[E805]                		mov	word [CONSFT+2],	ax
  7993 00003417 58                      		pop	ax
  7994 00003418 C3                      		retn
  7995                                  
  7996                                  ; =============== S U B	R O U T	I N E =======================================
  7997                                  
  7998                                  DOS_READ:		; ...
  7999 00003419 C43E[9E05]              		les	di, [THISSFT]
  8000 0000341D 268A4502                		mov	al, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  8001 00003421 240F                    		and	al, 0Fh		; access_mask
  8002 00003423 3C01                    		cmp	al, 1
  8003 00003425 7503                    		jnz	short READ_NO_MODE
  8004 00003427 E92206                  		jmp	SET_ACC_ERR
  8005                                  ; ---------------------------------------------------------------------------
  8006                                  
  8007                                  READ_NO_MODE:				; ...
  8008 0000342A E8FA04                  		call	SETUP
  8009 0000342D E30B                    		jcxz	NoIORet
  8010 0000342F E878DE                  		call	IsSFTNet
  8011 00003432 7408                    		jz	short LOCAL_READ
  8012 00003434 B80811                  		mov	ax, 1108h	; (MultNET<<8)|8
  8013 00003437 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - READ	FROM REMOTE FILE
  8014                                  					; ES:DI	-> SFT
  8015                                  					; SFT DPB field	-> DPB of drive	containing file
  8016                                  					; CX = number of bytes,	SS = DOS CS, SDA DTA field -> user buffer
  8017                                  					; Return: CF set on error, CX =	bytes read
  8018 00003439 C3                      		retn
  8019                                  ; ---------------------------------------------------------------------------
  8020                                  
  8021                                  NoIORet:				; ...
  8022 0000343A F8                      		clc
  8023 0000343B C3                      		retn
  8024                                  ; ---------------------------------------------------------------------------
  8025                                  
  8026                                  LOCAL_READ:				; ...
  8027 0000343C 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],devid_device
  8028 00003441 750F                    		jnz	short READDEV
  8029 00003443 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  8030 00003448 E80BDF                  		call	ECritDisk
  8031 0000344B E8BA05                  		call	DISKREAD
  8032 0000344E E825DF                  		call	LCritDisk
  8033 00003451 C3                      		retn
  8034                                  ; ---------------------------------------------------------------------------
  8035                                  
  8036                                  READDEV:				; ...
  8037 00003452 C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  8038 00003457 268A5D05                		mov	bl, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  8039 0000345B C43E[2C03]              		les	di, [DMAADD]
  8040 0000345F F6C340                  		test	bl, 40h		; devid_device_EOF
  8041 00003462 7407                    		jz	short ENDRDDEVJ3
  8042 00003464 F6C304                  		test	bl, 4		; devid_device_null
  8043 00003467 7405                    		jz	short TESTRAW
  8044 00003469 30C0                    		xor	al, al
  8045                                  
  8046                                  ENDRDDEVJ3:				; ...
  8047 0000346B E9D600                  		jmp	ENDRDDEVJ2
  8048                                  ; ---------------------------------------------------------------------------
  8049                                  
  8050                                  TESTRAW:				; ...
  8051 0000346E F6C320                  		test	bl, 20h		; devid_device_raw
  8052 00003471 7508                    		jnz	short DVRDRAW
  8053 00003473 F6C301                  		test	bl, 1
  8054 00003476 7461                    		jz	short NOTRDCON
  8055 00003478 E99401                  		jmp	READCON
  8056                                  ; ---------------------------------------------------------------------------
  8057                                  
  8058                                  DVRDRAW:				; ...
  8059 0000347B 06                      		push	es
  8060 0000347C 1F                      		pop	ds
  8061 0000347D 36F606[3010]01          		test	byte [ss:IsWin386], 1
  8062 00003483 7408                    		jz	short ReadRawRetry
  8063 00003485 F6C301                  		test	bl, 1		; devid_device_con_in
  8064 00003488 7403                    		jz	short ReadRawRetry
  8065 0000348A E9BA00                  		jmp	do_polling
  8066                                  ; ---------------------------------------------------------------------------
  8067                                  
  8068                                  ReadRawRetry:				; ...
  8069 0000348D 89FB                    		mov	bx, di
  8070 0000348F 31C0                    		xor	ax, ax
  8071 00003491 89C2                    		mov	dx, ax
  8072 00003493 E8C813                  		call	SETREAD
  8073 00003496 1E                      		push	ds
  8074 00003497 36C536[9E05]            		lds	si, [ss:THISSFT]
  8075 0000349C E84013                  		call	DEVIOCALL
  8076 0000349F 89FA                    		mov	dx, di
  8077 000034A1 B486                    		mov	ah, 86h
  8078 000034A3 368B3E[5D03]            		mov	di, [ss:DEVCALL_REQSTAT]
  8079 000034A8 09FF                    		or	di, di
  8080 000034AA 7923                    		jns	short CRDROK
  8081 000034AC E8CA1F                  		call	CHARHARD
  8082 000034AF 89D7                    		mov	di, dx
  8083 000034B1 36033E[6C03]            		add	di, [ss:CALLSCNT]
  8084 000034B6 362B0E[6C03]            		sub	cx, [ss:CALLSCNT]
  8085 000034BB 08C0                    		or	al, al
  8086 000034BD 7410                    		jz	short CRDROK
  8087 000034BF 3C03                    		cmp	al, 3
  8088 000034C1 7403                    		jz	short CRDFERR
  8089 000034C3 1F                      		pop	ds
  8090 000034C4 EBC7                    		jmp	short ReadRawRetry
  8091                                  ; ---------------------------------------------------------------------------
  8092                                  
  8093                                  CRDFERR:				; ...
  8094 000034C6 5F                      		pop	di
  8095                                  
  8096                                  DEVIOFERR:				; ...
  8097 000034C7 36C43E[9E05]            		les	di, [ss:THISSFT]
  8098 000034CC E97B05                  		jmp	SET_ACC_ERR_DS
  8099                                  ; ---------------------------------------------------------------------------
  8100                                  
  8101                                  CRDROK:					; ...
  8102 000034CF 5F                      		pop	di
  8103 000034D0 89D7                    		mov	di, dx
  8104 000034D2 36033E[6C03]            		add	di, [ss:CALLSCNT]
  8105 000034D7 EB92                    		jmp	short ENDRDDEVJ3
  8106                                  ; ---------------------------------------------------------------------------
  8107                                  
  8108                                  NOTRDCON:				; ...
  8109 000034D9 8CC0                    		mov	ax, es
  8110 000034DB 8ED8                    		mov	ds, ax
  8111 000034DD 89FB                    		mov	bx, di
  8112 000034DF 31D2                    		xor	dx, dx
  8113 000034E1 89D0                    		mov	ax, dx
  8114 000034E3 51                      		push	cx
  8115 000034E4 B90100                  		mov	cx, 1
  8116 000034E7 E87413                  		call	SETREAD
  8117 000034EA 59                      		pop	cx
  8118 000034EB 36C536[9E05]            		lds	si, [ss:THISSFT]
  8119 000034F0 C57407                  		lds	si, [si+7]	; [SI+SF_ENTRY.sf_devptr]
  8120                                  
  8121                                  DVRDLP:					; ...
  8122 000034F3 E85E1D                  		call	DSKSTATCHK
  8123 000034F6 E8E912                  		call	DEVIOCALL2
  8124 000034F9 57                      		push	di
  8125 000034FA B486                    		mov	ah, 86h
  8126 000034FC 368B3E[5D03]            		mov	di, [ss:DEVCALL_REQSTAT]
  8127 00003501 09FF                    		or	di, di
  8128 00003503 7917                    		jns	short CRDOK
  8129 00003505 E8711F                  		call	CHARHARD
  8130 00003508 5F                      		pop	di
  8131 00003509 36C706[6C03]0100        		mov	word [ss:CALLSCNT], 1
  8132 00003510 3C01                    		cmp	al, 1
  8133 00003512 74DF                    		jz	short DVRDLP
  8134 00003514 3C03                    		cmp	al, 3
  8135 00003516 74AF                    		jz	short DEVIOFERR
  8136 00003518 30C0                    		xor	al, al
  8137 0000351A EB12                    		jmp	short DVRDIGN
  8138                                  ; ---------------------------------------------------------------------------
  8139                                  
  8140                                  CRDOK:					; ...
  8141 0000351C 5F                      		pop	di
  8142 0000351D 36833E[6C03]01          		cmp	word [ss:CALLSCNT], 1
  8143 00003523 751F                    		jnz	short ENDRDDEVJ2
  8144 00003525 1E                      		push	ds
  8145 00003526 368E1E[6A03]            		mov	ds, word [ss:CALLXADD+2]
  8146 0000352B 8A05                    		mov	al, [di]
  8147 0000352D 1F                      		pop	ds
  8148                                  
  8149                                  DVRDIGN:				; ...
  8150 0000352E 36FF06[6803]            		inc	word [ss:CALLXADD]
  8151 00003533 36C706[5D03]0000        		mov	word [ss:DEVCALL_REQSTAT], 0
  8152 0000353A 47                      		inc	di
  8153 0000353B 3C1A                    		cmp	al, 1Ah		; ^Z?
  8154 0000353D 7405                    		jz	short ENDRDDEVJ2
  8155 0000353F 3C0D                    		cmp	al, 0Dh		; c_CR
  8156 00003541 E0B0                    		loopne	DVRDLP
  8157 00003543 40                      		inc	ax
  8158                                  
  8159                                  ENDRDDEVJ2:				; ...
  8160 00003544 E9B300                  		jmp	ENDRDDEV
  8161                                  ; ---------------------------------------------------------------------------
  8162                                  
  8163                                  do_polling:				; ...
  8164 00003547 89FB                    		mov	bx, di
  8165 00003549 31C0                    		xor	ax, ax
  8166 0000354B 89C2                    		mov	dx, ax
  8167 0000354D E80E13                  		call	SETREAD
  8168                                  
  8169                                  do_io:					; ...
  8170 00003550 26C6470205              		mov	byte [es:bx+2], 5 ;	DEVRDND
  8171 00003555 1E                      		push	ds
  8172 00003556 36C536[9E05]            		lds	si, [ss:THISSFT]
  8173 0000355B E88112                  		call	DEVIOCALL
  8174 0000355E 1F                      		pop	ds
  8175 0000355F 26F747030080            		test	word [es:bx+3], 8000h ; [es:bx+SRHEAD.REQSTAT],STERR
  8176 00003565 7413                    		jz	short check_busy
  8177 00003567 1E                      		push	ds
  8178 00003568 89FA                    		mov	dx, di
  8179 0000356A E80C1F                  		call	CHARHARD
  8180 0000356D 89D7                    		mov	di, dx
  8181 0000356F 08C0                    		or	al, al
  8182 00003571 745F                    		jz	short pop_done_read
  8183 00003573 3C03                    		cmp	al, 3
  8184 00003575 7449                    		jz	short devrderr
  8185 00003577 1F                      		pop	ds
  8186 00003578 EBD6                    		jmp	short do_io
  8187                                  ; ---------------------------------------------------------------------------
  8188                                  
  8189                                  check_busy:				; ...
  8190 0000357A 26F747030002            		test	word [es:bx+3], 200h ; [es:bx+SRHEAD.REQSTAT]
  8191 00003580 7547                    		jnz	short no_char
  8192 00003582 26C6470204              		mov	byte [es:bx+2], 4 ;	DEVRD
  8193 00003587 26C747120100            		mov	word [es:bx+12h], 1
  8194 0000358D 1E                      		push	ds
  8195 0000358E 36C536[9E05]            		lds	si, [ss:THISSFT]
  8196 00003593 E84912                  		call	DEVIOCALL
  8197 00003596 89FA                    		mov	dx, di
  8198 00003598 B486                    		mov	ah, 86h
  8199 0000359A 268B7F03                		mov	di, [es:bx+3]
  8200 0000359E F7C70080                		test	di, 8000h	; STERR
  8201 000035A2 7410                    		jz	short next_char
  8202 000035A4 E8D21E                  		call	CHARHARD
  8203 000035A7 89D7                    		mov	di, dx
  8204 000035A9 08C0                    		or	al, al
  8205 000035AB 7425                    		jz	short pop_done_read
  8206 000035AD 3C03                    		cmp	al, 3
  8207 000035AF 740F                    		jz	short devrderr
  8208 000035B1 1F                      		pop	ds
  8209 000035B2 EB9C                    		jmp	short do_io
  8210                                  ; ---------------------------------------------------------------------------
  8211                                  
  8212                                  next_char:				; ...
  8213 000035B4 1F                      		pop	ds
  8214 000035B5 89D7                    		mov	di, dx
  8215 000035B7 49                      		dec	cx
  8216 000035B8 E319                    		jcxz	done_read
  8217 000035BA 26FF470E                		inc	word [es:bx+14]
  8218 000035BE EB90                    		jmp	short do_io
  8219                                  ; ---------------------------------------------------------------------------
  8220                                  
  8221                                  devrderr:				; ...
  8222 000035C0 5F                      		pop	di
  8223 000035C1 36C43E[9E05]            		les	di, [ss:THISSFT]
  8224 000035C6 E98104                  		jmp	SET_ACC_ERR_DS
  8225                                  ; ---------------------------------------------------------------------------
  8226                                  
  8227                                  no_char:				; ...
  8228 000035C9 50                      		push	ax
  8229 000035CA B484                    		mov	ah, 84h
  8230 000035CC CD2A                    		int	2Ah		; Microsoft Networks - KEYBOARD	BUSY LOOP
  8231 000035CE 58                      		pop	ax
  8232 000035CF E97EFF                  		jmp	do_io
  8233                                  ; ---------------------------------------------------------------------------
  8234                                  
  8235                                  pop_done_read:				; ...
  8236 000035D2 1F                      		pop	ds
  8237                                  
  8238                                  done_read:				; ...
  8239 000035D3 36033E[6C03]            		add	di, [ss:CALLSCNT]
  8240 000035D8 E990FE                  		jmp	ENDRDDEVJ3
  8241                                  ; ---------------------------------------------------------------------------
  8242                                  
  8243                                  TRANBUF:				; ...
  8244 000035DB AC                      		lodsb
  8245 000035DC AA                      		stosb
  8246 000035DD 3C0D                    		cmp	al, 0Dh		; c_CR
  8247 000035DF 7503                    		jnz	short NORMCH
  8248 000035E1 C6040A                  		mov	byte [si], 0Ah ; c_LF
  8249                                  
  8250                                  NORMCH:					; ...
  8251 000035E4 3C0A                    		cmp	al, 0Ah		; c_LF
  8252 000035E6 E0F3                    		loopne	TRANBUF
  8253 000035E8 7507                    		jnz	short ENDRDCON
  8254 000035EA 31F6                    		xor	si, si
  8255 000035EC E818E1                  		call	OUTT
  8256 000035EF 0C01                    		or	al, 1
  8257                                  
  8258                                  ENDRDCON:				; ...
  8259 000035F1 16                      		push	ss
  8260 000035F2 1F                      		pop	ds
  8261 000035F3 E809FE                  		call	SWAPBACK
  8262 000035F6 8936[2200]              		mov	[CONTPOS], si
  8263                                  
  8264                                  ENDRDDEV:				; ...
  8265 000035FA 16                      		push	ss
  8266 000035FB 1F                      		pop	ds
  8267 000035FC 893E[B805]              		mov	[NEXTADD], di
  8268 00003600 7509                    		jnz	short SETSFTC
  8269 00003602 C43E[9E05]              		les	di, [THISSFT]
  8270 00003606 26806505BF              		and	byte [es:di+5], 0BFh ; [ES:DI+SF_ENTRY.sf_flags],
  8271                                  					; ~devid_device_EOF
  8272                                  
  8273                                  SETSFTC:				; ...
  8274 0000360B E8D004                  		call	SETSFT
  8275 0000360E C3                      		retn
  8276                                  ; ---------------------------------------------------------------------------
  8277                                  
  8278                                  READCON:				; ...
  8279 0000360F E8F3FD                  		call	SWAPCON
  8280 00003612 8B36[2200]              		mov	si, [CONTPOS]
  8281 00003616 09F6                    		or	si, si
  8282 00003618 75C1                    		jnz	short TRANBUF
  8283 0000361A 803E[7B02]80            		cmp	byte [CONBUF], 128 ; 80h
  8284 0000361F 7406                    		jz	short GETBUF
  8285 00003621 C706[7B02]80FF          		mov	word [CONBUF], 0FF80h
  8286                                  
  8287                                  GETBUF:					; ...
  8288 00003627 51                      		push	cx
  8289 00003628 06                      		push	es
  8290 00003629 57                      		push	di
  8291 0000362A BA[7B02]                		mov	dx, CONBUF
  8292 0000362D E80CDE                  		call	_$STD_CON_STRING_INPUT
  8293 00003630 5F                      		pop	di
  8294 00003631 07                      		pop	es
  8295 00003632 59                      		pop	cx
  8296 00003633 BE[7D02]                		mov	si, CONBUF+2
  8297 00003636 803C1A                  		cmp	byte [si], 1Ah
  8298 00003639 75A0                    		jnz	short TRANBUF
  8299 0000363B B01A                    		mov	al, 1Ah
  8300 0000363D AA                      		stosb
  8301 0000363E 4F                      		dec	di
  8302 0000363F B00A                    		mov	al, 0Ah		; c_LF
  8303 00003641 E8C3E0                  		call	OUTT
  8304 00003644 31F6                    		xor	si, si
  8305 00003646 EBA9                    		jmp	short ENDRDCON
  8306                                  
  8307                                  ; =============== S U B	R O U T	I N E =======================================
  8308                                  
  8309                                  DOS_WRITE:		; ...
  8310 00003648 C43E[9E05]              		les	di, [THISSFT]
  8311 0000364C 268A4502                		mov	al, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  8312 00003650 240F                    		and	al, 0Fh		; access_mask
  8313 00003652 3C00                    		cmp	al, 0		; open_for_read
  8314 00003654 7503                    		jnz	short Check_FCB_RO
  8315                                  
  8316                                  BadMode:				; ...
  8317 00003656 E9F303                  		jmp	SET_ACC_ERR
  8318                                  ; ---------------------------------------------------------------------------
  8319                                  
  8320                                  Check_FCB_RO:				; ...
  8321 00003659 26F6450380              		test	byte [es:di+3], 80h	; [ES:DI+SF_ENTRY.sf_mode+1],(sf_isFCB>>8)
  8322 0000365E 7407                    		jz	short WRITE_NO_MODE
  8323 00003660 26F6450401              		test	byte [es:di+4], 1 ;	[ES:DI+SF_ENTRY.sf_attr],attr_read_only
  8324 00003665 75EF                    		jnz	short BadMode
  8325                                  
  8326                                  WRITE_NO_MODE:				; ...
  8327 00003667 E8BD02                  		call	SETUP
  8328 0000366A E83DDC                  		call	IsSFTNet
  8329 0000366D 7406                    		jz	short LOCAL_WRITE
  8330 0000366F B80911                  		mov	ax, 1109h	; (MultNET<<8)|9
  8331 00003672 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - WRITE TO REMOTE FILE
  8332                                  					; ES:DI	-> SFT
  8333                                  					; SFT DPB field	-> DPB of drive	containing file
  8334                                  					; CX = number of bytes,	SS = DOS CS, SDA DTA field -> user buffer
  8335                                  					; Return: CF set on error, CX =	bytes written
  8336 00003674 C3                      		retn
  8337                                  ; ---------------------------------------------------------------------------
  8338                                  
  8339                                  LOCAL_WRITE:				; ...
  8340 00003675 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  8341                                  					; devid_device
  8342 0000367A 7570                    		jnz	short WRTDEV
  8343 0000367C C606[2303]02            		mov	byte [EXTERR_LOCUS], 2
  8344 00003681 E8D2DC                  		call	ECritDisk
  8345 00003684 E80F05                  		call	DISKWRITE
  8346 00003687 7210                    		jb	short nocommit
  8347 00003689 C43E[9E05]              		les	di, [THISSFT]
  8348 0000368D 26F6450340              		test	byte [es:di+3], 40h	; [ES:DI+SF_ENTRY.sf_mode],
  8349                                  					; auto_commit_write
  8350 00003692 7405                    		jz	short nocommit
  8351 00003694 51                      		push	cx
  8352 00003695 E80AFB                  		call	DOS_COMMIT
  8353 00003698 59                      		pop	cx
  8354                                  
  8355                                  nocommit:				; ...
  8356 00003699 E8DADC                  		call	LCritDisk
  8357 0000369C C3                      		retn
  8358                                  ; ---------------------------------------------------------------------------
  8359                                  
  8360                                  DVWRTRAW:				; ...
  8361 0000369D 31C0                    		xor	ax, ax
  8362 0000369F E8EF11                  		call	SETWRITE
  8363 000036A2 1E                      		push	ds
  8364 000036A3 36C536[9E05]            		lds	si, [ss:THISSFT]
  8365 000036A8 E83411                  		call	DEVIOCALL
  8366 000036AB 89FA                    		mov	dx, di
  8367 000036AD B487                    		mov	ah, 87h
  8368 000036AF 368B3E[5D03]            		mov	di, [ss:DEVCALL_REQSTAT]
  8369 000036B4 09FF                    		or	di, di
  8370 000036B6 7920                    		jns	short CWRTROK
  8371 000036B8 E8BE1D                  		call	CHARHARD
  8372 000036BB 362B0E[6C03]            		sub	cx, [ss:CALLSCNT]
  8373 000036C0 89D3                    		mov	bx, dx
  8374 000036C2 36031E[6C03]            		add	bx, [ss:CALLSCNT]
  8375 000036C7 89DF                    		mov	di, bx
  8376 000036C9 08C0                    		or	al, al
  8377 000036CB 740B                    		jz	short CWRTROK
  8378 000036CD 3C03                    		cmp	al, 3
  8379 000036CF 7403                    		jz	short CWRFERR
  8380 000036D1 1F                      		pop	ds
  8381 000036D2 EBC9                    		jmp	short DVWRTRAW
  8382                                  ; ---------------------------------------------------------------------------
  8383                                  
  8384                                  CWRFERR:				; ...
  8385 000036D4 58                      		pop	ax
  8386 000036D5 E9EEFD                  		jmp	CRDFERR
  8387                                  ; ---------------------------------------------------------------------------
  8388                                  
  8389                                  CWRTROK:				; ...
  8390 000036D8 58                      		pop	ax
  8391 000036D9 1F                      		pop	ds
  8392 000036DA A1[6C03]                		mov	ax, [CALLSCNT]
  8393                                  
  8394                                  ENDWRDEV:				; ...
  8395 000036DD C43E[9E05]              		les	di, [THISSFT]
  8396 000036E1 89C1                    		mov	cx, ax
  8397 000036E3 E81904                  		call	ADDREC
  8398 000036E6 C3                      		retn
  8399                                  ; ---------------------------------------------------------------------------
  8400                                  
  8401                                  WRTNUL:					; ...
  8402 000036E7 89CA                    		mov	dx, cx
  8403                                  
  8404                                  WRTCOOKJ:				; ...
  8405 000036E9 E98F00                  		jmp	WRTCOOKDONE
  8406                                  ; ---------------------------------------------------------------------------
  8407                                  
  8408                                  WRTDEV:					; ...
  8409 000036EC C606[2303]04            		mov	byte [EXTERR_LOCUS], 4 ; errLOC_SerDev
  8410 000036F1 26804D0540              		or	byte [es:di+5], 40h ; [ES:DI+SF_ENTRY.sf_flags],
  8411                                  					; devid_device_EOF
  8412 000036F6 268A5D05                		mov	bl, [es:di+5]	; [ES:DI+SF_ENTRY.sf_flags]
  8413 000036FA 31C0                    		xor	ax, ax
  8414 000036FC E3DF                    		jcxz	ENDWRDEV
  8415 000036FE 1E                      		push	ds
  8416 000036FF 88D8                    		mov	al, bl
  8417 00003701 C51E[2C03]              		lds	bx, [DMAADD]
  8418 00003705 89DF                    		mov	di, bx
  8419 00003707 31D2                    		xor	dx, dx
  8420 00003709 A820                    		test	al, 20h		; devid_device_raw
  8421 0000370B 7402                    		jz	short TEST_DEV_CON
  8422 0000370D EB8E                    		jmp	short DVWRTRAW
  8423                                  ; ---------------------------------------------------------------------------
  8424                                  
  8425                                  TEST_DEV_CON:				; ...
  8426 0000370F A802                    		test	al, 2		; devid_device_con_out
  8427 00003711 756E                    		jnz	short WRITECON
  8428 00003713 A804                    		test	al, 4		; devid_device_null
  8429 00003715 75D0                    		jnz	short WRTNUL
  8430 00003717 89D0                    		mov	ax, dx
  8431 00003719 803F1A                  		cmp	byte [bx], 1Ah ; ^Z?
  8432 0000371C 74CB                    		jz	short WRTCOOKJ
  8433 0000371E 51                      		push	cx
  8434 0000371F B90100                  		mov	cx, 1
  8435 00003722 E86C11                  		call	SETWRITE
  8436 00003725 59                      		pop	cx
  8437 00003726 36C536[9E05]            		lds	si, [ss:THISSFT]
  8438 0000372B C57407                  		lds	si, [si+7]	; [SI+SF_ENTRY.sf_devptr]
  8439                                  
  8440                                  DVWRTLP:				; ...
  8441 0000372E E8231B                  		call	DSKSTATCHK
  8442 00003731 E8AE10                  		call	DEVIOCALL2
  8443 00003734 57                      		push	di
  8444 00003735 B487                    		mov	ah, 87h
  8445 00003737 368B3E[5D03]            		mov	di, [ss:DEVCALL_REQSTAT]
  8446 0000373C 09FF                    		or	di, di
  8447 0000373E 7916                    		jns	short CWROK
  8448 00003740 E8361D                  		call	CHARHARD
  8449 00003743 5F                      		pop	di
  8450 00003744 36C706[6C03]0100        		mov	word [ss:CALLSCNT], 1
  8451 0000374B 3C01                    		cmp	al, 1
  8452 0000374D 74DF                    		jz	short DVWRTLP
  8453 0000374F 08C0                    		or	al, al
  8454 00003751 740C                    		jz	short DVWRTIGN
  8455 00003753 E970FD                  		jmp	CRDFERR
  8456                                  ; ---------------------------------------------------------------------------
  8457                                  
  8458                                  CWROK:					; ...
  8459 00003756 5F                      		pop	di
  8460 00003757 36833E[6C03]00          		cmp	word [ss:CALLSCNT], 0
  8461 0000375D 741C                    		jz	short WRTCOOKDONE
  8462                                  
  8463                                  DVWRTIGN:				; ...
  8464 0000375F 42                      		inc	dx
  8465 00003760 36FF06[6803]            		inc	word [ss:CALLXADD]
  8466 00003765 47                      		inc	di
  8467 00003766 1E                      		push	ds
  8468 00003767 368E1E[6A03]            		mov	ds, word [ss:CALLXADD+2]
  8469 0000376C 803D1A                  		cmp	byte [di], 1Ah ; ^Z?
  8470 0000376F 1F                      		pop	ds
  8471 00003770 7409                    		jz	short WRTCOOKDONE
  8472 00003772 36C706[5D03]0000        		mov	word [ss:DEVCALL_REQSTAT], 0
  8473 00003779 E2B3                    		loop	DVWRTLP
  8474                                  
  8475                                  WRTCOOKDONE:				; ...
  8476 0000377B 89D0                    		mov	ax, dx
  8477 0000377D 1F                      		pop	ds
  8478 0000377E E95CFF                  		jmp	ENDWRDEV
  8479                                  ; ---------------------------------------------------------------------------
  8480                                  
  8481                                  WRITECON:				; ...
  8482 00003781 1E                      		push	ds
  8483 00003782 16                      		push	ss
  8484 00003783 1F                      		pop	ds
  8485 00003784 E87EFC                  		call	SWAPCON
  8486 00003787 1F                      		pop	ds
  8487 00003788 89DE                    		mov	si, bx
  8488 0000378A 51                      		push	cx
  8489                                  
  8490                                  WRCONLP:				; ...
  8491 0000378B AC                      		lodsb
  8492 0000378C 3C1A                    		cmp	al, 1Ah		; ^Z?
  8493 0000378E 7405                    		jz	short CONEOF
  8494 00003790 E874DF                  		call	OUTT
  8495 00003793 E2F6                    		loop	WRCONLP
  8496                                  
  8497                                  CONEOF:					; ...
  8498 00003795 58                      		pop	ax
  8499 00003796 29C8                    		sub	ax, cx
  8500 00003798 1F                      		pop	ds
  8501 00003799 E863FC                  		call	SWAPBACK
  8502 0000379C E93EFF                  		jmp	ENDWRDEV
  8503                                  
  8504                                  ; =============== S U B	R O U T	I N E =======================================
  8505                                  
  8506                                  GET_IO_SFT:
  8507 0000379F 36803E[5703]00          		cmp	byte [ss:CONSWAP], 0
  8508 000037A5 7512                    		jnz	short GetRedir
  8509                                  
  8510                                  GetNormal:				; ...
  8511 000037A7 16                      		push	ss
  8512 000037A8 1F                      		pop	ds
  8513 000037A9 06                      		push	es
  8514 000037AA 57                      		push	di
  8515 000037AB E8AC30                  		call	SFFromHandle
  8516 000037AE 7206                    		jb	short RET44P
  8517 000037B0 8CC6                    		mov	si, es
  8518 000037B2 8EDE                    		mov	ds, si
  8519 000037B4 89FE                    		mov	si, di
  8520                                  
  8521                                  RET44P:					; ...
  8522 000037B6 5F                      		pop	di
  8523 000037B7 07                      		pop	es
  8524 000037B8 C3                      		retn
  8525                                  ; ---------------------------------------------------------------------------
  8526                                  
  8527                                  GetRedir:				; ...
  8528 000037B9 83FB01                  		cmp	bx, 1
  8529 000037BC 77E9                    		ja	short GetNormal
  8530 000037BE 36C536[E605]            		lds	si, [ss:CONSFT]
  8531 000037C3 F8                      		clc
  8532                                  
  8533                                  get_io_sft_retn:			; ...
  8534 000037C4 C3                      		retn
  8535                                  
  8536                                  ; =============== S U B	R O U T	I N E =======================================
  8537                                  
  8538                                  DIRREAD:
  8539 000037C5 31D2                    		xor	dx, dx
  8540 000037C7 833E[C205]00            		cmp	word [DIRSTART], 0
  8541 000037CC 7503                    		jnz	short SubDir
  8542 000037CE 92                      		xchg	ax, dx
  8543 000037CF EB0C                    		jmp	short DoRead
  8544                                  ; ---------------------------------------------------------------------------
  8545                                  
  8546                                  SubDir:					; ...
  8547 000037D1 88C2                    		mov	dl, al
  8548 000037D3 26225604                		and	dl, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  8549 000037D7 268A4E05                		mov	cl, [es:bp+5]	; [ES:BP+DPB.CLUSTER_SHIFT]
  8550 000037DB D3E8                    		shr	ax, cl
  8551                                  
  8552                                  DoRead:					; ...
  8553 000037DD 8816[7305]              		mov	[SECCLUSPOS], dl
  8554 000037E1 89C1                    		mov	cx, ax
  8555 000037E3 88D4                    		mov	ah, dl
  8556 000037E5 8B16[C005]              		mov	dx, word [DIRSEC+2]
  8557 000037E9 8916[0706]              		mov	word [HIGH_SECTOR], dx
  8558 000037ED 8B16[BE05]              		mov	dx, word [DIRSEC]
  8559 000037F1 00E2                    		add	dl, ah
  8560 000037F3 80D600                  		adc	dh, 0
  8561 000037F6 8316[0706]00            		adc	word [HIGH_SECTOR], 0
  8562 000037FB 8B1E[BC05]              		mov	bx, [CLUSNUM]
  8563 000037FF 891E[DC05]              		mov	[NXTCLUSNUM], bx
  8564 00003803 E319                    		jcxz	FIRSTCLUSTER
  8565                                  
  8566                                  SKPCLLP:				; ...
  8567 00003805 E8DD1E                  		call	UNPACK
  8568 00003808 72BA                    		jb	short get_io_sft_retn
  8569 0000380A 87DF                    		xchg	bx, di
  8570 0000380C E8BF1E                  		call	IsEOF
  8571 0000380F 7302                    		jnb	short HAVESKIPPED
  8572 00003811 E2F2                    		loop	SKPCLLP
  8573                                  
  8574                                  HAVESKIPPED:				; ...
  8575 00003813 891E[DC05]              		mov	[NXTCLUSNUM], bx
  8576 00003817 89FA                    		mov	dx, di
  8577 00003819 88E3                    		mov	bl, ah
  8578 0000381B E86D17                  		call	FIGREC
  8579                                  
  8580                                  FIRSTCLUSTER:				; ...
  8581 0000381E C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
  8582 00003823 30C0                    		xor	al, al
  8583 00003825 E8E322                  		call	GETBUFFR
  8584 00003828 729A                    		jb	short get_io_sft_retn
  8585                                  
  8586                                  SET_BUF_AS_DIR:				; ...
  8587 0000382A 1E                      		push	ds
  8588 0000382B 56                      		push	si
  8589 0000382C C536[E205]              		lds	si, [CURBUF]
  8590 00003830 804C0504                		or	byte [si+5], 4 ; [SI+BUFFINFO.buf_flags],buf_isDIR
  8591 00003834 5E                      		pop	si
  8592 00003835 1F                      		pop	ds
  8593                                  
  8594                                  dirread_retn:				; ...
  8595 00003836 C3                      		retn
  8596                                  
  8597                                  ; =============== S U B	R O U T	I N E =======================================
  8598                                  
  8599                                  FATSECRD:		; ...
  8600 00003837 36C606[4B03]18          		mov	byte [ss:ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
  8601 0000383D 89CF                    		mov	di, cx
  8602 0000383F 268A4E08                		mov	cl, [es:bp+8]	; [ES:BP+DPB.FAT_COUNT]
  8603 00003843 268B460F                		mov	ax, [es:bp+0Fh]	; [ES:BP+DPB.FAT_SIZE]
  8604 00003847 30ED                    		xor	ch, ch
  8605 00003849 52                      		push	dx
  8606                                  
  8607                                  NXTFAT:					; ...
  8608 0000384A 36C706[0706]0000        		mov	word [ss:HIGH_SECTOR], 0
  8609 00003851 51                      		push	cx
  8610 00003852 50                      		push	ax
  8611 00003853 89F9                    		mov	cx, di
  8612 00003855 E85D00                  		call	DSKREAD
  8613 00003858 58                      		pop	ax
  8614 00003859 59                      		pop	cx
  8615 0000385A 7420                    		jz	short RET41P
  8616 0000385C 01C2                    		add	dx, ax
  8617 0000385E E2EA                    		loop	NXTFAT
  8618 00003860 5A                      		pop	dx
  8619 00003861 89F9                    		mov	cx, di
  8620                                  
  8621                                  DREAD:					; ...
  8622 00003863 E84F00                  		call	DSKREAD
  8623 00003866 74CE                    		jz	short dirread_retn
  8624 00003868 36C606[7505]00          		mov	byte [ss:READOP], 0
  8625 0000386E E89C00                  		call	HARDERRRW
  8626 00003871 3C01                    		cmp	al, 1
  8627 00003873 74EE                    		jz	short DREAD
  8628 00003875 3C03                    		cmp	al, 3
  8629 00003877 F8                      		clc
  8630 00003878 7501                    		jnz	short NO_CAR
  8631 0000387A F9                      		stc
  8632                                  
  8633                                  NO_CAR:					; ...
  8634 0000387B C3                      		retn
  8635                                  ; ---------------------------------------------------------------------------
  8636                                  
  8637                                  RET41P:					; ...
  8638 0000387C 5A                      		pop	dx
  8639 0000387D C3                      		retn
  8640                                  
  8641                                  ; =============== S U B	R O U T	I N E =======================================
  8642                                  
  8643                                  CHECK_WRITE_LOCK:	; ...
  8644 0000387E 26F6450408              		test	byte [es:di+4], 8 ;	[ES:DI+SF_ENTRY.sf_attr],
  8645                                  					; attr_volume_id
  8646 00003883 7404                    		jz	short write_cont
  8647 00003885 E8C201                  		call	SET_ACC_ERR_DS
  8648 00003888 C3                      		retn
  8649                                  ; ---------------------------------------------------------------------------
  8650                                  
  8651                                  write_cont:				; ...
  8652 00003889 51                      		push	cx
  8653 0000388A 09C9                    		or	cx, cx
  8654 0000388C 7501                    		jnz	short Not_Truncate
  8655 0000388E 49                      		dec	cx
  8656                                  
  8657                                  Not_Truncate:				; ...
  8658 0000388F B080                    		mov	al, 80h
  8659 00003891 E87B3C                  		call	LOCK_CHECK
  8660 00003894 59                      		pop	cx
  8661 00003895 7305                    		jnb	short WRITE_OK
  8662 00003897 E86701                  		call	WRITE_LOCK_VIOLATION
  8663 0000389A 73ED                    		jnb	short write_cont
  8664                                  
  8665                                  WRITE_OK:				; ...
  8666 0000389C C3                      		retn
  8667                                  
  8668                                  ; =============== S U B	R O U T	I N E =======================================
  8669                                  
  8670                                  CHECK_READ_LOCK:
  8671 0000389D 26F6450408              		test	byte [es:di+4], 8 ;	[ES:DI+SF_ENTRY.sf_attr],
  8672                                  					; attr_volume_id
  8673 000038A2 7404                    		jz	short do_retry
  8674 000038A4 E8A501                  		call	SET_ACC_ERR
  8675 000038A7 C3                      		retn
  8676                                  ; ---------------------------------------------------------------------------
  8677                                  
  8678                                  do_retry:				; ...
  8679 000038A8 30C0                    		xor	al, al
  8680 000038AA E8623C                  		call	LOCK_CHECK
  8681 000038AD 7305                    		jnb	short READLOCK_OK
  8682 000038AF E82901                  		call	READ_LOCK_VIOLATION
  8683 000038B2 73F4                    		jnb	short do_retry
  8684                                  
  8685                                  READLOCK_OK:				; ...
  8686 000038B4 C3                      		retn
  8687                                  
  8688                                  ; =============== S U B	R O U T	I N E =======================================
  8689                                  
  8690                                  DSKREAD:
  8691 000038B5 51                      		push	cx
  8692 000038B6 268A6617                		mov	ah, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
  8693 000038BA 268A4601                		mov	al, [es:bp+1]	; [ES:BP+DPB.UNIT]
  8694 000038BE 53                      		push	bx
  8695 000038BF 06                      		push	es
  8696 000038C0 E89B0F                  		call	SETREAD
  8697 000038C3 EB27                    		jmp	short DODSKOP
  8698                                  
  8699                                  ; =============== S U B	R O U T	I N E =======================================
  8700                                  
  8701                                  DWRITE:		; ...
  8702 000038C5 E81600                  		call	DSKWRITE
  8703 000038C8 7413                    		jz	short dw_ret_label
  8704 000038CA 36C606[7505]01          		mov	byte [ss:READOP], 1
  8705 000038D0 E83A00                  		call	HARDERRRW
  8706 000038D3 3C01                    		cmp	al, 1
  8707 000038D5 74EE                    		jz	short DWRITE
  8708 000038D7 3C03                    		cmp	al, 3
  8709 000038D9 F8                      		clc
  8710 000038DA 7501                    		jnz	short dw_ret_label ; NO_CAR2
  8711 000038DC F9                      		stc
  8712                                  
  8713                                  dw_ret_label:				; ...
  8714 000038DD C3                      		retn			; NO_CAR2
  8715                                  
  8716                                  ; =============== S U B	R O U T	I N E =======================================
  8717                                  
  8718                                  DSKWRITE:		; ...
  8719 000038DE 51                      		push	cx
  8720 000038DF 268A6617                		mov	ah, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
  8721 000038E3 268A4601                		mov	al, [es:bp+1]	; [ES:BP+DPB.UNIT]
  8722 000038E7 53                      		push	bx
  8723 000038E8 06                      		push	es
  8724 000038E9 E8A50F                  		call	SETWRITE
  8725                                  
  8726                                  DODSKOP:				; ...
  8727 000038EC 8CD9                    		mov	cx, ds
  8728 000038EE 1F                      		pop	ds
  8729 000038EF 1E                      		push	ds
  8730 000038F0 3EC57613                		lds	si, [ds:bp+13h]	; LDS SI,[BP+DPB.DRIVER_ADDR]
  8731 000038F4 E8EB0E                  		call	DEVIOCALL2
  8732 000038F7 8ED9                    		mov	ds, cx
  8733 000038F9 07                      		pop	es
  8734 000038FA 5B                      		pop	bx
  8735 000038FB 368B0E[6C03]            		mov	cx, [ss:CALLSCNT]
  8736 00003900 5F                      		pop	di
  8737 00003901 29F9                    		sub	cx, di
  8738 00003903 F7D9                    		neg	cx
  8739 00003905 36A1[5D03]              		mov	ax, [ss:DEVCALL_REQSTAT]
  8740 00003909 A90080                  		test	ax, 8000h	; STERR
  8741 0000390C C3                      		retn
  8742                                  
  8743                                  ; =============== S U B	R O U T	I N E =======================================
  8744                                  
  8745                                  HARDERRRW:		; ...
  8746 0000390D 3C0F                    		cmp	al, 0Fh		; error_I24_wrong_disk
  8747 0000390F 7512                    		jnz	short DO_ERR
  8748 00003911 50                      		push	ax
  8749 00003912 36A1[7003]              		mov	ax, word [ss:CALLVIDRW]
  8750 00003916 36A3[2803]              		mov	word [ss:EXTERRPT],	ax
  8751 0000391A 36A1[7203]              		mov	ax, word [ss:CALLVIDRW+2]
  8752 0000391E 36A3[2A03]              		mov	word [ss:EXTERRPT+2], ax
  8753 00003922 58                      		pop	ax
  8754                                  
  8755                                  DO_ERR:					; ...
  8756 00003923 E8841B                  		call	HARDERR
  8757 00003926 C3                      		retn
  8758                                  
  8759                                  ; ---------------------------------------------------------------------------
  8760                                  
  8761                                  SETUP:					; ...
  8762 00003927 26C57507                		lds	si, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
  8763 0000392B 368C1E[8C05]            		mov	word [ss:THISDPB+2], ds
  8764 00003930 16                      		push	ss
  8765 00003931 1F                      		pop	ds
  8766 00003932 8936[8A05]              		mov	word [THISDPB], si
  8767 00003936 8B1E[2C03]              		mov	bx, word [DMAADD]
  8768 0000393A 891E[B805]              		mov	[NEXTADD], bx
  8769 0000393E C606[7405]00            		mov	byte [TRANS], 0
  8770 00003943 268B4515                		mov	ax, [es:di+15h]	; [ES:DI+SF_ENTRY.sf_position]
  8771 00003947 268B5517                		mov	dx, [es:di+17h]	; [ES:DI+SF_ENTRY.sf_position+2]
  8772 0000394B 8916[D005]              		mov	word [BYTPOS+2], dx
  8773 0000394F A3[CE05]                		mov	word [BYTPOS], ax
  8774 00003952 26F745058080            		test	word [es:di+5], 8080h ; [ES:DI+SF_ENTRY.sf_flags],
  8775                                  					; sf_isnet+devid_device
  8776 00003958 753C                    		jnz	short NOSETSTUFF
  8777 0000395A 06                      		push	es
  8778 0000395B C42E[8A05]              		les	bp, [THISDPB]
  8779 0000395F 268A5E00                		mov	bl, [es:bp+0]	; [ES:BP+DPB.drive]
  8780 00003963 881E[7605]              		mov	[THISDRV], bl
  8781 00003967 268B5E02                		mov	bx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  8782 0000396B 51                      		push	cx
  8783 0000396C E81B05                  		call	DIV32
  8784 0000396F 8916[CC05]              		mov	[BYTSECPOS],	dx
  8785 00003973 A3[C405]                		mov	word [SECPOS], ax
  8786 00003976 890E[C605]              		mov	word [SECPOS+2],	cx
  8787 0000397A 89CA                    		mov	dx, cx
  8788 0000397C 89C3                    		mov	bx, ax
  8789 0000397E 26225E04                		and	bl, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  8790 00003982 881E[7305]              		mov	[SECCLUSPOS], bl
  8791 00003986 E82805                  		call	SHR32
  8792 00003989 59                      		pop	cx
  8793 0000398A 751F                    		jnz	short EOFERR
  8794 0000398C 263B460D                		cmp	ax, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
  8795 00003990 7719                    		ja	short EOFERR
  8796 00003992 A3[BC05]                		mov	[CLUSNUM], ax
  8797 00003995 07                      		pop	es
  8798                                  
  8799                                  NOSETSTUFF:				; ...
  8800 00003996 89C8                    		mov	ax, cx
  8801 00003998 0306[2C03]              		add	ax, word [DMAADD]
  8802 0000399C 730C                    		jnb	short setup_OK
  8803 0000399E A1[2C03]                		mov	ax, word [DMAADD]
  8804 000039A1 F7D8                    		neg	ax
  8805 000039A3 7501                    		jnz	short NoDec
  8806 000039A5 48                      		dec	ax
  8807                                  
  8808                                  NoDec:					; ...
  8809 000039A6 89C1                    		mov	cx, ax
  8810 000039A8 E304                    		jcxz	NOROOM
  8811                                  
  8812                                  setup_OK:				; ...
  8813 000039AA C3                      		retn
  8814                                  ; ---------------------------------------------------------------------------
  8815                                  
  8816                                  EOFERR:					; ...
  8817 000039AB 07                      		pop	es
  8818 000039AC 31C9                    		xor	cx, cx
  8819                                  
  8820                                  NOROOM:					; ...
  8821 000039AE 5B                      		pop	bx
  8822 000039AF F8                      		clc
  8823 000039B0 C3                      		retn
  8824                                  
  8825                                  ; =============== S U B	R O U T	I N E =======================================
  8826                                  
  8827                                  BREAKDOWN:		; ...
  8828 000039B1 A1[CC05]                		mov	ax, [BYTSECPOS]
  8829 000039B4 89CB                    		mov	bx, cx
  8830 000039B6 09C0                    		or	ax, ax
  8831 000039B8 740E                    		jz	short SAVFIR
  8832 000039BA 262B4602                		sub	ax, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  8833 000039BE F7D8                    		neg	ax
  8834 000039C0 29C3                    		sub	bx, ax
  8835 000039C2 7304                    		jnb	short SAVFIR
  8836 000039C4 01D8                    		add	ax, bx
  8837 000039C6 31DB                    		xor	bx, bx
  8838                                  
  8839                                  SAVFIR:					; ...
  8840 000039C8 A3[D205]                		mov	[BYTCNT1], ax
  8841 000039CB 89D8                    		mov	ax, bx
  8842 000039CD 31D2                    		xor	dx, dx
  8843 000039CF 26F77602                		div	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
  8844 000039D3 A3[D605]                		mov	[SECCNT], ax
  8845 000039D6 8916[D405]              		mov	[BYTCNT2], dx
  8846                                  
  8847                                  _RET45:					; ...
  8848 000039DA C3                      		retn
  8849                                  
  8850                                  ; =============== S U B	R O U T	I N E =======================================
  8851                                  
  8852                                  READ_LOCK_VIOLATION: ; ...
  8853 000039DB C606[7505]00            		mov	byte [READOP], 0
  8854                                  
  8855                                  ERR_ON_CHECK:				; ...
  8856 000039E0 26F6450380              		test	byte [es:di+3], 80h	; [ES:DI+SF_ENTRY.sf_mode+1],
  8857                                  					; (sf_isFCB>>8)
  8858 000039E5 750E                    		jnz	short HARD_ERR
  8859 000039E7 51                      		push	cx
  8860 000039E8 268A4D02                		mov	cl, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
  8861 000039EC 80E1F0                  		and	cl, 0F0h	; SHARING_MASK
  8862 000039EF 80F900                  		cmp	cl, 0		; SHARING_COMPAT
  8863 000039F2 59                      		pop	cx
  8864 000039F3 7505                    		jnz	short NO_HARD_ERR
  8865                                  
  8866                                  HARD_ERR:				; ...
  8867 000039F5 E82D3B                  		call	LOCK_VIOLATION
  8868 000039F8 73E0                    		jnb	short _RET45
  8869                                  
  8870                                  NO_HARD_ERR:				; ...
  8871 000039FA 31C9                    		xor	cx, cx
  8872 000039FC B82100                  		mov	ax, 21h		; error_lock_violation
  8873 000039FF F9                      		stc
  8874 00003A00 C3                      		retn
  8875                                  
  8876                                  ; =============== S U B	R O U T	I N E =======================================
  8877                                  
  8878                                  WRITE_LOCK_VIOLATION: ; ...
  8879 00003A01 C606[7505]01            		mov	byte [READOP], 1
  8880 00003A06 EBD8                    		jmp	short ERR_ON_CHECK
  8881                                  
  8882                                  ; ---------------------------------------------------------------------------
  8883                                  
  8884                                  DISKREAD:				; ...
  8885 00003A08 268B4511                		mov	ax, [es:di+11h]	; [ES:DI+SF_ENTRY.sf_size]
  8886 00003A0C 268B5D13                		mov	bx, [es:di+13h]	; [ES:DI+SF_ENTRY.sf_size+2]
  8887 00003A10 2B06[CE05]              		sub	ax, word [BYTPOS]
  8888 00003A14 1B1E[D005]              		sbb	bx, word [BYTPOS+2]
  8889 00003A18 7226                    		jb	short RDERR
  8890 00003A1A 750A                    		jnz	short ENUF
  8891 00003A1C 09C0                    		or	ax, ax
  8892 00003A1E 7420                    		jz	short RDERR
  8893 00003A20 39C8                    		cmp	ax, cx
  8894 00003A22 7302                    		jnb	short ENUF
  8895 00003A24 89C1                    		mov	cx, ax
  8896                                  
  8897                                  ENUF:					; ...
  8898 00003A26 E874FE                  		call	CHECK_READ_LOCK
  8899 00003A29 7301                    		jnb	short _READ_OK
  8900 00003A2B C3                      		retn
  8901                                  ; ---------------------------------------------------------------------------
  8902                                  
  8903                                  _READ_OK:				; ...
  8904 00003A2C C42E[8A05]              		les	bp, [THISDPB]
  8905 00003A30 E87EFF                  		call	BREAKDOWN
  8906 00003A33 8B0E[BC05]              		mov	cx, [CLUSNUM]
  8907 00003A37 E8AD13                  		call	FNDCLUS
  8908 00003A3A 720E                    		jb	short SET_ACC_ERR_DS
  8909 00003A3C 09C9                    		or	cx, cx
  8910 00003A3E 7413                    		jz	short SKIPERR
  8911                                  
  8912                                  RDERR:					; ...
  8913 00003A40 B40E                    		mov	ah, 0Eh
  8914 00003A42 E92502                  		jmp	WRTERR22
  8915                                  ; ---------------------------------------------------------------------------
  8916                                  
  8917                                  SETSFTJ2:				; ...
  8918 00003A45 E99600                  		jmp	SETSFT
  8919                                  ; ---------------------------------------------------------------------------
  8920                                  
  8921                                  CANOT_READ:				; ...
  8922 00003A48 59                      		pop	cx
  8923 00003A49 5B                      		pop	bx
  8924                                  
  8925                                  SET_ACC_ERR_DS:				; ...
  8926 00003A4A 16                      		push	ss
  8927 00003A4B 1F                      		pop	ds
  8928                                  
  8929                                  SET_ACC_ERR:				; ...
  8930 00003A4C 31C9                    		xor	cx, cx
  8931 00003A4E B80500                  		mov	ax, 5		; error_access_denied
  8932 00003A51 F9                      		stc
  8933 00003A52 C3                      		retn
  8934                                  ; ---------------------------------------------------------------------------
  8935                                  
  8936                                  SKIPERR:				; ...
  8937 00003A53 8916[BA05]              		mov	[LASTPOS], dx
  8938 00003A57 891E[BC05]              		mov	[CLUSNUM], bx
  8939 00003A5B 833E[D205]00            		cmp	word [BYTCNT1], 0
  8940 00003A60 7405                    		jz	short RDMID
  8941 00003A62 E8F813                  		call	BUFRD
  8942                                  ; ---------------------------------------------------------------------------
  8943 00003A65 72E3                    		jb	short SET_ACC_ERR_DS
  8944                                  
  8945                                  RDMID:					; ...
  8946 00003A67 833E[D605]00            		cmp	word [SECCNT], 0
  8947 00003A6C 7453                    		jz	short RDLAST
  8948 00003A6E E88914                  		call	NEXTSEC
  8949 00003A71 72D2                    		jb	short SETSFTJ2
  8950 00003A73 C606[7405]01            		mov	byte [TRANS], 1
  8951 00003A78 8A16[7305]              		mov	dl, [SECCLUSPOS]
  8952 00003A7C 8B0E[D605]              		mov	cx, [SECCNT]
  8953 00003A80 8B1E[BC05]              		mov	bx, [CLUSNUM]
  8954                                  
  8955                                  RDLP:					; ...
  8956 00003A84 E8A414                  		call	OPTIMIZE
  8957 00003A87 72C1                    		jb	short SET_ACC_ERR_DS
  8958 00003A89 57                      		push	di
  8959 00003A8A 50                      		push	ax
  8960 00003A8B 53                      		push	bx
  8961 00003A8C C606[4B03]38            		mov	byte [ALLOWED], 38h ; Allowed_RETRY+Allowed_FAIL+Allowed_IGNORE
  8962 00003A91 8E1E[2E03]              		mov	ds, word [DMAADD+2]
  8963 00003A95 52                      		push	dx
  8964 00003A96 51                      		push	cx
  8965 00003A97 E86922                  		call	SET_RQ_SC_PARMS
  8966 00003A9A E8C6FD                  		call	DREAD
  8967 00003A9D 59                      		pop	cx
  8968 00003A9E 5A                      		pop	dx
  8969 00003A9F 368F06[0C06]            		pop	word [ss:TEMP_VAR]
  8970 00003AA4 72A2                    		jb	short CANOT_READ
  8971 00003AA6 368C1E[0E06]            		mov	[ss:TEMP_VAR2],	ds
  8972 00003AAB E85E00                  		call	DskRdBufScan
  8973 00003AAE 16                      		push	ss
  8974 00003AAF 1F                      		pop	ds
  8975 00003AB0 59                      		pop	cx
  8976 00003AB1 5B                      		pop	bx
  8977 00003AB2 E30D                    		jcxz	RDLAST
  8978 00003AB4 E8171C                  		call	IsEOF
  8979 00003AB7 7325                    		jnb	short SETSFT
  8980 00003AB9 B200                    		mov	dl, 0
  8981 00003ABB FF06[BA05]              		inc	word [LASTPOS]
  8982 00003ABF EBC3                    		jmp	short RDLP
  8983                                  ; ---------------------------------------------------------------------------
  8984                                  
  8985                                  RDLAST:					; ...
  8986 00003AC1 A1[D405]                		mov	ax, [BYTCNT2]
  8987 00003AC4 09C0                    		or	ax, ax
  8988 00003AC6 7416                    		jz	short SETSFT
  8989 00003AC8 A3[D205]                		mov	[BYTCNT1], ax
  8990 00003ACB E82C14                  		call	NEXTSEC
  8991 00003ACE 720E                    		jb	short SETSFT
  8992 00003AD0 C706[CC05]0000          		mov	word [BYTSECPOS], 0
  8993 00003AD6 E88413                  		call	BUFRD
  8994 00003AD9 7303                    		jnb	short SETSFT
  8995 00003ADB E96CFF                  		jmp	SET_ACC_ERR_DS
  8996                                  
  8997                                  ; =============== S U B	R O U T	I N E =======================================
  8998                                  
  8999                                  SETSFT:		; ...
  9000 00003ADE C43E[9E05]              		les	di, [THISSFT]
  9001                                  
  9002                                  SETCLUS:				; ...
  9003 00003AE2 8B0E[B805]              		mov	cx, [NEXTADD]
  9004 00003AE6 2B0E[2C03]              		sub	cx, word [DMAADD]
  9005 00003AEA 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
  9006                                  					; devid_device
  9007 00003AEF 750E                    		jnz	short ADDREC
  9008 00003AF1 A1[BC05]                		mov	ax, [CLUSNUM]
  9009 00003AF4 26894535                		mov	[es:di+35h], ax	; [ES:DI+SF_ENTRY.sf_lstclus]
  9010 00003AF8 A1[BA05]                		mov	ax, [LASTPOS]
  9011 00003AFB 26894519                		mov	[es:di+19h], ax	; [ES:DI+SF_ENTRY.sf_cluspos]
  9012                                  
  9013                                  ADDREC:					; ...
  9014 00003AFF E309                    		jcxz	RET28
  9015 00003B01 26014D15                		add	[es:di+15h], cx	; [ES:DI+SF_ENTRY.sf_position]
  9016 00003B05 2683551700              		adc	word [es:di+17h], 0	; [ES:DI+SF_ENTRY.sf_position+2]
  9017                                  
  9018                                  RET28:					; ...
  9019 00003B0A F8                      		clc
  9020 00003B0B C3                      		retn
  9021                                  
  9022                                  ; =============== S U B	R O U T	I N E =======================================
  9023                                  
  9024                                  DskRdBufScan:	; ...
  9025 00003B0C 36833E[7100]00          		cmp	word [ss:DirtyBufferCount], 0
  9026 00003B12 743C                    		jz	short bufx
  9027 00003B14 368B1E[0706]            		mov	bx, [ss:HIGH_SECTOR]
  9028 00003B19 89DE                    		mov	si, bx
  9029 00003B1B 01D1                    		add	cx, dx
  9030 00003B1D 83D600                  		adc	si, 0
  9031 00003B20 E8831F                  		call	GETCURHEAD
  9032 00003B23 8B4502                  		mov	ax, [di+2]	; [di+BUFFINFO.buf_prev]
  9033 00003B26 36A3[BB0E]              		mov	[ss:FIRST_BUFF_ADDR], ax
  9034 00003B2A 268A4600                		mov	al, [es:bp+0]
  9035                                  
  9036                                  bufq:					; ...
  9037 00003B2E 3A4504                  		cmp	al, [di+4]	; [di+BUFFINFO.buf_ID]
  9038 00003B31 7514                    		jnz	short bufq1
  9039 00003B33 3B5D08                  		cmp	bx, [di+8]	; [di+BUFFINFO.buf_sector+2]
  9040 00003B36 7503                    		jnz	short bufq01
  9041 00003B38 3B5506                  		cmp	dx, [di+6]	; [di+BUFFINFO.buf_sector]
  9042                                  
  9043                                  bufq01:					; ...
  9044 00003B3B 770A                    		ja	short bufq1
  9045 00003B3D 3B7508                  		cmp	si, [di+8]
  9046 00003B40 7503                    		jnz	short bufq02
  9047 00003B42 3B4D06                  		cmp	cx, [di+6]
  9048                                  
  9049                                  bufq02:					; ...
  9050 00003B45 770A                    		ja	short bufq2
  9051                                  
  9052                                  bufq1:					; ...
  9053 00003B47 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
  9054 00003B4C 8B3D                    		mov	di, [di]	; [di+BUFFINFO.buf_next]
  9055 00003B4E 75DE                    		jnz	short bufq
  9056                                  
  9057                                  bufx:					; ...
  9058 00003B50 C3                      		retn
  9059                                  ; ---------------------------------------------------------------------------
  9060                                  
  9061                                  bufq2:					; ...
  9062 00003B51 50                      		push	ax
  9063 00003B52 F6450540                		test	byte [di+5], 40h ; [di+BUFFINFO.buf_flags],
  9064                                  					; buf_dirty
  9065 00003B56 742F                    		jz	short bufq3
  9066 00003B58 51                      		push	cx
  9067 00003B59 52                      		push	dx
  9068 00003B5A 56                      		push	si
  9069 00003B5B 57                      		push	di
  9070 00003B5C 06                      		push	es
  9071 00003B5D 89D0                    		mov	ax, dx
  9072 00003B5F 2B4506                  		sub	ax, [di+6]	; [di+BUFFINFO.buf_sector]
  9073 00003B62 F7D8                    		neg	ax
  9074 00003B64 8D7514                  		lea	si, [di+20]	; [di+BUFINSIZ]
  9075 00003B67 268B4E02                		mov	cx, [es:bp+2]	; [es:bp+DPB.SECTOR_SIZE]
  9076 00003B6B F7E1                    		mul	cx
  9077 00003B6D 368B3E[0C06]            		mov	di, [ss:TEMP_VAR]
  9078 00003B72 01C7                    		add	di, ax
  9079 00003B74 368E06[0E06]            		mov	es, [ss:TEMP_VAR2]
  9080 00003B79 D1E9                    		shr	cx, 1
  9081 00003B7B F3A5                    		rep movsw
  9082 00003B7D 83D100                  		adc	cx, 0
  9083 00003B80 F3A4                    		rep movsb
  9084 00003B82 07                      		pop	es
  9085 00003B83 5F                      		pop	di
  9086 00003B84 5E                      		pop	si
  9087 00003B85 5A                      		pop	dx
  9088 00003B86 59                      		pop	cx
  9089                                  
  9090                                  bufq3:					; ...
  9091 00003B87 89F8                    		mov	ax, di
  9092 00003B89 E82C1F                  		call	SCANPLACE
  9093 00003B8C 363B06[BB0E]            		cmp	ax, [ss:FIRST_BUFF_ADDR]
  9094 00003B91 58                      		pop	ax
  9095 00003B92 759A                    		jnz	short bufq
  9096 00003B94 EBBA                    		jmp	short bufx
  9097                                  
  9098                                  ; =============== S U B	R O U T	I N E =======================================
  9099                                  
  9100                                  DISKWRITE:		; ...
  9101 00003B96 E8E5FC                  		call	CHECK_WRITE_LOCK
  9102 00003B99 7304                    		jnb	short _WRITE_OK
  9103 00003B9B C3                      		retn
  9104                                  ; ---------------------------------------------------------------------------
  9105                                  
  9106                                  WRTEOFJ:				; ...
  9107 00003B9C E9BC01                  		jmp	WRTEOF
  9108                                  ; ---------------------------------------------------------------------------
  9109                                  
  9110                                  _WRITE_OK:				; ...
  9111 00003B9F 26816505BFBF            		and	word [es:di+5], 0BFBFh ; [ES:DI+SF_ENTRY.sf_flags],
  9112                                  					; ~(sf_close_nodate|devid_file_clean)
  9113 00003BA5 268B4511                		mov	ax, [es:di+11h]	; [ES:DI+SF_ENTRY.sf_size]
  9114 00003BA9 A3[0C06]                		mov	[TEMP_VAR], ax
  9115 00003BAC 268B4513                		mov	ax, [es:di+13h]	; [ES:DI+SF_ENTRY.sf_size+2]
  9116 00003BB0 A3[0E06]                		mov	[TEMP_VAR2],	ax
  9117 00003BB3 C42E[8A05]              		les	bp, [THISDPB]
  9118 00003BB7 E8F7FD                  		call	BREAKDOWN
  9119 00003BBA A1[CE05]                		mov	ax, word [BYTPOS]
  9120 00003BBD 8B16[D005]              		mov	dx, word [BYTPOS+2]
  9121 00003BC1 E3D9                    		jcxz	WRTEOFJ
  9122 00003BC3 01C8                    		add	ax, cx
  9123 00003BC5 83D200                  		adc	dx, 0
  9124 00003BC8 268B5E02                		mov	bx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  9125 00003BCC E8BB02                  		call	DIV32
  9126 00003BCF 89C6                    		mov	si, ax
  9127 00003BD1 890E[0706]              		mov	word [HIGH_SECTOR], cx
  9128 00003BD5 09D2                    		or	dx, dx
  9129 00003BD7 52                      		push	dx
  9130 00003BD8 89CA                    		mov	dx, cx
  9131 00003BDA 7506                    		jnz	short CALCLUS
  9132 00003BDC 83E801                  		sub	ax, 1
  9133 00003BDF 83DA00                  		sbb	dx, 0
  9134                                  
  9135                                  CALCLUS:				; ...
  9136 00003BE2 E8CC02                  		call	SHR32
  9137 00003BE5 5A                      		pop	dx
  9138 00003BE6 50                      		push	ax
  9139 00003BE7 52                      		push	dx
  9140 00003BE8 8B16[0E06]              		mov	dx, [TEMP_VAR2]
  9141 00003BEC A1[0C06]                		mov	ax, [TEMP_VAR]
  9142 00003BEF E89802                  		call	DIV32
  9143 00003BF2 890E[0E06]              		mov	[TEMP_VAR2],	cx
  9144 00003BF6 890E[CA05]              		mov	word [VALSEC+2],	cx
  9145 00003BFA 89C1                    		mov	cx, ax
  9146 00003BFC 89F3                    		mov	bx, si
  9147 00003BFE 09D2                    		or	dx, dx
  9148 00003C00 7408                    		jz	short NORND
  9149 00003C02 83C001                  		add	ax, 1
  9150 00003C05 8316[CA05]00            		adc	word [VALSEC+2],	0
  9151                                  
  9152                                  NORND:					; ...
  9153 00003C0A A3[C805]                		mov	word [VALSEC], ax
  9154 00003C0D 31C0                    		xor	ax, ax
  9155 00003C0F A3[DE05]                		mov	word [GROWCNT], ax
  9156 00003C12 A3[E005]                		mov	word [GROWCNT+2], ax
  9157 00003C15 58                      		pop	ax
  9158 00003C16 8B3E[0706]              		mov	di, [HIGH_SECTOR]
  9159 00003C1A 3B3E[0E06]              		cmp	di, [TEMP_VAR2]
  9160 00003C1E 7267                    		jb	short NOGROW
  9161 00003C20 7408                    		jz	short lowsec
  9162 00003C22 29CB                    		sub	bx, cx
  9163 00003C24 1B3E[0E06]              		sbb	di, [TEMP_VAR2]
  9164 00003C28 EB09                    		jmp	short yesgrow
  9165                                  ; ---------------------------------------------------------------------------
  9166                                  
  9167                                  lowsec:					; ...
  9168 00003C2A BF0000                  		mov	di, 0
  9169 00003C2D 29CB                    		sub	bx, cx
  9170 00003C2F 7256                    		jb	short NOGROW
  9171 00003C31 7447                    		jz	short TESTTAIL
  9172                                  
  9173                                  yesgrow:				; ...
  9174 00003C33 89D1                    		mov	cx, dx
  9175 00003C35 93                      		xchg	ax, bx
  9176 00003C36 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
  9177 00003C3A 8916[0706]              		mov	word [HIGH_SECTOR], dx
  9178 00003C3E A3[0E06]                		mov	[TEMP_VAR2],	ax
  9179 00003C41 89F8                    		mov	ax, di
  9180 00003C43 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
  9181 00003C47 0306[0706]              		add	ax, [HIGH_SECTOR]
  9182 00003C4B 89C2                    		mov	dx, ax
  9183 00003C4D A1[0E06]                		mov	ax, [TEMP_VAR2]
  9184 00003C50 29C8                    		sub	ax, cx
  9185 00003C52 83DA00                  		sbb	dx, 0
  9186 00003C55 01D8                    		add	ax, bx
  9187 00003C57 83D200                  		adc	dx, 0
  9188 00003C5A EB24                    		jmp	short SETGRW
  9189                                  ; ---------------------------------------------------------------------------
  9190                                  
  9191                                  HAVSTART:				; ...
  9192 00003C5C 89C1                    		mov	cx, ax
  9193 00003C5E E8A611                  		call	SKPCLP
  9194 00003C61 E312                    		jcxz	DOWRTJ
  9195 00003C63 E85113                  		call	ALLOCATE
  9196 00003C66 730D                    		jnb	short DOWRTJ
  9197                                  
  9198                                  WRTERR:					; ...
  9199 00003C68 B40F                    		mov	ah, 0Fh
  9200                                  
  9201                                  WRTERR22:				; ...
  9202 00003C6A A0[7605]                		mov	al, [THISDRV]
  9203 00003C6D 31C9                    		xor	cx, cx
  9204 00003C6F C43E[9E05]              		les	di, [THISSFT]
  9205 00003C73 F8                      		clc
  9206 00003C74 C3                      		retn
  9207                                  ; ---------------------------------------------------------------------------
  9208                                  
  9209                                  DOWRTJ:					; ...
  9210 00003C75 EB46                    		jmp	short DOWRT
  9211                                  ; ---------------------------------------------------------------------------
  9212                                  
  9213                                  ACC_ERRWJ:				; ...
  9214 00003C77 E9DE00                  		jmp	SET_ACC_ERRW
  9215                                  ; ---------------------------------------------------------------------------
  9216                                  
  9217                                  TESTTAIL:				; ...
  9218 00003C7A 29D0                    		sub	ax, dx
  9219 00003C7C 7609                    		jbe	short NOGROW
  9220 00003C7E 31D2                    		xor	dx, dx
  9221                                  
  9222                                  SETGRW:					; ...
  9223 00003C80 A3[DE05]                		mov	word [GROWCNT], ax
  9224 00003C83 8916[E005]              		mov	word [GROWCNT+2], dx
  9225                                  
  9226                                  NOGROW:					; ...
  9227 00003C87 58                      		pop	ax
  9228 00003C88 8B0E[BC05]              		mov	cx, [CLUSNUM]
  9229 00003C8C E85811                  		call	FNDCLUS
  9230 00003C8F 72E6                    		jb	short ACC_ERRWJ
  9231 00003C91 891E[BC05]              		mov	[CLUSNUM], bx
  9232 00003C95 8916[BA05]              		mov	[LASTPOS], dx
  9233 00003C99 29D0                    		sub	ax, dx
  9234 00003C9B 7420                    		jz	short DOWRT
  9235 00003C9D E3BD                    		jcxz	HAVSTART
  9236 00003C9F 51                      		push	cx
  9237 00003CA0 89C1                    		mov	cx, ax
  9238 00003CA2 E81213                  		call	ALLOCATE
  9239 00003CA5 59                      		pop	cx
  9240 00003CA6 72C0                    		jb	short WRTERR
  9241 00003CA8 8B16[BA05]              		mov	dx, [LASTPOS]
  9242 00003CAC 42                      		inc	dx
  9243 00003CAD 49                      		dec	cx
  9244 00003CAE 7405                    		jz	short NOSKIP
  9245 00003CB0 E85411                  		call	SKPCLP
  9246 00003CB3 72C2                    		jb	short ACC_ERRWJ
  9247                                  
  9248                                  NOSKIP:					; ...
  9249 00003CB5 891E[BC05]              		mov	[CLUSNUM], bx
  9250 00003CB9 8916[BA05]              		mov	[LASTPOS], dx
  9251                                  
  9252                                  DOWRT:					; ...
  9253 00003CBD 833E[D205]00            		cmp	word [BYTCNT1], 0
  9254 00003CC2 7409                    		jz	short WRTMID
  9255 00003CC4 8B1E[BC05]              		mov	bx, [CLUSNUM]
  9256 00003CC8 E8CD11                  		call	BUFWRT
  9257 00003CCB 72AA                    		jb	short ACC_ERRWJ
  9258                                  
  9259                                  WRTMID:					; ...
  9260 00003CCD A1[D605]                		mov	ax, [SECCNT]
  9261 00003CD0 09C0                    		or	ax, ax
  9262 00003CD2 7447                    		jz	short WRTLAST
  9263 00003CD4 0106[C405]              		add	word [SECPOS], ax
  9264 00003CD8 8316[C605]00            		adc	word [SECPOS+2], 0
  9265 00003CDD E81A12                  		call	NEXTSEC
  9266 00003CE0 7276                    		jb	short SET_ACC_ERRW
  9267 00003CE2 C606[7405]01            		mov	byte [TRANS], 1
  9268 00003CE7 8A16[7305]              		mov	dl, [SECCLUSPOS]
  9269 00003CEB 8B1E[BC05]              		mov	bx, [CLUSNUM]
  9270 00003CEF 8B0E[D605]              		mov	cx, [SECCNT]
  9271                                  
  9272                                  WRTLP:					; ...
  9273 00003CF3 E83512                  		call	OPTIMIZE
  9274 00003CF6 7260                    		jb	short SET_ACC_ERRW
  9275 00003CF8 57                      		push	di
  9276 00003CF9 50                      		push	ax
  9277 00003CFA E80701                  		call	DskWrtBufPurge
  9278 00003CFD 368E1E[2E03]            		mov	ds, word [ss:DMAADD+2]
  9279 00003D02 36C606[4B03]38          		mov	byte [ss:ALLOWED], 38h ; Allowed_RETRY+Allowed_FAIL+Allowed_IGNORE
  9280 00003D08 E8BAFB                  		call	DWRITE
  9281 00003D0B 59                      		pop	cx
  9282 00003D0C 5B                      		pop	bx
  9283 00003D0D 16                      		push	ss
  9284 00003D0E 1F                      		pop	ds
  9285 00003D0F 7247                    		jb	short SET_ACC_ERRW
  9286 00003D11 E308                    		jcxz	WRTLAST
  9287 00003D13 B200                    		mov	dl, 0
  9288 00003D15 FF06[BA05]              		inc	word [LASTPOS]
  9289 00003D19 EBD8                    		jmp	short WRTLP
  9290                                  ; ---------------------------------------------------------------------------
  9291                                  
  9292                                  WRTLAST:				; ...
  9293 00003D1B A1[D405]                		mov	ax, [BYTCNT2]
  9294 00003D1E 09C0                    		or	ax, ax
  9295 00003D20 7413                    		jz	short FINWRT
  9296 00003D22 A3[D205]                		mov	[BYTCNT1], ax
  9297 00003D25 E8D211                  		call	NEXTSEC
  9298 00003D28 722E                    		jb	short SET_ACC_ERRW
  9299 00003D2A C706[CC05]0000          		mov	word [BYTSECPOS], 0
  9300 00003D30 E86511                  		call	BUFWRT
  9301 00003D33 7223                    		jb	short SET_ACC_ERRW
  9302                                  
  9303                                  FINWRT:					; ...
  9304 00003D35 C43E[9E05]              		les	di, [THISSFT]
  9305 00003D39 A1[DE05]                		mov	ax, word [GROWCNT]
  9306 00003D3C 8B0E[E005]              		mov	cx, word [GROWCNT+2]
  9307 00003D40 09C0                    		or	ax, ax
  9308 00003D42 7502                    		jnz	short UPDATE_size
  9309 00003D44 E30F                    		jcxz	SAMSIZ
  9310                                  
  9311                                  UPDATE_size:				; ...
  9312 00003D46 26014511                		add	[es:di+11h], ax	; [ES:DI+SF_ENTRY.sf_size]
  9313 00003D4A 26114D13                		adc	[es:di+13h], cx	; [ES:DI+SF_ENTRY.sf_size+2]
  9314 00003D4E B80100                  		mov	ax, 1
  9315                                  		;call	dword [ShSU] ; call far [JShare+(14*4)] ; 14 = ShSU
  9316 00003D51 FF1E[C800]              		call	far [JShare+(14*4)] 
  9317                                  SAMSIZ:					; ...
  9318 00003D55 E98AFD                  		jmp	SETCLUS
  9319                                  ; ---------------------------------------------------------------------------
  9320                                  
  9321                                  SET_ACC_ERRW:				; ...
  9322 00003D58 E9EFFC                  		jmp	SET_ACC_ERR_DS
  9323                                  ; ---------------------------------------------------------------------------
  9324                                  
  9325                                  WRTEOF:					; ...
  9326 00003D5B 89C1                    		mov	cx, ax
  9327 00003D5D 09D1                    		or	cx, dx
  9328 00003D5F 746B                    		jz	short KILLFIL
  9329 00003D61 83E801                  		sub	ax, 1
  9330 00003D64 83DA00                  		sbb	dx, 0
  9331 00003D67 53                      		push	bx
  9332 00003D68 268B5E02                		mov	bx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  9333 00003D6C E81B01                  		call	DIV32
  9334 00003D6F 5B                      		pop	bx
  9335 00003D70 89CA                    		mov	dx, cx
  9336 00003D72 890E[0706]              		mov	word [HIGH_SECTOR], cx
  9337 00003D76 E83801                  		call	SHR32
  9338 00003D79 89C1                    		mov	cx, ax
  9339 00003D7B E86910                  		call	FNDCLUS
  9340                                  
  9341                                  SET_ACC_ERRWJ2:				; ...
  9342 00003D7E 72D8                    		jb	short SET_ACC_ERRW
  9343 00003D80 E326                    		jcxz	RELFILE
  9344 00003D82 E83212                  		call	ALLOCATE
  9345 00003D85 721E                    		jb	short WRTERRJ
  9346                                  
  9347                                  UPDATE:					; ...
  9348 00003D87 C43E[9E05]              		les	di, [THISSFT]
  9349 00003D8B A1[CE05]                		mov	ax, word [BYTPOS]
  9350 00003D8E 26894511                		mov	[es:di+11h], ax	; [ES:DI+SF_ENTRY.sf_size]
  9351 00003D92 A1[D005]                		mov	ax, word [BYTPOS+2]
  9352 00003D95 26894513                		mov	[es:di+13h], ax	; [ES:DI+SF_ENTRY.sf_size+2]
  9353 00003D99 B80200                  		mov	ax, 2
  9354                                  		;call	dword [ShSU] ; call far [JShare+(14*4)]
  9355 00003D9C FF1E[C800]              		call	far [JShare+(14*4)]
  9356 00003DA0 31C9                    		xor	cx, cx
  9357 00003DA2 E95AFD                  		jmp	ADDREC
  9358                                  ; ---------------------------------------------------------------------------
  9359                                  
  9360                                  WRTERRJ:				; ...
  9361 00003DA5 E9C0FE                  		jmp	WRTERR
  9362                                  ; ---------------------------------------------------------------------------
  9363                                  
  9364                                  RELFILE:				; ...
  9365 00003DA8 06                      		push	es
  9366 00003DA9 C43E[9E05]              		les	di, [THISSFT]
  9367 00003DAD 263B5519                		cmp	dx, [es:di+19h]	; [ES:DI+SF_ENTRY.sf_cluspos]
  9368 00003DB1 730E                    		jnb	short SKIPRESET
  9369 00003DB3 26C745190000            		mov	word [es:di+19h], 0
  9370 00003DB9 268B550B                		mov	dx, [es:di+0Bh]	; [ES:DI+SF_ENTRY.sf_firclus]
  9371 00003DBD 26895535                		mov	[es:di+35h], dx	; [ES:DI+SF_ENTRY.sf_lstclus]
  9372                                  
  9373                                  SKIPRESET:				; ...
  9374 00003DC1 07                      		pop	es
  9375 00003DC2 BAFFFF                  		mov	dx, 0FFFFh
  9376 00003DC5 E8A312                  		call	RELBLKS
  9377                                  
  9378                                  SET_ACC_ERRWJJ:				; ...
  9379 00003DC8 72B4                    		jb	short SET_ACC_ERRWJ2
  9380 00003DCA EBBB                    		jmp	short UPDATE
  9381                                  ; ---------------------------------------------------------------------------
  9382                                  
  9383                                  KILLFIL:				; ...
  9384 00003DCC 31DB                    		xor	bx, bx
  9385 00003DCE 06                      		push	es
  9386 00003DCF C43E[9E05]              		les	di, [THISSFT]
  9387 00003DD3 26895D19                		mov	[es:di+19h], bx	; [ES:DI+SF_ENTRY.sf_cluspos]
  9388 00003DD7 26895D35                		mov	[es:di+35h], bx	; [ES:DI+SF_ENTRY.sf_lstclus]
  9389 00003DDB 26875D0B                		xchg	bx, [es:di+0Bh]	; [ES:DI+SF_ENTRY.sf_firclus]
  9390 00003DDF 07                      		pop	es
  9391 00003DE0 09DB                    		or	bx, bx
  9392 00003DE2 741E                    		jz	short UPDATEJ
  9393 00003DE4 06                      		push	es
  9394 00003DE5 55                      		push	bp
  9395 00003DE6 50                      		push	ax
  9396 00003DE7 51                      		push	cx
  9397 00003DE8 52                      		push	dx
  9398 00003DE9 C42E[8A05]              		les	bp, [THISDPB]
  9399 00003DED 268A5600                		mov	dl, [es:bp+0]
  9400 00003DF1 89D9                    		mov	cx, bx
  9401 00003DF3 B402                    		mov	ah, 2
  9402 00003DF5 E8F2E9                  		call	FastOpen_Update
  9403 00003DF8 5A                      		pop	dx
  9404 00003DF9 59                      		pop	cx
  9405 00003DFA 58                      		pop	ax
  9406 00003DFB 5D                      		pop	bp
  9407 00003DFC 07                      		pop	es
  9408 00003DFD E86912                  		call	RELEASE
  9409 00003E00 72C6                    		jb	short SET_ACC_ERRWJJ
  9410                                  
  9411                                  UPDATEJ:				; ...
  9412 00003E02 EB83                    		jmp	short UPDATE
  9413                                  
  9414                                  ; =============== S U B	R O U T	I N E =======================================
  9415                                  
  9416                                  DskWrtBufPurge:	; ...
  9417 00003E04 53                      		push	bx
  9418 00003E05 51                      		push	cx
  9419 00003E06 368B1E[0706]            		mov	bx, [ss:HIGH_SECTOR]
  9420 00003E0B 89DE                    		mov	si, bx
  9421 00003E0D 01D1                    		add	cx, dx
  9422 00003E0F 83D600                  		adc	si, 0
  9423 00003E12 268A4600                		mov	al, [es:bp+0]
  9424 00003E16 36833E[7700]00          		cmp	word [ss:SC_CACHE_COUNT], 0
  9425 00003E1C 7431                    		jz	short nosc
  9426 00003E1E 363A06[B00D]            		cmp	al, [ss:CurSC_DRIVE]
  9427 00003E23 752A                    		jnz	short nosc
  9428 00003E25 50                      		push	ax
  9429 00003E26 36A1[B10D]              		mov	ax, word [ss:CurSC_SECTOR]
  9430 00003E2A 368B3E[B30D]            		mov	di, word [ss:CurSC_SECTOR+2]
  9431 00003E2F 39FE                    		cmp	si, di
  9432 00003E31 7502                    		jnz	short sc01
  9433 00003E33 39C1                    		cmp	cx, ax
  9434                                  
  9435                                  sc01:					; ...
  9436 00003E35 7617                    		jbe	short sc5
  9437 00003E37 360306[7700]            		add	ax, [ss:SC_CACHE_COUNT]
  9438 00003E3C 83D700                  		adc	di, 0
  9439 00003E3F 39FB                    		cmp	bx, di
  9440 00003E41 7502                    		jnz	short sc02
  9441 00003E43 39C2                    		cmp	dx, ax
  9442                                  
  9443                                  sc02:					; ...
  9444 00003E45 7307                    		jnb	short sc5
  9445 00003E47 36C706[B50D]0000        		mov	word [ss:SC_STATUS], 0
  9446                                  
  9447                                  sc5:					; ...
  9448 00003E4E 58                      		pop	ax
  9449                                  
  9450                                  nosc:					; ...
  9451 00003E4F E8541C                  		call	GETCURHEAD
  9452                                  
  9453                                  _bufq:					; ...
  9454 00003E52 3A4504                  		cmp	al, [di+4]	; [di+BUFFINFO.buf_ID]
  9455 00003E55 7527                    		jnz	short bufq5
  9456 00003E57 3B5D08                  		cmp	bx, [di+8]	; [di+BUFFINFO.buf_sector+2]
  9457 00003E5A 7503                    		jnz	short bufq04
  9458 00003E5C 3B5506                  		cmp	dx, [di+6]	; [di+BUFFINFO.buf_sector]
  9459                                  
  9460                                  bufq04:					; ...
  9461 00003E5F 771D                    		ja	short bufq5
  9462 00003E61 3B7508                  		cmp	si, [di+8]
  9463 00003E64 7503                    		jnz	short bufq05
  9464 00003E66 3B4D06                  		cmp	cx, [di+6]
  9465                                  
  9466                                  bufq05:					; ...
  9467 00003E69 7613                    		jbe	short bufq5
  9468 00003E6B F6450540                		test	byte [di+5], 40h ; [di+BUFFINFO.buf_flags],
  9469                                  					; buf_dirty
  9470 00003E6F 7403                    		jz	short bufq4
  9471 00003E71 E8A81E                  		call	DEC_DIRTY_COUNT
  9472                                  
  9473                                  bufq4:					; ...
  9474 00003E74 C74504FF20              		mov	word [di+4], 20FFh ; [di+BUFFINFO.buf_ID],
  9475                                  					; ((buf_visit<<8)|0FFh)
  9476 00003E79 E83C1C                  		call	SCANPLACE
  9477 00003E7C EB02                    		jmp	short bufq6
  9478                                  ; ---------------------------------------------------------------------------
  9479                                  
  9480                                  bufq5:					; ...
  9481 00003E7E 8B3D                    		mov	di, [di]	; [di+BUFFINFO.buf_next]
  9482                                  
  9483                                  bufq6:					; ...
  9484 00003E80 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
  9485 00003E85 75CB                    		jnz	short _bufq
  9486 00003E87 59                      		pop	cx
  9487 00003E88 5B                      		pop	bx
  9488 00003E89 C3                      		retn
  9489                                  
  9490                                  ; =============== S U B	R O U T	I N E =======================================
  9491                                  
  9492                                  DIV32:		; ...
  9493 00003E8A 81FB0002                		cmp	bx, 512
  9494 00003E8E 7515                    		jnz	short div5
  9495 00003E90 89D1                    		mov	cx, dx
  9496 00003E92 89C2                    		mov	dx, ax		; CX:AX	= Dividend
  9497                                  					; DX = Remainder
  9498 00003E94 81E2FF01                		and	dx, 1FFh	; 511
  9499 00003E98 88E0                    		mov	al, ah
  9500 00003E9A 88CC                    		mov	ah, cl
  9501 00003E9C 88E9                    		mov	cl, ch
  9502 00003E9E 30ED                    		xor	ch, ch
  9503 00003EA0 D1E9                    		shr	cx, 1
  9504 00003EA2 D1D8                    		rcr	ax, 1
  9505 00003EA4 C3                      		retn
  9506                                  ; ---------------------------------------------------------------------------
  9507                                  
  9508                                  div5:					; ...
  9509 00003EA5 89C1                    		mov	cx, ax
  9510 00003EA7 89D0                    		mov	ax, dx
  9511 00003EA9 31D2                    		xor	dx, dx
  9512 00003EAB F7F3                    		div	bx		; 0:AX/BX
  9513 00003EAD 91                      		xchg	ax, cx
  9514 00003EAE F7F3                    		div	bx		; DX:AX/BX
  9515 00003EB0 C3                      		retn
  9516                                  
  9517                                  ; =============== S U B	R O U T	I N E =======================================
  9518                                  
  9519                                  SHR32:		; ...
  9520 00003EB1 268A4E05                		mov	cl, [es:bp+5]	; [ES:BP+DPB.CLUSTER_SHIFT]
  9521 00003EB5 30ED                    		xor	ch, ch
  9522 00003EB7 E306                    		jcxz	norota
  9523                                  
  9524                                  rotashft2:				; ...
  9525 00003EB9 D1EA                    		shr	dx, 1
  9526 00003EBB D1D8                    		rcr	ax, 1
  9527 00003EBD E2FA                    		loop	rotashft2
  9528                                  
  9529                                  norota:					; ...
  9530 00003EBF C3                      		retn
  9531                                  
  9532                                  ; =============== S U B	R O U T	I N E =======================================
  9533                                  
  9534                                  FINDENTRY:		; ...
  9535 00003EC0 E85904                  		call	STARTSRCH
  9536 00003EC3 A0[6B05]                		mov	al, [ATTRIB]
  9537 00003EC6 249E                    		and	al, 9Eh		; ~attr_ignore
  9538 00003EC8 3C08                    		cmp	al, 8		; attr_volume_id
  9539 00003ECA 7503                    		jnz	short NOTVOLSRCH
  9540 00003ECC E87D01                  		call	SETROOTSRCH
  9541                                  
  9542                                  NOTVOLSRCH:				; ...
  9543 00003ECF E80801                  		call	GETENTRY
  9544 00003ED2 7303                    		jnb	short SRCH
  9545 00003ED4 E99500                  		jmp	SETESRET
  9546                                  ; ---------------------------------------------------------------------------
  9547                                  
  9548                                  SRCH:					; ...
  9549 00003ED7 1E                      		push	ds
  9550 00003ED8 8E1E[E405]              		mov	ds, word [CURBUF+2]
  9551 00003EDC 8A27                    		mov	ah, [bx]	; [BX+dir_entry.dir_name] ; mov	ah,[bx+0]
  9552 00003EDE 08E4                    		or	ah, ah
  9553 00003EE0 743A                    		jz	short FREE
  9554 00003EE2 363A26[7F05]            		cmp	ah, [ss:DELALL]
  9555 00003EE7 7433                    		jz	short FREE
  9556 00003EE9 F6470B08                		test	byte [bx+0Bh], 8 ; [BX+dir_entry.dir_attr],
  9557                                  					; attr_volume_id
  9558 00003EED 7405                    		jz	short CHKFNAM
  9559 00003EEF 36FE06[7B05]            		inc	byte [ss:VOLID]
  9560                                  
  9561                                  CHKFNAM:				; ...
  9562 00003EF4 8CD6                    		mov	si, ss
  9563 00003EF6 8EC6                    		mov	es, si
  9564 00003EF8 89DE                    		mov	si, bx
  9565 00003EFA BF[4B05]                		mov	di, NAME1
  9566 00003EFD 36803E[4B05]E5          		cmp	byte [ss:NAME1], 0E5h
  9567 00003F03 7506                    		jnz	short NO_E5
  9568 00003F05 36C606[4B05]05          		mov	byte [ss:NAME1], 5
  9569                                  
  9570                                  NO_E5:					; ...
  9571 00003F0B E86100                  		call	MetaCompare
  9572 00003F0E 7428                    		jz	short FOUND
  9573 00003F10 1F                      		pop	ds
  9574                                  
  9575                                  NEXTENT:				; ...
  9576 00003F11 C42E[8A05]              		les	bp, [THISDPB]
  9577 00003F15 E86600                  		call	NEXTENTRY
  9578 00003F18 73BD                    		jnb	short SRCH
  9579 00003F1A EB50                    		jmp	short SETESRET
  9580                                  ; ---------------------------------------------------------------------------
  9581                                  
  9582                                  FREE:					; ...
  9583 00003F1C 1F                      		pop	ds
  9584 00003F1D 8B0E[4803]              		mov	cx, [LASTENT]
  9585 00003F21 3B0E[D805]              		cmp	cx, [ENTFREE]
  9586 00003F25 7304                    		jnb	short TSTALL
  9587 00003F27 890E[D805]              		mov	[ENTFREE], cx
  9588                                  
  9589                                  TSTALL:					; ...
  9590 00003F2B 3A26[7F05]              		cmp	ah, [DELALL]
  9591                                  
  9592                                  NEXTENTJ:				; ...
  9593 00003F2F 74E0                    		jz	short NEXTENT
  9594 00003F31 890E[DA05]              		mov	[ENTLAST], cx
  9595 00003F35 F9                      		stc
  9596 00003F36 EB34                    		jmp	short SETESRET
  9597                                  ; ---------------------------------------------------------------------------
  9598                                  
  9599                                  FOUND:					; ...
  9600 00003F38 8A2C                    		mov	ch, [si]
  9601 00003F3A 1F                      		pop	ds
  9602 00003F3B 8A26[6B05]              		mov	ah, [ATTRIB]
  9603 00003F3F 80E49E                  		and	ah, 9Eh		; ~attr_ignore
  9604 00003F42 8D740F                  		lea	si, [si+15]	; [SI+dir_entry.dir_first-dir_entry.dir_attr]
  9605 00003F45 F6C508                  		test	ch, 8		; attr_volume_id
  9606 00003F48 7409                    		jz	short check_one_volume_id
  9607 00003F4A F6C408                  		test	ah, 8		; attr_volume_id
  9608 00003F4D 74E0                    		jz	short NEXTENTJ
  9609 00003F4F 30E4                    		xor	ah, ah
  9610 00003F51 EB11                    		jmp	short RETFF
  9611                                  ; ---------------------------------------------------------------------------
  9612                                  
  9613                                  check_one_volume_id:			; ...
  9614 00003F53 80FC08                  		cmp	ah, 8
  9615 00003F56 74D7                    		jz	short NEXTENTJ
  9616 00003F58 E8D503                  		call	MatchAttributes
  9617 00003F5B 7407                    		jz	short RETFF
  9618 00003F5D F606[7E05]FF            		test	byte [CREATING], 0FFh ; -1
  9619 00003F62 74CB                    		jz	short NEXTENTJ
  9620                                  
  9621                                  RETFF:					; ...
  9622 00003F64 C42E[8A05]              		les	bp, [THISDPB]
  9623 00003F68 268A6600                		mov	ah, [es:bp+0]	; [ES:BP+DPB.DRIVE]
  9624                                  
  9625                                  SETESRET:				; ...
  9626 00003F6C 16                      		push	ss
  9627 00003F6D 07                      		pop	es
  9628 00003F6E C3                      		retn
  9629                                  
  9630                                  ; =============== S U B	R O U T	I N E =======================================
  9631                                  
  9632                                  MetaCompare:	; ...
  9633 00003F6F B90B00                  		mov	cx, 11
  9634                                  
  9635                                  WILDCRD:				; ...
  9636 00003F72 F3A6                    		repe cmpsb
  9637 00003F74 7407                    		jz	short MetaRet
  9638                                  
  9639                                  CHECK_META:				; 3Fh
  9640 00003F76 26807DFF3F              		cmp	byte [es:di-1], '?'
  9641 00003F7B 74F5                    		jz	short WILDCRD
  9642                                  
  9643                                  MetaRet:				; ...
  9644 00003F7D C3                      		retn
  9645                                  
  9646                                  ; =============== S U B	R O U T	I N E =======================================
  9647                                  
  9648                                  NEXTENTRY:		; ...
  9649 00003F7E A1[4803]                		mov	ax, [LASTENT]
  9650 00003F81 3B06[DA05]              		cmp	ax, [ENTLAST]
  9651 00003F85 7424                    		jz	short NONE
  9652 00003F87 40                      		inc	ax
  9653 00003F88 8D5F20                  		lea	bx, [bx+32]
  9654 00003F8B 39D3                    		cmp	bx, dx
  9655 00003F8D 721E                    		jb	short HAVIT
  9656 00003F8F 8A1E[7305]              		mov	bl, [SECCLUSPOS]
  9657 00003F93 FEC3                    		inc	bl
  9658 00003F95 3A1E[7705]              		cmp	bl, [CLUSFAC]
  9659 00003F99 7217                    		jb	short SAMECLUS
  9660 00003F9B 8B1E[DC05]              		mov	bx, [NXTCLUSNUM]
  9661 00003F9F E82C17                  		call	IsEOF
  9662 00003FA2 7307                    		jnb	short NONE
  9663 00003FA4 83FB02                  		cmp	bx, 2
  9664 00003FA7 7202                    		jb	short NONE
  9665 00003FA9 EB32                    		jmp	short GETENT
  9666                                  ; ---------------------------------------------------------------------------
  9667                                  
  9668                                  NONE:					; ...
  9669 00003FAB F9                      		stc
  9670 00003FAC C3                      		retn
  9671                                  ; ---------------------------------------------------------------------------
  9672                                  
  9673                                  HAVIT:					; ...
  9674 00003FAD A3[4803]                		mov	[LASTENT], ax
  9675 00003FB0 F8                      		clc
  9676                                  
  9677                                  nextentry_retn:				; ...
  9678 00003FB1 C3                      		retn
  9679                                  ; ---------------------------------------------------------------------------
  9680                                  
  9681                                  SAMECLUS:				; ...
  9682 00003FB2 881E[7305]              		mov	[SECCLUSPOS], bl
  9683 00003FB6 A3[4803]                		mov	[LASTENT], ax
  9684 00003FB9 1E                      		push	ds
  9685 00003FBA C53E[E205]              		lds	di, [CURBUF]
  9686 00003FBE 8B5508                  		mov	dx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
  9687 00003FC1 368916[0706]            		mov	word [ss:HIGH_SECTOR], dx
  9688 00003FC6 8B5506                  		mov	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
  9689 00003FC9 83C201                  		add	dx, 1
  9690 00003FCC 368316[0706]00          		adc	word [ss:HIGH_SECTOR], 0
  9691 00003FD2 1F                      		pop	ds
  9692 00003FD3 E848F8                  		call	FIRSTCLUSTER
  9693 00003FD6 31DB                    		xor	bx, bx
  9694 00003FD8 EB24                    		jmp	short SETENTRY
  9695                                  
  9696                                  ; =============== S U B	R O U T	I N E =======================================
  9697                                  
  9698                                  GETENTRY:		; ...
  9699 00003FDA A1[4803]                		mov	ax, [LASTENT]
  9700                                  
  9701                                  GETENT:					; ...
  9702 00003FDD A3[4803]                		mov	[LASTENT], ax
  9703 00003FE0 B105                    		mov	cl, 5
  9704 00003FE2 D3C0                    		rol	ax, cl		; * 32
  9705 00003FE4 89C2                    		mov	dx, ax
  9706 00003FE6 83E0E0                  		and	ax, 0FFE0h	; ~(32-1)
  9707 00003FE9 83E21F                  		and	dx, 1Fh		; 32-1
  9708 00003FEC 268B5E02                		mov	bx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  9709 00003FF0 80E3E0                  		and	bl, 0E0h	; 255-31
  9710 00003FF3 F7F3                    		div	bx
  9711 00003FF5 89D3                    		mov	bx, dx
  9712 00003FF7 53                      		push	bx
  9713 00003FF8 E8CAF7                  		call	DIRREAD
  9714 00003FFB 5B                      		pop	bx
  9715 00003FFC 72B3                    		jb	short nextentry_retn
  9716                                  
  9717                                  SETENTRY:				; ...
  9718 00003FFE 8B16[E205]              		mov	dx, word [CURBUF]
  9719 00004002 83C214                  		add	dx, 20		; BUFINSIZ
  9720 00004005 01D3                    		add	bx, dx
  9721 00004007 26035602                		add	dx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
  9722 0000400B C3                      		retn
  9723                                  
  9724                                  ; =============== S U B	R O U T	I N E =======================================
  9725                                  
  9726                                  SETDIRSRCH:		; ...
  9727 0000400C 09DB                    		or	bx, bx
  9728 0000400E 743C                    		jz	short SETROOTSRCH
  9729 00004010 891E[C205]              		mov	[DIRSTART], bx
  9730 00004014 268A4604                		mov	al, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
  9731 00004018 FEC0                    		inc	al
  9732 0000401A A2[7705]                		mov	[CLUSFAC], al
  9733 0000401D 56                      		push	si
  9734 0000401E F606[3A0D]02            		test	byte [FastOpenFlg], 2 ; Lookup_Success
  9735 00004023 7507                    		jnz	short UNP_OK
  9736 00004025 E8BD16                  		call	UNPACK
  9737 00004028 7302                    		jnb	short UNP_OK
  9738 0000402A 5E                      		pop	si
  9739 0000402B C3                      		retn
  9740                                  ; ---------------------------------------------------------------------------
  9741                                  
  9742                                  UNP_OK:					; ...
  9743 0000402C 893E[BC05]              		mov	[CLUSNUM], di
  9744 00004030 89DA                    		mov	dx, bx
  9745 00004032 30DB                    		xor	bl, bl
  9746 00004034 881E[7305]              		mov	[SECCLUSPOS], bl
  9747 00004038 E8500F                  		call	FIGREC
  9748 0000403B 5E                      		pop	si
  9749 0000403C 52                      		push	dx
  9750 0000403D 8B16[0706]              		mov	dx, [HIGH_SECTOR]
  9751 00004041 8916[C005]              		mov	word [DIRSEC+2],	dx
  9752 00004045 5A                      		pop	dx
  9753 00004046 8916[BE05]              		mov	word [DIRSEC], dx
  9754 0000404A F8                      		clc
  9755 0000404B C3                      		retn
  9756                                  
  9757                                  ; =============== S U B	R O U T	I N E =======================================
  9758                                  
  9759                                  SETROOTSRCH:	; ...
  9760 0000404C 31C0                    		xor	ax, ax
  9761 0000404E A3[C205]                		mov	[DIRSTART], ax
  9762 00004051 A2[7305]                		mov	[SECCLUSPOS], al
  9763 00004054 48                      		dec	ax
  9764 00004055 A3[BC05]                		mov	[CLUSNUM], ax
  9765 00004058 268B460B                		mov	ax, [es:bp+0Bh]	; [ES:BP+DPB.FIRST_SECTOR]
  9766 0000405C 268B5611                		mov	dx, [es:bp+11h]	; [ES:BP+DPB.DIR_SECTOR]
  9767 00004060 29D0                    		sub	ax, dx
  9768 00004062 A2[7705]                		mov	[CLUSFAC], al
  9769 00004065 8916[BE05]              		mov	word [DIRSEC], dx
  9770 00004069 C706[C005]0000          		mov	word [DIRSEC+2],	0
  9771 0000406F F8                      		clc
  9772 00004070 C3                      		retn
  9773                                  
  9774                                  ; =============== S U B	R O U T	I N E =======================================
  9775                                  
  9776                                  GETPATH:
  9777                                  
  9778                                  ; FUNCTION CHUNK AT 7F47 SIZE 000001A5 BYTES
  9779                                  
  9780 00004071 C706[7E05]00E5          		mov	word [CREATING], 0E500h ; DIRFREE*256+0
  9781                                  
  9782                                  GetPathNoSet:				; ...
  9783 00004077 C606[2303]02            		mov	byte [EXTERR_LOCUS], 2 ; errLOC_Disk
  9784 0000407C C706[E205]FFFF          		mov	word [CURBUF], -1 ; 0FFFFh
  9785 00004082 8B3E[B205]              		mov	di, [WFP_START]
  9786 00004086 817D013A5C              		cmp	word [di+1], 5C3Ah ; '\' << 8 + ':'
  9787 0000408B 743A                    		jz	short CrackIt
  9788 0000408D 83C703                  		add	di, 3
  9789 00004090 89FE                    		mov	si, di
  9790 00004092 E8B200                  		call	CHKDEV
  9791 00004095 722E                    		jb	short InternalError
  9792                                  
  9793                                  Build_devJ:				; ...
  9794 00004097 A0[6D05]                		mov	al, [SATTRIB]
  9795 0000409A A2[6B05]                		mov	byte [ATTRIB], al
  9796 0000409D C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
  9797 000040A2 16                      		push	ss
  9798 000040A3 07                      		pop	es
  9799 000040A4 BE[4B05]                		mov	si, NAME1
  9800 000040A7 8B3E[B205]              		mov	di, [WFP_START]
  9801 000040AB 89FA                    		mov	dx, di
  9802 000040AD B90800                  		mov	cx, 8
  9803                                  
  9804                                  MoveLoop:				; ...
  9805 000040B0 AC                      		lodsb
  9806 000040B1 AA                      		stosb
  9807 000040B2 3C20                    		cmp	al, 20h	; ' '
  9808 000040B4 7402                    		jz	short NoSave
  9809 000040B6 89FA                    		mov	dx, di
  9810                                  
  9811                                  NoSave:					; ...
  9812 000040B8 E2F6                    		loop	MoveLoop
  9813 000040BA 89D7                    		mov	di, dx
  9814 000040BC C60500                  		mov	byte [di], 0
  9815 000040BF E8DB02                  		call	Build_device_ent
  9816 000040C2 FEC0                    		inc	al
  9817 000040C4 C3                      		retn
  9818                                  ; ---------------------------------------------------------------------------
  9819                                  
  9820                                  InternalError:				; ...
  9821 000040C5 EBFE                    		jmp	short InternalError
  9822                                  ; ---------------------------------------------------------------------------
  9823                                  
  9824                                  CrackIt:				; ...
  9825 000040C7 8B36[B605]              		mov	si, [CURR_DIR_END]
  9826 000040CB 83FEFF                  		cmp	si, -1		; 0FFFFh
  9827 000040CE 7503                    		jnz	short LOOK_SING
  9828 000040D0 8D7503                  		lea	si, [di+3]
  9829                                  
  9830                                  LOOK_SING:				; ...
  9831 000040D3 C606[6B05]16            		mov	byte [ATTRIB], 16h ; attr_directory+attr_system+attr_hidden
  9832 000040D8 C43E[A205]              		les	di, [THISCDS]
  9833 000040DC B8FFFF                  		mov	ax, 0FFFFh	; -1
  9834 000040DF 268B5D49                		mov	bx, [es:di+49h]	; [ES:DI+curdir.ID]
  9835 000040E3 8B36[B605]              		mov	si, [CURR_DIR_END]
  9836 000040E7 39C6                    		cmp	si, ax
  9837 000040E9 7440                    		jz	short NO_CURR_D
  9838 000040EB 39C3                    		cmp	bx, ax
  9839 000040ED 743C                    		jz	short NO_CURR_D
  9840 000040EF F606[3A0D]01            		test	byte [FastOpenFlg], 1 ; FastOpen_Set
  9841 000040F4 7442                    		jz	short GOT_SEARCH_CLUSTER
  9842 000040F6 06                      		push	es
  9843 000040F7 57                      		push	di
  9844 000040F8 51                      		push	cx
  9845 000040F9 FF74FF                  		push	word [si-1]
  9846 000040FC 56                      		push	si
  9847 000040FD 53                      		push	bx
  9848 000040FE C644FF00                		mov	byte [si-1], 0
  9849 00004102 8B36[B205]              		mov	si, [WFP_START]
  9850 00004106 BB[300D]                		mov	bx, FastOpenTable
  9851 00004109 BF[460D]                		mov	di, Dir_Info_Buff
  9852 0000410C B9[3B0D]                		mov	cx, FastOpen_Ext_Info
  9853 0000410F B001                    		mov	al, 1		; FONC_Look_up
  9854 00004111 1E                      		push	ds
  9855 00004112 07                      		pop	es
  9856                                  		;call	dword [bx+2] ; CALL far [BX+fastopen_entry.name_caching]
  9857 00004113 FF5F02                  		call	far [bx+2]
  9858 00004116 7208                    		jb	short GO_Chk_end1
  9859 00004118 803C00                  		cmp	byte [si], 0
  9860 0000411B 7404                    		jz	short GO_Chk_end
  9861 0000411D F9                      		stc
  9862 0000411E EB01                    		jmp	short GO_Chk_end
  9863                                  ; ---------------------------------------------------------------------------
  9864                                  
  9865                                  GO_Chk_end1:				; ...
  9866 00004120 F8                      		clc
  9867                                  
  9868                                  GO_Chk_end:				; ...
  9869 00004121 5B                      		pop	bx
  9870 00004122 5E                      		pop	si
  9871 00004123 8F44FF                  		pop	word [si-1]
  9872 00004126 59                      		pop	cx
  9873 00004127 5F                      		pop	di
  9874 00004128 07                      		pop	es
  9875 00004129 730D                    		jnb	short GOT_SEARCH_CLUSTER
  9876                                  
  9877                                  NO_CURR_D:				; ...
  9878 0000412B 8B36[B205]              		mov	si, [WFP_START]
  9879 0000412F 8D7403                  		lea	si, [si+3]
  9880 00004132 C42E[8A05]              		les	bp, [THISDPB]
  9881 00004136 EB3F                    		jmp	short ROOTPATH
  9882                                  ; ---------------------------------------------------------------------------
  9883                                  
  9884                                  GOT_SEARCH_CLUSTER:			; ...
  9885 00004138 C42E[8A05]              		les	bp, [THISDPB]
  9886 0000413C E8CDFE                  		call	SETDIRSRCH
  9887 0000413F 7202                    		jb	short SETFERR
  9888 00004141 EB45                    		jmp	short FINDPATH
  9889                                  ; ---------------------------------------------------------------------------
  9890                                  
  9891                                  SETFERR:				; ...
  9892 00004143 30C9                    		xor	cl, cl
  9893 00004145 F9                      		stc
  9894 00004146 C3                      		retn
  9895                                  
  9896                                  ; =============== S U B	R O U T	I N E =======================================
  9897                                  
  9898                                  CHKDEV:		; ...
  9899 00004147 89FE                    		mov	si, di
  9900 00004149 8CD7                    		mov	di, ss
  9901 0000414B 8EC7                    		mov	es, di
  9902 0000414D BF[4B05]                		mov	di, NAME1
  9903 00004150 B90900                  		mov	cx, 9
  9904                                  
  9905                                  TESTLOOP:				; ...
  9906 00004153 E88F10                  		call	GETLET
  9907 00004156 3C2E                    		cmp	al, 2Eh	; '.'
  9908 00004158 740E                    		jz	short TESTDEVICE
  9909 0000415A E8DE10                  		call	PATHCHRCMP
  9910 0000415D 7407                    		jz	short NOTDEV
  9911 0000415F 08C0                    		or	al, al
  9912 00004161 7405                    		jz	short TESTDEVICE
  9913 00004163 AA                      		stosb
  9914 00004164 E2ED                    		loop	TESTLOOP
  9915                                  
  9916                                  NOTDEV:					; ...
  9917 00004166 F9                      		stc
  9918 00004167 C3                      		retn
  9919                                  ; ---------------------------------------------------------------------------
  9920                                  
  9921                                  TESTDEVICE:				; ...
  9922 00004168 83C102                  		add	cx, 2
  9923 0000416B B020                    		mov	al, 20h	; ' '
  9924 0000416D F3AA                    		rep stosb
  9925 0000416F 8CD0                    		mov	ax, ss
  9926 00004171 8ED8                    		mov	ds, ax
  9927 00004173 E8C701                  		call	DEVNAME
  9928 00004176 C3                      		retn
  9929                                  
  9930                                  ; ---------------------------------------------------------------------------
  9931                                  ; START	OF FUNCTION CHUNK FOR GETPATH
  9932                                  
  9933                                  ROOTPATH:				; ...
  9934 00004177 E8D2FE                  		call	SETROOTSRCH
  9935 0000417A 803C00                  		cmp	byte [si], 0
  9936 0000417D 7509                    		jnz	short FINDPATH
  9937 0000417F A0[6D05]                		mov	al, [SATTRIB]
  9938 00004182 A2[6B05]                		mov	byte [ATTRIB], al
  9939 00004185 30E4                    		xor	ah, ah
  9940 00004187 C3                      		retn
  9941                                  ; ---------------------------------------------------------------------------
  9942                                  
  9943                                  FINDPATH:				; ...
  9944 00004188 06                      		push	es
  9945 00004189 56                      		push	si
  9946 0000418A 89F7                    		mov	di, si
  9947 0000418C 8B0E[C205]              		mov	cx, [DIRSTART]
  9948 00004190 833E[B605]FF            		cmp	word [CURR_DIR_END], 0FFFFh ; -1
  9949 00004195 740E                    		jz	short NOIDS
  9950 00004197 3B3E[B605]              		cmp	di, [CURR_DIR_END]
  9951 0000419B 7508                    		jnz	short NOIDS
  9952 0000419D C43E[A205]              		les	di, [THISCDS]
  9953 000041A1 26894D49                		mov	[es:di+49h], cx	; [ES:DI+curdir.ID]
  9954                                  
  9955                                  NOIDS:					; ...
  9956 000041A5 8CD0                    		mov	ax, ss
  9957 000041A7 8EC0                    		mov	es, ax
  9958 000041A9 BF[4B05]                		mov	di, NAME1
  9959 000041AC B82020                  		mov	ax, 2020h	; '  '
  9960 000041AF AA                      		stosb
  9961 000041B0 AB                      		stosw
  9962 000041B1 AB                      		stosw
  9963 000041B2 AB                      		stosw
  9964 000041B3 AB                      		stosw
  9965 000041B4 AB                      		stosw
  9966 000041B5 BF[4B05]                		mov	di, NAME1
  9967 000041B8 30E4                    		xor	ah, ah
  9968                                  
  9969                                  GetNam:					; ...
  9970 000041BA FEC1                    		inc	cl
  9971 000041BC AC                      		lodsb
  9972 000041BD 3C2E                    		cmp	al, 2Eh	; '.'
  9973 000041BF 7412                    		jz	short _SetExt
  9974 000041C1 08C0                    		or	al, al
  9975 000041C3 7424                    		jz	short _GetDone
  9976 000041C5 3C5C                    		cmp	al, 5Ch	; '\'
  9977 000041C7 7420                    		jz	short _GetDone
  9978 000041C9 3C3F                    		cmp	al, 3Fh	; '?'
  9979 000041CB 7503                    		jnz	short StoNam
  9980 000041CD 80CC01                  		or	ah, 1
  9981                                  
  9982                                  StoNam:					; ...
  9983 000041D0 AA                      		stosb
  9984 000041D1 EBE7                    		jmp	short GetNam
  9985                                  ; ---------------------------------------------------------------------------
  9986                                  
  9987                                  _SetExt:				; ...
  9988 000041D3 BF[5305]                		mov	di, NAME1+8
  9989                                  
  9990                                  GetExt:					; ...
  9991 000041D6 AC                      		lodsb
  9992 000041D7 08C0                    		or	al, al
  9993 000041D9 740E                    		jz	short _GetDone
  9994 000041DB 3C5C                    		cmp	al, 5Ch	; '\'
  9995 000041DD 740A                    		jz	short _GetDone
  9996 000041DF 3C3F                    		cmp	al, 3Fh	; '?'
  9997 000041E1 7503                    		jnz	short StoExt
  9998 000041E3 80CC01                  		or	ah, 1
  9999                                  
 10000                                  StoExt:					; ...
 10001 000041E6 AA                      		stosb
 10002 000041E7 EBED                    		jmp	short GetExt
 10003                                  ; ---------------------------------------------------------------------------
 10004                                  
 10005                                  _GetDone:				; ...
 10006 000041E9 4E                      		dec	si
 10007 000041EA 88E1                    		mov	cl, ah
 10008 000041EC 80C980                  		or	cl, 80h
 10009 000041EF 5F                      		pop	di
 10010 000041F0 07                      		pop	es
 10011 000041F1 39FE                    		cmp	si, di
 10012 000041F3 7503                    		jnz	short check_device
 10013 000041F5 E9EC00                  		jmp	_BADPATH
 10014                                  ; ---------------------------------------------------------------------------
 10015                                  
 10016                                  check_device:				; ...
 10017 000041F8 56                      		push	si
 10018 000041F9 8A04                    		mov	al, [si]
 10019 000041FB 08C0                    		or	al, al
 10020 000041FD 7508                    		jnz	short NOT_LAST
 10021 000041FF 8A3E[6D05]              		mov	bh, [SATTRIB]
 10022 00004203 883E[6B05]              		mov	byte [ATTRIB], bh
 10023                                  
 10024                                  NOT_LAST:				; ...
 10025 00004207 06                      		push	es
 10026 00004208 16                      		push	ss
 10027 00004209 07                      		pop	es
 10028 0000420A E83001                  		call	DEVNAME
 10029 0000420D 07                      		pop	es
 10030 0000420E 720B                    		jb	short FindFile
 10031 00004210 08C0                    		or	al, al
 10032 00004212 7403                    		jz	short GO_BDEV
 10033 00004214 E9D100                  		jmp	FILEINPATH
 10034                                  ; ---------------------------------------------------------------------------
 10035                                  
 10036                                  GO_BDEV:				; ...
 10037 00004217 5E                      		pop	si
 10038 00004218 E97CFE                  		jmp	Build_devJ
 10039                                  ; ---------------------------------------------------------------------------
 10040                                  
 10041                                  FindFile:				; ...
 10042 0000421B 803E[4B05]E5            		cmp	byte [NAME1], 0E5h
 10043 00004220 7505                    		jnz	short NOE5
 10044 00004222 C606[4B05]05            		mov	byte [NAME1], 5
 10045                                  
 10046                                  NOE5:					; ...
 10047 00004227 57                      		push	di
 10048 00004228 06                      		push	es
 10049 00004229 51                      		push	cx
 10050 0000422A E8A102                  		call	LookupPath
 10051 0000422D 7303                    		jnb	short DIR_FOUND
 10052 0000422F E88EFC                  		call	FINDENTRY
 10053                                  
 10054                                  DIR_FOUND:				; ...
 10055 00004232 59                      		pop	cx
 10056 00004233 07                      		pop	es
 10057 00004234 5F                      		pop	di
 10058 00004235 7303                    		jnb	short LOAD_BUF
 10059 00004237 E9D300                  		jmp	BADPATHPOP
 10060                                  ; ---------------------------------------------------------------------------
 10061                                  
 10062                                  LOAD_BUF:				; ...
 10063 0000423A C53E[E205]              		lds	di, [CURBUF]
 10064 0000423E F6470B10                		test	byte [bx+0Bh], 10h ; [BX+dir_entry.dir_attr],
 10065                                  					; attr_directory
 10066 00004242 7503                    		jnz	short GO_NEXT
 10067 00004244 E9A100                  		jmp	FILEINPATH
 10068                                  ; ---------------------------------------------------------------------------
 10069                                  
 10070                                  GO_NEXT:				; ...
 10071 00004247 36803E[4C03]00          		cmp	byte [ss:NoSetDir], 0
 10072 0000424D 7426                    		jz	short SetDir
 10073 0000424F 89FA                    		mov	dx, di
 10074 00004251 8CD9                    		mov	cx, ds
 10075 00004253 16                      		push	ss
 10076 00004254 1F                      		pop	ds
 10077 00004255 5F                      		pop	di
 10078 00004256 F606[3A0D]01            		test	byte [FastOpenFlg], 1 ; FastOpen_Set
 10079 0000425B 740B                    		jz	short _nofast
 10080 0000425D F606[3A0D]02            		test	byte [FastOpenFlg], 2 ; Lookup_Success
 10081 00004262 7404                    		jz	short _nofast
 10082 00004264 8B3E[660D]              		mov	di, [Next_Element_Start]
 10083                                  
 10084                                  _nofast:				; ...
 10085 00004268 803D00                  		cmp	byte [di], 0
 10086 0000426B 7503                    		jnz	short NEXT_ONE
 10087 0000426D E99C00                  		jmp	_SETRET
 10088                                  ; ---------------------------------------------------------------------------
 10089                                  
 10090                                  NEXT_ONE:				; ...
 10091 00004270 57                      		push	di
 10092 00004271 89D7                    		mov	di, dx
 10093 00004273 8ED9                    		mov	ds, cx
 10094                                  
 10095                                  SetDir:					; ...
 10096 00004275 8B14                    		mov	dx, [si]
 10097 00004277 1E                      		push	ds
 10098 00004278 16                      		push	ss
 10099 00004279 1F                      		pop	ds
 10100 0000427A F606[3A0D]02            		test	byte [FastOpenFlg], 2 ; Lookup_Success
 10101 0000427F 7410                    		jz	short DO_NORMAL
 10102 00004281 89D3                    		mov	bx, dx
 10103 00004283 8B3E[BC05]              		mov	di, [CLUSNUM]
 10104 00004287 50                      		push	ax
 10105 00004288 E881FD                  		call	SETDIRSRCH
 10106 0000428B 58                      		pop	ax
 10107 0000428C 83C402                  		add	sp, 2
 10108 0000428F EB3D                    		jmp	short FAST_OPEN_SKIP
 10109                                  ; ---------------------------------------------------------------------------
 10110                                  
 10111                                  DO_NORMAL:				; ...
 10112 00004291 1F                      		pop	ds
 10113 00004292 29FB                    		sub	bx, di
 10114 00004294 29FE                    		sub	si, di
 10115 00004296 53                      		push	bx
 10116 00004297 50                      		push	ax
 10117 00004298 56                      		push	si
 10118 00004299 51                      		push	cx
 10119 0000429A FF7506                  		push	word [di+6]	; [DI+BUFFINFO.buf_sector]
 10120 0000429D FF7508                  		push	word [di+8]	; [DI+BUFFINFO.buf_sector+2]
 10121 000042A0 89D3                    		mov	bx, dx
 10122 000042A2 16                      		push	ss
 10123 000042A3 1F                      		pop	ds
 10124 000042A4 E865FD                  		call	SETDIRSRCH
 10125 000042A7 8F06[0706]              		pop	word [HIGH_SECTOR]
 10126 000042AB 5A                      		pop	dx
 10127 000042AC 720A                    		jb	short SKIP_GETB
 10128 000042AE C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
 10129 000042B3 30C0                    		xor	al, al
 10130 000042B5 E85318                  		call	GETBUFFR
 10131                                  
 10132                                  SKIP_GETB:				; ...
 10133 000042B8 59                      		pop	cx
 10134 000042B9 5E                      		pop	si
 10135 000042BA 58                      		pop	ax
 10136 000042BB 5B                      		pop	bx
 10137 000042BC 7305                    		jnb	short SET_THE_BUF
 10138 000042BE 5F                      		pop	di
 10139 000042BF 89FE                    		mov	si, di
 10140 000042C1 EB21                    		jmp	short _BADPATH
 10141                                  ; ---------------------------------------------------------------------------
 10142                                  
 10143                                  SET_THE_BUF:				; ...
 10144 000042C3 E864F5                  		call	SET_BUF_AS_DIR
 10145 000042C6 8B3E[E205]              		mov	di, word [CURBUF]
 10146 000042CA 01FE                    		add	si, di
 10147 000042CC 01FB                    		add	bx, di
 10148                                  
 10149                                  FAST_OPEN_SKIP:				; ...
 10150 000042CE 5F                      		pop	di
 10151 000042CF E8A002                  		call	InsertPath
 10152 000042D2 8A05                    		mov	al, [di]
 10153 000042D4 08C0                    		or	al, al
 10154 000042D6 7434                    		jz	short _SETRET
 10155 000042D8 47                      		inc	di
 10156 000042D9 89FE                    		mov	si, di
 10157 000042DB E85D0F                  		call	PATHCHRCMP
 10158 000042DE 7503                    		jnz	short find_bad_name
 10159 000042E0 E9A5FE                  		jmp	FINDPATH
 10160                                  ; ---------------------------------------------------------------------------
 10161                                  
 10162                                  find_bad_name:				; ...
 10163 000042E3 4E                      		dec	si
 10164                                  
 10165                                  _BADPATH:				; ...
 10166 000042E4 30C9                    		xor	cl, cl
 10167 000042E6 EB2C                    		jmp	short BADPRET
 10168                                  ; ---------------------------------------------------------------------------
 10169                                  
 10170                                  FILEINPATH:				; ...
 10171 000042E8 5F                      		pop	di
 10172 000042E9 16                      		push	ss
 10173 000042EA 1F                      		pop	ds
 10174 000042EB F606[3A0D]01            		test	byte [FastOpenFlg], 1 ; FastOpen_Set
 10175 000042F0 740B                    		jz	short NO_FAST
 10176 000042F2 F606[3A0D]02            		test	byte [FastOpenFlg], 2 ; Lookup_Success
 10177 000042F7 7404                    		jz	short NO_FAST
 10178 000042F9 8B3E[660D]              		mov	di, [Next_Element_Start]
 10179                                  
 10180                                  NO_FAST:				; ...
 10181 000042FD 8A05                    		mov	al, [di]
 10182 000042FF 08C0                    		or	al, al
 10183 00004301 7404                    		jz	short INCRET
 10184 00004303 89FE                    		mov	si, di
 10185 00004305 EB0D                    		jmp	short BADPRET
 10186                                  ; ---------------------------------------------------------------------------
 10187                                  
 10188                                  INCRET:					; ...
 10189 00004307 E86802                  		call	InsertPath
 10190 0000430A FEC0                    		inc	al
 10191                                  
 10192                                  _SETRET:				; ...
 10193 0000430C C3                      		retn
 10194                                  ; ---------------------------------------------------------------------------
 10195                                  
 10196                                  BADPATHPOP:				; ...
 10197 0000430D 5E                      		pop	si
 10198 0000430E 8A04                    		mov	al, [si]
 10199 00004310 89FE                    		mov	si, di
 10200 00004312 08C0                    		or	al, al
 10201                                  
 10202                                  BADPRET:				; ...
 10203 00004314 A0[6D05]                		mov	al, [SATTRIB]
 10204 00004317 A2[6B05]                		mov	byte [ATTRIB], al
 10205 0000431A F9                      		stc
 10206 0000431B C3                      		retn
 10207                                  ; END OF FUNCTION CHUNK	FOR GETPATH
 10208                                  
 10209                                  ; =============== S U B	R O U T	I N E =======================================
 10210                                  
 10211                                  STARTSRCH:		; ...
 10212 0000431C C42E[8A05]              		les	bp, [THISDPB]
 10213 00004320 31C0                    		xor	ax, ax
 10214 00004322 A3[4803]                		mov	[LASTENT], ax
 10215 00004325 A2[7B05]                		mov	[VOLID], al
 10216 00004328 48                      		dec	ax
 10217 00004329 A3[D805]                		mov	[ENTFREE], ax
 10218 0000432C A3[DA05]                		mov	[ENTLAST], ax
 10219 0000432F C3                      		retn
 10220                                  
 10221                                  ; =============== S U B	R O U T	I N E =======================================
 10222                                  
 10223                                  MatchAttributes:
 10224 00004330 50                      		push	ax
 10225 00004331 36A0[6B05]              		mov	al, [ss:ATTRIB]
 10226 00004335 F6D0                    		not	al
 10227 00004337 20E8                    		and	al, ch
 10228 00004339 2416                    		and	al, 16h		; attr_all
 10229 0000433B 58                      		pop	ax
 10230 0000433C C3                      		retn
 10231                                  
 10232                                  ; =============== S U B	R O U T	I N E =======================================
 10233                                  
 10234                                  DEVNAME:
 10235 0000433D 56                      		push	si
 10236 0000433E 57                      		push	di
 10237 0000433F 51                      		push	cx
 10238 00004340 50                      		push	ax
 10239 00004341 FF36[4B05]              		push	word [NAME1]
 10240 00004345 803E[4B05]05            		cmp	byte [NAME1], 5
 10241 0000434A 7505                    		jnz	short NOKTR
 10242 0000434C C606[4B05]E5            		mov	byte [NAME1], 0E5h
 10243                                  
 10244                                  NOKTR:					; ...
 10245 00004351 F606[6B05]08            		test	byte [ATTRIB], 8 ; attr_volume_id
 10246 00004356 7522                    		jnz	short RET31
 10247 00004358 BE[4800]                		mov	si, NULDEV
 10248                                  
 10249                                  LOOKIO:					; ...
 10250 0000435B F744040080              		test	word [si+4], 8000h ; [SI+SYSDEV.ATT],DEVTYP
 10251 00004360 7411                    		jz	short SKIPDEV
 10252 00004362 89F0                    		mov	ax, si
 10253 00004364 83C60A                  		add	si, 10		; SYSDEV.NAME
 10254 00004367 BF[4B05]                		mov	di, NAME1
 10255 0000436A B90400                  		mov	cx, 4
 10256 0000436D F3A7                    		repe cmpsw
 10257 0000436F 89C6                    		mov	si, ax
 10258 00004371 7415                    		jz	short IOCHK
 10259                                  
 10260                                  SKIPDEV:				; ...
 10261 00004373 C534                    		lds	si, [si]
 10262 00004375 83FEFF                  		cmp	si, 0FFFFh	; -1
 10263 00004378 75E1                    		jnz	short LOOKIO
 10264                                  
 10265                                  RET31:					; ...
 10266 0000437A F9                      		stc
 10267                                  
 10268                                  RETNV:					; ...
 10269 0000437B 8CD1                    		mov	cx, ss
 10270 0000437D 8ED9                    		mov	ds, cx
 10271 0000437F 8F06[4B05]              		pop	word [NAME1]
 10272 00004383 58                      		pop	ax
 10273 00004384 59                      		pop	cx
 10274 00004385 5F                      		pop	di
 10275 00004386 5E                      		pop	si
 10276 00004387 C3                      		retn
 10277                                  ; ---------------------------------------------------------------------------
 10278                                  
 10279                                  IOCHK:					; ...
 10280 00004388 368C1E[9C05]            		mov	word [ss:DEVPT+2], ds
 10281 0000438D 8A7C04                  		mov	bh, [si+4]	; [SI+SYSDEV.ATT]
 10282 00004390 80CFC0                  		or	bh, 0C0h
 10283 00004393 80E7DF                  		and	bh, 0DFh	; ~20h
 10284 00004396 368936[9A05]            		mov	word [ss:DEVPT], si
 10285 0000439B EBDE                    		jmp	short RETNV
 10286                                  
 10287                                  ; =============== S U B	R O U T	I N E =======================================
 10288                                  
 10289                                  Build_device_ent:	; ...
 10290 0000439D B82020                  		mov	ax, 2020h	; '  '
 10291 000043A0 BF[5305]                		mov	di, NAME1+8	; DEVFCB+8
 10292 000043A3 AB                      		stosw
 10293 000043A4 AA                      		stosb
 10294 000043A5 B040                    		mov	al, 40h		; attr_device
 10295 000043A7 AA                      		stosb
 10296 000043A8 31C0                    		xor	ax, ax
 10297 000043AA B90A00                  		mov	cx, 10
 10298 000043AD F3AB                    		rep stosw
 10299 000043AF E83FC7                  		call	DATE16
 10300 000043B2 BF[6105]                		mov	di, NAME2+0Ah	; DEVFCB+dir_entry.dir_time
 10301 000043B5 92                      		xchg	ax, dx
 10302 000043B6 AB                      		stosw
 10303 000043B7 92                      		xchg	ax, dx
 10304 000043B8 AB                      		stosw
 10305 000043B9 89FE                    		mov	si, di
 10306 000043BB A1[9A05]                		mov	ax, word [DEVPT]
 10307 000043BE AB                      		stosw
 10308 000043BF A1[9C05]                		mov	ax, word [DEVPT+2]
 10309 000043C2 AB                      		stosw
 10310 000043C3 88FC                    		mov	ah, bh
 10311 000043C5 BB[4B05]                		mov	bx, NAME1 ; DEVFCB
 10312 000043C8 30C0                    		xor	al, al
 10313 000043CA C3                      		retn
 10314                                  
 10315                                  ; =============== S U B	R O U T	I N E =======================================
 10316                                  
 10317                                  ; Attributes: bp-based frame
 10318                                  
 10319                                  ValidateCDS:	; ...
 10320                                  
 10321                                  SaveCDS		equ -6
 10322                                  Temp		equ -2
 10323                                  
 10324 000043CB 55                      		push	bp
 10325 000043CC 89E5                    		mov	bp, sp
 10326 000043CE 83EC06                  		sub	sp, 6
 10327 000043D1 897EFE                  		mov	[bp+Temp], di	; [bp-2]
 10328 000043D4 36C536[A205]            		lds	si, [ss:THISCDS]
 10329 000043D9 8976FA                  		mov	word [bp+SaveCDS], si ; [bp-6]
 10330 000043DC 8C5EFC                  		mov	word [bp+SaveCDS+2], ds ; [bp-4]
 10331 000043DF E874CF                  		call	ECritDisk
 10332 000043E2 F744430080              		test	word [si+67], 8000h	; [SI+curdir.flags],
 10333                                  					; curdir_isnet
 10334 000043E7 7403                    		jz	short _DoSplice
 10335 000043E9 E99300                  		jmp	FatFail
 10336                                  ; ---------------------------------------------------------------------------
 10337                                  
 10338                                  _DoSplice:				; ...
 10339 000043EC 30D2                    		xor	dl, dl
 10340 000043EE 368616[4C03]            		xchg	dl, [ss:NoSetDir]
 10341 000043F3 16                      		push	ss
 10342 000043F4 07                      		pop	es
 10343 000043F5 E82CCE                  		call	FStrCpy
 10344 000043F8 8B76FE                  		mov	si, [bp+Temp]	; [bp-2]
 10345 000043FB 16                      		push	ss
 10346 000043FC 1F                      		pop	ds
 10347 000043FD E8EF2B                  		call	Splice
 10348 00004400 16                      		push	ss
 10349 00004401 1F                      		pop	ds
 10350 00004402 8816[4C03]              		mov	[NoSetDir], dl
 10351 00004406 C43E[A205]              		les	di, [THISCDS]
 10352 0000440A 55                      		push	bp
 10353 0000440B E88B14                  		call	FATREAD_CDS
 10354 0000440E 5D                      		pop	bp
 10355 0000440F 726E                    		jb	short FatFail
 10356 00004411 C536[A205]              		lds	si, [THISCDS]
 10357 00004415 837C49FF                		cmp	word [si+49h], 0FFFFh ; [SI+curdir.ID],-1
 10358 00004419 7556                    		jnz	short RestoreCDS
 10359 0000441B 16                      		push	ss
 10360 0000441C 07                      		pop	es
 10361 0000441D 36FF36[B205]            		push	word [ss:WFP_START]
 10362 00004422 3B76FA                  		cmp	si, word [bp+SaveCDS] ; [bp-6] ; SaveCDSL
 10363 00004425 750B                    		jnz	short DoChdir
 10364 00004427 8B7EFE                  		mov	di, [bp+Temp]	; [bp-2]
 10365 0000442A 36893E[B205]            		mov	[ss:WFP_START],	di
 10366 0000442F E8F2CD                  		call	FStrCpy
 10367                                  
 10368                                  DoChdir:				; ...
 10369 00004432 16                      		push	ss
 10370 00004433 1F                      		pop	ds
 10371 00004434 FF36[6D05]              		push	word [SATTRIB]
 10372 00004438 55                      		push	bp
 10373 00004439 E8BAEE                  		call	DOS_CHDIR
 10374 0000443C 5D                      		pop	bp
 10375 0000443D 5B                      		pop	bx
 10376 0000443E 8F06[B205]              		pop	word [WFP_START]
 10377 00004442 881E[6D05]              		mov	[SATTRIB], bl
 10378 00004446 C576FA                  		lds	si, [bp+SaveCDS] ; [bp-6]
 10379 00004449 730F                    		jnb	short SetCluster
 10380 0000444B 368936[A205]            		mov	word [ss:THISCDS], si
 10381 00004450 368C1E[A405]            		mov	word [ss:THISCDS+2], ds
 10382 00004455 31C9                    		xor	cx, cx
 10383 00004457 884C03                  		mov	[si+3],	cl
 10384                                  
 10385                                  SetCluster:				; ...
 10386 0000445A C74449FFFF              		mov	word [si+49h], 0FFFFh ; [SI+curdir.ID],-1
 10387 0000445F 36C536[A205]            		lds	si, [ss:THISCDS]
 10388 00004464 F744430020              		test	word [si+43h], 2000h ; SI+curdir.flags],
 10389                                  					; curdir_splice
 10390 00004469 7403                    		jz	short _setdirclus
 10391 0000446B B9FFFF                  		mov	cx, -1		; 0FFFFh ; 65535
 10392                                  
 10393                                  _setdirclus:				; ...
 10394 0000446E 894C49                  		mov	[si+49h], cx	; [SI+curdir.ID]
 10395                                  
 10396                                  RestoreCDS:				; ...
 10397 00004471 C47EFA                  		les	di, [bp+SaveCDS] ; [bp-6]
 10398 00004474 36893E[A205]            		mov	word [ss:THISCDS], di
 10399 00004479 368C06[A405]            		mov	word [ss:THISCDS+2], es
 10400 0000447E F8                      		clc
 10401                                  
 10402                                  FatFail:				; ...
 10403 0000447F E8F4CE                  		call	LCritDisk
 10404 00004482 C47EFA                  		les	di, [bp+SaveCDS] ; [bp-6]
 10405 00004485 89EC                    		mov	sp, bp
 10406 00004487 5D                      		pop	bp
 10407 00004488 C3                      		retn
 10408                                  
 10409                                  ; =============== S U B	R O U T	I N E =======================================
 10410                                  
 10411                                  CheckThisDevice:
 10412 00004489 57                      		push	di
 10413 0000448A 56                      		push	si
 10414 0000448B 89F7                    		mov	di, si
 10415 0000448D 8A04                    		mov	al, [si]
 10416 0000448F E8A90D                  		call	PATHCHRCMP
 10417 00004492 7517                    		jnz	short ParseDev
 10418 00004494 46                      		inc	si
 10419 00004495 AD                      		lodsw
 10420 00004496 0D2020                  		or	ax, 2020h
 10421 00004499 3D6465                  		cmp	ax, 6564h	; 'dev'
 10422 0000449C 752D                    		jnz	short NotDevice
 10423 0000449E AC                      		lodsb
 10424 0000449F 0C20                    		or	al, 20h
 10425 000044A1 3C76                    		cmp	al, 'v'
 10426 000044A3 7526                    		jnz	short NotDevice
 10427 000044A5 AC                      		lodsb
 10428 000044A6 E8920D                  		call	PATHCHRCMP
 10429 000044A9 7520                    		jnz	short NotDevice
 10430                                  
 10431                                  ParseDev:				; ...
 10432 000044AB 1E                      		push	ds
 10433 000044AC 56                      		push	si
 10434 000044AD E8C90C                  		call	NameTrans
 10435 000044B0 803C00                  		cmp	byte [si], 0
 10436 000044B3 F9                      		stc
 10437 000044B4 750B                    		jnz	short SkipSearch
 10438 000044B6 16                      		push	ss
 10439 000044B7 1F                      		pop	ds
 10440 000044B8 A0[6D05]                		mov	al, [SATTRIB]
 10441 000044BB A2[6B05]                		mov	byte [ATTRIB], al
 10442 000044BE E87CFE                  		call	DEVNAME
 10443                                  
 10444                                  SkipSearch:				; ...
 10445 000044C1 5E                      		pop	si
 10446 000044C2 1F                      		pop	ds
 10447                                  
 10448                                  CheckReturn:				; ...
 10449 000044C3 5F                      		pop	di
 10450 000044C4 7302                    		jnb	short Check_Done
 10451 000044C6 89FE                    		mov	si, di
 10452                                  
 10453                                  Check_Done:				; ...
 10454 000044C8 5F                      		pop	di
 10455 000044C9 F5                      		cmc
 10456 000044CA C3                      		retn
 10457                                  ; ---------------------------------------------------------------------------
 10458                                  
 10459                                  NotDevice:				; ...
 10460 000044CB F9                      		stc
 10461 000044CC EBF5                    		jmp	short CheckReturn
 10462                                  
 10463                                  ; =============== S U B	R O U T	I N E =======================================
 10464                                  
 10465                                  LookupPath:		; ...
 10466 000044CE 36F606[3A0D]01          		test	byte [ss:FastOpenFlg], 1 ; FastOpen_Set
 10467 000044D4 7503                    		jnz	short FASTINST
 10468                                  
 10469                                  NOLOOK:					; ...
 10470 000044D6 E99700                  		jmp	NOLOOKUP
 10471                                  ; ---------------------------------------------------------------------------
 10472                                  
 10473                                  FASTINST:				; ...
 10474 000044D9 36F606[3A0D]08          		test	byte [ss:FastOpenFlg], 8 ; No_Lookup
 10475 000044DF 75F5                    		jnz	short NOLOOK
 10476 000044E1 BB[300D]                		mov	bx, FastOpenTable
 10477 000044E4 368B36[B205]            		mov	si, [ss:WFP_START]
 10478 000044E9 BF[460D]                		mov	di, Dir_Info_Buff
 10479 000044EC B9[3B0D]                		mov	cx, FastOpen_Ext_Info
 10480 000044EF B001                    		mov	al, 1
 10481 000044F1 1E                      		push	ds
 10482 000044F2 07                      		pop	es
 10483                                  		;call	dword [bx+2] ; CALL far [BX+fastopen_entry.name_caching]
 10484 000044F3 FF5F02                  		call	far [bx+2]
 10485 000044F6 7267                    		jb	short NOTFOUND
 10486 000044F8 8D5CFE                  		lea	bx, [si-2]
 10487 000044FB 363B1E[B205]            		cmp	bx, [ss:WFP_START]
 10488 00004500 745D                    		jz	short NOTFOUND
 10489 00004502 803C00                  		cmp	byte [si], 0
 10490 00004505 751A                    		jnz	short parfnd
 10491 00004507 51                      		push	cx
 10492 00004508 368A0E[6B05]            		mov	cl, [ss:ATTRIB]
 10493 0000450D 368A2E[6D05]            		mov	ch, [ss:SATTRIB]
 10494 00004512 36882E[6B05]            		mov	[ss:ATTRIB], ch
 10495 00004517 268A6D0B                		mov	ch, [es:di+0Bh]	; [ES:DI+dir_entry.dir_attr]
 10496 0000451B E812FE                  		call	MatchAttributes
 10497 0000451E 59                      		pop	cx
 10498 0000451F 754F                    		jnz	short NOLOOKUP
 10499                                  
 10500                                  parfnd:					; ...
 10501 00004521 368936[660D]            		mov	[ss:Next_Element_Start], si
 10502 00004526 89CB                    		mov	bx, cx
 10503 00004528 8B4707                  		mov	ax, [bx+7]	; [BX+FEI.lastent]
 10504 0000452B 36A3[4803]              		mov	[ss:LASTENT], ax
 10505 0000452F 8B4709                  		mov	ax, [bx+9]	; [BX+FEI.dirstart]
 10506 00004532 36A3[C205]              		mov	[ss:DIRSTART], ax
 10507 00004536 8B4705                  		mov	ax, [bx+5]	; [BX+FEI.clusnum]
 10508 00004539 36A3[BC05]              		mov	[ss:CLUSNUM], ax
 10509 0000453D 06                      		push	es
 10510 0000453E 36C41E[8A05]            		les	bx, [ss:THISDPB]
 10511 00004543 268A27                  		mov	ah, [es:bx]	; [ES:BX+DPB.DRIVE]
 10512 00004546 07                      		pop	es
 10513 00004547 36C706[E205]0000        		mov	word [ss:CURBUF], 0
 10514 0000454E 368C06[E405]            		mov	word [ss:CURBUF+2],	es
 10515 00004553 89FB                    		mov	bx, di
 10516 00004555 8D751A                  		lea	si, [di+1Ah]	; [DI+dir_entry.dir_first]
 10517 00004558 36800E[3A0D]12          		or	byte [ss:FastOpenFlg], 12h ; Lookup_Success+Set_For_Search
 10518 0000455E C3                      		retn
 10519                                  ; ---------------------------------------------------------------------------
 10520                                  
 10521                                  NOTFOUND:				; ...
 10522 0000455F 83F8FF                  		cmp	ax, 0FFFFh	; -1
 10523 00004562 7506                    		jnz	short Partial_Success
 10524 00004564 36C606[3A0D]00          		mov	byte [ss:FastOpenFlg], 0
 10525                                  
 10526                                  Partial_Success:			; ...
 10527 0000456A 368026[3A0D]FB          		and	byte [ss:FastOpenFlg], 0FBh ; Special_Fill_Reset
 10528                                  
 10529                                  NOLOOKUP:				; ...
 10530 00004570 F9                      		stc
 10531 00004571 C3                      		retn
 10532                                  
 10533                                  ; =============== S U B	R O U T	I N E =======================================
 10534                                  
 10535                                  InsertPath:		; ...
 10536 00004572 9C                      		pushf
 10537 00004573 36F606[3A0D]01          		test	byte [ss:FastOpenFlg], 1 ; FastOpen_Set
 10538 00004579 7479                    		jz	short GET_NEXT_ELEMENT
 10539 0000457B 36F606[3A0D]02          		test	byte [ss:FastOpenFlg], 2 ; Lookup_Success
 10540 00004581 740D                    		jz	short INSERT_DIR_INFO
 10541 00004583 368026[3A0D]FD          		and	byte [ss:FastOpenFlg], 0FDh ; Lookup_Reset
 10542 00004589 368B3E[660D]            		mov	di, [ss:Next_Element_Start]
 10543 0000458E EB5E                    		jmp	short GET_NEXT2
 10544                                  ; ---------------------------------------------------------------------------
 10545                                  
 10546                                  INSERT_DIR_INFO:			; ...
 10547 00004590 1E                      		push	ds
 10548 00004591 06                      		push	es
 10549 00004592 53                      		push	bx
 10550 00004593 56                      		push	si
 10551 00004594 57                      		push	di
 10552 00004595 51                      		push	cx
 10553 00004596 50                      		push	ax
 10554 00004597 36C53E[E205]            		lds	di, [ss:CURBUF]
 10555 0000459C BE[3B0D]                		mov	si, FastOpen_Ext_Info
 10556 0000459F 8B4506                  		mov	ax, [di+6]	; [DI+BUFFINFO.buf_sector]
 10557 000045A2 36894401                		mov	[ss:si+1], ax	; [SS:SI+FEI.dirsec]
 10558 000045A6 8B4508                  		mov	ax, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 10559 000045A9 16                      		push	ss
 10560 000045AA 1F                      		pop	ds
 10561 000045AB 894403                  		mov	[si+3],	ax	; [SI+FEI.dirsec+2]
 10562 000045AE A1[BC05]                		mov	ax, [CLUSNUM]
 10563 000045B1 894405                  		mov	[si+5],	ax	; [SI+FEI.clusnum]
 10564 000045B4 A1[4803]                		mov	ax, [LASTENT]
 10565 000045B7 894407                  		mov	[si+7],	ax	; [SI+FEI.lastent]
 10566 000045BA A1[C205]                		mov	ax, [DIRSTART]
 10567 000045BD 894409                  		mov	[si+9],	ax	; [SI+FEI.dirstart]
 10568 000045C0 89D8                    		mov	ax, bx
 10569 000045C2 83C714                  		add	di, 20		; BUFINSIZ
 10570 000045C5 29F8                    		sub	ax, di
 10571 000045C7 B120                    		mov	cl, 32		; dir_entry.size
 10572 000045C9 F6F1                    		div	cl
 10573 000045CB 8804                    		mov	[si], al	; [SI+FEI.dirpos]
 10574 000045CD 1E                      		push	ds
 10575 000045CE 07                      		pop	es
 10576 000045CF 8E1E[E405]              		mov	ds, word [CURBUF+2]
 10577 000045D3 89DF                    		mov	di, bx
 10578 000045D5 837D1A00                		cmp	word [di+26], 0 ; [DI+dir_entry.dir_first]
 10579 000045D9 740C                    		jz	short SKIP_INSERT
 10580 000045DB 56                      		push	si
 10581 000045DC 5B                      		pop	bx
 10582 000045DD B002                    		mov	al, 2		; FONC_insert
 10583 000045DF BE[300D]                		mov	si, FastOpenTable
 10584                                  		;call	dword [es:si+2] ; CALL far [SI+fastopen_entry.name_caching]
 10585 000045E2 26FF5C02                		call	far [es:si+2]
 10586 000045E6 F8                      		clc
 10587                                  
 10588                                  SKIP_INSERT:				; ...
 10589 000045E7 58                      		pop	ax
 10590 000045E8 59                      		pop	cx
 10591 000045E9 5F                      		pop	di
 10592 000045EA 5E                      		pop	si
 10593 000045EB 5B                      		pop	bx
 10594 000045EC 07                      		pop	es
 10595 000045ED 1F                      		pop	ds
 10596                                  
 10597                                  GET_NEXT2:				; ...
 10598 000045EE 36800E[3A0D]08          		or	byte [ss:FastOpenFlg], 8 ; No_Lookup
 10599                                  
 10600                                  GET_NEXT_ELEMENT:			; ...
 10601 000045F4 9D                      		popf
 10602 000045F5 C3                      		retn
 10603                                  
 10604                                  ; ---------------------------------------------------------------------------
 10605 000045F6 160E160D0F0E            LenTab		db 22, 14, 22, 13, 15, 14 ; ...
 10606                                  					; DRDWRHL, DRDNDHL, DRDWRHL,
 10607                                  					; DSTATHL, DFLSHL, DRDNDHL
 10608 000045FC 8604                    CmdTab		db 86h,	4		; ...
 10609                                  					; DEVRD	  ; 0 input
 10610 000045FE 8605                    		db 86h,	5		; DEVRDND ; 1 input status
 10611 00004600 8708                    		db 87h,	8		; DEVWRT  ; 2 output
 10612 00004602 870A                    		db 87h,	0Ah		; DEVOST  ; 3 output status
 10613 00004604 8607                    		db 86h,	7		; DEVIFL  ; 4 input flush
 10614 00004606 8605                    		db 86h,	5		; 5 input status with system WAIT
 10615                                  
 10616                                  ; =============== S U B	R O U T	I N E =======================================
 10617                                  
 10618                                  IOFUNC:		; ...
 10619 00004608 368C16[8C03]            		mov	word [ss:IOCTL_IOXAD_2], ss	; [SS:IOXAD+2]
 10620 0000460D 36C706[8A03][BC03]      		mov	word [ss:IOCTL_REQ_MINORFUNCTION], DEVIOBUF ;
 10621                                  					; [SS:IOXAD],DEVIOBUF
 10622 00004614 36C706[8E03]0100        		mov	word [ss:IOCTL_IOSCNT], 1 ;	[SS:IOSCNT]
 10623 0000461B 36A3[BC03]              		mov	[ss:DEVIOBUF], ax
 10624 0000461F F6440680                		test	byte [si+6], 80h ; [SI+SF_ENTRY.sf_flags+1],
 10625                                  					; (sf_isnet>>8)
 10626 00004623 7403                    		jz	short IOTO22
 10627 00004625 E9A600                  		jmp	IOTOFILE
 10628                                  ; ---------------------------------------------------------------------------
 10629                                  
 10630                                  IOTO22:					; ...
 10631 00004628 F6440580                		test	byte [si+5], 80h ; [SI+SF_ENTRY.sf_flags],
 10632                                  					; devid_device
 10633 0000462C 7503                    		jnz	short IOTO33
 10634 0000462E E99D00                  		jmp	IOTOFILE
 10635                                  ; ---------------------------------------------------------------------------
 10636                                  
 10637                                  IOTO33:					; ...
 10638 00004631 06                      		push	es
 10639 00004632 E851BE                  		call	save_world
 10640 00004635 8CDA                    		mov	dx, ds
 10641 00004637 8CD3                    		mov	bx, ss
 10642 00004639 8EDB                    		mov	ds, bx
 10643 0000463B 8EC3                    		mov	es, bx
 10644 0000463D 31DB                    		xor	bx, bx
 10645 0000463F 80FC05                  		cmp	ah, 5
 10646 00004642 7504                    		jnz	short _no_sys_wait
 10647 00004644 81CB0004                		or	bx, 400h
 10648                                  
 10649                                  _no_sys_wait:				; ...
 10650 00004648 891E[7F03]              		mov	word [IOCALL_REQSTAT], bx
 10651 0000464C 31DB                    		xor	bx, bx
 10652 0000464E 881E[8903]              		mov	[IOCTL_REQ_MAJORFUNCTION], bl ; [IOMED]
 10653 00004652 88E3                    		mov	bl, ah
 10654 00004654 2E8AA7[F645]            		mov	ah, [cs:LenTab+bx] ; [cs:BX+LenTab]
 10655 00004659 D1E3                    		shl	bx, 1
 10656 0000465B 2E8B8F[FC45]            		mov	cx, word [cs:CmdTab+bx] ; [cs:BX+CmdTab]
 10657 00004660 BB[7C03]                		mov	bx, IOCALL_REQLEN ; IOCALL ; DOSDATA:037Ch
 10658 00004663 8826[7C03]              		mov	[IOCALL_REQLEN], ah
 10659 00004667 882E[7E03]              		mov	[IOCALL_REQFUNC], ch
 10660 0000466B 8EDA                    		mov	ds, dx
 10661 0000466D E86F01                  		call	DEVIOCALL
 10662 00004670 368B3E[7F03]            		mov	di, word [ss:IOCALL_REQSTAT]
 10663 00004675 21FF                    		and	di, di
 10664 00004677 7834                    		js	short DevErr
 10665                                  
 10666                                  OKDevIO:				; ...
 10667 00004679 8CD0                    		mov	ax, ss
 10668 0000467B 8ED8                    		mov	ds, ax
 10669 0000467D 80FD05                  		cmp	ch, 5		; DEVRDND
 10670 00004680 7506                    		jnz	short DNODRD
 10671 00004682 A0[8903]                		mov	al, [IOCTL_REQ_MAJORFUNCTION] ; [IORCHR]
 10672 00004685 A2[BC03]                		mov	byte [DEVIOBUF],	al
 10673                                  
 10674                                  DNODRD:					; ...
 10675 00004688 8A26[8003]              		mov	ah, [IOCALL_REQSTAT+1]
 10676 0000468C F6D4                    		not	ah
 10677 0000468E 80E402                  		and	ah, 2		; STBUI>>8
 10678 00004691 E8DBBD                  		call	restore_world
 10679 00004694 07                      		pop	es
 10680 00004695 9C                      		pushf
 10681 00004696 36A0[8300]              		mov	al, [ss:IoStatFail]
 10682 0000469A 98                      		cbw
 10683 0000469B 83F8FF                  		cmp	ax, -1		; 0FFFFh
 10684 0000469E 7507                    		jnz	short not_fail_ret
 10685 000046A0 36FE06[8300]            		inc	byte [ss:IoStatFail]
 10686 000046A5 9D                      		popf
 10687 000046A6 C3                      		retn
 10688                                  ; ---------------------------------------------------------------------------
 10689                                  
 10690                                  not_fail_ret:				; ...
 10691 000046A7 36A1[BC03]              		mov	ax, [ss:DEVIOBUF]
 10692 000046AB 9D                      		popf
 10693 000046AC C3                      		retn
 10694                                  ; ---------------------------------------------------------------------------
 10695                                  
 10696                                  DevErr:					; ...
 10697 000046AD 88CC                    		mov	ah, cl
 10698 000046AF E8C70D                  		call	CHARHARD
 10699 000046B2 3C01                    		cmp	al, 1
 10700 000046B4 7507                    		jnz	short NO_RETRY
 10701 000046B6 E8B6BD                  		call	restore_world
 10702 000046B9 07                      		pop	es
 10703 000046BA E94BFF                  		jmp	IOFUNC
 10704                                  ; ---------------------------------------------------------------------------
 10705                                  
 10706                                  NO_RETRY:				; ...
 10707 000046BD 368026[8003]FD          		and	byte [ss:IOCALL_REQSTAT+1], 0FDh ; ~(STBUI>>8)
 10708 000046C3 3C03                    		cmp	al, 3
 10709 000046C5 7505                    		jnz	short not_fail
 10710 000046C7 36FE0E[8300]            		dec	byte [ss:IoStatFail]
 10711                                  
 10712                                  not_fail:				; ...
 10713 000046CC EBAB                    		jmp	short OKDevIO
 10714                                  ; ---------------------------------------------------------------------------
 10715                                  
 10716                                  IOTOFILE:				; ...
 10717 000046CE 08E4                    		or	ah, ah
 10718 000046D0 7423                    		jz	short IOIN
 10719 000046D2 FECC                    		dec	ah
 10720 000046D4 7405                    		jz	short IOIST
 10721 000046D6 FECC                    		dec	ah
 10722 000046D8 7411                    		jz	short IOUT
 10723 000046DA C3                      		retn
 10724                                  ; ---------------------------------------------------------------------------
 10725                                  
 10726                                  IOIST:					; ...
 10727 000046DB FF7415                  		push	word [si+15h] ; [SI+SF_ENTRY.sf_position]
 10728 000046DE FF7417                  		push	word [si+17h] ; [SI+SF_ENTRY.sf_position+2]
 10729 000046E1 E81100                  		call	IOIN
 10730 000046E4 8F4417                  		pop	word [si+17h]
 10731 000046E7 8F4415                  		pop	word [si+15h]
 10732 000046EA C3                      		retn
 10733                                  ; ---------------------------------------------------------------------------
 10734                                  
 10735                                  IOUT:					; ...
 10736 000046EB E82700                  		call	SETXADDR
 10737 000046EE E857EF                  		call	DOS_WRITE
 10738 000046F1 E85500                  		call	RESTXADDR
 10739                                  
 10740                                  IOUT_retn:				; ...
 10741 000046F4 C3                      		retn
 10742                                  ; ---------------------------------------------------------------------------
 10743                                  
 10744                                  IOIN:					; ...
 10745 000046F5 E81D00                  		call	SETXADDR
 10746 000046F8 36830E[1106]40          		or	word [ss:DOS34_FLAG], 40h ; Disable_EOF_I24
 10747 000046FE E818ED                  		call	DOS_READ
 10748 00004701 368326[1106]BF          		and	word [ss:DOS34_FLAG], 0FFBFh ; NO_Disable_EOF_I24
 10749 00004707 09C9                    		or	cx, cx
 10750 00004709 E83D00                  		call	RESTXADDR
 10751 0000470C 36A0[BC03]              		mov	al, byte [ss:DEVIOBUF]
 10752 00004710 75E2                    		jnz	short IOUT_retn
 10753 00004712 B01A                    		mov	al, 1Ah		; ^Z
 10754 00004714 C3                      		retn
 10755                                  
 10756                                  ; =============== S U B	R O U T	I N E =======================================
 10757                                  
 10758                                  SETXADDR:		; ...
 10759                                  
 10760                                  ; FUNCTION CHUNK AT 8529 SIZE 00000005 BYTES
 10761                                  
 10762 00004715 368F06[6C03]            		pop	word [ss:CALLSCNT]
 10763 0000471A 06                      		push	es
 10764 0000471B E868BD                  		call	save_world
 10765 0000471E 36FF36[2C03]            		push	word [ss:DMAADD]
 10766 00004723 36FF36[2E03]            		push	word [ss:DMAADD+2]
 10767 00004728 368C1E[A005]            		mov	word [ss:THISSFT+2], ds
 10768 0000472D 16                      		push	ss
 10769 0000472E 1F                      		pop	ds
 10770 0000472F 8936[9E05]              		mov	word [THISSFT], si
 10771 00004733 8B0E[8C03]              		mov	cx, word [IOCTL_IOXAD_2]	; [IOXAD+2]
 10772 00004737 890E[2E03]              		mov	word [DMAADD+2],	cx
 10773 0000473B 8B0E[8A03]              		mov	cx, word [IOCTL_REQ_MINORFUNCTION] ; [IOXAD]
 10774 0000473F 890E[2C03]              		mov	word [DMAADD], cx
 10775 00004743 8B0E[8E03]              		mov	cx, word [IOCTL_IOSCNT] ; [IOCNT]
 10776 00004747 EB10                    		jmp	short RESTRET
 10777                                  
 10778                                  ; ---------------------------------------------------------------------------
 10779                                  
 10780                                  RESTXADDR:				; ...
 10781 00004749 8F06[6C03]              		pop	word [CALLSCNT]
 10782 0000474D 8F06[2E03]              		pop	word [DMAADD+2]
 10783 00004751 8F06[2C03]              		pop	word [DMAADD]
 10784 00004755 E817BD                  		call	restore_world
 10785 00004758 07                      		pop	es
 10786                                  ; START	OF FUNCTION CHUNK FOR SETXADDR
 10787                                  
 10788                                  RESTRET:				; ...
 10789                                  		;jmp	[ss:CALLSCNT]	; JMP WORD [SS:CALLSCNT]
 10790 00004759 36FF26[6C03]            		jmp	word [ss:CALLSCNT]
 10791                                  
 10792                                  ; END OF FUNCTION CHUNK	FOR SETXADDR
 10793                                  
 10794                                  ; =============== S U B	R O U T	I N E =======================================
 10795                                  
 10796                                  DEV_OPEN_SFT:	; ...
 10797 0000475E 06                      		push	es
 10798 0000475F E824BD                  		call	save_world
 10799 00004762 B00D                    		mov	al, 0Dh		; DEVOPN
 10800 00004764 EB06                    		jmp	short DO_OPCLS
 10801                                  
 10802                                  ; =============== S U B	R O U T	I N E =======================================
 10803                                  
 10804                                  DEV_CLOSE_SFT:	; ...
 10805 00004766 06                      		push	es
 10806 00004767 E81CBD                  		call	save_world
 10807 0000476A B00E                    		mov	al, 0Eh
 10808                                  
 10809                                  DO_OPCLS:				; ...
 10810 0000476C 26F6450680              		test	byte [es:di+6], 80h	; [es:di+SF_ENTRY.sf_flags+1],
 10811                                  					; (sf_isnet>>8)
 10812 00004771 7567                    		jnz	short OPCLS_DONE
 10813 00004773 30E4                    		xor	ah, ah
 10814 00004775 26F6450580              		test	byte [es:di+5], 80h	; [ES:DI+SF_ENTRY.sf_flags],
 10815                                  					; devid_device
 10816 0000477A 26C47D07                		les	di, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
 10817 0000477E 7513                    		jnz	short GOT_DEV_ADDR
 10818 00004780 36803E[0303]01          		cmp	byte [ss:fShare], 1
 10819 00004786 7652                    		jbe	short OPCLS_DONE
 10820 00004788 268A6501                		mov	ah, [es:di+1]	; [ES:DI+DPB.UNIT]
 10821 0000478C 268A0D                  		mov	cl, [es:di]	; [ES:DI+DPB.DRIVE]
 10822 0000478F 26C47D13                		les	di, [es:di+13h]	; [ES:DI+DPB.DRIVER_ADDR]
 10823                                  
 10824                                  GOT_DEV_ADDR:				; ...
 10825 00004793 26F6450508              		test	byte [es:di+5], 8 ;	[ES:DI+SYSDEV.ATT+1],
 10826                                  					; (DEVOPCL>>8)
 10827 00004798 7440                    		jz	short OPCLS_DONE
 10828 0000479A 06                      		push	es
 10829 0000479B 1F                      		pop	ds
 10830 0000479C 89FE                    		mov	si, di
 10831                                  
 10832                                  OPCLS_RETRY:				; ...
 10833 0000479E 16                      		push	ss
 10834 0000479F 07                      		pop	es
 10835 000047A0 BF[5A03]                		mov	di, DEVCALL
 10836 000047A3 89FB                    		mov	bx, di
 10837 000047A5 50                      		push	ax
 10838 000047A6 B00D                    		mov	al, 13		; DOPCLHL
 10839 000047A8 AA                      		stosb
 10840 000047A9 58                      		pop	ax
 10841 000047AA 86E0                    		xchg	ah, al
 10842 000047AC AA                      		stosb
 10843 000047AD 86E0                    		xchg	ah, al
 10844 000047AF AA                      		stosb
 10845 000047B0 26C7050000              		mov	word [es:di], 0
 10846 000047B5 50                      		push	ax
 10847 000047B6 E82900                  		call	DEVIOCALL2
 10848 000047B9 268B7F03                		mov	di, [es:bx+3]	; [ES:BX+SRHEAD.REQSTAT]
 10849 000047BD 21FF                    		and	di, di
 10850 000047BF 7918                    		jns	short OPCLS_DONEP
 10851 000047C1 F6440580                		test	byte [si+5], 80h ; [ES:DI+SYSDEV.ATT+1],
 10852                                  					; (DEVTYP>>8)
 10853 000047C5 7404                    		jz	short BLKDEV
 10854 000047C7 B486                    		mov	ah, 86h
 10855 000047C9 EB04                    		jmp	short HRDERR
 10856                                  ; ---------------------------------------------------------------------------
 10857                                  
 10858                                  BLKDEV:					; ...
 10859 000047CB 88C8                    		mov	al, cl
 10860 000047CD B406                    		mov	ah, 6
 10861                                  
 10862                                  HRDERR:					; ...
 10863 000047CF E8A70C                  		call	CHARHARD
 10864 000047D2 3C01                    		cmp	al, 1
 10865 000047D4 7503                    		jnz	short OPCLS_DONEP
 10866 000047D6 58                      		pop	ax
 10867 000047D7 EBC5                    		jmp	short OPCLS_RETRY
 10868                                  ; ---------------------------------------------------------------------------
 10869                                  
 10870                                  OPCLS_DONEP:				; ...
 10871 000047D9 58                      		pop	ax
 10872                                  
 10873                                  OPCLS_DONE:				; ...
 10874 000047DA E892BC                  		call	restore_world
 10875 000047DD 07                      		pop	es
 10876 000047DE C3                      		retn
 10877                                  
 10878                                  ; =============== S U B	R O U T	I N E =======================================
 10879                                  
 10880                                  DEVIOCALL:		; ...
 10881 000047DF C57407                  		lds	si, [si+7]	; [SI+SF_ENTRY.sf_devptr]
 10882                                  
 10883                                  DEVIOCALL2:				; ...
 10884 000047E2 E8B1CB                  		call	ECritDevice
 10885 000047E5 F6440580                		test	byte [si+5], 80h ; [si+SYSDEV.ATT+1],(DEVTYP>>8)
 10886 000047E9 754D                    		jnz	short chardev2
 10887 000047EB 26807F0204              		cmp	byte [es:bx+2], 4 ; [ES:BX+SRHEAD.REQFUNC],DEVRD
 10888 000047F0 740E                    		jz	short chkext
 10889 000047F2 26807F0208              		cmp	byte [es:bx+2], 8 ; [ES:BX+SRHEAD.REQFUNC],DEVWRT
 10890 000047F7 7407                    		jz	short chkext
 10891 000047F9 26807F0209              		cmp	byte [es:bx+2], 9 ; [ES:BX+SRHEAD.REQFUNC],DEVWRTV
 10892 000047FE 7538                    		jnz	short chardev2
 10893                                  
 10894                                  chkext:					; ...
 10895 00004800 E89A00                  		call	RW_SC
 10896 00004803 7255                    		jb	short dev_exit
 10897 00004805 F6440402                		test	byte [si+4], 2 ; [SI+SYSDEV.ATT],EXTDRVR
 10898 00004809 741D                    		jz	short chksector
 10899 0000480B 26800708                		add	byte [es:bx], 8
 10900 0000480F 36A1[6E03]              		mov	ax, [ss:CALLSSEC]
 10901 00004813 36C706[6E03]FFFF        		mov	word [ss:CALLSSEC], 0FFFFh ; -1
 10902 0000481A 36A3[7403]              		mov	word [ss:CALLNEWSC], ax
 10903 0000481E 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 10904 00004822 36A3[7603]              		mov	word [ss:CALLNEWSC+2], ax
 10905 00004826 EB10                    		jmp	short chardev2
 10906                                  ; ---------------------------------------------------------------------------
 10907                                  
 10908                                  chksector:				; ...
 10909 00004828 36833E[0706]00          		cmp	word [ss:HIGH_SECTOR], 0
 10910 0000482E 7408                    		jz	short chardev2
 10911 00004830 26C747030781            		mov	word [es:bx+3], 8107h ; [ES:BX+SRHEAD.REQSTAT],
 10912                                  					; STERR+STDON+error_I24_not_DOS_disk
 10913 00004836 EB22                    		jmp	short dev_exit
 10914                                  ; ---------------------------------------------------------------------------
 10915                                  
 10916                                  chardev2:				; ...
 10917 00004838 8B4406                  		mov	ax, [si+6]	; [SI+SYSDEV.STRAT]
 10918 0000483B 36A3[7803]              		mov	word [ss:CALLDEVAD], ax
 10919 0000483F 368C1E[7A03]            		mov	word [ss:CALLDEVAD+2], ds
 10920                                  		;call	[ss:CALLDEVAD]
 10921 00004844 36FF1E[7803]            		CALL	far [SS:CALLDEVAD]
 10922 00004849 8B4408                  		mov	ax, [si+8]	; [SI+SYSDEV.INT]
 10923 0000484C 36A3[7803]              		mov	word [ss:CALLDEVAD], ax
 10924                                  		;call	[ss:CALLDEVAD]
 10925 00004850 36FF1E[7803]            		CALL	far [SS:CALLDEVAD]
 10926 00004855 E84201                  		call	VIRREAD
 10927 00004858 72DE                    		jb	short chardev2
 10928                                  
 10929                                  dev_exit:				; ...
 10930 0000485A E859CB                  		call	LCritDevice
 10931 0000485D C3                      		retn
 10932                                  
 10933                                  ; =============== S U B	R O U T	I N E =======================================
 10934                                  
 10935                                  SETREAD:
 10936 0000485E 57                      		push	di
 10937 0000485F 51                      		push	cx
 10938 00004860 50                      		push	ax
 10939 00004861 B104                    		mov	cl, 4		; DEVRD
 10940                                  
 10941                                  SETCALLHEAD:				; ...
 10942 00004863 B016                    		mov	al, 16h		; DRDWRHL
 10943 00004865 16                      		push	ss
 10944 00004866 07                      		pop	es
 10945 00004867 BF[5A03]                		mov	di, DEVCALL
 10946 0000486A AA                      		stosb
 10947 0000486B 58                      		pop	ax
 10948 0000486C AA                      		stosb
 10949 0000486D 50                      		push	ax
 10950 0000486E 88C8                    		mov	al, cl
 10951 00004870 AA                      		stosb
 10952 00004871 31C0                    		xor	ax, ax
 10953 00004873 AB                      		stosw
 10954 00004874 83C708                  		add	di, 8
 10955 00004877 58                      		pop	ax
 10956 00004878 86E0                    		xchg	ah, al
 10957 0000487A AA                      		stosb
 10958 0000487B 86C4                    		xchg	al, ah
 10959 0000487D 50                      		push	ax
 10960 0000487E 89D8                    		mov	ax, bx
 10961 00004880 AB                      		stosw
 10962 00004881 8CD8                    		mov	ax, ds
 10963 00004883 AB                      		stosw
 10964 00004884 59                      		pop	cx
 10965 00004885 58                      		pop	ax
 10966 00004886 AB                      		stosw
 10967 00004887 92                      		xchg	ax, dx
 10968 00004888 AB                      		stosw
 10969 00004889 91                      		xchg	ax, cx
 10970 0000488A 87D1                    		xchg	dx, cx
 10971 0000488C 5F                      		pop	di
 10972 0000488D BB[5A03]                		mov	bx, DEVCALL
 10973 00004890 C3                      		retn
 10974                                  
 10975                                  ; =============== S U B	R O U T	I N E =======================================
 10976                                  
 10977                                  SETWRITE:		; ...
 10978 00004891 57                      		push	di
 10979 00004892 51                      		push	cx
 10980 00004893 50                      		push	ax
 10981 00004894 B108                    		mov	cl, 8		; DEVWRT
 10982 00004896 36020E[FF02]            		add	cl, [ss:VERFLG]
 10983 0000489B EBC6                    		jmp	short SETCALLHEAD
 10984                                  
 10985                                  ; =============== S U B	R O U T	I N E =======================================
 10986                                  
 10987                                  RW_SC:		; ...
 10988 0000489D 36833E[7700]00          		cmp	word [ss:SC_CACHE_COUNT], 0
 10989 000048A3 7421                    		jz	short scexit4
 10990 000048A5 36833E[6C03]01          		cmp	word [ss:CALLSCNT], 1
 10991 000048AB 7519                    		jnz	short scexit4
 10992 000048AD 51                      		push	cx
 10993 000048AE 52                      		push	dx
 10994 000048AF 1E                      		push	ds
 10995 000048B0 56                      		push	si
 10996 000048B1 06                      		push	es
 10997 000048B2 57                      		push	di
 10998 000048B3 368B16[6E03]            		mov	dx, [ss:CALLSSEC]
 10999 000048B8 36803E[5C03]04          		cmp	byte [ss:DEVCALL_REQFUNC], 4 ; DEVRD
 11000 000048BE 7408                    		jz	short doread
 11001 000048C0 E8C500                  		call	INVALIDATE_SC
 11002 000048C3 E98E00                  		jmp	scexit2
 11003                                  ; ---------------------------------------------------------------------------
 11004                                  
 11005                                  scexit4:				; ...
 11006 000048C6 F8                      		clc
 11007 000048C7 C3                      		retn
 11008                                  ; ---------------------------------------------------------------------------
 11009                                  
 11010                                  doread:					; ...
 11011 000048C8 E82701                  		call	SC2BUF
 11012 000048CB 720A                    		jb	short readSC
 11013 000048CD 36C706[5D03]0001        		mov	word [ss:DEVCALL_REQSTAT], 100h ; STDON
 11014 000048D4 F9                      		stc
 11015 000048D5 EB6B                    		jmp	short saveseq
 11016                                  ; ---------------------------------------------------------------------------
 11017                                  
 11018                                  readSC:					; ...
 11019 000048D7 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 11020 000048DB 368B0E[6E03]            		mov	cx, [ss:CALLSSEC]
 11021 000048E0 362B0E[A90D]            		sub	cx, word [ss:SEQ_SECTOR]
 11022 000048E5 361B06[AB0D]            		sbb	ax, word [ss:SEQ_SECTOR+2]
 11023 000048EA 83F800                  		cmp	ax, 0
 11024 000048ED 7552                    		jnz	short saveseq2
 11025 000048EF 83F901                  		cmp	cx, 1
 11026 000048F2 774D                    		ja	short saveseq2
 11027 000048F4 36C706[B50D]FFFF        		mov	word [ss:SC_STATUS], 0FFFFh
 11028 000048FB 36A1[7700]              		mov	ax, [ss:SC_CACHE_COUNT]
 11029 000048FF 36A3[6C03]              		mov	[ss:CALLSCNT], ax
 11030 00004903 36A1[6A03]              		mov	ax, word [ss:CALLXADD+2]
 11031 00004907 36A3[0E06]              		mov	[ss:TEMP_VAR2],	ax
 11032 0000490B 36A1[6803]              		mov	ax, word [ss:CALLXADD]
 11033 0000490F 36A3[0C06]              		mov	[ss:TEMP_VAR], ax
 11034 00004913 36A1[7300]              		mov	ax, word [ss:SC_CACHE_PTR]
 11035 00004917 36A3[6803]              		mov	word [ss:CALLXADD], ax
 11036 0000491B 36A1[7500]              		mov	ax, word [ss:SC_CACHE_PTR+2]
 11037 0000491F 36A3[6A03]              		mov	word [ss:CALLXADD+2], ax
 11038 00004923 36C606[B70D]01          		mov	byte [ss:SC_FLAG], 1
 11039 00004929 36A0[AF0D]              		mov	al, [ss:SC_DRIVE]
 11040 0000492D 36A2[B00D]              		mov	byte [ss:CurSC_DRIVE], al
 11041 00004931 36A1[6E03]              		mov	ax, [ss:CALLSSEC]
 11042 00004935 36A3[B10D]              		mov	word [ss:CurSC_SECTOR], ax
 11043 00004939 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 11044 0000493D 36A3[B30D]              		mov	word [ss:CurSC_SECTOR+2], ax
 11045                                  
 11046                                  saveseq2:				; ...
 11047 00004941 F8                      		clc
 11048                                  
 11049                                  saveseq:				; ...
 11050 00004942 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 11051 00004946 36A3[AB0D]              		mov	word [ss:SEQ_SECTOR+2], ax
 11052 0000494A 36A1[6E03]              		mov	ax, [ss:CALLSSEC]
 11053 0000494E 36A3[A90D]              		mov	word [ss:SEQ_SECTOR], ax
 11054 00004952 EB01                    		jmp	short scexit
 11055                                  ; ---------------------------------------------------------------------------
 11056                                  
 11057                                  scexit2:				; ...
 11058 00004954 F8                      		clc
 11059                                  
 11060                                  scexit:					; ...
 11061 00004955 5F                      		pop	di
 11062 00004956 07                      		pop	es
 11063 00004957 5E                      		pop	si
 11064 00004958 1F                      		pop	ds
 11065 00004959 5A                      		pop	dx
 11066 0000495A 59                      		pop	cx
 11067 0000495B C3                      		retn
 11068                                  
 11069                                  ; =============== S U B	R O U T	I N E =======================================
 11070                                  
 11071                                  IN_SC:		; ...
 11072 0000495C 36A0[AF0D]              		mov	al, [ss:SC_DRIVE]
 11073 00004960 363A06[B00D]            		cmp	al, [ss:CurSC_DRIVE]
 11074 00004965 751F                    		jnz	short outrange2
 11075 00004967 36A1[0706]              		mov	ax, [ss:HIGH_SECTOR]
 11076 0000496B 89D1                    		mov	cx, dx
 11077 0000496D 362B0E[B10D]            		sub	cx, word [ss:CurSC_SECTOR]
 11078 00004972 361B06[B30D]            		sbb	ax, word [ss:CurSC_SECTOR+2]
 11079 00004977 83F800                  		cmp	ax, 0
 11080 0000497A 750A                    		jnz	short outrange2
 11081 0000497C 363B0E[7700]            		cmp	cx, [ss:SC_CACHE_COUNT]
 11082 00004981 7303                    		jnb	short outrange2
 11083 00004983 F8                      		clc
 11084 00004984 EB01                    		jmp	short inexit
 11085                                  ; ---------------------------------------------------------------------------
 11086                                  
 11087                                  outrange2:				; ...
 11088 00004986 F9                      		stc
 11089                                  
 11090                                  inexit:					; ...
 11091 00004987 C3                      		retn
 11092                                  
 11093                                  ; =============== S U B	R O U T	I N E =======================================
 11094                                  
 11095                                  INVALIDATE_SC:	; ...
 11096 00004988 E8D1FF                  		call	IN_SC
 11097 0000498B 720C                    		jb	short outrange
 11098 0000498D B80100                  		mov	ax, 1
 11099 00004990 D3E0                    		shl	ax, cl
 11100 00004992 F7D0                    		not	ax
 11101 00004994 362106[B50D]            		and	[ss:SC_STATUS],	ax
 11102                                  
 11103                                  outrange:				; ...
 11104 00004999 C3                      		retn
 11105                                  
 11106                                  ; =============== S U B	R O U T	I N E =======================================
 11107                                  
 11108                                  VIRREAD:
 11109 0000499A 36803E[B70D]00          		cmp	byte [ss:SC_FLAG], 0
 11110 000049A0 744E                    		jz	short sc2end
 11111 000049A2 36A1[0E06]              		mov	ax, [ss:TEMP_VAR2]
 11112 000049A6 36A3[6A03]              		mov	word [ss:CALLXADD+2], ax
 11113 000049AA 36A1[0C06]              		mov	ax, [ss:TEMP_VAR]
 11114 000049AE 36A3[6803]              		mov	word [ss:CALLXADD], ax
 11115 000049B2 36C606[B70D]00          		mov	byte [ss:SC_FLAG], 0
 11116 000049B8 36C706[6C03]0100        		mov	word [ss:CALLSCNT], 1
 11117 000049BF 36F606[5E03]80          		test	byte [ss:DEVCALL_REQSTAT+1], 80h ; (STERR>>8)
 11118 000049C5 7513                    		jnz	short scerror
 11119 000049C7 1E                      		push	ds
 11120 000049C8 56                      		push	si
 11121 000049C9 06                      		push	es
 11122 000049CA 57                      		push	di
 11123 000049CB 52                      		push	dx
 11124 000049CC 51                      		push	cx
 11125 000049CD 31C9                    		xor	cx, cx
 11126 000049CF E83100                  		call	SC2BUF2
 11127 000049D2 59                      		pop	cx
 11128 000049D3 5A                      		pop	dx
 11129 000049D4 5F                      		pop	di
 11130 000049D5 07                      		pop	es
 11131 000049D6 5E                      		pop	si
 11132 000049D7 1F                      		pop	ds
 11133 000049D8 EB16                    		jmp	short sc2end
 11134                                  ; ---------------------------------------------------------------------------
 11135                                  
 11136                                  scerror:				; ...
 11137 000049DA 36C706[6C03]0100        		mov	word [ss:CALLSCNT], 1
 11138 000049E1 36C706[B50D]0000        		mov	word [ss:SC_STATUS], 0
 11139 000049E8 36C606[B00D]FF          		mov	byte [ss:CurSC_DRIVE], 0FFh ; -1
 11140 000049EE F9                      		stc
 11141 000049EF C3                      		retn
 11142                                  ; ---------------------------------------------------------------------------
 11143                                  
 11144                                  sc2end:					; ...
 11145 000049F0 F8                      		clc
 11146 000049F1 C3                      		retn
 11147                                  
 11148                                  ; ---------------------------------------------------------------------------
 11149                                  
 11150                                  SC2BUF:					; ...
 11151 000049F2 E867FF                  		call	IN_SC
 11152 000049F5 7241                    		jb	short noSC
 11153 000049F7 B80100                  		mov	ax, 1
 11154 000049FA D3E0                    		shl	ax, cl
 11155 000049FC 368506[B50D]            		test	[ss:SC_STATUS],	ax
 11156 00004A01 7435                    		jz	short noSC
 11157                                  
 11158                                  SC2BUF2:				; ...
 11159 00004A03 89C8                    		mov	ax, cx
 11160 00004A05 36F726[AD0D]            		mul	word [ss:SC_SECTOR_SIZE]
 11161 00004A0A 360306[7300]            		add	ax, word [ss:SC_CACHE_PTR]
 11162 00004A0F 361316[7500]            		adc	dx, word [ss:SC_CACHE_PTR+2]
 11163 00004A14 8EDA                    		mov	ds, dx
 11164 00004A16 89C6                    		mov	si, ax
 11165 00004A18 368E06[6A03]            		mov	es, word [ss:CALLXADD+2]
 11166 00004A1D 368B3E[6803]            		mov	di, word [ss:CALLXADD]
 11167 00004A22 368B0E[AD0D]            		mov	cx, [ss:SC_SECTOR_SIZE]
 11168 00004A27 D1E9                    		shr	cx, 1
 11169 00004A29 36803E[6A00]00          		cmp	byte [ss:DDMOVE], 0
 11170 00004A2F 7403                    		jz	short nodd
 11171 00004A31 D1E9                    		shr	cx, 1
 11172                                  ; ---------------------------------------------------------------------------
 11173 00004A33 66                      		db 66h			; rep movsd (dword move	prefix)
 11174                                  ; ---------------------------------------------------------------------------
 11175                                  
 11176                                  nodd:					; ...
 11177 00004A34 F3A5                    		rep movsw
 11178 00004A36 F8                      		clc
 11179 00004A37 C3                      		retn
 11180                                  ; ---------------------------------------------------------------------------
 11181                                  
 11182                                  noSC:					; ...
 11183 00004A38 F9                      		stc
 11184 00004A39 C3                      		retn
 11185                                  
 11186                                  ; =============== S U B	R O U T	I N E =======================================
 11187                                  
 11188                                  BUILDDIR:		; ...
 11189 00004A3A A1[D805]                		mov	ax, [ENTFREE]
 11190 00004A3D 83F8FF                  		cmp	ax, 0FFFFh	; -1
 11191 00004A40 7402                    		jz	short CHECK_IF_ROOT
 11192 00004A42 F8                      		clc
 11193 00004A43 C3                      		retn
 11194                                  ; ---------------------------------------------------------------------------
 11195                                  
 11196                                  CHECK_IF_ROOT:				; ...
 11197 00004A44 833E[C205]00            		cmp	word [DIRSTART], 0
 11198 00004A49 7502                    		jnz	short NEWDIR
 11199 00004A4B F9                      		stc
 11200                                  
 11201                                  builddir_retn:				; ...
 11202 00004A4C C3                      		retn
 11203                                  ; ---------------------------------------------------------------------------
 11204                                  
 11205                                  NEWDIR:					; ...
 11206 00004A4D 8B1E[C205]              		mov	bx, [DIRSTART]
 11207 00004A51 09DB                    		or	bx, bx
 11208 00004A53 7405                    		jz	short NULLDIR
 11209 00004A55 E83D06                  		call	GETEOF
 11210 00004A58 72F2                    		jb	short builddir_retn
 11211                                  
 11212                                  NULLDIR:				; ...
 11213 00004A5A B90100                  		mov	cx, 1
 11214 00004A5D E85705                  		call	ALLOCATE
 11215 00004A60 72EA                    		jb	short builddir_retn
 11216 00004A62 8B16[C205]              		mov	dx, [DIRSTART]
 11217 00004A66 09D2                    		or	dx, dx
 11218 00004A68 750D                    		jnz	short ADDINGDIR
 11219 00004A6A E89FF5                  		call	SETDIRSRCH
 11220 00004A6D 72DD                    		jb	short builddir_retn
 11221 00004A6F C706[4803]FFFF          		mov	word [LASTENT], 0FFFFh ; -1
 11222 00004A75 EB2B                    		jmp	short GOTDIRREC
 11223                                  ; ---------------------------------------------------------------------------
 11224                                  
 11225                                  ADDINGDIR:				; ...
 11226 00004A77 53                      		push	bx
 11227 00004A78 8B1E[BC05]              		mov	bx, [CLUSNUM]
 11228 00004A7C E84F0C                  		call	IsEOF
 11229 00004A7F 5B                      		pop	bx
 11230 00004A80 7219                    		jb	short NOTFIRSTGROW
 11231 00004A82 891E[BC05]              		mov	[CLUSNUM], bx
 11232 00004A86 51                      		push	cx
 11233 00004A87 50                      		push	ax
 11234 00004A88 55                      		push	bp
 11235 00004A89 B401                    		mov	ah, 1
 11236 00004A8B 268A5600                		mov	dl, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 11237 00004A8F 8B0E[C205]              		mov	cx, [DIRSTART]
 11238 00004A93 89DD                    		mov	bp, bx
 11239 00004A95 E852DD                  		call	FastOpen_Update
 11240 00004A98 5D                      		pop	bp
 11241 00004A99 58                      		pop	ax
 11242 00004A9A 59                      		pop	cx
 11243                                  
 11244                                  NOTFIRSTGROW:				; ...
 11245 00004A9B 89DA                    		mov	dx, bx
 11246 00004A9D 30DB                    		xor	bl, bl
 11247 00004A9F E8E904                  		call	FIGREC
 11248                                  
 11249                                  GOTDIRREC:				; ...
 11250 00004AA2 268A4E04                		mov	cl, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
 11251 00004AA6 FEC1                    		inc	cl
 11252 00004AA8 30ED                    		xor	ch, ch
 11253                                  
 11254                                  ZERODIR:				; ...
 11255 00004AAA 51                      		push	cx
 11256 00004AAB C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
 11257 00004AB0 B0FF                    		mov	al, 0FFh
 11258 00004AB2 E85610                  		call	GETBUFFR
 11259 00004AB5 7302                    		jnb	short GET_SSIZE
 11260 00004AB7 59                      		pop	cx
 11261 00004AB8 C3                      		retn
 11262                                  ; ---------------------------------------------------------------------------
 11263                                  
 11264                                  GET_SSIZE:				; ...
 11265 00004AB9 268B4E02                		mov	cx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 11266 00004ABD 06                      		push	es
 11267 00004ABE C43E[E205]              		les	di, [CURBUF]
 11268 00004AC2 26804D0504              		or	byte [es:di+5], 4 ;	[ES:DI+BUFFINFO.buf_flags],
 11269                                  					; buf_isDIR
 11270 00004AC7 57                      		push	di
 11271 00004AC8 83C714                  		add	di, 20		; BUFINSIZ
 11272 00004ACB 31C0                    		xor	ax, ax
 11273 00004ACD D1E9                    		shr	cx, 1
 11274 00004ACF F3AB                    		rep stosw
 11275 00004AD1 7301                    		jnb	short EVENZ
 11276 00004AD3 AA                      		stosb
 11277                                  
 11278                                  EVENZ:					; ...
 11279 00004AD4 5F                      		pop	di
 11280 00004AD5 26F6450540              		test	byte [es:di+5], 40h	; [ES:DI+BUFFINFO.buf_flags],
 11281                                  					; buf_dirty
 11282 00004ADA 7508                    		jnz	short yesdirty7
 11283 00004ADC E83712                  		call	INC_DIRTY_COUNT
 11284 00004ADF 26804D0540              		or	byte [es:di+5], 40h
 11285                                  
 11286                                  yesdirty7:				; ...
 11287 00004AE4 07                      		pop	es
 11288 00004AE5 59                      		pop	cx
 11289 00004AE6 83C201                  		add	dx, 1
 11290 00004AE9 8316[0706]00            		adc	word [HIGH_SECTOR], 0
 11291 00004AEE E2BA                    		loop	ZERODIR
 11292 00004AF0 A1[4803]                		mov	ax, [LASTENT]
 11293 00004AF3 40                      		inc	ax
 11294 00004AF4 F8                      		clc
 11295 00004AF5 C3                      		retn
 11296                                  
 11297                                  ; =============== S U B	R O U T	I N E =======================================
 11298                                  
 11299                                  SETDOTENT:		; ...
 11300 00004AF6 AB                      		stosw
 11301 00004AF7 B90400                  		mov	cx, 4
 11302 00004AFA B82020                  		mov	ax, 2020h	; '  '
 11303 00004AFD F3AB                    		rep stosw
 11304 00004AFF AA                      		stosb
 11305 00004B00 B010                    		mov	al, 10h		; attr_directory
 11306 00004B02 AA                      		stosb
 11307 00004B03 83C70A                  		add	di, 10
 11308 00004B06 8B36[9E05]              		mov	si, word [THISSFT]
 11309 00004B0A 8B440D                  		mov	ax, [si+0Dh]	; [SI+SF_ENTRY.sf_time]
 11310 00004B0D AB                      		stosw
 11311 00004B0E 8B440F                  		mov	ax, [si+0Fh]	; [SI+SF_ENTRY.sf_date]
 11312 00004B11 AB                      		stosw
 11313 00004B12 89D0                    		mov	ax, dx
 11314 00004B14 AB                      		stosw
 11315 00004B15 31C0                    		xor	ax, ax
 11316 00004B17 AB                      		stosw
 11317 00004B18 AB                      		stosw
 11318 00004B19 C3                      		retn
 11319                                  
 11320                                  ; ---------------------------------------------------------------------------
 11321                                  
 11322                                  MakeNode:				; ...
 11323 00004B1A C706[7E05]FFE5          		mov	word [CREATING], 0E5FFh ; DIRFREE*256 + 0FFh
 11324 00004B20 50                      		push	ax
 11325 00004B21 C606[4C03]00            		mov	byte [NoSetDir], 0
 11326 00004B26 A2[6D05]                		mov	[SATTRIB], al
 11327 00004B29 E84BF5                  		call	GetPathNoSet
 11328 00004B2C 88CA                    		mov	dl, cl
 11329 00004B2E 89C1                    		mov	cx, ax
 11330 00004B30 58                      		pop	ax
 11331 00004B31 732E                    		jnb	short make_exists
 11332 00004B33 7505                    		jnz	short make_err_4
 11333 00004B35 80FA80                  		cmp	dl, 80h
 11334 00004B38 7406                    		jz	short RENAME_MAKE ; make_type
 11335                                  
 11336                                  make_err_4:				; ...
 11337 00004B3A B004                    		mov	al, 4
 11338                                  
 11339                                  make_err_ret:				; ...
 11340 00004B3C 30E4                    		xor	ah, ah
 11341 00004B3E F9                      		stc
 11342 00004B3F C3                      		retn
 11343                                  ; ---------------------------------------------------------------------------
 11344                                  
 11345                                  RENAME_MAKE:				; ...
 11346 00004B40 F606[F605]01            		test	byte [EXTOPEN_ON], 1 ; make_type
 11347                                  					; EXT_OPEN_ON
 11348 00004B45 7411                    		jz	short make_type2
 11349 00004B47 800E[F605]04            		or	byte [EXTOPEN_ON], 4 ; EXT_FILE_NOT_EXISTS
 11350 00004B4C F606[F405]F0            		test	byte [EXTOPEN_FLAG], 0F0h
 11351 00004B51 7505                    		jnz	short make_type2
 11352 00004B53 F9                      		stc
 11353 00004B54 B80700                  		mov	ax, 7
 11354                                  
 11355                                  ; =============== S U B	R O U T	I N E =======================================
 11356                                  
 11357                                  make_retn:		; ...
 11358 00004B57 C3                      		retn
 11359                                  ; ---------------------------------------------------------------------------
 11360                                  
 11361                                  make_type2:				; ...
 11362 00004B58 C43E[9E05]              		les	di, [THISSFT]
 11363 00004B5C 31C0                    		xor	ax, ax
 11364 00004B5E F9                      		stc
 11365 00004B5F EB5A                    		jmp	short make_new
 11366                                  ; ---------------------------------------------------------------------------
 11367                                  
 11368                                  make_exists:				; ...
 11369 00004B61 7448                    		jz	short make_exists_dir
 11370 00004B63 B003                    		mov	al, 3
 11371 00004B65 F606[6B05]18            		test	byte [ATTRIB], 18h ; attr_volume_id+attr_directory
 11372 00004B6A 753B                    		jnz	short make_err_ret_5
 11373 00004B6C 08ED                    		or	ch, ch
 11374 00004B6E 781A                    		js	short make_share
 11375 00004B70 08E4                    		or	ah, ah
 11376 00004B72 75C8                    		jnz	short make_err_ret
 11377 00004B74 51                      		push	cx
 11378 00004B75 8E06[E405]              		mov	es, word [CURBUF+2]
 11379 00004B79 268A6F0B                		mov	ch, [es:bx+0Bh]	; [ES:BX+dir_entry.dir_attr]
 11380 00004B7D F6C501                  		test	ch, 1
 11381 00004B80 7524                    		jnz	short make_err_ret_5P
 11382 00004B82 E8ABF7                  		call	MatchAttributes
 11383 00004B85 59                      		pop	cx
 11384 00004B86 751F                    		jnz	short make_err_ret_5
 11385 00004B88 30C0                    		xor	al, al
 11386                                  
 11387                                  make_share:				; ...
 11388 00004B8A 30E4                    		xor	ah, ah
 11389 00004B8C 50                      		push	ax
 11390 00004B8D 51                      		push	cx
 11391 00004B8E 88EC                    		mov	ah, ch
 11392 00004B90 E84601                  		call	DOOPEN
 11393 00004B93 C43E[9E05]              		les	di, [THISSFT]
 11394 00004B97 56                      		push	si
 11395 00004B98 53                      		push	bx
 11396 00004B99 E8EC29                  		call	ShareEnter
 11397 00004B9C 735A                    		jnb	short MakeEndShare
 11398 00004B9E 5B                      		pop	bx
 11399 00004B9F 5E                      		pop	si
 11400 00004BA0 59                      		pop	cx
 11401 00004BA1 58                      		pop	ax
 11402                                  
 11403                                  Make_Share_ret:				; ...
 11404 00004BA2 B006                    		mov	al, 6
 11405 00004BA4 EB96                    		jmp	short make_err_ret
 11406                                  ; ---------------------------------------------------------------------------
 11407                                  
 11408                                  make_err_ret_5P:			; ...
 11409 00004BA6 59                      		pop	cx
 11410                                  
 11411                                  make_err_ret_5:				; ...
 11412 00004BA7 B005                    		mov	al, 5
 11413 00004BA9 EB91                    		jmp	short make_err_ret
 11414                                  ; ---------------------------------------------------------------------------
 11415                                  
 11416                                  make_exists_dir:			; ...
 11417 00004BAB B001                    		mov	al, 1
 11418 00004BAD EB8D                    		jmp	short make_err_ret
 11419                                  
 11420                                  ; =============== S U B	R O U T	I N E =======================================
 11421                                  
 11422                                  make_save:		; ...
 11423 00004BAF 50                      		push	ax
 11424 00004BB0 89C8                    		mov	ax, cx
 11425 00004BB2 E87400                  		call	NEWENTRY
 11426 00004BB5 58                      		pop	ax
 11427 00004BB6 739F                    		jnb	short make_retn
 11428 00004BB8 B002                    		mov	al, 2
 11429                                  
 11430                                  make_save_retn:				; ...
 11431 00004BBA C3                      		retn
 11432                                  
 11433                                  ; ---------------------------------------------------------------------------
 11434                                  
 11435                                  make_new:				; ...
 11436 00004BBB E8F1FF                  		call	make_save
 11437 00004BBE 72FA                    		jb	short make_save_retn
 11438 00004BC0 F606[6B05]10            		test	byte [ATTRIB], 10h ; attr_directory
 11439 00004BC5 75F3                    		jnz	short make_save_retn
 11440 00004BC7 50                      		push	ax
 11441 00004BC8 53                      		push	bx
 11442 00004BC9 56                      		push	si
 11443 00004BCA E8BB29                  		call	ShareEnter
 11444 00004BCD 5E                      		pop	si
 11445 00004BCE 5B                      		pop	bx
 11446 00004BCF 58                      		pop	ax
 11447 00004BD0 73E8                    		jnb	short make_save_retn
 11448 00004BD2 50                      		push	ax
 11449 00004BD3 C43E[E205]              		les	di, [CURBUF]
 11450 00004BD7 26C607E5                		mov	byte [es:bx], 0E5h ; DIRFREE
 11451 00004BDB 26F6450540              		test	byte [es:di+5], 40h	; [ES:DI+BUFFINFO.buf_flags],
 11452                                  					; buf_dirty
 11453 00004BE0 7508                    		jnz	short yesdirty8
 11454 00004BE2 E83111                  		call	INC_DIRTY_COUNT
 11455 00004BE5 26804D0540              		or	byte [es:di+5], 40h
 11456                                  
 11457                                  yesdirty8:				; ...
 11458 00004BEA C42E[8A05]              		les	bp, [THISDPB]
 11459 00004BEE 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 11460 00004BF2 E81510                  		call	FLUSHBUF
 11461 00004BF5 58                      		pop	ax
 11462 00004BF6 EBAA                    		jmp	short Make_Share_ret
 11463                                  ; ---------------------------------------------------------------------------
 11464                                  
 11465                                  MakeEndShare:				; ...
 11466 00004BF8 C43E[9E05]              		les	di, [THISSFT]
 11467 00004BFC 31C0                    		xor	ax, ax
 11468 00004BFE E855C7                  		call	ECritDisk	; call ECritSFT
 11469 00004C01 268705                  		xchg	ax, [es:di]	; [ES:DI+SF_ENTRY.sf_ref_count]
 11470 00004C04 50                      		push	ax
 11471 00004C05 57                      		push	di
 11472 00004C06 06                      		push	es
 11473 00004C07 9C                      		pushf
 11474 00004C08 E87829                  		call	ShareEnd
 11475 00004C0B 9D                      		popf
 11476 00004C0C 07                      		pop	es
 11477 00004C0D 5F                      		pop	di
 11478 00004C0E 268F05                  		pop	word [es:di] ; [ES:DI+SF_ENTRY.sf_ref_count]
 11479 00004C11 E862C7                  		call	LCritDisk	; call LCritSFT
 11480 00004C14 5B                      		pop	bx
 11481 00004C15 5E                      		pop	si
 11482 00004C16 59                      		pop	cx
 11483 00004C17 58                      		pop	ax
 11484 00004C18 E894FF                  		call	make_save
 11485 00004C1B 729D                    		jb	short make_save_retn
 11486 00004C1D 50                      		push	ax
 11487 00004C1E 53                      		push	bx
 11488 00004C1F 56                      		push	si
 11489 00004C20 9C                      		pushf
 11490 00004C21 E86429                  		call	ShareEnter
 11491 00004C24 9D                      		popf
 11492 00004C25 5E                      		pop	si
 11493 00004C26 5B                      		pop	bx
 11494 00004C27 58                      		pop	ax
 11495                                  
 11496                                  makeendshare_retn:			; ...
 11497 00004C28 C3                      		retn
 11498                                  
 11499                                  ; =============== S U B	R O U T	I N E =======================================
 11500                                  
 11501                                  NEWENTRY:		; ...
 11502 00004C29 C42E[8A05]              		les	bp, [THISDPB]
 11503 00004C2D 7316                    		jnb	short EXISTENT
 11504 00004C2F 803E[4A03]00            		cmp	byte [FAILERR], 0
 11505 00004C34 F9                      		stc
 11506 00004C35 75F1                    		jnz	short makeendshare_retn
 11507 00004C37 E800FE                  		call	BUILDDIR
 11508 00004C3A 72EC                    		jb	short makeendshare_retn
 11509 00004C3C E89EF3                  		call	GETENT
 11510 00004C3F 72E7                    		jb	short makeendshare_retn
 11511 00004C41 EB0E                    		jmp	short FREESPOT
 11512                                  ; ---------------------------------------------------------------------------
 11513                                  
 11514                                  ERRRET3:				; ...
 11515 00004C43 F9                      		stc
 11516                                  
 11517                                  newentry_retn:				; ...
 11518 00004C44 C3                      		retn
 11519                                  ; ---------------------------------------------------------------------------
 11520                                  
 11521                                  EXISTENT:				; ...
 11522 00004C45 08E4                    		or	ah, ah
 11523 00004C47 7903                    		jns	short NOT_DEV1
 11524 00004C49 E98D00                  		jmp	DOOPEN
 11525                                  ; ---------------------------------------------------------------------------
 11526                                  
 11527                                  NOT_DEV1:				; ...
 11528 00004C4C E82D01                  		call	FREEENT
 11529 00004C4F 72F3                    		jb	short newentry_retn
 11530                                  
 11531                                  FREESPOT:				; ...
 11532 00004C51 F606[6B05]08            		test	byte [ATTRIB], 8 ; attr_volume_id
 11533 00004C56 7407                    		jz	short NOTVOLID
 11534 00004C58 803E[7B05]00            		cmp	byte [VOLID], 0
 11535 00004C5D 75E4                    		jnz	short ERRRET3
 11536                                  
 11537                                  NOTVOLID:				; ...
 11538 00004C5F 8E06[E405]              		mov	es, word [CURBUF+2]
 11539 00004C63 89DF                    		mov	di, bx
 11540 00004C65 BE[4B05]                		mov	si, NAME1
 11541 00004C68 B90500                  		mov	cx, 5
 11542 00004C6B F3A5                    		rep movsw
 11543 00004C6D A4                      		movsb
 11544 00004C6E A0[6B05]                		mov	al, [ATTRIB]
 11545 00004C71 AA                      		stosb
 11546 00004C72 B105                    		mov	cl, 5
 11547 00004C74 31C0                    		xor	ax, ax
 11548 00004C76 F3AB                    		rep stosw
 11549 00004C78 E876BE                  		call	DATE16
 11550 00004C7B 92                      		xchg	ax, dx
 11551 00004C7C AB                      		stosw
 11552 00004C7D 92                      		xchg	ax, dx
 11553 00004C7E AB                      		stosw
 11554 00004C7F 31C0                    		xor	ax, ax
 11555 00004C81 57                      		push	di
 11556 00004C82 AB                      		stosw
 11557 00004C83 AB                      		stosw
 11558 00004C84 AB                      		stosw
 11559 00004C85 8B36[E205]              		mov	si, word [CURBUF]
 11560 00004C89 26F6440540              		test	byte [es:si+5], 40h ; [ES:SI+BUFFINFO.buf_flags],
 11561                                  					; buf_dirty
 11562 00004C8E 7508                    		jnz	short yesdirty9
 11563 00004C90 E88310                  		call	INC_DIRTY_COUNT
 11564 00004C93 26804C0540              		or	byte [es:si+5], 40h
 11565                                  
 11566                                  yesdirty9:				; ...
 11567 00004C98 C42E[8A05]              		les	bp, [THISDPB]
 11568 00004C9C 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 11569 00004CA0 50                      		push	ax
 11570 00004CA1 53                      		push	bx
 11571 00004CA2 06                      		push	es
 11572 00004CA3 57                      		push	di
 11573 00004CA4 C43E[9E05]              		les	di, [THISSFT]
 11574 00004CA8 26F6450580              		test	byte [es:di+5], 80h ; [ES:DI+SF_ENTRY.sf_flags],
 11575                                  					; devid_device
 11576 00004CAD 751A                    		jnz	short GotADevice
 11577 00004CAF 1E                      		push	ds
 11578 00004CB0 53                      		push	bx
 11579 00004CB1 C51E[8A05]              		lds	bx, [THISDPB]
 11580 00004CB5 26895D07                		mov	[es:di+7], bx	; [ES:DI+SF_ENTRY.sf_devptr]
 11581 00004CB9 8CDB                    		mov	bx, ds
 11582 00004CBB 26895D09                		mov	[es:di+9], bx	; [ES:DI+SF_ENTRY.sf_devptr+2]
 11583 00004CBF 5B                      		pop	bx
 11584 00004CC0 1F                      		pop	ds
 11585 00004CC1 E89AFA                  		call	DEV_OPEN_SFT
 11586 00004CC4 C606[A20A]01            		mov	byte [VIRTUAL_OPEN], 1
 11587                                  
 11588                                  GotADevice:				; ...
 11589 00004CC9 5F                      		pop	di
 11590 00004CCA 07                      		pop	es
 11591 00004CCB E83C0F                  		call	FLUSHBUF
 11592 00004CCE E8FA00                  		call	CHECK_VIRT_OPEN
 11593 00004CD1 5B                      		pop	bx
 11594 00004CD2 58                      		pop	ax
 11595 00004CD3 5E                      		pop	si
 11596 00004CD4 88C4                    		mov	ah, al
 11597 00004CD6 7301                    		jnb	short DOOPEN
 11598 00004CD8 C3                      		retn
 11599                                  
 11600                                  ; =============== S U B	R O U T	I N E =======================================
 11601                                  
 11602                                  DOOPEN:		; ...
 11603 00004CD9 88E6                    		mov	dh, ah
 11604 00004CDB C43E[9E05]              		les	di, [THISSFT]
 11605 00004CDF 83C704                  		add	di, 4		; SF_ENTRY.sf_attr
 11606 00004CE2 30C0                    		xor	al, al
 11607 00004CE4 08F6                    		or	dh, dh
 11608 00004CE6 7807                    		js	short DEV_SFT
 11609 00004CE8 8E1E[E405]              		mov	ds, word [CURBUF+2]
 11610 00004CEC 8A470B                  		mov	al, [bx+0Bh]	; [BX+dir_entry.dir_attr]
 11611                                  
 11612                                  DEV_SFT:				; ...
 11613 00004CEF AA                      		stosb
 11614 00004CF0 31C0                    		xor	ax, ax
 11615 00004CF2 88F0                    		mov	al, dh
 11616 00004CF4 0C40                    		or	al, 40h		; devid_file_clean
 11617 00004CF6 AB                      		stosw
 11618 00004CF7 1E                      		push	ds
 11619 00004CF8 C5471A                  		lds	ax, [bx+1Ah]	; [BX+dir_entry.dir_first]
 11620 00004CFB 08F6                    		or	dh, dh
 11621 00004CFD 7805                    		js	short DEV_SFT2
 11622 00004CFF 36C506[8A05]            		lds	ax, [ss:THISDPB]
 11623                                  
 11624                                  DEV_SFT2:				; ...
 11625 00004D04 AB                      		stosw
 11626 00004D05 8CD8                    		mov	ax, ds
 11627 00004D07 1F                      		pop	ds
 11628 00004D08 AB                      		stosw
 11629 00004D09 56                      		push	si
 11630 00004D0A A5                      		movsw
 11631 00004D0B 83EE06                  		sub	si, 6		; dir_entry.dir_size_l - dir_entry.dir_time
 11632 00004D0E A5                      		movsw
 11633 00004D0F A5                      		movsw
 11634 00004D10 AD                      		lodsw
 11635 00004D11 AD                      		lodsw
 11636 00004D12 89C1                    		mov	cx, ax
 11637 00004D14 AD                      		lodsw
 11638 00004D15 08F6                    		or	dh, dh
 11639 00004D17 7904                    		jns	short FILE_SFT1
 11640 00004D19 31C0                    		xor	ax, ax
 11641 00004D1B 89C1                    		mov	cx, ax
 11642                                  
 11643                                  FILE_SFT1:				; ...
 11644 00004D1D 91                      		xchg	ax, cx
 11645 00004D1E AB                      		stosw
 11646 00004D1F 91                      		xchg	ax, cx
 11647 00004D20 AB                      		stosw
 11648 00004D21 31C0                    		xor	ax, ax
 11649 00004D23 AB                      		stosw
 11650 00004D24 AB                      		stosw
 11651 00004D25 08F6                    		or	dh, dh
 11652 00004D27 7844                    		js	short DEV_SFT3
 11653 00004D29 AB                      		stosw
 11654 00004D2A 8B471A                  		mov	ax, [bx+1Ah]	; [BX+dir_entry.dir_first]
 11655 00004D2D 57                      		push	di
 11656 00004D2E 83EF1B                  		sub	di, 1Bh		; SF_ENTRY.sf_dirsec
 11657 00004D31 26894535                		mov	[es:di+35h], ax	; [ES:DI+SF_ENTRY.sf_lstclus]
 11658 00004D35 5F                      		pop	di
 11659 00004D36 1E                      		push	ds
 11660 00004D37 16                      		push	ss
 11661 00004D38 1F                      		pop	ds
 11662 00004D39 F606[3A0D]04            		test	byte [FastOpenFlg], 4 ; Special_Fill_Set
 11663 00004D3E 7411                    		jz	short Not_FastOpen
 11664 00004D40 BE[3B0D]                		mov	si, FastOpen_Ext_Info
 11665 00004D43 8B4401                  		mov	ax, [si+1]	; [SI+FEI.dirsec]
 11666 00004D46 AB                      		stosw
 11667 00004D47 8B4403                  		mov	ax, [si+3]	; [SI+FEI.dirsec+2]
 11668 00004D4A AB                      		stosw
 11669 00004D4B 8A04                    		mov	al, [si]	; [SI+FEI.dirpos]
 11670 00004D4D AA                      		stosb
 11671 00004D4E 1F                      		pop	ds
 11672 00004D4F EB1A                    		jmp	short Next_Name
 11673                                  ; ---------------------------------------------------------------------------
 11674                                  
 11675                                  Not_FastOpen:				; ...
 11676 00004D51 1F                      		pop	ds
 11677 00004D52 368B36[E205]            		mov	si, word [ss:CURBUF]
 11678 00004D57 8B4406                  		mov	ax, [si+6]	; [SI+BUFFINFO.buf_sector]
 11679 00004D5A AB                      		stosw
 11680 00004D5B 8B4408                  		mov	ax, [si+8]	; [SI+BUFFINFO.buf_sector+2]
 11681 00004D5E AB                      		stosw
 11682 00004D5F 89D8                    		mov	ax, bx
 11683 00004D61 83C614                  		add	si, 20		; BUFINSIZ
 11684 00004D64 29F0                    		sub	ax, si
 11685 00004D66 B120                    		mov	cl, 32		; dir_entry.size
 11686 00004D68 F6F1                    		div	cl
 11687 00004D6A AA                      		stosb
 11688                                  
 11689                                  Next_Name:				; ...
 11690 00004D6B EB03                    		jmp	short FILE_SFT2
 11691                                  ; ---------------------------------------------------------------------------
 11692                                  
 11693                                  DEV_SFT3:				; ...
 11694 00004D6D 83C707                  		add	di, 7		; SF_ENTRY.sf_name-SF_ENTRY.sf_cluspos
 11695                                  
 11696                                  FILE_SFT2:				; ...
 11697 00004D70 89DE                    		mov	si, bx
 11698 00004D72 B90B00                  		mov	cx, 11
 11699 00004D75 F3A4                    		rep movsb
 11700 00004D77 5E                      		pop	si
 11701 00004D78 16                      		push	ss
 11702 00004D79 1F                      		pop	ds
 11703 00004D7A F8                      		clc
 11704 00004D7B C3                      		retn
 11705                                  
 11706                                  ; =============== S U B	R O U T	I N E =======================================
 11707                                  
 11708                                  FREEENT:
 11709 00004D7C 1E                      		push	ds
 11710 00004D7D C53E[E205]              		lds	di, [CURBUF]
 11711 00004D81 8B0C                    		mov	cx, [si]
 11712 00004D83 8B5508                  		mov	dx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 11713 00004D86 368916[0706]            		mov	word [ss:HIGH_SECTOR], dx
 11714 00004D8B 8B5506                  		mov	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
 11715 00004D8E 1F                      		pop	ds
 11716 00004D8F 83F902                  		cmp	cx, 2
 11717 00004D92 7235                    		jb	short RET1
 11718 00004D94 263B4E0D                		cmp	cx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
 11719 00004D98 772F                    		ja	short RET1
 11720 00004D9A 29FB                    		sub	bx, di
 11721 00004D9C 53                      		push	bx
 11722 00004D9D FF36[0706]              		push	word [HIGH_SECTOR]
 11723 00004DA1 52                      		push	dx
 11724 00004DA2 89CB                    		mov	bx, cx
 11725 00004DA4 E8C202                  		call	RELEASE
 11726 00004DA7 5A                      		pop	dx
 11727 00004DA8 8F06[0706]              		pop	word [HIGH_SECTOR]
 11728 00004DAC 7302                    		jnb	short GET_BUF_BACK
 11729 00004DAE 5B                      		pop	bx
 11730                                  
 11731                                  freeent_retn:				; ...
 11732 00004DAF C3                      		retn
 11733                                  ; ---------------------------------------------------------------------------
 11734                                  
 11735                                  GET_BUF_BACK:				; ...
 11736 00004DB0 C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
 11737 00004DB5 30C0                    		xor	al, al
 11738 00004DB7 E8510D                  		call	GETBUFFR
 11739 00004DBA 5B                      		pop	bx
 11740 00004DBB 72F2                    		jb	short freeent_retn
 11741 00004DBD E86AEA                  		call	SET_BUF_AS_DIR
 11742 00004DC0 031EE205                		add	bx, [5E2h]
 11743 00004DC4 89DE                    		mov	si, bx
 11744 00004DC6 83C61A                  		add	si, 1Ah
 11745                                  
 11746                                  RET1:					; ...
 11747 00004DC9 F8                      		clc
 11748 00004DCA C3                      		retn
 11749                                  
 11750                                  ; =============== S U B	R O U T	I N E =======================================
 11751                                  
 11752                                  CHECK_VIRT_OPEN:
 11753 00004DCB 50                      		push	ax
 11754 00004DCC 9F                      		lahf
 11755 00004DCD 803E[A20A]00            		cmp	byte [VIRTUAL_OPEN], 0
 11756 00004DD2 7410                    		jz	short ALL_CLOSED
 11757 00004DD4 C606[A20A]00            		mov	byte [VIRTUAL_OPEN], 0
 11758 00004DD9 06                      		push	es
 11759 00004DDA 57                      		push	di
 11760 00004DDB C43E[9E05]              		les	di, [THISSFT]
 11761 00004DDF E884F9                  		call	DEV_CLOSE_SFT
 11762 00004DE2 5F                      		pop	di
 11763 00004DE3 07                      		pop	es
 11764                                  
 11765                                  ALL_CLOSED:				; ...
 11766 00004DE4 9E                      		sahf
 11767 00004DE5 58                      		pop	ax
 11768 00004DE6 C3                      		retn
 11769                                  
 11770                                  ; =============== S U B	R O U T	I N E =======================================
 11771                                  
 11772                                  FNDCLUS:
 11773 00004DE7 06                      		push	es
 11774 00004DE8 C43E[9E05]              		les	di, [THISSFT]
 11775 00004DEC 268B5D35                		mov	bx, [es:di+35h]	; [ES:DI+SF_ENTRY.sf_lstclus]
 11776 00004DF0 268B5519                		mov	dx, [es:di+19h]	; [ES:DI+SF_ENTRY.sf_cluspos]
 11777 00004DF4 09DB                    		or	bx, bx
 11778 00004DF6 7424                    		jz	short NOCLUS
 11779 00004DF8 29D1                    		sub	cx, dx
 11780 00004DFA 7308                    		jnb	short FINDIT
 11781 00004DFC 01D1                    		add	cx, dx
 11782 00004DFE 31D2                    		xor	dx, dx
 11783 00004E00 268B5D0B                		mov	bx, [es:di+0Bh]	; [ES:DI+SF_ENTRY.sf_firclus]
 11784                                  
 11785                                  FINDIT:					; ...
 11786 00004E04 07                      		pop	es
 11787 00004E05 E313                    		jcxz	RET9
 11788                                  
 11789                                  SKPCLP:					; ...
 11790 00004E07 E8DB08                  		call	UNPACK
 11791 00004E0A 7214                    		jb	short fndclus_retn
 11792 00004E0C 87DF                    		xchg	bx, di
 11793 00004E0E E8BD08                  		call	IsEOF
 11794 00004E11 87DF                    		xchg	bx, di
 11795 00004E13 7305                    		jnb	short RET9
 11796 00004E15 87DF                    		xchg	bx, di
 11797 00004E17 42                      		inc	dx
 11798 00004E18 E2ED                    		loop	SKPCLP
 11799                                  
 11800                                  RET9:					; ...
 11801 00004E1A F8                      		clc
 11802 00004E1B C3                      		retn
 11803                                  ; ---------------------------------------------------------------------------
 11804                                  
 11805                                  NOCLUS:					; ...
 11806 00004E1C 07                      		pop	es
 11807 00004E1D 41                      		inc	cx
 11808 00004E1E 4A                      		dec	dx
 11809 00004E1F F8                      		clc
 11810                                  
 11811                                  fndclus_retn:				; ...
 11812 00004E20 C3                      		retn
 11813                                  
 11814                                  ; =============== S U B	R O U T	I N E =======================================
 11815                                  
 11816                                  ; Attributes: noreturn
 11817                                  
 11818                                  BUFSEC:		; ...
 11819 00004E21 8B16[BC05]              		mov	dx, [CLUSNUM]
 11820 00004E25 8A1E[7305]              		mov	bl, [SECCLUSPOS]
 11821 00004E29 C606[4B03]38            		mov	byte [ALLOWED], 38h ; Allowed_FAIL+Allowed_RETRY+Allowed_IGNORE
 11822 00004E2E E85A01                  		call	FIGREC
 11823 00004E31 E8D70C                  		call	GETBUFFR
 11824 00004E34 72EA                    		jb	short fndclus_retn
 11825 00004E36 C606[7405]01            		mov	byte [TRANS], 1
 11826 00004E3B 8B36[B805]              		mov	si, [NEXTADD]
 11827 00004E3F 89F7                    		mov	di, si
 11828 00004E41 8B0E[D205]              		mov	cx, [BYTCNT1]
 11829 00004E45 01CF                    		add	di, cx
 11830 00004E47 893E[B805]              		mov	[NEXTADD], di
 11831 00004E4B C43E[E205]              		les	di, [CURBUF]
 11832 00004E4F 26804D0508              		or	byte [es:di+5], 8 ; [ES:DI+BUFFINFO.buf_flags],
 11833                                  					; buf_isDATA
 11834 00004E54 8D7D14                  		lea	di, [di+20]	; LEA DI,[DI+BUFINSIZ]
 11835 00004E57 033E[CC05]              		add	di, [BYTSECPOS]
 11836 00004E5B F8                      		clc
 11837 00004E5C C3                      		retn
 11838                                  
 11839                                  ; =============== S U B	R O U T	I N E =======================================
 11840                                  
 11841                                  ; Attributes: noreturn
 11842                                  
 11843                                  BUFRD:		; ...
 11844 00004E5D 06                      		push	es
 11845 00004E5E 31C0                    		xor	ax, ax
 11846 00004E60 E8BEFF                  		call	BUFSEC
 11847                                  
 11848                                  ; ---------------------------------------------------------------------------
 11849 00004E63 7303                    		jnb	short BUF_OK
 11850                                  ; START	OF FUNCTION CHUNK FOR BUFWRT
 11851                                  
 11852                                  BUF_IO_FAIL:				; ...
 11853 00004E65 07                      		pop	es
 11854 00004E66 EB2D                    		jmp	short RBUFPLACED
 11855                                  ; END OF FUNCTION CHUNK	FOR BUFWRT
 11856                                  ; ---------------------------------------------------------------------------
 11857                                  
 11858                                  BUF_OK:					; ...
 11859 00004E68 8CC3                    		mov	bx, es
 11860 00004E6A 8E06[2E03]              		mov	es, word [DMAADD+2]
 11861 00004E6E 8EDB                    		mov	ds, bx
 11862 00004E70 87FE                    		xchg	di, si
 11863 00004E72 D1E9                    		shr	cx, 1
 11864 00004E74 F3A5                    		rep movsw
 11865 00004E76 83D100                  		adc	cx, 0
 11866 00004E79 F3A4                    		rep movsb
 11867                                  
 11868                                  EVENRD:
 11869 00004E7B 07                      		pop	es
 11870 00004E7C 36C53E[E205]            		lds	di, [ss:CURBUF]
 11871 00004E81 8D5D14                  		lea	bx, [di+20]	; LEA BX,[DI+BUFINSIZ]
 11872 00004E84 29DE                    		sub	si, bx
 11873 00004E86 E8360C                  		call	PLACEBUF
 11874 00004E89 263B7602                		cmp	si, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 11875 00004E8D 7205                    		jb	short RBUFPLACEDC
 11876 00004E8F 36893E[6D00]            		mov	word [ss:BufferQueue], di
 11877                                  
 11878                                  RBUFPLACEDC:				; ...
 11879 00004E94 F8                      		clc
 11880                                  ; START	OF FUNCTION CHUNK FOR BUFWRT
 11881                                  
 11882                                  RBUFPLACED:				; ...
 11883 00004E95 16                      		push	ss
 11884 00004E96 1F                      		pop	ds
 11885 00004E97 C3                      		retn
 11886                                  ; END OF FUNCTION CHUNK	FOR BUFWRT
 11887                                  
 11888                                  ; =============== S U B	R O U T	I N E =======================================
 11889                                  
 11890                                  ; Attributes: noreturn
 11891                                  
 11892                                  BUFWRT:		; ...
 11893                                  
 11894                                  ; FUNCTION CHUNK AT 8C35 SIZE 00000003 BYTES
 11895                                  ; FUNCTION CHUNK AT 8C65 SIZE 00000003 BYTES
 11896                                  
 11897 00004E98 A1[C405]                		mov	ax, word [SECPOS]
 11898 00004E9B 83C001                  		add	ax, 1
 11899 00004E9E A3[C405]                		mov	word [SECPOS], ax
 11900 00004EA1 8316[C605]00            		adc	word [SECPOS+2],	0
 11901 00004EA6 A1[C605]                		mov	ax, word [SECPOS+2]
 11902 00004EA9 3B06[CA05]              		cmp	ax, word [VALSEC+2]
 11903 00004EAD B001                    		mov	al, 1
 11904 00004EAF 770F                    		ja	short NOREAD
 11905 00004EB1 720B                    		jb	short _doread
 11906 00004EB3 A1[C405]                		mov	ax, word [SECPOS]
 11907 00004EB6 3B06[C805]              		cmp	ax, word [VALSEC]
 11908 00004EBA B001                    		mov	al, 1
 11909 00004EBC 7702                    		ja	short NOREAD
 11910                                  
 11911                                  _doread:				; ...
 11912 00004EBE 30C0                    		xor	al, al
 11913                                  
 11914                                  NOREAD:					; ...
 11915 00004EC0 06                      		push	es
 11916 00004EC1 E85DFF                  		call	BUFSEC
 11917                                  ; ---------------------------------------------------------------------------
 11918 00004EC4 729F                    		jb	short BUF_IO_FAIL
 11919 00004EC6 8E1E[2E03]              		mov	ds, word [DMAADD+2]
 11920 00004ECA D1E9                    		shr	cx, 1
 11921 00004ECC F3A5                    		rep movsw
 11922 00004ECE 83D100                  		adc	cx, 0
 11923 00004ED1 F3A4                    		rep movsb
 11924                                  
 11925                                  EVENWRT:
 11926 00004ED3 07                      		pop	es
 11927 00004ED4 36C51E[E205]            		lds	bx, [ss:CURBUF]
 11928 00004ED9 F6470540                		test	byte [bx+5], 40h
 11929 00004EDD 7507                    		jnz	short yesdirty10
 11930 00004EDF E8340E                  		call	INC_DIRTY_COUNT
 11931 00004EE2 804F0540                		or	byte [bx+5], 40h ; [BX+BUFFINFO.buf_flags],
 11932                                  					; buf_dirty
 11933                                  
 11934                                  yesdirty10:				; ...
 11935 00004EE6 8D7714                  		lea	si, [bx+20]	; LEA BX,[BX+BUFINSIZ]
 11936 00004EE9 29F7                    		sub	di, si
 11937 00004EEB 263B7E02                		cmp	di, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 11938 00004EEF 7205                    		jb	short WBUFPLACED
 11939 00004EF1 36891E[6D00]            		mov	word [ss:BufferQueue], bx
 11940                                  
 11941                                  WBUFPLACED:				; ...
 11942 00004EF6 F8                      		clc
 11943 00004EF7 16                      		push	ss
 11944 00004EF8 1F                      		pop	ds
 11945 00004EF9 C3                      		retn
 11946                                  
 11947                                  ; =============== S U B	R O U T	I N E =======================================
 11948                                  
 11949                                  NEXTSEC:
 11950 00004EFA F606[7405]FF            		test	byte [TRANS], 0FFh ; -1
 11951 00004EFF 7426                    		jz	short CLRET
 11952 00004F01 A0[7305]                		mov	al, [SECCLUSPOS]
 11953 00004F04 FEC0                    		inc	al
 11954 00004F06 263A4604                		cmp	al, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
 11955 00004F0A 7618                    		jbe	short SAVPOS
 11956 00004F0C 8B1E[BC05]              		mov	bx, [CLUSNUM]
 11957 00004F10 E8BB07                  		call	IsEOF
 11958 00004F13 7314                    		jnb	short NONEXT
 11959 00004F15 E8CD07                  		call	UNPACK
 11960 00004F18 720F                    		jb	short NONEXT
 11961 00004F1A 893E[BC05]              		mov	[CLUSNUM], di
 11962 00004F1E FF06[BA05]              		inc	word [LASTPOS]
 11963 00004F22 B000                    		mov	al, 0
 11964                                  
 11965                                  SAVPOS:					; ...
 11966 00004F24 A2[7305]                		mov	[SECCLUSPOS], al
 11967                                  
 11968                                  CLRET:					; ...
 11969 00004F27 F8                      		clc
 11970 00004F28 C3                      		retn
 11971                                  ; ---------------------------------------------------------------------------
 11972                                  
 11973                                  NONEXT:					; ...
 11974 00004F29 F9                      		stc
 11975 00004F2A C3                      		retn
 11976                                  
 11977                                  ; =============== S U B	R O U T	I N E =======================================
 11978                                  
 11979                                  OPTIMIZE:		; ...
 11980 00004F2B 52                      		push	dx
 11981 00004F2C 53                      		push	bx
 11982 00004F2D 268A4604                		mov	al, [es:bp+4]	; [ES:BP+DPB.CLUSTER_MASK]
 11983 00004F31 FEC0                    		inc	al
 11984 00004F33 88C4                    		mov	ah, al
 11985 00004F35 28D0                    		sub	al, dl
 11986 00004F37 89CA                    		mov	dx, cx
 11987 00004F39 B90000                  		mov	cx, 0
 11988                                  
 11989                                  do_norm3:				; ...
 11990 00004F3C E8A607                  		call	UNPACK		; OPTCLUS
 11991 00004F3F 7237                    		jb	short OP_ERR
 11992 00004F41 00C1                    		add	cl, al
 11993 00004F43 80D500                  		adc	ch, 0
 11994 00004F46 39D1                    		cmp	cx, dx
 11995 00004F48 7333                    		jnb	short BLKDON
 11996 00004F4A 88E0                    		mov	al, ah
 11997 00004F4C 43                      		inc	bx
 11998 00004F4D 39DF                    		cmp	di, bx
 11999 00004F4F 74EB                    		jz	short do_norm3	; OPTCLUS
 12000 00004F51 4B                      		dec	bx
 12001                                  
 12002                                  FINCLUS:				; ...
 12003 00004F52 891E[BC05]              		mov	[CLUSNUM], bx
 12004 00004F56 29CA                    		sub	dx, cx
 12005 00004F58 52                      		push	dx
 12006 00004F59 89C8                    		mov	ax, cx
 12007 00004F5B 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
 12008 00004F5F 8B36[B805]              		mov	si, [NEXTADD]
 12009 00004F63 01F0                    		add	ax, si
 12010 00004F65 A3[B805]                		mov	[NEXTADD], ax
 12011 00004F68 58                      		pop	ax
 12012 00004F69 5A                      		pop	dx
 12013 00004F6A 29D3                    		sub	bx, dx
 12014 00004F6C 011E[BA05]              		add	[LASTPOS], bx
 12015 00004F70 5B                      		pop	bx
 12016 00004F71 E81700                  		call	FIGREC
 12017 00004F74 89F3                    		mov	bx, si
 12018 00004F76 F8                      		clc
 12019 00004F77 C3                      		retn
 12020                                  ; ---------------------------------------------------------------------------
 12021                                  
 12022                                  OP_ERR:					; ...
 12023 00004F78 83C404                  		add	sp, 4
 12024 00004F7B F9                      		stc
 12025 00004F7C C3                      		retn
 12026                                  ; ---------------------------------------------------------------------------
 12027                                  
 12028                                  BLKDON:					; ...
 12029 00004F7D 29D1                    		sub	cx, dx
 12030 00004F7F 28CC                    		sub	ah, cl
 12031 00004F81 FECC                    		dec	ah
 12032 00004F83 8826[7305]              		mov	[SECCLUSPOS], ah
 12033 00004F87 89D1                    		mov	cx, dx
 12034 00004F89 EBC7                    		jmp	short FINCLUS
 12035                                  
 12036                                  ; =============== S U B	R O U T	I N E =======================================
 12037                                  
 12038                                  FIGREC:		; ...
 12039 00004F8B 51                      		push	cx
 12040 00004F8C 268A4E05                		mov	cl, [es:bp+5]	; [ES:BP+DPB.CLUSTER_SHIFT]
 12041 00004F90 4A                      		dec	dx
 12042 00004F91 4A                      		dec	dx
 12043 00004F92 36C706[0706]0000        		mov	word [ss:HIGH_SECTOR], 0
 12044 00004F99 08C9                    		or	cl, cl
 12045 00004F9B 740C                    		jz	short noshift
 12046 00004F9D 30ED                    		xor	ch, ch
 12047                                  
 12048                                  rotleft:				; ...
 12049 00004F9F F8                      		clc
 12050 00004FA0 D1D2                    		rcl	dx, 1
 12051 00004FA2 36D116[0706]            		rcl	word [ss:HIGH_SECTOR], 1
 12052 00004FA7 E2F6                    		loop	rotleft
 12053                                  
 12054                                  noshift:				; ...
 12055 00004FA9 08DA                    		or	dl, bl
 12056 00004FAB 2603560B                		add	dx, [es:bp+0Bh]	; [ES:BP+DPB.FIRST_SECTOR]
 12057 00004FAF 368316[0706]00          		adc	word [ss:HIGH_SECTOR], 0
 12058 00004FB5 59                      		pop	cx
 12059                                  
 12060                                  figrec_retn:				; ...
 12061 00004FB6 C3                      		retn
 12062                                  
 12063                                  ; =============== S U B	R O U T	I N E =======================================
 12064                                  
 12065                                  ALLOCATE:		; ...
 12066 00004FB7 53                      		push	bx
 12067 00004FB8 31DB                    		xor	bx, bx
 12068 00004FBA E82807                  		call	UNPACK
 12069 00004FBD 893E[9605]              		mov	[FATBYT], di
 12070 00004FC1 5B                      		pop	bx
 12071 00004FC2 72F2                    		jb	short figrec_retn
 12072 00004FC4 51                      		push	cx
 12073 00004FC5 53                      		push	bx
 12074 00004FC6 89DA                    		mov	dx, bx
 12075 00004FC8 268B5E1D                		mov	bx, [es:bp+1Dh]	; [ES:BP+DPB.NEXT_FREE]
 12076 00004FCC 83FB02                  		cmp	bx, 2
 12077 00004FCF 7709                    		ja	short FINDFRE
 12078                                  
 12079                                  ads1:					; ...
 12080 00004FD1 26C7461D0200            		mov	word [es:bp+1Dh], 2	; [ES:BP+DPB.NEXT_FREE]
 12081 00004FD7 BB0100                  		mov	bx, 1
 12082                                  
 12083                                  FINDFRE:				; ...
 12084 00004FDA 43                      		inc	bx
 12085 00004FDB 263B5E0D                		cmp	bx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
 12086 00004FDF 775D                    		ja	short ads7
 12087 00004FE1 E80107                  		call	UNPACK
 12088 00004FE4 722F                    		jb	short ads4
 12089 00004FE6 75F2                    		jnz	short FINDFRE
 12090 00004FE8 26895E1D                		mov	[es:bp+1Dh], bx	; [ES:BP+DPB.NEXT_FREE]
 12091 00004FEC 92                      		xchg	ax, dx
 12092 00004FED BA0100                  		mov	dx, 1
 12093 00004FF0 E84607                  		call	PACK
 12094 00004FF3 7220                    		jb	short ads4
 12095 00004FF5 26837E1FFF              		cmp	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 12096 00004FFA 7404                    		jz	short NO_ALLOC
 12097 00004FFC 26FF4E1F                		dec	word [es:bp+1Fh] ; [ES:BP+DPB.FREE_CNT]
 12098                                  
 12099                                  NO_ALLOC:				; ...
 12100 00005000 92                      		xchg	ax, dx
 12101 00005001 87DA                    		xchg	bx, dx
 12102 00005003 89D0                    		mov	ax, dx
 12103 00005005 E83107                  		call	PACK
 12104 00005008 720B                    		jb	short ads4
 12105 0000500A 93                      		xchg	ax, bx
 12106 0000500B 89DA                    		mov	dx, bx
 12107 0000500D E2CB                    		loop	FINDFRE
 12108 0000500F BAFFFF                  		mov	dx, 0FFFFh
 12109 00005012 E82407                  		call	PACK
 12110                                  
 12111                                  ads4:					; ...
 12112 00005015 5B                      		pop	bx
 12113 00005016 59                      		pop	cx
 12114 00005017 729D                    		jb	short figrec_retn
 12115 00005019 E8C906                  		call	UNPACK
 12116 0000501C 7298                    		jb	short figrec_retn
 12117 0000501E E83800                  		call	RESTFATBYT
 12118 00005021 7293                    		jb	short figrec_retn
 12119 00005023 87DF                    		xchg	bx, di
 12120 00005025 09FF                    		or	di, di
 12121 00005027 758D                    		jnz	short figrec_retn
 12122 00005029 52                      		push	dx
 12123 0000502A 268A5600                		mov	dl, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 12124 0000502E 06                      		push	es
 12125 0000502F C43E[9E05]              		les	di, [THISSFT]
 12126 00005033 26895D0B                		mov	[es:di+0Bh], bx	; [ES:DI+SF_ENTRY.sf_firclus]
 12127 00005037 26895D35                		mov	[es:di+35h], bx	; [ES:DI+SF_ENTRY.sf_lstclus]
 12128 0000503B 07                      		pop	es
 12129 0000503C 5A                      		pop	dx
 12130 0000503D C3                      		retn
 12131                                  ; ---------------------------------------------------------------------------
 12132                                  
 12133                                  ads7:					; ...
 12134 0000503E 26837E1D02              		cmp	word [es:bp+1Dh], 2	; [ES:BP+DPB.NEXT_FREE]
 12135 00005043 758C                    		jnz	short ads1
 12136 00005045 5B                      		pop	bx
 12137 00005046 BAFFFF                  		mov	dx, 0FFFFh
 12138 00005049 E81F00                  		call	RELBLKS
 12139 0000504C 58                      		pop	ax
 12140 0000504D 29C8                    		sub	ax, cx
 12141 0000504F E80700                  		call	RESTFATBYT
 12142 00005052 C606[0B06]01            		mov	byte [DISK_FULL], 1
 12143 00005057 F9                      		stc
 12144 00005058 C3                      		retn
 12145                                  
 12146                                  ; =============== S U B	R O U T	I N E =======================================
 12147                                  
 12148                                  RESTFATBYT:		; ...
 12149 00005059 53                      		push	bx
 12150 0000505A 52                      		push	dx
 12151 0000505B 57                      		push	di
 12152 0000505C 31DB                    		xor	bx, bx
 12153 0000505E 8B16[9605]              		mov	dx, [FATBYT]
 12154 00005062 E8D406                  		call	PACK
 12155 00005065 5F                      		pop	di
 12156 00005066 5A                      		pop	dx
 12157 00005067 5B                      		pop	bx
 12158                                  
 12159                                  RELEASE_flush:				; ...
 12160 00005068 C3                      		retn
 12161                                  
 12162                                  ; =============== S U B	R O U T	I N E =======================================
 12163                                  
 12164                                  RELEASE:
 12165 00005069 31D2                    		xor	dx, dx
 12166                                  
 12167                                  RELBLKS:				; ...
 12168 0000506B E87706                  		call	UNPACK
 12169 0000506E 72F8                    		jb	short RELEASE_flush
 12170 00005070 74F6                    		jz	short RELEASE_flush
 12171 00005072 89F8                    		mov	ax, di
 12172 00005074 52                      		push	dx
 12173 00005075 E8C106                  		call	PACK
 12174 00005078 5A                      		pop	dx
 12175 00005079 72ED                    		jb	short RELEASE_flush
 12176 0000507B 09D2                    		or	dx, dx
 12177 0000507D 750B                    		jnz	short NO_DEALLOC
 12178 0000507F 26837E1FFF              		cmp	word [es:bp+1Fh], 0FFFFh
 12179 00005084 7404                    		jz	short NO_DEALLOC
 12180 00005086 26FF461F                		inc	word [es:bp+1Fh]
 12181                                  
 12182                                  NO_DEALLOC:				; ...
 12183 0000508A 89C3                    		mov	bx, ax
 12184 0000508C 48                      		dec	ax
 12185 0000508D 74D9                    		jz	short RELEASE_flush
 12186 0000508F E83C06                  		call	IsEOF
 12187 00005092 72D5                    		jb	short RELEASE
 12188                                  
 12189                                  RET12:					; ...
 12190 00005094 C3                      		retn
 12191                                  
 12192                                  ; =============== S U B	R O U T	I N E =======================================
 12193                                  
 12194                                  GETEOF:		; ...
 12195 00005095 E84D06                  		call	UNPACK
 12196 00005098 72FA                    		jb	short RET12
 12197 0000509A 53                      		push	bx
 12198 0000509B 89FB                    		mov	bx, di
 12199 0000509D E82E06                  		call	IsEOF
 12200 000050A0 5B                      		pop	bx
 12201 000050A1 73F1                    		jnb	short RET12
 12202 000050A3 89FB                    		mov	bx, di
 12203 000050A5 EBEE                    		jmp	short GETEOF
 12204                                  
 12205                                  ; =============== S U B	R O U T	I N E =======================================
 12206                                  
 12207                                  MAKEFCB:
 12208 000050A7 36C606[4E03]00          		mov	byte [ss:SpaceFlag], 0
 12209 000050AD 30D2                    		xor	dl, dl
 12210 000050AF A802                    		test	al, 2		; DRVBIT
 12211 000050B1 7504                    		jnz	short DEFDRV
 12212 000050B3 26C60500                		mov	byte [es:di], 0
 12213                                  
 12214                                  DEFDRV:					; ...
 12215 000050B7 47                      		inc	di
 12216 000050B8 B90800                  		mov	cx, 8
 12217 000050BB A804                    		test	al, 4		; NAMBIT
 12218 000050BD 93                      		xchg	ax, bx
 12219 000050BE B020                    		mov	al, 20h	; ' '
 12220 000050C0 7404                    		jz	short FILLB
 12221 000050C2 01CF                    		add	di, cx
 12222 000050C4 31C9                    		xor	cx, cx
 12223                                  
 12224                                  FILLB:					; ...
 12225 000050C6 F3AA                    		rep stosb
 12226 000050C8 B103                    		mov	cl, 3
 12227 000050CA F6C308                  		test	bl, 8		; EXTBIT
 12228 000050CD 7404                    		jz	short FILLB2
 12229 000050CF 01CF                    		add	di, cx
 12230 000050D1 31C9                    		xor	cx, cx
 12231                                  
 12232                                  FILLB2:					; ...
 12233 000050D3 F3AA                    		rep stosb
 12234 000050D5 91                      		xchg	ax, cx
 12235 000050D6 AB                      		stosw
 12236 000050D7 AB                      		stosw
 12237 000050D8 83EF10                  		sub	di, 16
 12238 000050DB F6C301                  		test	bl, 1		; SCANSEPARATOR
 12239 000050DE 7409                    		jz	short SKPSPC
 12240 000050E0 E88E00                  		call	SCANB
 12241 000050E3 E82801                  		call	DELIM
 12242 000050E6 7504                    		jnz	short NOSCAN
 12243 000050E8 46                      		inc	si
 12244                                  
 12245                                  SKPSPC:					; ...
 12246 000050E9 E88500                  		call	SCANB
 12247                                  
 12248                                  NOSCAN:					; ...
 12249 000050EC E8F600                  		call	GETLET
 12250 000050EF 761E                    		jbe	short NODRV
 12251 000050F1 803C3A                  		cmp	byte [si], ':'
 12252 000050F4 7519                    		jnz	short NODRV
 12253 000050F6 46                      		inc	si
 12254 000050F7 2C40                    		sub	al, '@'
 12255 000050F9 760F                    		jbe	short BADDRV
 12256 000050FB 50                      		push	ax
 12257 000050FC E8701B                  		call	GetVisDrv
 12258 000050FF 58                      		pop	ax
 12259 00005100 730A                    		jnb	short HAVDRV
 12260 00005102 36803E[1006]1A          		cmp	byte [ss:DrvErr], 1Ah ; error_not_DOS_disk
 12261 00005108 7402                    		jz	short HAVDRV
 12262                                  
 12263                                  BADDRV:					; ...
 12264 0000510A B2FF                    		mov	dl, 0FFh	; -1
 12265                                  
 12266                                  HAVDRV:					; ...
 12267 0000510C AA                      		stosb
 12268 0000510D 46                      		inc	si
 12269 0000510E 4F                      		dec	di
 12270                                  
 12271                                  NODRV:					; ...
 12272 0000510F 4E                      		dec	si
 12273 00005110 47                      		inc	di
 12274                                  
 12275                                  NORMSCAN:				; ...
 12276 00005111 B90800                  		mov	cx, 8
 12277 00005114 E82800                  		call	GETWORD
 12278 00005117 803C2E                  		cmp	byte [si], '.'
 12279 0000511A 7515                    		jnz	short NODOT
 12280 0000511C 46                      		inc	si
 12281 0000511D 36F606[1206]01          		test	byte [ss:DOS34_FLAG+1], 1 ;	(DBCS_VOLID2>>8)
 12282 00005123 7406                    		jz	short VOLOK
 12283 00005125 A4                      		movsb
 12284 00005126 B90200                  		mov	cx, 2
 12285 00005129 EB03                    		jmp	short contvol
 12286                                  ; ---------------------------------------------------------------------------
 12287                                  
 12288                                  VOLOK:					; ...
 12289 0000512B B90300                  		mov	cx, 3
 12290                                  
 12291                                  contvol:				; ...
 12292 0000512E E81400                  		call	MUSTGETWORD
 12293                                  
 12294                                  NODOT:					; ...
 12295 00005131 88D0                    		mov	al, dl
 12296 00005133 368126[1106]FFFE        		and	word [ss:DOS34_FLAG], 0FEFFh ; ~DBCS_VOLID2
 12297 0000513A C3                      		retn
 12298                                  
 12299                                  ; ---------------------------------------------------------------------------
 12300                                  ; START	OF FUNCTION CHUNK FOR GETWORD
 12301                                  
 12302                                  NONAM:					; ...
 12303 0000513B 01CF                    		add	di, cx
 12304 0000513D 4E                      		dec	si
 12305 0000513E C3                      		retn
 12306                                  ; END OF FUNCTION CHUNK	FOR GETWORD
 12307                                  
 12308                                  ; =============== S U B	R O U T	I N E =======================================
 12309                                  
 12310                                  GETWORD:
 12311                                  
 12312                                  ; FUNCTION CHUNK AT 8F0B SIZE 00000004 BYTES
 12313                                  
 12314 0000513F E8A300                  		call	GETLET
 12315 00005142 76F7                    		jbe	short NONAM
 12316 00005144 4E                      		dec	si
 12317                                  
 12318                                  MUSTGETWORD:				; ...
 12319 00005145 E89D00                  		call	GETLET
 12320 00005148 750C                    		jnz	short MustCheckCX
 12321 0000514A 36F606[4E03]FF          		test	byte [ss:SpaceFlag], 0FFh
 12322 00005150 7419                    		jz	short FILLNAM
 12323 00005152 3C20                    		cmp	al, 20h	; ' '
 12324 00005154 7515                    		jnz	short FILLNAM
 12325                                  
 12326                                  MustCheckCX:				; ...
 12327 00005156 E3ED                    		jcxz	MUSTGETWORD
 12328 00005158 49                      		dec	cx
 12329 00005159 3C2A                    		cmp	al, 2Ah	; '*'
 12330 0000515B 7504                    		jnz	short NOSTAR
 12331 0000515D B03F                    		mov	al, 3Fh	; '?'
 12332 0000515F F3AA                    		rep stosb
 12333                                  
 12334                                  NOSTAR:					; ...
 12335 00005161 AA                      		stosb
 12336 00005162 3C3F                    		cmp	al, 3Fh	; '?'
 12337 00005164 75DF                    		jnz	short MUSTGETWORD
 12338 00005166 80CA01                  		or	dl, 1
 12339 00005169 EBDA                    		jmp	short MUSTGETWORD
 12340                                  ; ---------------------------------------------------------------------------
 12341                                  
 12342                                  FILLNAM:				; ...
 12343 0000516B B020                    		mov	al, 20h	; ' '
 12344 0000516D F3AA                    		rep stosb
 12345 0000516F 4E                      		dec	si
 12346 00005170 C3                      		retn
 12347                                  
 12348                                  ; =============== S U B	R O U T	I N E =======================================
 12349                                  
 12350                                  SCANB:		; ...
 12351 00005171 AC                      		lodsb
 12352 00005172 E8A100                  		call	SPCHK
 12353 00005175 74FA                    		jz	short SCANB
 12354 00005177 4E                      		dec	si
 12355                                  
 12356                                  scanb_retn:				; ...
 12357 00005178 C3                      		retn
 12358                                  
 12359                                  ; =============== S U B	R O U T	I N E =======================================
 12360                                  
 12361                                  NameTrans:		; ...
 12362 00005179 36C606[4E03]01          		mov	byte [ss:SpaceFlag], 1
 12363 0000517F 16                      		push	ss
 12364 00005180 07                      		pop	es
 12365 00005181 BF[4B05]                		mov	di, NAME1
 12366 00005184 57                      		push	di
 12367 00005185 B82020                  		mov	ax, 2020h	; '  '
 12368 00005188 B90500                  		mov	cx, 5
 12369 0000518B AA                      		stosb
 12370 0000518C F3AB                    		rep stosw
 12371 0000518E 30C0                    		xor	al, al
 12372 00005190 88C2                    		mov	dl, al
 12373 00005192 AA                      		stosb
 12374 00005193 5F                      		pop	di
 12375 00005194 E87AFF                  		call	NORMSCAN
 12376 00005197 36803E[4B05]E5          		cmp	byte [ss:NAME1], 0E5h
 12377 0000519D 75D9                    		jnz	short scanb_retn
 12378 0000519F 36C606[4B05]05          		mov	byte [ss:NAME1], 5
 12379 000051A5 C3                      		retn
 12380                                  
 12381                                  ; ---------------------------------------------------------------------------
 12382 000051A6 6666666606666666        CharType	db 66h,66h,66h,66h, 6,66h,66h,66h ; ...
 12383 000051AE 6666666666666666        		db 66h,66h,66h,66h,66h,66h,66h,66h
 12384 000051B6 F8F6FFFFFF4FF46E        		db 0F8h,0F6h,0FFh,0FFh,0FFh,4Fh,0F4h,6Eh
 12385 000051BE FFFFFFFFFF4444F4        		db 0FFh,0FFh,0FFh,0FFh,0FFh,44h,44h,0F4h
 12386 000051C6 FFFFFFFFFFFFFFFF        		db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
 12387 000051CE FFFFFFFFFF6F66FF        		db 0FFh,0FFh,0FFh,0FFh,0FFh,6Fh,66h,0FFh
 12388 000051D6 FFFFFFFFFFFFFFFF        		db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
 12389 000051DE FFFFFFFFFFFFF4          		db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0F4h
 12390                                  ; ---------------------------------------------------------------------------
 12391                                  
 12392                                  GETLET:					; ...
 12393 000051E5 AC                      		lodsb
 12394                                  
 12395                                  ; =============== S U B	R O U T	I N E =======================================
 12396                                  
 12397                                  UCase:		; ...
 12398 000051E6 53                      		push	bx
 12399 000051E7 BB[310B]                		mov	bx, FILE_UCASE_TAB_2 ; FILE_UCASE_TAB+2
 12400                                  
 12401                                  gl_0:					; ...
 12402 000051EA 3C61                    		cmp	al, 'a'         ; 61h
 12403 000051EC 7214                    		jb	short gl_2
 12404 000051EE 3C7A                    		cmp	al, 'z'         ; 7Ah
 12405 000051F0 7702                    		ja	short gl_1
 12406 000051F2 2C20                    		sub	al, 20h
 12407                                  
 12408                                  gl_1:					; ...
 12409 000051F4 3C80                    		cmp	al, 80h
 12410 000051F6 720A                    		jb	short gl_2
 12411 000051F8 2C80                    		sub	al, 80h
 12412 000051FA 1E                      		push	ds
 12413 000051FB 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 12414 00005200 D7                      		xlat
 12415 00005201 1F                      		pop	ds
 12416                                  
 12417                                  gl_2:					; ...
 12418 00005202 50                      		push	ax
 12419 00005203 E81800                  		call	GetCharType
 12420 00005206 A801                    		test	al, 1		; FCHK
 12421 00005208 58                      		pop	ax
 12422 00005209 5B                      		pop	bx
 12423 0000520A C3                      		retn
 12424                                  
 12425                                  ; =============== S U B	R O U T	I N E =======================================
 12426                                  
 12427                                   GETLET3:
 12428 0000520B 53                      		push	bx
 12429 0000520C EBDC                    		jmp	short gl_0
 12430                                  
 12431                                  ; =============== S U B	R O U T	I N E =======================================
 12432                                  
 12433                                   DELIM:		; ...
 12434 0000520E 50                      		push	ax
 12435 0000520F E80C00                  		call	GetCharType
 12436 00005212 A802                    		test	al, 2		; FDELIM
 12437 00005214 58                      		pop	ax
 12438 00005215 C3                      		retn
 12439                                  
 12440                                  ; =============== S U B	R O U T	I N E =======================================
 12441                                  
 12442                                   SPCHK:		; ...
 12443 00005216 50                      		push	ax
 12444 00005217 E80400                  		call	GetCharType
 12445 0000521A A804                    		test	al, 4		; FSPCHK
 12446 0000521C 58                      		pop	ax
 12447 0000521D C3                      		retn
 12448                                  
 12449                                  ; =============== S U B	R O U T	I N E =======================================
 12450                                  
 12451                                  GetCharType:	; ...
 12452 0000521E 3C7E                    		cmp	al, 7Eh	; '~'   ; CharType_last
 12453 00005220 7316                    		jnb	short gct_90
 12454 00005222 53                      		push	bx
 12455 00005223 BB[A651]                		mov	bx, CharType
 12456 00005226 D0E8                    		shr	al, 1
 12457                                  		;xlat	byte [cs:bx] ; cs xlat
 12458 00005228 2E                      		cs
 12459 00005229 D7                      		xlat
 12460 0000522A 5B                      		pop	bx
 12461 0000522B 7308                    		jnb	short gct_80
 12462 0000522D D0E8                    		shr	al, 1
 12463 0000522F D0E8                    		shr	al, 1
 12464 00005231 D0E8                    		shr	al, 1
 12465 00005233 D0E8                    		shr	al, 1
 12466                                  
 12467                                  gct_80:					; ...
 12468 00005235 240F                    		and	al, 0Fh
 12469 00005237 C3                      		retn
 12470                                  ; ---------------------------------------------------------------------------
 12471                                  
 12472                                  gct_90:					; ...
 12473 00005238 B00F                    		mov	al, 0Fh
 12474 0000523A C3                      		retn
 12475                                  
 12476                                  ; =============== S U B	R O U T	I N E =======================================
 12477                                  
 12478                                  PATHCHRCMP:		; ...
 12479 0000523B 3C2F                    		cmp	al, 2Fh	; '/'
 12480 0000523D 7606                    		jbe	short PathRet
 12481 0000523F 3C5C                    		cmp	al, 5Ch	; '\'
 12482 00005241 C3                      		retn
 12483                                  ; ---------------------------------------------------------------------------
 12484                                  
 12485                                  GotFor:					; ...
 12486 00005242 B05C                    		mov	al, 5Ch	; '\'
 12487 00005244 C3                      		retn
 12488                                  ; ---------------------------------------------------------------------------
 12489                                  
 12490                                  PathRet:				; ...
 12491 00005245 74FB                    		jz	short GotFor
 12492 00005247 C3                      		retn
 12493                                  
 12494                                  ; ---------------------------------------------------------------------------
 12495 00005248 [E710]                  LowInt23Addr	dw LowInt23	; ...
 12496 0000524A 0000                    LowInt23Seg	dw 0			; ...
 12497 0000524C [FB10]                  LowInt24Addr	dw LowInt24	; ...
 12498 0000524E 0000                    LowInt24Seg	dw 0			; ...
 12499 00005250 [0F11]                  LowInt28Addr	dw LowInt28	; ...
 12500 00005252 0000                    LowInt28Seg	dw 0			; ...
 12501                                  
 12502                                  ; =============== S U B	R O U T	I N E =======================================
 12503                                  
 12504                                  DSKSTATCHK:		; ...
 12505 00005254 36803E[2103]01          		cmp	byte [ss:INDOS], 1
 12506 0000525A 7401                    		jz	short _RET37
 12507 0000525C C3                      		retn
 12508                                  ; ---------------------------------------------------------------------------
 12509                                  
 12510                                  _RET37:					; ...
 12511 0000525D 51                      		push	cx
 12512 0000525E 06                      		push	es
 12513 0000525F 53                      		push	bx
 12514 00005260 1E                      		push	ds
 12515 00005261 56                      		push	si
 12516 00005262 8CD3                    		mov	bx, ss
 12517 00005264 8EC3                    		mov	es, bx
 12518 00005266 8EDB                    		mov	ds, bx
 12519 00005268 36C606[9403]05          		mov	byte [ss:DSKSTCOM], 5 ; DEVRDND
 12520 0000526E 36C606[9203]0E          		mov	byte [ss:DSKSTCALL], 14 ; DRDNDHL
 12521 00005274 36C706[9503]0000        		mov	word [ss:DSKSTST], 0
 12522 0000527B BB[9203]                		mov	bx, DSKSTCALL
 12523 0000527E 36C536[3200]            		lds	si, [ss:BCON]
 12524 00005283 E85CF5                  		call	DEVIOCALL2
 12525 00005286 36F606[9603]02          		test	byte [ss:DSKSTST+1], 2 ; (STBUI>>8)
 12526 0000528C 7408                    		jz	short _GotCh
 12527 0000528E 30C0                    		xor	al, al
 12528                                  
 12529                                  RET36:					; ...
 12530 00005290 5E                      		pop	si
 12531 00005291 1F                      		pop	ds
 12532 00005292 5B                      		pop	bx
 12533 00005293 07                      		pop	es
 12534 00005294 59                      		pop	cx
 12535 00005295 C3                      		retn
 12536                                  ; ---------------------------------------------------------------------------
 12537                                  
 12538                                  _GotCh:					; ...
 12539 00005296 36A0[9F03]              		mov	al, [ss:DSKCHRET]
 12540 0000529A 3C03                    		cmp	al, 3		; "C"-"@"
 12541 0000529C 75F2                    		jnz	short RET36
 12542 0000529E 36C606[9403]04          		mov	byte [ss:DSKSTCOM], 4 ; DEVRD
 12543 000052A4 36C606[9203]16          		mov	byte [ss:DSKSTCALL], 22 ; DRDWRHL
 12544 000052AA 36880E[9F03]            		mov	[ss:DSKCHRET], cl
 12545 000052AF 36C706[9503]0000        		mov	word [ss:DSKSTST], 0
 12546 000052B6 36C706[A403]0100        		mov	word [ss:DSKSTCNT], 1
 12547 000052BD E822F5                  		call	DEVIOCALL2
 12548 000052C0 5E                      		pop	si
 12549 000052C1 1F                      		pop	ds
 12550 000052C2 5B                      		pop	bx
 12551 000052C3 07                      		pop	es
 12552 000052C4 59                      		pop	cx
 12553 000052C5 E9D000                  		jmp	CNTCHAND
 12554                                  
 12555                                  ; ---------------------------------------------------------------------------
 12556                                  
 12557                                  NOSTOP:					; ...
 12558 000052C8 3C10                    		cmp	al, 10h		; "P"-"@"
 12559 000052CA 7509                    		jnz	short check_next
 12560 000052CC 36803E[900D]00          		cmp	byte [ss:SCAN_FLAG], 0
 12561 000052D2 7406                    		jz	short INCHKJ
 12562 000052D4 C3                      		retn
 12563                                  ; ---------------------------------------------------------------------------
 12564                                  
 12565                                  check_next:				; ...
 12566 000052D5 3C03                    		cmp	al, 3		; "C"-"@"
 12567 000052D7 7401                    		jz	short INCHKJ
 12568                                  
 12569                                  check_end:				; ...
 12570 000052D9 C3                      		retn
 12571                                  ; ---------------------------------------------------------------------------
 12572                                  
 12573                                  INCHKJ:					; ...
 12574 000052DA E9A500                  		jmp	INCHK
 12575                                  
 12576                                  ; =============== S U B	R O U T	I N E =======================================
 12577                                  
 12578                                  SPOOLINT:
 12579 000052DD 9C                      		pushf
 12580 000052DE 36803E[5803]00          		cmp	byte [ss:IDLEINT], 0
 12581 000052E4 7423                    		jz	short POPFRET
 12582 000052E6 36803E[2003]00          		cmp	byte [ss:ERRORMODE], 0
 12583 000052EC 751B                    		jnz	short POPFRET
 12584 000052EE 36FF36[5803]            		push	word [ss:IDLEINT]
 12585 000052F3 36803E[1112]00          		cmp	byte [ss:DosHasHMA], 0
 12586 000052F9 7504                    		jnz	short do_low_int28
 12587 000052FB CD28                    		int	28h		; DOS 2+ internal - KEYBOARD BUSY LOOP
 12588 000052FD EB05                    		jmp	short spool_ret_addr
 12589                                  ; ---------------------------------------------------------------------------
 12590                                  
 12591                                  do_low_int28:				; ...
 12592                                  		;call	dword [cs:LowInt28Addr] ; call far [cs:LowInt28Addr]
 12593 000052FF 2EFF1E[5052]            		call	far [cs:LowInt28Addr]
 12594                                  spool_ret_addr:				; ...
 12595 00005304 368F06[5803]            		pop	word [ss:IDLEINT]
 12596                                  
 12597                                  POPFRET:				; ...
 12598 00005309 9D                      		popf
 12599                                  
 12600                                  _RET18:					; ...
 12601 0000530A C3                      		retn
 12602                                  
 12603                                  ; ---------------------------------------------------------------------------
 12604                                  
 12605                                  STATCHK:				; ...
 12606 0000530B E846FF                  		call	DSKSTATCHK
 12607 0000530E 53                      		push	bx
 12608 0000530F 31DB                    		xor	bx, bx
 12609 00005311 E88BE4                  		call	GET_IO_SFT
 12610 00005314 5B                      		pop	bx
 12611 00005315 72F3                    		jb	short _RET18
 12612 00005317 B401                    		mov	ah, 1
 12613 00005319 E8ECF2                  		call	IOFUNC
 12614 0000531C 74BF                    		jz	short SPOOLINT
 12615 0000531E 3C13                    		cmp	al, 13h		; 'S'-'@'
 12616 00005320 75A6                    		jnz	short NOSTOP
 12617 00005322 36803E[900D]00          		cmp	byte [ss:SCAN_FLAG], 0
 12618 00005328 75AF                    		jnz	short check_end
 12619 0000532A 30E4                    		xor	ah, ah
 12620 0000532C E8D9F2                  		call	IOFUNC
 12621 0000532F EB4A                    		jmp	short PAUSOSTRT
 12622                                  ; ---------------------------------------------------------------------------
 12623                                  
 12624                                  PRINT_ON_OFF:				; ...
 12625 00005331 36F616[FE02]            		not	byte [ss:PFLAG]
 12626 00005336 53                      		push	bx
 12627 00005337 BB0400                  		mov	bx, 4
 12628 0000533A E862E4                  		call	GET_IO_SFT
 12629 0000533D 5B                      		pop	bx
 12630 0000533E 72CA                    		jb	short _RET18
 12631 00005340 06                      		push	es
 12632 00005341 57                      		push	di
 12633 00005342 1E                      		push	ds
 12634 00005343 07                      		pop	es
 12635 00005344 89F7                    		mov	di, si
 12636 00005346 26F6450608              		test	byte [es:di+6], 8 ;	[ES:DI+SF_ENTRY.sf_flags+1],
 12637                                  					; (sf_net_spool>>8)
 12638 0000534B 7418                    		jz	short NORM_PR
 12639 0000534D 50                      		push	ax
 12640 0000534E B82611                  		mov	ax, 1126h
 12641 00005351 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - ???
 12642                                  					; Return: CF set on error, AX =	error code
 12643                                  					; STACK	unchanged
 12644 00005353 58                      		pop	ax
 12645 00005354 730F                    		jnb	short NORM_PR
 12646 00005356 36C606[FE02]00          		mov	byte [ss:PFLAG], 0
 12647 0000535C 50                      		push	ax
 12648 0000535D B82411                  		mov	ax, 1124h
 12649 00005360 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - ???
 12650                                  					; ES:DI	-> SFT,	SS = DOS CS
 12651 00005362 58                      		pop	ax
 12652 00005363 EB10                    		jmp	short RETP6
 12653                                  ; ---------------------------------------------------------------------------
 12654                                  
 12655                                  NORM_PR:				; ...
 12656 00005365 36803E[FE02]00          		cmp	byte [ss:PFLAG], 0
 12657 0000536B 7505                    		jnz	short PRNOPN
 12658 0000536D E8F6F3                  		call	DEV_CLOSE_SFT
 12659 00005370 EB03                    		jmp	short RETP6
 12660                                  ; ---------------------------------------------------------------------------
 12661                                  
 12662                                  PRNOPN:					; ...
 12663 00005372 E8E9F3                  		call	DEV_OPEN_SFT
 12664                                  
 12665                                  RETP6:					; ...
 12666 00005375 5F                      		pop	di
 12667 00005376 07                      		pop	es
 12668                                  
 12669                                  STATCHK_RETN:				; ...
 12670 00005377 C3                      		retn
 12671                                  ; ---------------------------------------------------------------------------
 12672                                  
 12673                                  PAUSOLP:				; ...
 12674 00005378 E862FF                  		call	SPOOLINT
 12675                                  
 12676                                  PAUSOSTRT:				; ...
 12677 0000537B B401                    		mov	ah, 1
 12678 0000537D E888F2                  		call	IOFUNC
 12679 00005380 74F6                    		jz	short PAUSOLP
 12680                                  
 12681                                  INCHK:					; ...
 12682 00005382 53                      		push	bx
 12683 00005383 31DB                    		xor	bx, bx
 12684 00005385 E817E4                  		call	GET_IO_SFT
 12685 00005388 5B                      		pop	bx
 12686 00005389 72EC                    		jb	short STATCHK_RETN
 12687 0000538B 30E4                    		xor	ah, ah
 12688 0000538D E878F2                  		call	IOFUNC
 12689 00005390 3C10                    		cmp	al, 10h		; "P"-"@"
 12690 00005392 749D                    		jz	short PRINT_ON_OFF ; PRINTON
 12691 00005394 3C03                    		cmp	al, 3		; "C"-"@"
 12692 00005396 75DF                    		jnz	short STATCHK_RETN
 12693                                  
 12694                                  CNTCHAND:				; ...
 12695 00005398 36F606[1206]02          		test	byte [ss:DOS34_FLAG+1], 2 ; (CTRL_BREAK_FLAG>>8)
 12696 0000539E 7508                    		jnz	short around_deadlock
 12697 000053A0 B003                    		mov	al, 3
 12698 000053A2 E8F9C3                  		call	BUFOUT
 12699 000053A5 E886C2                  		call	CRLF
 12700                                  
 12701                                  around_deadlock:			; ...
 12702 000053A8 16                      		push	ss
 12703 000053A9 1F                      		pop	ds
 12704 000053AA 803E[5703]00            		cmp	byte [CONSWAP], 0
 12705 000053AF 7403                    		jz	short NOSWAP
 12706 000053B1 E84BE0                  		call	SWAPBACK
 12707                                  
 12708                                  NOSWAP:					; ...
 12709 000053B4 FA                      		cli
 12710 000053B5 8E16[8605]              		mov	ss, [USER_SS]
 12711 000053B9 8B26[8405]              		mov	sp, [USER_SP]
 12712 000053BD E8AFB0                  		call	restore_world
 12713 000053C0 07                      		pop	es
 12714 000053C1 1E                      		push	ds
 12715 000053C2 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 12716 000053C7 C606[2103]00            		mov	byte [INDOS], 0
 12717 000053CC C606[2003]00            		mov	byte [ERRORMODE], 0
 12718 000053D1 8926[3203]              		mov	[ConC_Spsave], sp
 12719 000053D5 8306[3203]02            		add	word [ConC_Spsave], 2
 12720 000053DA 803E[1112]00            		cmp	byte [DosHasHMA], 0
 12721 000053DF 1F                      		pop	ds
 12722 000053E0 7505                    		jnz	short do_low_int23
 12723 000053E2 F8                      		clc
 12724 000053E3 CD23                    		int	23h		; DOS -	CONTROL	"C" EXIT ADDRESS
 12725                                  					; Return: return via RETF 2 with CF set
 12726                                  					; DOS will abort program with errorlevel 0
 12727                                  					; else
 12728                                  					; interrupted DOS call continues
 12729 000053E5 EB06                    		jmp	short ctrlc_ret_addr
 12730                                  ; ---------------------------------------------------------------------------
 12731                                  
 12732                                  do_low_int23:				; ...
 12733 000053E7 F8                      		clc
 12734                                  		;call	dword [cs:LowInt23Addr] ; call far [cs:LowInt23Addr]
 12735 000053E8 2EFF1E[4852]            		call	far [cs:LowInt23Addr]
 12736                                  ctrlc_ret_addr:				; ...
 12737 000053ED FA                      		cli
 12738 000053EE 50                      		push	ax
 12739 000053EF 8CD8                    		mov	ax, ds
 12740 000053F1 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 12741 000053F6 A3[0A0D]                		mov	[TEMPSEG], ax
 12742 000053F9 58                      		pop	ax
 12743 000053FA A3[3A03]                		mov	[USER_IN_AX], ax
 12744 000053FD 9C                      		pushf
 12745 000053FE 58                      		pop	ax
 12746 000053FF 3B26[3203]              		cmp	sp, [ConC_Spsave]
 12747 00005403 750A                    		jnz	short ctrlc_try_new
 12748                                  
 12749                                  ctrlc_repeat:				; ...
 12750 00005405 A1[3A03]                		mov	ax, [USER_IN_AX]
 12751 00005408 8E1E[0A0D]              		mov	ds, [TEMPSEG]
 12752                                  
 12753                                  COMMANDJ:				; ...
 12754 0000540C E90CAF                  		jmp	COMMAND
 12755                                  ; ---------------------------------------------------------------------------
 12756                                  
 12757                                  ctrlc_try_new:				; ...
 12758 0000540F 83C402                  		add	sp, 2
 12759 00005412 A801                    		test	al, 1		; f_Carry
 12760 00005414 74EF                    		jz	short ctrlc_repeat
 12761 00005416 8E1E[0A0D]              		mov	ds, [TEMPSEG]
 12762                                  
 12763                                  ctrlc_abort:				; ...
 12764 0000541A B8004C                  		mov	ax, 4C00h	; (EXIT<<8)+0
 12765 0000541D 1E                      		push	ds
 12766 0000541E 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 12767 00005423 C606[4D03]FF            		mov	byte [DidCTRLC], 0FFh ; -1
 12768 00005428 1F                      		pop	ds
 12769 00005429 EBE1                    		jmp	short COMMANDJ
 12770                                  ; ---------------------------------------------------------------------------
 12771                                  
 12772                                  DIVOV:					; ...
 12773 0000542B BE[9B09]                		mov	si, DIVMES	; "\r\nDivide overflow\r\n"
 12774 0000542E 2E8B1E[AE09]            		mov	bx, [cs:DivMesLen]
 12775 00005433 2E8E16[0700]            		mov	ss, [cs:DosDSeg]
 12776 00005438 BC[A007]                		mov	sp, AUXSTACK
 12777 0000543B E80200                  		call	_OUTMES		; RealDivOv
 12778 0000543E EBDA                    		jmp	short ctrlc_abort
 12779                                  
 12780                                  ; =============== S U B	R O U T	I N E =======================================
 12781                                  
 12782                                  _OUTMES:
 12783 00005440 16                      		push	ss
 12784 00005441 07                      		pop	es
 12785 00005442 16                      		push	ss
 12786 00005443 1F                      		pop	ds
 12787 00005444 C606[9403]08            		mov	byte [DSKSTCOM], 8 ; DEVWRT
 12788 00005449 C606[9203]16            		mov	byte [DSKSTCALL], 16h ; DRDWRHL
 12789 0000544E C706[9503]0000          		mov	word [DSKSTST], 0
 12790 00005454 891E[A403]              		mov	word [DSKSTCNT], bx
 12791 00005458 BB[9203]                		mov	bx, DSKSTCALL
 12792 0000545B 8936[A003]              		mov	[DSKCHRET_1], si ; [DSKCHRET+1]
 12793 0000545F 8C0E[A203]              		mov	[DSKCHRET_3], cs ; [DSKCHRET+3]
 12794 00005463 C536[3200]              		lds	si, [BCON]
 12795 00005467 E878F3                  		call	DEVIOCALL2
 12796 0000546A 26C706[A003][BC03]      		mov	word [es:DSKCHRET_1], DEVIOBUF ; [ES:DSKCHRET+1]
 12797 00005471 26C706[A403]0100        		mov	word [es:DSKSTCNT], 1
 12798 00005478 C3                      		retn
 12799                                  
 12800                                  ; =============== S U B	R O U T	I N E =======================================
 12801                                  
 12802                                  CHARHARD:		; ...
 12803 00005479 36803E[2003]00          		cmp	byte [ss:ERRORMODE], 0
 12804 0000547F 750B                    		jnz	short chard1
 12805 00005481 80CC10                  		or	ah, 10h
 12806 00005484 36F606[FE02]FF          		test	byte [ss:PFLAG], 0FFh ; -1
 12807 0000548A 7503                    		jnz	short ctrlp
 12808                                  
 12809                                  chard1:					; ...
 12810 0000548C 80CC38                  		or	ah, 38h		; Allowed_IGNORE+Allowed_RETRY+Allowed_FAIL
 12811                                  
 12812                                  ctrlp:					; ...
 12813 0000548F 368826[4B03]            		mov	[ss:ALLOWED], ah
 12814 00005494 368C06[8205]            		mov	word [ss:EXITHOLD+2], es
 12815 00005499 36892E[8005]            		mov	word [ss:EXITHOLD], bp
 12816 0000549E 56                      		push	si
 12817 0000549F 81E7FF00                		and	di, 0FFh	; STECODE
 12818 000054A3 8CDD                    		mov	bp, ds
 12819 000054A5 E86400                  		call	FATALC
 12820 000054A8 5E                      		pop	si
 12821 000054A9 C3                      		retn
 12822                                  
 12823                                  ; ---------------------------------------------------------------------------
 12824                                  
 12825                                  HARDERR:				; ...
 12826 000054AA 97                      		xchg	ax, di
 12827 000054AB 81E7FF00                		and	di, 0FFh	; STECODE
 12828 000054AF 83FF00                  		cmp	di, 0		; error_I24_write_protect
 12829 000054B2 750A                    		jnz	short NOSETWRPERR
 12830 000054B4 50                      		push	ax
 12831 000054B5 268A4600                		mov	al, [es:bp+0]
 12832 000054B9 36A2[2203]              		mov	[ss:WPERR], al
 12833 000054BD 58                      		pop	ax
 12834                                  
 12835                                  NOSETWRPERR:				; ...
 12836 000054BE 29C8                    		sub	ax, cx
 12837 000054C0 01C2                    		add	dx, ax
 12838 000054C2 52                      		push	dx
 12839 000054C3 26F76602                		mul	word [es:bp+2] ; [ES:BP+DPB.SECTOR_SIZE]
 12840 000054C7 5A                      		pop	dx
 12841 000054C8 01C3                    		add	bx, ax
 12842 000054CA 30E4                    		xor	ah, ah
 12843 000054CC 263B5606                		cmp	dx, [es:bp+6]	; [ES:BP+DPB.FIRST_FAT]
 12844 000054D0 721A                    		jb	short ERRINT
 12845 000054D2 FEC4                    		inc	ah
 12846 000054D4 263B5611                		cmp	dx, [es:bp+11h]	; [ES:BP+DPB.DIR_SECTOR]
 12847 000054D8 7308                    		jnb	short TESTDIR
 12848 000054DA 26C7461FFFFF            		mov	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 12849 000054E0 EB0A                    		jmp	short ERRINT
 12850                                  ; ---------------------------------------------------------------------------
 12851                                  
 12852                                  TESTDIR:				; ...
 12853 000054E2 FEC4                    		inc	ah
 12854 000054E4 263B560B                		cmp	dx, [es:bp+0Bh]	; [ES:BP+DPB.FIRST_SECTOR]
 12855 000054E8 7202                    		jb	short ERRINT
 12856 000054EA FEC4                    		inc	ah
 12857                                  
 12858                                  ERRINT:					; ...
 12859 000054EC D0E4                    		shl	ah, 1
 12860 000054EE 360A26[7505]            		or	ah, [ss:READOP]
 12861 000054F3 360A26[4B03]            		or	ah, [ss:ALLOWED]
 12862                                  
 12863                                  FATAL:					; ...
 12864 000054F8 268A4600                		mov	al, [es:bp+0]
 12865                                  
 12866                                  FATAL1:					; ...
 12867 000054FC 368C06[8205]            		mov	word [ss:EXITHOLD+2], es
 12868 00005501 36892E[8005]            		mov	word [ss:EXITHOLD], bp
 12869 00005506 26C47613                		les	si, [es:bp+13h]	; [ES:BP+DPB.DRIVER_ADDR]
 12870 0000550A 8CC5                    		mov	bp, es
 12871                                  
 12872                                  FATALC:					; ...
 12873 0000550C E89801                  		call	SET_I24_EXTENDED_ERROR
 12874 0000550F 83FF0C                  		cmp	di, 0Ch		; error_I24_gen_failure
 12875 00005512 7603                    		jbe	short NET_I24_ENTRY
 12876 00005514 BF0C00                  		mov	di, 0Ch
 12877                                  
 12878                                  NET_I24_ENTRY:				; ...
 12879 00005517 36803E[2003]00          		cmp	byte [ss:ERRORMODE], 0 ; GOT_RIGHT_CODE
 12880 0000551D 7404                    		jz	short NoSetFail
 12881 0000551F B003                    		mov	al, 3
 12882 00005521 EB6C                    		jmp	short FailRet
 12883                                  ; ---------------------------------------------------------------------------
 12884                                  
 12885                                  NoSetFail:				; ...
 12886 00005523 368926[8805]            		mov	[ss:CONTSTK], sp
 12887 00005528 16                      		push	ss
 12888 00005529 07                      		pop	es
 12889 0000552A 36833E[AA05]FF          		cmp	word [ss:SFN], 0FFFFh ; -1
 12890 00005530 740C                    		jz	short _NoFree
 12891 00005532 1E                      		push	ds
 12892 00005533 56                      		push	si
 12893 00005534 36C536[AE05]            		lds	si, [ss:PJFN]
 12894 00005539 C604FF                  		mov	byte [si], 0FFh
 12895 0000553C 5E                      		pop	si
 12896 0000553D 1F                      		pop	ds
 12897                                  
 12898                                  _NoFree:				; ...
 12899 0000553E FA                      		cli
 12900 0000553F 36FE06[2003]            		inc	byte [ss:ERRORMODE]
 12901 00005544 36FE0E[2103]            		dec	byte [ss:INDOS]
 12902 00005549 36F606[F605]02          		test	byte [ss:EXTOPEN_ON], 2 ; EXT_OPEN_I24_OFF
 12903 0000554F 7404                    		jz	short i24yes
 12904 00005551 B003                    		mov	al, 3
 12905 00005553 EB29                    		jmp	short passi24
 12906                                  ; ---------------------------------------------------------------------------
 12907                                  
 12908                                  i24yes:					; ...
 12909 00005555 368E16[8605]            		mov	ss, [ss:USER_SS]
 12910 0000555A 268B26[8405]            		mov	sp, [es:USER_SP]
 12911 0000555F 26803E[1112]00          		cmp	byte [es:DosHasHMA], 0
 12912 00005565 7504                    		jnz	short do_low_int24
 12913 00005567 CD24                    		int	24h		; DOS -	FATAL ERROR HANDLER ADDRESS
 12914                                  					; Automatically	called upon detection of unrecoverable I/O error.
 12915 00005569 EB05                    		jmp	short criterr_ret_addr
 12916                                  ; ---------------------------------------------------------------------------
 12917                                  
 12918                                  do_low_int24:				; ...
 12919                                  		;call	dword [cs:LowInt24Addr] ; call far [cs:LowInt24Addr]
 12920 0000556B 2EFF1E[4C52]            		call	far [cs:LowInt24Addr]
 12921                                  criterr_ret_addr:			; ...
 12922 00005570 268926[8405]            		mov	[es:USER_SP], sp
 12923 00005575 268C16[8605]            		mov	[es:USER_SS], ss
 12924 0000557A 8CC5                    		mov	bp, es
 12925 0000557C 8ED5                    		mov	ss, bp
 12926                                  
 12927                                  passi24:				; ...
 12928 0000557E 368B26[8805]            		mov	sp, [ss:CONTSTK]
 12929 00005583 36FE06[2103]            		inc	byte [ss:INDOS]
 12930 00005588 36C606[2003]00          		mov	byte [ss:ERRORMODE], 0
 12931 0000558E FB                      		sti
 12932                                  
 12933                                  FailRet:				; ...
 12934 0000558F 36C42E[8005]            		les	bp, [ss:EXITHOLD]
 12935 00005594 3C01                    		cmp	al, 1
 12936 00005596 723E                    		jb	short CheckIgnore
 12937 00005598 7446                    		jz	short CheckRetry
 12938 0000559A 3C03                    		cmp	al, 3
 12939 0000559C 754C                    		jnz	short DoAbort
 12940 0000559E 36F606[4B03]08          		test	byte [ss:ALLOWED], 8
 12941 000055A4 7444                    		jz	short DoAbort
 12942                                  
 12943                                  DoFail:					; ...
 12944 000055A6 B003                    		mov	al, 3
 12945 000055A8 36F606[F605]02          		test	byte [ss:EXTOPEN_ON], 2 ; EXT_OPEN_I24_OFF
 12946 000055AE 7505                    		jnz	short CleanUp
 12947 000055B0 36FE06[4A03]            		inc	byte [ss:FAILERR]
 12948                                  
 12949                                  CleanUp:				; ...
 12950 000055B5 36C606[2203]FF          		mov	byte [ss:WPERR], 0FFh ; -1
 12951 000055BB 36833E[AA05]FF          		cmp	word [ss:SFN], 0FFFFh ; -1
 12952 000055C1 7501                    		jnz	short CleanUp2
 12953 000055C3 C3                      		retn
 12954                                  ; ---------------------------------------------------------------------------
 12955                                  
 12956                                  CleanUp2:				; ...
 12957 000055C4 1E                      		push	ds
 12958 000055C5 56                      		push	si
 12959 000055C6 50                      		push	ax
 12960 000055C7 36A1[AA05]              		mov	ax, [ss:SFN]
 12961 000055CB 36C536[AE05]            		lds	si, [ss:PJFN]
 12962 000055D0 8804                    		mov	[si], al
 12963 000055D2 58                      		pop	ax
 12964 000055D3 5E                      		pop	si
 12965 000055D4 1F                      		pop	ds
 12966 000055D5 C3                      		retn
 12967                                  ; ---------------------------------------------------------------------------
 12968                                  
 12969                                  CheckIgnore:				; ...
 12970 000055D6 36F606[4B03]20          		test	byte [ss:ALLOWED], 20h ; Allowed_IGNORE
 12971 000055DC 74C8                    		jz	short DoFail
 12972 000055DE EBD5                    		jmp	short CleanUp
 12973                                  ; ---------------------------------------------------------------------------
 12974                                  
 12975                                  CheckRetry:				; ...
 12976 000055E0 36F606[4B03]10          		test	byte [ss:ALLOWED], 10h ; Allowed_RETRY
 12977 000055E6 74BE                    		jz	short DoFail
 12978 000055E8 EBCB                    		jmp	short CleanUp
 12979                                  ; ---------------------------------------------------------------------------
 12980                                  
 12981                                  DoAbort:				; ...
 12982 000055EA 16                      		push	ss
 12983 000055EB 1F                      		pop	ds
 12984 000055EC 803E[5703]00            		cmp	byte [CONSWAP], 0
 12985 000055F1 7403                    		jz	short NOSWAP2
 12986 000055F3 E809DE                  		call	SWAPBACK
 12987                                  
 12988                                  NOSWAP2:				; ...
 12989 000055F6 803E[5903]00            		cmp	byte [fAborting], 0
 12990 000055FB 75A9                    		jnz	short DoFail
 12991 000055FD C606[7C05]02            		mov	byte [EXIT_TYPE], 2 ; EXIT_HARD_ERROR
 12992 00005602 30C0                    		xor	al, al
 12993 00005604 E9B30D                  		jmp	exit_inner
 12994                                  ; ---------------------------------------------------------------------------
 12995                                  
 12996                                  reset_environment:			; ...
 12997 00005607 1E                      		push	ds
 12998 00005608 B482                    		mov	ah, 82h
 12999 0000560A CD2A                    		int	2Ah		; Microsoft Networks - END DOS CRITICAL	SECTIONS 0 THROUGH 7
 13000 0000560C 36C606[5903]FF          		mov	byte [ss:fAborting], 0FFh ; -1
 13001 00005612 B82211                  		mov	ax, 1122h
 13002 00005615 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - PROCESS TERMINATION HOOK
 13003                                  					; SS = DOS CS
 13004 00005617 B022                    		mov	al, 22h		; int_terminate
 13005 00005619 E891B8                  		call	_$GET_INTERRUPT_VECTOR
 13006 0000561C 59                      		pop	cx
 13007 0000561D 06                      		push	es
 13008 0000561E 53                      		push	bx
 13009 0000561F 368B1E[3003]            		mov	bx, [ss:CurrentPDB]
 13010 00005624 8EDB                    		mov	ds, bx
 13011 00005626 A11600                  		mov	ax, [16h]	; [PDB.PARENT_PID]
 13012 00005629 39D8                    		cmp	ax, bx
 13013 0000562B 7418                    		jz	short reset_return
 13014 0000562D 39CB                    		cmp	bx, cx
 13015 0000562F 7514                    		jnz	short reset_return
 13016 00005631 50                      		push	ax
 13017 00005632 36803E[7C05]03          		cmp	byte [ss:EXIT_TYPE], 3 ; EXIT_KEEP_PROCESS
 13018 00005638 7406                    		jz	short reset_to_parent
 13019 0000563A E8B50D                  		call	arena_free_process
 13020 0000563D E89DD9                  		call	DOS_ABORT
 13021                                  
 13022                                  reset_to_parent:			; ...
 13023 00005640 368F06[3003]            		pop	word [ss:CurrentPDB]
 13024                                  
 13025                                  reset_return:				; ...
 13026 00005645 16                      		push	ss
 13027 00005646 1F                      		pop	ds
 13028 00005647 B0FF                    		mov	al, 0FFh	; -1
 13029 00005649 E80ABD                  		call	ECritDisk
 13030 0000564C E8BB05                  		call	FLUSHBUF
 13031 0000564F E824BD                  		call	LCritDisk
 13032 00005652 E876F7                  		call	CHECK_VIRT_OPEN
 13033 00005655 FA                      		cli
 13034 00005656 C606[2103]00            		mov	byte [INDOS], 0
 13035 0000565B C606[2203]FF            		mov	byte [WPERR], 0FFh
 13036 00005660 C606[5903]00            		mov	byte [fAborting], 0
 13037 00005665 8F06[8005]              		pop	word [EXITHOLD]
 13038 00005669 8F06[8205]              		pop	word [EXITHOLD+2]
 13039 0000566D 8E1E[3003]              		mov	ds, [CurrentPDB]
 13040 00005671 8E16[3000]              		mov	ss, word [BCLOCK+2]
 13041 00005675 8B26[2E00]              		mov	sp, word [BCLOCK]
 13042 00005679 E8F3AD                  		call	restore_world
 13043 0000567C 07                      		pop	es
 13044 0000567D 50                      		push	ax
 13045 0000567E 8CD8                    		mov	ax, ds
 13046 00005680 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 13047 00005685 A3[0A0D]                		mov	[TEMPSEG], ax
 13048 00005688 58                      		pop	ax
 13049 00005689 A3[8405]                		mov	[USER_SP], ax
 13050 0000568C 58                      		pop	ax
 13051 0000568D 58                      		pop	ax
 13052 0000568E 58                      		pop	ax
 13053 0000568F 9F                      		lahf
 13054 00005690 86E0                    		xchg	ah, al
 13055 00005692 2402                    		and	al, 2
 13056 00005694 B4F2                    		mov	ah, 0F2h
 13057 00005696 50                      		push	ax
 13058 00005697 FF36[8205]              		push	word [EXITHOLD+2]
 13059 0000569B FF36[8005]              		push	word [EXITHOLD]
 13060 0000569F A1[8405]                		mov	ax, [USER_SP]
 13061 000056A2 8E1E[0A0D]              		mov	ds, [TEMPSEG]
 13062 000056A6 CF                      		iret
 13063                                  
 13064                                  ; =============== S U B	R O U T	I N E =======================================
 13065                                  
 13066                                  SET_I24_EXTENDED_ERROR: ; ...
 13067 000056A7 50                      		push	ax
 13068 000056A8 B8[BB0E]                		mov	ax, FIRST_BUFF_ADDR ; ErrMap24End
 13069 000056AB 2D[AB0E]                		sub	ax, ErrMap24
 13070 000056AE 1E                      		push	ds
 13071 000056AF 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 13072 000056B4 39C7                    		cmp	di, ax
 13073 000056B6 89F8                    		mov	ax, di
 13074 000056B8 7306                    		jnb	short NoTrans
 13075 000056BA 8A85[AB0E]              		mov	al, [ErrMap24+di] ; [ErrMap24+di]
 13076 000056BE 30E4                    		xor	ah, ah
 13077                                  
 13078                                  NoTrans:				; ...
 13079 000056C0 A3[2403]                		mov	[EXTERR], ax
 13080 000056C3 1F                      		pop	ds
 13081 000056C4 58                      		pop	ax
 13082 000056C5 56                      		push	si
 13083 000056C6 BE[5B0E]                		mov	si, ERR_TABLE_24
 13084 000056C9 E88BAF                  		call	CAL_LK
 13085 000056CC 5E                      		pop	si
 13086 000056CD C3                      		retn
 13087                                  
 13088                                  ; =============== S U B	R O U T	I N E =======================================
 13089                                  
 13090                                  IsEOF:		; ...
 13091 000056CE 26817E0DF60F            		cmp	word [es:bp+0Dh], 0FF6h ; [ES:BP+DPB.MAX_CLUSTER],
 13092                                  					; 4096-10
 13093 000056D4 730B                    		jnb	short EOF16
 13094 000056D6 81FBF00F                		cmp	bx, 0FF0h
 13095 000056DA 7404                    		jz	short IsEOF_other
 13096 000056DC 81FBF80F                		cmp	bx, 0FF8h
 13097                                  
 13098                                  IsEOF_other:				; ...
 13099 000056E0 C3                      		retn
 13100                                  ; ---------------------------------------------------------------------------
 13101                                  
 13102                                  EOF16:					; ...
 13103 000056E1 83FBF8                  		cmp	bx, 0FFF8h
 13104 000056E4 C3                      		retn
 13105                                  
 13106                                  ; =============== S U B	R O U T	I N E =======================================
 13107                                  
 13108                                  UNPACK:		; ...
 13109 000056E5 09DB                    		or	bx, bx
 13110 000056E7 7507                    		jnz	short up_cont
 13111 000056E9 8B3E[8100]              		mov	di, [CL0FATENTRY]
 13112 000056ED 09FF                    		or	di, di
 13113 000056EF C3                      		retn
 13114                                  ; ---------------------------------------------------------------------------
 13115                                  
 13116                                  up_cont:				; ...
 13117 000056F0 263B5E0D                		cmp	bx, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
 13118 000056F4 7726                    		ja	short HURTFAT
 13119 000056F6 E8DC00                  		call	MAPCLUSTER
 13120 000056F9 721E                    		jb	short _DoContext
 13121 000056FB 8B3D                    		mov	di, [di]
 13122 000056FD 750E                    		jnz	short High12
 13123 000056FF 268B760D                		mov	si, [es:bp+0Dh]	; [ES:BP+DPB.MAX_CLUSTER]
 13124 00005703 81FEF60F                		cmp	si, 0FF6h	; 4096-10
 13125 00005707 720C                    		jb	short Unpack12
 13126 00005709 09FF                    		or	di, di
 13127 0000570B EB0C                    		jmp	short _DoContext
 13128                                  ; ---------------------------------------------------------------------------
 13129                                  
 13130                                  High12:					; ...
 13131 0000570D D1EF                    		shr	di, 1
 13132 0000570F D1EF                    		shr	di, 1
 13133 00005711 D1EF                    		shr	di, 1
 13134 00005713 D1EF                    		shr	di, 1
 13135                                  
 13136                                  Unpack12:				; ...
 13137 00005715 81E7FF0F                		and	di, 0FFFh
 13138                                  
 13139                                  _DoContext:				; ...
 13140 00005719 16                      		push	ss
 13141 0000571A 1F                      		pop	ds
 13142 0000571B C3                      		retn
 13143                                  ; ---------------------------------------------------------------------------
 13144                                  
 13145                                  HURTFAT:				; ...
 13146 0000571C 26C7461FFFFF            		mov	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 13147 00005722 50                      		push	ax
 13148 00005723 B488                    		mov	ah, 88h		; Allowed_FAIL+80h
 13149 00005725 36C606[4B03]08          		mov	byte [ss:ALLOWED], 8 ; Allowed_FAIL
 13150 0000572B BFFF0F                  		mov	di, 0FFFh
 13151 0000572E E8C7FD                  		call	FATAL
 13152 00005731 3C03                    		cmp	al, 3
 13153 00005733 F8                      		clc
 13154 00005734 7501                    		jnz	short OKU_RET
 13155 00005736 F9                      		stc
 13156                                  
 13157                                  OKU_RET:				; ...
 13158 00005737 58                      		pop	ax
 13159                                  
 13160                                  hurtfat_retn:				; ...
 13161 00005738 C3                      		retn
 13162                                  
 13163                                  ; =============== S U B	R O U T	I N E =======================================
 13164                                  
 13165                                  PACK:		; ...
 13166 00005739 09DB                    		or	bx, bx
 13167 0000573B 7505                    		jnz	short p_cont
 13168 0000573D 8916[8100]              		mov	[CL0FATENTRY], dx
 13169 00005741 C3                      		retn
 13170                                  ; ---------------------------------------------------------------------------
 13171                                  
 13172                                  p_cont:					; ...
 13173 00005742 E89000                  		call	MAPCLUSTER
 13174 00005745 72D2                    		jb	short _DoContext
 13175 00005747 8B35                    		mov	si, [di]
 13176 00005749 740B                    		jz	short ALIGNED
 13177 0000574B 51                      		push	cx
 13178 0000574C B104                    		mov	cl, 4
 13179 0000574E D3E2                    		shl	dx, cl
 13180 00005750 59                      		pop	cx
 13181 00005751 83E60F                  		and	si, 0Fh
 13182 00005754 EB14                    		jmp	short PACKIN
 13183                                  ; ---------------------------------------------------------------------------
 13184                                  
 13185                                  ALIGNED:				; ...
 13186 00005756 26817E0DF60F            		cmp	word [es:bp+0Dh], 0FF6h ; [ES:BP+DPB.MAX_CLUSTER],
 13187                                  					; 4096-10
 13188 0000575C 730A                    		jnb	short Pack16
 13189 0000575E 81E600F0                		and	si, 0F000h
 13190 00005762 81E2FF0F                		and	dx, 0FFFh
 13191 00005766 EB02                    		jmp	short PACKIN
 13192                                  ; ---------------------------------------------------------------------------
 13193                                  
 13194                                  Pack16:					; ...
 13195 00005768 31F6                    		xor	si, si
 13196                                  
 13197                                  PACKIN:					; ...
 13198 0000576A 09D6                    		or	si, dx
 13199 0000576C 8935                    		mov	[di], si
 13200 0000576E 36C536[E205]            		lds	si, [ss:CURBUF]
 13201 00005773 F6440540                		test	byte [si+5], 40h ; [SI+BUFFINFO.buf_flags],buf_dirty
 13202 00005777 7507                    		jnz	short yesdirty11
 13203 00005779 E89A05                  		call	INC_DIRTY_COUNT
 13204 0000577C 804C0540                		or	byte [si+5], 40h
 13205                                  
 13206                                  yesdirty11:				; ...
 13207 00005780 36803E[7805]00          		cmp	byte [ss:CLUSSPLIT], 0
 13208 00005786 16                      		push	ss
 13209 00005787 1F                      		pop	ds
 13210 00005788 74AE                    		jz	short hurtfat_retn
 13211 0000578A 50                      		push	ax
 13212 0000578B 53                      		push	bx
 13213 0000578C 51                      		push	cx
 13214 0000578D A1[8E05]                		mov	ax, [CLUSSAVE]
 13215 00005790 8E1E[E405]              		mov	ds, word [CURBUF+2]
 13216 00005794 83C614                  		add	si, 20		; BUFINSIZ
 13217 00005797 8824                    		mov	[si], ah
 13218 00005799 16                      		push	ss
 13219 0000579A 1F                      		pop	ds
 13220 0000579B 50                      		push	ax
 13221 0000579C 8B16[9205]              		mov	dx, word [CLUSSEC+2]
 13222 000057A0 8916[0706]              		mov	word [HIGH_SECTOR], dx
 13223 000057A4 8B16[9005]              		mov	dx, word [CLUSSEC]
 13224 000057A8 BE0100                  		mov	si, 1
 13225 000057AB 30C0                    		xor	al, al
 13226 000057AD E85D03                  		call	GETBUFFRB
 13227 000057B0 58                      		pop	ax
 13228 000057B1 721C                    		jb	short POPP_RET
 13229 000057B3 C53E[E205]              		lds	di, [CURBUF]
 13230 000057B7 F6450540                		test	byte [di+5], 40h
 13231 000057BB 7507                    		jnz	short yesdirty12
 13232 000057BD E85605                  		call	INC_DIRTY_COUNT
 13233 000057C0 804D0540                		or	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
 13234                                  
 13235                                  yesdirty12:				; ...
 13236 000057C4 83C714                  		add	di, 20		; BUFINSIZ
 13237 000057C7 4F                      		dec	di
 13238 000057C8 26037E02                		add	di, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 13239 000057CC 8805                    		mov	[di], al
 13240 000057CE F8                      		clc
 13241                                  
 13242                                  POPP_RET:				; ...
 13243 000057CF 16                      		push	ss
 13244 000057D0 1F                      		pop	ds
 13245 000057D1 59                      		pop	cx
 13246 000057D2 5B                      		pop	bx
 13247 000057D3 58                      		pop	ax
 13248 000057D4 C3                      		retn
 13249                                  
 13250                                  ; =============== S U B	R O U T	I N E =======================================
 13251                                  
 13252                                  MAPCLUSTER:		; ...
 13253 000057D5 C606[7805]00            		mov	byte [CLUSSPLIT], 0
 13254 000057DA 50                      		push	ax
 13255 000057DB 53                      		push	bx
 13256 000057DC 51                      		push	cx
 13257 000057DD 52                      		push	dx
 13258 000057DE 89D8                    		mov	ax, bx
 13259 000057E0 26817E0DF60F            		cmp	word [es:bp+0Dh], 0FF6h ; [ES:BP+DPB.MAX_CLUSTER],
 13260                                  					; 4096-10
 13261 000057E6 7302                    		jnb	short Map16
 13262 000057E8 D1E8                    		shr	ax, 1
 13263                                  
 13264                                  Map16:					; ...
 13265 000057EA 31FF                    		xor	di, di
 13266 000057EC 01D8                    		add	ax, bx
 13267 000057EE 11FF                    		adc	di, di
 13268 000057F0 268B4E02                		mov	cx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 13269 000057F4 81F90002                		cmp	cx, 512
 13270 000057F8 7510                    		jnz	short _DoDiv
 13271 000057FA 89C2                    		mov	dx, ax
 13272 000057FC 81E2FF01                		and	dx, 1FFh
 13273 00005800 88E0                    		mov	al, ah
 13274 00005802 D1EF                    		shr	di, 1
 13275 00005804 D0D8                    		rcr	al, 1
 13276 00005806 30E4                    		xor	ah, ah
 13277 00005808 EB04                    		jmp	short DivDone
 13278                                  ; ---------------------------------------------------------------------------
 13279                                  
 13280                                  _DoDiv:					; ...
 13281 0000580A 89FA                    		mov	dx, di
 13282 0000580C F7F1                    		div	cx
 13283                                  
 13284                                  DivDone:				; ...
 13285 0000580E 26034606                		add	ax, [es:bp+6]	; ES:BP+DPB.FIRST_FAT]
 13286 00005812 49                      		dec	cx
 13287 00005813 50                      		push	ax
 13288 00005814 52                      		push	dx
 13289 00005815 51                      		push	cx
 13290 00005816 89C2                    		mov	dx, ax
 13291 00005818 C706[0706]0000          		mov	word [HIGH_SECTOR], 0
 13292 0000581E 30C0                    		xor	al, al
 13293 00005820 BE0100                  		mov	si, 1
 13294 00005823 E8E702                  		call	GETBUFFRB
 13295 00005826 59                      		pop	cx
 13296 00005827 58                      		pop	ax
 13297 00005828 5A                      		pop	dx
 13298 00005829 7257                    		jb	short MAP_POP
 13299 0000582B C536[E205]              		lds	si, [CURBUF]
 13300 0000582F 8D7C14                  		lea	di, [si+20]	; [SI+BUFINSIZ]
 13301 00005832 01C7                    		add	di, ax
 13302 00005834 39C8                    		cmp	ax, cx
 13303 00005836 7537                    		jnz	short MAPRET
 13304 00005838 8A05                    		mov	al, [di]
 13305 0000583A 16                      		push	ss
 13306 0000583B 1F                      		pop	ds
 13307 0000583C FE06[7805]              		inc	byte [CLUSSPLIT]
 13308 00005840 A2[8E05]                		mov	byte [CLUSSAVE], al
 13309 00005843 8916[9005]              		mov	word [CLUSSEC], dx
 13310 00005847 C706[9205]0000          		mov	word [CLUSSEC+2], 0
 13311 0000584D 42                      		inc	dx
 13312 0000584E C706[0706]0000          		mov	word [HIGH_SECTOR], 0
 13313 00005854 30C0                    		xor	al, al
 13314 00005856 BE0100                  		mov	si, 1
 13315 00005859 E8B102                  		call	GETBUFFRB
 13316 0000585C 7224                    		jb	short MAP_POP
 13317 0000585E C536[E205]              		lds	si, [CURBUF]
 13318 00005862 8D7C14                  		lea	di, [si+20]	; [SI+BUFINSIZ]
 13319 00005865 8A05                    		mov	al, [di]
 13320 00005867 16                      		push	ss
 13321 00005868 1F                      		pop	ds
 13322 00005869 A2[8F05]                		mov	byte [CLUSSAVE+1], al
 13323 0000586C BF[8E05]                		mov	di, CLUSSAVE
 13324                                  
 13325                                  MAPRET:					; ...
 13326 0000586F 5A                      		pop	dx
 13327 00005870 59                      		pop	cx
 13328 00005871 5B                      		pop	bx
 13329 00005872 31C0                    		xor	ax, ax
 13330 00005874 26817E0DF60F            		cmp	word [es:bp+0Dh], 0FF6h ; [ES:BP+DPB.MAX_CLUSTER],
 13331                                  					; 4096-10
 13332 0000587A 7302                    		jnb	short MapSet
 13333 0000587C 89D8                    		mov	ax, bx
 13334                                  
 13335                                  MapSet:					; ...
 13336 0000587E A801                    		test	al, 1
 13337 00005880 58                      		pop	ax
 13338 00005881 C3                      		retn
 13339                                  ; ---------------------------------------------------------------------------
 13340                                  
 13341                                  MAP_POP:				; ...
 13342 00005882 5A                      		pop	dx
 13343 00005883 59                      		pop	cx
 13344 00005884 5B                      		pop	bx
 13345 00005885 58                      		pop	ax
 13346 00005886 C3                      		retn
 13347                                  
 13348                                  ; =============== S U B	R O U T	I N E =======================================
 13349                                  
 13350                                  FATREAD_SFT:	; ...
 13351 00005887 26C46D07                		les	bp, [es:di+7]	; [ES:DI+SF_ENTRY.sf_devptr]
 13352 0000588B 268A4600                		mov	al, [es:bp+0]
 13353 0000588F A2[7605]                		mov	[THISDRV], al
 13354 00005892 E876AD                  		call	GOTDPB
 13355 00005895 E87900                  		call	FAT_GOT_DPB
 13356                                  
 13357                                  fatread_sft_retn:			; ...
 13358 00005898 C3                      		retn
 13359                                  
 13360                                  ; =============== S U B	R O U T	I N E =======================================
 13361                                  
 13362                                  FATREAD_CDS:	; ...
 13363 00005899 06                      		push	es
 13364 0000589A 57                      		push	di
 13365 0000589B 26C46D45                		les	bp, [es:di+45h]	; [ES:DI+curdir.devptr]
 13366 0000589F 268A4600                		mov	al, [es:bp+0]
 13367 000058A3 A2[7605]                		mov	[THISDRV], al
 13368 000058A6 E862AD                  		call	GOTDPB
 13369 000058A9 E86500                  		call	FAT_GOT_DPB
 13370 000058AC 5F                      		pop	di
 13371 000058AD 07                      		pop	es
 13372 000058AE 72E8                    		jb	short fatread_sft_retn
 13373 000058B0 7538                    		jnz	short NO_CHANGE
 13374 000058B2 31C0                    		xor	ax, ax
 13375 000058B4 48                      		dec	ax
 13376 000058B5 1E                      		push	ds
 13377 000058B6 8A0E[4700]              		mov	cl, [CDSCOUNT]
 13378 000058BA 30ED                    		xor	ch, ch
 13379 000058BC 26C57545                		lds	si, [es:di+45h]	; [ES:DI+curdir.devptr]
 13380 000058C0 36C43E[3C00]            		les	di, [ss:CDSADDR]
 13381                                  
 13382                                  frcd20:					; ...
 13383 000058C5 26F6454480              		test	byte [es:di+44h], 80h ; [ES:DI+curdir.flags+1],
 13384                                  					; (curdir_isnet>>8)
 13385 000058CA 7518                    		jnz	short frcd25
 13386 000058CC 263B7545                		cmp	si, [es:di+45h]	; [ES:DI+curdir.devptr]
 13387 000058D0 7512                    		jnz	short frcd25
 13388 000058D2 8CDB                    		mov	bx, ds
 13389 000058D4 263B5D47                		cmp	bx, [es:di+47h]	; [ES:DI+curdir.devptr+2]
 13390 000058D8 750A                    		jnz	short frcd25
 13391 000058DA 26854549                		test	[es:di+49h], ax	; [ES:DI+curdir.ID]
 13392 000058DE 7404                    		jz	short frcd25
 13393 000058E0 26894549                		mov	[es:di+49h], ax
 13394                                  
 13395                                  frcd25:					; ...
 13396 000058E4 83C758                  		add	di, 88		; curdir.size
 13397 000058E7 E2DC                    		loop	frcd20
 13398 000058E9 1F                      		pop	ds
 13399                                  
 13400                                  NO_CHANGE:				; ...
 13401 000058EA C42E[8A05]              		les	bp, [THISDPB]
 13402 000058EE F8                      		clc
 13403 000058EF C3                      		retn
 13404                                  
 13405                                  ; ---------------------------------------------------------------------------
 13406                                  ; START	OF FUNCTION CHUNK FOR FAT_GOT_DPB
 13407                                  
 13408                                  FAT_operation:				; ...
 13409 000058F0 26C7461FFFFF            		mov	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 13410 000058F6 81E7FF00                		and	di, 0FFh	; STECODE
 13411 000058FA C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
 13412 000058FF B41A                    		mov	ah, 1Ah		; 2+Allowed_FAIL+Allowed_RETRY
 13413 00005901 A0[7605]                		mov	al, [THISDRV]
 13414 00005904 E8F5FB                  		call	FATAL1
 13415 00005907 C42E[8A05]              		les	bp, [THISDPB]
 13416 0000590B 3C03                    		cmp	al, 3
 13417 0000590D 7502                    		jnz	short FAT_GOT_DPB
 13418 0000590F F9                      		stc
 13419 00005910 C3                      		retn
 13420                                  ; END OF FUNCTION CHUNK	FOR FAT_GOT_DPB
 13421                                  
 13422                                  ; =============== S U B	R O U T	I N E =======================================
 13423                                  
 13424                                  FAT_GOT_DPB:	; ...
 13425                                  
 13426                                  ; FUNCTION CHUNK AT 96C0 SIZE 00000021 BYTES
 13427                                  
 13428 00005911 16                      		push	ss
 13429 00005912 1F                      		pop	ds
 13430 00005913 B00F                    		mov	al, 0Fh		; DMEDHL
 13431 00005915 268A6601                		mov	ah, [es:bp+1]	; [ES:BP+DPB.UNIT]
 13432 00005919 A3[5A03]                		mov	[DEVCALL], ax
 13433 0000591C C606[5C03]01            		mov	byte [DEVCALL_REQFUNC], 1 ; DEVMDCH
 13434 00005921 C706[5D03]0000          		mov	word [DEVCALL_REQSTAT], 0
 13435 00005927 268A4617                		mov	al, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
 13436 0000592B A2[6703]                		mov	[CALLMED], al
 13437 0000592E 06                      		push	es
 13438 0000592F 1E                      		push	ds
 13439 00005930 BB[5A03]                		mov	bx, DEVCALL
 13440 00005933 26C57613                		lds	si, [es:bp+13h]	; [ES:BP+DPB.DRIVER_ADDR]
 13441 00005937 07                      		pop	es
 13442 00005938 E8A7EE                  		call	DEVIOCALL2
 13443 0000593B 16                      		push	ss
 13444 0000593C 1F                      		pop	ds
 13445 0000593D 07                      		pop	es
 13446 0000593E 8B3E[5D03]              		mov	di, [DEVCALL_REQSTAT]
 13447 00005942 09FF                    		or	di, di
 13448 00005944 78AA                    		js	short FAT_operation
 13449 00005946 30E4                    		xor	ah, ah
 13450 00005948 26866618                		xchg	ah, [es:bp+18h]	; [ES:BP+DPB.FIRST_ACCESS]
 13451 0000594C A0[7605]                		mov	al, [THISDRV]
 13452 0000594F 3806[A10A]              		cmp	byte [VOLCHNG_FLAG], al
 13453 00005953 7508                    		jnz	short CHECK_BYT
 13454 00005955 C606[A10A]FF            		mov	byte [VOLCHNG_FLAG], 0FFh ; -1
 13455 0000595A E9A900                  		jmp	GOGETBPB
 13456                                  ; ---------------------------------------------------------------------------
 13457                                  
 13458                                  CHECK_BYT:				; ...
 13459 0000595D 0A26[6803]              		or	ah, [CALLXADD]
 13460 00005961 7902                    		jns	short CHECK_ZR
 13461 00005963 EB65                    		jmp	short NEWDSK
 13462                                  ; ---------------------------------------------------------------------------
 13463                                  
 13464                                  CHECK_ZR:				; ...
 13465 00005965 743C                    		jz	short CHKBUFFDIRT
 13466 00005967 F8                      		clc
 13467 00005968 C3                      		retn
 13468                                  ; ---------------------------------------------------------------------------
 13469                                  
 13470                                  DISK_CHNG_ERR:				; ...
 13471 00005969 06                      		push	es
 13472 0000596A 55                      		push	bp
 13473 0000596B 26C46E13                		les	bp, [es:bp+13h]	; [ES:BP+DPB.DRIVER_ADDR]
 13474 0000596F 26F6460508              		test	byte [es:bp+5], 8 ; [es:bp+SYSDEV.ATT+1],
 13475                                  					; (DEVOPCL>>8)
 13476 00005974 5D                      		pop	bp
 13477 00005975 07                      		pop	es
 13478 00005976 7426                    		jz	short FAIL_OPJ2
 13479 00005978 1E                      		push	ds
 13480 00005979 57                      		push	di
 13481 0000597A 16                      		push	ss
 13482 0000597B 1F                      		pop	ds
 13483 0000597C C606[4B03]18            		mov	byte [ALLOWED], 18h
 13484 00005981 06                      		push	es
 13485 00005982 C43E[6903]              		les	di, [CALLXADD+1] ; les di,[CALLVIDM]
 13486 00005986 8C06[2A03]              		mov	word [EXTERRPT+2], es
 13487 0000598A 07                      		pop	es
 13488 0000598B 893E[2803]              		mov	word [EXTERRPT],	di
 13489 0000598F B80F00                  		mov	ax, 0Fh		; error_I24_wrong_disk
 13490 00005992 C606[7505]01            		mov	byte [READOP], 1
 13491 00005997 E810FB                  		call	HARDERR
 13492 0000599A 5F                      		pop	di
 13493 0000599B 1F                      		pop	ds
 13494 0000599C 3C03                    		cmp	al, 3
 13495                                  
 13496                                  FAIL_OPJ2:				; ...
 13497 0000599E 741D                    		jz	short FAIL_OP
 13498 000059A0 E96EFF                  		jmp	FAT_GOT_DPB
 13499                                  ; ---------------------------------------------------------------------------
 13500                                  
 13501                                  CHKBUFFDIRT:				; ...
 13502 000059A3 36833E[7100]00          		cmp	word [ss:DirtyBufferCount], 0
 13503 000059A9 741F                    		jz	short NEWDSK
 13504 000059AB E8F800                  		call	GETCURHEAD
 13505                                  
 13506                                  nbuffer:				; ...
 13507 000059AE 384504                  		cmp	[di+4],	al	; [di+BUFFINFO.buf_ID]
 13508 000059B1 750E                    		jnz	short lfnxt
 13509 000059B3 F6450540                		test	byte [di+5], 40h ; [di+BUFFINFO.buf_flags],
 13510                                  					; buf_dirty
 13511 000059B7 7408                    		jz	short lfnxt
 13512 000059B9 16                      		push	ss
 13513 000059BA 1F                      		pop	ds
 13514 000059BB F8                      		clc
 13515 000059BC C3                      		retn
 13516                                  ; ---------------------------------------------------------------------------
 13517                                  
 13518                                  FAIL_OP:				; ...
 13519 000059BD 16                      		push	ss
 13520 000059BE 1F                      		pop	ds
 13521 000059BF F9                      		stc
 13522 000059C0 C3                      		retn
 13523                                  ; ---------------------------------------------------------------------------
 13524                                  
 13525                                  lfnxt:					; ...
 13526 000059C1 8B3D                    		mov	di, [di]	; [di+BUFFINFO.buf_next]
 13527 000059C3 36393E[BB0E]            		cmp	[ss:FIRST_BUFF_ADDR], di
 13528 000059C8 75E4                    		jnz	short nbuffer
 13529                                  
 13530                                  NEWDSK:					; ...
 13531 000059CA 26C7461FFFFF            		mov	word [es:bp+1Fh], 0FFFFh ; [ES:BP+DPB.FREE_CNT],-1
 13532 000059D0 E8D300                  		call	GETCURHEAD
 13533                                  
 13534                                  nxbuffer:				; ...
 13535 000059D3 384504                  		cmp	[di+4],	al	; [DI+BUFFINFO.buf_ID]
 13536 000059D6 7510                    		jnz	short lfnxt2
 13537 000059D8 F6450540                		test	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],buf_dirty
 13538 000059DC 758B                    		jnz	short DISK_CHNG_ERR
 13539 000059DE C74504FF20              		mov	word [di+4], 20FFh ; [DI+BUFFINFO.buf_ID],
 13540                                  					; (buf_visit*256)+0FFh
 13541 000059E3 E8D200                  		call	SCANPLACE
 13542 000059E6 EB02                    		jmp	short skpbuff
 13543                                  ; ---------------------------------------------------------------------------
 13544                                  
 13545                                  lfnxt2:					; ...
 13546 000059E8 8B3D                    		mov	di, [di]	; [di+BUFFINFO.buf_next]
 13547                                  
 13548                                  skpbuff:				; ...
 13549 000059EA 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
 13550 000059EF 75E2                    		jnz	short nxbuffer
 13551 000059F1 36833E[7700]00          		cmp	word [ss:SC_CACHE_COUNT], 0
 13552 000059F7 740D                    		jz	short GOGETBPB
 13553 000059F9 363A06[B00D]            		cmp	al, [ss:CurSC_DRIVE]
 13554 000059FE 7506                    		jnz	short GOGETBPB
 13555 00005A00 36C606[B00D]FF          		mov	byte [ss:CurSC_DRIVE], 0FFh ; -1
 13556                                  
 13557                                  GOGETBPB:				; ...
 13558 00005A06 26C57E13                		lds	di, [es:bp+13h]	; [ES:BP+DPB.DRIVER_ADDR]
 13559 00005A0A F6450520                		test	byte [di+5], 20h ; [DI+SYSDEV.ATT+1],
 13560                                  					; (ISFATBYDEV>>8)
 13561 00005A0E 7510                    		jnz	short GETFREEBUF
 13562 00005A10 16                      		push	ss
 13563 00005A11 1F                      		pop	ds
 13564 00005A12 BB0200                  		mov	bx, 2
 13565 00005A15 E8CDFC                  		call	UNPACK
 13566                                  
 13567                                  FAIL_OPJ:				; ...
 13568 00005A18 72A3                    		jb	short FAIL_OP
 13569 00005A1A C53E[E205]              		lds	di, [CURBUF]
 13570 00005A1E EB13                    		jmp	short GOTGETBUF
 13571                                  ; ---------------------------------------------------------------------------
 13572                                  
 13573                                  GETFREEBUF:				; ...
 13574 00005A20 06                      		push	es
 13575 00005A21 55                      		push	bp
 13576 00005A22 31D2                    		xor	dx, dx
 13577 00005A24 368916[0706]            		mov	word [ss:HIGH_SECTOR], dx
 13578 00005A29 E87A00                  		call	GETCURHEAD
 13579 00005A2C E84602                  		call	BUFWRITE
 13580 00005A2F 5D                      		pop	bp
 13581 00005A30 07                      		pop	es
 13582 00005A31 72E5                    		jb	short FAIL_OPJ
 13583                                  
 13584                                  GOTGETBUF:				; ...
 13585 00005A33 83C714                  		add	di, 20		; BUFINSIZ
 13586 00005A36 368C1E[6A03]            		mov	word [ss:CALLXADD+2], ds
 13587 00005A3B 16                      		push	ss
 13588 00005A3C 1F                      		pop	ds
 13589 00005A3D 893E[6803]              		mov	word [CALLXADD], di
 13590 00005A41 B016                    		mov	al, 16h		; DBPBHL
 13591 00005A43 268A6601                		mov	ah, [es:bp+1]	; [ES:BP+DPB.UNIT]
 13592 00005A47 A3[5A03]                		mov	[DEVCALL], ax ; [DEVCALL_REQLEN]
 13593 00005A4A C606[5C03]02            		mov	byte [DEVCALL_REQFUNC], 2 ; DEVBPB
 13594 00005A4F C706[5D03]0000          		mov	word [DEVCALL_REQSTAT], 0
 13595 00005A55 268A4617                		mov	al, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
 13596 00005A59 A2[6703]                		mov	[CALLMED], al
 13597 00005A5C 06                      		push	es
 13598 00005A5D 1E                      		push	ds
 13599 00005A5E 26FF7615                		push	word [es:bp+15h] ; [ES:BP+DPB.DRIVER_ADDR+2]
 13600 00005A62 26FF7613                		push	word [es:bp+13h] ; [ES:BP+DPB.DRIVER_ADDR]
 13601 00005A66 BB[5A03]                		mov	bx, DEVCALL
 13602 00005A69 5E                      		pop	si
 13603 00005A6A 1F                      		pop	ds
 13604 00005A6B 07                      		pop	es
 13605 00005A6C E873ED                  		call	DEVIOCALL2
 13606 00005A6F 07                      		pop	es
 13607 00005A70 16                      		push	ss
 13608 00005A71 1F                      		pop	ds
 13609 00005A72 8B3E[5D03]              		mov	di, [DEVCALL_REQSTAT]
 13610 00005A76 09FF                    		or	di, di
 13611 00005A78 7829                    		js	short FATERRJ
 13612 00005A7A 268A4617                		mov	al, [es:bp+17h]	; [ES:BP+DPB.MEDIA]
 13613 00005A7E C536[6C03]              		lds	si, [CALLSCNT] ; lds si,[CALLBPB]
 13614 00005A82 26C7461D0000            		mov	word [es:bp+1Dh], 0	; [ES:BP+DPB.NEXT_FREE]
 13615 00005A88 E86EB5                  		call	_$SETDPB
 13616 00005A8B 36C53E[6803]            		lds	di, [ss:CALLXADD]
 13617 00005A90 268A4608                		mov	al, [es:bp+8]	; [ES:BP+DPB.FAT_COUNT]
 13618 00005A94 8845F6                  		mov	[di-0Ah], al	; [DI+BUFFINFO.buf_wrtcnt-BUFINSIZ]
 13619 00005A97 268B460F                		mov	ax, [es:bp+0Fh]	; [ES:BP+DPB.FAT_SIZE]
 13620 00005A9B 8945F7                  		mov	[di-9],	ax	; [DI+BUFFINFO.buf_wrtcntinc-BUFINSIZ]
 13621 00005A9E 16                      		push	ss
 13622 00005A9F 1F                      		pop	ds
 13623 00005AA0 30C0                    		xor	al, al
 13624 00005AA2 C3                      		retn
 13625                                  ; ---------------------------------------------------------------------------
 13626                                  
 13627                                  FATERRJ:				; ...
 13628 00005AA3 E94AFE                  		jmp	FAT_operation
 13629                                  
 13630                                  ; =============== S U B	R O U T	I N E =======================================
 13631                                  
 13632                                  GETCURHEAD:		; ...
 13633 00005AA6 36C53E[6D00]            		lds	di, [ss:BufferQueue]
 13634 00005AAB 36C706[1E00]FFFF        		mov	word [ss:LastBuffer], 0FFFFh ; -1
 13635 00005AB2 36893E[BB0E]            		mov	[ss:FIRST_BUFF_ADDR], di
 13636 00005AB7 C3                      		retn
 13637                                  
 13638                                  ; =============== S U B	R O U T	I N E =======================================
 13639                                  
 13640                                  SCANPLACE:		; ...
 13641 00005AB8 FF35                    		push	word [di]	; [di+BUFFINFO.buf_next]
 13642 00005ABA E80200                  		call	PLACEBUF
 13643 00005ABD 5F                      		pop	di
 13644 00005ABE C3                      		retn
 13645                                  
 13646                                  ; =============== S U B	R O U T	I N E =======================================
 13647                                  
 13648                                  PLACEBUF:		; ...
 13649 00005ABF 50                      		push	ax
 13650 00005AC0 53                      		push	bx
 13651 00005AC1 56                      		push	si
 13652 00005AC2 8B05                    		mov	ax, [di]	; [di+BUFFINFO.buf_next]
 13653 00005AC4 368B1E[6D00]            		mov	bx, word [ss:BufferQueue]
 13654 00005AC9 39D8                    		cmp	ax, bx
 13655 00005ACB 7420                    		jz	short nret
 13656 00005ACD 39DF                    		cmp	di, bx
 13657 00005ACF 7506                    		jnz	short not_first
 13658 00005AD1 36A3[6D00]              		mov	word [ss:BufferQueue], ax
 13659 00005AD5 EB16                    		jmp	short nret
 13660                                  ; ---------------------------------------------------------------------------
 13661                                  
 13662                                  not_first:				; ...
 13663 00005AD7 8B7502                  		mov	si, [di+2]	; [DI+BUFFINFO.buf_prev]
 13664 00005ADA 8904                    		mov	[si], ax	; [SI+BUFFINFO.buf_next]
 13665 00005ADC 96                      		xchg	ax, si
 13666 00005ADD 894402                  		mov	[si+2],	ax	; [SI+BUFFINFO.buf_prev]
 13667 00005AE0 8B7702                  		mov	si, [bx+2]	; [BX+BUFFINFO.buf_prev]
 13668 00005AE3 893C                    		mov	[si], di
 13669 00005AE5 897F02                  		mov	[bx+2],	di
 13670 00005AE8 897502                  		mov	[di+2],	si
 13671 00005AEB 891D                    		mov	[di], bx	; [DI+BUFFINFO.buf_next]
 13672                                  
 13673                                  nret:					; ...
 13674 00005AED 5E                      		pop	si
 13675 00005AEE 5B                      		pop	bx
 13676 00005AEF 58                      		pop	ax
 13677 00005AF0 807D04FF                		cmp	byte [di+4], 0FFh ;	[di+BUFFINFO.buf_ID],-1
 13678 00005AF4 7505                    		jnz	short pbx
 13679 00005AF6 36893E[6D00]            		mov	word [ss:BufferQueue], di
 13680                                  
 13681                                  pbx:					; ...
 13682 00005AFB C3                      		retn
 13683                                  
 13684                                  ; ---------------------------------------------------------------------------
 13685                                  
 13686                                  POINTCOMP:				; ...
 13687 00005AFC 39FE                    		cmp	si, di
 13688 00005AFE 750A                    		jnz	short placehead_retn
 13689 00005B00 51                      		push	cx
 13690 00005B01 52                      		push	dx
 13691 00005B02 8CD9                    		mov	cx, ds
 13692 00005B04 8CC2                    		mov	dx, es
 13693 00005B06 39D1                    		cmp	cx, dx
 13694 00005B08 5A                      		pop	dx
 13695 00005B09 59                      		pop	cx
 13696                                  
 13697                                  placehead_retn:				; ...
 13698 00005B0A C3                      		retn
 13699                                  ; ---------------------------------------------------------------------------
 13700                                  
 13701                                  GETBUFFR:				; ...
 13702 00005B0B 31F6                    		xor	si, si
 13703                                  
 13704                                  GETBUFFRB:				; ...
 13705 00005B0D A3[9405]                		mov	[PREREAD], ax
 13706 00005B10 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 13707 00005B14 C53E[1E00]              		lds	di, [LastBuffer]
 13708 00005B18 368B0E[0706]            		mov	cx, [ss:HIGH_SECTOR]
 13709 00005B1D 83FFFF                  		cmp	di, 0FFFFh	; -1
 13710 00005B20 7412                    		jz	short getb5
 13711 00005B22 3B5506                  		cmp	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
 13712 00005B25 750D                    		jnz	short getb5
 13713 00005B27 3B4D08                  		cmp	cx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 13714 00005B2A 7508                    		jnz	short getb5
 13715 00005B2C 3A4504                  		cmp	al, [di+4]	; [DI+BUFFINFO.buf_ID]
 13716 00005B2F 7503                    		jnz	short getb5
 13717 00005B31 E9BE00                  		jmp	getb35
 13718                                  ; ---------------------------------------------------------------------------
 13719                                  
 13720                                  getb5:					; ...
 13721 00005B34 E86FFF                  		call	GETCURHEAD
 13722                                  
 13723                                  getb10:					; ...
 13724 00005B37 3B5506                  		cmp	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
 13725 00005B3A 750D                    		jnz	short getb12
 13726 00005B3C 3B4D08                  		cmp	cx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 13727 00005B3F 7508                    		jnz	short getb12
 13728 00005B41 3A4504                  		cmp	al, [di+4]	; [DI+BUFFINFO.buf_ID]
 13729 00005B44 7503                    		jnz	short getb12
 13730 00005B46 E98E00                  		jmp	getb25
 13731                                  ; ---------------------------------------------------------------------------
 13732                                  
 13733                                  getb12:					; ...
 13734 00005B49 8B3D                    		mov	di, [di]	; [DI+BUFFINFO.BUF_NEXT]
 13735 00005B4B 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
 13736 00005B50 75E5                    		jnz	short getb10
 13737 00005B52 51                      		push	cx
 13738 00005B53 56                      		push	si
 13739 00005B54 52                      		push	dx
 13740 00005B55 55                      		push	bp
 13741 00005B56 06                      		push	es
 13742 00005B57 E81B01                  		call	BUFWRITE
 13743 00005B5A 07                      		pop	es
 13744 00005B5B 5D                      		pop	bp
 13745 00005B5C 5A                      		pop	dx
 13746 00005B5D 5E                      		pop	si
 13747 00005B5E 368F06[0706]            		pop	word [ss:HIGH_SECTOR]
 13748 00005B63 7303                    		jnb	short getb13
 13749 00005B65 E99F00                  		jmp	getbx
 13750                                  ; ---------------------------------------------------------------------------
 13751                                  
 13752                                  getb13:					; ...
 13753 00005B68 E89801                  		call	SET_RQ_SC_PARMS
 13754 00005B6B 30E4                    		xor	ah, ah
 13755 00005B6D 363826[9405]            		cmp	byte [ss:PREREAD], ah
 13756 00005B72 754B                    		jnz	short getb20
 13757 00005B74 8D5D14                  		lea	bx, [di+20]	; [DI+BUFINSIZ]
 13758 00005B77 B90100                  		mov	cx, 1
 13759 00005B7A 56                      		push	si
 13760 00005B7B 57                      		push	di
 13761 00005B7C 52                      		push	dx
 13762 00005B7D 06                      		push	es
 13763 00005B7E 36803E[7900]00          		cmp	byte [ss:BuffInHMA], 0
 13764 00005B84 7407                    		jz	short getb14
 13765 00005B86 1E                      		push	ds
 13766 00005B87 53                      		push	bx
 13767 00005B88 36C51E[7A00]            		lds	bx, [ss:LoMemBuff]
 13768                                  
 13769                                  getb14:					; ...
 13770 00005B8D 09F6                    		or	si, si
 13771 00005B8F 7407                    		jz	short getb15
 13772 00005B91 E8A3DC                  		call	FATSECRD
 13773 00005B94 B402                    		mov	ah, 2		; buf_isFAT
 13774 00005B96 EB05                    		jmp	short getb17
 13775                                  ; ---------------------------------------------------------------------------
 13776                                  
 13777                                  getb15:					; ...
 13778 00005B98 E8C8DC                  		call	DREAD
 13779 00005B9B B400                    		mov	ah, 0
 13780                                  
 13781                                  getb17:					; ...
 13782 00005B9D 9C                      		pushf
 13783 00005B9E 36803E[7900]00          		cmp	byte [ss:BuffInHMA], 0
 13784 00005BA4 7412                    		jz	short not_in_hma
 13785 00005BA6 9D                      		popf
 13786 00005BA7 268B4E02                		mov	cx, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 13787 00005BAB D1E9                    		shr	cx, 1
 13788 00005BAD 89DE                    		mov	si, bx
 13789 00005BAF 5F                      		pop	di
 13790 00005BB0 07                      		pop	es
 13791 00005BB1 FC                      		cld
 13792 00005BB2 F3A5                    		rep movsw
 13793 00005BB4 06                      		push	es
 13794 00005BB5 1F                      		pop	ds
 13795 00005BB6 EB01                    		jmp	short getb19
 13796                                  ; ---------------------------------------------------------------------------
 13797                                  
 13798                                  not_in_hma:				; ...
 13799 00005BB8 9D                      		popf
 13800                                  
 13801                                  getb19:					; ...
 13802 00005BB9 07                      		pop	es
 13803 00005BBA 5A                      		pop	dx
 13804 00005BBB 5F                      		pop	di
 13805 00005BBC 5E                      		pop	si
 13806 00005BBD 7248                    		jb	short getbx
 13807                                  
 13808                                  getb20:					; ...
 13809 00005BBF 368B0E[0706]            		mov	cx, [ss:HIGH_SECTOR]
 13810 00005BC4 894D08                  		mov	[di+8],	cx	; [DI+BUFFINFO.buf_sector+2]
 13811 00005BC7 895506                  		mov	[di+6],	dx	; [DI+BUFFINFO.buf_sector]
 13812 00005BCA 896D0D                  		mov	[di+0Dh], bp	; [DI+BUFFINFO.buf_DPB]
 13813 00005BCD 8C450F                  		mov	word [di+0Fh], es ;	[DI+BUFFINFO.buf_DPB+2]
 13814 00005BD0 268A4600                		mov	al, [es:bp+0]	; [ES:BP+DPB.DRIVE]
 13815 00005BD4 894504                  		mov	[di+4],	ax	; [DI+BUFFINFO.buf_ID]
 13816                                  
 13817                                  getb25:					; ...
 13818 00005BD7 C6450A01                		mov	byte [di+0Ah], 1 ;	[DI+BUFFINFO.buf_wrtcnt]
 13819 00005BDB 31C0                    		xor	ax, ax
 13820 00005BDD 09F6                    		or	si, si
 13821 00005BDF 740B                    		jz	short getb30
 13822 00005BE1 268A4608                		mov	al, [es:bp+8]	; [ES:BP+DPB.FAT_COUNT]
 13823 00005BE5 88450A                  		mov	[di+0Ah], al	; [DI+BUFFINFO.buf_wrtcnt]
 13824 00005BE8 268B460F                		mov	ax, [es:bp+0Fh]	; [ES:BP+DPB.FAT_SIZE]
 13825                                  
 13826                                  getb30:					; ...
 13827 00005BEC 89450B                  		mov	[di+0Bh], ax	; [DI+BUFFINFO.buf_wrtcntinc]
 13828 00005BEF E8CDFE                  		call	PLACEBUF
 13829                                  
 13830                                  getb35:					; ...
 13831 00005BF2 368C1E[E405]            		mov	word [ss:CURBUF+2],	ds
 13832 00005BF7 368C1E[2000]            		mov	word [ss:LastBuffer+2], ds
 13833 00005BFC 36893E[E205]            		mov	word [ss:CURBUF], di
 13834 00005C01 36893E[1E00]            		mov	word [ss:LastBuffer], di
 13835 00005C06 F8                      		clc
 13836                                  
 13837                                  getbx:					; ...
 13838 00005C07 16                      		push	ss
 13839 00005C08 1F                      		pop	ds
 13840                                  
 13841                                  getbuffrb_retn:				; ...
 13842 00005C09 C3                      		retn
 13843                                  
 13844                                  ; =============== S U B	R O U T	I N E =======================================
 13845                                  
 13846                                  FLUSHBUF:		; ...
 13847 00005C0A E899FE                  		call	GETCURHEAD
 13848 00005C0D 36F606[1106]04          		test	byte [ss:DOS34_FLAG], 4 ; FROM_DISK_RESET
 13849 00005C13 7508                    		jnz	short scan_buf_queue
 13850 00005C15 36833E[7100]00          		cmp	word [ss:DirtyBufferCount], 0
 13851 00005C1B 7423                    		jz	short end_scan
 13852                                  
 13853                                  scan_buf_queue:				; ...
 13854 00005C1D E82C00                  		call	CHECKFLUSH
 13855 00005C20 8A6504                  		mov	ah, [di+4]	; [DI+BUFFINFO.buf_ID]
 13856 00005C23 363826[2203]            		cmp	[ss:WPERR], ah
 13857 00005C28 7408                    		jz	short free_the_buf
 13858 00005C2A 36F606[1106]04          		test	byte [ss:DOS34_FLAG], 4 ; FROM_DISK_RESET
 13859 00005C30 7405                    		jz	short dont_free_the_buf
 13860                                  
 13861                                  free_the_buf:				; ...
 13862 00005C32 C74504FF00              		mov	word [di+4], 0FFh ;	[DI+BUFFINFO.buf_ID],00FFh
 13863                                  
 13864                                  dont_free_the_buf:			; ...
 13865 00005C37 8B3D                    		mov	di, [di]	; [DI+BUFFINFO.buf_next]
 13866 00005C39 363B3E[BB0E]            		cmp	di, [ss:FIRST_BUFF_ADDR]
 13867 00005C3E 75DD                    		jnz	short scan_buf_queue
 13868                                  
 13869                                  end_scan:				; ...
 13870 00005C40 16                      		push	ss
 13871 00005C41 1F                      		pop	ds
 13872 00005C42 803E[4A03]00            		cmp	byte [FAILERR], 0
 13873 00005C47 7501                    		jnz	short bad_flush
 13874 00005C49 C3                      		retn
 13875                                  ; ---------------------------------------------------------------------------
 13876                                  
 13877                                  bad_flush:				; ...
 13878 00005C4A F9                      		stc
 13879 00005C4B C3                      		retn
 13880                                  
 13881                                  ; =============== S U B	R O U T	I N E =======================================
 13882                                  
 13883                                  CHECKFLUSH:		; ...
 13884 00005C4C B4FF                    		mov	ah, 0FFh	; -1
 13885 00005C4E 386504                  		cmp	[di+4],	ah	; [DI+BUFFINFO.buf_ID]
 13886 00005C51 74B6                    		jz	short getbuffrb_retn ; flushbuf_retn
 13887 00005C53 38C4                    		cmp	ah, al
 13888 00005C55 7406                    		jz	short DOBUFFER
 13889 00005C57 3A4504                  		cmp	al, [di+4]
 13890 00005C5A F8                      		clc
 13891 00005C5B 75AC                    		jnz	short getbuffrb_retn ; flushbuf_retn
 13892                                  
 13893                                  DOBUFFER:				; ...
 13894 00005C5D F6450540                		test	byte [di+5], 40h ; [DI+BUFFINFO.buf_flags],
 13895                                  					; buf_dirty
 13896 00005C61 74A6                    		jz	short getbuffrb_retn ; flushbuf_retn
 13897 00005C63 50                      		push	ax
 13898 00005C64 FF7504                  		push	word [di+4]	; [DI+BUFFINFO.buf_ID]
 13899 00005C67 E80B00                  		call	BUFWRITE
 13900 00005C6A 58                      		pop	ax
 13901 00005C6B 7206                    		jb	short LEAVE_BUF
 13902 00005C6D 80E4BF                  		and	ah, 0BFh	; ~buf_dirty
 13903 00005C70 894504                  		mov	[di+4],	ax
 13904                                  
 13905                                  LEAVE_BUF:				; ...
 13906 00005C73 58                      		pop	ax
 13907                                  
 13908                                  checkflush_retn:			; ...
 13909 00005C74 C3                      		retn
 13910                                  
 13911                                  ; =============== S U B	R O U T	I N E =======================================
 13912                                  
 13913                                  BUFWRITE:		; ...
 13914 00005C75 B8FF00                  		mov	ax, 0FFh
 13915 00005C78 874504                  		xchg	ax, [di+4]	; [DI+BUFFINFO.buf_ID]
 13916 00005C7B 3CFF                    		cmp	al, 0FFh
 13917 00005C7D 74F5                    		jz	short checkflush_retn
 13918 00005C7F F6C440                  		test	ah, 40h		; buf_dirty
 13919 00005C82 74F0                    		jz	short checkflush_retn
 13920 00005C84 E89500                  		call	DEC_DIRTY_COUNT
 13921 00005C87 363A06[2203]            		cmp	al, [ss:WPERR]
 13922 00005C8C 74E6                    		jz	short checkflush_retn
 13923 00005C8E 36A2[AF0D]              		mov	[ss:SC_DRIVE], al
 13924 00005C92 C46D0D                  		les	bp, [di+13]	; [DI+BUFFINFO.buf_DPB]
 13925 00005C95 8D5D14                  		lea	bx, [di+20]	; [DI+BUFINSIZ]
 13926 00005C98 8B5506                  		mov	dx, [di+6]	; [DI+BUFFINFO.buf_sector]
 13927 00005C9B 8B4D08                  		mov	cx, [di+8]	; [DI+BUFFINFO.buf_sector+2]
 13928 00005C9E 36890E[0706]            		mov	word [ss:HIGH_SECTOR], cx
 13929 00005CA3 8A4D0A                  		mov	cl, [di+10]	; [DI+BUFFINFO.buf_wrtcnt]
 13930 00005CA6 30ED                    		xor	ch, ch
 13931 00005CA8 36C606[4B03]18          		mov	byte [ss:ALLOWED], 18h ; Allowed_RETRY+Allowed_FAIL
 13932 00005CAE F6C408                  		test	ah, 8		; buf_isDATA
 13933 00005CB1 7406                    		jz	short NO_IGNORE
 13934 00005CB3 36800E[4B03]20          		or	byte [ss:ALLOWED], 20h ; Allowed_IGNORE
 13935                                  
 13936                                  NO_IGNORE:				; ...
 13937 00005CB9 8B450B                  		mov	ax, [di+11]	; [DI+BUFFINFO.buf_wrtcntinc]
 13938 00005CBC 57                      		push	di
 13939 00005CBD 31FF                    		xor	di, di
 13940 00005CBF 1E                      		push	ds
 13941 00005CC0 53                      		push	bx
 13942                                  
 13943                                  WRTAGAIN:				; ...
 13944 00005CC1 57                      		push	di
 13945 00005CC2 51                      		push	cx
 13946 00005CC3 50                      		push	ax
 13947 00005CC4 B90100                  		mov	cx, 1
 13948 00005CC7 53                      		push	bx
 13949 00005CC8 52                      		push	dx
 13950 00005CC9 1E                      		push	ds
 13951 00005CCA 36803E[7900]00          		cmp	byte [ss:BuffInHMA], 0
 13952 00005CD0 7418                    		jz	short NBUFFINHMA
 13953 00005CD2 51                      		push	cx
 13954 00005CD3 06                      		push	es
 13955 00005CD4 89DE                    		mov	si, bx
 13956 00005CD6 268B4E02                		mov	cx, [es:bp+2]	; [es:bp+DPB.SECTOR_SIZE]
 13957 00005CDA D1E9                    		shr	cx, 1
 13958 00005CDC 36C43E[7A00]            		les	di, [ss:LoMemBuff]
 13959 00005CE1 89FB                    		mov	bx, di
 13960 00005CE3 FC                      		cld
 13961 00005CE4 F3A5                    		rep movsw
 13962 00005CE6 06                      		push	es
 13963 00005CE7 1F                      		pop	ds
 13964 00005CE8 07                      		pop	es
 13965 00005CE9 59                      		pop	cx
 13966                                  
 13967                                  NBUFFINHMA:				; ...
 13968 00005CEA E8D8DB                  		call	DWRITE
 13969 00005CED 1F                      		pop	ds
 13970 00005CEE 5A                      		pop	dx
 13971 00005CEF 5B                      		pop	bx
 13972 00005CF0 58                      		pop	ax
 13973 00005CF1 59                      		pop	cx
 13974 00005CF2 5F                      		pop	di
 13975 00005CF3 7201                    		jb	short NOSET
 13976 00005CF5 47                      		inc	di
 13977                                  
 13978                                  NOSET:					; ...
 13979 00005CF6 01C2                    		add	dx, ax
 13980 00005CF8 E2C7                    		loop	WRTAGAIN
 13981 00005CFA 5B                      		pop	bx
 13982 00005CFB 1F                      		pop	ds
 13983 00005CFC 09FF                    		or	di, di
 13984 00005CFE 7501                    		jnz	short BWROK
 13985 00005D00 F9                      		stc
 13986                                  
 13987                                  BWROK:					; ...
 13988 00005D01 5F                      		pop	di
 13989 00005D02 C3                      		retn
 13990                                  
 13991                                  ; =============== S U B	R O U T	I N E =======================================
 13992                                  
 13993                                  SET_RQ_SC_PARMS:
 13994 00005D03 50                      		push	ax
 13995 00005D04 268B4602                		mov	ax, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 13996 00005D08 36A3[AD0D]              		mov	[ss:SC_SECTOR_SIZE], ax
 13997 00005D0C 268A4600                		mov	al, [es:bp+0]
 13998 00005D10 36A2[AF0D]              		mov	[ss:SC_DRIVE], al
 13999 00005D14 58                      		pop	ax
 14000 00005D15 C3                      		retn
 14001                                  
 14002                                  ; =============== S U B	R O U T	I N E =======================================
 14003                                  
 14004                                  INC_DIRTY_COUNT:
 14005 00005D16 36FF06[7100]            		inc	word [ss:DirtyBufferCount]
 14006 00005D1B C3                      		retn
 14007                                  
 14008                                  ; =============== S U B	R O U T	I N E =======================================
 14009                                  
 14010                                  DEC_DIRTY_COUNT:
 14011 00005D1C 36833E[7100]00          		cmp	word [ss:DirtyBufferCount], 0
 14012 00005D22 7405                    		jz	short ddcx
 14013 00005D24 36FF0E[7100]            		dec	word [ss:DirtyBufferCount]
 14014                                  
 14015                                  ddcx:					; ...
 14016 00005D29 C3                      		retn
 14017                                  
 14018                                  ; ---------------------------------------------------------------------------
 14019                                  
 14020                                  _$WAIT:					; ...
 14021 00005D2A 31C0                    		xor	ax, ax
 14022 00005D2C 368706[3403]            		xchg	ax, [ss:exit_code]
 14023 00005D31 E9E0A8                  		jmp	SYS_RETURN	; SYS_RET_OK
 14024                                  ; ---------------------------------------------------------------------------
 14025                                  
 14026                                  _$EXEC:					; ...
 14027 00005D34 36C606[8500]00          		mov	byte [ss:A20OFF_COUNT], 0
 14028 00005D3A 3C05                    		cmp	al, 5
 14029 00005D3C 7505                    		jnz	short Exec_@f
 14030 00005D3E 59                      		pop	cx
 14031 00005D3F B9[2704]                		mov	cx, LeaveDOS
 14032 00005D42 51                      		push	cx
 14033                                  
 14034                                  Exec_@f:				; ...
 14035 00005D43 55                      		push	bp
 14036 00005D44 89E5                    		mov	bp, sp
 14037 00005D46 83EC1D                  		sub	sp, 29
 14038 00005D49 3C05                    		cmp	al, 5
 14039 00005D4B 7614                    		jbe	short Exec_Check_2
 14040                                  
 14041                                  Exec_Bad_Fun:				; ...
 14042 00005D4D 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 14043 00005D53 B001                    		mov	al, 1		; error_invalid_function
 14044                                  
 14045                                  Exec_Ret_Err:				; ...
 14046 00005D55 89EC                    		mov	sp, bp
 14047 00005D57 5D                      		pop	bp
 14048 00005D58 E9C2A8                  		jmp	SYS_RET_ERR
 14049                                  ; ---------------------------------------------------------------------------
 14050                                  
 14051                                  ExecReadyJ:				; ...
 14052 00005D5B E84C18                  		call	ExecReady
 14053 00005D5E E90F04                  		jmp	norm_ovl
 14054                                  ; ---------------------------------------------------------------------------
 14055                                  
 14056                                  Exec_Check_2:				; ...
 14057 00005D61 3C02                    		cmp	al, 2
 14058 00005D63 74E8                    		jz	short Exec_Bad_Fun
 14059 00005D65 3C04                    		cmp	al, 4
 14060 00005D67 74E4                    		jz	short Exec_Bad_Fun
 14061 00005D69 3C05                    		cmp	al, 5
 14062 00005D6B 74EE                    		jz	short ExecReadyJ
 14063 00005D6D 895EFC                  		mov	[bp-4],	bx	; Exec_BlkL
 14064 00005D70 8C46FE                  		mov	word [bp-2], es
 14065 00005D73 8846FB                  		mov	[bp-5],	al	; Exec_Func
 14066 00005D76 C646FA00                		mov	byte [bp-6], 0 ; Exec_Load_High
 14067 00005D7A 8956E6                  		mov	[bp-26], dx	; ExecNameL
 14068 00005D7D 8C5EE8                  		mov	word [bp-24], ds ; ExecNameH
 14069 00005D80 89D6                    		mov	si, dx
 14070 00005D82 E8B6B4                  		call	DStrLen
 14071 00005D85 894EEA                  		mov	[bp-22], cx	; ExecNameLen
 14072 00005D88 36A0[0203]              		mov	al, [ss:AllocMethod]
 14073 00005D8C 36A2[8400]              		mov	[ss:ALLOCMSAVE], al
 14074 00005D90 30C0                    		xor	al, al
 14075 00005D92 55                      		push	bp
 14076 00005D93 36800E[8600]01          		or	byte [ss:DOS_FLAG], 1 ; EXECOPEN
 14077 00005D99 E84113                  		call	_$OPEN
 14078 00005D9C 9C                      		pushf
 14079 00005D9D 368026[8600]FE          		and	byte [ss:DOS_FLAG], 0FEh ; ~EXECOPEN
 14080 00005DA3 9D                      		popf
 14081 00005DA4 5D                      		pop	bp
 14082 00005DA5 72AE                    		jb	short Exec_Ret_Err
 14083 00005DA7 8946F8                  		mov	[bp-8],	ax	; Exec_FH
 14084 00005DAA 89C3                    		mov	bx, ax
 14085 00005DAC 30C0                    		xor	al, al
 14086 00005DAE E8ADC5                  		call	_$IOCTL
 14087 00005DB1 7207                    		jb	short Exec_BombJ
 14088 00005DB3 F6C280                  		test	dl, 80h		; devid_ISDEV
 14089 00005DB6 740A                    		jz	short Exec_Check_Environ
 14090 00005DB8 B002                    		mov	al, 2		; error_file_not_found
 14091                                  
 14092                                  Exec_BombJ:				; ...
 14093 00005DBA E9CC00                  		jmp	Exec_Bomb
 14094                                  ; ---------------------------------------------------------------------------
 14095                                  
 14096                                  BadEnv:					; ...
 14097 00005DBD B00A                    		mov	al, 0Ah		; error_bad_environment
 14098 00005DBF E9C700                  		jmp	Exec_Bomb
 14099                                  ; ---------------------------------------------------------------------------
 14100                                  
 14101                                  Exec_Check_Environ:			; ...
 14102 00005DC2 C746EE0000              		mov	word [bp-18], 0 ; Exec_Load_Block
 14103 00005DC7 C746F20000              		mov	word [bp-14], 0 ; Exec_Environ
 14104 00005DCC F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14105 00005DD0 7554                    		jnz	short Exec_Read_Header
 14106 00005DD2 C576FC                  		lds	si, [bp-4]	; Exec_Blk
 14107 00005DD5 8B04                    		mov	ax, [si]	; [SI+EXEC1.ENVIRON]
 14108 00005DD7 09C0                    		or	ax, ax
 14109 00005DD9 750C                    		jnz	short Exec_Scan_Env
 14110 00005DDB 368E1E[3003]            		mov	ds, [ss:CurrentPDB]
 14111 00005DE0 A12C00                  		mov	ax, [2Ch]	; [PDB.ENVIRON]
 14112 00005DE3 09C0                    		or	ax, ax
 14113 00005DE5 743F                    		jz	short Exec_Read_Header
 14114                                  
 14115                                  Exec_Scan_Env:				; ...
 14116 00005DE7 8EC0                    		mov	es, ax
 14117 00005DE9 31FF                    		xor	di, di
 14118 00005DEB B90080                  		mov	cx, 8000h
 14119 00005DEE 30C0                    		xor	al, al
 14120                                  
 14121                                  Exec_Get_Environ_Len:			; ...
 14122 00005DF0 F2AE                    		repne scasb
 14123 00005DF2 75C9                    		jnz	short BadEnv
 14124 00005DF4 49                      		dec	cx
 14125 00005DF5 78C6                    		js	short BadEnv
 14126 00005DF7 AE                      		scasb
 14127 00005DF8 75F6                    		jnz	short Exec_Get_Environ_Len
 14128 00005DFA 57                      		push	di
 14129 00005DFB 8D5D11                  		lea	bx, [di+11h]	; [DI+0Fh+2]
 14130 00005DFE 035EEA                  		add	bx, [bp-22]	; ExecNameLen
 14131 00005E01 B104                    		mov	cl, 4
 14132 00005E03 D3EB                    		shr	bx, cl
 14133 00005E05 06                      		push	es
 14134 00005E06 E85506                  		call	_$ALLOC
 14135 00005E09 1F                      		pop	ds
 14136 00005E0A 59                      		pop	cx
 14137 00005E0B 7302                    		jnb	short Exec_Save_Environ
 14138 00005E0D EB74                    		jmp	short Exec_No_Mem
 14139                                  ; ---------------------------------------------------------------------------
 14140                                  
 14141                                  Exec_Save_Environ:			; ...
 14142 00005E0F 8EC0                    		mov	es, ax
 14143 00005E11 8946F2                  		mov	[bp-14], ax	; Exec_Environ
 14144 00005E14 31F6                    		xor	si, si
 14145 00005E16 89F7                    		mov	di, si
 14146 00005E18 F3A4                    		rep movsb
 14147 00005E1A B80100                  		mov	ax, 1
 14148 00005E1D AB                      		stosw
 14149 00005E1E C576E6                  		lds	si, [bp-26]	; ExecName
 14150 00005E21 8B4EEA                  		mov	cx, [bp-22]	; ExecNameLen
 14151 00005E24 F3A4                    		rep movsb
 14152                                  
 14153                                  Exec_Read_Header:			; ...
 14154 00005E26 16                      		push	ss
 14155 00005E27 1F                      		pop	ds
 14156 00005E28 B91A00                  		mov	cx, 26		; exec_header_len
 14157 00005E2B BA[C80F]                		mov	dx, exec_signature
 14158 00005E2E 06                      		push	es
 14159 00005E2F 1E                      		push	ds
 14160 00005E30 E88C04                  		call	ExecRead
 14161 00005E33 1F                      		pop	ds
 14162 00005E34 07                      		pop	es
 14163 00005E35 7250                    		jb	short Exec_Bad_File
 14164 00005E37 09C0                    		or	ax, ax
 14165 00005E39 744C                    		jz	short Exec_Bad_File
 14166 00005E3B 83F81A                  		cmp	ax, 26		; exec_header_len
 14167 00005E3E 7519                    		jnz	short Exec_Com_Filej
 14168 00005E40 F706[D40F]FFFF          		test	word [exec_max_BSS], 0FFFFh ; -1
 14169 00005E46 7504                    		jnz	short Exec_Check_Sig
 14170 00005E48 C646FAFF                		mov	byte [bp-6], 0FFh ;	Exec_Load_High,-1
 14171                                  
 14172                                  Exec_Check_Sig:				; ...
 14173 00005E4C A1[C80F]                		mov	ax, [exec_signature]
 14174 00005E4F 3D4D5A                  		cmp	ax, 5A4Dh	; 'MZ'
 14175 00005E52 7408                    		jz	short Exec_Save_Start
 14176 00005E54 3D5A4D                  		cmp	ax, 4D5Ah	; 'ZM'
 14177 00005E57 7403                    		jz	short Exec_Save_Start
 14178                                  
 14179                                  Exec_Com_Filej:				; ...
 14180 00005E59 E9F101                  		jmp	Exec_Com_File
 14181                                  ; ---------------------------------------------------------------------------
 14182                                  
 14183                                  Exec_Save_Start:			; ...
 14184 00005E5C A1[CC0F]                		mov	ax, [exec_pages]
 14185 00005E5F B105                    		mov	cl, 5
 14186 00005E61 D3E0                    		shl	ax, cl
 14187 00005E63 2B06[D00F]              		sub	ax, [exec_par_dir]
 14188 00005E67 8946F4                  		mov	[bp-12], ax	; Exec_Res_Len_Para
 14189 00005E6A F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14190 00005E6E 7449                    		jz	short Exec_Allocate
 14191 00005E70 C47EFC                  		les	di, [bp-4]	; Exec_Blk
 14192 00005E73 268B05                  		mov	ax, [es:di]	; [ES:DI+EXEC3.load_addr]
 14193 00005E76 8946EC                  		mov	[bp-20], ax	; Exec_DMA
 14194 00005E79 268B4502                		mov	ax, [es:di+2]	; [ES:DI+EXEC3.reloc_fac]
 14195 00005E7D 8946F6                  		mov	[bp-10], ax	; Exec_Rel_Fac
 14196 00005E80 E9E300                  		jmp	Exec_Find_Res
 14197                                  ; ---------------------------------------------------------------------------
 14198                                  
 14199                                  Exec_No_Mem:				; ...
 14200 00005E83 B008                    		mov	al, 8		; error_not_enough_memory
 14201 00005E85 EB02                    		jmp	short Exec_Bomb
 14202                                  ; ---------------------------------------------------------------------------
 14203                                  
 14204                                  Exec_Bad_File:				; ...
 14205 00005E87 B00B                    		mov	al, 0Bh		; error_bad_format
 14206                                  
 14207                                  Exec_Bomb:				; ...
 14208 00005E89 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14209 00005E8C E83F04                  		call	Exec_Dealloc
 14210 00005E8F E8E4B4                  		call	LCritDisk	; call LCritMEM
 14211 00005E92 50                      		push	ax
 14212 00005E93 55                      		push	bp
 14213 00005E94 E8640A                  		call	_$CLOSE
 14214 00005E97 5D                      		pop	bp
 14215 00005E98 58                      		pop	ax
 14216 00005E99 E9B9FE                  		jmp	Exec_Ret_Err
 14217                                  ; ---------------------------------------------------------------------------
 14218                                  
 14219                                  Exec_Chk_Mem:				; ...
 14220 00005E9C 36A0[0203]              		mov	al, [ss:AllocMethod]
 14221 00005EA0 368A1E[8400]            		mov	bl, [ss:ALLOCMSAVE]
 14222 00005EA5 36881E[0203]            		mov	[ss:AllocMethod], bl
 14223 00005EAA F6C340                  		test	bl, 40h		; HIGH_ONLY
 14224 00005EAD 75D4                    		jnz	short Exec_No_Mem
 14225 00005EAF A840                    		test	al, 40h
 14226 00005EB1 74D0                    		jz	short Exec_No_Mem
 14227 00005EB3 36A1[8A00]              		mov	ax, [ss:SAVE_AX]
 14228 00005EB7 EB29                    		jmp	short Exec_Norm_Alloc
 14229                                  ; ---------------------------------------------------------------------------
 14230                                  
 14231                                  Exec_Allocate:				; ...
 14232 00005EB9 C646E300                		mov	byte [bp-29], 0 ; Exec_NoStack
 14233 00005EBD 833E[D60F]00            		cmp	word [exec_SS], 0
 14234 00005EC2 7512                    		jnz	short ea1
 14235 00005EC4 833E[D80F]00            		cmp	word [exec_SP], 0
 14236 00005EC9 750B                    		jnz	short ea1
 14237 00005ECB FE46E3                  		inc	byte [bp-29]
 14238 00005ECE 3DF00F                  		cmp	ax, 0FF0h	; 1000h-10h
 14239 00005ED1 7303                    		jnb	short ea1
 14240 00005ED3 83C010                  		add	ax, 10h
 14241                                  
 14242                                  ea1:					; ...
 14243 00005ED6 F606[0203]80            		test	byte [AllocMethod], 80h ; HIGH_FIRST
 14244 00005EDB 7405                    		jz	short Exec_Norm_Alloc
 14245 00005EDD 800E[0203]40            		or	byte [AllocMethod], 40h ; HIGH_ONLY
 14246                                  
 14247                                  Exec_Norm_Alloc:			; ...
 14248 00005EE2 A3[8A00]                		mov	[SAVE_AX], ax
 14249 00005EE5 BBFFFF                  		mov	bx, 0FFFFh
 14250 00005EE8 1E                      		push	ds
 14251 00005EE9 E87205                  		call	_$ALLOC
 14252 00005EEC 1F                      		pop	ds
 14253 00005EED A1[8A00]                		mov	ax, [SAVE_AX]
 14254 00005EF0 83C010                  		add	ax, 10h
 14255 00005EF3 83FB11                  		cmp	bx, 11h
 14256 00005EF6 72A4                    		jb	short Exec_Chk_Mem
 14257 00005EF8 39D8                    		cmp	ax, bx
 14258 00005EFA 77A0                    		ja	short Exec_Chk_Mem
 14259 00005EFC F646FAFF                		test	byte [bp-6], 0FFh ;	Exec_Load_High,-1
 14260 00005F00 7518                    		jnz	short Exec_BX_Max
 14261 00005F02 0306[D20F]              		add	ax, [exec_min_BSS]
 14262 00005F06 7294                    		jb	short Exec_Chk_Mem
 14263 00005F08 39D8                    		cmp	ax, bx
 14264 00005F0A 7790                    		ja	short Exec_Chk_Mem
 14265 00005F0C 2B06[D20F]              		sub	ax, [exec_min_BSS]
 14266 00005F10 0306[D40F]              		add	ax, [exec_max_BSS]
 14267 00005F14 7204                    		jb	short Exec_BX_Max
 14268 00005F16 39D8                    		cmp	ax, bx
 14269 00005F18 7602                    		jbe	short Exec_Got_Block
 14270                                  
 14271                                  Exec_BX_Max:				; ...
 14272 00005F1A 89D8                    		mov	ax, bx
 14273                                  
 14274                                  Exec_Got_Block:				; ...
 14275 00005F1C 1E                      		push	ds
 14276 00005F1D 89C3                    		mov	bx, ax
 14277 00005F1F 895EF0                  		mov	[bp-16], bx	; Exec_Size
 14278 00005F22 E83905                  		call	_$ALLOC
 14279 00005F25 1F                      		pop	ds
 14280 00005F26 7303                    		jnb	short ea0
 14281 00005F28 E971FF                  		jmp	Exec_Chk_Mem
 14282                                  ; ---------------------------------------------------------------------------
 14283                                  
 14284                                  ea0:					; ...
 14285 00005F2B 8A0E[8400]              		mov	cl, [ALLOCMSAVE]
 14286 00005F2F 880E[0203]              		mov	[AllocMethod], cl
 14287 00005F33 807EE300                		cmp	byte [bp-29], 0 ; Exec_NoStack
 14288 00005F37 7412                    		jz	short ea2
 14289 00005F39 81FB0010                		cmp	bx, 1000h
 14290 00005F3D 730C                    		jnb	short ea2
 14291 00005F3F B104                    		mov	cl, 4
 14292 00005F41 D3E3                    		shl	bx, cl
 14293 00005F43 81EB0001                		sub	bx, 100h
 14294 00005F47 891E[D80F]              		mov	[exec_SP], bx
 14295                                  
 14296                                  ea2:					; ...
 14297 00005F4B 8946EE                  		mov	[bp-18], ax	; Exec_Load_Block
 14298 00005F4E 83C010                  		add	ax, 10h
 14299 00005F51 F646FAFF                		test	byte [bp-6], 0FFh ;	Exec_Load_High,-1
 14300 00005F55 7409                    		jz	short Exec_Use_AX
 14301 00005F57 0346F0                  		add	ax, [bp-16]	; Exec_Size
 14302 00005F5A 2B46F4                  		sub	ax, [bp-12]	; Exec_Res_Len_Para
 14303 00005F5D 83E810                  		sub	ax, 10h
 14304                                  
 14305                                  Exec_Use_AX:				; ...
 14306 00005F60 8946F6                  		mov	[bp-10], ax	; Exec_Rel_Fac
 14307 00005F63 8946EC                  		mov	[bp-20], ax	; Exec_DMA
 14308                                  
 14309                                  Exec_Find_Res:				; ...
 14310 00005F66 8B56EC                  		mov	dx, [bp-20]	; Exec_DMA
 14311 00005F69 8956E4                  		mov	[bp-28], dx	; Exec_DMA_Save
 14312 00005F6C 8B16[D00F]              		mov	dx, [exec_par_dir]
 14313 00005F70 52                      		push	dx
 14314 00005F71 B104                    		mov	cl, 4
 14315 00005F73 D3E2                    		shl	dx, cl
 14316 00005F75 58                      		pop	ax
 14317 00005F76 B10C                    		mov	cl, 12
 14318 00005F78 D3E8                    		shr	ax, cl
 14319 00005F7A 89C1                    		mov	cx, ax
 14320 00005F7C 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14321 00005F7F 1E                      		push	ds
 14322 00005F80 30C0                    		xor	al, al
 14323 00005F82 E8F00A                  		call	_$LSEEK
 14324 00005F85 1F                      		pop	ds
 14325 00005F86 7303                    		jnb	short Exec_Big_Read
 14326 00005F88 E9FEFE                  		jmp	Exec_Bomb
 14327                                  ; ---------------------------------------------------------------------------
 14328                                  
 14329                                  Exec_Big_Read:				; ...
 14330 00005F8B 8B5EF4                  		mov	bx, [bp-12]	; Exec_Res_Len_Para
 14331 00005F8E 81FB0010                		cmp	bx, 1000h
 14332 00005F92 7203                    		jb	short Exec_Read_OK
 14333 00005F94 BBE00F                  		mov	bx, 0FE0h
 14334                                  
 14335                                  Exec_Read_OK:				; ...
 14336 00005F97 295EF4                  		sub	[bp-12], bx	; Exec_Res_Len_Para
 14337 00005F9A 53                      		push	bx
 14338 00005F9B B104                    		mov	cl, 4
 14339 00005F9D D3E3                    		shl	bx, cl
 14340 00005F9F 89D9                    		mov	cx, bx
 14341 00005FA1 1E                      		push	ds
 14342 00005FA2 8E5EEC                  		mov	ds, word [bp-20] ; Exec_DMA
 14343 00005FA5 31D2                    		xor	dx, dx
 14344 00005FA7 51                      		push	cx
 14345 00005FA8 E81403                  		call	ExecRead
 14346 00005FAB 59                      		pop	cx
 14347 00005FAC 1F                      		pop	ds
 14348 00005FAD 7248                    		jb	short Exec_Bad_FileJ
 14349 00005FAF 39C1                    		cmp	cx, ax
 14350 00005FB1 5B                      		pop	bx
 14351 00005FB2 7408                    		jz	short ExecCheckEnd
 14352 00005FB4 29C1                    		sub	cx, ax
 14353 00005FB6 81F90002                		cmp	cx, 512
 14354 00005FBA 733B                    		jnb	short Exec_Bad_FileJ
 14355                                  
 14356                                  ExecCheckEnd:				; ...
 14357 00005FBC 015EEC                  		add	[bp-20], bx	; Exec_DMA
 14358 00005FBF F746F4FFFF              		test	word [bp-0Ch], 0FFFFh ; Exec_Res_Len_Para,-1
 14359 00005FC4 75C5                    		jnz	short Exec_Big_Read
 14360 00005FC6 8B4EF6                  		mov	cx, [bp-10]	; Exec_Rel_Fac
 14361 00005FC9 A1[D60F]                		mov	ax, [exec_SS]
 14362 00005FCC 01C8                    		add	ax, cx
 14363 00005FCE A3[C20F]                		mov	[exec_init_SS], ax
 14364 00005FD1 A1[D80F]                		mov	ax, [exec_SP]
 14365 00005FD4 A3[C00F]                		mov	[exec_init_SP], ax
 14366 00005FD7 C406[DC0F]              		les	ax, [exec_IP] ; les ax,[exec_IP]
 14367 00005FDB A3[C40F]                		mov	[exec_init_IP], ax
 14368 00005FDE 8CC0                    		mov	ax, es
 14369 00005FE0 01C8                    		add	ax, cx
 14370 00005FE2 A3[C60F]                		mov	[exec_init_CS], ax
 14371 00005FE5 31C9                    		xor	cx, cx
 14372 00005FE7 8B16[E00F]              		mov	dx, [exec_rle_table]
 14373 00005FEB 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14374 00005FEE 1E                      		push	ds
 14375 00005FEF 31C0                    		xor	ax, ax
 14376 00005FF1 E8810A                  		call	_$LSEEK
 14377 00005FF4 1F                      		pop	ds
 14378 00005FF5 7303                    		jnb	short exec_get_entries
 14379                                  
 14380                                  Exec_Bad_FileJ:				; ...
 14381 00005FF7 E98DFE                  		jmp	Exec_Bad_File
 14382                                  ; ---------------------------------------------------------------------------
 14383                                  
 14384                                  exec_get_entries:			; ...
 14385 00005FFA 8B16[CE0F]              		mov	dx, [exec_rle_count]
 14386                                  
 14387                                  exec_read_reloc:			; ...
 14388 00005FFE 52                      		push	dx
 14389 00005FFF BA[BE03]                		mov	dx, OPENBUF
 14390 00006002 B98C01                  		mov	cx, 396		; ((Exec_Internal_Buffer_Size)/4)*4
 14391                                  					; (397>>2)<<2
 14392 00006005 1E                      		push	ds
 14393 00006006 E8B602                  		call	ExecRead
 14394 00006009 07                      		pop	es
 14395 0000600A 5A                      		pop	dx
 14396 0000600B 72EA                    		jb	short Exec_Bad_FileJ
 14397 0000600D B96300                  		mov	cx, 99		; (Exec_Internal_Buffer_Size)/4	; (397>>2)
 14398 00006010 BF[BE03]                		mov	di, OPENBUF ; Exec_Internal_Buffer
 14399 00006013 8B76F6                  		mov	si, [bp-10]	; Exec_Rel_Fac
 14400                                  
 14401                                  exec_reloc_one:				; ...
 14402 00006016 09D2                    		or	dx, dx
 14403 00006018 7416                    		jz	short Exec_Set_PDBJ
 14404                                  
 14405                                  exec_get_addr:
 14406 0000601A 26C51D                  		lds	bx, [es:di]
 14407 0000601D 8CD8                    		mov	ax, ds
 14408 0000601F 0346E4                  		add	ax, [bp-28]	; Exec_DMA_Save
 14409 00006022 8ED8                    		mov	ds, ax
 14410 00006024 0137                    		add	[bx], si
 14411 00006026 83C704                  		add	di, 4
 14412 00006029 4A                      		dec	dx
 14413 0000602A E2EA                    		loop	exec_reloc_one
 14414 0000602C 06                      		push	es
 14415 0000602D 1F                      		pop	ds
 14416 0000602E EBCE                    		jmp	short exec_read_reloc
 14417                                  ; ---------------------------------------------------------------------------
 14418                                  
 14419                                  Exec_Set_PDBJ:				; ...
 14420 00006030 06                      		push	es
 14421 00006031 50                      		push	ax
 14422 00006032 51                      		push	cx
 14423 00006033 8E46E4                  		mov	es, word [bp-28] ; Exec_DMA_Save
 14424 00006036 36A1[C60F]              		mov	ax, [ss:exec_init_CS]
 14425 0000603A 368B0E[C40F]            		mov	cx, [ss:exec_init_IP]
 14426                                  		;call	[ss:FixExePatch] ; call	word [ss:FixExePatch]
 14427 0000603F 36FF16[1212]            		call	word [ss:FixExePatch]
 14428 00006044 59                      		pop	cx
 14429 00006045 58                      		pop	ax
 14430 00006046 07                      		pop	es
 14431 00006047 E9DE00                  		jmp	Exec_Set_PDB
 14432                                  ; ---------------------------------------------------------------------------
 14433                                  
 14434                                  Exec_No_Memj:				; ...
 14435 0000604A E936FE                  		jmp	Exec_No_Mem
 14436                                  ; ---------------------------------------------------------------------------
 14437                                  
 14438                                  Exec_Com_File:				; ...
 14439 0000604D F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14440 00006051 742D                    		jz	short Exec_Alloc_Com_File
 14441 00006053 C576FC                  		lds	si, [bp-4]	; lds si,Exec_Blk
 14442 00006056 AD                      		lodsw
 14443 00006057 8946EC                  		mov	[bp-14h], ax	; mov Exec_DMA,ax
 14444 0000605A B8FFFF                  		mov	ax, 0FFFFh
 14445 0000605D EB63                    		jmp	short Exec_Read_Block
 14446                                  ; ---------------------------------------------------------------------------
 14447                                  
 14448                                  Exec_Chk_Com_Mem:			; ...
 14449 0000605F 36A0[0203]              		mov	al, [ss:AllocMethod]
 14450 00006063 368A1E[8400]            		mov	bl, [ss:ALLOCMSAVE]
 14451 00006068 36881E[0203]            		mov	[ss:AllocMethod], bl
 14452 0000606D F6C340                  		test	bl, 40h		; HIGH_ONLY
 14453 00006070 75D8                    		jnz	short Exec_No_Memj
 14454 00006072 A840                    		test	al, 40h
 14455 00006074 74D4                    		jz	short Exec_No_Memj
 14456 00006076 8B46EE                  		mov	ax, [bp-18]	; Exec_Load_Block
 14457 00006079 31DB                    		xor	bx, bx
 14458 0000607B E87A02                  		call	ChangeOwner
 14459 0000607E EB0E                    		jmp	short Exec_Norm_Com_Alloc
 14460                                  ; ---------------------------------------------------------------------------
 14461                                  
 14462                                  Exec_Alloc_Com_File:			; ...
 14463 00006080 36F606[0203]80          		test	byte [ss:AllocMethod], 80h ; HIGH_FIRST
 14464 00006086 7406                    		jz	short Exec_Norm_Com_Alloc
 14465 00006088 36800E[0203]40          		or	byte [ss:AllocMethod], 40h ; HIGH_ONLY
 14466                                  
 14467                                  Exec_Norm_Com_Alloc:			; ...
 14468 0000608E BBFFFF                  		mov	bx, 0FFFFh
 14469 00006091 E8CA03                  		call	_$ALLOC
 14470 00006094 09DB                    		or	bx, bx
 14471 00006096 74C7                    		jz	short Exec_Chk_Com_Mem
 14472 00006098 895EF0                  		mov	[bp-16], bx	; Exec_Size
 14473 0000609B 53                      		push	bx
 14474 0000609C E8BF03                  		call	_$ALLOC
 14475 0000609F 5B                      		pop	bx
 14476 000060A0 8946EE                  		mov	[bp-18], ax	; Exec_Load_Block
 14477 000060A3 83C010                  		add	ax, 10h
 14478 000060A6 8946EC                  		mov	[bp-20], ax	; Exec_DMA
 14479 000060A9 31C0                    		xor	ax, ax
 14480 000060AB 81FB0010                		cmp	bx, 1000h
 14481 000060AF 730E                    		jnb	short Exec_Read_Com
 14482 000060B1 89D8                    		mov	ax, bx
 14483 000060B3 B104                    		mov	cl, 4
 14484 000060B5 D3E0                    		shl	ax, cl
 14485 000060B7 3D0001                  		cmp	ax, 100h
 14486 000060BA 76A3                    		jbe	short Exec_Chk_Com_Mem
 14487 000060BC 2D0001                  		sub	ax, 100h
 14488                                  
 14489                                  Exec_Read_Com:				; ...
 14490 000060BF 2D0001                  		sub	ax, 100h
 14491                                  
 14492                                  Exec_Read_Block:			; ...
 14493 000060C2 50                      		push	ax
 14494 000060C3 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14495 000060C6 31C9                    		xor	cx, cx
 14496 000060C8 89CA                    		mov	dx, cx
 14497 000060CA 31C0                    		xor	ax, ax
 14498 000060CC E8A609                  		call	_$LSEEK
 14499 000060CF 59                      		pop	cx
 14500 000060D0 8E5EEC                  		mov	ds, word [bp-20] ; Exec_DMA
 14501 000060D3 31D2                    		xor	dx, dx
 14502 000060D5 51                      		push	cx
 14503 000060D6 E8E601                  		call	ExecRead
 14504 000060D9 5E                      		pop	si
 14505 000060DA 7303                    		jnb	short OkRead
 14506 000060DC E9A8FD                  		jmp	Exec_Bad_File
 14507                                  ; ---------------------------------------------------------------------------
 14508                                  
 14509                                  OkRead:					; ...
 14510 000060DF 39F0                    		cmp	ax, si
 14511 000060E1 7503                    		jnz	short OkRead2
 14512 000060E3 E979FF                  		jmp	Exec_Chk_Com_Mem
 14513                                  ; ---------------------------------------------------------------------------
 14514                                  
 14515                                  OkRead2:				; ...
 14516 000060E6 368A1E[8400]            		mov	bl, [ss:ALLOCMSAVE]
 14517 000060EB 36881E[0203]            		mov	[ss:AllocMethod], bl
 14518 000060F0 F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14519 000060F4 7532                    		jnz	short Exec_Set_PDB
 14520 000060F6 8B46EC                  		mov	ax, [bp-20]	; Exec_DMA
 14521 000060F9 83E810                  		sub	ax, 10h
 14522 000060FC 36A3[C60F]              		mov	[ss:exec_init_CS], ax
 14523 00006100 36C706[C40F]0001        		mov	word [ss:exec_init_IP], 100h
 14524 00006107 81C6FE00                		add	si, 0FEh
 14525 0000610B 83FEFE                  		cmp	si, 0FFFEh
 14526 0000610E 7404                    		jz	short Exec_St_Ok
 14527 00006110 81C60001                		add	si, 100h
 14528                                  
 14529                                  Exec_St_Ok:				; ...
 14530 00006114 368936[C00F]            		mov	[ss:exec_init_SP], si
 14531 00006119 36A3[C20F]              		mov	[ss:exec_init_SS], ax
 14532 0000611D 8ED8                    		mov	ds, ax
 14533 0000611F C7040000                		mov	word [si], 0
 14534                                  		;call	[ss:ChkCopyProt] ; call	word [ss:ChkCopyProt]
 14535 00006123 36FF16[6100]            		call	word [ss:ChkCopyProt]
 14536                                  
 14537                                  Exec_Set_PDB:				; ...
 14538 00006128 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14539 0000612B E8A001                  		call	Exec_Dealloc
 14540 0000612E 55                      		push	bp
 14541 0000612F E8C907                  		call	_$CLOSE
 14542 00006132 5D                      		pop	bp
 14543 00006133 E8A301                  		call	Exec_Alloc
 14544 00006136 F646FB02                		test	byte [bp-5], 2 ; Exec_Func,exec_func_overlay
 14545 0000613A 743A                    		jz	short Exec_Build_Header
 14546 0000613C E8C701                  		call	Scan_Execname
 14547 0000613F E8DB01                  		call	Scan_Special_Entries
 14548 00006142 36803E[3F10]00          		cmp	byte [ss:DriverLoad], 0
 14549 00006148 7426                    		jz	short norm_ovl
 14550 0000614A 56                      		push	si
 14551 0000614B 06                      		push	es
 14552 0000614C 36C436[4010]            		les	si, [ss:BiosDataPtr]
 14553 00006151 26803C00                		cmp	byte [es:si], 0
 14554 00006155 7411                    		jz	short sysinit_done
 14555 00006157 368E06[3003]            		mov	es, [ss:CurrentPDB]
 14556 0000615C 36FF36[BD0E]            		push	word [ss:SPECIAL_VERSION] ; push word [ss:SPECIAL_VERSION]
 14557 00006161 268F06[4000]            		pop	word [es:SFTFCB] ; pop word [es:PDB.Version]
 14558 00006166 EB06                    		jmp	short setver_done
 14559                                  ; ---------------------------------------------------------------------------
 14560                                  
 14561                                  sysinit_done:				; ...
 14562 00006168 36C606[3F10]00          		mov	byte [ss:DriverLoad], 0
 14563                                  
 14564                                  setver_done:				; ...
 14565 0000616E 07                      		pop	es
 14566 0000616F 5E                      		pop	si
 14567                                  
 14568                                  norm_ovl:				; ...
 14569 00006170 89EC                    		mov	sp, bp
 14570 00006172 5D                      		pop	bp
 14571 00006173 E99EA4                  		jmp	SYS_RETURN	; SYS_RET_OK
 14572                                  ; ---------------------------------------------------------------------------
 14573                                  
 14574                                  Exec_Build_Header:			; ...
 14575 00006176 8B56EE                  		mov	dx, [bp-18]	; Exec_Load_Block
 14576 00006179 BE0100                  		mov	si, 1		; ARENA.OWNER
 14577 0000617C 8B46F2                  		mov	ax, [bp-14]	; Exec_Environ
 14578 0000617F 09C0                    		or	ax, ax
 14579 00006181 7405                    		jz	short No_Owner
 14580 00006183 48                      		dec	ax
 14581 00006184 8ED8                    		mov	ds, ax
 14582 00006186 8914                    		mov	[si], dx
 14583                                  
 14584                                  No_Owner:				; ...
 14585 00006188 8B46EE                  		mov	ax, [bp-18]	; Exec_Load_Block
 14586 0000618B 48                      		dec	ax
 14587 0000618C 8ED8                    		mov	ds, ax
 14588 0000618E 8914                    		mov	[si], dx
 14589 00006190 1E                      		push	ds
 14590 00006191 07                      		pop	es
 14591 00006192 BF0800                  		mov	di, 8		; ARENA.NAME
 14592 00006195 E86E01                  		call	Scan_Execname
 14593 00006198 51                      		push	cx
 14594 00006199 56                      		push	si
 14595                                  
 14596                                  MoveName:				; ...
 14597 0000619A AC                      		lodsb
 14598 0000619B 3C2E                    		cmp	al, '.'         ; 2Eh
 14599 0000619D 7408                    		jz	short Mem_Done
 14600 0000619F AA                      		stosb
 14601 000061A0 83FF10                  		cmp	di, 16		; ARENAHEADERSIZE
 14602 000061A3 7302                    		jnb	short Mem_Done
 14603 000061A5 E2F3                    		loop	MoveName
 14604                                  
 14605                                  Mem_Done:				; ...
 14606 000061A7 30C0                    		xor	al, al
 14607 000061A9 83FF10                  		cmp	di, 16		; ARENAHEADERSIZE
 14608 000061AC 7301                    		jnb	short Fill8
 14609 000061AE AA                      		stosb
 14610                                  
 14611                                  Fill8:					; ...
 14612 000061AF 5E                      		pop	si
 14613 000061B0 59                      		pop	cx
 14614 000061B1 E86901                  		call	Scan_Special_Entries
 14615 000061B4 52                      		push	dx
 14616 000061B5 8B76F0                  		mov	si, [bp-16]	; Exec_Size
 14617 000061B8 01D6                    		add	si, dx
 14618 000061BA E804AF                  		call	_$DUP_PDB
 14619 000061BD 5A                      		pop	dx
 14620 000061BE FF76F2                  		push	word [bp-14] ; Exec_Environ
 14621 000061C1 268F062C00              		pop	word [es:2Ch] ; [ES:PDB.ENVIRON]
 14622 000061C6 36FF36[BD0E]            		push	word [ss:SPECIAL_VERSION]
 14623 000061CB 268F06[4000]            		pop	word [es:SFTFCB] ; [ES:PDB.Version]
 14624 000061D0 C576FC                  		lds	si, [bp-4]	; Exec_Blk
 14625 000061D3 1E                      		push	ds
 14626 000061D4 56                      		push	si
 14627 000061D5 C57406                  		lds	si, [si+6]	; [SI+EXEC0.5C_FCB]
 14628 000061D8 B90C00                  		mov	cx, 12
 14629 000061DB 51                      		push	cx
 14630 000061DC BF5C00                  		mov	di, 5Ch
 14631 000061DF 8A1C                    		mov	bl, [si]
 14632 000061E1 F3A4                    		rep movsb
 14633 000061E3 31C0                    		xor	ax, ax
 14634 000061E5 AB                      		stosw
 14635 000061E6 AB                      		stosw
 14636 000061E7 59                      		pop	cx
 14637 000061E8 5E                      		pop	si
 14638 000061E9 1F                      		pop	ds
 14639 000061EA 1E                      		push	ds
 14640 000061EB 56                      		push	si
 14641 000061EC C5740A                  		lds	si, [si+0Ah]	; [SI+EXEC0.6C_FCB]
 14642 000061EF 8A3C                    		mov	bh, [si]
 14643 000061F1 F3A4                    		rep movsb
 14644 000061F3 AB                      		stosw
 14645 000061F4 AB                      		stosw
 14646 000061F5 5E                      		pop	si
 14647 000061F6 1F                      		pop	ds
 14648 000061F7 C57402                  		lds	si, [si+2]	; [SI+EXEC0.COM_LINE]
 14649 000061FA 80C980                  		or	cl, 80h
 14650 000061FD 89CF                    		mov	di, cx
 14651 000061FF F3A4                    		rep movsb
 14652 00006201 FEC9                    		dec	cl
 14653 00006203 88F8                    		mov	al, bh
 14654 00006205 30FF                    		xor	bh, bh
 14655 00006207 E8650A                  		call	GetVisDrv
 14656 0000620A 7302                    		jnb	short Exec_BL
 14657 0000620C 88CF                    		mov	bh, cl
 14658                                  
 14659                                  Exec_BL:				; ...
 14660 0000620E 88D8                    		mov	al, bl
 14661 00006210 30DB                    		xor	bl, bl
 14662 00006212 E85A0A                  		call	GetVisDrv
 14663 00006215 7302                    		jnb	short Exec_Set_Return
 14664 00006217 88CB                    		mov	bl, cl
 14665                                  
 14666                                  Exec_Set_Return:			; ...
 14667 00006219 E889A2                  		call	Get_User_Stack
 14668 0000621C FF7414                  		push	word [si+14h] ; [SI+user_env.user_CS]
 14669 0000621F FF7412                  		push	word [si+12h] ; [SI+user_env.user_IP]
 14670 00006222 FF7414                  		push	word [si+14h] ; [SI+user_env.user_CS]
 14671 00006225 FF7412                  		push	word [si+12h] ; [SI+user_env.user_IP]
 14672 00006228 268F060A00              		pop	word [es:0Ah] ; [ES:PDB.EXIT]
 14673 0000622D 268F060C00              		pop	word [es:0Ch] ; [ES:PDB.EXIT+2]
 14674 00006232 31C0                    		xor	ax, ax
 14675 00006234 8ED8                    		mov	ds, ax
 14676 00006236 8F068800                		pop	word [88h] ; [addr_int_terminate] ; 22h*4
 14677 0000623A 8F068A00                		pop	word [8Ah] ; [addr_int_terminate+2] ; (22h*4)+2
 14678 0000623E 36C706[2C03]8000        		mov	word [ss:DMAADD], 80h
 14679 00006245 368E1E[3003]            		mov	ds, [ss:CurrentPDB]
 14680 0000624A 368C1E[2E03]            		mov	word [ss:DMAADD+2],	ds
 14681 0000624F F646FB01                		test	byte [bp-5], 1 ; Exec_Func,exec_func_no_execute
 14682 00006253 7427                    		jz	short exec_go
 14683 00006255 36C536[C00F]            		lds	si, [ss:exec_init_SP]
 14684 0000625A C47EFC                  		les	di, [bp-4]	; Exec_Blk
 14685 0000625D 268C5D10                		mov	word [es:di+10h], ds ; [ES:DI+EXEC1.SS]
 14686 00006261 4E                      		dec	si
 14687 00006262 4E                      		dec	si
 14688 00006263 891C                    		mov	[si], bx
 14689 00006265 2689750E                		mov	[es:di+0Eh], si	; [ES:DI+EXEC1.SP]
 14690 00006269 36C506[C40F]            		lds	ax, [ss:exec_init_IP]
 14691 0000626E 268C5D14                		mov	word [es:di+14h], ds ; [ES:DI+EXEC1.CS]
 14692 00006272 26894512                		mov	[es:di+12h], ax	; [ES:DI+EXEC1.IP]
 14693 00006276 89EC                    		mov	sp, bp
 14694 00006278 5D                      		pop	bp
 14695 00006279 E998A3                  		jmp	SYS_RETURN	; SYS_RET_OK
 14696                                  ; ---------------------------------------------------------------------------
 14697                                  
 14698                                  exec_go:				; ...
 14699 0000627C 36C536[C40F]            		lds	si, [ss:exec_init_IP]
 14700 00006281 36C43E[C00F]            		les	di, [ss:exec_init_SP]
 14701 00006286 8CC0                    		mov	ax, es
 14702 00006288 36803E[1112]00          		cmp	byte [ss:DosHasHMA], 0
 14703 0000628E 741A                    		jz	short Xfer_To_User
 14704 00006290 1E                      		push	ds
 14705 00006291 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 14706 00006296 800E[8600]04            		or	byte [DOS_FLAG], 4 ; EXECA20OFF
 14707 0000629B 8916[6300]              		mov	[A20OFF_PSP], dx
 14708 0000629F 8CD8                    		mov	ax, ds
 14709 000062A1 1F                      		pop	ds
 14710 000062A2 50                      		push	ax
 14711 000062A3 B8[1511]                		mov	ax, disa20_xfer
 14712 000062A6 50                      		push	ax
 14713 000062A7 8CC0                    		mov	ax, es
 14714 000062A9 CB                      		retf
 14715                                  ; ---------------------------------------------------------------------------
 14716                                  
 14717                                  Xfer_To_User:				; ...
 14718 000062AA FA                      		cli
 14719 000062AB 36C606[2103]00          		mov	byte [ss:INDOS], 0
 14720 000062B1 8ED0                    		mov	ss, ax
 14721 000062B3 89FC                    		mov	sp, di
 14722 000062B5 FB                      		sti
 14723 000062B6 1E                      		push	ds
 14724 000062B7 56                      		push	si
 14725 000062B8 8EC2                    		mov	es, dx
 14726 000062BA 8EDA                    		mov	ds, dx
 14727 000062BC 89D8                    		mov	ax, bx
 14728 000062BE CB                      		retf
 14729                                  
 14730                                  ; =============== S U B	R O U T	I N E =======================================
 14731                                  
 14732                                  ExecRead:		; ...
 14733 000062BF E80C00                  		call	Exec_Dealloc
 14734 000062C2 8B5EF8                  		mov	bx, [bp-8]	; Exec_FH
 14735 000062C5 55                      		push	bp
 14736 000062C6 E84107                  		call	_$READ
 14737 000062C9 5D                      		pop	bp
 14738 000062CA E80C00                  		call	Exec_Alloc
 14739 000062CD C3                      		retn
 14740                                  
 14741                                  ; =============== S U B	R O U T	I N E =======================================
 14742                                  
 14743                                  Exec_Dealloc:	; ...
 14744 000062CE 53                      		push	bx
 14745 000062CF 29DB                    		sub	bx, bx
 14746 000062D1 E882B0                  		call	ECritDisk	; call ECritMEM
 14747 000062D4 E81000                  		call	ChangeOwners
 14748 000062D7 5B                      		pop	bx
 14749 000062D8 C3                      		retn
 14750                                  
 14751                                  ; =============== S U B	R O U T	I N E =======================================
 14752                                  
 14753                                  Exec_Alloc:		; ...
 14754 000062D9 53                      		push	bx
 14755 000062DA 368B1E[3003]            		mov	bx, [ss:CurrentPDB]
 14756 000062DF E80500                  		call	ChangeOwners
 14757 000062E2 E891B0                  		call	LCritDisk	; call LCritMEM
 14758 000062E5 5B                      		pop	bx
 14759 000062E6 C3                      		retn
 14760                                  
 14761                                  ; =============== S U B	R O U T	I N E =======================================
 14762                                  
 14763                                  ChangeOwners:	; ...
 14764 000062E7 9C                      		pushf
 14765 000062E8 50                      		push	ax
 14766 000062E9 8B46F2                  		mov	ax, [bp-14]	; Exec_Environ
 14767 000062EC E80900                  		call	ChangeOwner
 14768 000062EF 8B46EE                  		mov	ax, [bp-18]	; Exec_Load_Block
 14769 000062F2 E80300                  		call	ChangeOwner
 14770 000062F5 58                      		pop	ax
 14771 000062F6 9D                      		popf
 14772                                  
 14773                                  chgown_retn:				; ...
 14774 000062F7 C3                      		retn
 14775                                  
 14776                                  ; =============== S U B	R O U T	I N E =======================================
 14777                                  
 14778                                  ChangeOwner:	; ...
 14779 000062F8 09C0                    		or	ax, ax
 14780 000062FA 74FB                    		jz	short chgown_retn
 14781 000062FC 48                      		dec	ax
 14782 000062FD 1E                      		push	ds
 14783 000062FE 8ED8                    		mov	ds, ax
 14784 00006300 891E0100                		mov	[1],	bx	; [ARENA.OWNER]
 14785 00006304 1F                      		pop	ds
 14786 00006305 C3                      		retn
 14787                                  
 14788                                  ; =============== S U B	R O U T	I N E =======================================
 14789                                  
 14790                                  Scan_Execname:	; ...
 14791 00006306 C576E6                  		lds	si, [bp-26]	; ExecName
 14792                                  
 14793                                  Save_Begin:				; ...
 14794 00006309 89F1                    		mov	cx, si
 14795                                  
 14796                                  Scan0:					; ...
 14797 0000630B AC                      		lodsb
 14798 0000630C 3C3A                    		cmp	al, ':'         ; 3Ah
 14799 0000630E 74F9                    		jz	short Save_Begin
 14800 00006310 3C5C                    		cmp	al, '\'         ; 5Ch
 14801 00006312 74F5                    		jz	short Save_Begin
 14802 00006314 3C00                    		cmp	al, 0
 14803 00006316 75F3                    		jnz	short Scan0
 14804 00006318 29CE                    		sub	si, cx
 14805 0000631A 87F1                    		xchg	si, cx
 14806 0000631C C3                      		retn
 14807                                  
 14808                                  ; =============== S U B	R O U T	I N E =======================================
 14809                                  
 14810                                  Scan_Special_Entries: ; ...
 14811 0000631D 49                      		dec	cx
 14812 0000631E 36C706[BD0E]0500        		mov	word [ss:SPECIAL_VERSION], 5
 14813 00006325 36C43E[5D00]            		les	di, [ss:UU_IFS_DOS_CALL]
 14814 0000632A 8CC0                    		mov	ax, es
 14815 0000632C 09F8                    		or	ax, di
 14816 0000632E 743A                    		jz	short End_List
 14817                                  
 14818                                  GetEntries:				; ...
 14819 00006330 268A05                  		mov	al, [es:di]
 14820 00006333 08C0                    		or	al, al
 14821 00006335 7433                    		jz	short End_List
 14822 00006337 36893E[0E06]            		mov	[ss:TEMP_VAR2],	di
 14823 0000633C 38C8                    		cmp	al, cl
 14824 0000633E 751C                    		jnz	short SkipOne
 14825 00006340 47                      		inc	di
 14826 00006341 51                      		push	cx
 14827 00006342 56                      		push	si
 14828 00006343 50                      		push	ax
 14829                                  
 14830                                  sse_next_char:				; ...
 14831 00006344 AC                      		lodsb
 14832 00006345 E89EEE                  		call	UCase
 14833 00006348 AE                      		scasb
 14834 00006349 750E                    		jnz	short Not_Matched
 14835 0000634B E2F7                    		loop	sse_next_char
 14836 0000634D 58                      		pop	ax
 14837 0000634E 268B05                  		mov	ax, [es:di]
 14838 00006351 36A3[BD0E]              		mov	[ss:SPECIAL_VERSION], ax
 14839 00006355 5E                      		pop	si
 14840 00006356 59                      		pop	cx
 14841 00006357 EB11                    		jmp	short End_List
 14842                                  ; ---------------------------------------------------------------------------
 14843                                  
 14844                                  Not_Matched:				; ...
 14845 00006359 58                      		pop	ax
 14846 0000635A 5E                      		pop	si
 14847 0000635B 59                      		pop	cx
 14848                                  
 14849                                  SkipOne:				; ...
 14850 0000635C 368B3E[0E06]            		mov	di, [ss:TEMP_VAR2]
 14851 00006361 30E4                    		xor	ah, ah
 14852 00006363 01C7                    		add	di, ax
 14853 00006365 83C703                  		add	di, 3
 14854 00006368 EBC6                    		jmp	short GetEntries
 14855                                  ; ---------------------------------------------------------------------------
 14856                                  
 14857                                  End_List:				; ...
 14858 0000636A C3                      		retn
 14859                                  
 14860                                  ; ---------------------------------------------------------------------------
 14861                                  
 14862                                  _$KEEP_PROCESS:				; ...
 14863 0000636B 50                      		push	ax
 14864 0000636C 36C606[7C05]03          		mov	byte [ss:EXIT_TYPE], 3 ; EXIT_KEEP_PROCESS
 14865 00006372 368E06[3003]            		mov	es, [ss:CurrentPDB]
 14866 00006377 83FA06                  		cmp	dx, 6
 14867 0000637A 7303                    		jnb	short Keep_Shrink
 14868 0000637C BA0600                  		mov	dx, 6
 14869                                  
 14870                                  Keep_Shrink:				; ...
 14871 0000637F 89D3                    		mov	bx, dx
 14872 00006381 53                      		push	bx
 14873 00006382 06                      		push	es
 14874 00006383 E83902                  		call	_$SETBLOCK
 14875 00006386 1F                      		pop	ds
 14876 00006387 5B                      		pop	bx
 14877 00006388 7207                    		jb	short Keep_Done
 14878 0000638A 8CD8                    		mov	ax, ds
 14879 0000638C 01D8                    		add	ax, bx
 14880 0000638E A30200                  		mov	[2], ax	; [PDB.BLOCK_LEN]
 14881                                  
 14882                                  Keep_Done:				; ...
 14883 00006391 58                      		pop	ax
 14884 00006392 EB26                    		jmp	short exit_inner
 14885                                  ; ---------------------------------------------------------------------------
 14886                                  
 14887                                  STAY_RESIDENT:				; ...
 14888 00006394 B80031                  		mov	ax, 3100h	; (KEEP_PROCESS<<8)+0
 14889 00006397 83C20F                  		add	dx, 15
 14890 0000639A D1DA                    		rcr	dx, 1
 14891 0000639C B103                    		mov	cl, 3
 14892 0000639E D3EA                    		shr	dx, cl
 14893 000063A0 E9789F                  		jmp	COMMAND
 14894                                  ; ---------------------------------------------------------------------------
 14895                                  
 14896                                  _$EXIT:					; ...
 14897 000063A3 30E4                    		xor	ah, ah
 14898 000063A5 368626[4D03]            		xchg	ah, [ss:DidCTRLC]
 14899 000063AA 08E4                    		or	ah, ah
 14900 000063AC 36C606[7C05]00          		mov	byte [ss:EXIT_TYPE], 0 ; EXIT_TERMINATE
 14901 000063B2 7406                    		jz	short exit_inner
 14902 000063B4 36C606[7C05]01          		mov	byte [ss:EXIT_TYPE], 1 ; EXIT_CTRL_C
 14903                                  
 14904                                  exit_inner:				; ...
 14905 000063BA E8E8A0                  		call	Get_User_Stack
 14906 000063BD 36FF36[3003]            		push	word [ss:CurrentPDB]
 14907 000063C2 8F4414                  		pop	word [si+14h] ; [SI+user_env.user_CS]
 14908 000063C5 EB08                    		jmp	short abort_inner
 14909                                  ; ---------------------------------------------------------------------------
 14910                                  
 14911                                  _$ABORT:				; ...
 14912 000063C7 30C0                    		xor	al, al
 14913 000063C9 36C606[7C05]00          		mov	byte [ss:EXIT_TYPE], 0 ; EXIT_ABORT
 14914                                  
 14915                                  abort_inner:				; ...
 14916 000063CF 368A26[7C05]            		mov	ah, [ss:EXIT_TYPE]
 14917 000063D4 36A3[3403]              		mov	[ss:exit_code],	ax
 14918 000063D8 E8CAA0                  		call	Get_User_Stack
 14919 000063DB 8E5C14                  		mov	ds, word [si+14h] ; [SI+user_env.user_CS]
 14920 000063DE 31C0                    		xor	ax, ax
 14921 000063E0 8EC0                    		mov	es, ax
 14922 000063E2 BE0A00                  		mov	si, 10		; SAVEXIT
 14923 000063E5 BF8800                  		mov	di, 88h		; addr_int_terminate
 14924 000063E8 A5                      		movsw
 14925 000063E9 A5                      		movsw
 14926 000063EA A5                      		movsw
 14927 000063EB A5                      		movsw
 14928 000063EC A5                      		movsw
 14929 000063ED A5                      		movsw
 14930 000063EE E916F2                  		jmp	reset_environment
 14931                                  ; ---------------------------------------------------------------------------
 14932                                  
 14933                                  RetExePatch:				; ...
 14934 000063F1 C3                      		retn
 14935                                  
 14936                                  ; =============== S U B	R O U T	I N E =======================================
 14937                                  
 14938                                  arena_free_process:	; ...
 14939 000063F2 36A1[2400]              		mov	ax, [ss:arena_head]
 14940                                  
 14941                                  arena_free_process_start:		; ...
 14942 000063F6 BF0000                  		mov	di, 0		; ARENA.SIGNATURE
 14943 000063F9 E83000                  		call	check_signature
 14944                                  
 14945                                  arena_free_process_loop:		; ...
 14946 000063FC 723D                    		jb	short AFP_RETN
 14947 000063FE 06                      		push	es
 14948 000063FF 1F                      		pop	ds
 14949 00006400 391E0100                		cmp	[1],	bx	; [ARENA.OWNER]
 14950 00006404 7504                    		jnz	short arena_free_next
 14951 00006406 893E0100                		mov	[1],	di
 14952                                  
 14953                                  arena_free_next:			; ...
 14954 0000640A 803D5A                  		cmp	byte [di], 5Ah ; 'Z' ; arena_signature_end
 14955 0000640D 7405                    		jz	short arena_chk_umbs
 14956 0000640F E81300                  		call	arena_next
 14957 00006412 EBE8                    		jmp	short arena_free_process_loop
 14958                                  ; ---------------------------------------------------------------------------
 14959                                  
 14960                                  arena_chk_umbs:				; ...
 14961 00006414 36A1[8C00]              		mov	ax, [ss:UMB_HEAD]
 14962 00006418 83F8FF                  		cmp	ax, 0FFFFh
 14963 0000641B 741E                    		jz	short AFP_RETN
 14964 0000641D 8CDF                    		mov	di, ds
 14965 0000641F 39C7                    		cmp	di, ax
 14966 00006421 7318                    		jnb	short AFP_RETN
 14967 00006423 EBD1                    		jmp	short arena_free_process_start
 14968                                  
 14969                                  ; ---------------------------------------------------------------------------
 14970                                  
 14971                                  arena_next:				; ...
 14972 00006425 8CD8                    		mov	ax, ds
 14973 00006427 03060300                		add	ax, [3]	; [ARENA.SIZE]
 14974 0000642B 40                      		inc	ax
 14975                                  
 14976                                  ; =============== S U B	R O U T	I N E =======================================
 14977                                  
 14978                                  check_signature:
 14979 0000642C 8EC0                    		mov	es, ax
 14980 0000642E 26803D4D                		cmp	byte [es:di], 4Dh ;	'M' ; arena_signature_normal
 14981 00006432 7407                    		jz	short AFP_RETN
 14982 00006434 26803D5A                		cmp	byte [es:di], 5Ah ;	'Z' ; arena_signature_end
 14983 00006438 7401                    		jz	short AFP_RETN
 14984 0000643A F9                      		stc
 14985                                  
 14986                                  AFP_RETN:				; ...
 14987 0000643B C3                      		retn			; COALESCE_RETN
 14988                                  
 14989                                  ; =============== S U B	R O U T	I N E =======================================
 14990                                  
 14991                                  Coalesce:		; ...
 14992 0000643C 803D5A                  		cmp	byte [di], 5Ah ; 'Z' ; arena_signature_end
 14993 0000643F 74FA                    		jz	short AFP_RETN	; COALESCE_RETN
 14994 00006441 E8E1FF                  		call	arena_next
 14995 00006444 72F5                    		jb	short AFP_RETN	; COALESCE_RETN
 14996 00006446 26393E0100              		cmp	[es:1],	di	; [ES:ARENA.OWNER]
 14997 0000644B 75EE                    		jnz	short AFP_RETN	; COALESCE_RETN
 14998 0000644D 268B0E0300              		mov	cx, [es:3]	; [ES:ARENA.SIZE]
 14999 00006452 41                      		inc	cx
 15000 00006453 010E0300                		add	[3], cx		; [ARENA.SIZE]
 15001 00006457 268A0D                  		mov	cl, [es:di]
 15002 0000645A 880D                    		mov	[di], cl
 15003 0000645C EBDE                    		jmp	short Coalesce
 15004                                  
 15005                                  ; ---------------------------------------------------------------------------
 15006                                  
 15007                                  _$ALLOC:				; ...
 15008 0000645E E8F5AE                  		call	ECritDisk	; call ECritMEM
 15009 00006461 36A1[2400]              		mov	ax, [ss:arena_head]
 15010 00006465 36A3[8E00]              		mov	[ss:START_ARENA], ax
 15011 00006469 36F606[0203]C0          		test	byte [ss:AllocMethod], 0C0h ; HIGH_FIRST+HIGH_ONLY
 15012 0000646F 7410                    		jz	short norm_alloc
 15013 00006471 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15014 00006477 7408                    		jz	short norm_alloc
 15015 00006479 36A1[8C00]              		mov	ax, [ss:UMB_HEAD]
 15016 0000647D 36A3[8E00]              		mov	[ss:START_ARENA], ax
 15017                                  
 15018                                  norm_alloc:				; ...
 15019 00006481 31C0                    		xor	ax, ax
 15020 00006483 89C7                    		mov	di, ax
 15021 00006485 36A3[4003]              		mov	[ss:FirstArena], ax
 15022 00006489 36A3[4203]              		mov	[ss:BestArena],	ax
 15023 0000648D 36A3[4403]              		mov	[ss:LastArena],	ax
 15024 00006491 50                      		push	ax
 15025                                  
 15026                                  start_scan:				; ...
 15027 00006492 36A1[8E00]              		mov	ax, [ss:START_ARENA]
 15028 00006496 E893FF                  		call	check_signature
 15029 00006499 7236                    		jb	short alloc_err
 15030                                  
 15031                                  alloc_scan:				; ...
 15032 0000649B 06                      		push	es
 15033 0000649C 1F                      		pop	ds
 15034 0000649D 393E0100                		cmp	[1], di		; [ARENA.OWNER]
 15035 000064A1 7469                    		jz	short alloc_free
 15036                                  
 15037                                  alloc_next:				; ...
 15038 000064A3 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15039 000064A9 741C                    		jz	short norm_strat
 15040 000064AB 36F606[0203]80          		test	byte [ss:AllocMethod], 80h ; HIGH_FIRST
 15041 000064B1 7414                    		jz	short norm_strat
 15042 000064B3 36A1[8E00]              		mov	ax, [ss:START_ARENA]
 15043 000064B7 363B06[2400]            		cmp	ax, [ss:arena_head]
 15044 000064BC 7509                    		jnz	short norm_strat
 15045 000064BE 8CD8                    		mov	ax, ds
 15046 000064C0 363B06[8C00]            		cmp	ax, [ss:UMB_HEAD]
 15047 000064C5 EB03                    		jmp	short alloc_chk_end
 15048                                  ; ---------------------------------------------------------------------------
 15049                                  
 15050                                  norm_strat:				; ...
 15051 000064C7 803D5A                  		cmp	byte [di], 5Ah ; 'Z' ; arena_signature_end
 15052                                  
 15053                                  alloc_chk_end:				; ...
 15054 000064CA 740E                    		jz	short alloc_end
 15055 000064CC E856FF                  		call	arena_next
 15056 000064CF 73CA                    		jnb	short alloc_scan
 15057                                  
 15058                                  alloc_err:				; ...
 15059 000064D1 58                      		pop	ax
 15060                                  ; START	OF FUNCTION CHUNK FOR _$SETBLOCK
 15061                                  
 15062                                  alloc_trashed:				; ...
 15063 000064D2 E8A1AE                  		call	LCritDisk	; call LCritMEM
 15064 000064D5 B007                    		mov	al, 7		; error_arena_trashed
 15065                                  
 15066                                  alloc_errj:				; ...
 15067 000064D7 E943A1                  		jmp	SYS_RET_ERR
 15068                                  ; END OF FUNCTION CHUNK	FOR _$SETBLOCK
 15069                                  ; ---------------------------------------------------------------------------
 15070                                  
 15071                                  alloc_end:				; ...
 15072 000064DA 36833E[4003]00          		cmp	word [ss:FirstArena], 0
 15073 000064E0 7403                    		jz	short alloc_chk
 15074 000064E2 E98400                  		jmp	alloc_do_split
 15075                                  ; ---------------------------------------------------------------------------
 15076                                  
 15077                                  alloc_chk:				; ...
 15078 000064E5 36A1[2400]              		mov	ax, [ss:arena_head]
 15079 000064E9 363B06[8E00]            		cmp	ax, [ss:START_ARENA]
 15080 000064EE 740E                    		jz	short alloc_fail
 15081 000064F0 36F606[0203]40          		test	byte [ss:AllocMethod], 40h ; HIGH_ONLY
 15082 000064F6 7506                    		jnz	short alloc_fail
 15083 000064F8 36A3[8E00]              		mov	[ss:START_ARENA], ax
 15084 000064FC EB94                    		jmp	short start_scan
 15085                                  ; ---------------------------------------------------------------------------
 15086                                  ; START	OF FUNCTION CHUNK FOR _$SETBLOCK
 15087                                  
 15088                                  alloc_fail:				; ...
 15089 000064FE E8A49F                  		call	Get_User_Stack
 15090 00006501 5B                      		pop	bx
 15091 00006502 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
 15092 00006505 E86EAE                  		call	LCritDisk	; call LCritMEM
 15093 00006508 B008                    		mov	al, 8		; error_not_enough_memory
 15094 0000650A EBCB                    		jmp	short alloc_errj
 15095                                  ; END OF FUNCTION CHUNK	FOR _$SETBLOCK
 15096                                  ; ---------------------------------------------------------------------------
 15097                                  
 15098                                  alloc_free:				; ...
 15099 0000650C E82DFF                  		call	Coalesce
 15100 0000650F 72C0                    		jb	short alloc_err
 15101 00006511 8B0E0300                		mov	cx, [3]	; [ARENA.SIZE]
 15102 00006515 5A                      		pop	dx
 15103 00006516 39D1                    		cmp	cx, dx
 15104 00006518 7602                    		jbe	short alloc_test
 15105 0000651A 89CA                    		mov	dx, cx
 15106                                  
 15107                                  alloc_test:				; ...
 15108 0000651C 52                      		push	dx
 15109 0000651D 39CB                    		cmp	bx, cx
 15110 0000651F 7782                    		ja	short alloc_next
 15111 00006521 36833E[4003]00          		cmp	word [ss:FirstArena], 0
 15112 00006527 7505                    		jnz	short alloc_best
 15113 00006529 368C1E[4003]            		mov	[ss:FirstArena], ds
 15114                                  
 15115                                  alloc_best:				; ...
 15116 0000652E 36833E[4203]00          		cmp	word [ss:BestArena], 0
 15117 00006534 740E                    		jz	short alloc_make_best
 15118 00006536 06                      		push	es
 15119 00006537 368E06[4203]            		mov	es, [ss:BestArena]
 15120 0000653C 26390E0300              		cmp	[es:3],	cx	; [ES:ARENA.SIZE]
 15121 00006541 07                      		pop	es
 15122 00006542 7605                    		jbe	short alloc_last
 15123                                  
 15124                                  alloc_make_best:			; ...
 15125 00006544 368C1E[4203]            		mov	[ss:BestArena],	ds
 15126                                  
 15127                                  alloc_last:				; ...
 15128 00006549 368C1E[4403]            		mov	[ss:LastArena],	ds
 15129 0000654E E952FF                  		jmp	alloc_next
 15130                                  ; ---------------------------------------------------------------------------
 15131                                  
 15132                                  alloc_do_split_high:			; ...
 15133 00006551 368E1E[4403]            		mov	ds, [ss:LastArena]
 15134 00006556 8B0E0300                		mov	cx, [3]	; [ARENA.SIZE]
 15135 0000655A 29D9                    		sub	cx, bx
 15136 0000655C 8CDA                    		mov	dx, ds
 15137 0000655E 744C                    		jz	short alloc_set_owner
 15138 00006560 01CA                    		add	dx, cx
 15139 00006562 8EC2                    		mov	es, dx
 15140 00006564 49                      		dec	cx
 15141 00006565 87D9                    		xchg	bx, cx
 15142 00006567 EB2E                    		jmp	short alloc_set_sizes
 15143                                  ; ---------------------------------------------------------------------------
 15144                                  
 15145                                  alloc_do_split:				; ...
 15146 00006569 31C9                    		xor	cx, cx
 15147 0000656B 368A0E[0203]            		mov	cl, [ss:AllocMethod]
 15148 00006570 81E13FFF                		and	cx, 0FF3Fh	; STRAT_MASK
 15149 00006574 83F901                  		cmp	cx, 1		; BEST_FIT
 15150 00006577 77D8                    		ja	short alloc_do_split_high
 15151 00006579 368E1E[4003]            		mov	ds, [ss:FirstArena]
 15152 0000657E 7205                    		jb	short alloc_get_size
 15153 00006580 368E1E[4203]            		mov	ds, [ss:BestArena]
 15154                                  ; START	OF FUNCTION CHUNK FOR _$SETBLOCK
 15155                                  
 15156                                  alloc_get_size:				; ...
 15157 00006585 8B0E0300                		mov	cx, [3]	; [ARENA.SIZE]
 15158 00006589 29D9                    		sub	cx, bx
 15159 0000658B 8CD8                    		mov	ax, ds
 15160 0000658D 89C2                    		mov	dx, ax
 15161 0000658F 741B                    		jz	short alloc_set_owner
 15162 00006591 01D8                    		add	ax, bx
 15163 00006593 40                      		inc	ax
 15164 00006594 8EC0                    		mov	es, ax
 15165 00006596 49                      		dec	cx
 15166                                  
 15167                                  alloc_set_sizes:			; ...
 15168 00006597 891E0300                		mov	[3],	bx	; [ARENA.SIZE]
 15169 0000659B 26890E0300              		mov	[es:3],	cx	; [ES:ARENA.SIZE]
 15170 000065A0 B34D                    		mov	bl, 4Dh	; 'M'   ; arena_signature_normal
 15171 000065A2 861D                    		xchg	bl, [di]
 15172 000065A4 26881D                  		mov	[es:di], bl
 15173 000065A7 26893E0100              		mov	[es:1],	di	; [ES:ARENA.OWNER]
 15174                                  
 15175                                  alloc_set_owner:			; ...
 15176 000065AC 8EDA                    		mov	ds, dx
 15177 000065AE 36A1[3003]              		mov	ax, [ss:CurrentPDB]
 15178 000065B2 A30100                  		mov	[1],	ax	; [ARENA.OWNER]
 15179 000065B5 8CD8                    		mov	ax, ds
 15180 000065B7 40                      		inc	ax
 15181 000065B8 5B                      		pop	bx
 15182 000065B9 E8BAAD                  		call	LCritDisk	; call LCritMEM
 15183                                  
 15184                                  alloc_ok:				; ...
 15185 000065BC E955A0                  		jmp	SYS_RETURN	; SYS_RET_OK
 15186                                  ; END OF FUNCTION CHUNK	FOR _$SETBLOCK
 15187                                  
 15188                                  ; =============== S U B	R O U T	I N E =======================================
 15189                                  
 15190                                  _$SETBLOCK:		; ...
 15191                                  
 15192                                  ; FUNCTION CHUNK AT A2A2 SIZE 00000008 BYTES
 15193                                  ; FUNCTION CHUNK AT A2CE SIZE 0000000E BYTES
 15194                                  ; FUNCTION CHUNK AT A355 SIZE 0000003A BYTES
 15195                                  
 15196 000065BF E894AD                  		call	ECritDisk	; call ECritMEM
 15197 000065C2 BF0000                  		mov	di, 0		; ARENA.SIGNATURE
 15198 000065C5 8CC0                    		mov	ax, es
 15199 000065C7 48                      		dec	ax
 15200 000065C8 E861FE                  		call	check_signature
 15201 000065CB 7303                    		jnb	short setblock_grab
 15202                                  
 15203                                  setblock_bad:				; ...
 15204 000065CD E902FF                  		jmp	alloc_trashed
 15205                                  ; ---------------------------------------------------------------------------
 15206                                  
 15207                                  setblock_grab:				; ...
 15208 000065D0 8ED8                    		mov	ds, ax
 15209 000065D2 E867FE                  		call	Coalesce
 15210 000065D5 72F6                    		jb	short setblock_bad
 15211 000065D7 8B0E0300                		mov	cx, [3]	; [ARENA.SIZE]
 15212 000065DB 51                      		push	cx
 15213 000065DC 39CB                    		cmp	bx, cx
 15214 000065DE 76A5                    		jbe	short alloc_get_size
 15215 000065E0 E91BFF                  		jmp	alloc_fail
 15216                                  
 15217                                  ; =============== S U B	R O U T	I N E =======================================
 15218                                  
 15219                                  _$DEALLOC:		; ...
 15220 000065E3 E870AD                  		call	ECritDisk	; call ECritMEM
 15221 000065E6 36F606[8600]04          		test	byte [ss:DOS_FLAG], 4 ; EXECA20OFF
 15222 000065EC 740E                    		jz	short deallocate
 15223 000065EE 36803E[8500]00          		cmp	byte [ss:A20OFF_COUNT], 0
 15224 000065F4 7506                    		jnz	short deallocate
 15225 000065F6 36C606[8500]01          		mov	byte [ss:A20OFF_COUNT], 1
 15226                                  
 15227                                  deallocate:				; ...
 15228 000065FC BF0000                  		mov	di, 0		; ARENA.SIGNATURE
 15229 000065FF 8CC0                    		mov	ax, es
 15230 00006601 48                      		dec	ax
 15231 00006602 E827FE                  		call	check_signature
 15232 00006605 720A                    		jb	short dealloc_err
 15233 00006607 26893E0100              		mov	[es:1],	di	; [ES:ARENA.OWNER]
 15234 0000660C E867AD                  		call	LCritDisk	; call LCritMEM
 15235                                  
 15236                                  dealloc_ok:				; ...
 15237 0000660F EBAB                    		jmp	short alloc_ok
 15238                                  ; ---------------------------------------------------------------------------
 15239                                  
 15240                                  dealloc_err:				; ...
 15241 00006611 E862AD                  		call	LCritDisk	; call LCritMEM
 15242 00006614 B009                    		mov	al, 9		; error_invalid_block
 15243                                  
 15244                                  dealloc_errj:				; ...
 15245 00006616 E904A0                  		jmp	SYS_RET_ERR
 15246                                  
 15247                                  ; ---------------------------------------------------------------------------
 15248                                  
 15249                                  _$ALLOCOPER:				; ...
 15250 00006619 08C0                    		or	al, al
 15251 0000661B 7420                    		jz	short AllocGetStrat
 15252 0000661D 3C01                    		cmp	al, 1
 15253 0000661F 7424                    		jz	short AllocSetStrat
 15254 00006621 3C02                    		cmp	al, 2
 15255 00006623 7432                    		jz	short AllocGetLink
 15256 00006625 3C03                    		cmp	al, 3
 15257 00006627 7436                    		jz	short AllocSetLink
 15258                                  
 15259                                  AllocOperError:				; ...
 15260 00006629 36C606[2303]05          		mov	byte [ss:EXTERR_LOCUS], 5 ; errLOC_Mem
 15261 0000662F B001                    		mov	al, 1		; error_invalid_function
 15262                                  
 15263                                  AllocOperErrj:				; ...
 15264 00006631 EBE3                    		jmp	short dealloc_errj
 15265                                  ; ---------------------------------------------------------------------------
 15266                                  
 15267                                  AllocArenaError:			; ...
 15268 00006633 36C606[2303]05          		mov	byte [ss:EXTERR_LOCUS], 5 ; errLOC_Mem
 15269 00006639 B007                    		mov	al, 7		; error_arena_trashed
 15270 0000663B EBF4                    		jmp	short AllocOperErrj
 15271                                  ; ---------------------------------------------------------------------------
 15272                                  
 15273                                  AllocGetStrat:				; ...
 15274 0000663D 36A0[0203]              		mov	al, [ss:AllocMethod]
 15275 00006641 30E4                    		xor	ah, ah
 15276                                  
 15277                                  AllocOperOk:				; ...
 15278 00006643 EBCA                    		jmp	short dealloc_ok
 15279                                  ; ---------------------------------------------------------------------------
 15280                                  
 15281                                  AllocSetStrat:				; ...
 15282 00006645 53                      		push	bx
 15283 00006646 81E33FFF                		and	bx, 0FF3Fh
 15284 0000664A 83FB02                  		cmp	bx, 2
 15285 0000664D 5B                      		pop	bx
 15286 0000664E 77D9                    		ja	short AllocOperError
 15287 00006650 36881E[0203]            		mov	[ss:AllocMethod], bl
 15288                                  
 15289                                  AllocOperOkj:				; ...
 15290 00006655 EBEC                    		jmp	short AllocOperOk
 15291                                  ; ---------------------------------------------------------------------------
 15292                                  
 15293                                  AllocGetLink:				; ...
 15294 00006657 36A0[8900]              		mov	al, [ss:UMBFLAG]
 15295 0000665B 2401                    		and	al, 1		; LINKSTATE
 15296                                  
 15297                                  AllocOperOkj2:				; ...
 15298 0000665D EBF6                    		jmp	short AllocOperOkj
 15299                                  ; ---------------------------------------------------------------------------
 15300                                  
 15301                                  AllocSetLink:				; ...
 15302 0000665F 368B0E[8C00]            		mov	cx, [ss:UMB_HEAD]
 15303 00006664 83F9FF                  		cmp	cx, 0FFFFh
 15304 00006667 74C0                    		jz	short AllocOperError
 15305 00006669 83FB01                  		cmp	bx, 1
 15306 0000666C 7204                    		jb	short UnlinkUmbs
 15307 0000666E 741C                    		jz	short LinkUmbs
 15308 00006670 EBB7                    		jmp	short AllocOperError
 15309                                  ; ---------------------------------------------------------------------------
 15310                                  
 15311                                  UnlinkUmbs:				; ...
 15312 00006672 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15313 00006678 7410                    		jz	short unlinked
 15314 0000667A E82900                  		call	GetLastArena
 15315 0000667D 72B4                    		jb	short AllocArenaError
 15316 0000667F C60600005A              		mov	byte [0], 5Ah ; 'Z' ; arena_signature_end
 15317 00006684 368026[8900]FE          		and	byte [ss:UMBFLAG], 0FEh ; ~LINKSTATE
 15318                                  
 15319                                  unlinked:				; ...
 15320 0000668A EBD1                    		jmp	short AllocOperOkj2
 15321                                  ; ---------------------------------------------------------------------------
 15322                                  
 15323                                  LinkUmbs:				; ...
 15324 0000668C 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15325 00006692 7510                    		jnz	short linked
 15326 00006694 E80F00                  		call	GetLastArena
 15327 00006697 729A                    		jb	short AllocArenaError
 15328 00006699 C60600004D              		mov	byte [0], 4Dh ; 'M' ; arena_signature_normal
 15329 0000669E 36800E[8900]01          		or	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15330                                  
 15331                                  linked:					; ...
 15332 000066A4 EBE4                    		jmp	short unlinked
 15333                                  
 15334                                  ; =============== S U B	R O U T	I N E =======================================
 15335                                  
 15336                                  GetLastArena:	; ...
 15337 000066A6 50                      		push	ax
 15338 000066A7 36A1[2400]              		mov	ax, [ss:arena_head]
 15339 000066AB 8EC0                    		mov	es, ax
 15340 000066AD 31FF                    		xor	di, di
 15341 000066AF 26803D5A                		cmp	byte [es:di], 5Ah ; 'Z' ; arena_signature_end
 15342 000066B3 7419                    		jz	short GLA_done
 15343                                  
 15344                                  GLA_next:				; ...
 15345 000066B5 8ED8                    		mov	ds, ax
 15346 000066B7 E86BFD                  		call	arena_next
 15347 000066BA 7228                    		jb	short GLA_err
 15348 000066BC 36F606[8900]01          		test	byte [ss:UMBFLAG], 1 ; LINKSTATE
 15349 000066C2 7506                    		jnz	short GLA_chkumb
 15350 000066C4 26803D5A                		cmp	byte [es:di], 5Ah ; 'Z'
 15351 000066C8 EB02                    		jmp	short GLA_@f
 15352                                  ; ---------------------------------------------------------------------------
 15353                                  
 15354                                  GLA_chkumb:				; ...
 15355 000066CA 39C8                    		cmp	ax, cx
 15356                                  
 15357                                  GLA_@f:					; ...
 15358 000066CC 75E7                    		jnz	short GLA_next
 15359                                  
 15360                                  GLA_done:				; ...
 15361 000066CE 36F606[8900]01          		test	byte [ss:UMBFLAG], 1
 15362 000066D4 750B                    		jnz	short GLA_ret
 15363 000066D6 8ED8                    		mov	ds, ax
 15364 000066D8 E84AFD                  		call	arena_next
 15365 000066DB 7207                    		jb	short GLA_err
 15366 000066DD 39C8                    		cmp	ax, cx
 15367 000066DF 7503                    		jnz	short GLA_err
 15368                                  
 15369                                  GLA_ret:				; ...
 15370 000066E1 F8                      		clc
 15371 000066E2 58                      		pop	ax
 15372 000066E3 C3                      		retn
 15373                                  ; ---------------------------------------------------------------------------
 15374                                  
 15375                                  GLA_err:				; ...
 15376 000066E4 F9                      		stc
 15377 000066E5 58                      		pop	ax
 15378 000066E6 C3                      		retn
 15379                                  
 15380                                  ; ---------------------------------------------------------------------------
 15381 000066E7 [EB66]                  SERVERTAB	dw SERVER_DISP	; ...
 15382                                  					; SRVC001S
 15383 000066E9 [3D67]                  SERVERLEAVE	dw SERVERRETURN	; ...
 15384 000066EB 0B                      SERVER_DISP	db 11			; ...
 15385                                  					; (SERVER_DISP_END-SERVER_DISP-1)/2
 15386                                  					; ; = 11
 15387 000066EC [A667]                  		dw SRV_CALL	; 0
 15388 000066EE [3E67]                  		dw COMMIT_ALL	; 1
 15389 000066F0 [7567]                  		dw CLOSE_NAME	; 2
 15390 000066F2 [8067]                  		dw CLOSE_UID	; 3
 15391 000066F4 [8767]                  		dw CLOSE_UID_PID	; 4
 15392 000066F6 [8E67]                  		dw GET_LIST	; 5
 15393 000066F8 [E767]                  		dw GET_DOS_DATA	; 6
 15394 000066FA [0B68]                  		dw SPOOL_OPER	; 7
 15395 000066FC [0B68]                  		dw SPOOL_OPER	; 8
 15396 000066FE [0B68]                  		dw SPOOL_OPER	; 9
 15397 00006700 [1968]                  		dw _$SetExtendedError ; 10
 15398                                  ; ---------------------------------------------------------------------------
 15399                                  
 15400                                  _$ServerCall:				; ...
 15401 00006702 3C07                    		cmp	al, 7
 15402 00006704 7204                    		jb	short SET_STUFF
 15403 00006706 3C09                    		cmp	al, 9
 15404 00006708 761A                    		jbe	short NO_SET_ID
 15405                                  
 15406                                  SET_STUFF:				; ...
 15407 0000670A 89D6                    		mov	si, dx
 15408 0000670C 8B5C12                  		mov	bx, [si+12h]	; [SI+DPL.UID]
 15409 0000670F 36F606[3010]01          		test	byte [ss:IsWin386], 1
 15410 00006715 7505                    		jnz	short skip_win386
 15411 00006717 36891E[3E03]            		mov	[ss:USER_ID], bx
 15412                                  
 15413                                  skip_win386:				; ...
 15414 0000671C 8B5C14                  		mov	bx, [si+14h]	; [SI+DPL.PID]
 15415 0000671F 36891E[3C03]            		mov	[ss:PROC_ID], bx
 15416                                  
 15417                                  NO_SET_ID:				; ...
 15418 00006724 2EFF36[E966]            		push	word [cs:SERVERLEAVE]
 15419 00006729 2EFF36[E766]            		push	word [cs:SERVERTAB]
 15420 0000672E 50                      		push	ax
 15421 0000672F E834AB                  		call	TableDispatch
 15422 00006732 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 15423 00006738 B001                    		mov	al, 1		; error_invalid_function
 15424                                  
 15425                                  servercall_error:			; ...
 15426 0000673A E9E09E                  		jmp	SYS_RET_ERR
 15427                                  ; ---------------------------------------------------------------------------
 15428                                  
 15429                                  SERVERRETURN:				; ...
 15430 0000673D C3                      		retn
 15431                                  ; ---------------------------------------------------------------------------
 15432                                  
 15433                                  COMMIT_ALL:				; ...
 15434 0000673E 31DB                    		xor	bx, bx
 15435 00006740 16                      		push	ss
 15436 00006741 1F                      		pop	ds
 15437 00006742 E811AC                  		call	ECritDisk	; call ECritSFT
 15438                                  
 15439                                  CommitLoop:				; ...
 15440 00006745 53                      		push	bx
 15441 00006746 E82B01                  		call	SFFromSFN
 15442 00006749 7223                    		jb	short CommitDone
 15443 0000674B 26833D00                		cmp	word [es:di], 0 ; [ES:DI+SF_ENTRY.sf_Ref_Count]
 15444 0000674F 7419                    		jz	short CommitNext
 15445 00006751 26833DFF                		cmp	word [es:di], 0FFFFh ; [ES:DI+SF_ENTRY.sf_Ref_Count],
 15446                                  					; sf_busy
 15447 00006755 7413                    		jz	short CommitNext
 15448 00006757 26F745050080            		test	word [es:di+5], 8000h ; [ES:DI+SF_ENTRY.sf_flags],
 15449                                  					; sf_isnet
 15450 0000675D 750B                    		jnz	short CommitNext
 15451 0000675F 893E[9E05]              		mov	word [THISSFT], di
 15452 00006763 8C06[A005]              		mov	word [THISSFT+2], es
 15453 00006767 E838CA                  		call	DOS_COMMIT
 15454                                  
 15455                                  CommitNext:				; ...
 15456 0000676A 5B                      		pop	bx
 15457 0000676B 43                      		inc	bx
 15458 0000676C EBD7                    		jmp	short CommitLoop
 15459                                  ; ---------------------------------------------------------------------------
 15460                                  
 15461                                  CommitDone:				; ...
 15462 0000676E E805AC                  		call	LCritDisk	; call LCritSFT
 15463 00006771 5B                      		pop	bx
 15464                                  
 15465                                  Commit_Ok:				; ...
 15466 00006772 E99F9E                  		jmp	SYS_RETURN	; SYS_RET_OK
 15467                                  ; ---------------------------------------------------------------------------
 15468                                  
 15469                                  CLOSE_NAME:				; ...
 15470                                  		;call	dword [ss:MFTcloN] ; Call far [SS:JShare+(5*4)] ; 5 = MFTcloN
 15471 00006775 36FF1E[A400]            		call	far [ss:JShare+(5*4)]
 15472                                  CheckReturns:				; ...
 15473 0000677A 7202                    		jb	short func_err
 15474                                  
 15475                                  Commit_Okj:				; ...
 15476 0000677C EBF4                    		jmp	short Commit_Ok
 15477                                  ; ---------------------------------------------------------------------------
 15478                                  
 15479                                  func_err:				; ...
 15480 0000677E EBBA                    		jmp	short servercall_error
 15481                                  ; ---------------------------------------------------------------------------
 15482                                  
 15483                                  CLOSE_UID:				; ...
 15484                                  		;call	[ss:MFTclU]	; Call far [SS:JShare+(3*4)] ; 3 = MTFTclu
 15485 00006780 36FF1E[9C00]            		call	far [ss:JShare+(3*4)]
 15486 00006785 EBF3                    		jmp	short CheckReturns
 15487                                  ; ---------------------------------------------------------------------------
 15488                                  
 15489                                  CLOSE_UID_PID:				; ...
 15490                                  		;call	dword [ss:MFTCloseP]
 15491 00006787 36FF1E[A000]            		call	far [ss:JShare+(4*4)]
 15492 0000678C EBEC                    		jmp	short CheckReturns
 15493                                  ; ---------------------------------------------------------------------------
 15494                                  
 15495                                  GET_LIST:				; ...
 15496                                  		;call	[ss:MFT_get]	; Call far [SS:JShare+(9*4)] ; 9 = MFT_get
 15497 0000678E 36FF1E[B400]            		call	far [SS:JShare+(9*4)]
 15498 00006793 72E9                    		jb	short func_err
 15499 00006795 E80D9D                  		call	Get_User_Stack
 15500 00006798 895C02                  		mov	[si+2],	bx	; [SI+user_env.user_BX]
 15501 0000679B 897C0A                  		mov	[si+10], di	; [SI+user_env.user_DI]
 15502 0000679E 8C4410                  		mov	word [si+16], es ; [SI+user_env.user_ES]
 15503                                  
 15504                                  SetCXOK:				; ...
 15505 000067A1 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
 15506                                  
 15507                                  Commit_Okj2:				; ...
 15508 000067A4 EBD6                    		jmp	short Commit_Okj
 15509                                  ; ---------------------------------------------------------------------------
 15510                                  
 15511                                  SRV_CALL:				; ...
 15512 000067A6 58                      		pop	ax
 15513 000067A7 1E                      		push	ds
 15514 000067A8 56                      		push	si
 15515 000067A9 E8F99C                  		call	Get_User_Stack
 15516 000067AC 5F                      		pop	di
 15517 000067AD 07                      		pop	es
 15518 000067AE E894AA                  		call	XCHGP
 15519 000067B1 56                      		push	si
 15520 000067B2 B90600                  		mov	cx, 6
 15521 000067B5 F3A5                    		rep movsw
 15522 000067B7 47                      		inc	di
 15523 000067B8 47                      		inc	di
 15524 000067B9 A5                      		movsw
 15525 000067BA A5                      		movsw
 15526 000067BB 5E                      		pop	si
 15527 000067BC 8B04                    		mov	ax, [si]	; [SI+DPL.AX]
 15528 000067BE 8B5C02                  		mov	bx, [si+2]	; [SI+DPL.BX]
 15529 000067C1 8B4C04                  		mov	cx, [si+4]	; [SI+DPL.CX]
 15530 000067C4 8B5406                  		mov	dx, [si+6]	; [SI+DPL.DX]
 15531 000067C7 8B7C0A                  		mov	di, [si+10]	; [SI+DPL.DI]
 15532 000067CA 8E440E                  		mov	es, word [si+14] ; [SI+DPL.ES]
 15533 000067CD FF7408                  		push	word [si+8]	; [SI+DPL.SI]
 15534 000067D0 8E5C0C                  		mov	ds, word [si+12] ; [SI+DPL.DS]
 15535 000067D3 5E                      		pop	si
 15536 000067D4 368C1E[EC05]            		mov	[ss:SAVEDS], ds
 15537 000067D9 36891E[EA05]            		mov	[ss:SAVEBX], bx
 15538 000067DE 36C606[7205]FF          		mov	byte [ss:FSHARING], 0FFh ; -1
 15539 000067E4 E9AC9B                  		jmp	REDISP
 15540                                  ; ---------------------------------------------------------------------------
 15541                                  
 15542                                  GET_DOS_DATA:				; ...
 15543 000067E7 16                      		push	ss
 15544 000067E8 07                      		pop	es
 15545 000067E9 BF[2003]                		mov	di, ERRORMODE ; SWAP_START
 15546 000067EC B9[AC0A]                		mov	cx, SWAP_END
 15547 000067EF BA[3A03]                		mov	dx, USER_IN_AX ; SWAP_ALWAYS
 15548 000067F2 29F9                    		sub	cx, di
 15549 000067F4 29FA                    		sub	dx, di
 15550 000067F6 D1E9                    		shr	cx, 1
 15551 000067F8 83D100                  		adc	cx, 0
 15552 000067FB D1E1                    		shl	cx, 1
 15553 000067FD E8A59C                  		call	Get_User_Stack
 15554 00006800 8C440E                  		mov	word [si+14], es ; [SI+user_env.user_DS]
 15555 00006803 897C08                  		mov	[si+8],	di	; [SI+user_env.user_SI]
 15556 00006806 895406                  		mov	[si+6],	dx	; [SI+user_env.user_DX]
 15557 00006809 EB96                    		jmp	short SetCXOK
 15558                                  ; ---------------------------------------------------------------------------
 15559                                  
 15560                                  SPOOL_OPER:				; ...
 15561 0000680B 50                      		push	ax
 15562 0000680C B82511                  		mov	ax, 1125h
 15563 0000680F CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - REDIRECTED PRINTER MODE
 15564                                  					; STACK: WORD subfunction
 15565                                  					; Return: CF set on error, AX =	error code
 15566                                  					; STACK	unchanged
 15567 00006811 5B                      		pop	bx
 15568 00006812 7202                    		jb	short func_err2
 15569 00006814 EB8E                    		jmp	short Commit_Okj2
 15570                                  ; ---------------------------------------------------------------------------
 15571                                  
 15572                                  func_err2:				; ...
 15573 00006816 E9049E                  		jmp	SYS_RET_ERR
 15574                                  ; ---------------------------------------------------------------------------
 15575                                  
 15576                                  _$SetExtendedError:			; ...
 15577 00006819 8B04                    		mov	ax, [si]	; [SI+DPL.AX]
 15578 0000681B 36A3[2403]              		mov	word [ss:EXTERR], ax
 15579 0000681F 8B440A                  		mov	ax, [si+10]	; [SI+DPL.DI]
 15580 00006822 36A3[2803]              		mov	word [ss:EXTERRPT],	ax
 15581 00006826 8B440E                  		mov	ax, [si+14]	; [SI+DPL.ES]
 15582 00006829 36A3[2A03]              		mov	word [ss:EXTERRPT+2], ax
 15583 0000682D 8B4402                  		mov	ax, [si+2]	; [SI+DPL.BX]
 15584 00006830 36A3[2603]              		mov	word [ss:EXTERR_ACTION], ax
 15585 00006834 8B4404                  		mov	ax, [si+4]	; [SI+DPL.CX]
 15586 00006837 368826[2303]            		mov	byte [ss:EXTERR_LOCUS], ah
 15587 0000683C C3                      		retn
 15588                                  
 15589                                  ; =============== S U B	R O U T	I N E =======================================
 15590                                  
 15591                                  pJFNFromHandle:	; ...
 15592 0000683D 2E8E06[0700]            		mov	es, [cs:DosDSeg]
 15593 00006842 268E06[3003]            		mov	es, [es:CurrentPDB]
 15594 00006847 263B1E3200              		cmp	bx, [es:32h]	; [ES:PDB.JFN_Length]
 15595 0000684C 7204                    		jb	short pjfn10
 15596 0000684E B006                    		mov	al, 6		; error_invalid_handle
 15597                                  
 15598                                  ReturnCarry:				; ...
 15599 00006850 F9                      		stc
 15600 00006851 C3                      		retn
 15601                                  ; ---------------------------------------------------------------------------
 15602                                  
 15603                                  pjfn10:					; ...
 15604 00006852 26C43E3400              		les	di, [es:34h]	; [ES:PDB.JFN_Pointer]
 15605 00006857 01DF                    		add	di, bx
 15606                                  
 15607                                  pJFNFromHandle_error:			; ...
 15608 00006859 C3                      		retn
 15609                                  
 15610                                  ; =============== S U B	R O U T	I N E =======================================
 15611                                  
 15612                                  SFFromHandle:	; ...
 15613 0000685A E8E0FF                  		call	pJFNFromHandle
 15614 0000685D 72FA                    		jb	short pJFNFromHandle_error
 15615 0000685F 26803DFF                		cmp	byte [es:di], 0FFh ; -1
 15616 00006863 7504                    		jnz	short GetSF
 15617 00006865 B006                    		mov	al, 6
 15618 00006867 EBE7                    		jmp	short ReturnCarry
 15619                                  ; ---------------------------------------------------------------------------
 15620                                  
 15621                                  GetSF:					; ...
 15622 00006869 53                      		push	bx
 15623 0000686A 268A1D                  		mov	bl, [es:di]
 15624 0000686D 30FF                    		xor	bh, bh
 15625 0000686F E80200                  		call	SFFromSFN
 15626 00006872 5B                      		pop	bx
 15627 00006873 C3                      		retn
 15628                                  
 15629                                  ; =============== S U B	R O U T	I N E =======================================
 15630                                  
 15631                                  SFFromSFN:		; ...
 15632 00006874 2E8E06[0700]            		mov	es, [cs:DosDSeg]
 15633 00006879 26C43E[2A00]            		les	di, [es:SFT_ADDR]
 15634                                  
 15635                                  sfsfn5:					; ...
 15636 0000687E 263B5D04                		cmp	bx, [es:di+4]	; [ES:DI+SFT.SFCount]
 15637 00006882 720E                    		jb	short sfsfn7
 15638 00006884 262B5D04                		sub	bx, [es:di+4]
 15639 00006888 26C43D                  		les	di, [es:di]	; [ES:DI+SFT.SFLink]
 15640 0000688B 83FFFF                  		cmp	di, 0FFFFh	; -1
 15641 0000688E 75EE                    		jnz	short sfsfn5
 15642 00006890 F9                      		stc
 15643 00006891 C3                      		retn
 15644                                  ; ---------------------------------------------------------------------------
 15645                                  
 15646                                  sfsfn7:					; ...
 15647 00006892 50                      		push	ax
 15648 00006893 B83B00                  		mov	ax, 59		; SF_ENTRY.size
 15649 00006896 F6E3                    		mul	bl
 15650 00006898 01C7                    		add	di, ax
 15651 0000689A 58                      		pop	ax
 15652 0000689B 83C706                  		add	di, 6		; SFT.SFTable
 15653 0000689E C3                      		retn
 15654                                  
 15655                                  ; =============== S U B	R O U T	I N E =======================================
 15656                                  
 15657                                  JFNFree:
 15658 0000689F 31DB                    		xor	bx, bx
 15659                                  
 15660                                  jfnf1:					; ...
 15661 000068A1 E899FF                  		call	pJFNFromHandle
 15662 000068A4 7209                    		jb	short jfnf5
 15663 000068A6 26803DFF                		cmp	byte [es:di], 0FFh ; -1
 15664 000068AA 7405                    		jz	short jfnfx
 15665 000068AC 43                      		inc	bx
 15666 000068AD EBF2                    		jmp	short jfnf1
 15667                                  ; ---------------------------------------------------------------------------
 15668                                  
 15669                                  jfnf5:					; ...
 15670 000068AF B004                    		mov	al, 4		; error_too_many_open_files
 15671                                  
 15672                                  jfnfx:					; ...
 15673 000068B1 C3                      		retn
 15674                                  
 15675                                  ; =============== S U B	R O U T	I N E =======================================
 15676                                  
 15677                                  SFNFree:
 15678 000068B2 50                      		push	ax
 15679 000068B3 31DB                    		xor	bx, bx
 15680                                  
 15681                                  sfnf5:					; ...
 15682 000068B5 53                      		push	bx
 15683 000068B6 E8BBFF                  		call	SFFromSFN
 15684 000068B9 5B                      		pop	bx
 15685 000068BA 723B                    		jb	short sfnf95
 15686 000068BC 26833D00                		cmp	word [es:di], 0 ; [ES:DI+SF_ENTRY.sf_Ref_Count]
 15687 000068C0 741D                    		jz	short sfnf20
 15688 000068C2 26833DFF                		cmp	word [es:di], 0FFFFh ; [ES:DI+SF_ENTRY.sf_ref_count],
 15689                                  					; sf_busy
 15690 000068C6 7403                    		jz	short sfnf10
 15691                                  
 15692                                  sfnf7:					; ...
 15693 000068C8 43                      		inc	bx
 15694 000068C9 EBEA                    		jmp	short sfnf5
 15695                                  ; ---------------------------------------------------------------------------
 15696                                  
 15697                                  sfnf10:					; ...
 15698 000068CB 36A1[3E03]              		mov	ax, [ss:USER_ID]
 15699 000068CF 2639452F                		cmp	[es:di+2Fh], ax	; [ES:DI+SF_ENTRY.sf_UID]
 15700 000068D3 75F3                    		jnz	short sfnf7
 15701 000068D5 36A1[3C03]              		mov	ax, [ss:PROC_ID]
 15702 000068D9 26394531                		cmp	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
 15703 000068DD 75E9                    		jnz	short sfnf7
 15704                                  
 15705                                  sfnf20:					; ...
 15706 000068DF 26C705FFFF              		mov	word [es:di], 0FFFFh ; sf_busy
 15707 000068E4 36A1[3E03]              		mov	ax, [ss:USER_ID]
 15708 000068E8 2689452F                		mov	[es:di+2Fh], ax	; [ES:DI+SF_ENTRY.sf_UID]
 15709 000068EC 36A1[3C03]              		mov	ax, [ss:PROC_ID]
 15710 000068F0 26894531                		mov	[es:di+31h], ax	; [ES:DI+SF_ENTRY.sf_PID]
 15711 000068F4 58                      		pop	ax
 15712 000068F5 F8                      		clc
 15713 000068F6 C3                      		retn
 15714                                  ; ---------------------------------------------------------------------------
 15715                                  
 15716                                  sfnf95:					; ...
 15717 000068F7 58                      		pop	ax
 15718 000068F8 B004                    		mov	al, 4		; error_too_many_open_files
 15719 000068FA C3                      		retn
 15720                                  
 15721                                  ; =============== S U B	R O U T	I N E =======================================
 15722                                  
 15723                                   _$CLOSE:
 15724                                  
 15725                                  ; FUNCTION CHUNK AT 43E4 SIZE 0000001C BYTES
 15726                                  
 15727 000068FB E85B02                  		call	CheckOwner
 15728 000068FE 722B                    		jb	short CloseError
 15729 00006900 16                      		push	ss
 15730 00006901 1F                      		pop	ds
 15731 00006902 893E[9E05]              		mov	word [THISSFT], di
 15732 00006906 8C06[A005]              		mov	word [THISSFT+2], es
 15733 0000690A 26833D01                		cmp	word [es:di], 1 ; [ES:DI+SF_ENTRY.sf_ref_count]
 15734 0000690E 740A                    		jz	short FreeJFN
 15735 00006910 268A4502                		mov	al, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
 15736 00006914 24F0                    		and	al, 0F0h	; SHARING_MASK
 15737 00006916 3C70                    		cmp	al, 70h		; SHARING_NET_FCB
 15738 00006918 7407                    		jz	short PostFree
 15739                                  
 15740                                  FreeJFN:				; ...
 15741 0000691A E820FF                  		call	pJFNFromHandle
 15742 0000691D 26C605FF                		mov	byte [es:di], 0FFh
 15743                                  
 15744                                  PostFree:				; ...
 15745 00006921 E826C7                  		call	DOS_CLOSE
 15746 00006924 7205                    		jb	short CloseError
 15747 00006926 B43E                    		mov	ah, 3Eh		; CLOSE
 15748                                  
 15749                                  CloseOk:				; ...
 15750 00006928 E9E99C                  		jmp	SYS_RETURN	; SYS_RET_OK
 15751                                  ; ---------------------------------------------------------------------------
 15752                                  
 15753                                  CloseError:				; ...
 15754 0000692B E9EF9C                  		jmp	SYS_RET_ERR
 15755                                  
 15756                                  ; ---------------------------------------------------------------------------
 15757                                  
 15758                                  _$COMMIT:				; ...
 15759 0000692E E82802                  		call	CheckOwner
 15760 00006931 7213                    		jb	short CommitError
 15761 00006933 16                      		push	ss
 15762 00006934 1F                      		pop	ds
 15763 00006935 893E[9E05]              		mov	word [THISSFT], di
 15764 00006939 8C06[A005]              		mov	word [THISSFT+2], es
 15765 0000693D E862C8                  		call	DOS_COMMIT
 15766 00006940 7204                    		jb	short CommitError
 15767 00006942 B468                    		mov	ah, 68h		; COMMIT
 15768                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15769                                  
 15770                                  CommitOk:				; ...
 15771 00006944 EBE2                    		jmp	short CloseOk
 15772                                  ; ---------------------------------------------------------------------------
 15773                                  
 15774                                  CommitError:				; ...
 15775 00006946 EBE3                    		jmp	short CloseError
 15776                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15777                                  ; ---------------------------------------------------------------------------
 15778                                  
 15779                                  _$ExtHandle:				; ...
 15780 00006948 31ED                    		xor	bp, bp
 15781 0000694A 83FB14                  		cmp	bx, 20		; FILPERPROC
 15782 0000694D 7303                    		jnb	short exth2
 15783 0000694F BB1400                  		mov	bx, 20
 15784                                  
 15785                                  exth2:					; ...
 15786 00006952 368E06[3003]            		mov	es, [ss:CurrentPDB]
 15787 00006957 268B0E3200              		mov	cx, [es:32h]	; [ES:PDB.JFN_Length]
 15788 0000695C 39CB                    		cmp	bx, cx
 15789 0000695E 7450                    		jz	short ok_done
 15790 00006960 7722                    		ja	short larger
 15791 00006962 BD0100                  		mov	bp, 1
 15792 00006965 268E1E3600              		mov	ds, word [es:36h] ;	[ES:PDB.JFN_Pointer+2]
 15793 0000696A 89DE                    		mov	si, bx
 15794 0000696C 29D9                    		sub	cx, bx
 15795                                  
 15796                                  chck_handles:				; ...
 15797 0000696E 803CFF                  		cmp	byte [si], 0FFh ; -1
 15798 00006971 753F                    		jnz	short too_many_files
 15799 00006973 46                      		inc	si
 15800 00006974 E2F8                    		loop	chck_handles
 15801 00006976 83FB14                  		cmp	bx, 20		; FILPERPROC
 15802 00006979 7709                    		ja	short larger
 15803 0000697B BD0200                  		mov	bp, 2
 15804 0000697E BF1800                  		mov	di, 24		; PDB.JFN_TABLE
 15805 00006981 53                      		push	bx
 15806 00006982 EB1D                    		jmp	short movhandl
 15807                                  ; ---------------------------------------------------------------------------
 15808                                  
 15809                                  larger:					; ...
 15810 00006984 83FBFF                  		cmp	bx, 0FFFFh	; -1
 15811 00006987 747D                    		jz	short invalid_func
 15812 00006989 F8                      		clc
 15813 0000698A 53                      		push	bx
 15814 0000698B 83C30F                  		add	bx, 0Fh
 15815 0000698E B104                    		mov	cl, 4
 15816 00006990 D3DB                    		rcr	bx, cl
 15817 00006992 81E3FF1F                		and	bx, 1FFFh
 15818 00006996 55                      		push	bp
 15819 00006997 E8C4FA                  		call	_$ALLOC
 15820 0000699A 5D                      		pop	bp
 15821 0000699B 7264                    		jb	short no_memory
 15822 0000699D 8EC0                    		mov	es, ax
 15823 0000699F 31FF                    		xor	di, di
 15824                                  
 15825                                  movhandl:				; ...
 15826 000069A1 368E1E[3003]            		mov	ds, [ss:CurrentPDB]
 15827 000069A6 F7C50300                		test	bp, 3
 15828 000069AA 740A                    		jz	short enlarge
 15829 000069AC 59                      		pop	cx
 15830 000069AD 51                      		push	cx
 15831 000069AE EB0A                    		jmp	short copy_hand
 15832                                  ; ---------------------------------------------------------------------------
 15833                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15834                                  
 15835                                  ok_done:				; ...
 15836 000069B0 EB92                    		jmp	short CommitOk
 15837                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15838                                  ; ---------------------------------------------------------------------------
 15839                                  
 15840                                  too_many_files:				; ...
 15841 000069B2 B004                    		mov	al, 4		; error_too_many_open_files
 15842                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15843                                  
 15844                                  CommitErrorj:				; ...
 15845 000069B4 EB90                    		jmp	short CommitError
 15846                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15847                                  ; ---------------------------------------------------------------------------
 15848                                  
 15849                                  enlarge:				; ...
 15850 000069B6 8B0E3200                		mov	cx, [32h]	; [PDB.JFN_Length]
 15851                                  
 15852                                  copy_hand:				; ...
 15853 000069BA 89CA                    		mov	dx, cx
 15854 000069BC C5363400                		lds	si, [34h]	; [PDB.JFN_Pointer]
 15855 000069C0 F3A4                    		rep movsb
 15856 000069C2 59                      		pop	cx
 15857 000069C3 51                      		push	cx
 15858 000069C4 29D1                    		sub	cx, dx
 15859 000069C6 B0FF                    		mov	al, 0FFh	; -1
 15860 000069C8 F3AA                    		rep stosb
 15861 000069CA 368E1E[3003]            		mov	ds, [ss:CurrentPDB]
 15862 000069CF 833E340000              		cmp	word [34h], 0 ; [PDB.JFN_Pointer]
 15863 000069D4 750D                    		jnz	short update_info
 15864 000069D6 55                      		push	bp
 15865 000069D7 1E                      		push	ds
 15866 000069D8 06                      		push	es
 15867 000069D9 8E063600                		mov	es, word [36h] ;	[PDB.JFN_Pointer+2]
 15868 000069DD E803FC                  		call	_$DEALLOC
 15869 000069E0 07                      		pop	es
 15870 000069E1 1F                      		pop	ds
 15871 000069E2 5D                      		pop	bp
 15872                                  
 15873                                  update_info:				; ...
 15874 000069E3 F7C50200                		test	bp, 2
 15875 000069E7 7408                    		jz	short non_psp
 15876 000069E9 C70634001800            		mov	word [34h], 18h ; [PDB.JFN_Pointer],PDB.JFN_TABLE
 15877 000069EF EB06                    		jmp	short final
 15878                                  ; ---------------------------------------------------------------------------
 15879                                  
 15880                                  non_psp:				; ...
 15881 000069F1 C70634000000            		mov	word [34h], 0 ; [PDB.JFN_Pointer]
 15882                                  
 15883                                  final:					; ...
 15884 000069F7 8C063600                		mov	word [36h], es ;	[PDB.JFN_Pointer+2]
 15885 000069FB 8F063200                		pop	word [32h] ; [PDB.JFN_Length]
 15886                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15887                                  
 15888                                  ok_done_j:				; ...
 15889 000069FF EBAF                    		jmp	short ok_done
 15890                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15891                                  ; ---------------------------------------------------------------------------
 15892                                  
 15893                                  no_memory:				; ...
 15894 00006A01 5B                      		pop	bx
 15895 00006A02 B008                    		mov	al, 8		; error_not_enough_memory
 15896                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15897                                  
 15898                                  CommitErrorj2:				; ...
 15899 00006A04 EBAE                    		jmp	short CommitErrorj
 15900                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15901                                  ; ---------------------------------------------------------------------------
 15902                                  
 15903                                  invalid_func:				; ...
 15904 00006A06 B001                    		mov	al, 1		; error_invalid_function
 15905                                  ; START	OF FUNCTION CHUNK FOR _$READ
 15906                                  
 15907                                  CommitErrorj3:				; ...
 15908 00006A08 EBFA                    		jmp	short CommitErrorj2
 15909                                  ; END OF FUNCTION CHUNK	FOR _$READ
 15910                                  
 15911                                  ; =============== S U B	R O U T	I N E =======================================
 15912                                  
 15913                                  _$READ:		; ...
 15914                                  
 15915                                  ; FUNCTION CHUNK AT A714 SIZE 00000004 BYTES
 15916                                  ; FUNCTION CHUNK AT A780 SIZE 00000002 BYTES
 15917                                  ; FUNCTION CHUNK AT A784 SIZE 00000002 BYTES
 15918                                  ; FUNCTION CHUNK AT A7CF SIZE 00000002 BYTES
 15919                                  ; FUNCTION CHUNK AT A7D4 SIZE 00000002 BYTES
 15920                                  ; FUNCTION CHUNK AT A7D8 SIZE 00000002 BYTES
 15921                                  
 15922 00006A0A BE[1934]                		mov	si, DOS_READ
 15923                                  
 15924                                  ReadDo:					; ...
 15925 00006A0D E82DFE                  		call	pJFNFromHandle
 15926 00006A10 7208                    		jb	short ReadError
 15927 00006A12 268A05                  		mov	al, [es:di]
 15928 00006A15 E84101                  		call	CheckOwner
 15929 00006A18 7302                    		jnb	short ReadSetup
 15930                                  
 15931                                  ReadError:				; ...
 15932 00006A1A EBEC                    		jmp	short CommitErrorj3
 15933                                  ; ---------------------------------------------------------------------------
 15934                                  
 15935                                  ReadSetup:				; ...
 15936 00006A1C 36893E[9E05]            		mov	word [ss:THISSFT], di
 15937 00006A21 368C06[A005]            		mov	word [ss:THISSFT+2], es
 15938 00006A26 26F6450320              		test	byte [es:di+3], 20h	; [ES:DI+SF_ENTRY.sf_mode+1],
 15939                                  					; (INT_24_ERROR>>8)
 15940 00006A2B 7406                    		jz	short needi24
 15941 00006A2D 36800E[F605]02          		or	byte [ss:EXTOPEN_ON], 2 ; EXT_OPEN_I24_OFF
 15942                                  
 15943                                  needi24:				; ...
 15944 00006A33 36FF36[2C03]            		push	word [ss:DMAADD]
 15945 00006A38 36FF36[2E03]            		push	word [ss:DMAADD+2]
 15946 00006A3D E81400                  		call	Align_Buffer
 15947 00006A40 16                      		push	ss
 15948 00006A41 1F                      		pop	ds
 15949 00006A42 FFD6                    		call	si ; DOS_READ
 15950 00006A44 8F06[2E03]              		pop	word [DMAADD+2]
 15951 00006A48 8F06[2C03]              		pop	word [DMAADD]
 15952 00006A4C 7302                    		jnb	short READ_OK
 15953 00006A4E EBCA                    		jmp	short ReadError
 15954                                  ; ---------------------------------------------------------------------------
 15955                                  
 15956                                  READ_OK:				; ...
 15957 00006A50 89C8                    		mov	ax, cx
 15958                                  
 15959                                  Read_Okj:				; ...
 15960 00006A52 EBAB                    		jmp	short ok_done_j
 15961                                  
 15962                                  ; =============== S U B	R O U T	I N E =======================================
 15963                                  
 15964                                  Align_Buffer:	; ...
 15965 00006A54 89D3                    		mov	bx, dx
 15966 00006A56 51                      		push	cx
 15967 00006A57 B104                    		mov	cl, 4
 15968 00006A59 D3EB                    		shr	bx, cl
 15969 00006A5B 59                      		pop	cx
 15970 00006A5C 8CD8                    		mov	ax, ds
 15971 00006A5E 01D8                    		add	ax, bx
 15972 00006A60 8ED8                    		mov	ds, ax
 15973 00006A62 83E20F                  		and	dx, 0Fh
 15974 00006A65 368916[2C03]            		mov	word [ss:DMAADD], dx
 15975 00006A6A 368C1E[2E03]            		mov	word [ss:DMAADD+2],	ds
 15976 00006A6F C3                      		retn
 15977                                  
 15978                                  ; ---------------------------------------------------------------------------
 15979                                  
 15980                                  _$WRITE:				; ...
 15981 00006A70 BE[4836]                		mov	si, DOS_WRITE
 15982 00006A73 EB98                    		jmp	short ReadDo
 15983                                  
 15984                                  ; =============== S U B	R O U T	I N E =======================================
 15985                                  
 15986                                  _$LSEEK:
 15987 00006A75 E8E100                  		call	CheckOwner
 15988                                  
 15989                                  LSeekError:				; ...
 15990 00006A78 7302                    		jnb	short CHKOWN_OK
 15991 00006A7A EB9E                    		jmp	short ReadError
 15992                                  ; ---------------------------------------------------------------------------
 15993                                  
 15994                                  CHKOWN_OK:				; ...
 15995 00006A7C 3C02                    		cmp	al, 2
 15996 00006A7E 760A                    		jbe	short LSeekDisp
 15997 00006A80 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 15998 00006A86 B001                    		mov	al, 1		; error_invalid_function
 15999                                  
 16000                                  LSeekError2:				; ...
 16001 00006A88 EB90                    		jmp	short ReadError
 16002                                  ; ---------------------------------------------------------------------------
 16003                                  
 16004                                  LSeekDisp:				; ...
 16005 00006A8A 3C01                    		cmp	al, 1
 16006 00006A8C 720A                    		jb	short LSeekStore
 16007 00006A8E 771B                    		ja	short LSeekEOF
 16008 00006A90 26035515                		add	dx, [es:di+21]	; [ES:DI+SF_ENTRY.sf_position]
 16009 00006A94 26134D17                		adc	cx, [es:di+23]	; [ES:DI+SF_ENTRY.sf_position+2]
 16010                                  
 16011                                  LSeekStore:				; ...
 16012 00006A98 89C8                    		mov	ax, cx
 16013 00006A9A 92                      		xchg	ax, dx
 16014                                  
 16015                                  LSeekSetpos:				; ...
 16016 00006A9B 26894515                		mov	[es:di+21], ax
 16017 00006A9F 26895517                		mov	[es:di+23], dx
 16018 00006AA3 E8FF99                  		call	Get_User_Stack
 16019 00006AA6 895406                  		mov	[si+6],	dx
 16020                                  
 16021                                  LSeekOk:				; ...
 16022 00006AA9 EBA7                    		jmp	short Read_Okj
 16023                                  ; ---------------------------------------------------------------------------
 16024                                  
 16025                                  LSeekEOF:				; ...
 16026 00006AAB 26F6450680              		test	byte [es:di+6], 80h	; [ES:DI+SF_ENTRY.sf_flags+1],
 16027                                  					; (sf_isnet>>8)
 16028 00006AB0 750A                    		jnz	short Check_LSeek_Mode
 16029                                  
 16030                                  LOCAL_LSeek:				; ...
 16031 00006AB2 26035511                		add	dx, [es:di+17]	; [ES:DI+SF_ENTRY.sf_size]
 16032 00006AB6 26134D13                		adc	cx, [es:di+19]	; [ES:DI+SF_ENTRY.sf_size+2]
 16033 00006ABA EBDC                    		jmp	short LSeekStore
 16034                                  ; ---------------------------------------------------------------------------
 16035                                  
 16036                                  Check_LSeek_Mode:			; ...
 16037 00006ABC 26F6450380              		test	byte [es:di+3], 80h	; [ES:DI+SF_ENTRY.sf_mode+1],
 16038                                  					; (sf_isFCB>>8)
 16039 00006AC1 75EF                    		jnz	short LOCAL_LSeek
 16040 00006AC3 268B4502                		mov	ax, [es:di+2]	; [ES:DI+SF_ENTRY.sf_mode]
 16041 00006AC7 25F000                  		and	ax, 0F0h
 16042 00006ACA 83F840                  		cmp	ax, 40h		; SHARING_MASK
 16043 00006ACD 7405                    		jz	short NET_LSEEK
 16044 00006ACF 83F830                  		cmp	ax, 30h		; SHARING_DENY_READ
 16045 00006AD2 75DE                    		jnz	short LOCAL_LSeek
 16046                                  
 16047                                  NET_LSEEK:				; ...
 16048 00006AD4 B82111                  		mov	ax, 1121h
 16049 00006AD7 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - SEEK	FROM END OF REMOTE FILE
 16050                                  					; CX:DX	= offset (in bytes) from end
 16051                                  					; ES:DI	-> SFT,	SFT DPB	field -> DPB of	drive with file
 16052                                  					; SS = DOS CS
 16053                                  					; Return: CF set on error
 16054                                  					; CF clear if successful, DX:AX	= new file position
 16055 00006AD9 73C0                    		jnb	short LSeekSetpos
 16056                                  
 16057                                  LSeekError3:				; ...
 16058 00006ADB EBAB                    		jmp	short LSeekError2
 16059                                  
 16060                                  ; ---------------------------------------------------------------------------
 16061                                  
 16062                                  _$FILE_TIMES:				; ...
 16063 00006ADD 3C02                    		cmp	al, 2
 16064 00006ADF 7340                    		jnb	short inval_func
 16065 00006AE1 E87500                  		call	CheckOwner
 16066 00006AE4 7292                    		jb	short LSeekError
 16067 00006AE6 08C0                    		or	al, al
 16068 00006AE8 7515                    		jnz	short ft_set_time
 16069 00006AEA FA                      		cli
 16070 00006AEB 268B4D0D                		mov	cx, [es:di+13]	; [es:di+SF_ENTRY.sf_time]
 16071 00006AEF 268B550F                		mov	dx, [es:di+15]	; [es:di+SF_ENTRY.sf_date]
 16072 00006AF3 FB                      		sti
 16073 00006AF4 E8AE99                  		call	Get_User_Stack
 16074 00006AF7 894C04                  		mov	[si+4],	cx
 16075 00006AFA 895406                  		mov	[si+6],	dx
 16076 00006AFD EB20                    		jmp	short ok_ret
 16077                                  ; ---------------------------------------------------------------------------
 16078                                  
 16079                                  ft_set_time:				; ...
 16080 00006AFF E854A8                  		call	ECritDisk	; call ECritSFT
 16081 00006B02 26894D0D                		mov	[es:di+13], cx	; [es:di+SF_ENTRY.sf_time]
 16082 00006B06 2689550F                		mov	[es:di+15], dx	; [es:di+SF_ENTRY.sf_date]
 16083 00006B0A 31C0                    		xor	ax, ax
 16084                                  		;call	dword [ss:ShSU] ; call far [ss:JShare+(14*4)] ; 14 = ShSU
 16085 00006B0C 36FF1E[C800]            		call	far [ss:JShare+(14*4)]
 16086 00006B11 26836505BF              		and	word [es:di+5], 0FFBFh ; ~devid_file_clean
 16087 00006B16 26814D050040            		or	word [es:di+5], 4000h ; sf_close_nodate
 16088 00006B1C E857A8                  		call	LCritDisk	; call ECritSFT
 16089                                  
 16090                                  ok_ret:					; ...
 16091 00006B1F EB88                    		jmp	short LSeekOk
 16092                                  ; ---------------------------------------------------------------------------
 16093                                  
 16094                                  inval_func:				; ...
 16095 00006B21 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 16096 00006B27 B001                    		mov	al, 1		; error_invalid_function
 16097                                  
 16098                                  ft_error:				; ...
 16099 00006B29 EBB0                    		jmp	short LSeekError3
 16100                                  ; ---------------------------------------------------------------------------
 16101                                  
 16102                                  _$DUP:					; ...
 16103 00006B2B 89D8                    		mov	ax, bx
 16104 00006B2D E86FFD                  		call	JFNFree
 16105                                  
 16106                                  DupErrorCheck:				; ...
 16107 00006B30 7217                    		jb	short DupErr
 16108 00006B32 06                      		push	es
 16109 00006B33 57                      		push	di
 16110 00006B34 5E                      		pop	si
 16111 00006B35 1F                      		pop	ds
 16112 00006B36 93                      		xchg	ax, bx
 16113 00006B37 E81F00                  		call	CheckOwner
 16114 00006B3A 720D                    		jb	short DupErr
 16115 00006B3C E805C0                  		call	DOS_Dup_Direct
 16116 00006B3F E8FBFC                  		call	pJFNFromHandle
 16117 00006B42 268A1D                  		mov	bl, [es:di]
 16118 00006B45 881C                    		mov	[si], bl
 16119 00006B47 EBD6                    		jmp	short ok_ret
 16120                                  ; ---------------------------------------------------------------------------
 16121                                  
 16122                                  DupErr:					; ...
 16123 00006B49 EBDE                    		jmp	short ft_error
 16124                                  ; ---------------------------------------------------------------------------
 16125                                  
 16126                                  _$DUP2:					; ...
 16127 00006B4B 53                      		push	bx
 16128 00006B4C 51                      		push	cx
 16129 00006B4D 89CB                    		mov	bx, cx
 16130 00006B4F E8A9FD                  		call	_$CLOSE
 16131 00006B52 5B                      		pop	bx
 16132 00006B53 58                      		pop	ax
 16133 00006B54 E8E6FC                  		call	pJFNFromHandle
 16134 00006B57 EBD7                    		jmp	short DupErrorCheck
 16135                                  
 16136                                  ; =============== S U B	R O U T	I N E =======================================
 16137                                  
 16138                                  CheckOwner:		; ...
 16139 00006B59 E8FEFC                  		call	SFFromHandle
 16140 00006B5C 721C                    		jb	short co_ret_label
 16141 00006B5E 50                      		push	ax
 16142 00006B5F 36F606[3010]01          		test	byte [ss:IsWin386], 1
 16143 00006B65 7404                    		jz	short no_win386
 16144 00006B67 31C0                    		xor	ax, ax
 16145 00006B69 EB08                    		jmp	short _skip_win386
 16146                                  ; ---------------------------------------------------------------------------
 16147                                  
 16148                                  no_win386:				; ...
 16149 00006B6B 36A1[3E03]              		mov	ax, [ss:USER_ID]
 16150 00006B6F 263B452F                		cmp	ax, [es:di+2Fh]	; [es:di+SF_ENTRY.sf_UID]
 16151                                  
 16152                                  _skip_win386:				; ...
 16153 00006B73 58                      		pop	ax
 16154 00006B74 7501                    		jnz	short CheckOwner_err
 16155 00006B76 C3                      		retn
 16156                                  ; ---------------------------------------------------------------------------
 16157                                  
 16158                                  CheckOwner_err:				; ...
 16159 00006B77 B006                    		mov	al, 6
 16160 00006B79 F9                      		stc
 16161                                  
 16162                                  co_ret_label:				; ...
 16163 00006B7A C3                      		retn
 16164                                  
 16165                                  ; ---------------------------------------------------------------------------
 16166                                  
 16167                                  _$AssignOper:				; ...
 16168 00006B7B 3C07                    		cmp	al, 7
 16169 00006B7D 7526                    		jnz	short chk08
 16170                                  
 16171                                  srinuse:				; ...
 16172 00006B7F 50                      		push	ax
 16173 00006B80 88D0                    		mov	al, dl
 16174 00006B82 E85E01                  		call	GetCDSFromDrv
 16175 00006B85 58                      		pop	ax
 16176 00006B86 7218                    		jb	short baddrv
 16177 00006B88 837C4500                		cmp	word [si+45h], 0 ; [SI+curdir.devptr]
 16178 00006B8C 7412                    		jz	short baddrv
 16179 00006B8E 3C07                    		cmp	al, 7
 16180 00006B90 7507                    		jnz	short resetdrv
 16181 00006B92 814C430040              		or	word [si+43h], 4000h ; [SI+curdir.flags],
 16182                                  					; curdir_inuse
 16183 00006B97 EB19                    		jmp	short okdone
 16184                                  ; ---------------------------------------------------------------------------
 16185                                  
 16186                                  resetdrv:				; ...
 16187 00006B99 816443FFBF              		and	word [si+43h], 0BFFFh ; ~curdir_inuse
 16188 00006B9E EB12                    		jmp	short okdone
 16189                                  ; ---------------------------------------------------------------------------
 16190                                  
 16191                                  baddrv:					; ...
 16192 00006BA0 B80F00                  		mov	ax, 0Fh		; error_invalid_drive
 16193 00006BA3 EB10                    		jmp	short ASS_ERR
 16194                                  ; ---------------------------------------------------------------------------
 16195                                  
 16196                                  chk08:					; ...
 16197 00006BA5 3C08                    		cmp	al, 8
 16198 00006BA7 74D6                    		jz	short srinuse
 16199 00006BA9 50                      		push	ax
 16200 00006BAA B81E11                  		mov	ax, 111Eh	; (MultNET SHL 8) OR 30
 16201 00006BAD CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - DO REDIRECTION
 16202                                  					; SS = DOS CS
 16203                                  					; STACK: WORD function to execute
 16204                                  					; Return: CF set on error, AX =	error code
 16205                                  					; STACK	unchanged
 16206 00006BAF 5B                      		pop	bx
 16207 00006BB0 7203                    		jb	short ASS_ERR
 16208                                  
 16209                                  okdone:					; ...
 16210 00006BB2 E95F9A                  		jmp	SYS_RETURN	; SYS_RET_OK
 16211                                  ; ---------------------------------------------------------------------------
 16212                                  
 16213                                  ASS_ERR:				; ...
 16214 00006BB5 E9659A                  		jmp	SYS_RET_ERR
 16215                                  
 16216                                  ; =============== S U B	R O U T	I N E =======================================
 16217                                  
 16218                                  FIND_DPB:		; ...
 16219 00006BB8 36C536[2600]            		lds	si, [ss:SYSINITVARS] ; [SS:DPBHEAD]
 16220                                  
 16221                                  fdpb5:					; ...
 16222 00006BBD 83FEFF                  		cmp	si, 0FFFFh	; -1
 16223 00006BC0 7409                    		jz	short fdpb10
 16224 00006BC2 3A04                    		cmp	al, [si]	; [SI+DPB.DRIVE]
 16225 00006BC4 7406                    		jz	short ret_label15
 16226 00006BC6 C57419                  		lds	si, [si+19h]	; [SI+DPB.NEXT_DPB]
 16227 00006BC9 EBF2                    		jmp	short fdpb5
 16228                                  ; ---------------------------------------------------------------------------
 16229                                  
 16230                                  fdpb10:					; ...
 16231 00006BCB F9                      		stc
 16232                                  
 16233                                  ret_label15:				; ...
 16234 00006BCC C3                      		retn
 16235                                  
 16236                                  ; =============== S U B	R O U T	I N E =======================================
 16237                                  
 16238                                  InitCDS:
 16239 00006BCD 50                      		push	ax
 16240 00006BCE 36C43E[A205]            		les	di, [ss:THISCDS]
 16241 00006BD3 26C745430000            		mov	word [es:di+43h], 0 ; [ES:DI+curdir.flags]
 16242 00006BD9 2C40                    		sub	al, 40h	; '@'   ; 'A'-1
 16243 00006BDB 363806[4600]            		cmp	[ss:NUMIO], al
 16244 00006BE0 7236                    		jb	short icdsx
 16245 00006BE2 48                      		dec	ax
 16246 00006BE3 50                      		push	ax
 16247 00006BE4 0441                    		add	al, 41h	; 'A'
 16248 00006BE6 B43A                    		mov	ah, 3Ah	; ':'
 16249 00006BE8 268905                  		mov	[es:di], ax	; [ES:DI+curdir.text]
 16250 00006BEB 26C745025C00            		mov	word [es:di+2], 5Ch ; '\' ; [ES:DI+curdir.text+2]
 16251 00006BF1 26804D4440              		or	byte [es:di+44h], 40h ; [ES:DI+curdir.flags+1],
 16252                                  					; (curdir_inuse>>8)
 16253 00006BF6 29C0                    		sub	ax, ax
 16254 00006BF8 26894549                		mov	[es:di+49h], ax	; [ES:DI+curdir.ID]
 16255 00006BFC 2689454B                		mov	[es:di+4Bh], ax	; [ES:DI+curdir.ID+2]
 16256 00006C00 B002                    		mov	al, 2
 16257 00006C02 2689454F                		mov	[es:di+4Fh], ax	; [ES:DI+curdir.end]
 16258 00006C06 58                      		pop	ax
 16259 00006C07 1E                      		push	ds
 16260 00006C08 56                      		push	si
 16261 00006C09 E8ACFF                  		call	FIND_DPB
 16262 00006C0C 7208                    		jb	short icds5
 16263 00006C0E 26897545                		mov	[es:di+45h], si	; [ES:DI+curdir.devptr]
 16264 00006C12 268C5D47                		mov	word [es:di+47h], ds ; [ES:DI+curdir.devptr+2]
 16265                                  
 16266                                  icds5:					; ...
 16267 00006C16 5E                      		pop	si
 16268 00006C17 1F                      		pop	ds
 16269                                  
 16270                                  icdsx:					; ...
 16271 00006C18 58                      		pop	ax
 16272                                  
 16273                                  RET45:					; ...
 16274 00006C19 C3                      		retn
 16275                                  
 16276                                  ; ---------------------------------------------------------------------------
 16277                                  
 16278                                  _$UserOper:				; ...
 16279 00006C1A 50                      		push	ax
 16280 00006C1B 2C01                    		sub	al, 1
 16281 00006C1D 58                      		pop	ax
 16282 00006C1E 7210                    		jb	short UserGet
 16283 00006C20 742D                    		jz	short UserSet
 16284 00006C22 3C05                    		cmp	al, 5
 16285 00006C24 763C                    		jbe	short UserPrint
 16286 00006C26 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 16287 00006C2C B001                    		mov	al, 1		; error_invalid_function
 16288                                  
 16289                                  useroper_error:				; ...
 16290 00006C2E EB85                    		jmp	short ASS_ERR
 16291                                  ; ---------------------------------------------------------------------------
 16292                                  
 16293                                  UserGet:				; ...
 16294 00006C30 1E                      		push	ds
 16295 00006C31 07                      		pop	es
 16296 00006C32 89D7                    		mov	di, dx
 16297 00006C34 368B0E[0E00]            		mov	cx, [ss:MYNUM]
 16298 00006C39 E86998                  		call	Get_User_Stack
 16299 00006C3C 894C04                  		mov	[si+4],	cx	; [SI+user_env.user_CX]
 16300 00006C3F 16                      		push	ss
 16301 00006C40 1F                      		pop	ds
 16302 00006C41 BE[0503]                		mov	si, MYNAME
 16303                                  
 16304                                  UserMove:				; ...
 16305 00006C44 B90F00                  		mov	cx, 15
 16306 00006C47 F3A4                    		rep movsb
 16307 00006C49 31C0                    		xor	ax, ax
 16308 00006C4B AA                      		stosb
 16309                                  
 16310                                  UserBye:				; ...
 16311 00006C4C E9C599                  		jmp	SYS_RETURN	; SYS_RET_OK
 16312                                  ; ---------------------------------------------------------------------------
 16313                                  
 16314                                  UserSet:				; ...
 16315 00006C4F 36890E[0E00]            		mov	[ss:MYNUM], cx
 16316 00006C54 89D6                    		mov	si, dx
 16317 00006C56 16                      		push	ss
 16318 00006C57 07                      		pop	es
 16319 00006C58 BF[0503]                		mov	di, MYNAME
 16320 00006C5B 36FE06[0403]            		inc	byte [ss:DIFFNAM]
 16321 00006C60 EBE2                    		jmp	short UserMove
 16322                                  ; ---------------------------------------------------------------------------
 16323                                  
 16324                                  UserPrint:				; ...
 16325 00006C62 50                      		push	ax
 16326 00006C63 B81F11                  		mov	ax, 111Fh	; (MultNET SHL 8) OR 31
 16327 00006C66 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - PRINTER SETUP
 16328                                  					; STACK: WORD function
 16329                                  					; Return: CF set on error, AX =	error code
 16330                                  					; STACK	unchanged
 16331 00006C68 5A                      		pop	dx
 16332 00006C69 7302                    		jnb	short OKPA
 16333 00006C6B EBC1                    		jmp	short useroper_error
 16334                                  ; ---------------------------------------------------------------------------
 16335                                  
 16336                                  OKPA:					; ...
 16337 00006C6D EBDD                    		jmp	short UserBye
 16338                                  
 16339                                  ; =============== S U B	R O U T	I N E =======================================
 16340                                  
 16341                                  GetVisDrv:		; ...
 16342 00006C6F E81A00                  		call	GETTHISDRV
 16343 00006C72 72A5                    		jb	short RET45
 16344 00006C74 1E                      		push	ds
 16345 00006C75 56                      		push	si
 16346 00006C76 36C536[A205]            		lds	si, [ss:THISCDS]
 16347 00006C7B F744430020              		test	word [si+43h], 2000h ; [SI+curdir.flags],
 16348                                  					; curdir_splice
 16349 00006C80 5E                      		pop	si
 16350 00006C81 1F                      		pop	ds
 16351 00006C82 7495                    		jz	short RET45
 16352 00006C84 36C606[1006]0F          		mov	byte [ss:DrvErr], 0Fh ; error_invalid_drive
 16353 00006C8A F9                      		stc
 16354 00006C8B C3                      		retn
 16355                                  
 16356                                  ; =============== S U B	R O U T	I N E =======================================
 16357                                  
 16358                                  GETTHISDRV:		; ...
 16359 00006C8C 08C0                    		or	al, al
 16360 00006C8E 7505                    		jnz	short GTD10
 16361 00006C90 36A0[3603]              		mov	al, [ss:CURDRV]
 16362 00006C94 40                      		inc	ax
 16363                                  
 16364                                  GTD10:					; ...
 16365 00006C95 48                      		dec	ax
 16366 00006C96 1E                      		push	ds
 16367 00006C97 56                      		push	si
 16368 00006C98 36C606[2303]02          		mov	byte [ss:EXTERR_LOCUS], 2 ; errLOC_Disk
 16369 00006C9E 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 16370 00006CA4 7421                    		jz	short GTD20
 16371 00006CA6 50                      		push	ax
 16372 00006CA7 06                      		push	es
 16373 00006CA8 57                      		push	di
 16374 00006CA9 36C706[A205][F304]      		mov	word [ss:THISCDS], DUMMYCDS
 16375 00006CB0 368C16[A405]            		mov	word [ss:THISCDS+2], ss
 16376 00006CB5 0441                    		add	al, 41h	; 'A'
 16377 00006CB7 E813FF                  		call	InitCDS
 16378 00006CBA 26F745430040            		test	word [es:di+43h], 4000h ; [ES:DI+curdir.flags],
 16379                                  					; curdir_inuse
 16380 00006CC0 5F                      		pop	di
 16381 00006CC1 07                      		pop	es
 16382 00006CC2 58                      		pop	ax
 16383 00006CC3 740E                    		jz	short GTD30
 16384 00006CC5 EB19                    		jmp	short GTDX
 16385                                  ; ---------------------------------------------------------------------------
 16386                                  
 16387                                  GTD20:					; ...
 16388 00006CC7 E81900                  		call	GetCDSFromDrv
 16389 00006CCA 7207                    		jb	short GTD30
 16390 00006CCC F744430040              		test	word [si+43h], 4000h ; [SI+curdir.flags],
 16391                                  					; curdir_inuse
 16392 00006CD1 750D                    		jnz	short GTDX
 16393                                  
 16394                                  GTD30:					; ...
 16395 00006CD3 B00F                    		mov	al, 0Fh		; error_invalid_drive
 16396 00006CD5 36A2[1006]              		mov	[ss:DrvErr], al
 16397 00006CD9 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 16398 00006CDF F9                      		stc
 16399                                  
 16400                                  GTDX:					; ...
 16401 00006CE0 5E                      		pop	si
 16402 00006CE1 1F                      		pop	ds
 16403 00006CE2 C3                      		retn
 16404                                  
 16405                                  ; =============== S U B	R O U T	I N E =======================================
 16406                                  
 16407                                  GetCDSFromDrv:	; ...
 16408 00006CE3 363A06[4700]            		cmp	al, [ss:CDSCOUNT]
 16409 00006CE8 7202                    		jb	short GetCDS
 16410 00006CEA F9                      		stc
 16411 00006CEB C3                      		retn
 16412                                  ; ---------------------------------------------------------------------------
 16413                                  
 16414                                  GetCDS:					; ...
 16415 00006CEC 53                      		push	bx
 16416 00006CED 50                      		push	ax
 16417 00006CEE 36C536[3C00]            		lds	si, [ss:CDSADDR]
 16418 00006CF3 B358                    		mov	bl, 88		; curdir.size
 16419 00006CF5 F6E3                    		mul	bl
 16420 00006CF7 01C6                    		add	si, ax
 16421 00006CF9 368936[A205]            		mov	word [ss:THISCDS], si
 16422 00006CFE 368C1E[A405]            		mov	word [ss:THISCDS+2], ds
 16423 00006D03 58                      		pop	ax
 16424 00006D04 5B                      		pop	bx
 16425 00006D05 F8                      		clc
 16426 00006D06 C3                      		retn
 16427                                  
 16428                                  ; ---------------------------------------------------------------------------
 16429                                  
 16430                                  TransFCB:				; ...
 16431 00006D07 55                      		push	bp
 16432 00006D08 89E5                    		mov	bp, sp
 16433 00006D0A 83EC10                  		sub	sp, 16
 16434 00006D0D 16                      		push	ss
 16435 00006D0E 07                      		pop	es
 16436 00006D0F 06                      		push	es
 16437 00006D10 57                      		push	di
 16438 00006D11 8D7EF0                  		lea	di, [bp-16]	; FCBTmp
 16439 00006D14 36C606[6C05]00          		mov	byte [ss:EXTFCB], 0
 16440 00006D1A 36C606[6D05]00          		mov	byte [ss:SATTRIB], 0
 16441 00006D20 E809B0                  		call	GetExtended
 16442 00006D23 740D                    		jz	short GetDrive
 16443 00006D25 8A44FF                  		mov	al, [si-1]
 16444 00006D28 36A2[6D05]              		mov	[ss:SATTRIB], al
 16445 00006D2C 36C606[6C05]FF          		mov	byte [ss:EXTFCB], 0FFh ; -1
 16446                                  
 16447                                  GetDrive:				; ...
 16448 00006D32 AC                      		lodsb
 16449 00006D33 E856FF                  		call	GETTHISDRV
 16450 00006D36 722A                    		jb	short BadPack
 16451 00006D38 E87703                  		call	TextFromDrive
 16452 00006D3B B90B00                  		mov	cx, 11
 16453 00006D3E 56                      		push	si
 16454                                  
 16455                                  FCBScan:				; ...
 16456 00006D3F AC                      		lodsb
 16457 00006D40 E8DBE4                  		call	GetCharType
 16458 00006D43 A808                    		test	al, 8		; FFCB
 16459 00006D45 741B                    		jz	short BadPack
 16460 00006D47 E2F6                    		loop	FCBScan
 16461 00006D49 5E                      		pop	si
 16462 00006D4A 89FB                    		mov	bx, di
 16463 00006D4C E83DB4                  		call	PackName
 16464 00006D4F 5F                      		pop	di
 16465 00006D50 07                      		pop	es
 16466 00006D51 16                      		push	ss
 16467 00006D52 1F                      		pop	ds
 16468 00006D53 8D76F0                  		lea	si, [bp-16]	; FCBTmp
 16469 00006D56 803F00                  		cmp	byte [bx], 0
 16470 00006D59 7407                    		jz	short BadPack
 16471 00006D5B 55                      		push	bp
 16472 00006D5C E80E00                  		call	TransPathSet
 16473 00006D5F 5D                      		pop	bp
 16474 00006D60 7303                    		jnb	short FCBRet
 16475                                  
 16476                                  BadPack:				; ...
 16477 00006D62 F9                      		stc
 16478 00006D63 B003                    		mov	al, 3		; error_path_not_found
 16479                                  
 16480                                  FCBRet:					; ...
 16481 00006D65 89EC                    		mov	sp, bp
 16482 00006D67 5D                      		pop	bp
 16483                                  
 16484                                  TransPath_retn:				; ...
 16485 00006D68 C3                      		retn
 16486                                  
 16487                                  ; =============== S U B	R O U T	I N E =======================================
 16488                                  
 16489                                  TransPath:		; ...
 16490 00006D69 30C0                    		xor	al, al
 16491 00006D6B EB02                    		jmp	short SetSplice
 16492                                  ; ---------------------------------------------------------------------------
 16493                                  
 16494                                  TransPathSet:				; ...
 16495 00006D6D B0FF                    		mov	al, 0FFh	; -1
 16496                                  
 16497                                  SetSplice:				; ...
 16498 00006D6F 36A2[4C03]              		mov	[ss:NoSetDir], al
 16499 00006D73 B0FF                    		mov	al, 0FFh	; -1
 16500                                  
 16501                                  TransPathNoSet:				; ...
 16502 00006D75 36A2[7105]              		mov	[ss:FSPLICE], al
 16503 00006D79 36C606[7A05]FF          		mov	byte [ss:CMETA], 0FFh ; -1
 16504 00006D7F 36893E[B205]            		mov	[ss:WFP_START],	di
 16505 00006D84 36C706[B605]FFFF        		mov	word [ss:CURR_DIR_END], 0FFFFh ; -1
 16506 00006D8B 16                      		push	ss
 16507 00006D8C 07                      		pop	es
 16508 00006D8D 8DAD8600                		lea	bp, [di+134]	; [DI+TEMPLEN]
 16509 00006D91 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 16510 00006D97 7435                    		jz	short CheckUNC
 16511 00006D99 E8FF02                  		call	DriveFromText
 16512 00006D9C E8EDFE                  		call	GETTHISDRV
 16513 00006D9F 722A                    		jb	short NoPath
 16514 00006DA1 E80E03                  		call	TextFromDrive
 16515 00006DA4 8D5D01                  		lea	bx, [di+1]
 16516 00006DA7 E83501                  		call	Canonicalize
 16517 00006DAA 72BC                    		jb	short TransPath_retn
 16518 00006DAC 16                      		push	ss
 16519 00006DAD 1F                      		pop	ds
 16520 00006DAE 8B36[B205]              		mov	si, [WFP_START]
 16521 00006DB2 F606[7105]FF            		test	byte [FSPLICE], 0FFh ; -1
 16522 00006DB7 7403                    		jz	short NoServerSplice
 16523 00006DB9 E83302                  		call	Splice
 16524                                  
 16525                                  NoServerSplice:				; ...
 16526 00006DBC 16                      		push	ss
 16527 00006DBD 1F                      		pop	ds
 16528 00006DBE C43E[A205]              		les	di, [THISCDS]
 16529 00006DC2 E891A5                  		call	ECritDisk
 16530 00006DC5 E8D1EA                  		call	FATREAD_CDS
 16531 00006DC8 E8ABA5                  		call	LCritDisk
 16532                                  
 16533                                  NoPath:					; ...
 16534 00006DCB B003                    		mov	al, 3		; error_path_not_found
 16535 00006DCD C3                      		retn
 16536                                  ; ---------------------------------------------------------------------------
 16537                                  
 16538                                  CheckUNC:				; ...
 16539 00006DCE 36C706[A205]FFFF        		mov	word [ss:THISCDS], 0FFFFh
 16540 00006DD5 B82311                  		mov	ax, 1123h
 16541 00006DD8 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - QUALIFY REMOTE FILENAME
 16542                                  					; DS:SI	-> ASCIZ filename to canonicalize
 16543                                  					; ES:DI	-> 128-byte buffer for qualified name
 16544                                  					; Return: CF set if not	resolved
 16545 00006DDA 7329                    		jnb	short UNCDone
 16546 00006DDC E8BC02                  		call	DriveFromText
 16547 00006DDF 50                      		push	ax
 16548 00006DE0 8B04                    		mov	ax, [si]
 16549 00006DE2 E856E4                  		call	PATHCHRCMP
 16550 00006DE5 86E0                    		xchg	ah, al
 16551 00006DE7 E851E4                  		call	PATHCHRCMP
 16552 00006DEA 751F                    		jnz	short CheckDevice
 16553 00006DEC 38C4                    		cmp	ah, al
 16554 00006DEE 751B                    		jnz	short CheckDevice
 16555 00006DF0 58                      		pop	ax
 16556 00006DF1 A5                      		movsw
 16557                                  
 16558                                  UNCCpy:					; ...
 16559 00006DF2 AC                      		lodsb
 16560 00006DF3 E8F0E3                  		call	UCase
 16561 00006DF6 08C0                    		or	al, al
 16562 00006DF8 740E                    		jz	short UNCTerm
 16563 00006DFA E83EE4                  		call	PATHCHRCMP
 16564 00006DFD 89FB                    		mov	bx, di
 16565 00006DFF AA                      		stosb
 16566 00006E00 75F0                    		jnz	short UNCCpy
 16567 00006E02 E8DA00                  		call	Canonicalize
 16568                                  
 16569                                  UNCDone:				; ...
 16570 00006E05 16                      		push	ss
 16571 00006E06 1F                      		pop	ds
 16572 00006E07 C3                      		retn
 16573                                  ; ---------------------------------------------------------------------------
 16574                                  
 16575                                  UNCTerm:				; ...
 16576 00006E08 AA                      		stosb
 16577 00006E09 EBFA                    		jmp	short UNCDone
 16578                                  ; ---------------------------------------------------------------------------
 16579                                  
 16580                                  CheckDevice:				; ...
 16581 00006E0B 58                      		pop	ax
 16582 00006E0C 803C00                  		cmp	byte [si], 0
 16583 00006E0F 7504                    		jnz	short CheckPath
 16584 00006E11 B002                    		mov	al, 2		; error_file_not_found
 16585 00006E13 F9                      		stc
 16586 00006E14 C3                      		retn
 16587                                  ; ---------------------------------------------------------------------------
 16588                                  
 16589                                  CheckPath:				; ...
 16590 00006E15 50                      		push	ax
 16591 00006E16 55                      		push	bp
 16592 00006E17 E86FD6                  		call	CheckThisDevice
 16593 00006E1A 5D                      		pop	bp
 16594 00006E1B 58                      		pop	ax
 16595 00006E1C 731C                    		jnb	short DoFile
 16596 00006E1E 36C606[7205]FF          		mov	byte [ss:FSHARING], 0FFh ; -1
 16597 00006E24 E865FE                  		call	GETTHISDRV
 16598 00006E27 36C606[7205]00          		mov	byte [ss:FSHARING], 0
 16599 00006E2D E88202                  		call	TextFromDrive
 16600 00006E30 B02F                    		mov	al, '/'
 16601 00006E32 AA                      		stosb
 16602 00006E33 E8DFA3                  		call	StrCpy
 16603 00006E36 F8                      		clc
 16604 00006E37 16                      		push	ss
 16605 00006E38 1F                      		pop	ds
 16606                                  
 16607                                  DoFile_retn:				; ...
 16608 00006E39 C3                      		retn
 16609                                  ; ---------------------------------------------------------------------------
 16610                                  
 16611                                  DoFile:					; ...
 16612 00006E3A E832FE                  		call	GetVisDrv
 16613 00006E3D B003                    		mov	al, 3		; error_path_not_found
 16614 00006E3F 72F8                    		jb	short DoFile_retn
 16615 00006E41 1E                      		push	ds
 16616 00006E42 56                      		push	si
 16617 00006E43 06                      		push	es
 16618 00006E44 57                      		push	di
 16619 00006E45 E883D5                  		call	ValidateCDS
 16620 00006E48 5F                      		pop	di
 16621 00006E49 07                      		pop	es
 16622 00006E4A 5E                      		pop	si
 16623 00006E4B 1F                      		pop	ds
 16624 00006E4C B003                    		mov	al, 3
 16625 00006E4E 72E9                    		jb	short DoFile_retn
 16626 00006E50 1E                      		push	ds
 16627 00006E51 56                      		push	si
 16628 00006E52 36C536[A205]            		lds	si, [ss:THISCDS]
 16629 00006E57 89FB                    		mov	bx, di
 16630 00006E59 035C4F                  		add	bx, [si+79]	; [SI+curdir.end]
 16631 00006E5C 8DAD8600                		lea	bp, [di+134]	; [DI+TEMPLEN]
 16632 00006E60 E8C1A3                  		call	FStrCpy
 16633 00006E63 4F                      		dec	di
 16634 00006E64 B05C                    		mov	al, '\'
 16635 00006E66 263845FF                		cmp	[es:di-1], al
 16636 00006E6A 7401                    		jz	short GetOrig
 16637 00006E6C AA                      		stosb
 16638                                  
 16639                                  GetOrig:				; ...
 16640 00006E6D 4F                      		dec	di
 16641 00006E6E 5E                      		pop	si
 16642 00006E6F 1F                      		pop	ds
 16643 00006E70 E8D100                  		call	PathSep
 16644 00006E73 7511                    		jnz	short PathAssure
 16645 00006E75 08C0                    		or	al, al
 16646 00006E77 7410                    		jz	short DoCanon
 16647 00006E79 89DF                    		mov	di, bx
 16648                                  
 16649                                  SkipPath:				; ...
 16650 00006E7B AC                      		lodsb
 16651 00006E7C E8BCE3                  		call	PATHCHRCMP
 16652 00006E7F 74FA                    		jz	short SkipPath
 16653 00006E81 4E                      		dec	si
 16654 00006E82 08C0                    		or	al, al
 16655 00006E84 7403                    		jz	short DoCanon
 16656                                  
 16657                                  PathAssure:				; ...
 16658 00006E86 B05C                    		mov	al, 5Ch	; '\'
 16659 00006E88 AA                      		stosb
 16660                                  
 16661                                  DoCanon:				; ...
 16662 00006E89 E85300                  		call	Canonicalize
 16663 00006E8C 72AB                    		jb	short DoFile_retn
 16664 00006E8E 16                      		push	ss
 16665 00006E8F 1F                      		pop	ds
 16666 00006E90 8B3E[B205]              		mov	di, [WFP_START]
 16667 00006E94 C536[A205]              		lds	si, [THISCDS]
 16668 00006E98 E81F02                  		call	PathPref
 16669 00006E9B 7514                    		jnz	short DoSplice
 16670 00006E9D 8A44FF                  		mov	al, [si-1]
 16671 00006EA0 E898E3                  		call	PATHCHRCMP
 16672 00006EA3 740C                    		jz	short DoSplice
 16673 00006EA5 26803D00                		cmp	byte [es:di], 0
 16674 00006EA9 7406                    		jz	short DoSplice
 16675 00006EAB 47                      		inc	di
 16676 00006EAC 36893E[B605]            		mov	[ss:CURR_DIR_END], di
 16677                                  
 16678                                  DoSplice:				; ...
 16679 00006EB1 16                      		push	ss
 16680 00006EB2 1F                      		pop	ds
 16681 00006EB3 8B36[B205]              		mov	si, [WFP_START]
 16682 00006EB7 31C9                    		xor	cx, cx
 16683 00006EB9 F606[7105]FF            		test	byte [FSPLICE], 0FFh ; -1
 16684 00006EBE 7403                    		jz	short SkipSplice
 16685 00006EC0 E82C01                  		call	Splice
 16686                                  
 16687                                  SkipSplice:				; ...
 16688 00006EC3 16                      		push	ss
 16689 00006EC4 1F                      		pop	ds
 16690 00006EC5 C43E[A205]              		les	di, [THISCDS]
 16691 00006EC9 26F745430080            		test	word [es:di+67], 8000h ; [ES:DI+curdir.flags],
 16692                                  					; curdir_isnet
 16693 00006ECF 750D                    		jnz	short Done
 16694 00006ED1 E30B                    		jcxz	Done
 16695 00006ED3 E880A4                  		call	ECritDisk
 16696 00006ED6 E8C0E9                  		call	FATREAD_CDS
 16697 00006ED9 E89AA4                  		call	LCritDisk
 16698 00006EDC B003                    		mov	al, 3		; error_path_not_found
 16699                                  
 16700                                  Done:					; ...
 16701 00006EDE C3                      		retn
 16702                                  
 16703                                  ; =============== S U B	R O U T	I N E =======================================
 16704                                  
 16705                                  Canonicalize:	; ...
 16706 00006EDF AC                      		lodsb
 16707 00006EE0 E858E3                  		call	PATHCHRCMP
 16708 00006EE3 7507                    		jnz	short CanonDec
 16709 00006EE5 39EF                    		cmp	di, bp
 16710 00006EE7 7319                    		jnb	short CanonBad
 16711 00006EE9 AA                      		stosb
 16712 00006EEA EBF3                    		jmp	short Canonicalize
 16713                                  ; ---------------------------------------------------------------------------
 16714                                  
 16715                                  CanonDec:				; ...
 16716 00006EEC 4E                      		dec	si
 16717                                  
 16718                                  CanonLoop:				; ...
 16719 00006EED 31C0                    		xor	ax, ax
 16720 00006EEF 3804                    		cmp	[si], al
 16721 00006EF1 751A                    		jnz	short DoComponent
 16722 00006EF3 26807DFF3A              		cmp	byte [es:di-1], ':'
 16723 00006EF8 7505                    		jnz	short DoTerminate
 16724 00006EFA B05C                    		mov	al, '\'
 16725 00006EFC AA                      		stosb
 16726 00006EFD 88E0                    		mov	al, ah
 16727                                  
 16728                                  DoTerminate:				; ...
 16729 00006EFF AA                      		stosb
 16730 00006F00 F8                      		clc
 16731 00006F01 C3                      		retn
 16732                                  ; ---------------------------------------------------------------------------
 16733                                  
 16734                                  CanonBad:				; ...
 16735 00006F02 E8CE01                  		call	ScanPathChar
 16736 00006F05 B003                    		mov	al, 3		; error_path_not_found
 16737 00006F07 7402                    		jz	short PathEnc
 16738 00006F09 B002                    		mov	al, 2		; error_file_not_found
 16739                                  
 16740                                  PathEnc:				; ...
 16741 00006F0B F9                      		stc
 16742                                  
 16743                                  CanonBad_retn:				; ...
 16744 00006F0C C3                      		retn
 16745                                  ; ---------------------------------------------------------------------------
 16746                                  
 16747                                  DoComponent:				; ...
 16748 00006F0D E85100                  		call	CopyComponent
 16749 00006F10 72FA                    		jb	short CanonBad_retn
 16750 00006F12 26833D2E                		cmp	word [es:di], 2Eh ;	'.'
 16751 00006F16 7408                    		jz	short Skip1
 16752 00006F18 26813D2E2E              		cmp	word [es:di], 2E2Eh
 16753 00006F1D 750A                    		jnz	short CanonNormal
 16754 00006F1F 4F                      		dec	di
 16755                                  
 16756                                  Skip1:					; ...
 16757 00006F20 E82B00                  		call	SkipBack
 16758 00006F23 B003                    		mov	al, 3		; error_path_not_found
 16759 00006F25 72E5                    		jb	short CanonBad_retn
 16760 00006F27 EB02                    		jmp	short CanonPath
 16761                                  ; ---------------------------------------------------------------------------
 16762                                  
 16763                                  CanonNormal:				; ...
 16764 00006F29 01CF                    		add	di, cx
 16765                                  
 16766                                  CanonPath:				; ...
 16767 00006F2B E81600                  		call	PathSep
 16768 00006F2E 75D2                    		jnz	short CanonBad
 16769 00006F30 AC                      		lodsb
 16770 00006F31 E807E3                  		call	PATHCHRCMP
 16771 00006F34 75B6                    		jnz	short CanonDec
 16772 00006F36 39EF                    		cmp	di, bp
 16773 00006F38 73C8                    		jnb	short CanonBad
 16774 00006F3A AA                      		stosb
 16775                                  
 16776                                  CanonPathLoop:				; ...
 16777 00006F3B AC                      		lodsb
 16778 00006F3C E8FCE2                  		call	PATHCHRCMP
 16779 00006F3F 74FA                    		jz	short CanonPathLoop
 16780 00006F41 4E                      		dec	si
 16781 00006F42 EBA9                    		jmp	short CanonLoop
 16782                                  
 16783                                  ; =============== S U B	R O U T	I N E =======================================
 16784                                  
 16785                                  PathSep:
 16786 00006F44 8A04                    		mov	al, [si]
 16787                                  
 16788                                  PathSepGotCh:				; ...
 16789 00006F46 08C0                    		or	al, al
 16790 00006F48 74C2                    		jz	short CanonBad_retn
 16791 00006F4A E8EEE2                  		call	PATHCHRCMP
 16792 00006F4D C3                      		retn
 16793                                  
 16794                                  ; =============== S U B	R O U T	I N E =======================================
 16795                                  
 16796                                  SkipBack:		; ...
 16797 00006F4E 39DF                    		cmp	di, bx
 16798 00006F50 720B                    		jb	short SkipBad
 16799 00006F52 4F                      		dec	di
 16800 00006F53 268A05                  		mov	al, [es:di]
 16801 00006F56 E8E2E2                  		call	PATHCHRCMP
 16802 00006F59 75F3                    		jnz	short SkipBack
 16803 00006F5B F8                      		clc
 16804 00006F5C C3                      		retn
 16805                                  ; ---------------------------------------------------------------------------
 16806                                  
 16807                                  SkipBad:				; ...
 16808 00006F5D B003                    		mov	al, 3		; error_path_not_found
 16809 00006F5F F9                      		stc
 16810 00006F60 C3                      		retn
 16811                                  
 16812                                  ; =============== S U B	R O U T	I N E =======================================
 16813                                  
 16814                                  CopyComponent:	; ...
 16815 00006F61 83EC0E                  		sub	sp, 14
 16816 00006F64 1E                      		push	ds
 16817 00006F65 56                      		push	si
 16818 00006F66 06                      		push	es
 16819 00006F67 57                      		push	di
 16820 00006F68 55                      		push	bp
 16821 00006F69 89E5                    		mov	bp, sp
 16822 00006F6B B42E                    		mov	ah, '.'
 16823 00006F6D AC                      		lodsb
 16824 00006F6E AA                      		stosb
 16825 00006F6F 38E0                    		cmp	al, ah
 16826 00006F71 7518                    		jnz	short NormalComp
 16827 00006F73 E8CEFF                  		call	PathSep
 16828 00006F76 740B                    		jz	short NulTerm
 16829                                  
 16830                                  TryTwoDot:
 16831 00006F78 AC                      		lodsb
 16832 00006F79 AA                      		stosb
 16833 00006F7A 38E0                    		cmp	al, ah
 16834 00006F7C 7557                    		jnz	short CopyBad
 16835 00006F7E E8C3FF                  		call	PathSep
 16836 00006F81 7552                    		jnz	short CopyBad
 16837                                  
 16838                                  NulTerm:				; ...
 16839 00006F83 30C0                    		xor	al, al
 16840 00006F85 AA                      		stosb
 16841 00006F86 897606                  		mov	[bp+6],	si	; CopySoff
 16842 00006F89 EB47                    		jmp	short _GoodRet
 16843                                  ; ---------------------------------------------------------------------------
 16844                                  
 16845                                  NormalComp:				; ...
 16846 00006F8B 8B7606                  		mov	si, [bp+6]	; CopySoff
 16847 00006F8E E8E8E1                  		call	NameTrans
 16848 00006F91 3B7606                  		cmp	si, [bp+6]
 16849 00006F94 743F                    		jz	short CopyBad
 16850 00006F96 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 16851 00006F9C 7510                    		jnz	short DoPack
 16852 00006F9E 80E201                  		and	dl, 1
 16853 00006FA1 360016[7A05]            		add	[ss:CMETA], dl
 16854 00006FA6 7F2D                    		jg	short CopyBad
 16855 00006FA8 7504                    		jnz	short DoPack
 16856 00006FAA 08D2                    		or	dl, dl
 16857 00006FAC 742F                    		jz	short CopyBadPath
 16858                                  
 16859                                  DoPack:					; ...
 16860 00006FAE 897606                  		mov	[bp+6],	si
 16861 00006FB1 16                      		push	ss
 16862 00006FB2 1F                      		pop	ds
 16863 00006FB3 BE[4B05]                		mov	si, NAME1
 16864 00006FB6 8D7E0A                  		lea	di, [bp+10]	; CopyTemp
 16865 00006FB9 57                      		push	di
 16866 00006FBA E8CFB1                  		call	PackName
 16867 00006FBD 5F                      		pop	di
 16868 00006FBE E86CA2                  		call	StrLen
 16869 00006FC1 49                      		dec	cx
 16870 00006FC2 034E02                  		add	cx, [bp+2]	; CopyDoff
 16871 00006FC5 3B4E00                  		cmp	cx, [bp+0]	; CopyBP
 16872 00006FC8 730B                    		jnb	short CopyBad
 16873 00006FCA 89FE                    		mov	si, di
 16874 00006FCC C47E02                  		les	di, [bp+2]	; CopyD
 16875 00006FCF E852A2                  		call	FStrCpy
 16876                                  
 16877                                  _GoodRet:				; ...
 16878 00006FD2 F8                      		clc
 16879 00006FD3 EB0B                    		jmp	short CopyEnd
 16880                                  ; ---------------------------------------------------------------------------
 16881                                  
 16882                                  CopyBad:				; ...
 16883 00006FD5 F9                      		stc
 16884 00006FD6 E8FA00                  		call	ScanPathChar
 16885 00006FD9 B002                    		mov	al, 2		; error_file_not_found
 16886 00006FDB 7503                    		jnz	short CopyEnd
 16887                                  
 16888                                  CopyBadPath:				; ...
 16889 00006FDD F9                      		stc
 16890 00006FDE B003                    		mov	al, 3		; error_path_not_found
 16891                                  
 16892                                  CopyEnd:				; ...
 16893 00006FE0 5D                      		pop	bp
 16894 00006FE1 5F                      		pop	di
 16895 00006FE2 07                      		pop	es
 16896 00006FE3 5E                      		pop	si
 16897 00006FE4 1F                      		pop	ds
 16898 00006FE5 9F                      		lahf
 16899 00006FE6 83C40E                  		add	sp, 14
 16900 00006FE9 E841A2                  		call	StrLen
 16901 00006FEC 49                      		dec	cx
 16902 00006FED 9E                      		sahf
 16903 00006FEE C3                      		retn
 16904                                  
 16905                                  ; =============== S U B	R O U T	I N E =======================================
 16906                                  
 16907                                  Splice:		; ...
 16908 00006FEF 36F606[5A00]FF          		test	byte [ss:SPLICES], 0FFh ; -1
 16909 00006FF5 746A                    		jz	short AllDone
 16910 00006FF7 36FF36[A205]            		push	word [ss:THISCDS]
 16911 00006FFC 36FF36[A405]            		push	word [ss:THISCDS+2]
 16912 00007001 1E                      		push	ds
 16913 00007002 56                      		push	si
 16914 00007003 5F                      		pop	di
 16915 00007004 07                      		pop	es
 16916 00007005 31C0                    		xor	ax, ax
 16917                                  
 16918                                  SpliceScan:				; ...
 16919 00007007 E8D9FC                  		call	GetCDSFromDrv
 16920 0000700A 724B                    		jb	short SpliceDone
 16921 0000700C FEC0                    		inc	al
 16922 0000700E F744430020              		test	word [si+67], 2000h	; [SI+curdir.flags],
 16923                                  					; curdir_splice
 16924 00007013 74F2                    		jz	short SpliceScan
 16925 00007015 57                      		push	di
 16926 00007016 E8A100                  		call	PathPref
 16927 00007019 7403                    		jz	short SpliceFound
 16928                                  
 16929                                  SpliceSkip:				; ...
 16930 0000701B 5F                      		pop	di
 16931 0000701C EBE9                    		jmp	short SpliceScan
 16932                                  ; ---------------------------------------------------------------------------
 16933                                  
 16934                                  SpliceFound:				; ...
 16935 0000701E 26803D00                		cmp	byte [es:di], 0
 16936 00007022 7508                    		jnz	short SpliceDo
 16937 00007024 36F606[4C03]FF          		test	byte [ss:NoSetDir], 0FFh ; -1
 16938 0000702A 75EF                    		jnz	short SpliceSkip
 16939                                  
 16940                                  SpliceDo:				; ...
 16941 0000702C 89FE                    		mov	si, di
 16942 0000702E 06                      		push	es
 16943 0000702F 1F                      		pop	ds
 16944 00007030 5F                      		pop	di
 16945 00007031 E88000                  		call	TextFromDrive1
 16946 00007034 36A1[B605]              		mov	ax, [ss:CURR_DIR_END]
 16947 00007038 09C0                    		or	ax, ax
 16948 0000703A 7808                    		js	short NoPoke
 16949 0000703C 01F8                    		add	ax, di
 16950 0000703E 29F0                    		sub	ax, si
 16951 00007040 36A3[B605]              		mov	[ss:CURR_DIR_END], ax
 16952                                  
 16953                                  NoPoke:					; ...
 16954 00007044 803C00                  		cmp	byte [si], 0
 16955 00007047 7503                    		jnz	short SpliceCopy
 16956 00007049 B05C                    		mov	al, '\'
 16957 0000704B AA                      		stosb
 16958                                  
 16959                                  SpliceCopy:				; ...
 16960 0000704C E8D5A1                  		call	FStrCpy
 16961 0000704F 83C404                  		add	sp, 4
 16962 00007052 80C901                  		or	cl, 1
 16963 00007055 EB0C                    		jmp	short DoSet
 16964                                  ; ---------------------------------------------------------------------------
 16965                                  
 16966                                  SpliceDone:				; ...
 16967 00007057 368F06[A405]            		pop	word [ss:THISCDS+2]
 16968 0000705C 368F06[A205]            		pop	word [ss:THISCDS]
 16969                                  
 16970                                  AllDone:				; ...
 16971 00007061 31C9                    		xor	cx, cx
 16972                                  
 16973                                  DoSet:					; ...
 16974 00007063 36C536[A205]            		lds	si, [ss:THISCDS]
 16975 00007068 C47C45                  		les	di, [si+69]	; [SI+curdir.devptr]
 16976 0000706B 36893E[8A05]            		mov	word [ss:THISDPB], di
 16977 00007070 368C06[8C05]            		mov	word [ss:THISDPB+2], es
 16978                                  
 16979                                  Splice_retn:				; ...
 16980 00007075 C3                      		retn
 16981                                  
 16982                                  ; ---------------------------------------------------------------------------
 16983                                  
 16984                                  _$NameTrans:				; ...
 16985 00007076 1E                      		push	ds
 16986 00007077 56                      		push	si
 16987 00007078 06                      		push	es
 16988 00007079 57                      		push	di
 16989 0000707A 51                      		push	cx
 16990 0000707B B516                    		mov	ch, 16h		; attr_hidden+attr_system+attr_directory
 16991 0000707D E8C102                  		call	SetAttrib
 16992 00007080 BF[BE03]                		mov	di, OPENBUF
 16993 00007083 E8E3FC                  		call	TransPath
 16994 00007086 59                      		pop	cx
 16995 00007087 5F                      		pop	di
 16996 00007088 07                      		pop	es
 16997 00007089 5E                      		pop	si
 16998 0000708A 1F                      		pop	ds
 16999 0000708B 7303                    		jnb	short TransOK
 17000 0000708D E98D95                  		jmp	SYS_RET_ERR
 17001                                  ; ---------------------------------------------------------------------------
 17002                                  
 17003                                  TransOK:				; ...
 17004 00007090 BE[BE03]                		mov	si, OPENBUF
 17005 00007093 16                      		push	ss
 17006 00007094 1F                      		pop	ds
 17007 00007095 E88CA1                  		call	FStrCpy
 17008 00007098 E97995                  		jmp	SYS_RETURN	; SYS_RET_OK
 17009                                  
 17010                                  ; =============== S U B	R O U T	I N E =======================================
 17011                                  
 17012                                  DriveFromText:	; ...
 17013 0000709B 30C0                    		xor	al, al
 17014 0000709D 803C00                  		cmp	byte [si], 0
 17015 000070A0 74D3                    		jz	short Splice_retn
 17016 000070A2 807C013A                		cmp	byte [si+1], ':'
 17017 000070A6 75CD                    		jnz	short Splice_retn
 17018 000070A8 AD                      		lodsw
 17019 000070A9 0C20                    		or	al, 20h
 17020 000070AB 2C60                    		sub	al, 60h		; 'a'-1
 17021 000070AD 75C6                    		jnz	short Splice_retn
 17022 000070AF B0FF                    		mov	al, 0FFh	; -1
 17023 000070B1 C3                      		retn
 17024                                  
 17025                                  ; =============== S U B	R O U T	I N E =======================================
 17026                                  
 17027                                  TextFromDrive:	; ...
 17028 000070B2 FEC0                    		inc	al
 17029                                  
 17030                                  TextFromDrive1:				; ...
 17031 000070B4 0440                    		add	al, 40h		; 'A'-1
 17032 000070B6 B43A                    		mov	ah, ':'         ; 3Ah
 17033 000070B8 AB                      		stosw
 17034                                  
 17035                                  PathPref_retn:				; ...
 17036 000070B9 C3                      		retn
 17037                                  
 17038                                  ; =============== S U B	R O U T	I N E =======================================
 17039                                  
 17040                                  PathPref:		; ...
 17041 000070BA E87EA1                  		call	DStrLen
 17042 000070BD 49                      		dec	cx
 17043 000070BE F3A6                    		repe cmpsb
 17044 000070C0 75F7                    		jnz	short PathPref_retn
 17045 000070C2 50                      		push	ax
 17046 000070C3 8A44FF                  		mov	al, [si-1]
 17047 000070C6 E872E1                  		call	PATHCHRCMP
 17048 000070C9 7406                    		jz	short Prefix
 17049 000070CB 268A05                  		mov	al, [es:di]
 17050 000070CE E875FE                  		call	PathSepGotCh
 17051                                  
 17052                                  Prefix:					; ...
 17053 000070D1 58                      		pop	ax
 17054 000070D2 C3                      		retn
 17055                                  
 17056                                  ; =============== S U B	R O U T	I N E =======================================
 17057                                  
 17058                                  ScanPathChar:	; ...
 17059 000070D3 AC                      		lodsb
 17060 000070D4 E86FFE                  		call	PathSepGotCh
 17061 000070D7 75FA                    		jnz	short ScanPathChar
 17062 000070D9 E85FE1                  		call	PATHCHRCMP
 17063 000070DC C3                      		retn
 17064                                  
 17065                                  ; =============== S U B	R O U T	I N E =======================================
 17066                                  
 17067                                  _$OPEN:		; ...
 17068 000070DD 30E4                    		xor	ah, ah
 17069                                  
 17070                                  _$Open2:				; ...
 17071 000070DF B516                    		mov	ch, 16h		; attr_hidden+attr_system+attr_directory
 17072 000070E1 E85D02                  		call	SetAttrib
 17073 000070E4 B9[7C2C]                		mov	cx, DOS_OPEN
 17074 000070E7 50                      		push	ax
 17075                                  
 17076                                  AccessFile:				; ...
 17077 000070E8 E86BA2                  		call	ECritDisk	; call ECritSFT
 17078 000070EB E8C4F7                  		call	SFNFree
 17079 000070EE E885A2                  		call	LCritDisk	; call LCritSFT
 17080 000070F1 7214                    		jb	short OpenFailJ
 17081 000070F3 36891E[AA05]            		mov	[ss:SFN], bx
 17082 000070F8 36893E[9E05]            		mov	word [ss:THISSFT], di
 17083 000070FD 368C06[A005]            		mov	word [ss:THISSFT+2], es
 17084 00007102 E89AF7                  		call	JFNFree
 17085 00007105 7303                    		jnb	short SaveJFN
 17086                                  
 17087                                  OpenFailJ:				; ...
 17088 00007107 E99300                  		jmp	OpenFail
 17089                                  ; ---------------------------------------------------------------------------
 17090                                  
 17091                                  SaveJFN:				; ...
 17092 0000710A 36893E[AE05]            		mov	word [ss:PJFN], di
 17093 0000710F 368C06[B005]            		mov	word [ss:PJFN+2], es
 17094 00007114 36891E[AC05]            		mov	[ss:JFN], bx
 17095 00007119 368B1E[AA05]            		mov	bx, [ss:SFN]
 17096 0000711E 26881D                  		mov	[es:di], bl
 17097 00007121 89D6                    		mov	si, dx
 17098 00007123 BF[BE03]                		mov	di, OPENBUF
 17099 00007126 51                      		push	cx
 17100 00007127 E83FFC                  		call	TransPath
 17101 0000712A 5B                      		pop	bx
 17102 0000712B 36C536[9E05]            		lds	si, [ss:THISSFT]
 17103 00007130 720A                    		jb	short OpenCleanJ
 17104 00007132 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
 17105 00007138 7404                    		jz	short SetSearch
 17106 0000713A B002                    		mov	al, 2
 17107                                  
 17108                                  OpenCleanJ:				; ...
 17109 0000713C EB50                    		jmp	short OpenClean
 17110                                  ; ---------------------------------------------------------------------------
 17111                                  
 17112                                  SetSearch:				; ...
 17113 0000713E 58                      		pop	ax
 17114 0000713F 31C9                    		xor	cx, cx
 17115 00007141 894C02                  		mov	[si+2],	cx	; [SI+SF_ENTRY.sf_mode]
 17116 00007144 894C33                  		mov	[si+33h], cx	; [SI+SF_ENTRY.sf_MFT]
 17117 00007147 81FB[7C2C]              		cmp	bx, DOS_OPEN
 17118 0000714B 7509                    		jnz	short _DoOper
 17119 0000714D A880                    		test	al, 80h
 17120 0000714F 7405                    		jz	short _DoOper
 17121 00007151 247F                    		and	al, 7Fh
 17122 00007153 B90010                  		mov	cx, 1000h	; sf_no_inherit
 17123                                  
 17124                                  _DoOper:				; ...
 17125 00007156 57                      		push	di
 17126 00007157 06                      		push	es
 17127 00007158 1E                      		push	ds
 17128 00007159 07                      		pop	es
 17129 0000715A 56                      		push	si
 17130 0000715B 5F                      		pop	di
 17131 0000715C E809BB                  		call	Set_EXT_mode
 17132 0000715F 07                      		pop	es
 17133 00007160 5F                      		pop	di
 17134 00007161 16                      		push	ss
 17135 00007162 1F                      		pop	ds
 17136 00007163 51                      		push	cx
 17137 00007164 FFD3                    		call	bx
 17138 00007166 59                      		pop	cx
 17139 00007167 C536[9E05]              		lds	si, [THISSFT]
 17140 0000716B 721A                    		jb	short OpenE2
 17141 0000716D C7040100                		mov	word [si], 1
 17142 00007171 094C05                  		or	[si+5],	cx	; [SI+SF_ENTRY.sf_flags]
 17143 00007174 36A1[AC05]              		mov	ax, [ss:JFN]
 17144                                  		;call	[ss:ShCol]	; Call far [ss:JShare+(12*4)] ;	12 = ShCol
 17145 00007178 36FF1E[C000]            		call	far [ss:JShare+(12*4)]
 17146 0000717D 36C706[AA05]FFFF        		mov	word [ss:SFN], 0FFFFh ; -1
 17147                                  
 17148                                  OpenOkj:				; ...
 17149 00007184 E98D94                  		jmp	SYS_RETURN	; SYS_RET_OK
 17150                                  ; ---------------------------------------------------------------------------
 17151                                  
 17152                                  OpenE2:					; ...
 17153 00007187 83F857                  		cmp	ax, 57h		; error_invalid_parameter
 17154 0000718A 7503                    		jnz	short OpenE
 17155 0000718C EB11                    		jmp	short OpenCritLeave
 17156                                  ; ---------------------------------------------------------------------------
 17157                                  
 17158                                  OpenClean:				; ...
 17159 0000718E 5B                      		pop	bx
 17160                                  
 17161                                  OpenE:					; ...
 17162 0000718F C7040000                		mov	word [si], 0
 17163 00007193 36C536[AE05]            		lds	si, [ss:PJFN]
 17164 00007198 C604FF                  		mov	byte [si], 0FFh ; -1
 17165 0000719B EB02                    		jmp	short OpenCritLeave
 17166                                  ; ---------------------------------------------------------------------------
 17167                                  
 17168                                  OpenFail:				; ...
 17169 0000719D FB                      		sti
 17170 0000719E 59                      		pop	cx
 17171                                  
 17172                                  OpenCritLeave:				; ...
 17173 0000719F 36C706[AA05]FFFF        		mov	word [ss:SFN], 0FFFFh ; -1
 17174 000071A6 36833E[2403]25          		cmp	word [ss:EXTERR], 25h ; error_Code_Page_Mismatched
 17175 000071AC 7503                    		jnz	short NORERR
 17176 000071AE E97494                  		jmp	From_GetSet
 17177                                  ; ---------------------------------------------------------------------------
 17178                                  
 17179                                  NORERR:					; ...
 17180 000071B1 E96994                  		jmp	SYS_RET_ERR
 17181                                  
 17182                                  ; ---------------------------------------------------------------------------
 17183                                  
 17184                                  _$CREAT:				; ...
 17185 000071B4 51                      		push	cx
 17186 000071B5 B9[502B]                		mov	cx, DOS_CREATE
 17187                                  ; START	OF FUNCTION CHUNK FOR _$CreateNewFile
 17188                                  
 17189                                  AccessSet:				; ...
 17190 000071B8 36C606[6D05]06          		mov	byte [ss:SATTRIB], 6 ; attr_hidden+attr_system
 17191 000071BE E927FF                  		jmp	AccessFile
 17192                                  ; END OF FUNCTION CHUNK	FOR _$CreateNewFile
 17193                                  ; ---------------------------------------------------------------------------
 17194                                  
 17195                                  _$CHMOD:				; ...
 17196 000071C1 BF[BE03]                		mov	di, OPENBUF
 17197 000071C4 50                      		push	ax
 17198 000071C5 51                      		push	cx
 17199 000071C6 89D6                    		mov	si, dx
 17200 000071C8 E8A2FB                  		call	TransPathSet
 17201 000071CB 59                      		pop	cx
 17202 000071CC 58                      		pop	ax
 17203 000071CD 7233                    		jb	short ChModErr
 17204 000071CF 16                      		push	ss
 17205 000071D0 1F                      		pop	ds
 17206 000071D1 803E[7A05]FF            		cmp	byte [CMETA], 0FFh ; -1
 17207 000071D6 752A                    		jnz	short ChModErr
 17208 000071D8 C606[6D05]16            		mov	byte [SATTRIB], 16h ; attr_hidden+attr_system+attr_directory
 17209 000071DD 2C01                    		sub	al, 1
 17210 000071DF 720B                    		jb	short ChModGet
 17211 000071E1 7416                    		jz	short ChModSet
 17212 000071E3 C606[2303]01            		mov	byte [EXTERR_LOCUS], 1 ; errLOC_Unk
 17213 000071E8 B001                    		mov	al, 1		; error_invalid_function
 17214                                  ; START	OF FUNCTION CHUNK FOR _$UNLINK
 17215                                  
 17216                                  chmod_errj:				; ...
 17217 000071EA EBC5                    		jmp	short NORERR
 17218                                  ; END OF FUNCTION CHUNK	FOR _$UNLINK
 17219                                  ; ---------------------------------------------------------------------------
 17220                                  
 17221                                  ChModGet:				; ...
 17222 000071EC E847B8                  		call	GET_FILE_INFO
 17223 000071EF 7213                    		jb	short ChModE
 17224 000071F1 E8B192                  		call	Get_User_Stack
 17225 000071F4 894404                  		mov	[si+4],	ax	; [SI+user_env.user_CX]
 17226                                  ; START	OF FUNCTION CHUNK FOR _$UNLINK
 17227                                  
 17228                                  OpenOkj2:				; ...
 17229 000071F7 EB8B                    		jmp	short OpenOkj
 17230                                  ; END OF FUNCTION CHUNK	FOR _$UNLINK
 17231                                  ; ---------------------------------------------------------------------------
 17232                                  
 17233                                  ChModSet:				; ...
 17234 000071F9 89C8                    		mov	ax, cx
 17235 000071FB E899B8                  		call	SET_FILE_ATTRIBUTE
 17236 000071FE 7204                    		jb	short ChModE
 17237                                  ; START	OF FUNCTION CHUNK FOR _$UNLINK
 17238                                  
 17239                                  OpenOkj3:				; ...
 17240 00007200 EBF5                    		jmp	short OpenOkj2
 17241                                  ; ---------------------------------------------------------------------------
 17242                                  
 17243                                  ChModErr:				; ...
 17244 00007202 B003                    		mov	al, 3
 17245                                  
 17246                                  ChModE:					; ...
 17247 00007204 EBE4                    		jmp	short chmod_errj
 17248                                  ; END OF FUNCTION CHUNK	FOR _$UNLINK
 17249                                  
 17250                                  ; =============== S U B	R O U T	I N E =======================================
 17251                                  
 17252                                  _$UNLINK:		; ...
 17253                                  
 17254                                  ; FUNCTION CHUNK AT AFBA SIZE 00000002 BYTES
 17255                                  ; FUNCTION CHUNK AT AFC7 SIZE 00000002 BYTES
 17256                                  ; FUNCTION CHUNK AT AFD0 SIZE 00000006 BYTES
 17257                                  
 17258 00007206 51                      		push	cx
 17259 00007207 89D6                    		mov	si, dx
 17260 00007209 BF[BE03]                		mov	di, OPENBUF
 17261 0000720C E85EFB                  		call	TransPathSet
 17262 0000720F 59                      		pop	cx
 17263 00007210 72F0                    		jb	short ChModErr
 17264 00007212 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
 17265 00007218 750E                    		jnz	short NotFound
 17266 0000721A 16                      		push	ss
 17267 0000721B 1F                      		pop	ds
 17268 0000721C B506                    		mov	ch, 6		; attr_hidden+attr_system
 17269 0000721E E82001                  		call	SetAttrib
 17270 00007221 E8F5B3                  		call	DOS_DELETE
 17271 00007224 7204                    		jb	short UnlinkE
 17272                                  
 17273                                  UnlinkOk:				; ...
 17274 00007226 EBD8                    		jmp	short OpenOkj3
 17275                                  ; ---------------------------------------------------------------------------
 17276                                  
 17277                                  NotFound:				; ...
 17278 00007228 B003                    		mov	al, 3
 17279                                  
 17280                                  UnlinkE:				; ...
 17281 0000722A EBD8                    		jmp	short ChModE
 17282                                  
 17283                                  ; ---------------------------------------------------------------------------
 17284                                  
 17285                                  _$RENAME:				; ...
 17286 0000722C 51                      		push	cx
 17287 0000722D 1E                      		push	ds
 17288 0000722E 52                      		push	dx
 17289 0000722F 06                      		push	es
 17290 00007230 1F                      		pop	ds
 17291 00007231 89FE                    		mov	si, di
 17292 00007233 BF[3E04]                		mov	di, RENBUF
 17293 00007236 E834FB                  		call	TransPathSet
 17294 00007239 36FF36[B205]            		push	word [ss:WFP_START]
 17295 0000723E 368F06[B405]            		pop	word [ss:REN_WFP]
 17296 00007243 5E                      		pop	si
 17297 00007244 1F                      		pop	ds
 17298 00007245 59                      		pop	cx
 17299                                  
 17300                                  epjc2:					; ...
 17301 00007246 72BA                    		jb	short ChModErr
 17302 00007248 36803E[7A05]FF          		cmp	byte [ss:CMETA], 0FFh ; -1
 17303 0000724E 75D8                    		jnz	short NotFound
 17304 00007250 51                      		push	cx
 17305 00007251 BF[BE03]                		mov	di, OPENBUF
 17306 00007254 E816FB                  		call	TransPathSet
 17307 00007257 59                      		pop	cx
 17308 00007258 72EC                    		jb	short epjc2
 17309 0000725A 16                      		push	ss
 17310 0000725B 1F                      		pop	ds
 17311 0000725C 803E[7A05]FF            		cmp	byte [CMETA], 0FFh
 17312 00007261 72C5                    		jb	short NotFound
 17313 00007263 FF36[A205]              		push	word [THISCDS]
 17314 00007267 FF36[A405]              		push	word [THISCDS+2]
 17315 0000726B BF[BE03]                		mov	di, OPENBUF
 17316 0000726E 16                      		push	ss
 17317 0000726F 07                      		pop	es
 17318 00007270 30C0                    		xor	al, al
 17319                                  
 17320                                  rnloop:					; ...
 17321 00007272 E86EFA                  		call	GetCDSFromDrv
 17322 00007275 7210                    		jb	short dorn
 17323 00007277 E8799F                  		call	StrCmp
 17324 0000727A 7404                    		jz	short rnerr
 17325 0000727C FEC0                    		inc	al
 17326 0000727E EBF2                    		jmp	short rnloop
 17327                                  ; ---------------------------------------------------------------------------
 17328                                  
 17329                                  rnerr:					; ...
 17330 00007280 83C404                  		add	sp, 4
 17331 00007283 B010                    		mov	al, 10h		; error_current_directory
 17332 00007285 EBA3                    		jmp	short UnlinkE
 17333                                  ; ---------------------------------------------------------------------------
 17334                                  
 17335                                  dorn:					; ...
 17336 00007287 368F06[A405]            		pop	word [ss:THISCDS+2]
 17337 0000728C 368F06[A205]            		pop	word [ss:THISCDS]
 17338 00007291 16                      		push	ss
 17339 00007292 1F                      		pop	ds
 17340 00007293 B516                    		mov	ch, 16h		; attr_directory+attr_hidden+attr_system
 17341 00007295 E8A900                  		call	SetAttrib
 17342 00007298 E85EB5                  		call	DOS_RENAME
 17343 0000729B 728D                    		jb	short UnlinkE
 17344 0000729D EB87                    		jmp	short UnlinkOk
 17345                                  
 17346                                  ; =============== S U B	R O U T	I N E =======================================
 17347                                  
 17348                                  _$CreateNewFile:
 17349                                  
 17350                                  ; FUNCTION CHUNK AT AF88 SIZE 00000009 BYTES
 17351                                  
 17352 0000729F 51                      		push	cx
 17353 000072A0 B9[1F2C]                		mov	cx, DOS_Create_New
 17354 000072A3 E912FF                  		jmp	AccessSet
 17355                                  
 17356                                  ; =============== S U B	R O U T	I N E =======================================
 17357                                  
 17358                                  BinToAscii:		; ...
 17359 000072A6 B90404                  		mov	cx, 404h
 17360                                  
 17361                                  bta5:					; ...
 17362 000072A9 D3C0                    		rol	ax, cl
 17363 000072AB 50                      		push	ax
 17364 000072AC 240F                    		and	al, 0Fh
 17365 000072AE 0441                    		add	al, 'A'
 17366 000072B0 AA                      		stosb
 17367 000072B1 58                      		pop	ax
 17368 000072B2 FECD                    		dec	ch
 17369 000072B4 75F3                    		jnz	short bta5
 17370 000072B6 C3                      		retn
 17371                                  
 17372                                  ; ---------------------------------------------------------------------------
 17373                                  
 17374                                  _$CreateTempFile:			; ...
 17375 000072B7 55                      		push	bp
 17376 000072B8 89E5                    		mov	bp, sp
 17377 000072BA 83EC0A                  		sub	sp, 10
 17378 000072BD F7C1D8FF                		test	cx, 0FFD8h	; ~attr_changeable
 17379 000072C1 7405                    		jz	short OKatts
 17380 000072C3 B80500                  		mov	ax, 5		; error_access_denied
 17381 000072C6 EB6D                    		jmp	short SETTMPERR
 17382                                  ; ---------------------------------------------------------------------------
 17383                                  
 17384                                  OKatts:					; ...
 17385 000072C8 894EF6                  		mov	[bp-10], cx	; attr
 17386 000072CB 8956F8                  		mov	[bp-8],	dx	; FilPtrL
 17387 000072CE 8C5EFA                  		mov	word [bp-6], ds ; FilPtrH
 17388 000072D1 8C5EFE                  		mov	word [bp-2], ds ; EndPtrH
 17389 000072D4 1E                      		push	ds
 17390 000072D5 07                      		pop	es
 17391 000072D6 89D7                    		mov	di, dx
 17392 000072D8 89F9                    		mov	cx, di
 17393 000072DA F7D9                    		neg	cx
 17394 000072DC 09C9                    		or	cx, cx
 17395 000072DE 7503                    		jnz	short okok
 17396 000072E0 B9FFFF                  		mov	cx, 0FFFFh
 17397                                  
 17398                                  okok:					; ...
 17399 000072E3 31C0                    		xor	ax, ax
 17400 000072E5 F2AE                    		repne scasb
 17401 000072E7 4F                      		dec	di
 17402 000072E8 268A45FF                		mov	al, [es:di-1]
 17403 000072EC E84CDF                  		call	PATHCHRCMP
 17404 000072EF 7403                    		jz	short SETENDPTR
 17405                                  
 17406                                  STOREPTH:
 17407 000072F1 B05C                    		mov	al, '\'
 17408 000072F3 AA                      		stosb
 17409                                  
 17410                                  SETENDPTR:				; ...
 17411 000072F4 897EFC                  		mov	[bp-4],	di	; EndPtrL
 17412                                  
 17413                                  CreateLoop:				; ...
 17414 000072F7 16                      		push	ss
 17415 000072F8 1F                      		pop	ds
 17416 000072F9 55                      		push	bp
 17417 000072FA E81E98                  		call	READTIME
 17418 000072FD 5D                      		pop	bp
 17419 000072FE C47EFC                  		les	di, [bp-4]	; EndPtr
 17420 00007301 89C8                    		mov	ax, cx
 17421 00007303 E8A0FF                  		call	BinToAscii
 17422 00007306 89D0                    		mov	ax, dx
 17423 00007308 E89BFF                  		call	BinToAscii
 17424 0000730B 30C0                    		xor	al, al
 17425 0000730D AA                      		stosb
 17426 0000730E C556F8                  		lds	dx, [bp-8]	; FilPtr
 17427 00007311 8B4EF6                  		mov	cx, [bp-10]	; Attr
 17428 00007314 55                      		push	bp
 17429 00007315 E887FF                  		call	_$CreateNewFile
 17430 00007318 5D                      		pop	bp
 17431 00007319 731B                    		jnb	short CreateDone
 17432 0000731B 3C50                    		cmp	al, 50h		; error_file_exists
 17433 0000731D 74D8                    		jz	short CreateLoop
 17434 0000731F 3C05                    		cmp	al, 5		; error_access_denied
 17435 00007321 7512                    		jnz	short SETTMPERR
 17436 00007323 36833E[2403]41          		cmp	word [ss:EXTERR], 41h ; error_net_access_denied
 17437 00007329 740A                    		jz	short SETTMPERR
 17438 0000732B 36833E[2403]53          		cmp	word [ss:EXTERR], 53h ; error_FAIL_I24
 17439 00007331 7402                    		jz	short SETTMPERR
 17440 00007333 EBC2                    		jmp	short CreateLoop
 17441                                  ; ---------------------------------------------------------------------------
 17442                                  
 17443                                  SETTMPERR:				; ...
 17444 00007335 F9                      		stc
 17445                                  
 17446                                  CreateDone:				; ...
 17447 00007336 89EC                    		mov	sp, bp
 17448 00007338 5D                      		pop	bp
 17449 00007339 7203                    		jb	short CreateFail
 17450 0000733B E9D692                  		jmp	SYS_RETURN	; SYS_RET_OK
 17451                                  ; ---------------------------------------------------------------------------
 17452                                  
 17453                                  CreateFail:				; ...
 17454 0000733E E9DC92                  		jmp	SYS_RET_ERR
 17455                                  
 17456                                  ; =============== S U B	R O U T	I N E =======================================
 17457                                  
 17458                                  SetAttrib:		; ...
 17459 00007341 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 17460 00007347 7502                    		jnz	short Set
 17461 00007349 88E9                    		mov	cl, ch
 17462                                  
 17463                                  Set:					; ...
 17464 0000734B 36880E[6D05]            		mov	[ss:SATTRIB], cl
 17465 00007350 C3                      		retn
 17466                                  
 17467                                  ; ---------------------------------------------------------------------------
 17468                                  
 17469                                  _$Extended_Open:			; ...
 17470 00007351 368916[F405]            		mov	[ss:EXTOPEN_FLAG], dx
 17471 00007356 36C706[F705]0000        		mov	word [ss:EXTOPEN_IO_MODE], 0
 17472 0000735D F7C200FE                		test	dx, 0FE00h	; RESERVED_BITS_MASK
 17473 00007361 7545                    		jnz	short ext_inval2
 17474 00007363 88D4                    		mov	ah, dl
 17475 00007365 80FA00                  		cmp	dl, 0
 17476 00007368 743E                    		jz	short ext_inval2
 17477 0000736A 80E20F                  		and	dl, 0Fh
 17478 0000736D 80FA02                  		cmp	dl, 2
 17479 00007370 7736                    		ja	short ext_inval2
 17480 00007372 80E4F0                  		and	ah, 0F0h	; NOT_EXISTS_MASK
 17481 00007375 80FC10                  		cmp	ah, 10h
 17482 00007378 772E                    		ja	short ext_inval2
 17483 0000737A 368C06[FB05]            		mov	[ss:SAVE_ES], es
 17484 0000737F 36893E[F905]            		mov	[ss:SAVE_DI], di
 17485 00007384 36FF36[F405]            		push	word [ss:EXTOPEN_FLAG]
 17486 00007389 368F06[FD05]            		pop	word [ss:SAVE_DX]
 17487 0000738E 36890E[FF05]            		mov	[ss:SAVE_CX], cx
 17488 00007393 36891E[0106]            		mov	[ss:SAVE_BX], bx
 17489 00007398 368C1E[0506]            		mov	[ss:SAVE_DS], ds
 17490 0000739D 368936[0306]            		mov	[ss:SAVE_SI], si
 17491 000073A2 89F2                    		mov	dx, si
 17492 000073A4 89D8                    		mov	ax, bx
 17493 000073A6 EB0B                    		jmp	short goopen2
 17494                                  ; ---------------------------------------------------------------------------
 17495                                  
 17496                                  ext_inval2:				; ...
 17497 000073A8 B001                    		mov	al, 1		; error_invalid_function
 17498                                  
 17499                                  eo_err:					; ...
 17500 000073AA EB92                    		jmp	short CreateFail
 17501                                  ; ---------------------------------------------------------------------------
 17502 000073AC 59                      		pop	cx
 17503 000073AD 5E                      		pop	si
 17504 000073AE B00D                    		mov	al, 13		; error_invalid_data
 17505 000073B0 EBF8                    		jmp	short eo_err
 17506                                  ; ---------------------------------------------------------------------------
 17507                                  
 17508                                  error_return:				; ...
 17509 000073B2 C3                      		retn
 17510                                  ; ---------------------------------------------------------------------------
 17511                                  
 17512                                  goopen2:				; ...
 17513 000073B3 F7C30020                		test	bx, 2000h
 17514 000073B7 7406                    		jz	short goopen
 17515 000073B9 36800E[F605]02          		or	byte [ss:EXTOPEN_ON], 2 ; EXT_OPEN_I24_OFF
 17516                                  
 17517                                  goopen:					; ...
 17518 000073BF 36800E[F605]01          		or	byte [ss:EXTOPEN_ON], 1 ; EXT_OPEN_ON
 17519 000073C5 368126[F405]FF00        		and	word [ss:EXTOPEN_FLAG], 0FFh
 17520 000073CC 36833E[F405]10          		cmp	word [ss:EXTOPEN_FLAG], 10h ; EXT_EXISTS_FAIL+EXT_NEXISTS_CREATE
 17521 000073D2 751A                    		jnz	short chknext
 17522 000073D4 E8C8FE                  		call	_$CreateNewFile
 17523 000073D7 72D9                    		jb	short error_return
 17524 000073D9 36803E[F605]00          		cmp	byte [ss:EXTOPEN_ON], 0
 17525 000073DF 740A                    		jz	short ok_return2
 17526 000073E1 36C706[F405]0200        		mov	word [ss:EXTOPEN_FLAG], 2 ; ACTION_CREATED_OPENED
 17527 000073E8 E98300                  		jmp	setXAttr
 17528                                  ; ---------------------------------------------------------------------------
 17529                                  
 17530                                  ok_return2:				; ...
 17531 000073EB E92692                  		jmp	SYS_RETURN	; SYS_RET_OK
 17532                                  ; ---------------------------------------------------------------------------
 17533                                  
 17534                                  chknext:				; ...
 17535 000073EE 36F706[F405]0100        		test	word [ss:EXTOPEN_FLAG], 1 ; EXT_EXISTS_OPEN
 17536 000073F5 7527                    		jnz	short exist_open
 17537 000073F7 E8BAFD                  		call	_$CREAT
 17538 000073FA 72B6                    		jb	short error_return
 17539 000073FC 36803E[F605]00          		cmp	byte [ss:EXTOPEN_ON], 0
 17540 00007402 74E7                    		jz	short ok_return2
 17541 00007404 36C706[F405]0200        		mov	word [ss:EXTOPEN_FLAG], 2 ; ACTION_CREATED_OPENED
 17542 0000740B 36F606[F605]04          		test	byte [ss:EXTOPEN_ON], 4 ; EXT_FILE_NOT_EXISTS
 17543 00007411 755B                    		jnz	short setXAttr
 17544 00007413 36C706[F405]0300        		mov	word [ss:EXTOPEN_FLAG], 3 ; ACTION_REPLACED_OPENED
 17545 0000741A EB52                    		jmp	short setXAttr
 17546                                  ; ---------------------------------------------------------------------------
 17547                                  
 17548                                  error_return2:				; ...
 17549 0000741C F9                      		stc
 17550 0000741D C3                      		retn
 17551                                  ; ---------------------------------------------------------------------------
 17552                                  
 17553                                  exist_open:				; ...
 17554 0000741E 36F606[7205]FF          		test	byte [ss:FSHARING], 0FFh ; -1
 17555 00007424 7402                    		jz	short noserver
 17556 00007426 88E9                    		mov	cl, ch
 17557                                  
 17558                                  noserver:				; ...
 17559 00007428 E8B4FC                  		call	_$Open2
 17560 0000742B 7332                    		jnb	short ext_ok
 17561 0000742D 36803E[F605]00          		cmp	byte [ss:EXTOPEN_ON], 0
 17562 00007433 74E7                    		jz	short error_return2
 17563 00007435 83F802                  		cmp	ax, 2		; error_file_not_found
 17564 00007438 75E2                    		jnz	short error_return2
 17565 0000743A 36F706[F405]1000        		test	word [ss:EXTOPEN_FLAG], 10h ; EXT_NEXISTS_CREATE
 17566 00007441 7502                    		jnz	short do_creat
 17567 00007443 EB5E                    		jmp	short extexit
 17568                                  ; ---------------------------------------------------------------------------
 17569                                  
 17570                                  do_creat:				; ...
 17571 00007445 368B0E[FF05]            		mov	cx, [ss:SAVE_CX]
 17572 0000744A 36C536[0306]            		lds	si, [ss:SAVE_SI]
 17573 0000744F 89F2                    		mov	dx, si
 17574 00007451 E860FD                  		call	_$CREAT
 17575 00007454 724D                    		jb	short extexit
 17576 00007456 36C706[F405]0200        		mov	word [ss:EXTOPEN_FLAG], 2 ; ACTION_CREATED_OPENED
 17577 0000745D EB0F                    		jmp	short setXAttr
 17578                                  ; ---------------------------------------------------------------------------
 17579                                  
 17580                                  ext_ok:					; ...
 17581 0000745F 36803E[F605]00          		cmp	byte [ss:EXTOPEN_ON], 0
 17582 00007465 7415                    		jz	short ok_return
 17583 00007467 36C706[F405]0100        		mov	word [ss:EXTOPEN_FLAG], 1 ; ACTION_OPENED
 17584                                  
 17585                                  setXAttr:				; ...
 17586 0000746E 50                      		push	ax
 17587 0000746F E83390                  		call	Get_User_Stack
 17588 00007472 36A1[F405]              		mov	ax, [ss:EXTOPEN_FLAG]
 17589 00007476 894404                  		mov	[si+4],	ax	; [SI+user_env.user_CX]
 17590 00007479 58                      		pop	ax
 17591 0000747A 8904                    		mov	[si], ax	; [SI+user_env.user_AX]
 17592                                  
 17593                                  ok_return:				; ...
 17594 0000747C E99591                  		jmp	SYS_RETURN	; SYS_RET_OK
 17595                                  ; ---------------------------------------------------------------------------
 17596 0000747F 5B                      		pop	bx
 17597 00007480 50                      		push	ax
 17598 00007481 36833E[F405]02          		cmp	word [ss:EXTOPEN_FLAG], 2 ; ACTION_CREATED_OPENED
 17599 00007487 750C                    		jnz	short justopen
 17600 00007489 36C536[0306]            		lds	si, [ss:SAVE_SI]
 17601 0000748E C514                    		lds	dx, [si]
 17602 00007490 E873FD                  		call	_$UNLINK
 17603 00007493 EB03                    		jmp	short reserror
 17604                                  ; ---------------------------------------------------------------------------
 17605                                  
 17606                                  justopen:				; ...
 17607 00007495 E863F4                  		call	_$CLOSE
 17608                                  
 17609                                  reserror:				; ...
 17610 00007498 58                      		pop	ax
 17611 00007499 EB08                    		jmp	short extexit
 17612                                  ; ---------------------------------------------------------------------------
 17613 0000749B B80200                  		mov	ax, 2		; error_file_not_found
 17614 0000749E EB03                    		jmp	short extexit
 17615                                  ; ---------------------------------------------------------------------------
 17616 000074A0 B80100                  		mov	ax, 1		; error_invalid_function
 17617                                  
 17618                                  extexit:				; ...
 17619 000074A3 E97791                  		jmp	SYS_RET_ERR
 17620                                  ; ---------------------------------------------------------------------------
 17621                                  
 17622                                  _$LockOper:				; ...
 17623 000074A6 3C01                    		cmp	al, 1
 17624 000074A8 770C                    		ja	short lock_bad_func
 17625 000074AA 57                      		push	di
 17626 000074AB E8ACF3                  		call	SFFromHandle
 17627 000074AE 7310                    		jnb	short lock_do
 17628 000074B0 5F                      		pop	di
 17629 000074B1 B006                    		mov	al, 6		; error_invalid_handle
 17630                                  
 17631                                  lockoperr:				; ...
 17632 000074B3 E96791                  		jmp	SYS_RET_ERR
 17633                                  ; ---------------------------------------------------------------------------
 17634                                  
 17635                                  lock_bad_func:				; ...
 17636 000074B6 36C606[2303]01          		mov	byte [ss:EXTERR_LOCUS], 1 ; errLOC_Unk
 17637 000074BC B001                    		mov	al, 1		; error_invalid_function
 17638                                  
 17639                                  lockoperrj:				; ...
 17640 000074BE EBF3                    		jmp	short lockoperr
 17641                                  ; ---------------------------------------------------------------------------
 17642                                  
 17643                                  lock_do:				; ...
 17644 000074C0 89C3                    		mov	bx, ax
 17645 000074C2 BD[A903]                		mov	bp, Lock_Buffer
 17646 000074C5 895600                  		mov	[bp+0],	dx	; [BP+LockBuf.Lock_position]
 17647 000074C8 894E02                  		mov	[bp+2],	cx	; [BP+LockBuf.Lock_position+2]
 17648 000074CB 59                      		pop	cx
 17649 000074CC 894E04                  		mov	[bp+4],	cx	; [BP+LockBuf.Lock_length]
 17650 000074CF 897606                  		mov	[bp+6],	si	; [BP+LockBuf.Lock_length+2]
 17651 000074D2 B90100                  		mov	cx, 1
 17652 000074D5 16                      		push	ss
 17653 000074D6 1F                      		pop	ds
 17654 000074D7 89EA                    		mov	dx, bp
 17655 000074D9 A801                    		test	al, 1		; UNLOCK_ALL
 17656 000074DB 7502                    		jnz	short DOS_Unlock
 17657 000074DD EB1C                    		jmp	short DOS_Lock
 17658                                  ; ---------------------------------------------------------------------------
 17659                                  
 17660                                  DOS_Unlock:				; ...
 17661 000074DF 26F6450680              		test	byte [es:di+6], 80h	; [ES:DI+SF_ENTRY.sf_flags+1],
 17662                                  					; (sf_isnet>>8)
 17663 000074E4 7407                    		jz	short LOCAL_UNLOCK
 17664 000074E6 B80A11                  		mov	ax, 110Ah
 17665 000074E9 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - LOCK	REGION OF FILE
 17666                                  					; BX = file handle, CX:DX = starting offset, SI	= high word of size
 17667                                  					; STACK: WORD low word of size,	ES:DI -> SFT
 17668                                  					; SFT DPB field	-> DPB of drive	containing file, SS = DOS CS
 17669                                  					; Return: CF set error
 17670 000074EB EB04                    		jmp	short ValChk
 17671                                  ; ---------------------------------------------------------------------------
 17672                                  
 17673                                  LOCAL_UNLOCK:				; ...
 17674                                  		;call	[clr_block]	; Call far [JShare+(7*4)] ; 7 =	clr_block
 17675 000074ED FF1E[AC00]              		call	far [JShare+(7*4)]
 17676                                  ValChk:					; ...
 17677 000074F1 7302                    		jnb	short Lock_OK
 17678 000074F3 EBC9                    		jmp	short lockoperrj
 17679                                  ; ---------------------------------------------------------------------------
 17680                                  
 17681                                  Lock_OK:				; ...
 17682 000074F5 A1[0C06]                		mov	ax, [TEMP_VAR]
 17683 000074F8 E91991                  		jmp	SYS_RETURN	; SYS_RET_OK
 17684                                  ; ---------------------------------------------------------------------------
 17685                                  
 17686                                  DOS_Lock:				; ...
 17687 000074FB 26F6450680              		test	byte [es:di+6], 80h
 17688 00007500 7407                    		jz	short LOCAL_LOCK
 17689 00007502 B80A11                  		mov	ax, 110Ah
 17690 00007505 CD2F                    		int	2Fh		; Multiplex - NETWORK REDIRECTOR - LOCK	REGION OF FILE
 17691                                  					; BX = file handle, CX:DX = starting offset, SI	= high word of size
 17692                                  					; STACK: WORD low word of size,	ES:DI -> SFT
 17693                                  					; SFT DPB field	-> DPB of drive	containing file, SS = DOS CS
 17694                                  					; Return: CF set error
 17695 00007507 EBE8                    		jmp	short ValChk
 17696                                  ; ---------------------------------------------------------------------------
 17697                                  
 17698                                  LOCAL_LOCK:				; ...
 17699                                  		;call	[set_block]	; Call far [JShare+(6*4)] ; 6 =	Set_Block
 17700 00007509 FF1E[A800]              		call	far [JShare+(6*4)]
 17701 0000750D EBE2                    		jmp	short ValChk
 17702                                  
 17703                                  ; =============== S U B	R O U T	I N E =======================================
 17704                                  
 17705                                  LOCK_CHECK:		; ...
 17706 0000750F 8B1E[1A00]              		mov	bx, [RetryCount]
 17707                                  
 17708                                  LockRetry:				; ...
 17709 00007513 53                      		push	bx
 17710 00007514 50                      		push	ax
 17711                                  		;call	[chk_block]	; Call far [JShare+(8*4)] ; 8 =	chk_block
 17712 00007515 FF1E[B000]              		call	far [JShare+(8*4)]
 17713 00007519 58                      		pop	ax
 17714 0000751A 5B                      		pop	bx
 17715 0000751B 7307                    		jnb	short lc_ret_label
 17716 0000751D E82C9D                  		call	Idle
 17717 00007520 4B                      		dec	bx
 17718 00007521 75F0                    		jnz	short LockRetry
 17719 00007523 F9                      		stc
 17720                                  
 17721                                  lc_ret_label:				; ...
 17722 00007524 C3                      		retn
 17723                                  
 17724                                  ; =============== S U B	R O U T	I N E =======================================
 17725                                  
 17726                                  LOCK_VIOLATION:	; ...
 17727 00007525 1E                      		push	ds
 17728 00007526 06                      		push	es
 17729 00007527 57                      		push	di
 17730 00007528 51                      		push	cx
 17731 00007529 B82100                  		mov	ax, 21h		; error_lock_violation
 17732 0000752C C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
 17733 00007531 C42E[8A05]              		les	bp, [THISDPB]
 17734 00007535 BF0100                  		mov	di, 1
 17735 00007538 89F9                    		mov	cx, di
 17736 0000753A 268B560B                		mov	dx, [es:bp+11]	; [ES:BP+DPB.FIRST_SECTOR]
 17737 0000753E E869DF                  		call	HARDERR
 17738 00007541 59                      		pop	cx
 17739 00007542 5F                      		pop	di
 17740 00007543 07                      		pop	es
 17741 00007544 1F                      		pop	ds
 17742 00007545 3C01                    		cmp	al, 1
 17743 00007547 74DB                    		jz	short lc_ret_label
 17744 00007549 F9                      		stc
 17745 0000754A C3                      		retn
 17746                                  
 17747                                  ; =============== S U B	R O U T	I N E =======================================
 17748                                  
 17749                                  CheckShare:		; ...
 17750 0000754B 1E                      		push	ds
 17751 0000754C 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 17752 00007551 803E[0303]00            		cmp	byte [fShare], 0
 17753 00007556 1F                      		pop	ds
 17754 00007557 C3                      		retn
 17755                                  
 17756                                  ; =============== S U B	R O U T	I N E =======================================
 17757                                  
 17758                                  SHARE_CHECK:	; ...
 17759                                  		;call	[MFT_enter]	; call far [JShare+(1*4)] ; 1 =	MFT_Enter
 17760 00007558 FF1E[9400]              		call	far [JShare+(1*4)] 
 17761                                  shchk_retn:				; ...
 17762 0000755C C3                      		retn
 17763                                  
 17764                                  ; =============== S U B	R O U T	I N E =======================================
 17765                                  
 17766                                  SHARE_VIOLATION:
 17767 0000755D 1E                      		push	ds
 17768 0000755E 06                      		push	es
 17769 0000755F 57                      		push	di
 17770 00007560 C606[7505]00            		mov	byte [READOP], 0
 17771 00007565 C606[4B03]18            		mov	byte [ALLOWED], 18h ; Allowed_FAIL+Allowed_RETRY
 17772 0000756A C42E[8A05]              		les	bp, [THISDPB]
 17773 0000756E BF0100                  		mov	di, 1
 17774 00007571 89F9                    		mov	cx, di
 17775 00007573 268B5611                		mov	dx, [es:bp+17]	; [ES:BP+DPB.DIR_SECTOR]
 17776 00007577 E830DF                  		call	HARDERR
 17777 0000757A 5F                      		pop	di
 17778 0000757B 07                      		pop	es
 17779 0000757C 1F                      		pop	ds
 17780 0000757D 3C01                    		cmp	al, 1
 17781 0000757F 74DB                    		jz	short shchk_retn
 17782 00007581 F9                      		stc
 17783 00007582 C3                      		retn
 17784                                  
 17785                                  ; =============== S U B	R O U T	I N E =======================================
 17786                                  
 17787                                  ShareEnd:		; ...
 17788                                  		;call	[MFTClose]	; call far [JShare+(2*4)] ; 2 =	MFTClose
 17789 00007583 FF1E[9800]              		call	far [JShare+(2*4)]
 17790 00007587 C3                      		retn
 17791                                  
 17792                                  ; =============== S U B	R O U T	I N E =======================================
 17793                                  
 17794                                  ShareEnter:		; ...
 17795 00007588 51                      		push	cx
 17796                                  
 17797                                  retry:					; ...
 17798 00007589 8B0E[1A00]              		mov	cx, [RetryCount]
 17799                                  
 17800                                  attempt:				; ...
 17801 0000758D C43E[9E05]              		les	di, [THISSFT]
 17802 00007591 31C0                    		xor	ax, ax
 17803 00007593 26894533                		mov	[es:di+51], ax	; [ES:DI+SF_ENTRY.sf_MFT]
 17804 00007597 51                      		push	cx
 17805 00007598 E8BDFF                  		call	SHARE_CHECK
 17806 0000759B 59                      		pop	cx
 17807 0000759C 730A                    		jnb	short done
 17808 0000759E E8AB9C                  		call	Idle
 17809 000075A1 E2EA                    		loop	attempt
 17810 000075A3 E8B7FF                  		call	SHARE_VIOLATION
 17811 000075A6 73E1                    		jnb	short retry
 17812                                  
 17813                                  done:					; ...
 17814 000075A8 59                      		pop	cx
 17815 000075A9 C3                      		retn
 17816                                  
 17817                                  ; =============== S U B	R O U T	I N E =======================================
 17818                                  
 17819                                  ExecReady:
 17820 000075AA 89D6                    		mov	si, dx
 17821 000075AC F744020100              		test	word [si+2], 1 ; [si+ERStruc.ER_Flags],ER_EXE
 17822 000075B1 7413                    		jz	short er_setver
 17823 000075B3 8B4408                  		mov	ax, [si+8]	; [si+ERStruc.ER_PSP]
 17824 000075B6 83C010                  		add	ax, 10h
 17825 000075B9 8EC0                    		mov	es, ax
 17826 000075BB 8B4C0A                  		mov	cx, [si+10]	; [si+ERStruc.ER_StartAddr]
 17827 000075BE 8B440C                  		mov	ax, [si+12]	; [si+ERStruc.ER_StartAddr+2]
 17828                                  		;call	[ss:FixExePatch]	
 17829 000075C1 36FF16[1212]            		call	word [ss:FixExePatch]
 17830                                  
 17831                                  er_setver:				; ...
 17832 000075C6 F744020200              		test	word [si+2], 2 ; [si+ERStruc.ER_Flags],ER_OVERLAY
 17833 000075CB 7518                    		jnz	short er_chkdoshi
 17834 000075CD 1E                      		push	ds
 17835 000075CE 56                      		push	si
 17836 000075CF C57404                  		lds	si, [si+4]	; [si+ERStruc.ER_ProgName]
 17837 000075D2 E834ED                  		call	Save_Begin	; call Scan_Execname1
 17838 000075D5 E845ED                  		call	Scan_Special_Entries
 17839 000075D8 5E                      		pop	si
 17840 000075D9 1F                      		pop	ds
 17841 000075DA 8E4408                  		mov	es, word [si+8] ; [si+ERStruc.ER_PSP]
 17842 000075DD 36A1[BD0E]              		mov	ax, [ss:SPECIAL_VERSION]
 17843 000075E1 26A3[4000]              		mov	word [es:SFTFCB], ax ; [es:PDB.Version]
 17844                                  
 17845                                  er_chkdoshi:				; ...
 17846 000075E5 36803E[1112]00          		cmp	byte [ss:DosHasHMA], 0
 17847 000075EB 7420                    		jz	short er_done
 17848 000075ED 8B4408                  		mov	ax, [si+8]	; [si+ERStruc.ER_PSP]
 17849 000075F0 36800E[8600]04          		or	byte [ss:DOS_FLAG], 4
 17850 000075F6 F744020100              		test	word [si+2], 1 ; EXECA20OFF
 17851 000075FB 7507                    		jnz	short er_setA20
 17852 000075FD 1E                      		push	ds
 17853 000075FE 8ED8                    		mov	ds, ax
 17854 00007600 E86103                  		call	IsCopyProt
 17855 00007603 1F                      		pop	ds
 17856                                  
 17857                                  er_setA20:				; ...
 17858 00007604 36FE06[8500]            		inc	byte [ss:A20OFF_COUNT]
 17859 00007609 36A3[6300]              		mov	[ss:A20OFF_PSP], ax
 17860                                  
 17861                                  er_done:				; ...
 17862 0000760D 31C0                    		xor	ax, ax
 17863 0000760F C3                      		retn
 17864                                  
 17865                                  ; ---------------------------------------------------------------------------
 17866 00007610 06                      exepatch_start	db 6			; ...
 17867 00007611 8CD8                    		db 8Ch,0D8h
 17868 00007613 2BC2                    _first_stop	db 2Bh,0C2h
 17869 00007615 8ED8                    		db 8Eh,0D8h
 17870 00007617 8EC0                    		db 8Eh,0C0h
 17871 00007619 BF0F00                  		db 0BFh,0Fh,0
 17872 0000761C 57                      		db 57h
 17873 0000761D B91000                  		db 0B9h,10h,0
 17874 00007620 B0FF                    		db 0B0h,0FFh
 17875 00007622 F3AE                    		db 0F3h,0AEh
 17876 00007624 47                      		db 47h
 17877 00007625 8BF7                    		db 8Bh,0F7h
 17878 00007627 5F58                    		db 5Fh,58h
 17879 00007629 2BC2                    _second_stop	db 2Bh,0C2h
 17880 0000762B 8EC0                    second		db 8Eh,0C0h
 17881 0000762D B90402                  		db 0B9h,4,2
 17882 00007630 8BC6                    		db 8Bh,0C6h
 17883 00007632 F7D0                    		db 0F7h,0D0h
 17884 00007634 D3E8                    		db 0D3h,0E8h
 17885 00007636 7413                    		db 74h,13h
 17886 00007638 8CDA                    		db 8Ch,0DAh
 17887 0000763A 83CEF0                  		db 83h,0CEh,0F0h
 17888 0000763D 2BD0                    		db 2Bh,0D0h
 17889 0000763F 7308                    		db 73h,8
 17890 00007641 F7DA                    		db 0F7h,0DAh
 17891 00007643 D3E2                    		db 0D3h,0E2h
 17892 00007645 2BF2                    		db 2Bh,0F2h
 17893 00007647 33D2                    		db 33h,0D2h
 17894 00007649 8EDA                    		db 8Eh,0DAh
 17895 0000764B 87F7                    		db 87h,0F7h
 17896 0000764D 1E                      		db 1Eh
 17897 0000764E 06                      		db 6
 17898 0000764F 1F                      		db 1Fh
 17899 00007650 07                      		db 7
 17900 00007651 FECD                    		db 0FEh,0CDh
 17901 00007653 75DB                    		db 75h,0DBh
 17902 00007655 AC                      		db 0ACh
 17903 00007656 92                      		db 92h
 17904 00007657 4E                      		db 4Eh
 17905 00007658 AD                      		db 0ADh
 17906 00007659 8BC8                    		db 8Bh,0C8h
 17907 0000765B 46                      		db 46h
 17908 0000765C 8AC2                    		db 8Ah,0C2h
 17909 0000765E 24FE                    		db 24h,0FEh
 17910 00007660 3CB0                    		db 3Ch,0B0h
 17911 00007662 7505                    		db 75h,5
 17912 00007664 AC                      		db 0ACh
 17913 00007665 F3AA                    		db 0F3h,0AAh
 17914 00007667 EB06                    		db 0EBh,6
 17915 00007669 3CB2                    		db 3Ch,0B2h
 17916 0000766B 756C                    		db 75h,6Ch
 17917 0000766D F3A4                    		db 0F3h,0A4h
 17918 0000766F 92                      		db 92h
 17919 00007670 A801                    		db 0A8h,1
 17920 00007672 74B9                    		db 74h,0B9h
 17921 00007674 9090                    		db 90h,90h
 17922 00007676 8CC3                    scan_patch1	db 8Ch,0C3h		; ...
 17923 00007678 8CD8                    		db 8Ch,0D8h
 17924 0000767A 2BC2                    		db 2Bh,0C2h
 17925 0000767C 8ED8                    		db 8Eh,0D8h
 17926 0000767E 8EC0                    		db 8Eh,0C0h
 17927 00007680 BF0F00                  		db 0BFh,0Fh,0
 17928 00007683 B91000                  		db 0B9h,10h,0
 17929 00007686 B0FF                    		db 0B0h,0FFh
 17930 00007688 F3AE                    		db 0F3h,0AEh
 17931 0000768A 47                      		db 47h
 17932 0000768B 8BF7                    		db 8Bh,0F7h
 17933 0000768D 8BC3                    		db 8Bh,0C3h
 17934 0000768F 2BC2                    		db 2Bh,0C2h
 17935 00007691 8EC0                    		db 8Eh,0C0h
 17936 00007693 BF0F00                  		db 0BFh,0Fh,0
 17937 00007696 B104                    		db 0B1h,4
 17938 00007698 8BC6                    		db 8Bh,0C6h
 17939 0000769A F7D0                    		db 0F7h,0D0h
 17940 0000769C D3E8                    		db 0D3h,0E8h
 17941 0000769E 7409                    		db 74h,9
 17942 000076A0 8CDA                    		db 8Ch,0DAh
 17943 000076A2 2BD0                    		db 2Bh,0D0h
 17944 000076A4 8EDA                    		db 8Eh,0DAh
 17945 000076A6 83CEF0                  		db 83h,0CEh,0F0h
 17946 000076A9 8BC7                    		db 8Bh,0C7h
 17947 000076AB F7D0                    		db 0F7h,0D0h
 17948 000076AD D3E8                    		db 0D3h,0E8h
 17949 000076AF 7409                    		db 74h,9
 17950 000076B1 8CC2                    		db 8Ch,0C2h
 17951 000076B3 2BD0                    		db 2Bh,0D0h
 17952 000076B5 8EC2                    		db 8Eh,0C2h
 17953 000076B7 83CFF0                  		db 83h,0CFh,0F0h
 17954 000076BA 8CC3                    scan_patch2	db 8Ch,0C3h		; ...
 17955 000076BC 8CD8                    		db 8Ch,0D8h
 17956 000076BE 48                      		db 48h
 17957 000076BF 8ED8                    		db 8Eh,0D8h
 17958 000076C1 8EC0                    		db 8Eh,0C0h
 17959 000076C3 BF0F00                  		db 0BFh,0Fh,0
 17960 000076C6 B91000                  		db 0B9h,10h,0
 17961 000076C9 B0FF                    		db 0B0h,0FFh
 17962 000076CB F3AE                    		db 0F3h,0AEh
 17963 000076CD 47                      		db 47h
 17964 000076CE 8BF7                    		db 8Bh,0F7h
 17965 000076D0 8BC3                    		db 8Bh,0C3h
 17966 000076D2 48                      		db 48h
 17967 000076D3 8EC0                    		db 8Eh,0C0h
 17968 000076D5 BF0F00                  		db 0BFh,0Fh,0
 17969 000076D8 B104                    		db 0B1h,4
 17970 000076DA 8BC6                    		db 8Bh,0C6h
 17971 000076DC F7D0                    		db 0F7h,0D0h
 17972 000076DE D3E8                    		db 0D3h,0E8h
 17973 000076E0 740A                    		db 74h,0Ah
 17974 000076E2 8CDA                    		db 8Ch,0DAh
 17975 000076E4 2BD0                    		db 2Bh,0D0h
 17976 000076E6 8EDA                    		db 8Eh,0DAh
 17977 000076E8 81CEF0FF                		db 81h,0CEh,0F0h,0FFh
 17978 000076EC 8BC7                    		db 8Bh,0C7h
 17979 000076EE F7D0                    		db 0F7h,0D0h
 17980 000076F0 D3E8                    		db 0D3h,0E8h
 17981 000076F2 740A                    		db 74h,0Ah
 17982 000076F4 8CC2                    		db 8Ch,0C2h
 17983 000076F6 2BD0                    		db 2Bh,0D0h
 17984 000076F8 8EC2                    		db 8Eh,0C2h
 17985 000076FA 81CFF0FF                		db 81h,0CFh,0F0h,0FFh
 17986 000076FE 8CC3                    scan_patch3	db 8Ch,0C3h		; ...
 17987 00007700 8CD8                    		db 8Ch,0D8h
 17988 00007702 48                      		db 48h
 17989 00007703 8ED8                    		db 8Eh,0D8h
 17990 00007705 8EC0                    		db 8Eh,0C0h
 17991 00007707 BF0F00                  		db 0BFh,0Fh,0
 17992 0000770A B91000                  		db 0B9h,10h,0
 17993 0000770D B0FF                    		db 0B0h,0FFh
 17994 0000770F F3AE                    		db 0F3h,0AEh
 17995 00007711 47                      		db 47h
 17996 00007712 8BF7                    		db 8Bh,0F7h
 17997 00007714 8BC3                    		db 8Bh,0C3h
 17998 00007716 48                      		db 48h
 17999 00007717 8EC0                    		db 8Eh,0C0h
 18000 00007719 BF0F00                  		db 0BFh,0Fh,0
 18001 0000771C B104                    		db 0B1h,4
 18002 0000771E 8BC6                    		db 8Bh,0C6h
 18003 00007720 F7D0                    		db 0F7h,0D0h
 18004 00007722 D3E8                    		db 0D3h,0E8h
 18005 00007724 7409                    		db 74h,9
 18006 00007726 8CDA                    		db 8Ch,0DAh
 18007 00007728 2BD0                    		db 2Bh,0D0h
 18008 0000772A 8EDA                    		db 8Eh,0DAh
 18009 0000772C 83CEF0                  		db 83h,0CEh,0F0h
 18010 0000772F 8BC7                    		db 8Bh,0C7h
 18011 00007731 F7D0                    		db 0F7h,0D0h
 18012 00007733 D3E8                    		db 0D3h,0E8h
 18013 00007735 7409                    		db 74h,9
 18014 00007737 8CC2                    		db 8Ch,0C2h
 18015 00007739 2BD0                    		db 2Bh,0D0h
 18016 0000773B 8EC2                    		db 8Eh,0C2h
 18017 0000773D 83CFF0                  		db 83h,0CFh,0F0h
 18018 00007740 AC                      scan_com	db 0ACh			; ...
 18019 00007741 8AD0                    		db 8Ah,0D0h
 18020 00007743 4E                      		db 4Eh
 18021 00007744 AD                      		db 0ADh
 18022 00007745 8BC8                    		db 8Bh,0C8h
 18023 00007747 46                      		db 46h
 18024 00007748 8AC2                    		db 8Ah,0C2h
 18025 0000774A 24FE                    		db 24h,0FEh
 18026 0000774C 3CB0                    		db 3Ch,0B0h
 18027 0000774E 7506                    		db 75h,6
 18028 00007750 AC                      		db 0ACh
 18029 00007751 F3AA                    		db 0F3h,0AAh
 18030 00007753 EB0790                  		db 0EBh,7,90h
 18031 00007756 3CB2                    		db 3Ch,0B2h
 18032 00007758 756B                    		db 75h,6Bh
 18033 0000775A F3A4                    		db 0F3h,0A4h
 18034 0000775C 8AC2                    		db 8Ah,0C2h
 18035 0000775E A801                    		db 0A8h,1
 18036                                  
 18037                                  ; =============== S U B	R O U T	I N E =======================================
 18038                                  
 18039                                  ExePatch:		; ...
 18040 00007760 E80600                  		call	ExePackPatch
 18041                                  		;call	[ss:RationalPatchPtr]
 18042 00007763 36FF16[1412]            		call	word [ss:RationalPatchPtr]
 18043 00007768 C3                      		retn
 18044                                  
 18045                                  ; =============== S U B	R O U T	I N E =======================================
 18046                                  
 18047                                  ExePackPatch:	; ...
 18048 00007769 53                      		push	bx
 18049 0000776A 8CC3                    		mov	bx, es
 18050 0000776C 81FBFF0F                		cmp	bx, 0FFFh
 18051 00007770 7602                    		jbe	short ep_cont
 18052 00007772 5B                      		pop	bx
 18053 00007773 C3                      		retn
 18054                                  ; ---------------------------------------------------------------------------
 18055                                  
 18056                                  ep_cont:				; ...
 18057 00007774 1E                      		push	ds
 18058 00007775 06                      		push	es
 18059 00007776 50                      		push	ax
 18060 00007777 51                      		push	cx
 18061 00007778 56                      		push	si
 18062 00007779 57                      		push	di
 18063 0000777A 83E902                  		sub	cx, 2
 18064 0000777D 7303                    		jnb	short epp_1
 18065 0000777F E9C500                  		jmp	ep_notpacked
 18066                                  ; ---------------------------------------------------------------------------
 18067                                  
 18068                                  epp_1:					; ...
 18069 00007782 89CF                    		mov	di, cx
 18070 00007784 8EC0                    		mov	es, ax
 18071 00007786 36893E[8700]            		mov	[ss:UNPACK_OFFSET], di
 18072 0000778B 26813D5242              		cmp	word [es:di], 4252h	; 'RB'
 18073 00007790 7403                    		jz	short epp_2
 18074 00007792 E9B200                  		jmp	ep_notpacked
 18075                                  ; ---------------------------------------------------------------------------
 18076                                  
 18077                                  epp_2:					; ...
 18078 00007795 0E                      		push	cs
 18079 00007796 1F                      		pop	ds
 18080 00007797 83C76C                  		add	di, 6Ch		; PATCH1_COM_OFFSET
 18081 0000779A E8B200                  		call	chk_common_str
 18082 0000779D 7524                    		jnz	short ep_chkpatch2
 18083 0000779F BE[7676]                		mov	si, scan_patch1
 18084 000077A2 368B3E[8700]            		mov	di, [ss:UNPACK_OFFSET]
 18085 000077A7 83C728                  		add	di, 28h		; PATCH1_OFFSET
 18086 000077AA B94400                  		mov	cx, 68		; size_scan_patch1
 18087                                  					; = scan_patch2	- scan_patch1
 18088 000077AD BB8E00                  		mov	bx, 142
 18089 000077B0 B84EEF                  		mov	ax, 0EF4Eh	; PATCH1_CHKSUM
 18090 000077B3 E8AD00                  		call	chk_patchsum
 18091 000077B6 7208                    		jb	short ep_done1
 18092 000077B8 BE[1076]                		mov	si, exepatch_start ; str1
 18093 000077BB B96600                  		mov	cx, 102
 18094 000077BE F3A4                    		rep movsb
 18095                                  
 18096                                  ep_done1:				; ...
 18097 000077C0 E98400                  		jmp	ep_notpacked	; ep_done
 18098                                  ; ---------------------------------------------------------------------------
 18099                                  
 18100                                  ep_chkpatch2:				; ...
 18101 000077C3 BF7600                  		mov	di, 76h		; PATCH2_COM_OFFSET
 18102 000077C6 E88600                  		call	chk_common_str
 18103 000077C9 7544                    		jnz	short ep_chkpatch3
 18104 000077CB BE[BA76]                		mov	si, scan_patch2
 18105 000077CE BF3200                  		mov	di, 32h		; PATCH2_OFFSET
 18106 000077D1 B94400                  		mov	cx, 68		; size_scan_patch2
 18107 000077D4 BB8C00                  		mov	bx, 140		; CHKSUM2_LEN
 18108 000077D7 B8B278                  		mov	ax, 78B2h	; PATCH2_CHKSUM
 18109 000077DA E88600                  		call	chk_patchsum
 18110 000077DD 7311                    		jnb	short ep_patchcode2
 18111 000077DF BE[BA76]                		mov	si, scan_patch2
 18112 000077E2 B94400                  		mov	cx, 68		; size_scan_patch2
 18113                                  					; = scan_patch3	- scan_patch2
 18114 000077E5 BB8100                  		mov	bx, 129		; CHKSUM2A_LEN
 18115 000077E8 B8471C                  		mov	ax, 1C47h	; PATCH2A_CHKSUM
 18116 000077EB E87500                  		call	chk_patchsum
 18117 000077EE 7257                    		jb	short ep_notpacked
 18118                                  
 18119                                  ep_patchcode2:				; ...
 18120 000077F0 BE[1076]                		mov	si, exepatch_start ; str1
 18121 000077F3 B90300                  		mov	cx, 3		; first_stop =
 18122                                  					; _first_stop -	exepact_start (str1)
 18123 000077F6 F3A4                    		rep movsb
 18124 000077F8 B89048                  		mov	ax, 4890h	; dec ax, nop
 18125 000077FB AB                      		stosw
 18126 000077FC 83C602                  		add	si, 2
 18127 000077FF B91400                  		mov	cx, 20		; second_stop =
 18128                                  					; _secondstop -	_first_stop
 18129 00007802 F3A4                    		rep movsb
 18130 00007804 AB                      		stosw			; dec ax, nop
 18131 00007805 83C602                  		add	si, 2
 18132 00007808 B94B00                  		mov	cx, 75		; last_stop =
 18133                                  					; scan_patch1 -	second
 18134 0000780B F3A4                    		rep movsb
 18135 0000780D EB38                    		jmp	short ep_notpacked ; ep_done
 18136                                  ; ---------------------------------------------------------------------------
 18137                                  
 18138                                  ep_chkpatch3:				; ...
 18139 0000780F BF7400                  		mov	di, 74h		; PATCH3_COM_OFFSET
 18140 00007812 E83A00                  		call	chk_common_str
 18141 00007815 7530                    		jnz	short ep_notpacked
 18142 00007817 BE[FE76]                		mov	si, scan_patch3
 18143 0000781A BF3200                  		mov	di, 32h		; PATCH3_OFFSET
 18144 0000781D B94200                  		mov	cx, 66		; size_scan_patch3
 18145                                  					; = scan_com - scan_patch3
 18146 00007820 BB8B00                  		mov	bx, 139		; CHKSUM3_LEN
 18147 00007823 B8DE4E                  		mov	ax, 4EDEh	; PATCH3_CHKSUM
 18148 00007826 E83A00                  		call	chk_patchsum
 18149 00007829 721C                    		jb	short ep_notpacked
 18150 0000782B BE[1076]                		mov	si, exepatch_start ; str1
 18151 0000782E B90300                  		mov	cx, 3		; first_stop
 18152 00007831 F3A4                    		rep movsb
 18153 00007833 B048                    		mov	al, 48h		; dec ax
 18154 00007835 AA                      		stosb
 18155 00007836 83C602                  		add	si, 2
 18156 00007839 B91400                  		mov	cx, 20		; second_stop
 18157 0000783C F3A4                    		rep movsb
 18158 0000783E AA                      		stosb			; dec ax
 18159 0000783F 83C602                  		add	si, 2
 18160 00007842 B94B00                  		mov	cx, 75		; last_stop
 18161 00007845 F3A4                    		rep movsb
 18162                                  
 18163                                  ep_notpacked:				; ...
 18164 00007847 5F                      		pop	di
 18165 00007848 5E                      		pop	si
 18166 00007849 59                      		pop	cx
 18167 0000784A 58                      		pop	ax
 18168 0000784B 07                      		pop	es
 18169 0000784C 1F                      		pop	ds
 18170 0000784D 5B                      		pop	bx
 18171 0000784E C3                      		retn
 18172                                  
 18173                                  ; =============== S U B	R O U T	I N E =======================================
 18174                                  
 18175                                  chk_common_str:	; ...
 18176 0000784F BE[4077]                		mov	si, scan_com
 18177 00007852 B92000                  		mov	cx, 32		; size_scan_com
 18178                                  					; = offset ExePatch - offset scan_com
 18179 00007855 F3A6                    		repe cmpsb
 18180 00007857 7409                    		jz	short ccs_done
 18181 00007859 26807DFF56              		cmp	byte [es:di-1], 56h
 18182 0000785E 7502                    		jnz	short ccs_done
 18183 00007860 F3A6                    		repe cmpsb
 18184                                  
 18185                                  ccs_done:				; ...
 18186 00007862 C3                      		retn
 18187                                  
 18188                                  ; ---------------------------------------------------------------------------
 18189                                  
 18190                                  chk_patchsum:				; ...
 18191 00007863 57                      		push	di
 18192 00007864 F3A6                    		repe cmpsb
 18193 00007866 751A                    		jnz	short cp_fail
 18194 00007868 368B3E[8700]            		mov	di, [ss:UNPACK_OFFSET]
 18195 0000786D 89D9                    		mov	cx, bx
 18196 0000786F 89C3                    		mov	bx, ax
 18197 00007871 31C0                    		xor	ax, ax
 18198                                  
 18199                                  ep_chksum:				; ...
 18200 00007873 260305                  		add	ax, [es:di]
 18201 00007876 83C702                  		add	di, 2
 18202 00007879 E2F8                    		loop	ep_chksum
 18203 0000787B 5F                      		pop	di
 18204 0000787C 39D8                    		cmp	ax, bx
 18205 0000787E 7502                    		jnz	short cp_fail
 18206 00007880 F8                      		clc
 18207 00007881 C3                      		retn
 18208                                  ; ---------------------------------------------------------------------------
 18209                                  
 18210                                  cp_fail:				; ...
 18211 00007882 F9                      		stc
 18212 00007883 C3                      		retn
 18213                                  ; ---------------------------------------------------------------------------
 18214 00007884 000020000000400001-     RScanPattern1	db 0, 0, 20h, 0, 0, 0, 40h, 0, 1, 0 ; ...
 18214 0000788D 00                 
 18215 0000788E 8B0E100090E2FEE8        RScanPattern2	db 8Bh,	0Eh, 10h, 0, 90h, 0E2h,	0FEh, 0E8h ; ...
 18216 00007896 8B0E1000E2FEE8          RScanPattern3	db 8Bh,	0Eh, 10h, 0, 0E2h, 0FEh, 0E8h ;	...
 18217                                  
 18218                                  ; =============== S U B	R O U T	I N E =======================================
 18219                                  
 18220                                  RationalPatch:	; ...
 18221 0000789D FC                      		cld
 18222 0000789E 50                      		push	ax
 18223 0000789F 53                      		push	bx
 18224 000078A0 51                      		push	cx
 18225 000078A1 52                      		push	dx
 18226 000078A2 56                      		push	si
 18227 000078A3 57                      		push	di
 18228 000078A4 06                      		push	es
 18229 000078A5 1E                      		push	ds
 18230 000078A6 BF0A00                  		mov	di, 0Ah
 18231 000078A9 0E                      		push	cs
 18232 000078AA 1F                      		pop	ds
 18233 000078AB BE[8478]                		mov	si, RScanPattern1
 18234 000078AE B90A00                  		mov	cx, 10		; RLen1
 18235 000078B1 F3A6                    		repe cmpsb
 18236 000078B3 754A                    		jnz	short rpexit
 18237 000078B5 26A10000                		mov	ax, [es:0]
 18238 000078B9 3D5C01                  		cmp	ax, 348
 18239 000078BC 7241                    		jb	short rpexit
 18240 000078BE 3D7F01                  		cmp	ax, 383
 18241 000078C1 773C                    		ja	short rpexit
 18242 000078C3 E85A00                  		call	VerifyVersion
 18243 000078C6 7537                    		jnz	short rpexit
 18244 000078C8 268B0E1600              		mov	cx, [es:16h]
 18245 000078CD 81E90002                		sub	cx, 200h
 18246 000078D1 268E062000              		mov	es, word [es:20h]
 18247 000078D6 BE[8E78]                		mov	si, RScanPattern2
 18248 000078D9 BA0800                  		mov	dx, 8		; RLen2
 18249 000078DC E82900                  		call	ScanCodeSeq
 18250 000078DF 740B                    		jz	short rpfound
 18251 000078E1 BE[9678]                		mov	si, RScanPattern3
 18252 000078E4 BA0F00                  		mov	dx, 15		; RLen3
 18253 000078E7 E81E00                  		call	ScanCodeSeq
 18254 000078EA 7513                    		jnz	short rpexit
 18255                                  
 18256                                  rpfound:				; ...
 18257 000078EC B09A                    		mov	al, 9Ah		; far call opcode
 18258 000078EE AA                      		stosb
 18259 000078EF B8[1612]                		mov	ax, RatBugCode
 18260 000078F2 AB                      		stosw
 18261 000078F3 8CD0                    		mov	ax, ss
 18262 000078F5 AB                      		stosw
 18263 000078F6 89D1                    		mov	cx, dx
 18264 000078F8 83E906                  		sub	cx, 6
 18265 000078FB B090                    		mov	al, 90h		; NOPs
 18266 000078FD F3AA                    		rep stosb
 18267                                  
 18268                                  rpexit:					; ...
 18269 000078FF 1F                      		pop	ds
 18270 00007900 07                      		pop	es
 18271 00007901 5F                      		pop	di
 18272 00007902 5E                      		pop	si
 18273 00007903 5A                      		pop	dx
 18274 00007904 59                      		pop	cx
 18275 00007905 5B                      		pop	bx
 18276 00007906 58                      		pop	ax
 18277 00007907 C3                      		retn
 18278                                  
 18279                                  ; =============== S U B	R O U T	I N E =======================================
 18280                                  
 18281                                  ScanCodeSeq:	; ...
 18282 00007908 51                      		push	cx
 18283 00007909 29D1                    		sub	cx, dx
 18284 0000790B 41                      		inc	cx
 18285 0000790C BF0002                  		mov	di, 200h
 18286                                  
 18287                                  scsagain:				; ...
 18288 0000790F 56                      		push	si
 18289 00007910 57                      		push	di
 18290 00007911 51                      		push	cx
 18291 00007912 89D1                    		mov	cx, dx
 18292 00007914 F3A6                    		repe cmpsb
 18293 00007916 59                      		pop	cx
 18294 00007917 5F                      		pop	di
 18295 00007918 5E                      		pop	si
 18296 00007919 7403                    		jz	short scsfound
 18297 0000791B 47                      		inc	di
 18298 0000791C E2F1                    		loop	scsagain
 18299                                  
 18300                                  scsfound:				; ...
 18301 0000791E 59                      		pop	cx
 18302 0000791F C3                      		retn
 18303                                  
 18304                                  ; =============== S U B	R O U T	I N E =======================================
 18305                                  
 18306                                  VerifyVersion:	; ...
 18307 00007920 268B362A00              		mov	si, [es:2Ah]
 18308 00007925 B30A                    		mov	bl, 10
 18309 00007927 83C603                  		add	si, 3
 18310 0000792A E81200                  		call	VVDigit
 18311 0000792D 750F                    		jnz	short vvexit
 18312 0000792F E80D00                  		call	VVDigit
 18313 00007932 750A                    		jnz	short vvexit
 18314 00007934 26803C2E                		cmp	byte [es:si], '.' ; 2Eh
 18315 00007938 7504                    		jnz	short vvexit
 18316 0000793A 4E                      		dec	si
 18317 0000793B E80100                  		call	VVDigit
 18318                                  
 18319                                  vvexit:					; ...
 18320 0000793E C3                      		retn
 18321                                  
 18322                                  ; =============== S U B	R O U T	I N E =======================================
 18323                                  
 18324                                  VVDigit:
 18325 0000793F F6F3                    		div	bl
 18326 00007941 80C430                  		add	ah, '0'         ; 30h
 18327 00007944 4E                      		dec	si
 18328 00007945 26386401                		cmp	[es:si+1], ah
 18329 00007949 B400                    		mov	ah, 0
 18330 0000794B C3                      		retn
 18331                                  
 18332                                  ; ---------------------------------------------------------------------------
 18333 0000794C 89264801                CPScanPattern	db 89h,	26h, 48h, 1	; ...
 18334                                  					; mov [148],sp
 18335 00007950 8C0E4C01                		db 8Ch,	0Eh, 4Ch, 1	; mov [14C],cs
 18336 00007954 C7064A010001            		db 0C7h, 6, 4Ah, 1, 0, 1 ; mov [14A],100h
 18337 0000795A 8C0E1301                		db 8Ch,	0Eh, 13h, 1	; mov [113],cs
 18338 0000795E B82001                  		db 0B8h, 20h, 1		; mov ax,120h
 18339 00007961 BE0001                  		db 0BEh, 0, 1		; mov si,100h
 18340                                  
 18341                                  ; =============== S U B	R O U T	I N E =======================================
 18342                                  
 18343                                  IsCopyProt:		; ...
 18344 00007964 813E1B014353            		cmp	word [11Bh], 5343h ; [CPID1Offset], ID1
 18345 0000796A 752D                    		jnz	short CP_done
 18346 0000796C 813E73014450            		cmp	word [173h], 5044h ; [CPID2Offset], ID2
 18347 00007972 7525                    		jnz	short CP_done
 18348 00007974 813E460113F4            		cmp	word [146h], 0F413h ; [CPID3Offset], ID3
 18349 0000797A 751D                    		jnz	short CP_done
 18350 0000797C 813E24010080            		cmp	word [124h], 8000h ; [CPID4Offset], ID4
 18351 00007982 7515                    		jnz	short CP_done
 18352 00007984 0E                      		push	cs
 18353 00007985 07                      		pop	es
 18354 00007986 BF[4C79]                		mov	di, CPScanPattern
 18355 00007989 BE7501                  		mov	si, 175h	; CPStartOffset
 18356 0000798C B91800                  		mov	cx, 24		; CPSPlen
 18357 0000798F F3A6                    		repe cmpsb
 18358 00007991 7506                    		jnz	short CP_done
 18359 00007993 36C606[8500]0A          		mov	byte [ss:A20OFF_COUNT], 0Ah
 18360                                  
 18361                                  CP_done:				; ...
 18362 00007999 C3                      		retn
 18363                                  
 18364                                  ; ---------------------------------------------------------------------------
 18365                                  
 18366                                  SYSBUF:					; ...
 18367 0000799A CF                      		iret			; initiret
 18368                                  ; ---------------------------------------------------------------------------
 18369 0000799B 7000                    InitBioDataSeg	dw 70h			; ...
 18370                                  
 18371                                  ; =============== S U B	R O U T	I N E =======================================
 18372                                  
 18373                                  ParaRound:		; ...
 18374 0000799D 83C00F                  		add	ax, 0Fh		; add ax, 15
 18375 000079A0 D1D8                    		rcr	ax, 1
 18376 000079A2 D1E8                    		shr	ax, 1
 18377 000079A4 D1E8                    		shr	ax, 1
 18378 000079A6 D1E8                    		shr	ax, 1
 18379 000079A8 C3                      		retn
 18380                                  
 18381                                  ; ---------------------------------------------------------------------------
 18382                                  
 18383                                  DOSINIT:				; ...
 18384 000079A9 FA                      		cli
 18385 000079AA FC                      		cld
 18386 000079AB 52                      		push	dx
 18387 000079AC 56                      		push	si
 18388 000079AD 1E                      		push	ds
 18389 000079AE 57                      		push	di
 18390 000079AF 8CC3                    		mov	bx, es
 18391 000079B1 B8[A77E]                		mov	ax, DOSCODE_END ; MEMSTRT
 18392 000079B4 83C00F                  		add	ax, 15
 18393 000079B7 83E0F0                  		and	ax, 0FFF0h	; ~15
 18394 000079BA 89C6                    		mov	si, ax
 18395 000079BC 8CC8                    		mov	ax, cs
 18396 000079BE 8ED8                    		mov	ds, ax
 18397 000079C0 2E8E06[9B79]            		mov	es, [cs:InitBioDataSeg]
 18398 000079C5 268E060300              		mov	es, word [es:3]
 18399 000079CA 31FF                    		xor	di, di
 18400 000079CC B96213                  		mov	cx, 4962	; MSDAT001E ; size of DOSDATA
 18401 000079CF F3A4                    		rep movsb
 18402 000079D1 5F                      		pop	di
 18403 000079D2 1F                      		pop	ds
 18404 000079D3 5E                      		pop	si
 18405 000079D4 5A                      		pop	dx
 18406 000079D5 06                      		push	es
 18407 000079D6 1E                      		push	ds
 18408 000079D7 07                      		pop	es
 18409 000079D8 1F                      		pop	ds
 18410 000079D9 893E[4010]              		mov	word [BiosDataPtr], di
 18411 000079DD 891E[4210]              		mov	word [BiosDataPtr+2], bx
 18412 000079E1 2E8C1E[0700]            		mov	[cs:DosDSeg], ds
 18413 000079E6 2E8C1E[4A52]            		mov	[cs:LowInt23Seg], ds
 18414 000079EB 2E8C1E[4E52]            		mov	[cs:LowInt24Seg], ds
 18415 000079F0 2E8C1E[5252]            		mov	[cs:LowInt28Seg], ds
 18416 000079F5 8916[4603]              		mov	[ENDMEM], dx
 18417 000079F9 8926[8405]              		mov	[USER_SP], sp
 18418 000079FD 8C16[8605]              		mov	[USER_SS], ss
 18419 00007A01 8CD8                    		mov	ax, ds
 18420 00007A03 8ED0                    		mov	ss, ax
 18421 00007A05 BC[2009]                		mov	sp, DSKSTACK
 18422 00007A08 C706[1212][F163]        		mov	word [FixExePatch], RetExePatch
 18423 00007A0E C706[1412][F163]        		mov	word [RationalPatchPtr], RetExePatch
 18424 00007A14 C706[6100][F163]        		mov	word [ChkCopyProt], RetExePatch
 18425 00007A1A 8CC8                    		mov	ax, cs
 18426 00007A1C A3[AA0A]                		mov	[TEMP_DOSLOC], ax
 18427 00007A1F 8C06[4A00]              		mov	word [NULDEV+2], es
 18428 00007A23 8936[4800]              		mov	word [NULDEV], si
 18429 00007A27 8C1E[F20F]              		mov	[Win386_Info_16], ds ; [Win386_Info+16]
 18430                                  					; [Win386_Info+Win386_SIS.Instance_Data_Ptr+2]
 18431 00007A2B 56                      		push	si
 18432 00007A2C B90700                  		mov	cx, 7
 18433 00007A2F BE[F60F]                		mov	si, Instance_Table_2 ; Instance_Table+2
 18434                                  
 18435                                  Instance_init_loop:			; ...
 18436 00007A32 8C1C                    		mov	word [si], ds
 18437 00007A34 83C606                  		add	si, 6		; size_of_Win386_IIS
 18438 00007A37 E2F9                    		loop	Instance_init_loop
 18439 00007A39 B90500                  		mov	cx, 5
 18440 00007A3C BE[ED11]                		mov	si, OldInstanceJunk_6 ; OldInstanceJunk+6
 18441                                  
 18442                                  OldInstance_init_loop:			; ...
 18443 00007A3F 8C1C                    		mov	word [si], ds
 18444 00007A41 83C606                  		add	si, 6
 18445 00007A44 E2F9                    		loop	OldInstance_init_loop
 18446 00007A46 5E                      		pop	si
 18447 00007A47 06                      		push	es
 18448 00007A48 1F                      		pop	ds
 18449 00007A49 1E                      		push	ds
 18450 00007A4A 31C0                    		xor	ax, ax
 18451 00007A4C 8ED8                    		mov	ds, ax
 18452 00007A4E B8[9A79]                		mov	ax, SYSBUF ; initiret
 18453 00007A51 A3A800                  		mov	[0A8h], ax	; [2Ah*4] ; [addr_int_ibm]
 18454 00007A54 8CC8                    		mov	ax, cs
 18455 00007A56 A3AA00                  		mov	[0AAh], ax	; [(2Ah*4)+2] ;	[addr_int_ibm+2]
 18456 00007A59 1F                      		pop	ds
 18457 00007A5A E83702                  		call	CHARINIT
 18458 00007A5D 56                      		push	si
 18459 00007A5E 16                      		push	ss
 18460 00007A5F 07                      		pop	es
 18461 00007A60 BF[D200]                		mov	di, SFTABL_6 ; SFTABL+6
 18462                                  					; SFTABL+SFT.SFTable
 18463 00007A63 B80300                  		mov	ax, 3
 18464 00007A66 AB                      		stosw
 18465 00007A67 FEC8                    		dec	al
 18466 00007A69 AB                      		stosw
 18467 00007A6A 30C0                    		xor	al, al
 18468 00007A6C AA                      		stosb
 18469 00007A6D B0C3                    		mov	al, 0C3h	; devid_device_EOF|devid_device|ISCIN|ISCOUT
 18470 00007A6F AB                      		stosw
 18471 00007A70 89F0                    		mov	ax, si
 18472 00007A72 AB                      		stosw
 18473 00007A73 8CD8                    		mov	ax, ds
 18474 00007A75 AB                      		stosw
 18475 00007A76 31C0                    		xor	ax, ax		; 0
 18476 00007A78 AB                      		stosw
 18477 00007A79 AB                      		stosw
 18478 00007A7A AB                      		stosw
 18479 00007A7B 48                      		dec	ax		; -1
 18480 00007A7C AB                      		stosw
 18481 00007A7D AB                      		stosw
 18482 00007A7E 40                      		inc	ax		; 0
 18483 00007A7F AB                      		stosw
 18484 00007A80 AB                      		stosw
 18485 00007A81 83C707                  		add	di, 7		; SF_ENTRY.sf_name-SF_ENTRY.sf_cluspos
 18486 00007A84 83C60A                  		add	si, 10		; SYSDEV.NAME
 18487 00007A87 B90400                  		mov	cx, 4
 18488 00007A8A F3A5                    		rep movsw
 18489 00007A8C B103                    		mov	cl, 3
 18490 00007A8E B020                    		mov	al, 20h	; ' '
 18491 00007A90 F3AA                    		rep stosb
 18492 00007A92 5E                      		pop	si
 18493 00007A93 804C0403                		or	byte [si+4], 3 ; [SI+SYSDEV.ATT],ISCIN|ISCOUT
 18494 00007A97 368936[3200]            		mov	word [ss:BCON], si
 18495 00007A9C 368C1E[3400]            		mov	word [ss:BCON+2], ds
 18496                                  
 18497                                  CHAR_INIT_LOOP:				; ...
 18498 00007AA1 C534                    		lds	si, [si]
 18499 00007AA3 E8EE01                  		call	CHARINIT
 18500 00007AA6 F6440408                		test	byte [si+4], 8 ; [SI+SYSDEV.ATT],ISCLOCK
 18501 00007AAA 74F5                    		jz	short CHAR_INIT_LOOP
 18502 00007AAC 368936[2E00]            		mov	word [ss:BCLOCK], si
 18503 00007AB1 368C1E[3000]            		mov	word [ss:BCLOCK+2],	ds
 18504 00007AB6 BD6213                  		mov	bp, 4962	; MSDAT001E
 18505 00007AB9 36892E[2600]            		mov	word [ss:SYSINITVARS], bp ;	[ss:DPBHEAD]
 18506 00007ABE 368C06[2800]            		mov	word [ss:SYSINITVARS+2], es	; [ss:DPBHEAD+2]
 18507                                  
 18508                                  PERDRV:					; ...
 18509 00007AC3 C534                    		lds	si, [si]	; [SI+SYSDEV.NEXT]
 18510 00007AC5 83FEFF                  		cmp	si, 0FFFFh	; -1
 18511 00007AC8 747B                    		jz	short CONTINIT
 18512 00007ACA E8C701                  		call	CHARINIT
 18513 00007ACD F744040080              		test	word [si+4], 8000h ; [SI+SYSDEV.ATT],DEVTYP
 18514 00007AD2 75EF                    		jnz	short PERDRV
 18515 00007AD4 368A0E[6703]            		mov	cl, [ss:CALLMED] ; [SS:CALLUNIT]
 18516 00007AD9 30ED                    		xor	ch, ch
 18517 00007ADB 884C0A                  		mov	[si+10], cl	; [si+SYSDEV.NAME]
 18518 00007ADE 368A16[4600]            		mov	dl, [ss:NUMIO]
 18519 00007AE3 30F6                    		xor	dh, dh
 18520 00007AE5 36000E[4600]            		add	[ss:NUMIO], cl
 18521 00007AEA 1E                      		push	ds
 18522 00007AEB 56                      		push	si
 18523 00007AEC 36C51E[6C03]            		lds	bx, [ss:CALLSCNT] ; [SS:CALLBPB]
 18524                                  
 18525                                  PERUNIT:				; ...
 18526 00007AF1 8B37                    		mov	si, [bx]
 18527 00007AF3 43                      		inc	bx
 18528 00007AF4 43                      		inc	bx
 18529 00007AF5 26885600                		mov	[es:bp+0], dl	; [ES:BP+DPB.DRIVE]
 18530 00007AF9 26887601                		mov	[es:bp+1], dh	; [ES:BP+DPB.UNIT]
 18531 00007AFD 53                      		push	bx
 18532 00007AFE 51                      		push	cx
 18533 00007AFF 52                      		push	dx
 18534 00007B00 E8F694                  		call	_$SETDPB
 18535 00007B03 268B4602                		mov	ax, [es:bp+2]	; [ES:BP+DPB.SECTOR_SIZE]
 18536 00007B07 363B06[3600]            		cmp	ax, [ss:MAXSEC]
 18537 00007B0C 7604                    		jbe	short NOTMAX
 18538 00007B0E 36A3[3600]              		mov	[ss:MAXSEC], ax
 18539                                  
 18540                                  NOTMAX:					; ...
 18541 00007B12 89E8                    		mov	ax, bp
 18542 00007B14 83C021                  		add	ax, 33		; DPBSIZ
 18543 00007B17 26894619                		mov	[es:bp+25], ax	; [ES:BP+DPB.NEXT_DPB]
 18544 00007B1B 268C461B                		mov	word [es:bp+27], es	; [ES:BP+DPB.NEXT_DPB+2]
 18545 00007B1F 26C64618FF              		mov	byte [es:bp+24], 0FFh ; [ES:BP+DPB.FIRST_ACCESS],-1
 18546 00007B24 5A                      		pop	dx
 18547 00007B25 59                      		pop	cx
 18548 00007B26 5B                      		pop	bx
 18549 00007B27 8CD8                    		mov	ax, ds
 18550 00007B29 5E                      		pop	si
 18551 00007B2A 1F                      		pop	ds
 18552 00007B2B 26897613                		mov	[es:bp+19], si	; [ES:BP+DPB.DRIVER_ADDR]
 18553 00007B2F 268C5E15                		mov	word [es:bp+21], ds ; [ES:BP+DPB.DRIVER_ADDR+2]
 18554 00007B33 1E                      		push	ds
 18555 00007B34 56                      		push	si
 18556 00007B35 FEC6                    		inc	dh
 18557 00007B37 FEC2                    		inc	dl
 18558 00007B39 8ED8                    		mov	ds, ax
 18559 00007B3B 83C521                  		add	bp, 33		; DPBSIZ
 18560 00007B3E E2B1                    		loop	PERUNIT
 18561 00007B40 5E                      		pop	si
 18562 00007B41 1F                      		pop	ds
 18563 00007B42 E97EFF                  		jmp	PERDRV
 18564                                  ; ---------------------------------------------------------------------------
 18565                                  
 18566                                  CONTINIT:				; ...
 18567 00007B45 83ED21                  		sub	bp, 33		; DPBSIZ
 18568 00007B48 C74619FFFF              		mov	word [bp+25], 0FFFFh ; -1
 18569 00007B4D C7461BFFFF              		mov	word [bp+27], 0FFFFh ; -1
 18570 00007B52 83C521                  		add	bp, 33
 18571 00007B55 16                      		push	ss
 18572 00007B56 1F                      		pop	ds
 18573 00007B57 89E8                    		mov	ax, bp
 18574 00007B59 E841FE                  		call	ParaRound
 18575 00007B5C 8CDA                    		mov	dx, ds
 18576 00007B5E 01C2                    		add	dx, ax
 18577 00007B60 BB0F00                  		mov	bx, 0Fh
 18578 00007B63 8B0E[4603]              		mov	cx, [ENDMEM]
 18579 00007B67 8C1E[A203]              		mov	[DSKCHRET_3], ds ; [DSKCHRET+3] ; [DOSSEG_INIT]
 18580 00007B6B 52                      		push	dx
 18581 00007B6C A1[AA0A]                		mov	ax, [TEMP_DOSLOC]
 18582 00007B6F 8EC0                    		mov	es, ax
 18583 00007B71 C706[AA0A]FFFF          		mov	word [TEMP_DOSLOC], 0FFFFh ; -1
 18584 00007B77 E8F601                  		call	patch_vec_segments
 18585 00007B7A E83602                  		call	patch_misc_segments
 18586 00007B7D 8C06[AA0A]              		mov	[TEMP_DOSLOC], es
 18587 00007B81 5A                      		pop	dx
 18588 00007B82 31C0                    		xor	ax, ax
 18589 00007B84 8ED8                    		mov	ds, ax
 18590 00007B86 8EC0                    		mov	es, ax
 18591 00007B88 BF9000                  		mov	di, 90h		; addr_int_fatal_abort
 18592                                  					; 4*int_fatal_abort
 18593 00007B8B 36A1[AA0A]              		mov	ax, [ss:TEMP_DOSLOC]
 18594 00007B8F 894502                  		mov	[di+2],	ax
 18595 00007B92 BF8200                  		mov	di, 82h		; INTBASE+2
 18596 00007B95 C7060000[2B54]          		mov	word [0], DIVOV
 18597 00007B9B BF8000                  		mov	di, 80h		; INTBASE
 18598 00007B9E B8[F502]                		mov	ax, IRETT
 18599 00007BA1 B90900                  		mov	cx, 9
 18600                                  
 18601                                  iset1:					; ...
 18602 00007BA4 AB                      		stosw
 18603 00007BA5 83C702                  		add	di, 2
 18604 00007BA8 E2FA                    		loop	iset1
 18605 00007BAA 83C704                  		add	di, 4
 18606 00007BAD B90600                  		mov	cx, 6
 18607                                  
 18608                                  iset2:					; ...
 18609 00007BB0 AB                      		stosw
 18610 00007BB1 83C702                  		add	di, 2
 18611 00007BB4 E2FA                    		loop	iset2
 18612 00007BB6 83C708                  		add	di, 8
 18613 00007BB9 B90E00                  		mov	cx, 14
 18614                                  
 18615                                  iset3:					; ...
 18616 00007BBC AB                      		stosw
 18617 00007BBD 83C702                  		add	di, 2
 18618 00007BC0 E2FA                    		loop	iset3
 18619 00007BC2 C706BC00[E006]          		mov	word [0BCh], INT2F ; [02Fh*4],INT2F
 18620 00007BC8 36A1[AA0A]              		mov	ax, [ss:TEMP_DOSLOC]
 18621 00007BCC A3BE00                  		mov	[0BEh], ax	; [(02Fh*4)+2]
 18622 00007BCF C606C000EA              		mov	byte [0C0h], 0EAh ; [ENTRYPOINT],mi_long_jmp
 18623 00007BD4 C706C100[F602]          		mov	word [0C1h], CALL_ENTRY ;	 [ENTRYPOINT+1]
 18624 00007BDA C7068000[EF02]          		mov	word [80h], QUIT ; [addr_int_abort]
 18625 00007BE0 C7068400[1B03]          		mov	word [84h], COMMAND ; [addr_int_command]
 18626 00007BE6 C70688000001            		mov	word [88h], 100h	; [addr_int_terminate]
 18627 00007BEC 89168A00                		mov	[8Ah], dx	; [addr_int_terminate+2]
 18628 00007BF0 C7069400[0805]          		mov	word [94h], ABSDRD ; [addr_int_disk_read]
 18629 00007BF6 C7069800[8F05]          		mov	word [98h], ABSDWRT ; [addr_int_disk_write]
 18630 00007BFC C7069C00[9463]          		mov	word [9Ch], STAY_RESIDENT	; [addr_int_keep_process]
 18631 00007C02 16                      		push	ss
 18632 00007C03 1F                      		pop	ds
 18633 00007C04 16                      		push	ss
 18634 00007C05 07                      		pop	es
 18635 00007C06 52                      		push	dx
 18636 00007C07 42                      		inc	dx
 18637 00007C08 8916[3003]              		mov	[CurrentPDB], dx
 18638 00007C0C 31FF                    		xor	di, di
 18639 00007C0E 8EC2                    		mov	es, dx
 18640 00007C10 31C0                    		xor	ax, ax
 18641 00007C12 B98000                  		mov	cx, 128
 18642 00007C15 F3AB                    		rep stosw
 18643 00007C17 A1[4603]                		mov	ax, [ENDMEM]
 18644 00007C1A E83E95                  		call	SETMEM
 18645 00007C1D 16                      		push	ss
 18646 00007C1E 1F                      		pop	ds
 18647 00007C1F BF1800                  		mov	di, 24		; PDB.JFN_TABLE
 18648 00007C22 31C0                    		xor	ax, ax
 18649 00007C24 AB                      		stosw
 18650 00007C25 AA                      		stosb
 18651 00007C26 B0FF                    		mov	al, 0FFh
 18652 00007C28 B91100                  		mov	cx, 17		; FILPERPROC-3
 18653 00007C2B F3AA                    		rep stosb
 18654 00007C2D 16                      		push	ss
 18655 00007C2E 07                      		pop	es
 18656 00007C2F 8C1E[2C00]              		mov	word [SFT_ADDR+2], ds
 18657 00007C33 BE[280D]                		mov	si, SysInitTable
 18658 00007C36 268C4406                		mov	word [es:si+6], es ; [es:si+SYSI_EXT.Country_Tab+2]
 18659 00007C3A 268C4402                		mov	word [es:si+2], es ; [es:si+SYSI_EXT.SysInitVars+2]
 18660 00007C3E 268C06[3A00]            		mov	word [es:BUFFHEAD+2], es
 18661 00007C43 BE[6D00]                		mov	si, BufferQueue ; HASHINITVAR
 18662 00007C46 268936[3800]            		mov	word [es:BUFFHEAD],	si
 18663 00007C4B 5A                      		pop	dx
 18664 00007C4C 8916[2E03]              		mov	word [DMAADD+2],	dx
 18665 00007C50 268916[2400]            		mov	[es:arena_head], dx
 18666 00007C55 8EDA                    		mov	ds, dx
 18667 00007C57 C60600005A              		mov	byte [0], 5Ah ; 'Z' ; [ARENA.SIGNATURE],
 18668                                  					; arena_signature_end
 18669 00007C5C C70601000000            		mov	word [1], 0 ; [ARENA.OWNER],
 18670                                  					; arena_owner_system
 18671 00007C62 36A1[4603]              		mov	ax, [ss:ENDMEM]
 18672 00007C66 29D0                    		sub	ax, dx
 18673 00007C68 48                      		dec	ax
 18674 00007C69 A30300                  		mov	[3],	ax	; [ARENA.SIZE]
 18675 00007C6C BF[D200]                		mov	di, SFTABL_6 ; SFTABL+6
 18676                                  					; SFTABL+SFT.SFTable
 18677 00007C6F B80300                  		mov	ax, 3
 18678 00007C72 AB                      		stosw
 18679 00007C73 BF[280D]                		mov	di, SysInitTable
 18680 00007C76 42                      		inc	dx
 18681 00007C77 8EDA                    		mov	ds, dx
 18682 00007C79 BA[E77C]                		mov	dx, _seg_reinit
 18683 00007C7C B9[1076]                		mov	cx, exepatch_start
 18684 00007C7F 81E9[0000]              		sub	cx, _$STARTCODE
 18685 00007C83 B8[9A79]                		mov	ax, SYSBUF
 18686 00007C86 2D[0000]                		sub	ax, _$STARTCODE
 18687 00007C89 368B26[8405]            		mov	sp, [ss:USER_SP]
 18688 00007C8E 368E16[8605]            		mov	ss, [ss:USER_SS]
 18689 00007C93 CB                      		retf
 18690                                  
 18691                                  ; =============== S U B	R O U T	I N E =======================================
 18692                                  
 18693                                  CHARINIT:		; ...
 18694 00007C94 36C606[5A03]1A          		mov	byte [ss:DEVCALL], 1Ah ; [SS:DEVCALL_REQLEN],DINITHL
 18695 00007C9A 36C606[5B03]00          		mov	byte [ss:DEVCALL+1], 0 ; [SS:DEVCALL_REQUNIT],0
 18696 00007CA0 36C606[5C03]00          		mov	byte [ss:DEVCALL_REQFUNC], 0 ; [SS:DEVCALL_REQFUNC],DEVINIT
 18697 00007CA6 36C706[5D03]0000        		mov	word [ss:DEVCALL_REQSTAT], 0 ; [SS:DEVCALL_REQSTAT],0
 18698 00007CAD 06                      		push	es
 18699 00007CAE 53                      		push	bx
 18700 00007CAF 50                      		push	ax
 18701 00007CB0 BB[5A03]                		mov	bx, DEVCALL
 18702 00007CB3 16                      		push	ss
 18703 00007CB4 07                      		pop	es
 18704 00007CB5 E82ACB                  		call	DEVIOCALL2
 18705 00007CB8 58                      		pop	ax
 18706 00007CB9 5B                      		pop	bx
 18707 00007CBA 07                      		pop	es
 18708 00007CBB C3                      		retn
 18709                                  
 18710                                  ; =============== S U B	R O U T	I N E =======================================
 18711                                  
 18712                                  check_XMM:		; ...
 18713 00007CBC 50                      		push	ax
 18714 00007CBD B80043                  		mov	ax, 4300h	; (XMM_MULTIPLEX<<8)+XMM_INSTALL_CHECK
 18715 00007CC0 CD2F                    		int	2Fh		; - Multiplex -	XMS - INSTALLATION CHECK
 18716                                  					; Return: AL = 80h XMS driver installed
 18717                                  					; AL <>	80h no driver
 18718 00007CC2 3C80                    		cmp	al, 80h
 18719 00007CC4 751D                    		jnz	short cXMM_no_driver
 18720 00007CC6 53                      		push	bx
 18721 00007CC7 52                      		push	dx
 18722 00007CC8 1E                      		push	ds
 18723 00007CC9 06                      		push	es
 18724 00007CCA B81043                  		mov	ax, 4310h	; (XMM_MULTIPLEX<<8)+XMM_FUNCTION_ADDR
 18725 00007CCD CD2F                    		int	2Fh		; - Multiplex -	XMS - GET DRIVER ADDRESS
 18726                                  					; Return: ES:BX	-> driver entry	point
 18727 00007CCF 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 18728 00007CD4 891E[6311]              		mov	word [XMMcontrol], bx
 18729 00007CD8 8C06[6511]              		mov	word [XMMcontrol+2], es
 18730                                  
 18731                                  cXMMexit:
 18732 00007CDC F8                      		clc
 18733 00007CDD 07                      		pop	es
 18734 00007CDE 1F                      		pop	ds
 18735 00007CDF 5A                      		pop	dx
 18736 00007CE0 5B                      		pop	bx
 18737 00007CE1 58                      		pop	ax
 18738 00007CE2 C3                      		retn
 18739                                  ; ---------------------------------------------------------------------------
 18740                                  
 18741                                  cXMM_no_driver:				; ...
 18742 00007CE3 F9                      		stc
 18743 00007CE4 58                      		pop	ax
 18744 00007CE5 C3                      		retn
 18745                                  
 18746                                  ; ---------------------------------------------------------------------------
 18747 00007CE6 00                      num_entry	db 0			; ...
 18748                                  ; ---------------------------------------------------------------------------
 18749                                  
 18750                                  _seg_reinit:				; ...
 18751 00007CE7 1E                      		push	ds
 18752 00007CE8 2E8E1E[0700]            		mov	ds, [cs:DosDSeg]
 18753 00007CED E8C300                  		call	patch_misc_segments
 18754 00007CF0 83F800                  		cmp	ax, 0
 18755 00007CF3 756E                    		jnz	short patch_vec_seg
 18756 00007CF5 2E803E[E67C]00          		cmp	byte [cs:num_entry], 0
 18757 00007CFB 7508                    		jnz	short second_entry
 18758 00007CFD 8CD8                    		mov	ax, ds
 18759 00007CFF E86E00                  		call	patch_vec_segments
 18760 00007D02 E8FF00                  		call	patch_offset
 18761                                  
 18762                                  second_entry:				; ...
 18763 00007D05 8CC0                    		mov	ax, es
 18764 00007D07 BF[6210]                		mov	di, DOSINTTABLE
 18765 00007D0A B90900                  		mov	cx, 9
 18766 00007D0D 1E                      		push	ds
 18767 00007D0E 07                      		pop	es
 18768                                  
 18769                                  dosinttabloop:				; ...
 18770 00007D0F 83C702                  		add	di, 2
 18771 00007D12 AB                      		stosw
 18772 00007D13 E2FA                    		loop	dosinttabloop
 18773 00007D15 3D00F0                  		cmp	ax, 0F000h
 18774 00007D18 724E                    		jb	short sr_done
 18775 00007D1A E89FFF                  		call	check_XMM
 18776 00007D1D 7249                    		jb	short sr_done
 18777 00007D1F E86E01                  		call	patch_in_nops
 18778 00007D22 C606[1112]01            		mov	byte [DosHasHMA], 1
 18779 00007D27 C706[1212][6077]        		mov	word [FixExePatch], ExePatch
 18780 00007D2D C706[6100][6479]        		mov	word [ChkCopyProt], IsCopyProt
 18781                                  
 18782                                  Get_CPU_Type:				; WhatCPUType
 18783 00007D33 9C                      		pushf
 18784 00007D34 53                      		push	bx
 18785 00007D35 31DB                    		xor	bx, bx
 18786 00007D37 31C0                    		xor	ax, ax
 18787 00007D39 50                      		push	ax
 18788 00007D3A 9D                      		popf
 18789 00007D3B 9C                      		pushf
 18790 00007D3C 58                      		pop	ax
 18791 00007D3D 2500F0                  		and	ax, 0F000h
 18792 00007D40 3D00F0                  		cmp	ax, 0F000h
 18793 00007D43 740E                    		jz	short cpu_8086
 18794 00007D45 B800F0                  		mov	ax, 0F000h
 18795 00007D48 50                      		push	ax
 18796 00007D49 9D                      		popf
 18797 00007D4A 9C                      		pushf
 18798 00007D4B 58                      		pop	ax
 18799 00007D4C 2500F0                  		and	ax, 0F000h
 18800 00007D4F 7401                    		jz	short cpu_286
 18801 00007D51 43                      		inc	bx
 18802                                  
 18803                                  cpu_286:				; ...
 18804 00007D52 43                      		inc	bx
 18805                                  
 18806                                  cpu_8086:				; ...
 18807 00007D53 89D8                    		mov	ax, bx
 18808 00007D55 5B                      		pop	bx
 18809 00007D56 9D                      		popf
 18810 00007D57 3C01                    		cmp	al, 1
 18811 00007D59 750D                    		jnz	short sr_done
 18812 00007D5B C706[1412][9D78]        		mov	word [RationalPatchPtr], RationalPatch
 18813 00007D61 EB05                    		jmp	short sr_done
 18814                                  ; ---------------------------------------------------------------------------
 18815                                  
 18816                                  patch_vec_seg:				; ...
 18817 00007D63 8CC0                    		mov	ax, es
 18818 00007D65 E80800                  		call	patch_vec_segments
 18819                                  
 18820                                  sr_done:				; ...
 18821 00007D68 2EC606[E67C]01          		mov	byte [cs:num_entry], 1
 18822 00007D6E 1F                      		pop	ds
 18823 00007D6F CB                      		retf
 18824                                  
 18825                                  ; =============== S U B	R O U T	I N E =======================================
 18826                                  
 18827                                  patch_vec_segments:	; ...
 18828 00007D70 06                      		push	es
 18829 00007D71 31C9                    		xor	cx, cx
 18830 00007D73 8EC1                    		mov	es, cx
 18831 00007D75 BF8200                  		mov	di, 82h		; INTBASE+2
 18832                                  					; di ->	segment	of int 20 vector
 18833 00007D78 26A30200                		mov	[es:2],	ax
 18834 00007D7C B90200                  		mov	cx, 2
 18835                                  
 18836                                  ps_set1:				; ...
 18837 00007D7F AB                      		stosw
 18838 00007D80 83C702                  		add	di, 2
 18839 00007D83 E2FA                    		loop	ps_set1
 18840 00007D85 83C704                  		add	di, 4
 18841 00007D88 AB                      		stosw
 18842 00007D89 83C706                  		add	di, 6
 18843 00007D8C B90400                  		mov	cx, 4
 18844                                  
 18845                                  ps_set2:				; ...
 18846 00007D8F AB                      		stosw
 18847 00007D90 83C702                  		add	di, 2
 18848 00007D93 E2FA                    		loop	ps_set2
 18849 00007D95 83C704                  		add	di, 4
 18850 00007D98 B90600                  		mov	cx, 6
 18851                                  
 18852                                  ps_set3:				; ...
 18853 00007D9B AB                      		stosw
 18854 00007D9C 83C702                  		add	di, 2
 18855 00007D9F E2FA                    		loop	ps_set3
 18856 00007DA1 83C708                  		add	di, 8
 18857 00007DA4 B90E00                  		mov	cx, 14
 18858                                  
 18859                                  ps_set4:				; ...
 18860 00007DA7 AB                      		stosw
 18861 00007DA8 83C702                  		add	di, 2
 18862 00007DAB E2FA                    		loop	ps_set4
 18863 00007DAD 26A3C300                		mov	[es:0C3h], ax	; [es:ENTRYPOINT+3]
 18864 00007DB1 07                      		pop	es
 18865 00007DB2 C3                      		retn
 18866                                  
 18867                                  ; =============== S U B	R O U T	I N E =======================================
 18868                                  
 18869                                  patch_misc_segments: ; ...
 18870 00007DB3 53                      		push	bx
 18871 00007DB4 06                      		push	es
 18872 00007DB5 50                      		push	ax
 18873 00007DB6 8CC0                    		mov	ax, es
 18874 00007DB8 1E                      		push	ds
 18875 00007DB9 07                      		pop	es
 18876 00007DBA BF[9000]                		mov	di, JShare
 18877 00007DBD 8B1E[AA0A]              		mov	bx, [TEMP_DOSLOC]
 18878 00007DC1 B90F00                  		mov	cx, 15
 18879                                  
 18880                                  jumptabloop:				; ...
 18881 00007DC4 83C702                  		add	di, 2
 18882 00007DC7 83FBFF                  		cmp	bx, -1
 18883 00007DCA 7405                    		jz	short share_patch
 18884 00007DCC 263B1D                  		cmp	bx, [es:di]
 18885 00007DCF 7501                    		jnz	short no_share_patch
 18886                                  
 18887                                  share_patch:				; ...
 18888 00007DD1 AB                      		stosw
 18889                                  
 18890                                  no_share_patch:				; ...
 18891 00007DD2 E2F0                    		loop	jumptabloop
 18892 00007DD4 BE[2A12]                		mov	si, COUNTRY_CDPG
 18893 00007DD7 8C5C4F                  		mov	word [si+4Fh], ds ; [si+DOS_CCDPG.ccUcase_ptr+2]
 18894 00007DDA 8C5C54                  		mov	word [si+54h], ds ; [si+DOS_CCDPG.ccFileUcase_ptr+2]
 18895 00007DDD 8C5C59                  		mov	word [si+59h], ds ; [si+DOS_CCDPG.ccFileChar_ptr+2]
 18896 00007DE0 8C5C5E                  		mov	word [si+5Eh], ds ; [si+DOS_CCDPG.ccCollate_ptr+2]
 18897 00007DE3 8C9C8000                		mov	word [si+80h], ds ; [si+DOS_CCDPG.ccMono_ptr+2]
 18898 00007DE7 8C5C63                  		mov	word [si+63h], ds ; [si+DOS_CCDPG.ccDBCS_ptr+2]
 18899 00007DEA BE[300D]                		mov	si, FastOpenTable
 18900 00007DED 833E[AA0A]FF            		cmp	word [TEMP_DOSLOC], 0FFFFh ; -1
 18901 00007DF2 7409                    		jz	short fast_patch
 18902 00007DF4 8B0E[AA0A]              		mov	cx, [TEMP_DOSLOC]
 18903 00007DF8 3B4C04                  		cmp	cx, [si+4]	; [si+fastopen_entry.name_caching+2]
 18904 00007DFB 7503                    		jnz	short no_fast_patch
 18905                                  
 18906                                  fast_patch:				; ...
 18907 00007DFD 894404                  		mov	[si+4],	ax
 18908                                  
 18909                                  no_fast_patch:				; ...
 18910 00007E00 58                      		pop	ax
 18911 00007E01 07                      		pop	es
 18912 00007E02 5B                      		pop	bx
 18913 00007E03 C3                      		retn
 18914                                  
 18915                                  ; =============== S U B	R O U T	I N E =======================================
 18916                                  
 18917                                  patch_offset:	; ...
 18918 00007E04 06                      		push	es
 18919 00007E05 31C0                    		xor	ax, ax
 18920 00007E07 8EC0                    		mov	es, ax
 18921 00007E09 26C7060000[8A10]        		mov	word [es:0], ldivov
 18922 00007E10 BF8000                  		mov	di, 80h		; INTBASE
 18923                                  					; di-> offset of int 20	handler
 18924 00007E13 B8[DA10]                		mov	ax, lirett
 18925 00007E16 B90200                  		mov	cx, 2
 18926                                  
 18927                                  po_iset1:				; ...
 18928 00007E19 AB                      		stosw
 18929 00007E1A 83C702                  		add	di, 2
 18930 00007E1D E2FA                    		loop	po_iset1
 18931 00007E1F 83C704                  		add	di, 4
 18932 00007E22 AB                      		stosw
 18933 00007E23 83C706                  		add	di, 6
 18934 00007E26 B90400                  		mov	cx, 4
 18935                                  
 18936                                  po_iset2:				; ...
 18937 00007E29 AB                      		stosw
 18938 00007E2A 83C702                  		add	di, 2
 18939 00007E2D E2FA                    		loop	po_iset2
 18940 00007E2F 83C704                  		add	di, 4
 18941 00007E32 B90600                  		mov	cx, 6
 18942                                  
 18943                                  po_iset3:				; ...
 18944 00007E35 AB                      		stosw
 18945 00007E36 83C702                  		add	di, 2
 18946 00007E39 E2FA                    		loop	po_iset3
 18947 00007E3B 83C708                  		add	di, 8
 18948 00007E3E B90E00                  		mov	cx, 14
 18949                                  
 18950                                  po_iset4:				; ...
 18951 00007E41 AB                      		stosw
 18952 00007E42 83C702                  		add	di, 2
 18953 00007E45 E2FA                    		loop	po_iset4
 18954 00007E47 26C706BC00[C610]        		mov	word [es:0BCh], lint2f
 18955 00007E4E 26C606C000EA            		mov	byte [es:0C0h], 0EAh ; [es:ENTRYPOINT],mi_long_jmp
 18956 00007E54 26C706C100[D010]        		mov	word [es:0C1h], lcall_entry
 18957 00007E5B 26C7068000[9410]        		mov	word [es:80h], lquit	; [es:addr_int_abort]
 18958 00007E62 26C7068400[9E10]        		mov	word [es:84h], lcommand ; [es:addr_int_command]
 18959 00007E69 26C7069400[A810]        		mov	word [es:94h], labsdrd ; [es:addr_int_disk_read]
 18960 00007E70 26C7069800[B210]        		mov	word [es:98h], labsdwrt ; [es:addr_int_disk_write]
 18961 00007E77 26C7069C00[BC10]        		mov	word [es:9Ch], lstay_resident ; [es:addr_int_keep_process]
 18962 00007E7E 07                      		pop	es
 18963 00007E7F C3                      		retn
 18964                                  
 18965                                  ; ---------------------------------------------------------------------------
 18966 00007E80 [8A10]                  patch_table	dw ldivov	; ...
 18967                                  					; i0patch
 18968 00007E82 [9410]                  		dw lquit		; i20patch
 18969 00007E84 [9E10]                  		dw lcommand	; i21patch
 18970 00007E86 [A810]                  		dw labsdrd	; i25patch
 18971 00007E88 [B210]                  		dw labsdwrt	; i26patch
 18972 00007E8A [BC10]                  		dw lstay_resident ; i27patch
 18973 00007E8C [C610]                  		dw lint2f	; i2fpatch
 18974 00007E8E [D010]                  		dw lcall_entry	; cpmpatch
 18975                                  ; ---------------------------------------------------------------------------
 18976                                  
 18977                                  patch_in_nops:				; ...
 18978 00007E90 50                      		push	ax
 18979 00007E91 56                      		push	si
 18980 00007E92 BE[807E]                		mov	si, patch_table
 18981 00007E95 B89090                  		mov	ax, 9090h	; nop, nop
 18982 00007E98 B90800                  		mov	cx, 8		; patch_table_size
 18983                                  
 18984                                  pin_loop:				; ...
 18985 00007E9B 2E8B3C                  		mov	di, [cs:si]
 18986 00007E9E AB                      		stosw
 18987 00007E9F 83C602                  		add	si, 2
 18988 00007EA2 E2F7                    		loop	pin_loop
 18989 00007EA4 5E                      		pop	si
 18990 00007EA5 58                      		pop	ax
 18991 00007EA6 C3                      		retn
 18992                                  ; ---------------------------------------------------------------------------
 18993 00007EA7 000000000000000000      DOSCODE_END	db 9 dup(0)		; ...
 18994                                  
 18995                                  ; ===========================================================================
 18996                                  ; ----------------------------------------------------------------------------
 18997                                  ; 06/12/2022 - Retro DOS v4.0 (Modified MSDOS 5.0 MSDOS.SYS)
 18998                                  ; ----------------------------------------------------------------------------
 18999                                  
 19000                                  segment .data  vstart=0 ; 06/12/2022
 19001                                  								
 19002                                  ; ============================================================================
 19003                                  
 19004                                  DOSDATASTART:
 19005 00000000 00000000                DATASTART	db 4 dup(0)
 19006 00000004 0100                    DataVersion	dw 1
 19007 00000006 0000000000000000        WinoldPatch1	db 8 dup(0)		; ...
 19008 0000000E 0000                    MYNUM		dw 0			; ...
 19009 00000010 0000                    FCBLRU		dw 0			; ...
 19010 00000012 0000                    OpenLRU		dw 0
 19011 00000014 FFFFFFFF                OEM_HANDLER	dd 0FFFFFFFFh
 19012 00000018 [2704]                  LeaveAddr	dw LeaveDOS	; DOSCODE:LeaveDOS
 19013 0000001A 0300                    RetryCount	dw 3			; ...
 19014 0000001C 0100                    RetryLoop	dw 1			; ...
 19015 0000001E FFFFFFFF                LastBuffer	dd 0FFFFFFFFh		; ...
 19016 00000022 0000                    CONTPOS		dw 0			; ...
 19017 00000024 0000                    arena_head	dw 0			; ...
 19018 00000026 00000000                SYSINITVARS	dd 0			; ...
 19019                                  					; DPBHEAD
 19020 0000002A CC000000                SFT_ADDR	dd 0CCh			; ...
 19021 0000002E 00000000                BCLOCK		dd 0			; ...
 19022 00000032 00000000                BCON		dd 0			; ...
 19023 00000036 8000                    MAXSEC		dw 128			; ...
 19024 00000038 00000000                BUFFHEAD	dd 0			; ...
 19025 0000003C 00000000                CDSADDR		dd 0			; ...
 19026 00000040 00000000                SFTFCB		dd 0			; ...
 19027 00000044 0000                    KEEPCOUNT	dw 0
 19028 00000046 00                      NUMIO		db 0			; ...
 19029 00000047 00                      CDSCOUNT	db 0			; ...
 19030 00000048 00000000                NULDEV		dd 0			; ...
 19031 0000004C 0480                    		dw 8004h		; DEVTYP|ISNULL
 19032 0000004E [C60D]                  		dw SNULDEV
 19033 00000050 [CC0D]                  		dw INULDEV
 19034 00000052 4E554C2020202020        		db 'NUL     '
 19035 0000005A 00                      SPLICES		db 0			; ...
 19036 0000005B 0000                    Special_Entries	dw 0
 19037 0000005D 00000000                UU_IFS_DOS_CALL	dd 0			; ...
 19038 00000061 0000                    ChkCopyProt	dw 0			; ...
 19039 00000063 0000                    A20OFF_PSP	dw 0			; ...
 19040 00000065 0000                    BUFFERS_PARM1	dw 0
 19041 00000067 0000                    BUFFERS_PARM2	dw 0
 19042 00000069 00                      BOOTDRIVE	db 0			; ...
 19043 0000006A 00                      DDMOVE		db 0			; ...
 19044 0000006B 0000                    EXT_MEM_SIZE	dw 0
 19045 0000006D 00000000                BufferQueue	dd 0			; ...
 19046 00000071 0000                    DirtyBufferCount dw 0			; ...
 19047 00000073 00000000                SC_CACHE_PTR	dd 0			; ...
 19048 00000077 0000                    SC_CACHE_COUNT	dw 0			; ...
 19049 00000079 00                      BuffInHMA	db 0			; ...
 19050 0000007A 00000000                LoMemBuff	dd 0			; ...
 19051 0000007E 000000                  UU_BUF_EMS_FIRST_PAGE db 3 dup(0)
 19052 00000081 FFFF                    CL0FATENTRY	dw -1			; ...
 19053 00000083 00                      IoStatFail	db 0			; ...
 19054 00000084 00                      ALLOCMSAVE	db 0			; ...
 19055 00000085 00                      A20OFF_COUNT	db 0			; ...
 19056 00000086 00                      DOS_FLAG	db 0			; ...
 19057 00000087 0000                    UNPACK_OFFSET	dw 0			; ...
 19058 00000089 00                      UMBFLAG		db 0			; ...
 19059 0000008A 0000                    SAVE_AX		dw 0			; ...
 19060 0000008C FFFF                    UMB_HEAD	dw -1			; ...
 19061 0000008E 0100                    START_ARENA	dw 1			; ...
 19062 00000090 [DA06]                  JShare		dw BadCall	; ...
 19063 00000092 0000                    		dw 0
 19064 00000094 [DE06]                  MFT_enter	dw OKCall		; ...
 19065 00000096 0000                    		dw 0
 19066 00000098 [DE06]                  MFTClose	dw OKCall		; ...
 19067 0000009A 0000                    		dw 0
 19068 0000009C [DA06]                  MFTclU		dw BadCall		; ...
 19069 0000009E 0000                    		dw 0
 19070 000000A0 [DA06]                  MFTCloseP	dw BadCall	; ...
 19071 000000A2 0000                    		dw 0
 19072 000000A4 [DA06]                  MFTcloN		dw BadCall	; ...
 19073 000000A6 0000                    		dw 0
 19074 000000A8 [DA06]                  set_block	dw BadCall		; ...
 19075 000000AA 0000                    		dw 0
 19076 000000AC [DA06]                  clr_block	dw BadCall		; ...
 19077 000000AE 0000                    		dw 0
 19078 000000B0 [DE06]                  chk_block	dw OKCall		; ...
 19079 000000B2 0000                    		dw 0
 19080 000000B4 [DA06]                  MFT_get		dw BadCall		; ...
 19081 000000B6 0000                    		dw 0
 19082 000000B8 [DA06]                  ShSave		dw BadCall	; ...
 19083 000000BA 0000                    		dw 0
 19084 000000BC [DA06]                  ShChk		dw BadCall	; ...
 19085 000000BE 0000                    		dw 0
 19086 000000C0 [DE06]                  ShCol		dw OKCall		; ...
 19087 000000C2 0000                    		dw 0
 19088 000000C4 [DA06]                  ShCloseFile	dw BadCall	; ...
 19089 000000C6 0000                    		dw 0
 19090 000000C8 [DA06]                  ShSU		dw BadCall	; ...
 19091 000000CA 0000                    		dw 0
 19092 000000CC FFFF                    SFTABL		dw -1
 19093 000000CE FFFF                    		dw -1
 19094 000000D0 0500                    		dw 5
 19095 000000D2 000000000000000000-     SFTABL_6	db 295 dup(0)		; SFTABL+6
 19095 000000DB 000000000000000000-
 19095 000000E4 000000000000000000-
 19095 000000ED 000000000000000000-
 19095 000000F6 000000000000000000-
 19095 000000FF 000000000000000000-
 19095 00000108 000000000000000000-
 19095 00000111 000000000000000000-
 19095 0000011A 000000000000000000-
 19095 00000123 000000000000000000-
 19095 0000012C 000000000000000000-
 19095 00000135 000000000000000000-
 19095 0000013E 000000000000000000-
 19095 00000147 000000000000000000-
 19095 00000150 000000000000000000-
 19095 00000159 000000000000000000-
 19095 00000162 000000000000000000-
 19095 0000016B 000000000000000000-
 19095 00000174 000000000000000000-
 19095 0000017D 000000000000000000-
 19095 00000186 000000000000000000-
 19095 0000018F 000000000000000000-
 19095 00000198 000000000000000000-
 19095 000001A1 000000000000000000-
 19095 000001AA 000000000000000000-
 19095 000001B3 000000000000000000-
 19095 000001BC 000000000000000000-
 19095 000001C5 000000000000000000-
 19095 000001CE 000000000000000000-
 19095 000001D7 000000000000000000-
 19095 000001E0 000000000000000000-
 19095 000001E9 000000000000000000-
 19095 000001F2 00000000000000     
 19096 000001F9 00                      CARPOS		db 0			; ...
 19097 000001FA 00                      STARTPOS	db 0			; ...
 19098 000001FB 000000000000000000-     INBUF		db 128 dup(0)		; ...
 19098 00000204 000000000000000000-
 19098 0000020D 000000000000000000-
 19098 00000216 000000000000000000-
 19098 0000021F 000000000000000000-
 19098 00000228 000000000000000000-
 19098 00000231 000000000000000000-
 19098 0000023A 000000000000000000-
 19098 00000243 000000000000000000-
 19098 0000024C 000000000000000000-
 19098 00000255 000000000000000000-
 19098 0000025E 000000000000000000-
 19098 00000267 000000000000000000-
 19098 00000270 000000000000000000-
 19098 00000279 0000               
 19099 0000027B 000000000000000000-     CONBUF		db 131 dup(0)		; ...
 19099 00000284 000000000000000000-
 19099 0000028D 000000000000000000-
 19099 00000296 000000000000000000-
 19099 0000029F 000000000000000000-
 19099 000002A8 000000000000000000-
 19099 000002B1 000000000000000000-
 19099 000002BA 000000000000000000-
 19099 000002C3 000000000000000000-
 19099 000002CC 000000000000000000-
 19099 000002D5 000000000000000000-
 19099 000002DE 000000000000000000-
 19099 000002E7 000000000000000000-
 19099 000002F0 000000000000000000-
 19099 000002F9 0000000000         
 19100 000002FE 00                      PFLAG		db 0			; ...
 19101 000002FF 00                      VERFLG		db 0			; ...
 19102 00000300 03                      CHARCO		db 11b			; ...
 19103 00000301 2F                      chSwitch	db '/'
 19104 00000302 00                      AllocMethod	db 0			; ...
 19105 00000303 00                      fShare		db 0			; ...
 19106 00000304 01                      DIFFNAM		db 1			; ...
 19107 00000305 202020202020202020-     MYNAME		db 16 dup(20h)		; ...
 19107 0000030E 20202020202020     
 19108 00000315 [0C0D]                  CritPatch	dw redir_patch
 19109 00000317 [0C0D]                  		dw redir_patch
 19110 00000319 [0C0D]                  		dw redir_patch
 19111 0000031B [0C0D]                  		dw redir_patch
 19112 0000031D 0000                    		dw 0
 19113 0000031F 90                      		db 90h			; align	2
 19114 00000320 00                      ERRORMODE	db 0			; ...
 19115                                  					; SWAP_START
 19116 00000321 00                      INDOS		db 0			; ...
 19117 00000322 FF                      WPERR		db -1			; ...
 19118 00000323 00                      EXTERR_LOCUS	db 0			; ...
 19119 00000324 0000                    EXTERR		dw 0			; ...
 19120 00000326 00                      EXTERR_ACTION	db 0			; ...
 19121 00000327 00                      EXTERR_CLASS	db 0			; ...
 19122 00000328 00000000                EXTERRPT	dd 0			; ...
 19123 0000032C 80000000                DMAADD		dd 80h			; ...
 19124 00000330 0000                    CurrentPDB	dw 0			; ...
 19125 00000332 0000                    ConC_Spsave	dw 0			; ...
 19126 00000334 0000                    exit_code	dw 0			; ...
 19127 00000336 00                      CURDRV		db 0			; ...
 19128 00000337 00                      CNTCFLAG	db 0			; ...
 19129 00000338 00                      CPSWFLAG	db 0
 19130 00000339 00                      CPSWSAVE	db 0
 19131 0000033A 0000                    USER_IN_AX	dw 0			; ...
 19132                                  					; SWAP_ALWAYS
 19133 0000033C 0000                    PROC_ID		dw 0			; ...
 19134 0000033E 0000                    USER_ID		dw 0			; ...
 19135 00000340 0000                    FirstArena	dw 0			; ...
 19136 00000342 0000                    BestArena	dw 0			; ...
 19137 00000344 0000                    LastArena	dw 0			; ...
 19138 00000346 0000                    ENDMEM		dw 0			; ...
 19139 00000348 0000                    LASTENT		dw 0			; ...
 19140 0000034A 00                      FAILERR		db 0			; ...
 19141 0000034B 00                      ALLOWED		db 0			; ...
 19142 0000034C 00                      NoSetDir	db 0			; ...
 19143 0000034D 00                      DidCTRLC	db 0			; ...
 19144 0000034E 00                      SpaceFlag	db 0			; ...
 19145 0000034F 90                      		db 90h			; align	2
 19146 00000350 00                      DAY		db 0			; ...
 19147 00000351 00                      MONTH		db 0			; ...
 19148 00000352 0000                    YEAR		dw 0			; ...
 19149 00000354 FFFF                    DAYCNT		dw 0FFFFh		; ...
 19150 00000356 00                      WEEKDAY		db 0			; ...
 19151 00000357 00                      CONSWAP		db 0			; ...
 19152 00000358 01                      IDLEINT		db 1			; ...
 19153 00000359 00                      fAborting	db 0			; ...
 19154 0000035A 0000                    DEVCALL		dw 0			; ...
 19155 0000035C 00                      DEVCALL_REQFUNC	db 0			; ...
 19156 0000035D 0000                    DEVCALL_REQSTAT	dw 0			; ...
 19157 0000035F 0000000000000000        		db 8 dup(0)
 19158 00000367 00                      CALLMED		db 0			; ...
 19159 00000368 00000000                CALLXADD	db 0,0,0,0		; ...
 19160 0000036C 0000                    CALLSCNT	dw 0			; ...
 19161 0000036E 0000                    CALLSSEC	dw 0			; ...
 19162 00000370 00000000                CALLVIDRW	dd 0			; ...
 19163 00000374 00000000                CALLNEWSC	dd 0			; ...
 19164 00000378 00000000                CALLDEVAD	dd 0			; ...
 19165 0000037C 00                      IOCALL_REQLEN	db 0			; ...
 19166                                  					; IOCALL
 19167 0000037D 00                      IOCALL_REQUNIT	db 0			; ...
 19168 0000037E 00                      IOCALL_REQFUNC	db 0			; ...
 19169 0000037F 0000                    IOCALL_REQSTAT	db 2 dup(0)		; ...
 19170 00000381 0000000000000000        		db 8 dup(0)
 19171 00000389 00                      IOCTL_REQ_MAJORFUNCTION	db 0		; ...
 19172 0000038A 00                      IOCTL_REQ_MINORFUNCTION	db 0		; ...
 19173 0000038B 00                      IOCTL_REQ_REG_SI db 0			; ...
 19174 0000038C 00                      IOCTL_IOXAD_2	db 0			; ...
 19175 0000038D 00                      IOCTL_REQ_REG_DI db 0			; ...
 19176 0000038E 00                      IOCTL_IOSCNT	db 0			; ...
 19177 0000038F 0000                    IOCTL_REQ_GENERICIOCTL_PACKET dw 0	; ...
 19178 00000391 00                      IOCTL_REQ_GENERICIOCTL_PACKET_2	db 0	; ...
 19179 00000392 0E                      DSKSTCALL	db 14			; ...
 19180                                  					; DRDNDHL
 19181 00000393 00                      		db 0
 19182 00000394 05                      DSKSTCOM	db 5			; ...
 19183                                  					; DEVRDND
 19184 00000395 0000                    DSKSTST		dw 0			; ...
 19185 00000397 0000000000000000        		db 8 dup(0)
 19186 0000039F 00                      DSKCHRET	db 0			; ...
 19187 000003A0 [BC03]                  DSKCHRET_1	dw DEVIOBUF		; DSKCHRET+1
 19188 000003A2 0000                    DSKCHRET_3	dw 0			; DSKCHRET+3
 19189 000003A4 0100                    DSKSTCNT	dw 1			; ...
 19190 000003A6 0000                    		dw 0
 19191 000003A8 00                      CreatePDB	db 0			; ...
 19192 000003A9 0000000000000000        Lock_Buffer	db 8 dup(0)		; ...
 19193 000003B1 90                      		db 90h
 19194 000003B2 000000FF                USERNUM		dd 0FF000000h		; ...
 19195 000003B6 000000000000            TIMEBUF		dw 3 dup(0)		; ...
 19196 000003BC 0000                    DEVIOBUF	dw 0			; ...
 19197 000003BE 000000000000000000-     OPENBUF		db 128 dup(0)		; ...
 19197 000003C7 000000000000000000-
 19197 000003D0 000000000000000000-
 19197 000003D9 000000000000000000-
 19197 000003E2 000000000000000000-
 19197 000003EB 000000000000000000-
 19197 000003F4 000000000000000000-
 19197 000003FD 000000000000000000-
 19197 00000406 000000000000000000-
 19197 0000040F 000000000000000000-
 19197 00000418 000000000000000000-
 19197 00000421 000000000000000000-
 19197 0000042A 000000000000000000-
 19197 00000433 000000000000000000-
 19197 0000043C 0000               
 19198 0000043E 000000000000000000-     RENBUF		db 128 dup(0)		; ...
 19198 00000447 000000000000000000-
 19198 00000450 000000000000000000-
 19198 00000459 000000000000000000-
 19198 00000462 000000000000000000-
 19198 0000046B 000000000000000000-
 19198 00000474 000000000000000000-
 19198 0000047D 000000000000000000-
 19198 00000486 000000000000000000-
 19198 0000048F 000000000000000000-
 19198 00000498 000000000000000000-
 19198 000004A1 000000000000000000-
 19198 000004AA 000000000000000000-
 19198 000004B3 000000000000000000-
 19198 000004BC 0000               
 19199 000004BE 000000000000000000-     SEARCHBUF	db 53 dup(0)		; ...
 19199 000004C7 000000000000000000-
 19199 000004D0 000000000000000000-
 19199 000004D9 000000000000000000-
 19199 000004E2 000000000000000000-
 19199 000004EB 0000000000000000   
 19200 000004F3 000000000000000000-     DUMMYCDS	db 88 dup(0)		; ...
 19200 000004FC 000000000000000000-
 19200 00000505 000000000000000000-
 19200 0000050E 000000000000000000-
 19200 00000517 000000000000000000-
 19200 00000520 000000000000000000-
 19200 00000529 000000000000000000-
 19200 00000532 000000000000000000-
 19200 0000053B 000000000000000000-
 19200 00000544 00000000000000     
 19201 0000054B 000000000000000000-     NAME1		db 12 dup(0)		; ...
 19201 00000554 000000             
 19202 00000557 000000000000000000-     NAME2		db 13 dup(0)		; ...
 19202 00000560 00000000           
 19203 00000564 0000                    DESTSTART	dw 0			; ...
 19204 00000566 0000000000              		db 5 dup(0)
 19205 0000056B 00                      ATTRIB		db 0			; ...
 19206 0000056C 00                      EXTFCB		db 0			; ...
 19207 0000056D 00                      SATTRIB		db 0			; ...
 19208 0000056E 00                      OPEN_ACCESS	db 0			; ...
 19209 0000056F 00                      FOUNDDEL	db 0			; ...
 19210 00000570 00                      FOUND_DEV	db 0			; ...
 19211 00000571 00                      FSPLICE		db 0			; ...
 19212 00000572 00                      FSHARING	db 0			; ...
 19213 00000573 00                      SECCLUSPOS	db 0			; ...
 19214 00000574 00                      TRANS		db 0			; ...
 19215 00000575 00                      READOP		db 0			; ...
 19216 00000576 00                      THISDRV		db 0			; ...
 19217 00000577 00                      CLUSFAC		db 0			; ...
 19218 00000578 00                      CLUSSPLIT	db 0			; ...
 19219 00000579 00                      INSMODE		db 0			; ...
 19220 0000057A 00                      CMETA		db 0			; ...
 19221 0000057B 00                      VOLID		db 0			; ...
 19222 0000057C 00                      EXIT_TYPE	db 0			; ...
 19223 0000057D 90                      		db 90h
 19224 0000057E 00                      CREATING	db 0			; ...
 19225 0000057F 00                      DELALL		db 0			; ...
 19226 00000580 00000000                EXITHOLD	dd 0			; ...
 19227 00000584 0000                    USER_SP		dw 0			; ...
 19228 00000586 0000                    USER_SS		dw 0			; ...
 19229 00000588 0000                    CONTSTK		dw 0			; ...
 19230 0000058A 00000000                THISDPB		dd 0			; ...
 19231 0000058E 0000                    CLUSSAVE	dw 0			; ...
 19232 00000590 00000000                CLUSSEC		dd 0			; ...
 19233 00000594 0000                    PREREAD		dw 0			; ...
 19234 00000596 0000                    FATBYT		dw 0			; ...
 19235 00000598 00                      FATBYTE		db 0			; ...
 19236 00000599 00                      		db 0
 19237 0000059A 00000000                DEVPT		dd 0			; ...
 19238 0000059E 00000000                THISSFT		dd 0			; ...
 19239 000005A2 00000000                THISCDS		dd 0			; ...
 19240 000005A6 00000000                THISFCB		dd 0			; ...
 19241 000005AA FFFF                    SFN		dw 0FFFFh		; ...
 19242 000005AC 0000                    JFN		dw 0			; ...
 19243 000005AE 00000000                PJFN		dd 0			; ...
 19244 000005B2 0000                    WFP_START	dw 0			; ...
 19245 000005B4 0000                    REN_WFP		dw 0			; ...
 19246 000005B6 0000                    CURR_DIR_END	dw 0			; ...
 19247 000005B8 0000                    NEXTADD		dw 0			; ...
 19248 000005BA 0000                    LASTPOS		dw 0			; ...
 19249 000005BC 0000                    CLUSNUM		dw 0			; ...
 19250 000005BE 00000000                DIRSEC		dd 0			; ...
 19251 000005C2 0000                    DIRSTART	dw 0			; ...
 19252 000005C4 00000000                SECPOS		dd 0			; ...
 19253 000005C8 00000000                VALSEC		dd 0			; ...
 19254 000005CC 0000                    BYTSECPOS	dw 0			; ...
 19255 000005CE 00000000                BYTPOS		dd 0			; ...
 19256 000005D2 0000                    BYTCNT1		dw 0			; ...
 19257 000005D4 0000                    BYTCNT2		dw 0			; ...
 19258 000005D6 0000                    SECCNT		dw 0			; ...
 19259 000005D8 0000                    ENTFREE		dw 0			; ...
 19260 000005DA 0000                    ENTLAST		dw 0			; ...
 19261 000005DC 0000                    NXTCLUSNUM	dw 0			; ...
 19262 000005DE 00000000                GROWCNT		dd 0			; ...
 19263 000005E2 00000000                CURBUF		dd 0			; ...
 19264 000005E6 00000000                CONSFT		dd 0			; ...
 19265 000005EA 0000                    SAVEBX		dw 0			; ...
 19266 000005EC 0000                    SAVEDS		dw 0			; ...
 19267 000005EE 0000                    RESTORE_TMP	dw 0			; ...
 19268 000005F0 0000                    NSS		dw 0			; ...
 19269 000005F2 0000                    NSP		dw 0			; ...
 19270 000005F4 0000                    EXTOPEN_FLAG	dw 0			; ...
 19271 000005F6 00                      EXTOPEN_ON	db 0			; ...
 19272 000005F7 0000                    EXTOPEN_IO_MODE	dw 0			; ...
 19273 000005F9 0000                    SAVE_DI		dw 0			; ...
 19274 000005FB 0000                    SAVE_ES		dw 0			; ...
 19275 000005FD 0000                    SAVE_DX		dw 0			; ...
 19276 000005FF 0000                    SAVE_CX		dw 0			; ...
 19277 00000601 0000                    SAVE_BX		dw 0			; ...
 19278 00000603 0000                    SAVE_SI		dw 0			; ...
 19279 00000605 0000                    SAVE_DS		dw 0			; ...
 19280 00000607 0000                    HIGH_SECTOR	dw 0			; ...
 19281 00000609 0000                    		dw 0
 19282 0000060B 00                      DISK_FULL	db 0			; ...
 19283 0000060C 0000                    TEMP_VAR	dw 0			; ...
 19284 0000060E 0000                    TEMP_VAR2	dw 0			; ...
 19285 00000610 00                      DrvErr		db 0			; ...
 19286 00000611 0000                    DOS34_FLAG	dw 0			; ...
 19287 00000613 0000000000000000        		db 8 dup(0)
 19288 0000061B 0000                    AbsRdWr_SS	dw 0			; ...
 19289 0000061D 0000                    AbsRdWr_SP	dw 0			; ...
 19290 0000061F 00                      		db 0
 19291 00000620 000000000000000000-     RENAMEDMA	db 384 dup(0)		; ...
 19291 00000629 000000000000000000-
 19291 00000632 000000000000000000-
 19291 0000063B 000000000000000000-
 19291 00000644 000000000000000000-
 19291 0000064D 000000000000000000-
 19291 00000656 000000000000000000-
 19291 0000065F 000000000000000000-
 19291 00000668 000000000000000000-
 19291 00000671 000000000000000000-
 19291 0000067A 000000000000000000-
 19291 00000683 000000000000000000-
 19291 0000068C 000000000000000000-
 19291 00000695 000000000000000000-
 19291 0000069E 000000000000000000-
 19291 000006A7 000000000000000000-
 19291 000006B0 000000000000000000-
 19291 000006B9 000000000000000000-
 19291 000006C2 000000000000000000-
 19291 000006CB 000000000000000000-
 19291 000006D4 000000000000000000-
 19291 000006DD 000000000000000000-
 19291 000006E6 000000000000000000-
 19291 000006EF 000000000000000000-
 19291 000006F8 000000000000000000-
 19291 00000701 000000000000000000-
 19291 0000070A 000000000000000000-
 19291 00000713 000000000000000000-
 19291 0000071C 000000000000000000-
 19291 00000725 000000000000000000-
 19291 0000072E 000000000000000000-
 19291 00000737 000000000000000000-
 19291 00000740 000000000000000000-
 19291 00000749 000000000000000000-
 19291 00000752 000000000000000000-
 19291 0000075B 000000000000000000-
 19291 00000764 000000000000000000-
 19291 0000076D 000000000000000000-
 19291 00000776 000000000000000000-
 19291 0000077F 000000000000000000-
 19291 00000788 000000000000000000-
 19291 00000791 000000000000000000-
 19291 0000079A 000000000000       
 19292 000007A0 000000000000000000-     AUXSTACK	db 384 dup(0)		; ...
 19292 000007A9 000000000000000000-
 19292 000007B2 000000000000000000-
 19292 000007BB 000000000000000000-
 19292 000007C4 000000000000000000-
 19292 000007CD 000000000000000000-
 19292 000007D6 000000000000000000-
 19292 000007DF 000000000000000000-
 19292 000007E8 000000000000000000-
 19292 000007F1 000000000000000000-
 19292 000007FA 000000000000000000-
 19292 00000803 000000000000000000-
 19292 0000080C 000000000000000000-
 19292 00000815 000000000000000000-
 19292 0000081E 000000000000000000-
 19292 00000827 000000000000000000-
 19292 00000830 000000000000000000-
 19292 00000839 000000000000000000-
 19292 00000842 000000000000000000-
 19292 0000084B 000000000000000000-
 19292 00000854 000000000000000000-
 19292 0000085D 000000000000000000-
 19292 00000866 000000000000000000-
 19292 0000086F 000000000000000000-
 19292 00000878 000000000000000000-
 19292 00000881 000000000000000000-
 19292 0000088A 000000000000000000-
 19292 00000893 000000000000000000-
 19292 0000089C 000000000000000000-
 19292 000008A5 000000000000000000-
 19292 000008AE 000000000000000000-
 19292 000008B7 000000000000000000-
 19292 000008C0 000000000000000000-
 19292 000008C9 000000000000000000-
 19292 000008D2 000000000000000000-
 19292 000008DB 000000000000000000-
 19292 000008E4 000000000000000000-
 19292 000008ED 000000000000000000-
 19292 000008F6 000000000000000000-
 19292 000008FF 000000000000000000-
 19292 00000908 000000000000000000-
 19292 00000911 000000000000000000-
 19292 0000091A 000000000000       
 19293 00000920 000000000000000000-     DSKSTACK	db 384 dup(0)		; ...
 19293 00000929 000000000000000000-
 19293 00000932 000000000000000000-
 19293 0000093B 000000000000000000-
 19293 00000944 000000000000000000-
 19293 0000094D 000000000000000000-
 19293 00000956 000000000000000000-
 19293 0000095F 000000000000000000-
 19293 00000968 000000000000000000-
 19293 00000971 000000000000000000-
 19293 0000097A 000000000000000000-
 19293 00000983 000000000000000000-
 19293 0000098C 000000000000000000-
 19293 00000995 000000000000000000-
 19293 0000099E 000000000000000000-
 19293 000009A7 000000000000000000-
 19293 000009B0 000000000000000000-
 19293 000009B9 000000000000000000-
 19293 000009C2 000000000000000000-
 19293 000009CB 000000000000000000-
 19293 000009D4 000000000000000000-
 19293 000009DD 000000000000000000-
 19293 000009E6 000000000000000000-
 19293 000009EF 000000000000000000-
 19293 000009F8 000000000000000000-
 19293 00000A01 000000000000000000-
 19293 00000A0A 000000000000000000-
 19293 00000A13 000000000000000000-
 19293 00000A1C 000000000000000000-
 19293 00000A25 000000000000000000-
 19293 00000A2E 000000000000000000-
 19293 00000A37 000000000000000000-
 19293 00000A40 000000000000000000-
 19293 00000A49 000000000000000000-
 19293 00000A52 000000000000000000-
 19293 00000A5B 000000000000000000-
 19293 00000A64 000000000000000000-
 19293 00000A6D 000000000000000000-
 19293 00000A76 000000000000000000-
 19293 00000A7F 000000000000000000-
 19293 00000A88 000000000000000000-
 19293 00000A91 000000000000000000-
 19293 00000A9A 000000000000       
 19294                                  					; IOSTACK
 19295 00000AA0 00                      PRINTER_FLAG	db 0			; ...
 19296 00000AA1 00                      VOLCHNG_FLAG	db 0			; ...
 19297 00000AA2 00                      VIRTUAL_OPEN	db 0			; ...
 19298 00000AA3 00                      FSeek_drive	db 0
 19299 00000AA4 0000                    FSeek_firclus	dw 0
 19300 00000AA6 0000                    FSeek_logclus	dw 0
 19301 00000AA8 0000                    FSeek_logsave	dw 0
 19302 00000AAA FFFF                    TEMP_DOSLOC	dw -1			; ...
 19303 00000AAC 00                      SWAP_END	db 0			; ...
 19304 00000AAD 8000                    UCASE_TAB	dw 128			; ...
 19305 00000AAF 809A45418E418F80        UCASE_TAB_2	db 128,154,069,065,142,065,143,128 ; ...
 19306 00000AB7 4545454949498E8F        		db 069,069,069,073,073,073,142,143
 19307 00000ABF 9092924F994F5555        		db 144,146,146,079,153,079,085,085
 19308 00000AC7 59999A9B9C9D9E9F        		db 089,153,154,155,156,157,158,159
 19309 00000ACF 41494F55A5A5A6A7        		db 065,073,079,085,165,165,166,167
 19310 00000AD7 A8A9AAABACADAEAF        		db 168,169,170,171,172,173,174,175
 19311 00000ADF B0B1B2B3B4B5B6B7        		db 176,177,178,179,180,181,182,183
 19312 00000AE7 B8B9BABBBCBDBEBF        		db 184,185,186,187,188,189,190,191
 19313 00000AEF C0C1C2C3C4C5C6C7        		db 192,193,194,195,196,197,198,199
 19314 00000AF7 C8C9CACBCCCDCECF        		db 200,201,202,203,204,205,206,207
 19315 00000AFF D0D1D2D3D4D5D6D7        		db 208,209,210,211,212,213,214,215
 19316 00000B07 D8D9DADBDCDDDEDF        		db 216,217,218,219,220,221,222,223
 19317 00000B0F E0E1E2E3E4E5E6E7        		db 224,225,226,227,228,229,230,231
 19318 00000B17 E8E9EAEBECEDEEEF        		db 232,233,234,235,236,237,238,239
 19319 00000B1F F0F1F2F3F4F5F6F7        		db 240,241,242,243,244,245,246,247
 19320 00000B27 F8F9FAFBFCFDFEFF        		db 248,249,250,251,252,253,254,255
 19321 00000B2F 8000                    FILE_UCASE_TAB	dw 128			; ...
 19322 00000B31 809A45418E418F80        FILE_UCASE_TAB_2 db 128,154,069,065,142,065,143,128 ; ...
 19323 00000B39 4545454949498E8F        		db 069,069,069,073,073,073,142,143
 19324 00000B41 9092924F994F5555        		db 144,146,146,079,153,079,085,085
 19325 00000B49 59999A9B9C9D9E9F        		db 089,153,154,155,156,157,158,159
 19326 00000B51 41494F55A5A5A6A7        		db 065,073,079,085,165,165,166,167
 19327 00000B59 A8A9AAABACADAEAF        		db 168,169,170,171,172,173,174,175
 19328 00000B61 B0B1B2B3B4B5B6B7        		db 176,177,178,179,180,181,182,183
 19329 00000B69 B8B9BABBBCBDBEBF        		db 184,185,186,187,188,189,190,191
 19330 00000B71 C0C1C2C3C4C5C6C7        		db 192,193,194,195,196,197,198,199
 19331 00000B79 C8C9CACBCCCDCECF        		db 200,201,202,203,204,205,206,207
 19332 00000B81 D0D1D2D3D4D5D6D7        		db 208,209,210,211,212,213,214,215
 19333 00000B89 D8D9DADBDCDDDEDF        		db 216,217,218,219,220,221,222,223
 19334 00000B91 E0E1E2E3E4E5E6E7        		db 224,225,226,227,228,229,230,231
 19335 00000B99 E8E9EAEBECEDEEEF        		db 232,233,234,235,236,237,238,239
 19336 00000BA1 F0F1F2F3F4F5F6F7        		db 240,241,242,243,244,245,246,247
 19337 00000BA9 F8F9FAFBFCFDFEFF        		db 248,249,250,251,252,253,254,255
 19338 00000BB1 1600                    FILE_CHAR_TAB	dw 22			; ...
 19339 00000BB3 0100FF                  		db 1, 0, 255
 19340 00000BB6 000020                  		db 0, 0, 20h
 19341 00000BB9 020E                    		db 2, 14
 19342 00000BBB 2E222F5C5B5D3A7C3C-     		db '."/\[]:|<>+=;,'
 19342 00000BC4 3E2B3D3B2C         
 19343 00000BC9 000000000000000000-     		db 24 dup(0)
 19343 00000BD2 000000000000000000-
 19343 00000BDB 000000000000       
 19344 00000BE1 0001                    COLLATE_TAB	dw 256			; ...
 19345 00000BE3 0001020304050607        		db 0, 1, 2, 3, 4, 5, 6,	7
 19346 00000BEB 08090A0B0C0D0E0F        		db 8, 9, 10, 11, 12, 13, 14, 15
 19347 00000BF3 1011121314151617        		db 16, 17, 18, 19, 20, 21, 22, 23
 19348 00000BFB 18191A1B1C1D1E1F        		db 24, 25, 26, 27, 28, 29, 30, 31
 19349 00000C03 20212223242526          		db ' ', '!', '"', '#', '$', '%', '&'
 19350 00000C0A 27                      		db 27h
 19351 00000C0B 28292A2B2C2D2E2F        		db '(', ')', '*', '+', ',', '-', '.', '/'
 19352 00000C13 3031323334353637        		db '0', '1', '2', '3', '4', '5', '6', '7'
 19353 00000C1B 38393A3B3C3D3E3F        		db '8', '9', ':', ';', '<', '=', '>', '?'
 19354 00000C23 4041424344454647        		db '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G'
 19355 00000C2B 48494A4B4C4D4E4F        		db 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'
 19356 00000C33 5051525354555657        		db 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W'
 19357 00000C3B 58595A5B5C5D5E5F        		db 'X', 'Y', 'Z', '[', '\', ']', '^', '_'
 19358 00000C43 6041424344454647        		db '`', 'A', 'B', 'C', 'D', 'E', 'F', 'G'
 19359 00000C4B 48494A4B4C4D4E4F        		db 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'
 19360 00000C53 5051525354555657        		db 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W'
 19361 00000C5B 58595A7B7C7D7E7F        		db 'X', 'Y', 'Z', '{', '|', '}', '~', ''
 19362 00000C63 4355454141414143        		db 'C', 'U', 'E', 'A', 'A', 'A', 'A', 'C'
 19363 00000C6B 4545454949494141        		db 'E', 'E', 'E', 'I', 'I', 'I', 'A', 'A'
 19364 00000C73 4541414F4F4F5555        		db 'E', 'A', 'A', 'O', 'O', 'O', 'U', 'U'
 19365 00000C7B 594F552424242424        		db 'Y', 'O', 'U', '$', '$', '$', '$', '$'
 19366 00000C83 41494F554E4E            		db 'A', 'I', 'O', 'U', 'N', 'N'
 19367 00000C89 A6A7                    		db 166,	167
 19368 00000C8B 3F                      		db '?'
 19369 00000C8C A9AAABAC                		db 169,	170, 171, 172
 19370 00000C90 212222                  		db '!', '"', '"'
 19371 00000C93 B0B1B2B3B4B5B6B7        		db 176,	177, 178, 179, 180, 181, 182, 183
 19372 00000C9B B8B9BABBBCBDBEBF        		db 184,	185, 186, 187, 188, 189, 190, 191
 19373 00000CA3 C0C1C2C3C4C5C6C7        		db 192,	193, 194, 195, 196, 197, 198, 199
 19374 00000CAB C8C9CACBCCCDCECF        		db 200,	201, 202, 203, 204, 205, 206, 207
 19375 00000CB3 D0D1D2D3D4D5D6D7        		db 208,	209, 210, 211, 212, 213, 214, 215
 19376 00000CBB D8D9DADBDCDDDEDF        		db 216,	217, 218, 219, 220, 221, 222, 223
 19377 00000CC3 E0                      		db 224
 19378 00000CC4 53                      		db 'S'
 19379 00000CC5 E2E3E4E5E6E7E8E9        		db 226,	227, 228, 229, 230, 231, 232, 233
 19380 00000CCD EAEBECEDEEEFF0F1        		db 234,	235, 236, 237, 238, 239, 240, 241
 19381 00000CD5 F2F3F4F5F6F7F8F9        		db 242,	243, 244, 245, 246, 247, 248, 249
 19382 00000CDD FAFBFCFDFEFF            		db 250,	251, 252, 253, 254, 255
 19383 00000CE3 000000000000000000-     DBCS_TAB	dw 9 dup(0)		; ...
 19383 00000CEC 000000000000000000 
 19384                                  ; ---------------------------------------------------------------------------
 19385                                  
 19386                                  MAP_CASE:				; ...
 19387 00000CF5 3C80                    		cmp	al, 80h
 19388 00000CF7 7301                    		jnb	short Map1
 19389 00000CF9 CB                      		retf
 19390                                  ; ---------------------------------------------------------------------------
 19391                                  
 19392                                  Map1:					; ...
 19393 00000CFA 2C80                    		sub	al, 80h
 19394 00000CFC 1E                      		push	ds
 19395 00000CFD 53                      		push	bx
 19396 00000CFE BB[AF0A]                		mov	bx, UCASE_TAB_2 ; UCASE_TAB+2
 19397 00000D01 0E                      		push	cs
 19398 00000D02 1F                      		pop	ds
 19399 00000D03 D7                      		xlat
 19400 00000D04 5B                      		pop	bx
 19401 00000D05 1F                      		pop	ds
 19402 00000D06 CB                      		retf
 19403                                  ; ---------------------------------------------------------------------------
 19404 00000D07 00                      InterChar	db 0
 19405 00000D08 00                      InterCon	db 0
 19406 00000D09 00                      SaveCurFlg	db 0
 19407 00000D0A 0000                    TEMPSEG		dw 0			; ...
 19408 00000D0C 00                      redir_patch	db 0			; ...
 19409 00000D0D 0000000000              		db 5 dup(0)
 19410 00000D12 05                      		db 5
 19411 00000D13 00                      		db 0
 19412 00000D14 C8A6                    YRTAB		db 200,	166		; ...
 19413 00000D16 C8A5                    		db 200,	165
 19414 00000D18 C8A5                    		db 200,	165
 19415 00000D1A C8A5                    		db 200,	165
 19416 00000D1C 1F                      MONTAB		db 31			; ...
 19417 00000D1D 1C                      february	db 28			; ...
 19418 00000D1E 1F                      		db 31
 19419 00000D1F 1E                      		db 30
 19420 00000D20 1F                      		db 31
 19421 00000D21 1E                      		db 30
 19422 00000D22 1F                      		db 31
 19423 00000D23 1F                      		db 31
 19424 00000D24 1E                      		db 30
 19425 00000D25 1F                      		db 31
 19426 00000D26 1E                      		db 30
 19427 00000D27 1F                      		db 31
 19428 00000D28 [2600]                  SysInitTable	dw SYSINITVARS	; ...
 19429 00000D2A 0000                    		dw 0
 19430 00000D2C [2A12]                  		dw COUNTRY_CDPG
 19431 00000D2E 0000                    		dw 0
 19432 00000D30 0200                    FastOpenTable	dw 2			; ...
 19433 00000D32 [EC12]                  FastOpenTable_2	dw FastRet	; ...
 19434 00000D34 0000                    		dw 0
 19435 00000D36 [EC12]                  		dw FastRet
 19436 00000D38 0000                    		dw 0
 19437 00000D3A 00                      FastOpenFlg	db 0			; ...
 19438 00000D3B 000000000000000000-     FastOpen_Ext_Info db 11	dup( 0)		; ...
 19438 00000D44 0000               
 19439 00000D46 000000000000000000-     Dir_Info_Buff	db 32 dup( 0)		; ...
 19439 00000D4F 000000000000000000-
 19439 00000D58 000000000000000000-
 19439 00000D61 0000000000         
 19440 00000D66 0000                    Next_Element_Start dw 0			; ...
 19441 00000D68 0000                    Del_ExtCluster	dw 0
 19442 00000D6A [6C0D]                  USER_SP_2F	dw FAKE_STACK_2F	; ...
 19443 00000D6C 000000000000000000-     FAKE_STACK_2F	dw 14 dup(0)		; ...
 19443 00000D75 000000000000000000-
 19443 00000D7E 000000000000000000-
 19443 00000D87 00                 
 19444                                  					; DOS_TEMP
 19445 00000D88 0000000000000000        Hash_Temp	dw 4 dup(0)
 19446 00000D90 00                      SCAN_FLAG	db 0			; ...
 19447 00000D91 0000                    DATE_FLAG	dw 0			; ...
 19448 00000D93 0000                    FETCHI_TAG	dw 0			; OBSOLETE
 19449 00000D95 00000000                MSG_EXTERROR	dd 0
 19450 00000D99 00000000                		dd 0
 19451 00000D9D 00000000                		dd 0
 19452 00000DA1 00000000                		dd 0
 19453 00000DA5 00000000                		dd 0
 19454 00000DA9 FFFFFFFF                SEQ_SECTOR	dd -1			; ...
 19455 00000DAD 0000                    SC_SECTOR_SIZE	dw 0			; ...
 19456 00000DAF 00                      SC_DRIVE	db 0			; ...
 19457 00000DB0 FF                      CurSC_DRIVE	db -1			; ...
 19458 00000DB1 00000000                CurSC_SECTOR	dd 0			; ...
 19459 00000DB5 0000                    SC_STATUS	dw 0			; ...
 19460 00000DB7 00                      SC_FLAG		db 0			; ...
 19461 00000DB8 0000                    AbsDskErr	dw 0			; ...
 19462 00000DBA 4E4F204E414D452020-     NO_NAME_ID	db 'NO NAME    '        ; ...
 19462 00000DC3 2020               
 19463 00000DC5 00                      LOOKSIZ		db 0
 19464                                  ; ---------------------------------------------------------------------------
 19465                                  
 19466                                  SNULDEV:				; ...
 19467 00000DC6 26814F030001            		or	word [es:bx+3], 100h ; [es:bx+SRHEAD.REQSTAT],
 19468                                  					; STDON
 19469                                  
 19470                                  INULDEV:				; ...
 19471 00000DCC CB                      		retf
 19472                                  ; ---------------------------------------------------------------------------
 19473 00000DCD 0000000000000000        WinoldPatch2	db 8 dup(0)		; ...
 19474 00000DD5 0000000000              UmbSave2	db 5 dup(0)		; ...
 19475 00000DDA 00                      UmbSaveFlag	db 0			; ...
 19476 00000DDB 010704FF                ERR_TABLE_21	db 1, 7, 4, 0FFh	; ...
 19477 00000DDF 02080302                		db 2, 8, 3, 2
 19478 00000DE3 03080302                		db 3, 8, 3, 2
 19479 00000DE7 04010401                		db 4, 1, 4, 1
 19480 00000DEB 050303FF                		db 5, 3, 3, 0FFh
 19481 00000DEF 06070401                		db 6, 7, 4, 1
 19482 00000DF3 07070505                		db 7, 7, 5, 5
 19483 00000DF7 08010405                		db 8, 1, 4, 5
 19484 00000DFB 09070405                		db 9, 7, 4, 5
 19485 00000DFF 0A070405                		db 0Ah,	7, 4, 5
 19486 00000E03 0B090301                		db 0Bh,	9, 3, 1
 19487 00000E07 0C070401                		db 0Ch,	7, 4, 1
 19488 00000E0B 0D090401                		db 0Dh,	9, 4, 1
 19489 00000E0F 0F080302                		db 0Fh,	8, 3, 2
 19490 00000E13 10030302                		db 10h,	3, 3, 2
 19491 00000E17 110D0302                		db 11h,	0Dh, 3,	2
 19492 00000E1B 12080302                		db 12h,	8, 3, 2
 19493 00000E1F 500C0302                		db 50h,	0Ch, 3,	2
 19494 00000E23 200A0202                		db 20h,	0Ah, 2,	2
 19495 00000E27 210A0202                		db 21h,	0Ah, 2,	2
 19496 00000E2B 540104FF                		db 54h,	1, 4, 0FFh
 19497 00000E2F 56030301                		db 56h,	3, 3, 1
 19498 00000E33 52010402                		db 52h,	1, 4, 2
 19499 00000E37 32090303                		db 32h,	9, 3, 3
 19500 00000E3B 550C0303                		db 55h,	0Ch, 3,	3
 19501 00000E3F 57090301                		db 57h,	9, 3, 1
 19502 00000E43 530D0401                		db 53h,	0Dh, 4,	1
 19503 00000E47 24010405                		db 24h,	1, 4, 5
 19504 00000E4B 26010401                		db 26h,	1, 4, 1
 19505 00000E4F 27010401                		db 27h,	1, 4, 1
 19506 00000E53 5A0D0402                		db 5Ah,	0Dh, 4,	2
 19507 00000E57 FFFFFFFF                		db 0FFh, 0FFh, 0FFh, 0FFh
 19508 00000E5B 130B0702                ERR_TABLE_24	db 13h,	0Bh, 7,	2	; ...
 19509 00000E5F 14040501                		db 14h,	4, 5, 1
 19510 00000E63 150507FF                		db 15h,	5, 7, 0FFh
 19511 00000E67 16040501                		db 16h,	4, 5, 1
 19512 00000E6B 170B0402                		db 17h,	0Bh, 4,	2
 19513 00000E6F 18040501                		db 18h,	4, 5, 1
 19514 00000E73 19050102                		db 19h,	5, 1, 2
 19515 00000E77 1A0B0702                		db 1Ah,	0Bh, 7,	2
 19516 00000E7B 1B0B0402                		db 1Bh,	0Bh, 4,	2
 19517 00000E7F 1C020704                		db 1Ch,	2, 7, 4
 19518 00000E83 1D0504FF                		db 1Dh,	5, 4, 0FFh
 19519 00000E87 1E0504FF                		db 1Eh,	5, 4, 0FFh
 19520 00000E8B 1F0D04FF                		db 1Fh,	0Dh, 4,	0FFh
 19521 00000E8F 200A0202                		db 20h,	0Ah, 2,	2
 19522 00000E93 210A0202                		db 21h,	0Ah, 2,	2
 19523 00000E97 220B0702                		db 22h,	0Bh, 7,	2
 19524 00000E9B 32090303                		db 32h,	9, 3, 3
 19525 00000E9F 23070401                		db 23h,	7, 4, 1
 19526 00000EA3 24010405                		db 24h,	1, 4, 5
 19527 00000EA7 FF0D05FF                		db 0FFh, 0Dh, 5, 0FFh
 19528 00000EAB 131415161718191A        ErrMap24	db 13h,	14h, 15h, 16h, 17h, 18h, 19h, 1Ah ; ...
 19529 00000EB3 1B1C1D1E1F1F1F22        		db 1Bh,	1Ch, 1Dh, 1Eh, 1Fh, 1Fh, 1Fh, 22h
 19530 00000EBB 0000                    FIRST_BUFF_ADDR	dw 0			; ...
 19531 00000EBD 0000                    SPECIAL_VERSION	dw 0			; ...
 19532 00000EBF 000000000000000000-     FAKE_COUNT	db 255 dup(0)
 19532 00000EC8 000000000000000000-
 19532 00000ED1 000000000000000000-
 19532 00000EDA 000000000000000000-
 19532 00000EE3 000000000000000000-
 19532 00000EEC 000000000000000000-
 19532 00000EF5 000000000000000000-
 19532 00000EFE 000000000000000000-
 19532 00000F07 000000000000000000-
 19532 00000F10 000000000000000000-
 19532 00000F19 000000000000000000-
 19532 00000F22 000000000000000000-
 19532 00000F2B 000000000000000000-
 19532 00000F34 000000000000000000-
 19532 00000F3D 000000000000000000-
 19532 00000F46 000000000000000000-
 19532 00000F4F 000000000000000000-
 19532 00000F58 000000000000000000-
 19532 00000F61 000000000000000000-
 19532 00000F6A 000000000000000000-
 19532 00000F73 000000000000000000-
 19532 00000F7C 000000000000000000-
 19532 00000F85 000000000000000000-
 19532 00000F8E 000000000000000000-
 19532 00000F97 000000000000000000-
 19532 00000FA0 000000000000000000-
 19532 00000FA9 000000000000000000-
 19532 00000FB2 000000000000000000-
 19532 00000FBB 000000             
 19533 00000FBE 0000                    OLD_FIRSTCLUS	dw 0			; ...
 19534 00000FC0 0000                    exec_init_SP	dw 0			; ...
 19535 00000FC2 0000                    exec_init_SS	dw 0			; ...
 19536 00000FC4 0000                    exec_init_IP	dw 0			; ...
 19537 00000FC6 0000                    exec_init_CS	dw 0			; ...
 19538 00000FC8 0000                    exec_signature	dw 0			; ...
 19539 00000FCA 0000                    exec_len_mod_512 dw 0
 19540 00000FCC 0000                    exec_pages	dw 0			; ...
 19541 00000FCE 0000                    exec_rle_count	dw 0			; ...
 19542 00000FD0 0000                    exec_par_dir	dw 0			; ...
 19543 00000FD2 0000                    exec_min_BSS	dw 0			; ...
 19544 00000FD4 0000                    exec_max_BSS	dw 0			; ...
 19545 00000FD6 0000                    exec_SS		dw 0			; ...
 19546 00000FD8 0000                    exec_SP		dw 0			; ...
 19547 00000FDA 0000                    exec_chksum	dw 0
 19548 00000FDC 0000                    exec_IP		dw 0			; ...
 19549 00000FDE 0000                    exec_CS		dw 0
 19550 00000FE0 0000                    exec_rle_table	dw 0			; ...
 19551 00000FE2 030000000000000000-     Win386_Info	db 3, 13 dup(0)		; ...
 19551 00000FEB 0000000000         
 19552 00000FF0 [F40F]                  		dw Instance_Table
 19553 00000FF2 0000                    Win386_Info_16	dw 0			; ...
 19554 00000FF4 [2200]                  Instance_Table	dw CONTPOS	; ...
 19555 00000FF6 0000                    Instance_Table_2 dw 0			; ...
 19556 00000FF8 0200                    		dw 2
 19557 00000FFA [3200]                  		dw BCON
 19558 00000FFC 0000                    		dw 0
 19559 00000FFE 0400                    		dw 4
 19560 00001000 [F901]                  		dw CARPOS
 19561 00001002 0000                    		dw 0
 19562 00001004 0601                    		dw 106h
 19563 00001006 [0003]                  		dw CHARCO
 19564 00001008 0000                    		dw 0
 19565 0000100A 0100                    		dw 1
 19566 0000100C [C00F]                  		dw exec_init_SP
 19567 0000100E 0000                    		dw 0
 19568 00001010 2200                    		dw 22h
 19569 00001012 [8900]                  		dw UMBFLAG
 19570 00001014 0000                    		dw 0
 19571 00001016 0100                    		dw 1
 19572 00001018 [8C00]                  		dw UMB_HEAD
 19573 0000101A 0000                    		dw 0
 19574 0000101C 0200                    		dw 2
 19575 0000101E 0000                    		dw 0
 19576 00001020 0000                    		dw 0
 19577 00001022 05                      Win386_DOSVars	db 5			; ...
 19578                                  					; Major	version	5
 19579 00001023 00                      		db 0			; Minor	version	0
 19580 00001024 [EC05]                  		dw SAVEDS
 19581 00001026 [EA05]                  		dw SAVEBX
 19582 00001028 [2103]                  		dw INDOS
 19583 0000102A [3E03]                  		dw USER_ID
 19584 0000102C [1503]                  		dw CritPatch
 19585 0000102E [8C00]                  		dw UMB_HEAD
 19586 00001030 00                      IsWin386	db 0			; ...
 19587 00001031 633A5C77696E613230-     VxDpath		db 'c:\wina20.386',0    ; ...
 19587 0000103A 2E33383600         
 19588 0000103F 01                      DriverLoad	db 1			; ...
 19589 00001040 00000000                BiosDataPtr	dd 0			; ...
 19590 00001044 36F6062003FF            		db 36h,	0F6h, 6, 20h, 3, 0FFh ;	Patch for Sidekick
 19591 0000104A 750C                    		db 75h,	0Ch
 19592 0000104C 36FF365803              		db 36h,	0FFh, 36h, 58h,	3
 19593 00001051 CD28                    		db 0CDh, 28h
 19594 00001053 803E200300              		db 80h,	3Eh, 20h, 3, 0	; Patch	for PortOfEntry
 19595 00001058 7537                    		db 75h,	37h
 19596 0000105A BCA00A                  		db 0BCh, 0A0h, 0Ah
 19597 0000105D 00000000                LocalSFT	dd 0			; ...
 19598 00001061 90                      		db 90h			; align	2
 19599 00001062 [2B54]                  DOSINTTABLE	dw DIVOV		; ...
 19600 00001064 0000                    		dw 0
 19601 00001066 [EF02]                  DOSINTTABLE_4	dw QUIT		; ...
 19602 00001068 0000                    		dw 0
 19603 0000106A [1B03]                  DOSINTTABLE_8	dw COMMAND	; ...
 19604 0000106C 0000                    		dw 0
 19605 0000106E [0805]                  DOSINTTABLE_12	dw ABSDRD	; ...
 19606 00001070 0000                    		dw 0
 19607 00001072 [8F05]                  DOSINTTABLE_16	dw ABSDWRT	; ...
 19608 00001074 0000                    		dw 0
 19609 00001076 [9463]                  DOSINTTABLE_20	dw STAY_RESIDENT	; ...
 19610 00001078 0000                    		dw 0
 19611 0000107A [E006]                  DOSINTTABLE_24	dw INT2F		; ...
 19612 0000107C 0000                    		dw 0
 19613 0000107E [F602]                  DOSINTTABLE_28	dw CALL_ENTRY	; ...
 19614 00001080 0000                    		dw 0
 19615 00001082 [F502]                  		dw IRETT
 19616 00001084 0000                    		dw 0
 19617 00001086 0000                    SS_Save		dw 0			; ...
 19618 00001088 0000                    SP_Save		dw 0			; ...
 19619                                  ; ---------------------------------------------------------------------------
 19620                                  
 19621                                  ldivov:					; ...
 19622 0000108A EB03                    		jmp	short divov_cont ; i0patch
 19623                                  ; ---------------------------------------------------------------------------
 19624 0000108C E8E000                  		call	EnsureA20ON
 19625                                  
 19626                                  divov_cont:				; ...
 19627                                  		;jmp	dword [cs:DOSINTTABLE]
 19628 0000108F 2EFF2E[6210]            		jmp	far [cs:DOSINTTABLE]
 19629                                  ; ---------------------------------------------------------------------------
 19630                                  
 19631                                  lquit:					; ...
 19632 00001094 EB03                    		jmp	short quit_cont	; i20patch
 19633                                  ; ---------------------------------------------------------------------------
 19634 00001096 E8D600                  		call	EnsureA20ON
 19635                                  
 19636                                  quit_cont:				; ...
 19637                                  		;jmp	dword [cs:DOSINTTABLE_4]
 19638 00001099 2EFF2E[6610]            		jmp	far [cs:DOSINTTABLE+4]
 19639                                  ; ---------------------------------------------------------------------------
 19640                                  
 19641                                  lcommand:				; ...
 19642 0000109E EB03                    		jmp	short command_cont ; i21patch
 19643                                  ; ---------------------------------------------------------------------------
 19644 000010A0 E8CC00                  		call	EnsureA20ON
 19645                                  
 19646                                  command_cont:				; ...
 19647                                  		;jmp	dword [cs:DOSINTTABLE_8]
 19648 000010A3 2EFF2E[6A10]            		jmp	far [cs:DOSINTTABLE+8]
 19649                                  ; ---------------------------------------------------------------------------
 19650                                  
 19651                                  labsdrd:				; ...
 19652 000010A8 EB03                    		jmp	short absdrd_cont ; i25patch
 19653                                  ; ---------------------------------------------------------------------------
 19654 000010AA E8C200                  		call	EnsureA20ON
 19655                                  
 19656                                  absdrd_cont:				; ...
 19657                                  		;jmp	dword [cs:DOSINTTABLE_12]
 19658 000010AD 2EFF2E[6E10]            		jmp	far [cs:DOSINTTABLE+12]
 19659                                  ; ---------------------------------------------------------------------------
 19660                                  
 19661                                  labsdwrt:				; ...
 19662 000010B2 EB03                    		jmp	short absdwrt_cont ; i26patch
 19663                                  ; ---------------------------------------------------------------------------
 19664 000010B4 E8B800                  		call	EnsureA20ON
 19665                                  
 19666                                  absdwrt_cont:				; ...
 19667                                  		;jmp	dword [cs:DOSINTTABLE_16]
 19668 000010B7 2EFF2E[7210]            		jmp	far [cs:DOSINTTABLE+16]
 19669                                  ; ---------------------------------------------------------------------------
 19670                                  
 19671                                  lstay_resident:				; ...
 19672 000010BC EB03                    		jmp	short sr_cont	; i27patch
 19673                                  ; ---------------------------------------------------------------------------
 19674 000010BE E8AE00                  		call	EnsureA20ON
 19675                                  
 19676                                  sr_cont:				; ...
 19677                                  		;jmp	dword [cs:DOSINTTABLE_20]
 19678 000010C1 2EFF2E[7610]            		jmp	far [cs:DOSINTTABLE+20]
 19679                                  ; ---------------------------------------------------------------------------
 19680                                  
 19681                                  lint2f:					; ...
 19682 000010C6 EB03                    		jmp	short int2f_cont ; i2fpatch
 19683                                  ; ---------------------------------------------------------------------------
 19684 000010C8 E8A400                  		call	EnsureA20ON
 19685                                  
 19686                                  int2f_cont:				; ...
 19687                                  		;jmp	dword [cs:DOSINTTABLE_24]
 19688 000010CB 2EFF2E[7A10]            		jmp	far [cs:DOSINTTABLE+24]
 19689                                  ; ---------------------------------------------------------------------------
 19690                                  
 19691                                  lcall_entry:				; ...
 19692 000010D0 EB03                    		jmp	short callentry_cont ; cpmpatch
 19693                                  ; ---------------------------------------------------------------------------
 19694 000010D2 E89A00                  		call	EnsureA20ON
 19695                                  
 19696                                  callentry_cont:				; ...
 19697                                  		;jmp	dword [cs:DOSINTTABLE_28]
 19698 000010D5 2EFF2E[7E10]            		jmp	far [cs:DOSINTTABLE+28]
 19699                                  ; ---------------------------------------------------------------------------
 19700                                  
 19701                                  lirett:					; ...
 19702 000010DA CF                      		iret
 19703                                  ; ---------------------------------------------------------------------------
 19704 000010DB 00000000                DosRetAddr23	dd 0			; ...
 19705 000010DF 00000000                DosRetAddr24	dd 0			; ...
 19706 000010E3 00000000                DosRetAddr28	dd 0
 19707                                  ; ---------------------------------------------------------------------------
 19708                                  
 19709                                  LowInt23:				; ...
 19710 000010E7 2E8F06[DB10]            		pop	word [cs:DosRetAddr23]
 19711 000010EC 2E8F06[DD10]            		pop	word [cs:DosRetAddr23+2]
 19712 000010F1 CD23                    		int	23h		; DOS -	CONTROL	"C" EXIT ADDRESS
 19713                                  					; Return: return via RETF 2 with CF set
 19714                                  					; DOS will abort program with errorlevel 0
 19715                                  					; else
 19716                                  					; interrupted DOS call continues
 19717 000010F3 E87900                  		call	EnsureA20ON
 19718                                  		;jmp	[cs:DosRetAddr23]
 19719 000010F6 2EFF2E[DB10]            		jmp	far [cs:DosRetAddr23]
 19720                                  ; ---------------------------------------------------------------------------
 19721                                  
 19722                                  LowInt24:				; ...
 19723 000010FB 2E8F06[DF10]            		pop	word [cs:DosRetAddr24]
 19724 00001100 2E8F06[E110]            		pop	word [cs:DosRetAddr24+2]
 19725 00001105 CD24                    		int	24h		; DOS -	FATAL ERROR HANDLER ADDRESS
 19726                                  					; Automatically	called upon detection of unrecoverable I/O error.
 19727 00001107 E86500                  		call	EnsureA20ON
 19728                                  		;jmp	[cs:DosRetAddr24]
 19729 0000110A 2EFF2E[DF10]            		jmp	far [cs:DosRetAddr24]
 19730                                  ; ---------------------------------------------------------------------------
 19731                                  
 19732                                  LowInt28:				; ...
 19733 0000110F CD28                    		int	28h		; DOS 2+ internal - KEYBOARD BUSY LOOP
 19734 00001111 E85B00                  		call	EnsureA20ON
 19735 00001114 CB                      		retf
 19736                                  ; ---------------------------------------------------------------------------
 19737                                  
 19738                                  disa20_xfer:				; ...
 19739 00001115 E83F00                  		call	XMMDisableA20
 19740 00001118 FA                      		cli
 19741 00001119 2EC606[2103]00          		mov	byte [cs:INDOS], 0
 19742 0000111F 8ED0                    		mov	ss, ax
 19743 00001121 89FC                    		mov	sp, di
 19744 00001123 FB                      		sti
 19745 00001124 1E                      		push	ds
 19746 00001125 56                      		push	si
 19747 00001126 8EC2                    		mov	es, dx
 19748 00001128 8EDA                    		mov	ds, dx
 19749 0000112A 89D8                    		mov	ax, bx
 19750 0000112C CB                      		retf
 19751                                  ; ---------------------------------------------------------------------------
 19752                                  
 19753                                  disa20_iret:				; ...
 19754 0000112D E82700                  		call	XMMDisableA20
 19755 00001130 FE0E[2103]              		dec	byte [INDOS]
 19756 00001134 8E16[8605]              		mov	ss, word [USER_SS]
 19757 00001138 8B26[8405]              		mov	sp, [USER_SP]
 19758 0000113C 89E5                    		mov	bp, sp
 19759 0000113E 884600                  		mov	[bp+0],	al
 19760 00001141 A1[F205]                		mov	ax, [NSP]
 19761 00001144 A3[8405]                		mov	[USER_SP], ax
 19762 00001147 A1[F005]                		mov	ax, [NSS]
 19763 0000114A A3[8605]                		mov	[USER_SS], ax
 19764 0000114D 58                      		pop	ax
 19765 0000114E 5B                      		pop	bx
 19766 0000114F 59                      		pop	cx
 19767 00001150 5A                      		pop	dx
 19768 00001151 5E                      		pop	si
 19769 00001152 5F                      		pop	di
 19770 00001153 5D                      		pop	bp
 19771 00001154 1F                      		pop	ds
 19772 00001155 07                      		pop	es
 19773 00001156 CF                      		iret
 19774                                  
 19775                                  ; =============== S U B	R O U T	I N E =======================================
 19776                                  
 19777                                  XMMDisableA20:	; ...
 19778 00001157 53                      		push	bx
 19779 00001158 50                      		push	ax
 19780 00001159 B406                    		mov	ah, 6
 19781                                  		;call	[cs:XMMcontrol]
 19782 0000115B 2EFF1E[6311]            		call	far [cs:XMMcontrol]
 19783 00001160 58                      		pop	ax
 19784 00001161 5B                      		pop	bx
 19785 00001162 C3                      		retn
 19786                                  
 19787                                  ; ---------------------------------------------------------------------------
 19788 00001163 00000000                XMMcontrol	dd 0			; ...
 19789 00001167 80000000                LowMemory	dd 80h			; ...
 19790 0000116B 9000FFFF                HighMemory	dd 0FFFF0090h		; ...
 19791                                  
 19792                                  ; =============== S U B	R O U T	I N E =======================================
 19793                                  
 19794                                  
 19795                                   EnsureA20ON:	; ...
 19796 0000116F 9C                      		pushf
 19797 00001170 1E                      		push	ds
 19798 00001171 06                      		push	es
 19799 00001172 51                      		push	cx
 19800 00001173 56                      		push	si
 19801 00001174 57                      		push	di
 19802 00001175 2EC536[6711]            		lds	si, [cs:LowMemory]
 19803 0000117A 2EC43E[6B11]            		les	di, [cs:HighMemory]
 19804 0000117F B90400                  		mov	cx, 4
 19805 00001182 FC                      		cld
 19806 00001183 F3A7                    		repe cmpsw
 19807 00001185 7407                    		jz	short EA20_OFF
 19808                                  
 19809                                  EA20_RET:				; ...
 19810 00001187 5F                      		pop	di
 19811 00001188 5E                      		pop	si
 19812 00001189 59                      		pop	cx
 19813 0000118A 07                      		pop	es
 19814 0000118B 1F                      		pop	ds
 19815 0000118C 9D                      		popf
 19816 0000118D C3                      		retn
 19817                                  ; ---------------------------------------------------------------------------
 19818                                  
 19819                                  EA20_OFF:				; ...
 19820 0000118E 53                      		push	bx
 19821 0000118F 50                      		push	ax
 19822 00001190 8CD0                    		mov	ax, ss
 19823 00001192 2EA3[8610]              		mov	[cs:SS_Save], ax
 19824 00001196 2E8926[8810]            		mov	[cs:SP_Save], sp
 19825 0000119B 8CC8                    		mov	ax, cs
 19826 0000119D 8ED0                    		mov	ss, ax
 19827 0000119F BC[A007]                		mov	sp, AUXSTACK
 19828 000011A2 B405                    		mov	ah, 5		; XMM_LOCAL_ENABLE_A20
 19829                                  		;call	[cs:XMMcontrol]
 19830 000011A4 2EFF1E[6311]            		call	far [cs:XMMcontrol]
 19831 000011A9 09C0                    		or	ax, ax
 19832 000011AB 740F                    		jz	short XMMerror
 19833 000011AD 2EA1[8610]              		mov	ax, [cs:SS_Save]
 19834 000011B1 8ED0                    		mov	ss, ax
 19835 000011B3 2E8B26[8810]            		mov	sp, [cs:SP_Save]
 19836 000011B8 58                      		pop	ax
 19837 000011B9 5B                      		pop	bx
 19838 000011BA EBCB                    		jmp	short EA20_RET
 19839                                  ; ---------------------------------------------------------------------------
 19840                                  
 19841                                  XMMerror:				; ...
 19842 000011BC B40F                    		mov	ah, 0Fh
 19843 000011BE CD10                    		int	10h		; - VIDEO - SELECT DISPLAY PAGE
 19844                                  					; AL = display page, 0-7  for modes 0 &	1, 0-3	for modes 2 & 3
 19845 000011C0 3C07                    		cmp	al, 7
 19846 000011C2 7406                    		jz	short XMMcont
 19847 000011C4 30E4                    		xor	ah, ah
 19848 000011C6 B002                    		mov	al, 2
 19849 000011C8 CD10                    		int	10h		; - VIDEO -
 19850                                  
 19851                                  XMMcont:				; ...
 19852 000011CA B405                    		mov	ah, 5
 19853 000011CC 30C0                    		xor	al, al
 19854 000011CE CD10                    		int	10h		; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
 19855                                  					; AL = character, BH = display page (alpha modes)
 19856                                  					; BL = foreground color	(graphics modes)
 19857 000011D0 BE[B812]                		mov	si, XMMERRMSG ; "\r\nA20 Hardware Error\r\n$"
 19858 000011D3 0E                      		push	cs
 19859 000011D4 1F                      		pop	ds
 19860 000011D5 FC                      		cld
 19861                                  
 19862                                  XMMprnt:				; ...
 19863 000011D6 AC                      		lodsb
 19864 000011D7 3C24                    		cmp	al, '$'
 19865 000011D9 7409                    		jz	short XMMStall
 19866 000011DB B40E                    		mov	ah, 0Eh
 19867 000011DD BB0700                  		mov	bx, 7
 19868 000011E0 CD10                    		int	10h		; - VIDEO -
 19869 000011E2 EBF2                    		jmp	short XMMprnt
 19870                                  ; ---------------------------------------------------------------------------
 19871                                  
 19872                                  XMMStall:				; ...
 19873 000011E4 FB                      		sti
 19874 000011E5 EBFD                    		jmp	short XMMStall
 19875                                  
 19876                                  ; ---------------------------------------------------------------------------
 19877 000011E7 7000                    OldInstanceJunk	dw 70h			; ...
 19878 000011E9 0000                    		dw 0
 19879 000011EB 0600                    		dw 6
 19880 000011ED 0000                    OldInstanceJunk_6 dw 0			; ...
 19881 000011EF [2200]                  		dw CONTPOS
 19882 000011F1 0200                    		dw 2
 19883 000011F3 0000                    		dw 0
 19884 000011F5 [3200]                  		dw BCON
 19885 000011F7 0400                    		dw 4
 19886 000011F9 0000                    		dw 0
 19887 000011FB [F901]                  		dw CARPOS
 19888 000011FD 0601                    		dw 106h
 19889 000011FF 0000                    		dw 0
 19890 00001201 [0003]                  		dw CHARCO
 19891 00001203 0100                    		dw 1
 19892 00001205 0000                    		dw 0
 19893 00001207 [C00F]                  		dw exec_init_SP
 19894 00001209 2200                    		dw 34
 19895 0000120B 7000                    		dw 70h
 19896 0000120D 0C00                    		dw 0Ch			; DOSBIODATASEG:ALTAH
 19897 0000120F 0100                    		dw 1
 19898 00001211 00                      DosHasHMA	db 0			; ...
 19899 00001212 0000                    FixExePatch	dw 0			; ...
 19900 00001214 0000                    RationalPatchPtr dw 0			; ...
 19901                                  ; ---------------------------------------------------------------------------
 19902                                  
 19903                                  RatBugCode:				; ...
 19904 00001216 51                      		push	cx
 19905 00001217 8B0E[1000]              		mov	cx, [FCBLRU]	; [10h]
 19906                                  
 19907                                  rbc_loop:				; ...
 19908 0000121B E2FE                    		loop	rbc_loop
 19909 0000121D 59                      		pop	cx
 19910 0000121E CB                      		retf
 19911                                  ; ---------------------------------------------------------------------------
 19912 0000121F 000000000000000000-     UmbSave1	db 11 dup(0)		; ...
 19912 00001228 0000               
 19913 0000122A 0000000000000000        COUNTRY_CDPG	db 0, 0, 0, 0, 0, 0, 0,	0 ; ...
 19914 00001232 5C434F554E5452592E-     		db '\COUNTRY.SYS',0
 19914 0000123B 53595300           
 19915 0000123F 000000000000000000-     		db 51 dup(0)
 19915 00001248 000000000000000000-
 19915 00001251 000000000000000000-
 19915 0000125A 000000000000000000-
 19915 00001263 000000000000000000-
 19915 0000126C 000000000000       
 19916 00001272 B501                    		dw 437
 19917 00001274 0600                    		dw 6
 19918 00001276 02                      COUNTRY_CDPG_76	db 2			; ...
 19919 00001277 [AD0A]                  		dw UCASE_TAB
 19920 00001279 0000                    		dw 0
 19921 0000127B 04                      		db 4
 19922 0000127C [2F0B]                  		dw FILE_UCASE_TAB
 19923 0000127E 0000                    		dw 0
 19924 00001280 05                      		db 5
 19925 00001281 [B10B]                  		dw FILE_CHAR_TAB
 19926 00001283 0000                    		dw 0
 19927 00001285 06                      		db 6
 19928 00001286 [E10B]                  		dw COLLATE_TAB
 19929 00001288 0000                    		dw 0
 19930 0000128A 07                      		db 7
 19931 0000128B [E30C]                  		dw DBCS_TAB
 19932 0000128D 0000                    		dw 0
 19933 0000128F 01                      		db 1
 19934 00001290 2600                    		dw 38			; NEW_COUNTRY_SIZE
 19935 00001292 0100                    		dw 1
 19936 00001294 B501                    		dw 437
 19937 00001296 0000                    COUNTRY_CDPG_108 dw 0			; ...
 19938 00001298 2400000000              		db '$',0,0,0,0
 19939 0000129D 2C002E002D003A00        		db ',',0,'.',0,'-',0,':',0
 19940 000012A5 00                      		db 0
 19941 000012A6 02                      		db 2
 19942 000012A7 00                      		db 0
 19943 000012A8 [F50C]                  		dw MAP_CASE
 19944 000012AA 0000                    		dw 0
 19945 000012AC 2C00                    		db ',',0
 19946 000012AE 000000000000000000-     		dw 0, 0, 0, 0, 0
 19946 000012B7 00                 
 19947 000012B8 0D0A                    XMMERRMSG	db 0Dh,0Ah		; ...
 19948 000012BA 413230204861726477-     		db 'A20 Hardware Error',0Dh,0Ah,'$'
 19948 000012C3 617265204572726F72-
 19948 000012CC 0D0A24             
 19949 000012CF 36C536                  DOSP1_ID	db 36h,	0C5h, 36h
 19950 000012D2 3605C57407E8            DOSP1_THISSFT	db 36h,	5, 0C5h, 74h, 7, 0E8h
 19951 000012D8 90                      		db 90h
 19952 000012D9 90                      		db 90h
 19953 000012DA 36C536                  DOSP12_ID	db 36h,	0C5h, 36h
 19954 000012DD 3605C57407E8            DOSP12_THISSFT	db 36h,	5, 0C5h, 74h, 7, 0E8h
 19955 000012E3 510657BA                DOSP3_ID	db 51h,	6, 57h,	0BAh
 19956 000012E7 2902E8                  DOSP3_CONBUF	db 29h,	2, 0E8h
 19957 000012EA 9AE35F07                		db 9Ah,	0E3h, 5Fh, 7
 19958 000012EE 59                      		db 59h
 19959 000012EF 51                      DOSP5_ID	db 51h
 19960 000012F0 AC3C1A7405              		db 0ACh, 3Ch, 1Ah, 74h,	5
 19961 000012F5 E8                      		db 0E8h
 19962 000012F6 2E8C1E                  DOSP7_ID	db 2Eh,	8Ch, 1Eh
 19963 000012F9 7E05                    DOSP7_SAVEDS	db 7Eh,	5
 19964 000012FB 2E891E                  		db 2Eh,	89h, 1Eh
 19965 000012FE 7C05                    DOSP7_SAVEBX	db 7Ch,	5
 19966 00001300 8CCB                    		db 8Ch,	0CBh
 19967 00001302 8EDB                    		db 8Eh,	0DBh
 19968 00001304 FE06                    		db 0FEh, 6
 19969 00001306 CF02                    DOSP7_INDOS	db 0CFh, 2
 19970 00001308 33C0                    		db 33h,	0C0h
 19971 0000130A 50                      DOSP8_ID	db 50h
 19972 0000130B 36A1                    		db 36h,	0A1h
 19973 0000130D EA02                    DOSP8_USER_ID	db 0EAh, 2
 19974 0000130F 263B45                  		db 26h,	3Bh, 45h
 19975 00001312 2F58                    		db 2Fh,	58h
 19976 00001314 061F                    DOSP10_ID	db 6, 1Fh
 19977 00001316 8BDF                    DOSP10_LOC	db 8Bh,	0DFh
 19978 00001318 33C08BD0E8              		db 33h,	0C0h, 8Bh, 0D0h, 0E8h
 19979 0000131D DF0E                    		db 0DFh, 0Eh
 19980 0000131F 1E36C5363605E8AF0E      		db 1Eh,	36h, 0C5h, 36h,	36h, 5,	0E8h, 0AFh, 0Eh
 19981 00001328 8BD7B486368B3E          		db 8Bh,	0D7h, 0B4h, 86h, 36h, 8Bh, 3Eh
 19982 0000132F 0903                    		db 9, 3
 19983 00001331 F7C700807419E84717      		db 0F7h, 0C7h, 0, 80h, 74h, 19h, 0E8h, 47h, 17h
 19984 0000133A 8BFA0AC074103C0374-     		db 8Bh,	0FAh, 0Ah, 0C0h, 74h, 10h, 3Ch,	3, 74h,	3
 19984 00001343 03                 
 19985 00001344 1FEBCF                  		db 1Fh,	0EBh, 0CFh
 19986 00001347 5F                      		db 5Fh
 19987 00001348 36C43E3605E9A104        		db 36h,	0C4h, 3Eh, 36h,	5, 0E9h, 0A1h, 4
 19988 00001350 5F8BFA                  		db 5Fh,	8Bh, 0FAh
 19989 00001353 AC                      DOSP13_ID	db 0ACh
 19990 00001354 3C24                    		db 3Ch,	24h
 19991 00001356 7408                    		db 74h,	8
 19992 00001358 B307                    		db 0B3h, 7
 19993 0000135A B40E                    		db 0B4h, 0Eh
 19994 0000135C CD10                    		db 0CDh, 10h
 19995 0000135E EBF3                    		db 0EBh, 0F3h
 19996 00001360 EBFE                    		db 0EBh, 0FEh
 19997                                  
 19998                                  ; 05/12/2022 - Retro DOS v4.0 (Modified MSDOS 5.0 MSDOS.SYS)
 19999                                  DOSDATAEND equ $
 20000                                  DOSDATASIZE equ DOSDATAEND - DOSDATASTART ; = 4962 for MSDOS 5.0 MSDOS.SYS
 20001                                  MSDAT001E equ DOSDATAEND - DOSDATASTART
 20002                                  
 20003                                  ;DOSDATALAST ENDS
 20004                                  
 20005                                  ; Retro DOS v4.0 by Erdogan Tan (Redevelopment of MSDOS 5.0 KERNEL via NASM)
 20006                                  ; DECEMBER 2022, ISTANBUL - TURKIYE.
 20007                                  ;============================================================================
 20008                                  ;	END
 20009                                  ;============================================================================
 20010                                  ; Retro DOS v4.0 by Erdogan Tan (Redevelopment of MSDOS 6.21 KERNEL via NASM)
 20011                                  ; -----------------------------
 20012                                  ; MAY 2019, ISTANBUL - TURKIYE.
