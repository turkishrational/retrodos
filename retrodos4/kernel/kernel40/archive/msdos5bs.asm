

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2013 Hex-Rays, <support@hex-rays.com>	    |
; |			 Licensed to: Freeware version			    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	152B15A39E1CD6DC1E39F8C37D400152
; Input	CRC32 :	954ECAAF

; ---------------------------------------------------------------------------
; File Name   :	C:\Users\Erdoðan\Desktop\msdos5bs.bin
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 0200h Loaded length: 0200h

		.386
		.model flat

; ===========================================================================

; Segment type:	Pure code
seg000		segment	byte public 'CODE' use16
		assume cs:seg000
		;org 7C00h
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
		jmp	short MAIN
; ---------------------------------------------------------------------------
		nop
; ---------------------------------------------------------------------------
OS		db 'MSDOS'
OsVersion	db '5.0'
BytesPerSector	dw 512			; ...
SecsPerClust	db 1			; ...
ReservedSecs	dw 1			; ...
NumFats		db 2			; ...
NumDirEntries	dw 224			; ...
TotalSectors	dw 2880			; ...
MediaByte	db 0F0h			; ...
NumFatSecs	dw 9			; ...
SecPerTrack	dw 18			; ...
NumHeads	dw 2			; ...
HiddenSecs	dd 0			; ...
BigTotalSecs	dd 0			; ...
BootDrv		db 0			; ...
CurrentHead	db 0			; ...
ExtBootSig	db 29h
SerialNum	dd 350518E3h
VolumeLabel	db 'BOOT500    '
FatId		db 'FAT12   '
; ---------------------------------------------------------------------------

MAIN:					; ...
		cli
		xor	ax, ax
		mov	ss, ax
		mov	sp, 7C00h
		push	ss
		pop	es

BiosLow_1:				; ...
		mov	bx, 78h		; DSK_PARMS

CurTrk_2:				; ...
		lds	si, ss:[bx]
		push	ds

CurSec:					; ...
		push	si

DirLow:					; ...
		push	ss
		push	bx

DirHigh:				; ...
		mov	di, 7C3Eh	; Sec9
		mov	cx, 11
		cld
		rep movsb
		push	es
		pop	ds
		mov	byte ptr [di-2], 0Fh ; Head settle time
		mov	cx, ds:SecPerTrack
		mov	[di-7],	cl	; End of Track
		mov	[bx+2],	ax
		mov	word ptr [bx], 7C3Eh ; Sec9
		sti
		int	13h		; DISK - RESET DISK SYSTEM
					; DL = drive (if bit 7 is set both hard	disks and floppy disks reset)
		jb	short CkErr
		xor	ax, ax
		cmp	ds:TotalSectors, ax
		jz	short Dir_Cont
		mov	cx, ds:TotalSectors
		mov	word ptr ds:BigTotalSecs, cx

Dir_Cont:				; ...
		mov	al, ds:NumFats
		mul	ds:NumFatSecs
		add	ax, word ptr ds:HiddenSecs
		adc	dx, word ptr ds:HiddenSecs+2
		add	ax, ds:ReservedSecs
		adc	dx, 0
		mov	word ptr ds:DirLow, ax
		mov	word ptr ds:DirHigh, dx
		mov	word ptr ds:BiosLow_1+1, ax
		mov	word ptr ds:CurTrk_2, dx
		mov	ax, 32
		mul	ds:NumDirEntries
		mov	bx, ds:BytesPerSector
		add	ax, bx
		dec	ax
		div	bx
		add	word ptr ds:BiosLow_1+1, ax
		adc	word ptr ds:CurTrk_2, 0	; [BiosHigh]
		mov	bx, 500h	; DIR_OFF
		mov	dx, word ptr ds:DirHigh
		mov	ax, word ptr ds:DirLow
		call	DODIV
		jb	short CkErr
		mov	al, 1
		call	DOCALL
		jb	short CkErr
		mov	di, bx
		mov	cx, 11
		mov	si, offset Bio	; "IO	   SYS"
		repe cmpsb
		jnz	short CkErr
		lea	di, [bx+20h]
		mov	cx, 11
		repe cmpsb
		jz	short DoLoad

CkErr:					; ...
		mov	si, offset SysMsg ; "\r\nNon-System disk or disk error\r\nRe"...
		call	WRITE
		xor	ax, ax
		int	16h		; KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY
					; Return: AH = scan code, AL = character
		pop	si
		pop	ds
		pop	word ptr [si]
		pop	word ptr [si+2]
		int	19h		; DISK BOOT
					; causes reboot	of disk	system

Load_Failure:				; ...
		pop	ax
		pop	ax
		pop	ax
		jmp	short CkErr
; ---------------------------------------------------------------------------

DoLoad:					; ...
		mov	ax, [bx+1Ah]
		dec	ax
		dec	ax
		mov	bl, ds:SecsPerClust
		xor	bh, bh
		mul	bx
		add	ax, word ptr ds:BiosLow_1+1
		adc	dx, word ptr ds:CurTrk_2
		mov	bx, 700h
		mov	cx, 3

Do_While:				; ...
		push	ax
		push	dx
		push	cx
		call	DODIV
		jb	short Load_Failure
		mov	al, 1
		call	DOCALL
		pop	cx
		pop	dx
		pop	ax
		jb	short CkErr
		add	ax, 1
		adc	dx, 0
		add	bx, ds:BytesPerSector
		loop	Do_While
		mov	ch, ds:MediaByte
		mov	dl, ds:BootDrv
		mov	bx, word ptr ds:BiosLow_1+1 ; [BiosLow]
		mov	ax, word ptr ds:CurTrk_2 ; [BiosHigh]
		jmp	far ptr	70h:0

; =============== S U B	R O U T	I N E =======================================


WRITE		proc near		; ...
		lodsb
		or	al, al
		jz	short EndWR
		mov	ah, 0Eh
		mov	bx, 7
		int	10h		; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
					; AL = character, BH = display page (alpha modes)
					; BL = foreground color	(graphics modes)
		jmp	short WRITE
WRITE		endp


; =============== S U B	R O U T	I N E =======================================


DODIV		proc near		; ...
		cmp	dx, ds:SecPerTrack
		jnb	short DivOverFlow
		div	ds:SecPerTrack
		inc	dl
		mov	byte ptr ds:CurSec, dl
		xor	dx, dx
		div	ds:NumHeads
		mov	ds:CurrentHead,	dl
		mov	word ptr ds:CurTrk_2+2,	ax
		clc
		retn
; ---------------------------------------------------------------------------

DivOverFlow:				; ...
		stc

EndWR:					; ...
		retn
DODIV		endp


; =============== S U B	R O U T	I N E =======================================


DOCALL		proc near		; ...
		mov	ah, 2
		mov	dx, word ptr ds:CurTrk_2+2
		mov	cl, 6
		shl	dh, cl
		or	dh, byte ptr ds:CurSec
		mov	cx, dx
		xchg	ch, cl
		mov	dl, ds:BootDrv
		mov	dh, ds:CurrentHead
		int	13h		; DISK - READ SECTORS INTO MEMORY
					; AL = number of sectors to read, CH = track, CL = sector
					; DH = head, DL	= drive, ES:BX -> buffer to fill
					; Return: CF set on error, AH =	status,	AL = number of sectors read
		retn
DOCALL		endp

; ---------------------------------------------------------------------------
SysMsg		db 0Dh,0Ah		; ...
		db 'Non-System disk or disk error',0Dh,0Ah
		db 'Replace and press any key when ready',0Dh,0Ah,0
Bio		db 'IO      SYS'        ; ...
Dos		db 'MSDOS   SYS'
		db 0
		db 0
		dw 0AA55h
seg000		ends


		end
