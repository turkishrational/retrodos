     1                                  ; ****************************************************************************
     2                                  ; HDFORMAT.ASM (HDFORMAT.COM) - Retro DOS v4 Hard Disk Formatting Utility
     3                                  ; (RDHDFORM.S - RDHDFORM.COM)
     4                                  ; ----------------------------------------------------------------------------
     5                                  ; Primary DOS Partition (FAT File System) Format Utility for Retro DOS v4 OS.
     6                                  ; ----------------------------------------------------------------------------
     7                                  ; Last Update: 28/10/2023
     8                                  ; ----------------------------------------------------------------------------
     9                                  ; Beginning: 28/10/2023
    10                                  ; ----------------------------------------------------------------------------
    11                                  ; Assembler: NASM version 2.15 (rdhdform.s)
    12                                  ; ----------------------------------------------------------------------------
    13                                  ; Modified from 'hdformat.s'(HDFORMAT.COM) source code by Erdogan Tan
    14                                  ; (25/09/2020) - TRDOS 386 hard/fixed disk formatting utility -
    15                                  ; ****************************************************************************
    16                                  ; Copyright (C) 2020-2023  Erdogan TAN 
    17                                  ; ****************************************************************************
    18                                  ; assembling: nasm hdformat.s -l hdformat.lst -o HDFORMAT.COM -Z error.txt
    19                                  
    20                                  ; Note: Logical DOS drives in extended DOS partitions are excluded.
    21                                  
    22                                  ; ----------------------------------------------------------------------------
    23                                  ; equations
    24                                  ; ----------------------------------------------------------------------------
    25                                  
    26                                  ; boot sector parameters
    27                                  
    28                                  bsOemName	equ 3
    29                                  bsBytesPerSec	equ 11 ; 512 (word)
    30                                  bsSecPerClust	equ 13
    31                                  bsResSectors	equ 14
    32                                  bsFATs		equ 16
    33                                  bsRootDirEnts	equ 17
    34                                  bsSectors	equ 19
    35                                  bsMedia		equ 21
    36                                  bsFATsecs	equ 22
    37                                  bsSecPerTrack	equ 24 ; 18 (word)
    38                                  bsHeads		equ 26 ; 2 (word)
    39                                  bsHidden1	equ 28
    40                                  bsHidden2	equ 30
    41                                  bsHugeSectors	equ 32
    42                                  bsDriveNumber	equ 36
    43                                  bsReserved1	equ 37
    44                                  bsBpbSignature	equ 38 ; 29h (byte)
    45                                  bsVolumeID	equ 39
    46                                  bsVolumeLabel	equ 43
    47                                  bsFileSysType	equ 54 ; 'FAT12   '  (8 bytes)
    48                                  ;
    49                                  bsReserved2	equ 62
    50                                  ; TRDOS 386 v2.0 2018 Extensions
    51                                  bsDataStart	equ 64
    52                                  bsRootDirStart	equ 66
    53                                  bsRootDirSects	equ 68
    54                                  bsDirEntsPerSec equ 70
    55                                  
    56                                  ; FAT32 bs
    57                                  BPB_FATSz32	equ 36
    58                                  BPB_ExtFlags	equ 40
    59                                  BPB_FSVer	equ 42
    60                                  BPB_RootClus	equ 44
    61                                  BPB_FSInfo	equ 48
    62                                  BPB_BkBootSec	equ 50
    63                                  BPB_Reserved	equ 52
    64                                  BS_DrvNum	equ 64	; 80h
    65                                  BS_Reserved1	equ 65
    66                                  BS_BootSig	equ 66	; 29h (byte)
    67                                  BS_VolID	equ 67
    68                                  BS_VolLab	equ 71
    69                                  BS_FilSysType	equ 82	; 'FAT32   '  (8 bytes) 
    70                                  
    71                                  ; Masterboot / Partition Table at Beginning+1BEh
    72                                  ptBootable      equ 0
    73                                  ptBeginHead     equ 1
    74                                  ptBeginSector   equ 2
    75                                  ptBeginCylinder equ 3
    76                                  ptFileSystemID	equ 4
    77                                  ptEndHead       equ 5
    78                                  ptEndSector     equ 6
    79                                  ptEndCylinder   equ 7
    80                                  ptStartSector   equ 8
    81                                  ptSectors       equ 12
    82                                  
    83                                  partition_table equ 1BEh    
    84                                  
    85                                  ; ----------------------------------------------------------------------------
    86                                  ; code
    87                                  ; ----------------------------------------------------------------------------
    88                                  
    89                                  [BITS 16]
    90                                  [ORG 100h]
    91                                  
    92 00000000 FA                      	cli
    93 00000001 FC                      	cld
    94 00000002 0E                      	push	cs
    95 00000003 17                      	pop	ss
    96 00000004 BCFEFF                  	mov	sp, 0FFFEh
    97 00000007 FB                      	sti
    98                                  
    99                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   100                                  ; see if drive specified
   101                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   102                                  
   103 00000008 BE8000                  	mov	si, 80h			; PSP command tail
   104 0000000B 8A0C                    	mov	cl, [si]
   105 0000000D 08C9                    	or	cl, cl                               
   106 0000000F 7503                    	jnz	short T_1		
   107 00000011 E99100                  	jmp	T_9			; jump if zero
   108                                  T_1:
   109 00000014 46                      	inc	si  ; (+)
   110                                  
   111 00000015 8A04                    	mov	al, [si]
   112 00000017 3C20                    	cmp	al, ' '			; is it SPACE ?
   113 00000019 7507                    	jne	short T_2
   114                                  R_1:
   115 0000001B FEC9                    	dec	cl
   116 0000001D 75F5                    	jnz	short T_1
   117 0000001F E98300                  	jmp	T_9
   118                                  T_2:
   119 00000022 46                      	inc	si	; (*)
   120                                  
   121 00000023 3C2D                    	cmp	al, '-'
   122 00000025 7523                    	jne	short R_2
   123                                  
   124 00000027 FEC9                    	dec	cl ; 1st 'inc si' (+)
   125 00000029 FEC9                    	dec	cl ; previous 'inc si' (*)
   126 0000002B 7E78                    	jng	short T_9  ; cl < 1
   127                                  
   128 0000002D 38E0                    	cmp	al, ah
   129 0000002F 7474                    	je	short T_9
   130                                  
   131 00000031 88C4                    	mov	ah, al ; '-'
   132 00000033 8A04                    	mov	al, [si]
   133                                  	; cl > 0
   134 00000035 46                      	inc	si	; (**)
   135 00000036 803C20                  	cmp	byte [si], ' '
   136 00000039 756A                    	jne	short T_9
   137 0000003B 3C30                    	cmp	al, '0'
   138 0000003D 7266                    	jb	short T_9
   139 0000003F 3C34                    	cmp	al, '4'
   140 00000041 7762                    	ja	short T_9
   141 00000043 2C30                    	sub	al, '0'
   142 00000045 A2[6E16]                	mov	[partition], al
   143 00000048 EBD1                    	jmp	short R_1  
   144                                  		; dec cl for previous 'inc si' (**)
   145                                  R_2:
   146 0000004A FEC9                    	dec	cl ; 1st 'inc si' (+)
   147 0000004C 7430                    	jz	short R_3
   148                                  
   149 0000004E 803C3A                  	cmp	byte [si], ':'
   150 00000051 7421                    	je	short T_3
   151                                  	
   152 00000053 803C20                  	cmp	byte [si], ' '
   153 00000056 7626                    	jna	short R_3
   154                                  
   155 00000058 FEC9                    	dec	cl ; following 'inc si' (*)
   156 0000005A 7422                    	jz	short R_3
   157                                  
   158 0000005C 3C68                    	cmp	al, 'h'
   159 0000005E 7545                    	jne	short T_9  	
   160 00000060 803C64                  	cmp	byte [si], 'd'
   161 00000063 7540                    	jne	short T_9
   162 00000065 46                      	inc	si	; (*)
   163 00000066 8A04                    	mov	al, [si]
   164 00000068 3C30                    	cmp	al, '0'
   165 0000006A 7433                    	je	short T_8
   166 0000006C 7237                    	jb	short T_9
   167 0000006E 3C33                    	cmp	al, '3'
   168 00000070 762D                    	jna	short T_8
   169 00000072 EB31                    	jmp	short T_9
   170                                  T_3:
   171 00000074 FEC9                    	dec	cl ; following 'inc si' (**)
   172 00000076 7406                    	jz	short R_3
   173                                  	; cl > 0
   174 00000078 46                      	inc	si	; (**)
   175 00000079 803C20                  	cmp	byte [si], ' '
   176 0000007C 7727                    	ja	short T_9
   177                                  R_3:
   178 0000007E 3C43                    	cmp	al, 'C'
   179 00000080 7223                    	jb	short T_9
   180 00000082 7414                    	je	short T_6
   181                                  	;cmp	al, 'Z'			; A - Z
   182                                  	;jna	short T_6                   
   183 00000084 3C44                    	cmp	al, 'D'
   184 00000086 7610                    	jna	short T_6
   185 00000088 3C5A                    	cmp	al, 'Z'
   186 0000008A 7619                    	jna	short T_9
   187                                  T_4:	
   188 0000008C 3C63                    	cmp	al, 'c'			; a - z 
   189 0000008E 7215                    	jb	short T_9                  
   190 00000090 7404                    	je	short T_5
   191                                  	;cmp	al, 'z'                           
   192                                  	;ja	short T_9     
   193 00000092 3C64                    	cmp	al, 'd'
   194 00000094 770F                    	ja	short T_9
   195                                  T_5:
   196 00000096 2C20                    	sub	al, 'a'-'A'		; to upper case
   197                                  
   198                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   199                                  ; get drive code
   200                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   201                                  
   202                                  T_6:
   203 00000098 2C13                    	sub	al, 'C'-'0'
   204                                  T_7:
   205 0000009A A2[5817]                	mov	[RD_Drive], al	; '0' .. '4'
   206 0000009D EB0F                    	jmp	short T_10
   207                                  T_8:
   208 0000009F 46                      	inc	si
   209 000000A0 803C20                  	cmp	byte [si], ' '
   210 000000A3 76F5                    	jna	short T_7		
   211                                  
   212                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   213                                  ; Write message
   214                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   215                                  
   216                                  T_9:
   217 000000A5 BE[E613]                	mov	si, RD_Welcome
   218 000000A8 E81302                  	call	print_msg
   219                                  	;cmp	cl, 0
   220                                          ;ja	short T_35
   221 000000AB E9F901                  	jmp	T_35
   222                                  
   223                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   224                                  ; get drive parameters
   225                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   226                                  
   227                                  T_10:
   228 000000AE B408                    	mov	ah, 08h
   229                                  	;mov	dl, [RD_Drive]	; drive
   230 000000B0 88C2                    	mov	dl, al
   231 000000B2 80C250                  	add	dl, 80h -'0'		; make it 80h based 
   232 000000B5 8816[DF13]              	mov	[drv], dl
   233 000000B9 CD13                    	int	13h			; return disk parameters
   234                                  
   235 000000BB 0E                      	push	cs
   236 000000BC 07                      	pop	es			; restore es
   237                                  
   238 000000BD 08E4                    	or	ah, ah
   239 000000BF 7542                    	jnz	short T_12		; error
   240                                  	
   241 000000C1 88C8                    	mov	al, cl
   242 000000C3 243F                    	and	al, 63
   243 000000C5 A2[E013]                	mov	[sectors], al
   244 000000C8 C0E906                  	shr	cl, 6 
   245 000000CB 86E9                    	xchg	ch, cl
   246 000000CD 41                      	inc	cx
   247 000000CE 890E[E413]              	mov	[cylinders], cx
   248 000000D2 FEC6                    	inc	dh
   249 000000D4 8836[E213]              	mov	[heads], dh
   250 000000D8 F6E6                    	mul	dh
   251                                  		; ax = heads * spt
   252 000000DA A3[AE1E]                	mov	[csize], ax
   253 000000DD F7E1                    	mul	cx ; * cylinders
   254                                  		; dx:ax = chs limit
   255 000000DF A3[4418]                	mov	[CHS_limit], ax
   256 000000E2 8916[4618]              	mov	[CHS_limit+2], dx
   257                                  
   258                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   259                                  ; read MBR
   260                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   261                                  
   262                                  	; check for (valid) primary dos partition
   263                                  
   264                                  	;mov	byte [RetryCount], 4
   265 000000E6 BF0500                  	mov	di, 5
   266                                  
   267                                  	;mov	ax, 0201h		; read disk
   268 000000E9 BB[B81E]                	mov	bx, MBR			; location of masterboot code
   269                                  
   270 000000EC B90100                  	mov	cx, 1			; cylinder = 0
   271                                  					; sector = 1
   272 000000EF B600                    	mov	dh, 0			; head = 0
   273                                  	;mov	dl, [RD_Drive]	; drive 
   274                                  	;add	dl, 80h -'0'		; make it 80h based 
   275 000000F1 8A16[DF13]              	mov	dl, [drv]
   276                                  T_11:
   277 000000F5 B80102                  	mov	ax, 0201h
   278 000000F8 CD13                    	int	13h
   279                                  	;jc	short T_37	
   280 000000FA 7312                    	jnc	short T_13		; read masterboot sector, OK
   281                                  	
   282                                   	; reset hard disk(s)
   283 000000FC 30E4                    	xor	ah, ah
   284                                  	;mov	dl, [drv]
   285 000000FE CD13                    	int	13h
   286                                  
   287                                  	;dec	byte [RetryCount]
   288 00000100 4F                      	dec	di
   289 00000101 75F2                    	jnz	short T_11
   290                                  
   291                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   292                                  ; write disk error message and terminate
   293                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   294                                  
   295                                  T_12:
   296 00000103 C606[7E17]00            	mov	byte [zbyte], 0 ; message without (Y/N) question 
   297                                  
   298 00000108 E8B001                  	call	T_37			; write error message
   299 0000010B E99901                  	jmp	T_35 			; terminate
   300                                  
   301                                  T_13:
   302 0000010E 813E[B620]55AA          	cmp	word [MBR+510], 0AA55h 
   303 00000114 75ED                            jne	short T_12
   304                                  
   305 00000116 BE[7A20]                	mov	si, MBR+(partition_table+ptFileSystemID)
   306                                  	
   307                                  	; ah = 0
   308 00000119 A0[6E16]                	mov	al, [partition]
   309 0000011C 20C0                    	and	al, al	; 0 ?
   310 0000011E 7409                    	jz	short T_14
   311 00000120 FEC8                    	dec	al
   312 00000122 7405                    	jz	short T_14
   313 00000124 C0E004                  	shl	al, 4 ; * 16
   314 00000127 01C6                    	add	si, ax 
   315                                  T_14:
   316 00000129 E8C201                  	call	validate_primary_dos_partition
   317 0000012C 7326                    	jnc	short T_15	
   318                                  	
   319 0000012E 803E[6E16]00            	cmp	byte [partition], 0
   320 00000133 770F                    	ja	short R_5
   321                                   
   322 00000135 83C610                  	add	si, 16
   323 00000138 81FE[BA20]              	cmp	si, MBR+partition_table+ptFileSystemID+64
   324 0000013C 72EB                    	jb	short T_14
   325                                  
   326 0000013E BE[E517]                	mov	si, RD_fatp_notfound
   327                                  	;call	print_msg
   328                                  	;jmp	T_35
   329                                  R_4:
   330 00000141 E90C01                  	jmp	M_3
   331                                  R_5:
   332 00000144 BE[1718]                	mov	si, not_primary_dos_p
   333 00000147 E87401                  	call	print_msg
   334 0000014A BE[FC17]                	mov	si, a_p_d_p
   335 0000014D EBF2                    	jmp	short R_4
   336                                  M_2:
   337                                  	; Partition size defect 
   338                                  	; (less than the minimum number of sectors required)
   339 0000014F BE[9117]                	mov	si, RD_psize_defect
   340                                  	;call	print_msg
   341                                  	;jmp	T_35
   342 00000152 EBED                    	jmp	short R_4
   343                                  
   344                                  T_15:
   345                                  	; valid primary dos partition
   346                                  	; al = FAT type (1,2,3)
   347                                  	; ah = partition type
   348                                  
   349 00000154 A2[1618]                	mov	byte [fattype], al
   350 00000157 8826[AC1E]              	mov	[fsID], ah
   351                                  
   352 0000015B 3C02                    	cmp	al, 2
   353 0000015D 741B                    	je	short T_17 ; FAT16 BS (default offset addr)
   354 0000015F 720E                    	jb	short T_16
   355                                  
   356                                  	; set format code pointer to FAT32 format code
   357 00000161 C706[DA0B][B803]        	mov	word [trdos386fc], format_FAT32_fs
   358                                  	; set FS type string
   359 00000167 C706[0117]3332          	mov	word [fattype_str],'32'	; 'FAT32'
   360                                  	; ok.. read boot sector
   361 0000016D EB0B                    	jmp	short T_17
   362                                  T_16:
   363                                  	; set format code pointer to FAT12 format code
   364 0000016F C706[DA0B][7209]        	mov	word [trdos386fc], format_FAT12_fs
   365 00000175 C606[0217]32            	mov	byte [fattype_str+1],'2' ; 'FAT12'
   366                                  
   367                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   368                                  ; read primary dos partition's boot sector
   369                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   370                                  
   371                                  T_17:	
   372                                  	;mov	byte [RetryCount], 5
   373                                  
   374 0000017A 83C604                  	add	si, ptStartSector-ptFileSystemID
   375 0000017D 8B04                    	mov	ax, [si]
   376 0000017F 8B5402                  	mov	dx, [si+2]
   377 00000182 A3[B01E]                	mov	[dosp_start], ax
   378 00000185 8916[B21E]              	mov	[dosp_start+2], dx
   379 00000189 83C604                  	add	si, ptSectors-ptStartSector
   380 0000018C 8B0C                    	mov	cx, [si]
   381 0000018E 8B5C02                  	mov	bx, [si+2]
   382 00000191 890E[B41E]              	mov	[dosp_size], cx
   383 00000195 891E[B61E]              	mov	[dosp_size+2], bx
   384                                  
   385                                  	; check minimum partition size
   386 00000199 803E[1618]03            	cmp	byte [fattype], 3 ; FAT32 FS
   387 0000019E 730C                    	jnb	short M_1 ; yes
   388                                  M_0:
   389 000001A0 09DB                    	or	bx, bx
   390 000001A2 7515                    	jnz	short T_19
   391                                  
   392 000001A4 3B0E[AE1E]              	cmp	cx, [csize] ; sectors per cylinder
   393 000001A8 730F                    	jnb	short T_19
   394 000001AA EBA3                    	jmp	short M_2
   395                                  M_1:
   396 000001AC 83FB01                  	cmp	bx, 1 ; >= 32MB ?
   397 000001AF 7708                    	ja	short T_19
   398 000001B1 729C                    	jb	short M_2
   399                                  
   400 000001B3 81F91504                	cmp	cx, 0415h  ; must be >= 66581 sectors
   401 000001B7 7296                    	jb	short M_2
   402                                  T_19:
   403 000001B9 01C1                    	add	cx, ax
   404 000001BB 11D3                    	adc	bx, dx
   405 000001BD 0F8242FF                	jc	T_12
   406                                  
   407 000001C1 3B1E[4618]              	cmp	bx, [CHS_limit+2]	
   408 000001C5 BB[B81E]                	mov	bx, bootsector
   409 000001C8 7711                    	ja	short T_20 ; LBA read/write
   410 000001CA 7206                    	jb	short T_18
   411 000001CC 3B0E[4418]              	cmp	cx, [CHS_limit]
   412 000001D0 7709                    	ja	short T_20
   413                                  T_18:
   414                                  	; CHS read
   415                                  
   416                                  	;mov	ax, [dosp_start]
   417                                  	;mov	dx, [dosp_start+2]
   418                                  
   419 000001D2 E85201                  	call	read_chs_sector
   420 000001D5 0F822AFF                	jc	T_12
   421 000001D9 EB0C                    	jmp	short T_22
   422                                  T_20:
   423 000001DB C606[DE13]01            	mov	byte [lba], 1 ; LBA r/w is required
   424                                  
   425                                  	;mov	ax, [dosp_start]
   426                                  	;mov	dx, [dosp_start+2]
   427                                  	
   428 000001E0 E89201                  	call	read_lba_sector
   429 000001E3 0F821CFF                	jc	T_12	 
   430                                  T_22:
   431 000001E7 813E[B620]55AA          	cmp	word [bootsector+510], 0AA55h
   432 000001ED 7551                    	jne	short T_23
   433                                  
   434 000001EF 813E[C31E]0002          	cmp	word [bootsector+bsBytesPerSec], 512
   435 000001F5 7549                    	jne	short T_23
   436                                  
   437 000001F7 C606[CD1E]F8            	mov	byte [bootsector+bsMedia], 0F8h
   438 000001FC 7542                    	jne	short T_23
   439                                  
   440 000001FE 803E[1618]02            	cmp	byte [fattype], 2
   441 00000203 7722                    	ja	short T_24
   442                                  
   443 00000205 803E[DE1E]29            	cmp	byte [bootsector+bsBpbSignature], 29h
   444 0000020A 7534                    	jne	short T_23
   445 0000020C 66813E[EE1E]464154-     	cmp	dword [bootsector+bsFileSysType], 'FAT1'
   445 00000214 31                 
   446 00000215 7529                    	jne	short T_23
   447                                  
   448 00000217 A0[F21E]                	mov	al, [bootsector+bsFileSysType+4]
   449 0000021A 3C36                    	cmp	al, '6'
   450 0000021C 7404                    	je	short T_25
   451                                  
   452 0000021E 3C32                    	cmp	al, '2'
   453 00000220 751E                    	jne	short T_23
   454                                  
   455                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   456                                  ; format question (and warning msg)
   457                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   458                                  
   459                                  T_25:
   460 00000222 BE[6F16]                	mov	si, RD_Format_warning ; warning is required
   461 00000225 EB1C                    	jmp	short T_26
   462                                  T_24:
   463 00000227 803E[FA1E]29            	cmp	byte [bootsector+BS_BootSig], 29h
   464 0000022C 7512                    	jne	short T_23
   465                                  	
   466 0000022E 66813E[0A1F]464154-     	cmp	dword [bootsector+BS_FilSysType], 'FAT3'
   466 00000236 33                 
   467 00000237 7507                    	jne	short T_23
   468 00000239 803E[0E1F]32            	cmp	byte [bootsector+BS_FilSysType+4], '2'
   469 0000023E 74E2                    	je	short T_25
   470                                  T_23:
   471 00000240 BE[C916]                	mov	si, RD_Do_you_want ; no need to warning
   472                                  T_26:
   473 00000243 E87800                  	call	print_msg
   474                                  
   475 00000246 E88400                  	call	get_answer
   476 00000249 3C59                    	cmp	al, 'Y'
   477 0000024B 7408                    	je	short T_27
   478                                  
   479 0000024D BE[1717]                	mov	si, _no_str
   480                                  M_3:
   481 00000250 E86B00                  	call	print_msg
   482                                  
   483 00000253 EB52                    	jmp	short T_35
   484                                  T_27:
   485 00000255 BE[1017]                	mov	si, _yes_str
   486 00000258 E86300                  	call	print_msg
   487                                  
   488 0000025B BE[2517]                	mov	si, RD_PressKeyWhenReady
   489 0000025E E85D00                  	call	print_msg
   490                                  T_28:
   491 00000261 31C0                    	xor	ax, ax
   492 00000263 CD16                    	int	16h			; wait for keyboard command
   493 00000265 3C0D                    	cmp	al, 'M'-40h		; Enter (OK) key
   494                                  	;je	short T_29		; write
   495 00000267 740A                    	je	short R_6
   496 00000269 3C03                    	cmp	al, 'C'-40h
   497 0000026B 743A                    	je	short T_35		; no write (exit)
   498 0000026D 3C1B                    	cmp	al, 27
   499 0000026F 7436                    	je	short T_35
   500 00000271 EBEE                    	jmp	short T_28
   501                                  
   502                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   503                                  ; clear fat buffer and start formatting
   504                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   505                                  
   506                                  R_6:
   507 00000273 803E[1618]03            	cmp	byte [fattype], 3 ; FAT32  ?
   508 00000278 750E                    	jne	short T_29
   509                                  
   510                                  	; Temporary FAT32 note for Retro DOS v4
   511                                  	; (This code will be removed when the Retro DOS v5
   512                                  	;  FAT32 boot sector code will be ready.)" ; 28/10/2023
   513                                  
   514 0000027A BE[E218]                	mov	si, FAT32_note
   515 0000027D E83E00                  	call	print_msg
   516 00000280 30E4                    	xor	ah, ah
   517 00000282 CD16                    	int	16h	
   518 00000284 3C0D                    	cmp	al, 'M'-40h ; Enter (OK) key
   519 00000286 751F                    	jne	short T_35
   520                                  
   521                                  T_29:
   522 00000288 BE[2217]                	mov	si, RD_CRLF
   523 0000028B E83000                  	call	print_msg
   524                                  
   525                                  	; Clear buffer in BSS 
   526 0000028E BF[B81E]                	mov	di, HDFORMAT_FATBUFFER
   527 00000291 31C0                    	xor	ax, ax
   528 00000293 B90001                  	mov	cx, 256
   529 00000296 F3AB                    	rep	stosw
   530                                  
   531                                  	; Clear volume name field
   532 00000298 BF[CC20]                	mov	di, StrVolumeName
   533 0000029B B10C                    	mov	cl, 12
   534 0000029D F3AA                    	rep	stosb
   535                                  
   536 0000029F 8A16[AC1E]              	mov	dl, [fsID] ; Partition ID
   537                                  
   538 000002A3 FF26[DA0B]              	jmp	word [trdos386fc]
   539                                  
   540                                  T_35:
   541 000002A7 BE[2217]                	mov	si, RD_CRLF
   542                                  Exit:
   543 000002AA E81100                  	call	print_msg
   544 000002AD B8004C                  	mov	ax, 4C00h		; terminate
   545 000002B0 CD21                    	int	21h
   546                                  T_36:
   547 000002B2 E81800                  	call	get_answer
   548 000002B5 3C59                    	cmp	al, 'Y'
   549 000002B7 74CF                    	je	short T_29
   550 000002B9 EBEC                    	jmp	short T_35
   551                                  
   552                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   553                                  ; disk r/w error or disk not ready
   554                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   555                                  
   556                                  T_37:
   557 000002BB BE[5C17]                	mov	si, RD_disk_NotReadyOrError
   558                                  	;;call	print_msg
   559                                  	;;jmp	short T_36
   560                                  	;jmp	short print_msg
   561                                  
   562                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   563                                  ; print message
   564                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   565                                  
   566                                  print_msg:
   567                                  T_38:
   568 000002BE AC                      	lodsb				; Load byte at DS:SI to AL
   569 000002BF 20C0                    	and	al, al            
   570 000002C1 7409                    	jz	short T_39       
   571 000002C3 B40E                    	mov	ah, 0Eh			
   572 000002C5 BB0700                  	mov	bx, 07h             
   573 000002C8 CD10                    	int	10h			; BIOS Service func ( ah ) = 0Eh
   574                                  					; Write char as TTY
   575                                  					; AL-char BH-page BL-color
   576 000002CA EBF2                    	jmp     short T_38          
   577                                  T_39:
   578                                  _NO_:
   579 000002CC C3                      	retn
   580                                  
   581                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   582                                  ; Yes/No
   583                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   584                                  
   585                                  get_answer:
   586 000002CD 31C0                    	xor	ax, ax
   587 000002CF CD16                    	int	16h			; wait for keyboard command
   588 000002D1 3C79                    	cmp	al, 'y'
   589 000002D3 7416                    	je	short _yes		; retry
   590 000002D5 3C59                    	cmp	al, 'Y'
   591 000002D7 7414                    	je	short _YES_
   592 000002D9 3C6E                    	cmp	al, 'n'
   593 000002DB 74EF                    	je	short _NO_ 		; exit
   594 000002DD 3C4E                    	cmp	al, 'N'
   595 000002DF 74EB                    	je	short _NO_
   596 000002E1 3C03                    	cmp	al, 'C'-40h
   597 000002E3 74E7                    	je	short _NO_                 
   598 000002E5 3C1B                    	cmp	al, 27
   599 000002E7 74E3                    	je	short _NO_
   600 000002E9 EBE2                    	jmp	short get_answer
   601                                  _yes:
   602 000002EB B059                    	mov	al, 'Y'
   603                                  _YES_:
   604 000002ED C3                      	retn
   605                                  
   606                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   607                                  ; get and set partition type for formatting
   608                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   609                                  
   610                                  validate_primary_dos_partition:
   611                                  	
   612                                  	; INPUT:
   613                                  	;   si = partition table entry offset + file system ID 
   614                                  	; OUTPUT:
   615                                  	;   cf = 0 -> ah = primary DOS partition ID
   616                                  	;			 (01h,04h,06h,0Bh,0Ch,0Eh)		
   617                                  	;	      al = FAT type 
   618                                  	;			1 = FAT12
   619                                  	;			2 = FAT16
   620                                  	;			3 = FAT32
   621                                  	;
   622                                  	;   cf = 1 -> not a primary DOS partition	
   623                                  
   624 000002EE 28C0                    	sub	al, al ; mov al, 0
   625                                  
   626 000002F0 8A24                    	mov 	ah, [si]
   627                                  
   628 000002F2 80FC01                  	cmp	ah, 01h	; FAT12 partition
   629 000002F5 7228                    	jb	short V_5 ; 0
   630 000002F7 741E                    	je	short V_3
   631                                  V_0:
   632 000002F9 FEC0                    	inc	al  ; mov al, 1
   633                                  
   634 000002FB 80FC06                  	cmp 	ah, 06h ; FAT16 CHS partition (>=32MB)
   635 000002FE 7709                    	ja	short V_2
   636 00000300 7415                    	je	short V_3
   637                                  
   638 00000302 80FC04                  	cmp	ah, 04h	; FAT16 CHS partition (< 32MB)
   639 00000305 7410                    	je	short V_3
   640                                  V_1:
   641 00000307 F9                      	stc
   642 00000308 C3                      	retn
   643                                  V_2:
   644 00000309 FEC0                    	inc	al ; mov al, 2
   645                                  
   646 0000030B 80FC0C                  	cmp	ah, 0Ch	; FAT32 LBA partition
   647 0000030E 7407                    	je	short V_3
   648 00000310 7708                    	ja	short V_4
   649                                  
   650 00000312 80FC0B                  	cmp	ah, 0Bh	; FAT32 CHS partition 
   651 00000315 7208                    	jb	short V_5
   652                                  V_3:
   653 00000317 FEC0                    	inc	al ; 0->1, 1->2, 2->3
   654 00000319 C3                      	retn 
   655                                  V_4:
   656 0000031A 80FC0E                  	cmp	ah, 0Eh	; FAT16 LBA partition
   657 0000031D 75E8                    	jne	short V_1
   658                                  	;mov	al, 2
   659                                  V_5:
   660 0000031F C3                      	retn
   661                                  
   662                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   663                                  ; disk read
   664                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   665                                  
   666                                  read_hd_sector:
   667 00000320 803E[DE13]00            	cmp	byte [lba], 0
   668 00000325 774E                    	ja	short  read_lba_sector
   669                                  
   670                                  read_chs_sector:
   671                                  	; Derived from 'proc_write_chs_sector' in HDFORMAT.ASM (30/07/2011)
   672                                  	; (TRDOS v1, Singlix FS formatting utility)
   673 00000327 C606[AD1E]02            	mov	byte [rw], 2 ; read
   674 0000032C EB05                    	jmp	short chs_rw
   675                                  
   676                                  write_chs_sector:
   677                                  	; Derived from 'proc_write_chs_sector' in HDFORMAT.ASM (30/07/2011)
   678                                  	; (TRDOS v1, Singlix FS formatting utility)
   679 0000032E C606[AD1E]03            	mov	byte [rw], 3 ; write
   680                                  	;jmp	short chs_rw
   681                                  chs_rw:
   682 00000333 56                      	push	si
   683 00000334 51                              push	cx        
   684                                  chs_rw_0:
   685 00000335 BF0500                  	mov	di, 5                    
   686                                  chs_rw_1:               
   687 00000338 52                      	push	dx	; Linear sector #
   688 00000339 50                      	push	ax	; DX_AX = Linear address (sectors)
   689 0000033A 8B0E[E013]              	mov	cx, [sectors]
   690 0000033E 53                      	push	bx
   691                                  
   692 0000033F E85C08                  	call    div32	; 32 bit divide
   693                                  
   694 00000342 89D9                    	mov	cx, bx	; Sector (zero based)
   695 00000344 41                      	inc	cx	; To make it 1 based
   696 00000345 51                      	push	cx
   697 00000346 8B0E[E213]              	mov     cx, [heads]
   698 0000034A E85108                  	call	div32	; Convert track to head & cyl
   699 0000034D 88DE                    	mov	dh, bl	; BX = Head (max. FFh)
   700 0000034F 59                      	pop	cx	; AX=Cyl, DH=Head, CX=Sector
   701 00000350 5B                      	pop     bx	; ES:BX = Buffer
   702                                  
   703 00000351 8A16[DF13]              	mov	dl, [drv]
   704 00000355 88C5                    	mov	ch, al                   
   705 00000357 D0CC                    	ror	ah, 1	; Rotate right
   706 00000359 D0CC                    	ror	ah, 1                   
   707 0000035B 08E1                    	or	cl, ah                   
   708                                  chs_rw_2:
   709 0000035D 8A26[AD1E]              	mov	ah, [rw] ; 02h = read, 03h = write
   710 00000361 B001                    	mov	al, 01h
   711 00000363 CD13                    	int	13h	; BIOS Service func (ah) = 2/3
   712                                  			; Read/Write disk sectors
   713                                  			; AL-sec num CH-track CL-sec
   714                                  			; DH-head DL-drive ES:BX-buffer
   715                                  			; CF-flag AH-status AL-sectors written/read
   716                                  			; If CF = 1 then AH = Error code (>0) 
   717                                          
   718                                  	;mov	[error], ah
   719 00000365 7309                    	jnc     short chs_rw_3
   720 00000367 4F                      	dec	di                 
   721 00000368 7406                    	jz	short chs_rw_3 
   722                                          
   723 0000036A 30E4                    	xor	ah, ah                   
   724                                  	;mov	dl, [drv]
   725 0000036C CD13                    	int	13h	; BIOS Service func (ah) = 0
   726                                  			; Reset disk system
   727 0000036E EBED                    	jmp	short chs_rw_2
   728                                  
   729                                  chs_rw_3:
   730 00000370 58                      	pop	ax
   731 00000371 5A                      	pop	dx
   732 00000372 59                      	pop	cx
   733 00000373 5E                      	pop	si	
   734 00000374 C3                      	retn		; db 0C3h
   735                                  
   736                                  read_lba_sector:
   737                                  	; trhdboot.s (2020), hdformat.asm (2011)
   738 00000375 C606[AD1E]42            	mov	byte [rw], 42h
   739 0000037A EB0C                    	jmp	short lba_rw
   740                                  
   741                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   742                                  ; disk write
   743                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   744                                  
   745                                  write_hd_sector:
   746 0000037C 803E[DE13]00            	cmp	byte [lba], 0
   747 00000381 76AB                    	jna	short  write_chs_sector
   748                                  
   749                                  write_lba_sector:
   750                                  	; trhdboot.s (2020), hdformat.asm (2011)
   751 00000383 C606[AD1E]43            	mov	byte [rw], 43h
   752                                  	;jmp	short lba_rw
   753                                  lba_rw:
   754 00000388 BF0500                  	mov	di, 5
   755                                  lba_rw_1:
   756                                  	;pusha				; db 60h
   757 0000038B 60                      	db	60h
   758                                  	;push 	0                       ; db 6Ah, 00h
   759 0000038C 6A00                    	db	6Ah, 0
   760                                  	;push	0                       ; db 6Ah, 00h
   761 0000038E 6A00                    	db	6Ah, 0
   762 00000390 52                      	push    dx
   763 00000391 50                      	push    ax
   764 00000392 06                      	push    es
   765 00000393 53                      	push    bx
   766                                  	;push	1			; db 6Ah, 01h
   767 00000394 6A01                    	db	6Ah, 01h                     
   768                                  	;push	10h                     ; db 6Ah, 10h
   769 00000396 6A10                    	db	6Ah, 10h
   770                                  
   771 00000398 89E6                    	mov     si, sp
   772 0000039A 8A16[DF13]              	mov     dl, [drv]
   773 0000039E 30C0                    	xor	al, al	; verify off 
   774                                  lba_rw_2:
   775 000003A0 8A26[AD1E]              	mov     ah, [rw] ; 42h = LBA read, 43h = LBA write
   776                                  	;xor	al, al	; verify off 
   777 000003A4 CD13                    	int     13h
   778                                  
   779                                  	;mov	[error], ah
   780 000003A6 730D                    	jnc     short lba_rw_3
   781                                  
   782 000003A8 4F                      	dec	di                 
   783 000003A9 740A                    	jz	short lba_rw_3 
   784                                          
   785 000003AB 30E4                    	xor	ah, ah                   
   786                                  	;mov	dl, [drv]
   787 000003AD CD13                    	int	13h	; BIOS Service func (ah) = 0
   788                                  			; Reset disk system
   789                                  
   790                                  	;mov	word [si+2], 1 ; set r/w count to 1 again
   791 000003AF C6440201                	mov	byte [si+2], 1
   792                                  
   793 000003B3 EBEB                    	jmp	short lba_rw_2
   794                                  
   795                                  lba_rw_3:
   796                                  	;popa
   797 000003B5 61                      	db	61h
   798                                  	;popa
   799 000003B6 61                      	db	61h
   800 000003B7 C3                      	retn
   801                                  
   802                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   803                                  ; FAT32 FORMATTING
   804                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   805                                  
   806                                  ; ((TRDOS 386 criter))
   807                                  ; Minimum size of FAT32 FS = 65525 + 512 + 512 + 32
   808                                  ; >= 66581 sectors (or >= 65525 data clusters)
   809                                  	
   810                                  format_FAT32_fs:
   811                                  	;mov	ax, 000Ch ; db 0Ch, 00h ; 'or al, 0'
   812                                  	;cmp	dl, al ; 0Ch
   813                                  	;je	short FAT32_lba_format
   814                                  	;mov	ax, 0C00Bh ; db 0Bh, 0C0h ; 'or ax, ax'
   815                                  ;FAT32_lba_format:
   816                                  	; Put TRDOS 386 FAT32 partition magic word 
   817                                  	; at offset 5Ah, in TRDOS386 FAT32 boot sector 0.
   818 000003B8 BD[DE0F]                	mov	bp, RD_FAT32_hd_bs
   819 000003BB 8D7E03                  	lea	di, [bp+3]
   820 000003BE BE[5418]                	mov	si, bs_oem_name
   821 000003C1 B90400                  	mov	cx, 4
   822 000003C4 F3A5                    	rep	movsw 
   823                                  	;mov	[bp+5Ah], ax	; [loc_5A]
   824 000003C6 C7465A0BC0              	mov	word [bp+5Ah], 0C00Bh
   825 000003CB A1[E013]                	mov	ax, [sectors]
   826 000003CE 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
   827 000003D1 A1[E213]                	mov	ax, [heads]
   828 000003D4 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
   829 000003D7 A1[B01E]                	mov	ax, [dosp_start]
   830 000003DA 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
   831 000003DD A1[B21E]                	mov	ax, [dosp_start+2]
   832 000003E0 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
   833 000003E3 A1[B41E]                	mov	ax, [dosp_size]
   834 000003E6 894620                  	mov	[bp+20h], ax	; [BPB_TotSec32]
   835 000003E9 8B16[B61E]              	mov	dx, [dosp_size+2]
   836 000003ED 895622                  	mov	[bp+22h], dx	; [BPB_TotSec32+2]
   837                                  	
   838                                  	; Sectors per cluster calculation
   839                                  	; (According to MS FAT32 FS specification.)
   840 000003F0 B108                    	mov	cl, 8  ; 8 sectors per cluster
   841 000003F2 83FA08                  	cmp	dx, 8  ; >= 532480 sectors
   842 000003F5 7709                    	ja	short FAT32_f_2 ; 8 sectors per cluster
   843 000003F7 7205                    	jb	short FAT32_f_1 ; 1 sector per cluster	
   844 000003F9 3D0020                  	cmp	ax, 2000h ; dx_ax = (8*65536)+8192
   845 000003FC 7302                    	jnb	short FAT32_f_2
   846                                  FAT32_f_1:
   847 000003FE B101                    	mov	cl, 1	; 1 sector per cluster		
   848                                  FAT32_f_2:
   849 00000400 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
   850                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
   851                                  	;mov	word [bp+0Eh], 32 ; [BPB_RsvdSecCnt] 
   852                                  
   853                                  	; Calculating FAT size in sectors
   854                                  	; (According to MS FAT32 FS Specification, 2000)
   855                                  
   856                                  	; DX_AX = partition (volume) size in sectors
   857 00000403 2B460E                  	sub	ax, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 32
   858 00000406 83DA00                  	sbb	dx, 0
   859                                  		; TmpVal1 = DiskSize - (BPB_ResvdSecCnt +
   860                                  		;	     		RootDirsectors)
   861                                  		; RootDirSectors = 0 (for FAT32 FS)
   862 00000409 89CB                    	mov	bx, cx ; ch = 0
   863 0000040B C1E308                  	shl	bx, 8 ; * 256
   864 0000040E 8A4E10                  	mov	cl, [bp+10h] ; [BPB_NumFATs] 
   865 00000411 01CB                    	add	bx, cx	
   866                                  		; TmpVal2 = (256*BPB_SecPerClus)+BPB_NumFATs
   867 00000413 D1EB                    	shr	bx, 1
   868                                  		; TmpVal2 = TmpVal2/2
   869 00000415 89D9                    	mov	cx, bx
   870 00000417 4B                      	dec	bx  ; TmpVal2-1
   871 00000418 01D8                    	add	ax, bx
   872 0000041A 83D200                  	adc	dx, 0
   873 0000041D E87E07                  	call	div32
   874                                  		; FATSz = (TmpVal1+(TmpVal2-1))/TmpVal2
   875                                  	; DX_AX = FAT size in sectors
   876 00000420 894624                  	mov	[bp+24h], ax	; [BPB_FATSz32]
   877 00000423 895626                  	mov	[bp+26h], dx	; [BPB_FATSz32+2]
   878                                  	; * 2
   879 00000426 89D3                    	mov	bx, dx
   880 00000428 01C0                    	add	ax, ax
   881 0000042A 11D3                    	adc	bx, dx
   882                                  	; BX_AX = [BPB_NumFATs] * [BPB_FATSz32]
   883 0000042C 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 32
   884 0000042F 01C1                    	add	cx, ax
   885 00000431 83D300                  	adc	bx, 0
   886                                  	; BX_CX = [BPB_RsvdSecCnt]+[BPB_NumFATs]*[BPB_FATSz32]
   887 00000434 8B4620                  	mov	ax, [bp+20h]	; [BPB_TotSec32]
   888 00000437 8B5622                  	mov	dx, [bp+22h]	; [BPB_TotSec32+2]
   889 0000043A 29C8                    	sub	ax, cx
   890 0000043C 19DA                    	sbb	dx, bx
   891 0000043E 890E[B820]              	mov	[data_start], cx
   892 00000442 891E[BA20]              	mov	[data_start+2], bx
   893                                  	; DX_AX = Data sectors
   894 00000446 A3[BC20]                	mov	[data_sectors], ax
   895 00000449 8916[BE20]              	mov	[data_sectors+2], dx
   896 0000044D 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
   897 00000450 30ED                    	xor	ch, ch
   898 00000452 E84907                  	call	div32 ; DX_AX/CX
   899                                  	; DX_AX = Count of clusters (rounded down)
   900 00000455 A3[C020]                	mov	[cluster_count], ax
   901 00000458 8916[C220]              	mov	[cluster_count+2], dx
   902                                  		
   903 0000045C 8D7E47                  	lea	di, [bp+71] ; [BS_VolLab]
   904 0000045F E89B01                  	call	write_volume_name
   905 00000462 8D7643                  	lea	si, [bp+67] ; [BS_VolID]
   906 00000465 E8F401                  	call	write_volume_serial
   907 00000468 E8F402                  	call	write_cluster_count
   908                                  
   909 0000046B E87502                  	call	write_formatting_msg
   910 0000046E B000                    	mov	al, 0
   911 00000470 E8CD02                  	call	write_format_percent_x
   912                                  
   913 00000473 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
   914 00000476 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
   915 00000479 0106[B820]              	add	[data_start], ax
   916 0000047D 1116[BA20]              	adc	[data_start+2], dx
   917                                  FAT32_f_3:
   918                                  	; DX_AX = FAT32 Boot Sector address
   919 00000481 BB[DE0F]                	mov	bx, RD_FAT32_hd_bs
   920                                  	; ES:BX = Boot Sector 1 Buffer
   921 00000484 E8F5FE                  	call	write_hd_sector
   922 00000487 0F82BC02                	jc	formatting_error
   923 0000048B E87902                  	call	write_format_percent
   924 0000048E 83C001                  	add	ax, 1
   925 00000491 83D200                  	adc	dx, 0
   926 00000494 BB[AC1C]                	mov	bx, HDFORMAT_FSINFO_BUFF
   927                                  	; ES:BX = FS INFO Sector Buffer (= BS+1)
   928 00000497 E8E2FE                  	call	write_hd_sector
   929 0000049A 0F82A902                	jc	formatting_error
   930 0000049E E86602                  	call	write_format_percent	
   931 000004A1 83C001                  	add	ax, 1
   932 000004A4 83D200                  	adc	dx, 0	
   933 000004A7 BB[DE11]                	mov	bx, RD_FAT32_hd_bs + 512
   934                                  	; ES:BX = Boot Sector 2 Buffer
   935 000004AA E8CFFE                  	call	write_hd_sector
   936 000004AD 0F829602                	jc	formatting_error
   937 000004B1 E85302                  	call	write_format_percent
   938 000004B4 B90300                  	mov	cx, 3
   939                                  FAT32_f_4:
   940 000004B7 51                      	push	cx
   941 000004B8 83C001                  	add	ax, 1
   942 000004BB 83D200                  	adc	dx, 0
   943 000004BE BB[B81E]                	mov	bx, HDFORMAT_EMPTY_BUFF
   944 000004C1 E8B8FE                  	call	write_hd_sector
   945 000004C4 0F827F02                	jc	formatting_error
   946 000004C8 E83C02                  	call	write_format_percent
   947 000004CB 59                      	pop	cx
   948 000004CC FEC9                    	dec	cl
   949 000004CE 75E7                    	jnz	short FAT32_f_4
   950 000004D0 83C001                  	add	ax, 1
   951 000004D3 83D200                  	adc	dx, 0
   952 000004D6 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
   953 000004D9 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
   954 000004DC 83C10C                  	add	cx, 12
   955 000004DF 83D300                  	adc	bx, 0
   956                                  	; write BACKUP sectors
   957                                  	; (6,7,8 boot+fsi and 9,10,11 empty sectors) 
   958 000004E2 39DA                    	cmp	dx, bx
   959 000004E4 729B                    	jb	short FAT32_f_3
   960 000004E6 39C8                    	cmp	ax, cx
   961 000004E8 7297                    	jb	short FAT32_f_3
   962                                  	; write remain part of reserved sectors
   963 000004EA 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt]
   964 000004ED 83E90C                  	sub	cx, 12
   965 000004F0 7618                    	jna	short FAT32_f_6
   966                                  FAT32_f_5:
   967 000004F2 51                      	push	cx
   968 000004F3 BB[B81E]                	mov	bx, HDFORMAT_EMPTY_BUFF
   969 000004F6 E883FE                  	call	write_hd_sector
   970 000004F9 0F824A02                	jc	formatting_error
   971 000004FD E80702                  	call	write_format_percent
   972 00000500 83C001                  	add	ax, 1
   973 00000503 83D200                  	adc	dx, 0
   974 00000506 59                      	pop	cx
   975 00000507 49                      	dec	cx
   976 00000508 75E8                    	jnz	short FAT32_f_5
   977                                  FAT32_f_6:
   978                                  	; write FAT sectors
   979 0000050A 8B0E[B820]              	mov	cx, [data_start] ; lba/abs addr
   980 0000050E 8B1E[BA20]              	mov	bx, [data_start+2] ; lba/abs addr
   981 00000512 53                      	push	bx
   982 00000513 51                      	push	cx
   983 00000514 BB[B81E]                	mov	bx, HDFORMAT_FATBUFFER
   984                                  	; ES:BX = FAT Sector Buffer
   985 00000517 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
   986 0000051A B5FF                    	mov	ch, 0FFh
   987 0000051C 890F                    	mov	[bx], cx
   988 0000051E 88E9                    	mov	cl, ch ; cx = 0FFFFh
   989 00000520 894F02                  	mov	[bx+2], cx
   990 00000523 894F04                  	mov	[bx+4], cx
   991 00000526 894F06                  	mov	[bx+6], cx
   992                                  	; Root dir cluster number = 2
   993                                  	; 0FFFFFFFh = end of cluster chain 
   994 00000529 894F08                  	mov	[bx+8], cx  ; 0FFFFh
   995 0000052C 80E50F                  	and	ch, 0Fh
   996 0000052F 894F0A                  	mov	[bx+10], cx ; 0FFFh
   997                                  	;inc	cx
   998 00000532 E847FE                  	call	write_hd_sector
   999 00000535 0F820E02                	jc	formatting_error
  1000 00000539 E8CB01                  	call	write_format_percent
  1001                                  	;mov	bx, HDFORMAT_FATBUFFER
  1002 0000053C B90000                  	mov	cx, 0
  1003 0000053F 890F                    	mov	[bx], cx
  1004 00000541 894F02                  	mov	[bx+2], cx
  1005 00000544 894F04                  	mov	[bx+4], cx
  1006 00000547 894F06                  	mov	[bx+6], cx
  1007 0000054A 894F08                  	mov	[bx+8], cx
  1008 0000054D 894F0A                  	mov	[bx+10], cx
  1009 00000550 EB0F                    	jmp	short FAT32_f_8
  1010                                  FAT32_f_7:	
  1011 00000552 53                      	push	bx
  1012 00000553 51                      	push	cx	
  1013 00000554 BB[B81E]                	mov	bx, HDFORMAT_FATBUFFER
  1014 00000557 E822FE                  	call	write_hd_sector
  1015 0000055A 0F82E901                	jc	formatting_error
  1016 0000055E E8A601                  	call	write_format_percent
  1017                                  FAT32_f_8:	
  1018 00000561 59                      	pop	cx
  1019 00000562 5B                      	pop	bx
  1020 00000563 83C001                  	add	ax, 1
  1021 00000566 83D200                  	adc	dx, 0
  1022 00000569 39DA                    	cmp	dx, bx
  1023 0000056B 72E5                    	jb	short FAT32_f_7
  1024 0000056D 39C8                    	cmp	ax, cx
  1025 0000056F 72E1                    	jb	short FAT32_f_7
  1026                                  
  1027                                  	; write	root directory (1st cluster)
  1028                                  	; as empty sectors
  1029 00000571 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1030 00000574 30ED                    	xor	ch, ch
  1031 00000576 290E[BC20]              	sub	[data_sectors], cx
  1032 0000057A 831E[BE20]00            	sbb	word [data_sectors+2], 0
  1033                                  FAT32_f_9:
  1034 0000057F 51                      	push	cx
  1035 00000580 BB[B81E]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1036 00000583 E8F6FD                  	call	write_hd_sector
  1037 00000586 0F82BD01                	jc	formatting_error
  1038 0000058A E87A01                  	call	write_format_percent
  1039 0000058D 83C001                  	add	ax, 1
  1040 00000590 83D200                  	adc	dx, 0
  1041 00000593 59                      	pop	cx
  1042 00000594 FEC9                    	dec	cl
  1043 00000596 75E7                    	jnz	short FAT32_f_9
  1044                                  
  1045                                  	; write DATA sectors 
  1046                                  	; (after root directory 1st cluster)
  1047 00000598 8B0E[BC20]              	mov	cx, [data_sectors]
  1048 0000059C 8B1E[BE20]              	mov	bx, [data_sectors+2] 
  1049                                  			; NOTE: Partition size must be >= 512 MB
  1050                                  			;	for FAT32 FS  ((BX >= 15))		
  1051                                  FAT32_f_10:	
  1052 000005A0 53                      	push	bx
  1053 000005A1 51                      	push	cx	
  1054 000005A2 BB[AC1A]                	mov	bx, HDFORMAT_SECBUFFER
  1055 000005A5 E8D4FD                  	call	write_hd_sector
  1056 000005A8 0F829B01                	jc	formatting_error
  1057 000005AC E85801                  	call	write_format_percent
  1058 000005AF 59                      	pop	cx
  1059 000005B0 5B                      	pop	bx
  1060 000005B1 83C001                  	add	ax, 1
  1061 000005B4 83D200                  	adc	dx, 0
  1062 000005B7 49                      	dec	cx
  1063 000005B8 75E6                    	jnz	short FAT32_f_10
  1064 000005BA 4B                      	dec	bx
  1065 000005BB 75E3                    	jnz	short FAT32_f_10
  1066                                  
  1067                                  	; If there are, format remain sectors which are
  1068                                  	; at beyond of data clusters, with zero bytes.
  1069                                  	
  1070 000005BD 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  1071 000005C0 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  1072                                  FAT16_f_18:	
  1073 000005C3 034E20                  	add	cx, [bp+20h]	; [BPB_TotSec32]
  1074 000005C6 135E22                  	adc	bx, [bp+22h]	; [BPB_TotSec32+2]
  1075                                  FAT16_f_19:
  1076                                  FAT12_f_8:
  1077                                  	; are there remain sectors (in partition) ?
  1078 000005C9 29C1                    	sub	cx, ax
  1079 000005CB 19D3                    	sbb	bx, dx
  1080                                  	; 11/02/2019
  1081                                  	; BX must be 0 (Because, 1 cluster <= 32KB. So, 
  1082                                  	;	        remain sectors must not be more than 32K)
  1083 000005CD 751C                    	jnz	short FAT32_f_12 ; There is a wrong thing !!!
  1084                                  				 ; If BX is not zero,	
  1085                                  				 ; it is better to skip this stage...)
  1086 000005CF 09C9                    	or	cx, cx		
  1087 000005D1 7418                    	jz	short FAT32_f_12 ; no.. 
  1088                                  				 ; (good! FAT contains all data sectors)
  1089                                  FAT32_f_11:
  1090 000005D3 51                      	push	cx
  1091 000005D4 BB[B81E]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1092 000005D7 E8A2FD                  	call	write_hd_sector
  1093 000005DA 0F826901                	jc	formatting_error
  1094 000005DE E82601                  	call	write_format_percent
  1095 000005E1 59                      	pop	cx
  1096 000005E2 83C001                  	add	ax, 1
  1097 000005E5 83D200                  	adc	dx, 0
  1098 000005E8 49                      	dec	cx
  1099 000005E9 75E8                    	jnz	short FAT32_f_11
  1100                                  
  1101                                  FAT32_f_12:
  1102                                  	; End of FAT format routine...
  1103                                  end_of_formatting:
  1104 000005EB B064                    	mov	al, 100
  1105 000005ED E85001                  	call	write_format_percent_x
  1106                                  	;mov	si, CRLF
  1107                                  	;call	print_msg
  1108 000005F0 BE[1D17]                	mov	si, _msg_OK
  1109                                  	;call	print_msg
  1110 000005F3 E9B4FC                  	jmp	Exit
  1111                                  
  1112                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1113                                  ; set & write volume name
  1114                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1115                                  
  1116                                  write_fs_volume_name:
  1117 000005F6 C606[5318]40            	mov	byte [vname_length], 64
  1118 000005FB EB05                    	jmp	short svn_fs
  1119                                  
  1120                                  write_volume_name:
  1121 000005FD C606[5318]0B            	mov	byte [vname_length], 11
  1122                                  svn_fs:
  1123                                  	; DI = (BS) Volume Label address
  1124 00000602 BE[6A18]                	mov	si, Msg_Volume_Name
  1125 00000605 E8B6FC                  	call	print_msg
  1126                                  
  1127                                  	; get cursor position
  1128                                  	; bh = 0  ; video page
  1129 00000608 B403                    	mov     ah, 3 ; get cursor pos
  1130 0000060A CD10                    	int     10h
  1131 0000060C 8916[4418]              	mov	[Cursor_Pos], dx
  1132                                  
  1133 00000610 E8F904                  	call	rw_char
  1134 00000613 7207                    	jc	short svn_1
  1135                                  svn_0:
  1136 00000615 AC                      	lodsb
  1137 00000616 3C20                    	cmp	al, 20h
  1138 00000618 7706                    	ja	short svn_2
  1139 0000061A 74F9                    	je	short svn_0 
  1140                                  svn_1:
  1141 0000061C BE[5E18]                	mov	si, no_name
  1142 0000061F AC                      	lodsb
  1143                                  svn_2:
  1144                                  	;mov	di, [bp+47h) ; [BS_VolLab] ; FAT32
  1145                                  	;mov	di, [bp+2Bh) ; [BS_VolLab] ; FAT16 (&FAT12)
  1146 00000620 89FB                    	mov	bx, di ; *
  1147 00000622 30ED                    	xor	ch, ch
  1148 00000624 8A0E[5318]              	mov	cl, [vname_length] ; 11
  1149 00000628 EB05                    	jmp	short svn_4
  1150                                  svn_3:
  1151 0000062A AC                      	lodsb
  1152 0000062B 3C20                    	cmp	al, 20h
  1153 0000062D 7226                    	jb	short svn_6
  1154                                  svn_4:
  1155 0000062F AA                      	stosb
  1156 00000630 E2F8                    	loop	svn_3
  1157                                  svn_5:
  1158 00000632 8A0E[5318]              	mov	cl, [vname_length] ; 11
  1159 00000636 89DE                    	mov	si, bx ; *
  1160 00000638 BF[CC20]                	mov	di, StrVolumeName
  1161 0000063B F3A4                    	rep	movsb
  1162                                  	;mov	byte [di], 0
  1163                                  
  1164 0000063D 8B16[4418]              	mov	dx, [Cursor_Pos]
  1165 00000641 BB0700                  	mov	bx, 7
  1166 00000644 B402                    	mov	ah, 2
  1167 00000646 CD10                    	int	10h  ; Set Cursor Position
  1168                                  
  1169 00000648 BE[CC20]                	mov	si, StrVolumeName
  1170 0000064B E870FC                  	call	print_msg
  1171 0000064E BE[CC18]                	mov	si, CRLF
  1172 00000651 E86AFC                  	call	print_msg
  1173 00000654 C3                      	retn
  1174                                  svn_6:
  1175 00000655 B020                    	mov	al, 20h
  1176                                  svn_7:
  1177 00000657 AA                      	stosb
  1178 00000658 E2FD                    	loop	svn_7
  1179 0000065A EBD6                    	jmp	short svn_5
  1180                                  
  1181                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1182                                  ; set & write volume serial number (volume ID)
  1183                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1184                                  
  1185                                  write_volume_serial:
  1186                                  	; SI = (BS) Volume Serial Number (binary) address
  1187                                  
  1188                                  	;xor	ax, ax
  1189                                  	;int	1Ah			; get time of day
  1190                                  
  1191                                  	;mov	[si], dx
  1192                                  	;mov	[si+2], cx		; set unique volume ID
  1193                                  
  1194                                  	;mov	ah, 02h			; Return Current Time
  1195                                  	;int	1Ah
  1196                                  	;xchg	ch, cl
  1197                                  	;xchg	dh, dl
  1198                                  
  1199                                  	;add	cx, dx  
  1200                                  	;add	[si+2], cx
  1201                                                 
  1202                                  	;mov	ah, 04h			; Return Current Date
  1203                                  	;int	1Ah
  1204                                  
  1205                                  	;xchg	ch,cl
  1206                                  	;xchg	dh,dl
  1207                                  
  1208                                  	;add	cx, dx  
  1209                                  	;add	[si+2], cx
  1210                                  
  1211                                  	; According to Microsoft DOS 6.0 serial number
  1212                                  	; production method...
  1213                                  	; < Create unique 32 bit serial number >
  1214                                  
  1215                                  	; Create_Serial_ID (MSDOS 6.0 Source code, MSFOR.ASM)
  1216                                  	; (20/04/1987)
  1217                                  	;
  1218                                  	;  Get date (INT 21h, AH=2Bh)
  1219                                  	;  Get time (INT 21h, AH=2Ch)
  1220                                  	;  Serial_ID+0 = DX reg date + DX reg time
  1221                                  	;  Serial_ID+2 = CX reg date + CX reg time
  1222                                  	;  Serial_Num_Low = Serial_ID+2
  1223                                  	;  Serial_Num_High = Serial_ID+0
  1224                                  
  1225 0000065C B404                    	mov	ah, 04h		; Return Current Date
  1226 0000065E CD1A                    	int	1Ah
  1227                                  
  1228                                  	; DL = Day (BCD)	(20h) 	
  1229                                  	; DH = Month (BCD)	(12h)
  1230                                  	; CH = Century (BCD)	(20h)
  1231                                  	; CL = Year (BCD) 	(17h)
  1232                                  
  1233 00000660 88D0                    	mov	al, dl
  1234 00000662 E87100                  	call	bcd_to_bin
  1235 00000665 88C2                    	mov	dl, al 
  1236 00000667 88F0                    	mov	al, dh
  1237 00000669 E86A00                  	call	bcd_to_bin
  1238 0000066C 88C6                    	mov	dh, al 
  1239 0000066E 88C8                    	mov	al, cl
  1240 00000670 E86300                  	call	bcd_to_bin
  1241 00000673 88C1                    	mov	cl, al 
  1242 00000675 88E8                    	mov	al, ch
  1243 00000677 E85C00                  	call	bcd_to_bin
  1244 0000067A 88C5                    	mov	ch, al
  1245                                  
  1246                                  	; DH = Month (1-10)
  1247                                  	; DL = Day (1-31)
  1248                                  	; CX = Year (1900-2099)
  1249                                  
  1250 0000067C 52                      	push	dx 
  1251 0000067D 51                      	push	cx
  1252                                  
  1253 0000067E B402                    	mov	ah, 02h		; Return Current Time
  1254 00000680 CD1A                    	int	1Ah
  1255                                  	
  1256                                  	; DH = Seconds (BCD)	(59h) 	
  1257                                  	; CL = Minutes (BCD)	(59h)
  1258                                  	; CH = Hours (BCD)	(23h)
  1259                                  	; DL = Daylight savings time option (1=yes)
  1260                                  
  1261 00000682 88F0                    	mov	al, dh
  1262 00000684 E84F00                  	call	bcd_to_bin
  1263 00000687 88C6                    	mov	dh, al 
  1264 00000689 88C8                    	mov	al, cl
  1265 0000068B E84800                  	call	bcd_to_bin
  1266 0000068E 88C1                    	mov	cl, al 
  1267 00000690 88E8                    	mov	al, ch
  1268 00000692 E84100                  	call	bcd_to_bin
  1269 00000695 88C5                    	mov	ch, al 
  1270                                  
  1271                                  	; CH = Hour (0-23)
  1272                                  	; CL = Minutes (0-59)
  1273                                  	; DH = Seconds (0-59)
  1274                                  	; ((DL = Hundredths (0-99) - MSDOS!))
  1275                                  	; DL = 0 or 1 (here!)
  1276                                  
  1277 00000697 89C8                    	mov	ax, cx
  1278 00000699 59                      	pop	cx
  1279 0000069A 01C8                    	add	ax, cx
  1280                                  
  1281 0000069C 894402                  	mov	[si+2], ax
  1282                                  
  1283 0000069F 89D0                    	mov	ax, dx
  1284 000006A1 5A                      	pop	dx
  1285 000006A2 01D0                    	add	ax, dx
  1286                                  
  1287 000006A4 8904                    	mov	[si], ax
  1288                                  
  1289 000006A6 30E4                    	xor	ah, ah		; Read time counter
  1290 000006A8 CD1A                    	int	1Ah
  1291                                  
  1292                                  	; CX = High word of clock count
  1293                                  	; DX = Low word of clock count
  1294                                  	; AL = 0 if 24 hours has not passed, else 1
  1295                                  
  1296                                  	; NOTES: 
  1297                                  	; (Ref: vitaly_filatov.tripod.com/ng/asm/asm_029.1.html)
  1298                                  	;
  1299                                     	; Following formulas convert the clock count to
  1300                                          ; the time of day:
  1301                                   	;	Hour      = Clock / 65543 (1007h)
  1302                                  	;	Remainder = Clock MOD 65543
  1303                                   	;
  1304                                  	;	Minutes   = Remainder / 1092 (444h)
  1305                                  	;	Remainder = Remainder MOD 1092
  1306                                  	;
  1307                                  	;	Second    = Remainder / 18.21
  1308                                  	;	Remainder = Remainder MOD 18.21
  1309                                  	;
  1310                                  	;	Hundredths = CINT(Remainder * 100)
  1311                                  
  1312 000006AA 0014                    	add	[si], dl
  1313                                  
  1314                                  	; SI = Volume serial number address (4 bytes) 
  1315 000006AC 8A04                    	mov	al, [si]
  1316 000006AE E81205                  	call	bin_to_hex
  1317 000006B1 A3[9518]                	mov	[Vol_Serial2+2], ax	
  1318 000006B4 8A4401                  	mov	al, [si+1]
  1319 000006B7 E80905                  	call	bin_to_hex
  1320 000006BA A3[9318]                	mov	[Vol_Serial2], ax
  1321 000006BD 8A4402                  	mov	al, [si+2]
  1322 000006C0 E80005                  	call	bin_to_hex
  1323 000006C3 A3[9018]                	mov	[Vol_Serial1+2], ax	
  1324 000006C6 8A4403                  	mov	al, [si+3]
  1325 000006C9 E8F704                  	call	bin_to_hex
  1326 000006CC A3[8E18]                	mov	[Vol_Serial1], ax
  1327                                  
  1328 000006CF BE[7C18]                	mov	si, Msg_Volume_Serial
  1329 000006D2 E8E9FB                  	call	print_msg
  1330                                  
  1331 000006D5 C3                      	retn
  1332                                  
  1333                                  bcd_to_bin:
  1334 000006D6 53                      	push	bx
  1335 000006D7 D410                    	db	0D4h,10h  ; Undocumented inst. AAM
  1336                                  			  ; AH = AL / 10h
  1337                                  			  ; AL = AL MOD 10h
  1338 000006D9 88C3                    	mov	bl, al
  1339 000006DB B00A                    	mov	al, 10
  1340 000006DD F6E4                    	mul	ah
  1341 000006DF 00D8                    	add	al, bl
  1342 000006E1 5B                      	pop	bx
  1343 000006E2 C3                      	retn
  1344                                  
  1345                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1346                                  ; write formatting percentage
  1347                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1348                                  
  1349                                  write_formatting_msg:
  1350 000006E3 A1[B41E]                	mov	ax, [dosp_size]
  1351 000006E6 8B16[B61E]              	mov	dx, [dosp_size+2]
  1352                                  
  1353                                  	; DX_AX = Total sectors for percentage  
  1354 000006EA B96400                  	mov	cx, 100	
  1355 000006ED E8AE04                  	call	div32
  1356 000006F0 A3[C620]                	mov	[format_percent], ax
  1357                                  
  1358 000006F3 BE[B418]                	mov	si, msg_formatting
  1359 000006F6 E8C5FB                  	call	print_msg
  1360                                  
  1361                                  	; get cursor position
  1362                                  	; bh = 0  ; video page
  1363 000006F9 B403                    	mov     ah, 3 ; get cursor pos
  1364 000006FB CD10                    	int     10h
  1365 000006FD 8916[4418]              	mov	[Cursor_Pos], dx
  1366                                  
  1367 00000701 C606[C820]FF            	mov	byte [prev_percent], 255
  1368                                  
  1369 00000706 C3                      	retn
  1370                                  
  1371                                  write_format_percent:
  1372                                  	; DX_AX = Current sector (which has been written)
  1373                                  
  1374 00000707 50                      	push	ax
  1375 00000708 52                      	push	dx
  1376 00000709 53                      	push	bx
  1377 0000070A 51                      	push	cx
  1378 0000070B 56                      	push	si
  1379                                  
  1380 0000070C 2B461C                  	sub	ax, [bp+1Ch]	; [BPB_HiddSec]
  1381 0000070F 1B561E                  	sbb	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1382                                  wpc_t:
  1383 00000712 8B0E[C620]              	mov	cx, [format_percent]
  1384 00000716 E88504                  	call	div32
  1385                                  	; AL = percentage value between 1 to 100
  1386                                  wpc_x:
  1387 00000719 3A06[C820]              	cmp	al, [prev_percent]
  1388 0000071D 741B                    	je	short wpc_y
  1389 0000071F A2[C820]                	mov	[prev_percent], al
  1390 00000722 8B16[4418]              	mov	dx, [Cursor_Pos]
  1391 00000726 BB0700                  	mov	bx, 7
  1392 00000729 B402                    	mov	ah, 2
  1393 0000072B CD10                    	int	10h  ; Set Cursor Position
  1394 0000072D 31D2                    	xor	dx, dx
  1395 0000072F 30E4                    	xor	ah, ah
  1396                                  	;mov	al, [prev_percent]
  1397 00000731 BE[C218]                	mov	si, format_percent_str + 2
  1398 00000734 E87504                  	call	bin_to_decimal
  1399 00000737 E884FB                  	call	print_msg
  1400                                  wpc_y:
  1401 0000073A 5E                      	pop	si
  1402 0000073B 59                      	pop	cx
  1403 0000073C 5B                      	pop	bx
  1404 0000073D 5A                      	pop	dx
  1405 0000073E 58                      	pop	ax
  1406 0000073F C3                      	retn
  1407                                  
  1408                                  write_format_percent_x:
  1409                                  	; AL = % number
  1410                                  
  1411 00000740 50                      	push	ax
  1412 00000741 52                      	push	dx
  1413 00000742 53                      	push	bx
  1414 00000743 51                      	push	cx
  1415 00000744 56                      	push	si
  1416                                  
  1417 00000745 EBD2                    	jmp	short wpc_x
  1418                                  
  1419                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1420                                  ; format error 
  1421                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1422                                  
  1423                                  formatting_error:
  1424 00000747 8B26[CA20]              	mov	sp, [old_sp]
  1425                                  
  1426 0000074B 88E0                    	mov	al, ah ;  error code
  1427 0000074D E87304                  	call	bin_to_hex
  1428 00000750 A3[DA18]                	mov 	[error_code], ax
  1429                                  
  1430 00000753 BE[CC18]                	mov	si, CRLF
  1431 00000756 E865FB                  	call	print_msg
  1432                                  
  1433 00000759 BE[CF18]                	mov	si, Msg_Error
  1434                                  	;call	print_msg
  1435 0000075C E94BFB                  	jmp	Exit
  1436                                  
  1437                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1438                                  ; write cluster count
  1439                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1440                                  
  1441                                  write_cluster_count:
  1442 0000075F BE[9A18]                	mov	si, msg_cluster_count
  1443 00000762 E859FB                  	call	print_msg
  1444 00000765 A1[C020]                	mov	ax, [cluster_count]
  1445 00000768 8B16[C220]              	mov	dx, [cluster_count+2]
  1446 0000076C BE[B018]                	mov	si, cluster_count_str+6
  1447 0000076F E83A04                  	call	bin_to_decimal
  1448 00000772 E849FB                  	call	print_msg
  1449 00000775 C3                      	retn 
  1450                                  
  1451                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1452                                  ; FAT16 FORMATTING
  1453                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1454                                  
  1455                                  ; ((TRDOS 386 criter))
  1456                                  ; Minimum size of FAT16 FS = [heads]*[sectors]
  1457                                  ; (1 cylinder) or 4096 sectors (for TRDOS 386)
  1458                                  
  1459                                  format_FAT16_fs:
  1460 00000776 B80607                  	mov	ax, 0706h ; db 06h, 07h ; 'push es, pop es'
  1461 00000779 38C2                    	cmp	dl, al ; 06h ; Big CHS partition (>= 32MB)
  1462 0000077B 7403                    	je	short FAT16_big_chs_format
  1463                                  	;mov	ax, 070Eh ; db 0Eh, 07h	; 'push cs, pop es'
  1464                                  	;cmp	dl, al ; 0Eh ; LBA partition
  1465                                  	;je	short FAT16_lba_format
  1466                                  FAT16_chs_format:  
  1467                                  	; Partition Type: 04h, CHS (<32 MB) partition
  1468 0000077D B80400                  	mov	ax, 0004h ; db 04h, 00h ; 'add al, 0'
  1469                                  FAT16_big_chs_format:
  1470                                  ;FAT16_lba_format:
  1471                                  	; Put TRDOS 386 FAT16 partition magic word 
  1472                                  	; at offset 3Eh, in TRDOS386 FAT16 boot sector.
  1473 00000780 BD[DE0D]                	mov	bp, RD_FAT16_hd_bs
  1474 00000783 8D7E03                  	lea	di, [bp+3]
  1475 00000786 BE[5418]                	mov	si, bs_oem_name
  1476 00000789 B90400                  	mov	cx, 4
  1477 0000078C F3A5                    	rep	movsw 
  1478 0000078E 89463E                  	mov	[bp+3Eh], ax	; [loc_3E]
  1479                                  
  1480 00000791 A1[E013]                	mov	ax, [sectors]
  1481 00000794 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
  1482 00000797 A1[E213]                	mov	ax, [heads]
  1483 0000079A 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
  1484 0000079D A1[B01E]                	mov	ax, [dosp_start]
  1485 000007A0 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
  1486 000007A3 A1[B21E]                	mov	ax, [dosp_start+2]
  1487 000007A6 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
  1488 000007A9 A1[B41E]                	mov	ax, [dosp_size]
  1489 000007AC 8B16[B61E]              	mov	dx, [dosp_size+2]
  1490 000007B0 21D2                    	and	dx, dx
  1491 000007B2 7505                    	jnz	short FAT16_f_0
  1492 000007B4 894613                  	mov	[bp+13h], ax	; [BPB_TotSec16]
  1493                                  	; CX = 0
  1494                                  	;mov	[bp+20h], cx	; [BPB_TotSec32] =  0
  1495                                  	;mov	[bp+22h], cx	; [BPB_TotSec32+2] = 0
  1496 000007B7 EB06                    	jmp	short FAT16_f_1
  1497                                  FAT16_f_0:
  1498 000007B9 894620                  	mov	[bp+20h], ax	; [BPB_TotSec32]
  1499 000007BC 895622                  	mov	[bp+22h], dx	; [BPB_TotSec32+2]
  1500                                  	; CX = 0
  1501                                  	;mov	[bp+13h], cx ; [BPB_TotSec16] = 0
  1502                                  FAT16_f_1:
  1503                                  	; Sectors per cluster calculation
  1504                                  	; (According to MS FAT32 FS specification.)
  1505 000007BF B102                    	mov	cl, 2  ; 2 sectors per cluster
  1506 000007C1 09D2                    	or	dx, dx
  1507 000007C3 7507                    	jnz	short FAT16_f_2 ; >2 sectors (>16MB)
  1508 000007C5 3DA87F                  	cmp	ax, 32680
  1509 000007C8 763C                    	jna	short FAT16_f_10 ; 2 sectors, <=16MB
  1510                                  	; > 16MB
  1511 000007CA EB38                    	jmp	short FAT16_f_9 ; 4 sectors per cluster
  1512                                  FAT16_f_2:
  1513 000007CC 83FA04                  	cmp	dx, 4  ; >= 262144 sectors ; >=128MB
  1514 000007CF 7708                    	ja	short FAT16_f_3 ; >4 sectors per cluster
  1515 000007D1 7231                    	jb	short FAT16_f_9 ; 4 sectors per cluster	
  1516 000007D3 09C0                    	or	ax, ax ; dx_ax = (4*65536)+0
  1517 000007D5 742D                    	jz	short FAT16_f_9 ; 4 sectors per cluster
  1518 000007D7 EB29                    	jmp	short FAT16_f_8 ; 8 sectors per cluster
  1519                                  FAT16_f_3:
  1520 000007D9 83FA08                  	cmp	dx, 8  ; >= 524288 sectors ; >=256MB
  1521 000007DC 7708                    	ja	short FAT16_f_4 ; >8 sectors per cluster
  1522 000007DE 7222                    	jb	short FAT16_f_8 ; 8 sectors per cluster	
  1523 000007E0 21C0                    	and	ax, ax ; dx_ax = (8*65536)+0
  1524 000007E2 741E                    	jz	short FAT16_f_8 ; 8 sectors per cluster
  1525 000007E4 EB1A                    	jmp	short FAT16_f_7 ; 16 sectors per cluster
  1526                                  FAT16_f_4:
  1527 000007E6 83FA10                  	cmp	dx, 16 ; >= 1048576 sectors ; >=512MB
  1528 000007E9 7708                    	ja	short FAT16_f_5 ; >16 sectors per cluster
  1529 000007EB 7213                    	jb	short FAT16_f_7 ; 16 sectors per cluster	
  1530 000007ED 21C0                    	and	ax, ax ; dx_ax = (16*65536)+0
  1531 000007EF 740F                    	jz	short FAT16_f_7 ; 16 sectors per cluster
  1532 000007F1 EB0B                    	jmp	short FAT16_f_6 ; 32 sectors per cluster
  1533                                  FAT16_f_5:
  1534 000007F3 83FA20                  	cmp	dx, 32 ; >= 2097152 sectors ; >=1GB
  1535 000007F6 7206                    	jb	short FAT16_f_6 ; 32 sectors per cluster
  1536 000007F8 09C0                    	or	ax, ax		; dx_ax = (32*65536)+0
  1537 000007FA 7402                    	jz	short FAT16_f_6 ; 32 sectors per cluster
  1538                                  	; >1GB (<=2GB)
  1539                                  	; 64 sectors per cluster
  1540 000007FC D0E1                    	shl	cl, 1
  1541                                  FAT16_f_6:
  1542                                  	; 32 sectors per cluster (for <= 2GB volumes)
  1543 000007FE D0E1                    	shl	cl, 1	
  1544                                  FAT16_f_7:
  1545                                  	; 16 sectors per cluster (for <= 1GB volumes)
  1546 00000800 D0E1                    	shl	cl, 1
  1547                                  FAT16_f_8:
  1548                                  	; 8 sectors per cluster (for <= 512MB volumes)
  1549 00000802 D0E1                    	shl	cl, 1	
  1550                                  FAT16_f_9:
  1551                                  	; 4 sectors per cluster (for <= 256MB volumes)
  1552 00000804 D0E1                    	shl	cl, 1	
  1553                                  FAT16_f_10:	
  1554                                  	; 2 sectors per cluster (for <= 128MB volumes)
  1555 00000806 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
  1556                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
  1557                                  	;mov	word [bp+0Eh], 1 ; [BPB_RsvdSecCnt] 
  1558                                  	;mov	word [bp+11h], 512 ; [BPB_RootEntCnt]
  1559                                  	
  1560                                  	; Calculating FAT size in sectors
  1561                                  	; (According to MS FAT32 FS Specification, 2000)
  1562                                  
  1563                                  	; DX_AX = partition (volume) size in sectors
  1564 00000809 8B5E11                  	mov	bx, [bp+11h]	; [BPB_RootEntCnt] = 512
  1565 0000080C 83C30F                  	add	bx, 15 ; bx = 527
  1566 0000080F C1EB04                  	shr	bx, 4 ; /16 = 527/16 = 32
  1567                                  		; ((32*BX)+511)/512
  1568 00000812 891E[C420]              	mov	[root_dir_secs], bx
  1569 00000816 035E0E                  	add	bx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1570 00000819 29D8                    	sub	ax, bx
  1571 0000081B 83DA00                  	sbb	dx, 0
  1572                                  		; TmpVal1 = DiskSize - (BPB_ResvdSecCnt +
  1573                                  		;	     		RootDirsectors)
  1574                                  	;mov	bx, cx ; ch = 0
  1575                                  	;shl	bx, 8 ; * 256
  1576 0000081E 88CF                    	mov	bh, cl
  1577 00000820 30DB                    	xor	bl, bl
  1578 00000822 B102                    	mov	cl, 2 ; [BPB_NumFATs] 
  1579 00000824 01CB                    	add	bx, cx	
  1580                                  		; TmpVal2 = (256*BPB_SecPerClus)+BPB_NumFATs
  1581 00000826 89D9                    	mov	cx, bx
  1582 00000828 4B                      	dec	bx  ; TmpVal2-1
  1583 00000829 01D8                    	add	ax, bx
  1584 0000082B 83D200                  	adc	dx, 0
  1585 0000082E E86D03                  	call	div32
  1586                                  		; FATSz = (TmpVal1+(TmpVal2-1))/TmpVal2
  1587                                  	; AX = FAT size in sectors
  1588                                  	; DX = 0
  1589 00000831 894616                  	mov	[bp+16h], ax	; [BPB_FATSz16]
  1590                                  	; * 2
  1591 00000834 D1E0                    	shl	ax, 1
  1592                                  	; AX = [BPB_NumFATs] * [BPB_FATSz16]
  1593 00000836 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1594 00000839 01C1                    	add	cx, ax
  1595                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1596 0000083B 030E[C420]              	add	cx, [root_dir_secs] ; + RootDirsectors
  1597 0000083F 29DB                    	sub	bx, bx ; BX = 0
  1598                                  	; BX_CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1599                                  	;	  + RootDirSectors
  1600 00000841 8B4613                  	mov	ax, [bp+13h]	; [BPB_TotSec16]
  1601                                  	;sub	dx, dx 
  1602                                  	; DX = 0
  1603 00000844 21C0                    	and	ax, ax
  1604 00000846 7506                    	jnz	short FAT16_f_11
  1605 00000848 8B4620                  	mov	ax, [bp+20h]	; [BPB_TotSec32]
  1606 0000084B 8B5622                  	mov	dx, [bp+22h]	; [BPB_TotSec32+2]
  1607                                  FAT16_f_11:
  1608 0000084E 29C8                    	sub	ax, cx
  1609 00000850 19DA                    	sbb	dx, bx
  1610 00000852 890E[B820]              	mov	[data_start], cx
  1611 00000856 891E[BA20]              	mov	[data_start+2], bx
  1612                                  	; DX_AX = Data sectors
  1613 0000085A A3[BC20]                	mov	[data_sectors], ax
  1614 0000085D 8916[BE20]              	mov	[data_sectors+2], dx
  1615 00000861 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1616 00000864 30ED                    	xor	ch, ch
  1617 00000866 E83503                  	call	div32 ; DX_AX/CX
  1618                                  	; AX = Count of clusters (rounded down)
  1619                                  	; DX = 0
  1620 00000869 A3[C020]                	mov	[cluster_count], ax
  1621 0000086C 8916[C220]              	mov	[cluster_count+2], dx
  1622                                  
  1623 00000870 8D7E2B                  	lea	di, [bp+43] ; [BS_VolLab]
  1624 00000873 E887FD                  	call	write_volume_name
  1625 00000876 8D7627                  	lea	si, [bp+39] ; [BS_VolID]
  1626 00000879 E8E0FD                  	call	write_volume_serial
  1627 0000087C E8E0FE                  	call	write_cluster_count	
  1628                                  
  1629 0000087F E861FE                  	call	write_formatting_msg
  1630 00000882 B000                    	mov	al, 0
  1631 00000884 E8B9FE                  	call	write_format_percent_x
  1632                                  
  1633 00000887 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
  1634 0000088A 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1635                                  
  1636 0000088D 0106[B820]              	add	[data_start], ax
  1637 00000891 1116[BA20]              	adc	[data_start+2], dx
  1638                                  
  1639                                  	; DX_AX = FAT16 Boot Sector address
  1640 00000895 BB[DE0D]                	mov	bx, RD_FAT16_hd_bs
  1641                                  	; ES:BX = Boot Sector Buffer
  1642 00000898 E8E1FA                  	call	write_hd_sector
  1643 0000089B 0F82A8FE                	jc	formatting_error
  1644 0000089F E865FE                  	call	write_format_percent
  1645 000008A2 83C001                  	add	ax, 1
  1646 000008A5 83D200                  	adc	dx, 0
  1647                                  	; write remain part of reserved sectors
  1648 000008A8 8B4E0E                  	mov	cx, [bp+0Eh] ; [BPB_RsvdSecCnt]
  1649                                  	;sub	cx, 1
  1650                                  	;jna	short FAT16_f_13
  1651 000008AB 49                      	dec	cx
  1652 000008AC 7418                    	jz	short FAT16_f_13
  1653                                  FAT16_f_12:
  1654 000008AE 51                      	push	cx
  1655 000008AF BB[B81E]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1656 000008B2 E8C7FA                  	call	write_hd_sector
  1657 000008B5 0F828EFE                	jc	formatting_error
  1658 000008B9 E84BFE                  	call	write_format_percent
  1659 000008BC 83C001                  	add	ax, 1
  1660 000008BF 83D200                  	adc	dx, 0
  1661 000008C2 59                      	pop	cx
  1662 000008C3 49                      	dec	cx ; dec cl
  1663 000008C4 75E8                    	jnz	short FAT16_f_12
  1664                                  FAT16_f_13:
  1665                                  	; write FAT sectors
  1666 000008C6 8B0E[B820]              	mov	cx, [data_start] ; lba/abs addr
  1667 000008CA 8B1E[BA20]              	mov	bx, [data_start+2] ; lba/abs addr
  1668                                  
  1669 000008CE 2B0E[C420]              	sub	cx, [root_dir_secs]
  1670 000008D2 83DB00                  	sbb	bx, 0
  1671                                  
  1672 000008D5 53                      	push	bx
  1673 000008D6 51                      	push	cx
  1674 000008D7 BB[B81E]                	mov	bx, HDFORMAT_FATBUFFER
  1675                                  	; ES:BX = FAT Sector Buffer
  1676 000008DA 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
  1677 000008DD B5FF                    	mov	ch, 0FFh
  1678 000008DF 890F                    	mov	[bx], cx ; 0FFF8h
  1679 000008E1 88E9                    	mov	cl, ch ; cx = 0FFFFh
  1680 000008E3 894F02                  	mov	[bx+2], cx
  1681                                  	;inc	cx
  1682 000008E6 E893FA                  	call	write_hd_sector
  1683 000008E9 0F825AFE                	jc	formatting_error
  1684 000008ED E817FE                  	call	write_format_percent
  1685                                  	;mov	bx, HDFORMAT_FATBUFFER
  1686 000008F0 B90000                  	mov	cx, 0
  1687 000008F3 890F                    	mov	[bx], cx
  1688 000008F5 894F02                  	mov	[bx+2], cx
  1689 000008F8 EB0F                    	jmp	short FAT16_f_15
  1690                                  FAT16_f_14:	
  1691 000008FA 53                      	push	bx
  1692 000008FB 51                      	push	cx	
  1693 000008FC BB[B81E]                	mov	bx, HDFORMAT_FATBUFFER
  1694 000008FF E87AFA                  	call	write_hd_sector
  1695 00000902 0F8241FE                	jc	formatting_error
  1696 00000906 E8FEFD                  	call	write_format_percent
  1697                                  FAT16_f_15:	
  1698 00000909 59                      	pop	cx
  1699 0000090A 5B                      	pop	bx
  1700 0000090B 83C001                  	add	ax, 1
  1701 0000090E 83D200                  	adc	dx, 0
  1702 00000911 39DA                    	cmp	dx, bx
  1703 00000913 72E5                    	jb	short FAT16_f_14
  1704 00000915 39C8                    	cmp	ax, cx
  1705 00000917 72E1                    	jb	short FAT16_f_14
  1706                                  
  1707                                  	; write	root directory sectors
  1708                                  	; as empty sectors
  1709 00000919 8B0E[C420]              	mov	cx, [root_dir_secs]
  1710                                  FAT16_f_16:
  1711 0000091D 51                      	push	cx
  1712 0000091E BB[B81E]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1713 00000921 E858FA                  	call	write_hd_sector
  1714 00000924 0F821FFE                	jc	formatting_error
  1715 00000928 E8DCFD                  	call	write_format_percent
  1716 0000092B 83C001                  	add	ax, 1
  1717 0000092E 83D200                  	adc	dx, 0
  1718 00000931 59                      	pop	cx
  1719 00000932 49                      	dec	cx
  1720 00000933 75E8                    	jnz	short FAT16_f_16	
  1721                                  
  1722                                  	; write DATA sectors 
  1723                                  	; (after root directory sectors)
  1724 00000935 8B0E[BC20]              	mov	cx, [data_sectors]
  1725 00000939 8B1E[BE20]              	mov	bx, [data_sectors+2]
  1726 0000093D 43                      	inc	bx ; 0 -> 1, 1-> 2
  1727                                  FAT16_f_17:	
  1728 0000093E 53                      	push	bx
  1729 0000093F 51                      	push	cx	
  1730 00000940 BB[AC1A]                	mov	bx, HDFORMAT_SECBUFFER
  1731 00000943 E836FA                  	call	write_hd_sector
  1732 00000946 0F82FDFD                	jc	formatting_error
  1733 0000094A E8BAFD                  	call	write_format_percent
  1734 0000094D 59                      	pop	cx
  1735 0000094E 5B                      	pop	bx
  1736 0000094F 83C001                  	add	ax, 1
  1737 00000952 83D200                  	adc	dx, 0
  1738 00000955 49                      	dec	cx
  1739 00000956 75E6                    	jnz	short FAT16_f_17
  1740 00000958 4B                      	dec	bx
  1741 00000959 75E3                    	jnz	short FAT16_f_17
  1742                                  
  1743                                  	; If there are, format remain sectors which are
  1744                                  	; at beyond of data clusters, with zero bytes.
  1745                                  	
  1746 0000095B 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  1747 0000095E 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  1748                                  
  1749 00000961 837E1300                	cmp	word [bp+13h], 0 ; [BPB_TotSec16]
  1750 00000965 0F845AFC                	jz	FAT16_f_18
  1751 00000969 034E13                  	add	cx, [bp+13h]	; [BPB_TotSec16]
  1752 0000096C 83D300                  	adc	bx, 0
  1753 0000096F E957FC                  	jmp	FAT16_f_19
  1754                                  
  1755                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1756                                  ; FAT12 FORMATTING
  1757                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  1758                                  
  1759                                  ; ((TRDOS 386 criter))
  1760                                  ; Minimum size of FAT12 FS = [heads]*[sectors]
  1761                                  ; (1 cylinder) 
  1762                                  
  1763                                  format_FAT12_fs:
  1764 00000972 BD[DE0B]                	mov	bp, RD_FAT12_hd_bs
  1765 00000975 8D7E03                  	lea	di, [bp+3]
  1766 00000978 BE[5418]                	mov	si, bs_oem_name
  1767 0000097B B90400                  	mov	cx, 4
  1768 0000097E F3A5                    	rep	movsw 
  1769 00000980 A1[E013]                	mov	ax, [sectors]
  1770 00000983 894618                  	mov	[bp+18h], ax	; [BPB_SecPerTrk]
  1771 00000986 A1[E213]                	mov	ax, [heads]
  1772 00000989 89461A                  	mov	[bp+1Ah], ax	; [BPB_NumHeads]
  1773 0000098C A1[B01E]                	mov	ax, [dosp_start]
  1774 0000098F 89461C                  	mov	[bp+1Ch], ax	; [BPB_HiddSec]
  1775 00000992 A1[B21E]                	mov	ax, [dosp_start+2]
  1776 00000995 89461E                  	mov	[bp+1Eh], ax	; [BPB_HiddSec+2]
  1777 00000998 A1[B41E]                	mov	ax, [dosp_size]
  1778 0000099B 894613                  	mov	[bp+13h], ax	; [BPB_TotSec16]
  1779                                  
  1780 0000099E 31F6                    	xor	si, si ; reset (FAT size fix) flag
  1781 000009A0 8B4E0E                  	mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1782 000009A3 8B5611                  	mov	dx, [bp+11h]	; [BPB_RootEntCnt] = 512
  1783 000009A6 83C20F                  	add	dx, 15	; (16-1) (512-1)
  1784 000009A9 C1EA04                  	shr	dx, 4	; /16  (*32/512)
  1785                                  	; AX = Root dir sectors
  1786                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1787 000009AC 01D1                    	add	cx, dx ; + RootDirsectors ; + 32
  1788 000009AE 890E[C420]              	mov	[root_dir_secs], cx ; = 33
  1789                                  
  1790                                  	;sub	ax, 33  ; 1 reserved sector, 32 root dir sectors
  1791                                  			; .. now AX has number of data sectors
  1792                                  			;	 		+ 2* (FAT sectors)
  1793 000009B2 29C8                    	sub	ax, cx	
  1794                                  FAT12_f_10:
  1795                                  	; Sectors per cluster calculation
  1796                                  	; (According to MS FAT32 FS specification.)
  1797                                  	;mov	cx, 1  ; 1 sector per cluster
  1798 000009B4 B101                    	mov	cl, 1  ; CH = 0
  1799                                  	; 28/10/2023 ; (BugFix)
  1800 000009B6 50                      	push	ax
  1801                                  FAT12_f_0:
  1802 000009B7 3DF50F                  	cmp	ax, 4085 ; Max. cluster count for FAT12
  1803 000009BA 7206                    	jb	short FAT12_f_1
  1804 000009BC D0E1                    	shl	cl, 1 ; *2
  1805 000009BE D1E8                    	shr	ax, 1 ; /2
  1806 000009C0 EBF5                    	jmp	short FAT12_f_0
  1807                                  FAT12_f_1:
  1808                                  	; 28/10/2023
  1809 000009C2 58                      	pop	ax
  1810 000009C3 884E0D                  	mov	[bp+0Dh], cl	 ; [BPB_SecPerClus]
  1811                                  	;mov	byte [bp+10h], 2 ; [BPB_NumFATs] 
  1812                                  	;mov	word [bp+0Eh], 1 ; [BPB_RsvdSecCnt] 
  1813                                  	;mov	word [bp+11h], 512 ; [BPB_RootEntCnt]
  1814                                  	
  1815                                  	; Calculating FAT size in sectors
  1816                                  	; AX = partition (volume) size in sectors
  1817                                  	; CX = sectors per clusters
  1818 000009C6 31D2                    	xor	dx, dx
  1819 000009C8 F7F1                    	div	cx
  1820                                  	; AX = cluster count (only for FAT size calc)
  1821                                  	; DX = 0
  1822 000009CA 83C002                  	add	ax, 2  ; cluster 2 to ...
  1823 000009CD 89C2                    	mov	dx, ax
  1824 000009CF D1E2                    	shl	dx, 1
  1825 000009D1 01D0                    	add	ax, dx ; *3
  1826 000009D3 D1E8                    	shr	ax, 1  ; /2
  1827 000009D5 83D000                  	adc	ax, 0  ; +0.5 -> +1
  1828                                  
  1829                                  	; AX = FAT bytes for 12 bit cluster numbers
  1830                                  	
  1831 000009D8 B90002                  	mov	cx, 512		; [BPB_BytesPerSec]
  1832 000009DB 01C8                    	add	ax, cx		
  1833 000009DD 48                      	dec	ax		; [BPB_BytesPerSec] - 1
  1834 000009DE 29D2                    	sub	dx, dx
  1835 000009E0 F7F1                    	div	cx
  1836 000009E2 894616                  	mov	[bp+16h], ax	; [BPB_FATSz16]
  1837                                  	; * 2
  1838 000009E5 D1E0                    	shl	ax, 1
  1839                                  	; AX = [BPB_NumFATs] * [BPB_FATSz16]
  1840                                  
  1841                                  	;mov	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1842                                  	;add	cx, ax
  1843                                  	;mov	ax, [bp+11h]	; [BPB_RootEntCnt] = 512
  1844                                  	;add	ax, 15	; (16-1) (512-1)
  1845                                  	;shr	ax, 4	; /16  (*32/512)
  1846                                  	;; AX = Root dir sectors
  1847                                  	;; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1848                                  	;add	cx, ax ; + RootDirsectors
  1849                                  	;mov	[root_dir_secs], ax
  1850                                  
  1851                                  	;mov	cx, 33
  1852 000009E7 8B0E[C420]              	mov	cx, [root_dir_secs]
  1853 000009EB 034E0E                  	add	cx, [bp+0Eh]	; [BPB_RsvdSecCnt] ; 1
  1854                                  		; cx = root directory sectors + reserved sectors
  1855 000009EE 01C1                    	add	cx, ax
  1856                                  	; CX = [BPB_RsvdSecCnt]+([BPB_NumFATs]*[BPB_FATSz16])
  1857                                  	;	  + RootDirSectors
  1858 000009F0 8B4613                  	mov	ax, [bp+13h]	; [BPB_TotSec16]
  1859 000009F3 29C8                    	sub	ax, cx
  1860                                  		 ; AX = data sectors
  1861                                  		 ; cH = 0
  1862                                  
  1863                                  	; fix FAT size (better method)
  1864 000009F5 09F6                    	or	si, si
  1865 000009F7 7504                    	jnz	short FAT12_f_9
  1866                                  
  1867 000009F9 89C6                    	mov	si, ax  ; ax = data sectors
  1868 000009FB EBB7                    	jmp	short FAT12_f_10
  1869                                  
  1870                                  FAT12_f_9:
  1871 000009FD 31D2                    	xor	dx, dx
  1872 000009FF 890E[B820]              	mov	[data_start], cx
  1873 00000A03 8916[BA20]              	mov	[data_start+2], dx ; 0
  1874                                  	; DX_AX = Data sectors
  1875 00000A07 A3[BC20]                	mov	[data_sectors], ax
  1876 00000A0A 8916[BE20]              	mov	[data_sectors+2], dx ; 0
  1877 00000A0E 8A4E0D                  	mov	cl, [bp+0Dh]	 ; [BPB_SecPerClus]
  1878 00000A11 28ED                    	sub	ch, ch
  1879 00000A13 F7F1                    	div	cx
  1880                                  	; AX = Count of clusters (rounded down)
  1881 00000A15 29D2                    	sub	dx, dx ; 0
  1882 00000A17 A3[C020]                	mov	[cluster_count], ax
  1883 00000A1A 8916[C220]              	mov	[cluster_count+2], dx ; 0
  1884                                  
  1885 00000A1E 8D7E2B                  	lea	di, [bp+43] ; [BS_VolLab]
  1886 00000A21 E8D9FB                  	call	write_volume_name
  1887 00000A24 8D7627                  	lea	si, [bp+39] ; [BS_VolID]
  1888 00000A27 E832FC                  	call	write_volume_serial
  1889 00000A2A E832FD                  	call	write_cluster_count	
  1890                                  
  1891 00000A2D E8B3FC                  	call	write_formatting_msg
  1892 00000A30 B000                    	mov	al, 0
  1893 00000A32 E80BFD                  	call	write_format_percent_x
  1894                                  
  1895 00000A35 8B461C                  	mov	ax, [bp+1Ch]	; [BPB_HiddSec]
  1896 00000A38 8B561E                  	mov	dx, [bp+1Eh]	; [BPB_HiddSec+2]
  1897                                  
  1898 00000A3B 0106[B820]              	add	[data_start], ax
  1899 00000A3F 1116[BA20]              	adc	[data_start+2], dx
  1900                                  
  1901                                  	; DX_AX = FAT12 Boot Sector address
  1902 00000A43 BB[DE0B]                	mov	bx, RD_FAT12_hd_bs
  1903                                  	; ES:BX = Boot Sector Buffer
  1904 00000A46 E833F9                  	call	write_hd_sector
  1905 00000A49 0F82FAFC                	jc	formatting_error
  1906 00000A4D E8B7FC                  	call	write_format_percent
  1907 00000A50 83C001                  	add	ax, 1
  1908 00000A53 83D200                  	adc	dx, 0
  1909                                  	; write remain part of reserved sectors
  1910 00000A56 8B4E0E                  	mov	cx, [bp+0Eh] ; [BPB_RsvdSecCnt]
  1911                                  	;sub	cx, 1
  1912                                  	;jna	short FAT12_f_3
  1913 00000A59 49                      	dec	cx
  1914 00000A5A 7418                    	jz	short FAT12_f_3
  1915                                  FAT12_f_2:
  1916 00000A5C 51                      	push	cx
  1917 00000A5D BB[B81E]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1918 00000A60 E819F9                  	call	write_hd_sector
  1919 00000A63 0F82E0FC                	jc	formatting_error
  1920 00000A67 E89DFC                  	call	write_format_percent
  1921 00000A6A 83C001                  	add	ax, 1
  1922 00000A6D 83D200                  	adc	dx, 0
  1923 00000A70 59                      	pop	cx
  1924 00000A71 49                      	dec	cx ; dec cl
  1925 00000A72 75E8                    	jnz	short FAT12_f_2
  1926                                  FAT12_f_3:
  1927                                  	; write FAT sectors
  1928 00000A74 8B0E[B820]              	mov	cx, [data_start] ; lba/abs addr
  1929 00000A78 8B1E[BA20]              	mov	bx, [data_start+2] ; lba/abs addr
  1930                                  
  1931 00000A7C 2B0E[C420]              	sub	cx, [root_dir_secs]
  1932 00000A80 83DB00                  	sbb	bx, 0
  1933                                  
  1934 00000A83 53                      	push	bx
  1935 00000A84 51                      	push	cx
  1936 00000A85 BB[B81E]                	mov	bx, HDFORMAT_FATBUFFER
  1937                                  	; ES:BX = FAT Sector Buffer
  1938 00000A88 8A4E15                  	mov	cl, [bp+15h] ; [BPB_Media]
  1939 00000A8B B5FF                    	mov	ch, 0FFh
  1940 00000A8D 890F                    	mov	[bx], cx ; 0FFF8h
  1941 00000A8F 886F02                  	mov	[bx+2], ch ; 0FFFFF8h
  1942                                  	;xor	cx, cx
  1943 00000A92 E8E7F8                  	call	write_hd_sector
  1944 00000A95 0F82AEFC                	jc	formatting_error
  1945 00000A99 E86BFC                  	call	write_format_percent
  1946                                  	;mov	bx, HDFORMAT_FATBUFFER
  1947 00000A9C B90000                  	mov	cx, 0
  1948 00000A9F 890F                    	mov	[bx], cx
  1949 00000AA1 884F02                  	mov	[bx+2], cl
  1950 00000AA4 EB0F                    	jmp	short FAT12_f_5
  1951                                  FAT12_f_4:	
  1952 00000AA6 53                      	push	bx
  1953 00000AA7 51                      	push	cx	
  1954 00000AA8 BB[B81E]                	mov	bx, HDFORMAT_FATBUFFER
  1955 00000AAB E8CEF8                  	call	write_hd_sector
  1956 00000AAE 0F8295FC                	jc	formatting_error
  1957 00000AB2 E852FC                  	call	write_format_percent
  1958                                  FAT12_f_5:	
  1959 00000AB5 59                      	pop	cx
  1960 00000AB6 5B                      	pop	bx
  1961 00000AB7 83C001                  	add	ax, 1
  1962 00000ABA 83D200                  	adc	dx, 0
  1963 00000ABD 39DA                    	cmp	dx, bx
  1964 00000ABF 72E5                    	jb	short FAT12_f_4
  1965 00000AC1 39C8                    	cmp	ax, cx
  1966 00000AC3 72E1                    	jb	short FAT12_f_4
  1967                                  
  1968                                  	; write	root directory sectors
  1969                                  	; as empty sectors
  1970 00000AC5 8B0E[C420]              	mov	cx, [root_dir_secs]
  1971                                  FAT12_f_6:
  1972 00000AC9 51                      	push	cx
  1973 00000ACA BB[B81E]                	mov	bx, HDFORMAT_EMPTY_BUFF
  1974 00000ACD E8ACF8                  	call	write_hd_sector
  1975 00000AD0 0F8273FC                	jc	formatting_error
  1976 00000AD4 E830FC                  	call	write_format_percent
  1977 00000AD7 83C001                  	add	ax, 1
  1978 00000ADA 83D200                  	adc	dx, 0
  1979 00000ADD 59                      	pop	cx
  1980 00000ADE 49                      	dec	cx ; dec cl
  1981 00000ADF 75E8                    	jnz	short FAT12_f_6
  1982                                  
  1983                                  	; write DATA sectors 
  1984                                  	; (after root directory sectors)
  1985 00000AE1 8B0E[BC20]              	mov	cx, [data_sectors]
  1986                                  	;mov	bx, [data_sectors+2]
  1987                                  	;inc	bx
  1988                                  FAT12_f_7:	
  1989                                  	;push	bx
  1990 00000AE5 51                      	push	cx	
  1991 00000AE6 BB[AC1A]                	mov	bx, HDFORMAT_SECBUFFER
  1992 00000AE9 E890F8                  	call	write_hd_sector
  1993 00000AEC 0F8257FC                	jc	formatting_error
  1994 00000AF0 E814FC                  	call	write_format_percent
  1995 00000AF3 59                      	pop	cx
  1996                                  	;pop	bx
  1997 00000AF4 83C001                  	add	ax, 1
  1998 00000AF7 83D200                  	adc	dx, 0
  1999 00000AFA 49                      	dec	cx
  2000 00000AFB 75E8                    	jnz	short FAT12_f_7
  2001                                  	;dec	bx
  2002                                  	;jnz	short FAT12_f_7
  2003                                  
  2004                                  	; If there are, format remain sectors which are
  2005                                  	; at beyond of data clusters, with zero bytes.
  2006                                  	
  2007 00000AFD 8B4E1C                  	mov	cx, [bp+1Ch]	; [BPB_HiddSec]
  2008 00000B00 8B5E1E                  	mov	bx, [bp+1Eh]	; [BPB_HiddSec+2]
  2009                                  
  2010 00000B03 034E13                  	add	cx, [bp+13h]	; [BPB_TotSec16]
  2011 00000B06 83D300                  	adc	bx, 0
  2012 00000B09 E9BDFA                  	jmp	FAT12_f_8
  2013                                  
  2014                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2015                                  ; Read & Write characters
  2016                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2017                                  
  2018                                  rw_char:
  2019                                  	; OUTPUT -> DS:SI = Entered String (ASCIIZ)
  2020 00000B0C BE[CC20]                	mov     si, StrVolumeName
  2021 00000B0F BB0700                  	mov     bx, 7
  2022 00000B12 B403                    	mov     ah, 3
  2023 00000B14 CD10                    	int     10h
  2024 00000B16 8916[4418]              	mov     [Cursor_Pos], dx
  2025                                  read_next_char:
  2026 00000B1A 30E4                    	xor     ah, ah
  2027 00000B1C CD16                    	int     16h
  2028 00000B1E 20C0                    	and     al, al
  2029 00000B20 7439                    	jz      short loc_arrow    
  2030 00000B22 3CE0                    	cmp     al, 0E0h          
  2031 00000B24 7435                    	je      short loc_arrow
  2032 00000B26 3C08                    	cmp     al, 8
  2033 00000B28 753D                    	jne     short char_return
  2034                                  loc_back:
  2035 00000B2A B403                    	mov     ah, 3
  2036 00000B2C CD10                    	int     10h
  2037 00000B2E 3A16[4418]              	cmp     dl, byte [Cursor_Pos]
  2038 00000B32 761F                    	jna     short loc_beep
  2039                                  prev_column:
  2040 00000B34 FECA                    	dec     dl
  2041                                  set_cursor_pos:
  2042 00000B36 B402                    	mov     ah, 2
  2043 00000B38 CD10                    	int     10h
  2044 00000B3A 88D3                    	mov     bl, dl
  2045 00000B3C 2A1E[4418]              	sub     bl, byte [Cursor_Pos] 
  2046 00000B40 B90100                  	mov     cx, 1
  2047 00000B43 B409                    	mov     ah, 9
  2048 00000B45 B020                    	mov     al, 20h
  2049 00000B47 8800                    	mov     [si+bx], al
  2050                                  loc_write_it:
  2051 00000B49 B307                    	mov     bl, 7
  2052 00000B4B CD10                    	int     10h
  2053 00000B4D 8B16[4418]              	mov     dx, [Cursor_Pos]
  2054 00000B51 EBC7                    	jmp     short read_next_char
  2055                                  loc_beep:
  2056 00000B53 B40E                    	mov     ah, 0Eh
  2057 00000B55 B007                    	mov     al, 7
  2058 00000B57 CD10                    	int     10h
  2059 00000B59 EBBF                    	jmp     short read_next_char
  2060                                  loc_arrow:    
  2061 00000B5B 80FC4B                  	cmp     ah, 4Bh
  2062 00000B5E 74CA                    	je      short loc_back
  2063 00000B60 80FC53                  	cmp     ah, 53h
  2064 00000B63 74C5                    	je      short loc_back
  2065 00000B65 EBB3                    	jmp     short read_next_char
  2066                                  char_return:
  2067 00000B67 B403                    	mov     ah, 3
  2068 00000B69 CD10                    	int     10h
  2069                                  check_char_type:
  2070 00000B6B 3C20                    	cmp     al, 20h
  2071 00000B6D 7229                    	jb      short loc_escape
  2072 00000B6F 88D4                    	mov     ah, dl
  2073 00000B71 2A26[4418]              	sub     ah, byte [Cursor_Pos]
  2074                                  	;cmp	ah, 10 
  2075                                  	;ja	short loc_beep
  2076 00000B75 3A26[5318]              	cmp     ah, [vname_length]
  2077 00000B79 73D8                    	jnb	short loc_beep
  2078 00000B7B 3C7A                    	cmp     al, 'z'
  2079 00000B7D 779B                    	ja      short read_next_char
  2080 00000B7F 3C61                    	cmp     al, 'a'
  2081 00000B81 7202                    	jb      short pass_capitalize
  2082 00000B83 24DF                    	and     al, 0DFh
  2083                                  pass_capitalize:
  2084 00000B85 88E3                    	mov     bl, ah 
  2085 00000B87 30E4                    	xor     ah, ah
  2086 00000B89 8900                    	mov     [si+bx], ax
  2087 00000B8B B307                    	mov     bl, 7
  2088 00000B8D B40E                    	mov     ah, 0Eh
  2089 00000B8F CD10                    	int     10h
  2090 00000B91 EB87                    	jmp     short read_next_char
  2091                                  pass_escape:
  2092 00000B93 3C0D                    	cmp     al, 0Dh	; 13 ; ENTER
  2093 00000B95 7583                    	jne     short read_next_char
  2094                                  	;mov	ah, 0Eh
  2095                                  	;int	10h
  2096                                  	;mov	al, 0Ah
  2097                                  	;int	10h
  2098 00000B97 C3                      	retn
  2099                                  loc_escape:
  2100 00000B98 3C1B                    	cmp     al, 1Bh	; 27 ; ESC
  2101 00000B9A 75F7                    	jne     short pass_escape
  2102 00000B9C F9                      	stc
  2103 00000B9D C3                      	retn
  2104                                  
  2105                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2106                                  ; 32 bit division
  2107                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2108                                  
  2109                                  div32:
  2110                                  	; DX_AX/CX
  2111                                  	; Result: DX_AX, BX (remainder) 
  2112 00000B9E 89C3                    	mov	bx, ax
  2113                                  	;or	dx, ax ; * DX_AX = 0 ?       
  2114                                  	;jz	short div32_retn ; yes, do not divide! 
  2115 00000BA0 89D0                    	mov	ax, dx
  2116 00000BA2 31D2                            xor	dx, dx
  2117 00000BA4 F7F1                            div	cx	; at first, divide DX
  2118                                  			; remainder is in DX 
  2119 00000BA6 93                      	xchg	ax, bx	; now quotient is in BX
  2120                                    			; and initial AX value is in AX
  2121 00000BA7 F7F1                    	div	cx	; now, DX_AX has been divided and
  2122                                  			; AX has quotient
  2123                                  			; DX has remainder
  2124 00000BA9 87D3                    	xchg	dx, bx	; finally, BX has remainder
  2125                                  ;div32_retn:
  2126 00000BAB C3                              retn
  2127                                  
  2128                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2129                                  ; Convert byte to decimal number
  2130                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2131                                  
  2132                                  bin_to_decimal:
  2133                                  	; INPUT: DS:SI = Target location
  2134                                  	;        DX_AX = Binary Number (Integer)
  2135                                  	; OUTPUT: Decimal char at DS:SI
  2136                                  	; 	 SI decremented after every division
  2137                                  	; 	 till AX<10.
  2138                                  	; CX, DX, BX will be changed.
  2139                                  	;
  2140 00000BAC B90A00                  	mov	cx, 10
  2141                                  btd_0:
  2142                                  	; DX_AX = Dividend
  2143                                  	; CX = Divisor
  2144 00000BAF E8ECFF                  	call	div32
  2145                                  	; DX_AX = Quotient
  2146                                  	; BX = remainder
  2147 00000BB2 80C330                  	add	bl, '0'
  2148 00000BB5 881C                    	mov	[si], bl
  2149 00000BB7 21D2                    	and	dx, dx
  2150 00000BB9 7403                    	jz	short btd_2
  2151                                  btd_1:
  2152 00000BBB 4E                      	dec	si
  2153 00000BBC EBF1                    	jmp	short btd_0
  2154                                  btd_2:
  2155 00000BBE 09C0                    	or	ax, ax
  2156 00000BC0 75F9                    	jnz	short btd_1
  2157                                  
  2158 00000BC2 C3                      	retn
  2159                                  
  2160                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2161                                  ; Convert byte to hexadecimal number
  2162                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2163                                  
  2164                                  byte_to_hex:
  2165                                  bin_to_hex:
  2166                                  	; INPUT ->
  2167                                  	; 	AL = byte (binary number)
  2168                                  	; OUTPUT ->
  2169                                  	;	AX = hexadecimal string
  2170                                  	;
  2171 00000BC3 53                      	push	bx
  2172 00000BC4 31DB                    	xor	bx, bx
  2173 00000BC6 88C3                    	mov	bl, al
  2174 00000BC8 C0EB04                  	shr	bl, 4
  2175 00000BCB 8A9F[3418]              	mov	bl, [bx+hexchrs] 	 	
  2176 00000BCF 86D8                    	xchg	bl, al
  2177 00000BD1 80E30F                  	and	bl, 0Fh
  2178 00000BD4 8AA7[3418]              	mov	ah, [bx+hexchrs] 
  2179 00000BD8 5B                      	pop	bx	
  2180 00000BD9 C3                      	retn
  2181                                  
  2182                                  ; ----------------------------------------------------------------------------
  2183                                  ; initialized data
  2184                                  ; ----------------------------------------------------------------------------
  2185                                  
  2186                                  align 2
  2187                                  
  2188                                  trdos386fc:
  2189 00000BDA [7607]                  	dw format_FAT16_fs
  2190 00000BDC 0000                    	dw 0
  2191                                  
  2192                                  ;volume_id:
  2193                                  ;	dd 0
  2194                                  
  2195                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2196                                  ;  FAT boot sector code
  2197                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2198                                  
  2199                                  RD_FAT12_hd_bs:
  2200 00000BDE <bin 200h>              	incbin	'RD2HDBS.BIN'
  2201                                  RD_FAT16_hd_bs: 
  2202 00000DDE <bin 200h>              	incbin	'RD4HDBS.BIN'
  2203                                  RD_FAT32_hd_bs: 
  2204 00000FDE <bin 400h>              	incbin	'FAT32_BS.BIN'
  2205                                  
  2206                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2207                                  ;  messages
  2208                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2209                                  
  2210 000013DE 00                      lba:	db 0
  2211                                  
  2212 000013DF 00                      drv:	db 0
  2213                                  
  2214 000013E0 00                      sectors: db 0
  2215 000013E1 00                      	 db 0
  2216 000013E2 00                      heads:	 db 0
  2217 000013E3 00                      	 db 0
  2218 000013E4 0000                    cylinders: dw 0
  2219                                  
  2220                                  RD_Welcome:
  2221 000013E6 0D0A                    	db 0Dh, 0Ah
  2222 000013E8 526574726F20444F53-     	db 'Retro DOS v4 Hard Disk Partition Formatting Utility '
  2222 000013F1 207634204861726420-
  2222 000013FA 4469736B2050617274-
  2222 00001403 6974696F6E20466F72-
  2222 0000140C 6D617474696E672055-
  2222 00001415 74696C69747920     
  2223 0000141C 0D0A                    	db 0Dh, 0Ah
  2224 0000141E 76312E302E32333130-     	db 'v1.0.231028  (c) Erdogan TAN 2020-2023 '
  2224 00001427 323820202863292045-
  2224 00001430 72646F67616E205441-
  2224 00001439 4E20323032302D3230-
  2224 00001442 323320             
  2225 00001445 0D0A                    	db 0Dh,0Ah
  2226 00001447 0D0A                    	db 0Dh,0Ah
  2227 00001449 55736167653A206864-     	db 'Usage: hdformat <drive> '
  2227 00001452 666F726D6174203C64-
  2227 0000145B 726976653E20       
  2228 00001461 0D0A0D0A                	db 0Dh,0Ah, 0Dh, 0Ah
  2229 00001465 4472697665206E616D-     	db 'Drive names: '
  2229 0000146E 65733A20           
  2230 00001472 0D0A                    	db 0Dh, 0Ah
  2231 00001474 20686430206F722043-     	db ' hd0 or C: ..for primary dos partition on 1st disk '
  2231 0000147D 3A202E2E666F722070-
  2231 00001486 72696D61727920646F-
  2231 0000148F 732070617274697469-
  2231 00001498 6F6E206F6E20317374-
  2231 000014A1 206469736B20       
  2232 000014A7 0D0A                    	db 0Dh, 0Ah
  2233 000014A9 20686431206F722044-     	db ' hd1 or D: ..for primary dos partition on 2nd disk '
  2233 000014B2 3A202E2E666F722070-
  2233 000014BB 72696D61727920646F-
  2233 000014C4 732070617274697469-
  2233 000014CD 6F6E206F6E20326E64-
  2233 000014D6 206469736B20       
  2234 000014DC 0D0A                    	db 0Dh, 0Ah
  2235 000014DE 206864322020202020-     	db ' hd2       ..for primary dos partition on 3rd disk '
  2235 000014E7 20202E2E666F722070-
  2235 000014F0 72696D61727920646F-
  2235 000014F9 732070617274697469-
  2235 00001502 6F6E206F6E20337264-
  2235 0000150B 206469736B20       
  2236 00001511 0D0A                    	db 0Dh, 0Ah
  2237 00001513 206864332020202020-     	db ' hd3       ..for primary dos partition on 4th disk '
  2237 0000151C 20202E2E666F722070-
  2237 00001525 72696D61727920646F-
  2237 0000152E 732070617274697469-
  2237 00001537 6F6E206F6E20347468-
  2237 00001540 206469736B20       
  2238 00001546 0D0A                    	db 0Dh, 0Ah
  2239 00001548 0D0A                    	db 0Dh, 0Ah
  2240 0000154A 204578616D706C653A-     	db ' Example: hdformat hd0 ', 0Dh, 0Ah
  2240 00001553 206864666F726D6174-
  2240 0000155C 20686430200D0A     
  2241 00001563 0D0A                    	db 0Dh, 0Ah	
  2242 00001565 4F7074696F6E616C3A-     	db 'Optional: hdformat -partition <drive> ', 0Dh, 0Ah
  2242 0000156E 206864666F726D6174-
  2242 00001577 202D70617274697469-
  2242 00001580 6F6E203C6472697665-
  2242 00001589 3E200D0A           
  2243 0000158D 0D0A                    	db 0Dh, 0Ah
  2244 0000158F 204578616D706C653A-     	db ' Example: hdformat -1 hd1 (partition 1 on 2nd disk) '
  2244 00001598 206864666F726D6174-
  2244 000015A1 202D31206864312028-
  2244 000015AA 706172746974696F6E-
  2244 000015B3 2031206F6E20326E64-
  2244 000015BC 206469736B2920     
  2245 000015C3 0D0A                    	db 0Dh, 0Ah
  2246 000015C5 202020202020202020-     	db '          hdformat -2 hd0 (partition 2 on 1st disk) '     
  2246 000015CE 206864666F726D6174-
  2246 000015D7 202D32206864302028-
  2246 000015E0 706172746974696F6E-
  2246 000015E9 2032206F6E20317374-
  2246 000015F2 206469736B2920     
  2247 000015F9 0D0A                    	db 0Dh, 0Ah
  2248 000015FB 0D0A                    	db 0Dh, 0Ah
  2249 000015FD 4F7074696F6E733A20-     	db 'Options: 1  (partition 1) '
  2249 00001606 312020287061727469-
  2249 0000160F 74696F6E20312920   
  2250 00001617 0D0A                    	db 0Dh, 0Ah
  2251 00001619 202020202020202020-     	db '         2  (partition 2) '
  2251 00001622 322020287061727469-
  2251 0000162B 74696F6E20322920   
  2252 00001633 0D0A                    	db 0Dh, 0Ah
  2253 00001635 202020202020202020-     	db '         3  (partition 3) '
  2253 0000163E 332020287061727469-
  2253 00001647 74696F6E20332920   
  2254 0000164F 0D0A                      	db 0Dh, 0Ah
  2255 00001651 202020202020202020-     	db '         4  (partition 4) '
  2255 0000165A 342020287061727469-
  2255 00001663 74696F6E20342920   
  2256 0000166B 0D0A00                  	db 0Dh, 0Ah, 0
  2257                                  
  2258                                  partition:  ; selected partition (0 = primary dos partition)
  2259 0000166E 00                      	db 0
  2260                                  
  2261                                  RD_Format_warning:
  2262 0000166F 0D0A                    	db 0Dh, 0Ah
  2263 00001671 5741524E494E472021-     	db "WARNING ! ", 0Dh, 0Ah 
  2263 0000167A 200D0A             
  2264 0000167D 28496620796F752073-     	db "(If you say 'Yes', all of data in the primary DOS partition will be lost !) "
  2264 00001686 61792027596573272C-
  2264 0000168F 20616C6C206F662064-
  2264 00001698 61746120696E207468-
  2264 000016A1 65207072696D617279-
  2264 000016AA 20444F532070617274-
  2264 000016B3 6974696F6E2077696C-
  2264 000016BC 6C206265206C6F7374-
  2264 000016C5 20212920           
  2265                                  RD_Do_you_want:
  2266 000016C9 0D0A                    	db 0Dh, 0Ah
  2267 000016CB 0D0A                    	db 0Dh, 0Ah
  2268 000016CD 446F20796F75207761-     	db "Do you want to format DOS partition as Retro DOS FAT" 
  2268 000016D6 6E7420746F20666F72-
  2268 000016DF 6D617420444F532070-
  2268 000016E8 6172746974696F6E20-
  2268 000016F1 617320526574726F20-
  2268 000016FA 444F5320464154     
  2269                                  fattype_str:
  2270 00001701 3136206673203F2028-     	db "16 fs ? (Y/N) "
  2270 0000170A 592F4E2920         
  2271 0000170F 00                      	db 0
  2272                                  
  2273                                  _yes_str:
  2274 00001710 59455320                	db 'YES '
  2275 00001714 0D0A00                  	db 0Dh, 0Ah, 0
  2276                                  _no_str:
  2277 00001717 4E4F20                  	db 'NO '
  2278 0000171A 0D0A00                  	db 0Dh, 0Ah, 0
  2279                                  
  2280                                  _msg_OK:
  2281                                  	;db	07h
  2282 0000171D 0D0A                    	db	0Dh, 0Ah
  2283 0000171F 4F4B2E                  	db	"OK."
  2284                                  RD_CRLF:
  2285 00001722 0D0A00                  	db	0Dh, 0Ah, 0
  2286                                  
  2287                                  RD_PressKeyWhenReady:
  2288 00001725 0D0A                    	db 0Dh, 0Ah
  2289 00001727 507265737320456E74-     	db 'Press Enter to format primary dos partition on hd'
  2289 00001730 657220746F20666F72-
  2289 00001739 6D6174207072696D61-
  2289 00001742 727920646F73207061-
  2289 0000174B 72746974696F6E206F-
  2289 00001754 6E206864           
  2290                                  RD_Drive:
  2291 00001758 3F2E2000                	db '?. ', 0
  2292                                  
  2293                                  RD_disk_NotReadyOrError:
  2294 0000175C 0D0A                    	db 0Dh, 0Ah
  2295 0000175E 4469736B206572726F-     	db 'Disk error or drive not ready ! '
  2295 00001767 72206F722064726976-
  2295 00001770 65206E6F7420726561-
  2295 00001779 6479202120         
  2296 0000177E 54727920616761696E-     zbyte:	db 'Try again ? (Y/N) '
  2296 00001787 203F2028592F4E2920 
  2297 00001790 00                      	db 0
  2298                                  
  2299                                  RD_psize_defect:
  2300 00001791 0D0A                    	db 0Dh, 0Ah
  2301 00001793 4D4252207061727469-     	db 'MBR partition size defect ! '
  2301 0000179C 74696F6E2073697A65-
  2301 000017A5 206465666563742021-
  2301 000017AE 20                 
  2302 000017AF 0D0A                    	db 0Dh, 0Ah
  2303 000017B1 286C65737320746861-     	db '(less than the minimum number of sectors required) '	
  2303 000017BA 6E20746865206D696E-
  2303 000017C3 696D756D206E756D62-
  2303 000017CC 6572206F6620736563-
  2303 000017D5 746F72732072657175-
  2303 000017DE 697265642920       
  2304 000017E4 00                      	db 0
  2305                                  
  2306                                  RD_fatp_notfound:
  2307 000017E5 0D0A                    	db 0Dh, 0Ah
  2308 000017E7 4D425220646F657320-     	db 'MBR does not contain '
  2308 000017F0 6E6F7420636F6E7461-
  2308 000017F9 696E20             
  2309                                  a_p_d_p:
  2310 000017FC 61207072696D617279-     	db 'a primary DOS partition ! '	
  2310 00001805 20444F532070617274-
  2310 0000180E 6974696F6E202120   
  2311                                  fattype:
  2312 00001816 00                      	db 0
  2313                                  ;RetryCount:
  2314                                  ;	db 4
  2315                                  
  2316                                  ;error: db 0
  2317                                  
  2318                                  not_primary_dos_p:
  2319 00001817 0D0A                    	db 0Dh, 0Ah
  2320 00001819 53656C656374656420-     	db 'Selected partition is not '
  2320 00001822 706172746974696F6E-
  2320 0000182B 206973206E6F7420   
  2321 00001833 00                      	db 0
  2322                                  
  2323                                  ;align 2
  2324                                  align 4
  2325                                  
  2326                                  hexchrs:
  2327 00001834 303132333435363738-     	db	'0123456789ABCDEF'
  2327 0000183D 39414243444546     
  2328                                  
  2329                                  Cursor_Pos: ; dw 0
  2330                                  CHS_limit:  ; dword	 
  2331 00001844 0000                    	dw 0
  2332                                  	;dw 0
  2333                                  
  2334 00001846 A101                    sign:	dw 417	; magic word
  2335                                  
  2336                                  ;align 4 
  2337                                  
  2338                                  msg_sectors_crlf:
  2339 00001848 20736563746F72          	db	" sector"
  2340                                  msg_sectors_crlf_s:
  2341 0000184F 73                      	db	"s"
  2342 00001850 0D0A00                  	db	0Dh, 0Ah, 0
  2343                                  
  2344                                  vname_length:
  2345 00001853 00                      	db	0
  2346                                  
  2347                                  bs_oem_name:
  2348                                  	;db	'TRDOS2.0', 0
  2349                                  	; 28/10/2023
  2350 00001854 524554524F444F5300      	db	'RETRODOS', 0
  2351                                  
  2352 0000185D 90                      align 2
  2353                                  
  2354                                  no_name:
  2355 0000185E 4E4F204E414D452020-     	db 	'NO NAME    ', 0
  2355 00001867 202000             
  2356                                  
  2357                                  Msg_Volume_Name:
  2358 0000186A 0D0A                    	db	0Dh, 0Ah
  2359 0000186C 0D0A                    	db	0Dh, 0Ah
  2360 0000186E 566F6C756D65204E61-     	db	"Volume Name: ", 0
  2360 00001877 6D653A2000         
  2361                                  
  2362                                  Msg_Volume_Serial:
  2363 0000187C 566F6C756D65205365-     	db	"Volume Serial No: "
  2363 00001885 7269616C204E6F3A20 
  2364                                  Vol_Serial1:
  2365 0000188E 30303030                	db	"0000"
  2366 00001892 2D                      	db	"-"
  2367                                  Vol_Serial2:
  2368 00001893 30303030                	db	"0000"
  2369 00001897 0D0A00                  	db	0Dh, 0Ah, 0
  2370                                  
  2371                                  msg_cluster_count:
  2372 0000189A 436C75737465722043-     	db	"Cluster Count: ", 0
  2372 000018A3 6F756E743A2000     
  2373                                  cluster_count_str:
  2374 000018AA 30303030303030          	db	"0000000"
  2375 000018B1 0D0A00                  	db	0Dh, 0Ah, 0
  2376                                  msg_formatting:
  2377 000018B4 466F726D617474696E-     	db	"Formatting ", 0
  2377 000018BD 672000             
  2378                                  format_percent_str:
  2379 000018C0 30303025                	db	"000%"
  2380 000018C4 00                      	db	0					
  2381                                  
  2382                                  Msg_3dot_OK:
  2383 000018C5 2E2E2E                  	db	'...'
  2384                                  Msg_OK:
  2385 000018C8 204F4B2E                	db	' OK.'
  2386                                  CRLF:
  2387 000018CC 0D0A00                  	db	0Dh, 0Ah, 0
  2388                                  
  2389                                  Msg_Error:
  2390 000018CF 0D0A                    	db	0Dh, 0Ah
  2391 000018D1 4572726F72202120        	db	'Error ! '
  2392 000018D9 28                      	db	'('
  2393                                  error_code:
  2394 000018DA 3030                    	dw	3030h
  2395 000018DC 68                      	db	'h'
  2396 000018DD 2920                    	db	') '
  2397 000018DF 0D0A                    	db	0Dh, 0Ah
  2398 000018E1 00                      	db	0
  2399                                  
  2400                                  FAT32_note:
  2401 000018E2 0D0A                    	db	0Dh, 0Ah
  2402 000018E4 0D0A                    	db	0Dh, 0Ah
  2403 000018E6 4E4F54453A20            	db	'NOTE: '
  2404 000018EC 0D0A                    	db	0Dh, 0Ah
  2405 000018EE 0D0A                    	db	0Dh, 0Ah
  2406 000018F0 526574726F20444F53-     	db	'Retro DOS v4.2 -MSDOS 6.22- does not recognize FAT32 file system.'
  2406 000018F9 2076342E32202D4D53-
  2406 00001902 444F5320362E32322D-
  2406 0000190B 20646F6573206E6F74-
  2406 00001914 207265636F676E697A-
  2406 0000191D 652046415433322066-
  2406 00001926 696C65207379737465-
  2406 0000192F 6D2E               
  2407 00001931 0D0A                    	db 	0Dh, 0Ah
  2408 00001933 526574726F20444F53-     	db	'Retro DOS v5 -PCDOS 7.1- FAT32 boot sector code is not ready (in 2023).'
  2408 0000193C 207635202D5043444F-
  2408 00001945 5320372E312D204641-
  2408 0000194E 54333220626F6F7420-
  2408 00001957 736563746F7220636F-
  2408 00001960 6465206973206E6F74-
  2408 00001969 207265616479202869-
  2408 00001972 6E2032303233292E   
  2409 0000197A 0D0A                    	db	0Dh, 0Ah
  2410 0000197C 0D0A                    	db	0Dh, 0Ah
  2411 0000197E 4275742C205452444F-     	db	'But, TRDOS386 recognizes FAT32 file system and its boot sector'
  2411 00001987 53333836207265636F-
  2411 00001990 676E697A6573204641-
  2411 00001999 5433322066696C6520-
  2411 000019A2 73797374656D20616E-
  2411 000019AB 642069747320626F6F-
  2411 000019B4 7420736563746F72   
  2412 000019BC 0D0A                    	db	0Dh, 0Ah
  2413 000019BE 77696C6C2062652075-     	db	'will be used to format the new FAT32 partition/volume.'
  2413 000019C7 73656420746F20666F-
  2413 000019D0 726D61742074686520-
  2413 000019D9 6E6577204641543332-
  2413 000019E2 20706172746974696F-
  2413 000019EB 6E2F766F6C756D652E 
  2414 000019F4 0D0A                    	db	0Dh, 0Ah
  2415 000019F6 0D0A                    	db	0Dh, 0Ah
  2416 000019F8 546865206B65726E65-     	db	'The kernel file name of the FAT32 boot sector is ', 34,'TRDOS386.SYS', 34,'.'
  2416 00001A01 6C2066696C65206E61-
  2416 00001A0A 6D65206F6620746865-
  2416 00001A13 20464154333220626F-
  2416 00001A1C 6F7420736563746F72-
  2416 00001A25 20697320225452444F-
  2416 00001A2E 533338362E53595322-
  2416 00001A37 2E                 
  2417 00001A38 0D0A                    	db	0Dh, 0Ah
  2418 00001A3A 526574726F20444F53-     	db	'Retro DOS v5 kernel file name will be ', 34, 'PCDOS.SYS', 34,'.'
  2418 00001A43 207635206B65726E65-
  2418 00001A4C 6C2066696C65206E61-
  2418 00001A55 6D652077696C6C2062-
  2418 00001A5E 6520225043444F532E-
  2418 00001A67 535953222E         
  2419 00001A6C 0D0A                    	db	0Dh, 0Ah
  2420 00001A6E 0D0A                    	db	0Dh, 0Ah 
  2421 00001A70 507265737320454E54-     	db	'Press ENTER to CONTINUE or press another key to CANCEL.'
  2421 00001A79 455220746F20434F4E-
  2421 00001A82 54494E5545206F7220-
  2421 00001A8B 707265737320616E6F-
  2421 00001A94 74686572206B657920-
  2421 00001A9D 746F2043414E43454C-
  2421 00001AA6 2E                 
  2422 00001AA7 0D0A0D0A00              	db	0Dh, 0Ah, 0Dh, 0Ah, 0
  2423                                  
  2424                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2425                                  ;  initialized buffers
  2426                                  ;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  2427                                  
  2428                                  HDFORMAT_SECBUFFER:
  2429 00001AAC F6<rep 200h>            	times	512 db 0F6h
  2430                                  HDFORMAT_FSINFO_BUFF:
  2431 00001CAC 52526141                	dd	41615252h  ; FSI_LeadSig
  2432 00001CB0 00<rep 1E0h>            	times	480 db 0   ; FSI_Reserved1
  2433 00001E90 72724161                	dd	61417272h  ; FSI_StrucSig
  2434 00001E94 FFFFFFFF                	dd	0FFFFFFFFh ; FSI_Free_Count
  2435 00001E98 02000000                	dd	000000002h ; FSI_Nxt_Free
  2436 00001E9C 00<rep Ch>              	times	12 db 0	   ; FSI_Reserved2
  2437 00001EA8 000055AA                	dd	0AA550000h ; FSI_TrailSig
  2438                                  
  2439                                  ;SizeOfFile equ $-100	  	
  2440                                  
  2441                                  ; ----------------------------------------------------------------------------
  2442                                  ; uninitialized data
  2443                                  ; ----------------------------------------------------------------------------
  2444                                  
  2445                                  bss_start:
  2446                                  
  2447                                  ABSOLUTE bss_start
  2448                                  
  2449                                  alignb 4
  2450                                  
  2451 00001EAC ??                      fsID:	resb 1
  2452 00001EAD ??                      rw:	resb 1
  2453 00001EAE ????                    csize:	resw 1 ; heads*spt (sectors per cylinder)
  2454                                  
  2455 00001EB0 ????????                dosp_start: resd 1 ; start sector of the (primary) dos partition
  2456 00001EB4 ????????                dosp_size:  resd 1 ; partition size in sectors	 
  2457                                  
  2458                                  MBR:
  2459                                  bootsector:
  2460                                  ; 	resb 512
  2461                                  HDFORMAT_FATBUFFER:
  2462                                  HDFORMAT_EMPTY_BUFF:
  2463 00001EB8 <res 200h>              	resb 512
  2464                                  
  2465                                  ;HDFORMAT_FATBUFFER:
  2466                                  ;HDFORMAT_EMPTY_BUFF:
  2467                                  ;	resb 512
  2468                                  
  2469 000020B8 ????????                data_start:	resd 1
  2470 000020BC ????????                data_sectors:	resd 1
  2471 000020C0 ????????                cluster_count:	resd 1
  2472 000020C4 ????                    root_dir_secs:	resw 1
  2473 000020C6 ????                    format_percent: resw 1
  2474 000020C8 ??                      prev_percent:	resb 1
  2475 000020C9 ??                      rsvdbyte:	resb 1
  2476                                  
  2477 000020CA ????                    old_sp:		resw 1
  2478                                  
  2479 000020CC <res Ch>                StrVolumeName:	resb 12
  2480                                  
  2481                                  end_bss:
