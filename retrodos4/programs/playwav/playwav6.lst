     1                                  ; ****************************************************************************
     2                                  ; playwav6.asm (for Retro DOS)
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; PLAYWAV6.COM ! AC'97 (ICH) .WAV PLAYER program by Erdogan TAN
     5                                  ;
     6                                  ; 30/05/2024
     7                                  ;
     8                                  ; [ Last Modification: 30/05/2024 ]
     9                                  ;
    10                                  ; Modified from PLAYWAV6.PRG .wav player program by Erdogan Tan, 27/11/2023
    11                                  ; Modified from PLAYWAV4.COM .wav player program by Erdogan Tan, 19/05/2024
    12                                  ;
    13                                  ; Assembler: NASM version 2.15
    14                                  ;	     nasm playwav6.asm -l playwav6.txt -o PLAYWAV6.COM	
    15                                  ; ----------------------------------------------------------------------------
    16                                  ; Derived from '.wav file player for DOS' Jeff Leyda, Sep 02, 2002
    17                                  
    18                                  ; previous version: playwav4.asm (19/05/2024)
    19                                  
    20                                  ; TUNELOOP version (playing without AC97 interrupt) - 06/11/2023 - Erdogan Tan
    21                                  ; sample rate conversion version - 18/11/2023 - Erdogan Tan
    22                                  
    23                                  ; CODE
    24                                  
    25                                  %macro sys_msg 2
    26                                     	; 30/05/2024
    27                                  	mov	si, %1	; message
    28                                    	mov	bl, %2	; text color
    29                                  	xor	bh, bh	; video page 0
    30                                  	mov	ah, 0Eh
    31                                  	call	p_msg
    32                                  %endmacro
    33                                  
    34                                  ; player internal variables and other equates.
    35                                  BUFFERSIZE      equ     64 * 1024       ; 64k file buffer size.
    36                                  ENDOFFILE       equ     BIT0            ; flag for knowing end of file
    37                                  
    38                                  [BITS 16]
    39                                  
    40                                  [ORG 100h] 
    41                                  
    42                                  	%include 'ac97.inc' ; 17/02/2017
     1                              <1> ; 11/11/2023
     2                              <1> ; 05/11/2023
     3                              <1> ; 03/11/2023
     4                              <1> ; 17/02/2017 (Erdogan Tan, PLAYWAV.ASM)
     5                              <1> ; constant.inc & codec.inc (for ICH AC97 wav player, 'PLAYWAV.COM') 
     6                              <1> 
     7                              <1> ; ----------------------------------------------------------------------------
     8                              <1> ; CONSTANT.INC
     9                              <1> ; ----------------------------------------------------------------------------
    10                              <1> 
    11                              <1> ;constants of stuff that seem hard to remember at times.
    12                              <1> 
    13                              <1> TRUE  EQU 1
    14                              <1> FALSE EQU 0
    15                              <1> 
    16                              <1> ENABLED  EQU 1
    17                              <1> DISABLED EQU 0
    18                              <1> 
    19                              <1> BIT0  EQU 1
    20                              <1> BIT1  EQU 2
    21                              <1> BIT2  EQU 4
    22                              <1> BIT3  EQU 8
    23                              <1> BIT4  EQU 10h
    24                              <1> BIT5  EQU 20h
    25                              <1> BIT6  EQU 40h
    26                              <1> BIT7  EQU 80h
    27                              <1> BIT8  EQU 100h
    28                              <1> BIT9  EQU 200h
    29                              <1> BIT10 EQU 400h
    30                              <1> BIT11 EQU 800h
    31                              <1> BIT12 EQU 1000h
    32                              <1> BIT13 EQU 2000h
    33                              <1> BIT14 EQU 4000h
    34                              <1> BIT15 EQU 8000h
    35                              <1> BIT16 EQU 10000h
    36                              <1> BIT17 EQU 20000h
    37                              <1> BIT18 EQU 40000h
    38                              <1> BIT19 EQU 80000h
    39                              <1> BIT20 EQU 100000h
    40                              <1> BIT21 EQU 200000h
    41                              <1> BIT22 EQU 400000h
    42                              <1> BIT23 EQU 800000h
    43                              <1> BIT24 EQU 1000000h
    44                              <1> BIT25 EQU 2000000h
    45                              <1> BIT26 EQU 4000000h
    46                              <1> BIT27 EQU 8000000h
    47                              <1> BIT28 EQU 10000000h
    48                              <1> BIT29 EQU 20000000h
    49                              <1> BIT30 EQU 40000000h
    50                              <1> BIT31 EQU 80000000h
    51                              <1> 
    52                              <1> ;special characters
    53                              <1> NUL     EQU 0
    54                              <1> NULL    EQU 0
    55                              <1> BELL    EQU 07
    56                              <1> BS      EQU 08
    57                              <1> TAB     EQU 09
    58                              <1> LF      EQU 10
    59                              <1> CR      EQU 13
    60                              <1> ESCAPE  EQU 27           ;ESC is a reserved word....
    61                              <1> 
    62                              <1> 
    63                              <1> ;file stuff
    64                              <1> READONLY  EQU   BIT0
    65                              <1> HIDDEN    EQU   BIT1
    66                              <1> SYSTEM    EQU   BIT2
    67                              <1> VOLUME    EQU   BIT3         ;ignored for file access
    68                              <1> DIRECTORY EQU   BIT4         ;must be 0 for file access
    69                              <1> ARCHIVE   EQU   BIT5
    70                              <1> SHAREABLE EQU   BIT7         ;for novell networks
    71                              <1> OPEN	EQU	2		; open existing file
    72                              <1> CREATE	EQU	1		; create new file
    73                              <1> 
    74                              <1> 
    75                              <1> ; PCI equates
    76                              <1> ; PCI function address (PFA)
    77                              <1> ; bit 31 = 1
    78                              <1> ; bit 23:16 = bus number     (0-255)
    79                              <1> ; bit 15:11 = device number  (0-31)
    80                              <1> ; bit 10:8 = function number (0-7)
    81                              <1> ; bit 7:0 = register number  (0-255)
    82                              <1> 
    83                              <1> IO_ADDR_MASK    EQU     0FFFEh          ; mask off bit 0 for reading BARs
    84                              <1> PCI_INDEX_PORT  EQU     0CF8h
    85                              <1> PCI_DATA_PORT   EQU     0CFCh
    86                              <1> PCI32           EQU     BIT31           ; bitflag to signal 32bit access
    87                              <1> PCI16           EQU     BIT30           ; bitflag for 16bit access
    88                              <1> 
    89                              <1> PCI_FN0         EQU     0 << 8
    90                              <1> PCI_FN1         EQU     1 << 8
    91                              <1> PCI_FN2         EQU     2 << 8
    92                              <1> PCI_FN3         EQU     3 << 8
    93                              <1> PCI_FN4         EQU     4 << 8
    94                              <1> PCI_FN5         EQU     5 << 8
    95                              <1> PCI_FN6         EQU     6 << 8
    96                              <1> PCI_FN7         EQU     7 << 8
    97                              <1> 
    98                              <1> PCI_CMD_REG		EQU	04h		; reg 04, command reg
    99                              <1>  IO_ENA			EQU	BIT0		; i/o decode enable
   100                              <1>  MEM_ENA		EQU	BIT1		; memory decode enable
   101                              <1>  BM_ENA                 EQU     BIT2		; bus master enable
   102                              <1> 
   103                              <1> ; ----------------------------------------------------------------------------
   104                              <1> ; CODEC.INC
   105                              <1> ; ----------------------------------------------------------------------------
   106                              <1> 
   107                              <1> ;Codec registers.
   108                              <1> ;
   109                              <1> ;Not all codecs are created equal. Refer to the spec for your specific codec.
   110                              <1> ;
   111                              <1> ;All registers are 16bits wide.  Access to codec registers over the AC97 link
   112                              <1> ;is defined by the OEM.  
   113                              <1> ;
   114                              <1> ;Secondary codec's are accessed by ORing in BIT7 of all register accesses.
   115                              <1> ;
   116                              <1> 
   117                              <1> ; each codec/mixer register is 16bits
   118                              <1> 
   119                              <1> CODEC_RESET_REG                 equ     00      ; reset codec
   120                              <1> CODEC_MASTER_VOL_REG            equ     02      ; master volume
   121                              <1> CODEC_HP_VOL_REG                equ     04      ; headphone volume
   122                              <1> CODEC_MASTER_MONO_VOL_REG       equ     06      ; master mono volume
   123                              <1> CODEC_MASTER_TONE_REG           equ     08      ; master tone (R+L)
   124                              <1> CODEC_PCBEEP_VOL_REG            equ     0ah     ; PC beep volume
   125                              <1> CODEC_PHONE_VOL_REG             equ     0bh     ; phone volume
   126                              <1> CODEC_MIC_VOL_REG               equ     0eh     ; MIC volume
   127                              <1> CODEC_LINE_IN_VOL_REG           equ     10h     ; line input volume
   128                              <1> CODEC_CD_VOL_REG                equ     12h     ; CD volume
   129                              <1> CODEC_VID_VOL_REG               equ     14h     ; video volume
   130                              <1> CODEC_AUX_VOL_REG               equ     16h     ; aux volume
   131                              <1> CODEC_PCM_OUT_REG               equ     18h     ; PCM output volume
   132                              <1> CODEC_RECORD_SELECT_REG         equ     1ah     ; record select input
   133                              <1> CODEC_RECORD_VOL_REG            equ     1ch     ; record volume
   134                              <1> CODEC_RECORD_MIC_VOL_REG        equ     1eh     ; record mic volume
   135                              <1> CODEC_GP_REG                    equ     20h     ; general purpose
   136                              <1> CODEC_3D_CONTROL_REG            equ     22h     ; 3D control
   137                              <1> ; 24h is reserved
   138                              <1> CODEC_POWER_CTRL_REG            equ     26h     ; powerdown control
   139                              <1> CODEC_EXT_AUDIO_REG             equ     28h     ; extended audio
   140                              <1> CODEC_EXT_AUDIO_CTRL_REG        equ     2ah     ; extended audio control
   141                              <1> CODEC_PCM_FRONT_DACRATE_REG     equ     2ch     ; PCM out sample rate
   142                              <1> CODEC_PCM_SURND_DACRATE_REG     equ     2eh     ; surround sound sample rate
   143                              <1> CODEC_PCM_LFE_DACRATE_REG       equ     30h     ; LFE sample rate
   144                              <1> CODEC_LR_ADCRATE_REG            equ     32h     ; PCM in sample rate
   145                              <1> CODEC_MIC_ADCRATE_REG           equ     34h     ; mic in sample rate
   146                              <1> 
   147                              <1> ; registers 36-7a are reserved on the ICH
   148                              <1> 
   149                              <1> CODEC_VENDORID1_REG             equ     7ch     ; codec vendor ID 1
   150                              <1> CODEC_VENDORID2_REG             equ     7eh     ; codec vendor ID 2
   151                              <1> 
   152                              <1> ; Mixer registers 0 through 51h reside in the ICH and are not forwarded over
   153                              <1> ; the AC97 link to the codec, which I think is a little weird.  Looks like
   154                              <1> ; the ICH makes it so you don't need a fully functional codec to play audio?
   155                              <1> ;
   156                              <1> ; whenever 2 codecs are present in the system, use BIT7 to access the 2nd
   157                              <1> ; set of registers, ie 80h-feh
   158                              <1> 
   159                              <1> PRIMARY_CODEC                   equ     0       ; 0-7F for primary codec
   160                              <1> SECONDARY_CODEC                 equ     BIT7    ; 80-8f registers for 2ndary
   161                              <1> 
   162                              <1> SAMPLE_RATE_441khz	equ     44100   ; 44.1Khz (cd quality) rate
   163                              <1> 
   164                              <1> ; ----------------------------------------------------------------------------
   165                              <1> ; 17/02/2017
   166                              <1> PCI_IO_BASE	equ 10h			; = NAMBAR register offset
   167                              <1> AC97_INT_LINE   equ 3Ch			; AC97 Interrupt Line register offset
   168                              <1> 
   169                              <1> ; ----------------------------------------------------------------------------
   170                              <1> ; ICH2AC97.INC
   171                              <1> ; ----------------------------------------------------------------------------
   172                              <1> 
   173                              <1> ; PCI stuff
   174                              <1> 
   175                              <1> ; Intel ICH2 equates. It is assumed that ICH0 and plain ole ICH are compatible.
   176                              <1> 
   177                              <1> INTEL_VID       equ     8086h           ; Intel's PCI vendor ID
   178                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   179                              <1> SIS_VID		equ	1039h
   180                              <1> NVIDIA_VID	equ	10DEh	 ; Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source c.
   181                              <1> AMD_VID		equ	1022h
   182                              <1> 
   183                              <1> ICH_DID         equ     2415h           ; ICH device ID
   184                              <1> ICH0_DID        equ     2425h           ; ICH0
   185                              <1> ICH2_DID        equ     2445h           ; ICH2 I think there are more ICHes.
   186                              <1>                                         ; they all should be compatible.
   187                              <1> 
   188                              <1> ; 17/02/2017 (Erdogan Tan, ref: ALSA Device IDs, ALSA project)
   189                              <1> ICH3_DID	equ     2485h           ; ICH3
   190                              <1> ICH4_DID        equ     24C5h           ; ICH4
   191                              <1> ICH5_DID	equ     24D5h           ; ICH5 
   192                              <1> ICH6_DID	equ     266Eh           ; ICH6
   193                              <1> ESB6300_DID	equ     25A6h           ; 6300ESB
   194                              <1> ESB631X_DID	equ     2698h           ; 631XESB
   195                              <1> ICH7_DID	equ	27DEh		; ICH7
   196                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   197                              <1> MX82440_DID	equ	7195h
   198                              <1> SI7012_DID	equ	7012h
   199                              <1> NFORCE_DID	equ	01B1h
   200                              <1> NFORCE2_DID	equ	006Ah
   201                              <1> AMD8111_DID	equ	746Dh
   202                              <1> AMD768_DID	equ	7445h
   203                              <1> ; 03/11/2023 - Erdogan Tan - Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source code
   204                              <1> CK804_DID	equ	0059h
   205                              <1> MCP04_DID	equ	003Ah
   206                              <1> CK8_DID		equ	008Ah
   207                              <1> NFORCE3_DID	equ	00DAh
   208                              <1> CK8S_DID	equ	00EAh
   209                              <1> 
   210                              <1> NAMBAR_REG      equ     10h             ; native audio mixer BAR
   211                              <1>  NAM_SIZE       equ     256             ; 256 bytes required.
   212                              <1> 
   213                              <1> NABMBAR_REG     equ     14h             ; native audio bus mastering BAR
   214                              <1>  NABM_SIZE      equ     64              ; 64 bytes
   215                              <1> 
   216                              <1> ; BUS master registers, accessed via NABMBAR+offset
   217                              <1> 
   218                              <1> ; ICH supports 3 different types of register sets for three types of things
   219                              <1> ; it can do, thus:
   220                              <1> ;
   221                              <1> ; PCM in (for recording) aka PI
   222                              <1> ; PCM out (for playback) aka PO
   223                              <1> ; MIC in (for recording) aka MC
   224                              <1> 
   225                              <1> PI_BDBAR_REG            equ     0       ; PCM in buffer descriptor BAR
   226                              <1> PO_BDBAR_REG            equ     10h     ; PCM out buffer descriptor BAR
   227                              <1> MC_BDBAR_REG            equ     20h     ; MIC in buffer descriptor BAR
   228                              <1> 
   229                              <1> ; each buffer descriptor BAR holds a pointer which has entries to the buffer
   230                              <1> ; contents of the .WAV file we're going to play. Each entry is 8 bytes long
   231                              <1> ; (more on that later) and can contain 32 entries total, so each BAR is
   232                              <1> ; 256 bytes in length, thus:
   233                              <1> 
   234                              <1> BDL_SIZE                equ     32*8    ; Buffer Descriptor List size
   235                              <1> INDEX_MASK              equ     31      ; indexes must be 0-31
   236                              <1> 
   237                              <1> 
   238                              <1> 
   239                              <1> PI_CIV_REG              equ     4       ; PCM in current Index value (RO)
   240                              <1> PO_CIV_REG              equ     14h     ; PCM out current Index value (RO)
   241                              <1> MC_CIV_REG              equ     24h     ; MIC in current Index value (RO)
   242                              <1> ;8bit read only
   243                              <1> ; each current index value is simply a pointer showing us which buffer
   244                              <1> ; (0-31) the codec is currently processing. Once this counter hits 31, it
   245                              <1> ; wraps back to 0.
   246                              <1> ; this can be handy to know, as once it hits 31, we're almost out of data to
   247                              <1> ; play back or room to record!
   248                              <1> 
   249                              <1> 
   250                              <1> PI_LVI_REG              equ     5       ; PCM in Last Valid Index
   251                              <1> PO_LVI_REG              equ     15h     ; PCM out Last Valid Index
   252                              <1> MC_LVI_REG              equ     25h     ; MIC in Last Valid Index
   253                              <1> ;8bit read/write
   254                              <1> ; The Last Valid Index is a number (0-31) to let the codec know what buffer
   255                              <1> ; number to stop on after processing. It could be very nasty to play audio
   256                              <1> ; from buffers that aren't filled with the audio we want to play.
   257                              <1> 
   258                              <1> 
   259                              <1> PI_SR_REG               equ     6       ; PCM in Status register
   260                              <1> PO_SR_REG               equ     16h     ; PCM out Status register
   261                              <1> MC_SR_REG               equ     26h     ; MIC in Status register
   262                              <1> ;16bit read/write
   263                              <1> ; status registers.  Bitfields follow:
   264                              <1> 
   265                              <1> FIFO_ERR                equ     BIT4    ; FIFO Over/Underrun W1TC.
   266                              <1> 
   267                              <1> BCIS                    equ     BIT3    ; buffer completion interrupt status.
   268                              <1>                                         ; Set whenever the last sample in ANY
   269                              <1>                                         ; buffer is finished.  Bit is only
   270                              <1>                                         ; set when the Interrupt on Complete
   271                              <1>                                         ; (BIT4 of control reg) is set.
   272                              <1> 
   273                              <1> LVBCI                   equ     BIT2    ; Set whenever the codec has processed
   274                              <1>                                         ; the last buffer in the buffer list.
   275                              <1>                                         ; Will fire an interrupt if IOC bit is
   276                              <1>                                         ; set. Probably set after the last
   277                              <1>                                         ; sample in the last buffer is
   278                              <1>                                         ; processed.  W1TC
   279                              <1> 
   280                              <1>                                         ; 
   281                              <1> CELV                    equ     BIT1    ; Current buffer == last valid.
   282                              <1>                                         ; Bit is RO and remains set until LVI is
   283                              <1>                                         ; cleared.  Probably set up the start
   284                              <1>                                         ; of processing for the last buffer.
   285                              <1> 
   286                              <1> 
   287                              <1> DCH                     equ     BIT0    ; DMA controller halted.
   288                              <1>                                         ; set whenever audio stream is stopped
   289                              <1>                                         ; or something else goes wrong.
   290                              <1> 
   291                              <1> 
   292                              <1> PI_PICB_REG             equ     8       ; PCM in position in current buffer(RO)
   293                              <1> PO_PICB_REG             equ     18h     ; PCM out position in current buffer(RO)
   294                              <1> MC_PICB_REG             equ     28h     ; MIC in position in current buffer (RO)
   295                              <1> ;16bit read only
   296                              <1> ; position in current buffer regs show the number of dwords left to be
   297                              <1> ; processed in the current buffer.
   298                              <1> ; 
   299                              <1> 
   300                              <1> PI_PIV_REG              equ     0ah     ; PCM in Prefected index value
   301                              <1> PO_PIV_REG              equ     1ah     ; PCM out Prefected index value
   302                              <1> MC_PIV_REG              equ     2ah     ; MIC in Prefected index value
   303                              <1> ;8bit, read only
   304                              <1> ; Prefetched index value register.
   305                              <1> ; tells which buffer number (0-31) has be prefetched. I'd imagine this
   306                              <1> ; value follows the current index value fairly closely. (CIV+1)
   307                              <1> ;
   308                              <1> 
   309                              <1> 
   310                              <1> PI_CR_REG               equ     0bh     ; PCM in Control Register
   311                              <1> PO_CR_REG               equ     1bh     ; PCM out Control Register
   312                              <1> MC_CR_REG               equ     2bh     ; MIC in Control Register
   313                              <1> ; 8bit
   314                              <1> ; Control register *MUST* only be accessed as an 8bit value.
   315                              <1> ; Control register. See bitfields below.
   316                              <1> ;
   317                              <1> 
   318                              <1> 
   319                              <1> IOCE                    equ     BIT4    ; interrupt on complete enable.
   320                              <1>                                         ; set this bit if you want an intrtpt
   321                              <1>                                         ; to fire whenever LVBCI is set.
   322                              <1> FEIFE                   equ     BIT3    ; set if you want an interrupt to fire
   323                              <1>                                         ; whenever there is a FIFO (over or
   324                              <1>                                         ; under) error.
   325                              <1> LVBIE                   equ     BIT2    ; last valid buffer interrupt enable.
   326                              <1>                                         ; set if you want an interrupt to fire
   327                              <1>                                         ; whenever the completion of the last
   328                              <1>                                         ; valid buffer.
   329                              <1> RR                      equ     BIT1    ; reset registers.  Nukes all regs
   330                              <1>                                         ; except bits 4:2 of this register.
   331                              <1>                                         ; Only set this bit if BIT 0 is 0
   332                              <1> RPBM                    equ     BIT0    ; Run/Pause
   333                              <1>                                         ; set this bit to start the codec!
   334                              <1> 
   335                              <1> 
   336                              <1> GLOB_CNT_REG            equ     2ch     ; Global control register
   337                              <1> SEC_RES_EN              equ     BIT5    ; secondary codec resume event 
   338                              <1>                                         ; interrupt enable.  Not used here.
   339                              <1> PRI_RES_EN              equ     BIT4    ; ditto for primary. Not used here.
   340                              <1> ACLINK_OFF              equ     BIT3    ; Turn off the AC97 link
   341                              <1> ACWARM_RESET            equ     BIT2    ; Awaken the AC97 link from sleep.
   342                              <1>                                         ; registers preserved, bit self clears
   343                              <1> ACCOLD_RESET            equ     BIT1    ; Reset everything in the AC97 and
   344                              <1>                                         ; reset all registers.  Not self clearing
   345                              <1> 
   346                              <1> GPIIE                   equ     BIT0    ; GPI Interrupt enable.
   347                              <1>                                         ; set if you want an interrupt to
   348                              <1>                                         ; fire upon ANY of the bits in the
   349                              <1>                                         ; GPI (general pursose inputs?) not used.
   350                              <1> 
   351                              <1> GLOB_STS_REG            equ     30h     ; Global Status register (RO)
   352                              <1> 
   353                              <1> MD3                     equ     BIT17   ; modem powerdown status (yawn)
   354                              <1> AD3                     equ     BIT16   ; Audio powerdown status (yawn)
   355                              <1> RD_COMPLETE_STS         equ     BIT15   ; Codec read timed out. 0=normal
   356                              <1> BIT3SLOT12              equ     BIT14   ; shadowed status of bit 3 in slot 12
   357                              <1> BIT2SLOT12              equ     BIT13   ; shadowed status of bit 2 in slot 12
   358                              <1> BIT1SLOT12              equ     BIT12   ; shadowed status of bit 1 in slot 12
   359                              <1> SEC_RESUME_STS          equ     BIT11   ; secondary codec has resumed (and irqed)
   360                              <1> PRI_RESUME_STS          equ     BIT10   ; primary codec has resumed (and irqed)
   361                              <1> SEC_CODEC_RDY           equ     BIT9    ; secondary codec is ready for action
   362                              <1> PRI_CODEC_RDY           equ     BIT8    ; Primary codec is ready for action
   363                              <1>                                         ; software must check these bits before
   364                              <1>                                         ; starting the codec!
   365                              <1> MIC_IN_IRQ              equ     BIT7    ; MIC in caused an interrupt
   366                              <1> PCM_OUT_IRQ             equ     BIT6    ; One of the PCM out channels IRQed
   367                              <1> PCM_IN_IRQ              equ     BIT5    ; One of the PCM in channels IRQed
   368                              <1> MODEM_OUT_IRQ           equ     BIT2    ; modem out channel IRQed
   369                              <1> MODEM_IN_IRQ            equ     BIT1    ; modem in channel IRQed
   370                              <1> GPI_STS_CHANGE          equ     BIT0    ; set whenever GPI's have changed.
   371                              <1>                                         ; BIT0 of slot 12 also reflects this.
   372                              <1> 
   373                              <1> ACC_SEMA_REG            equ     34h     ; Codec write semiphore register
   374                              <1> CODEC_BUSY              equ     BIT0    ; codec register I/O is happening
   375                              <1>                                         ; self clearing
   376                              <1> ;
   377                              <1> ; Buffer Descriptors List
   378                              <1> ; As stated earlier, each buffer descriptor list is a set of (up to) 32 
   379                              <1> ; descriptors, each 8 bytes in length. Bytes 0-3 of a descriptor entry point
   380                              <1> ; to a chunk of memory to either play from or record to. Bytes 4-7 of an
   381                              <1> ; entry describe various control things detailed below.
   382                              <1> ; 
   383                              <1> ; Buffer pointers must always be aligned on a Dword boundry.
   384                              <1> ;
   385                              <1> 
   386                              <1> IOC                     equ     BIT31   ; Fire an interrupt whenever this
   387                              <1>                                         ; buffer is complete.
   388                              <1> 
   389                              <1> BUP                     equ     BIT30   ; Buffer Underrun Policy.
   390                              <1>                                         ; if this buffer is the last buffer
   391                              <1>                                         ; in a playback, fill the remaining
   392                              <1>                                         ; samples with 0 (silence) or not.
   393                              <1>                                         ; It's a good idea to set this to 1
   394                              <1>                                         ; for the last buffer in playback,
   395                              <1>                                         ; otherwise you're likely to get a lot
   396                              <1>                                         ; of noise at the end of the sound.
   397                              <1> 
   398                              <1> ;
   399                              <1> ; Bits 15:0 contain the length of the buffer, in number of samples, which
   400                              <1> ; are 16 bits each, coupled in left and right pairs, or 32bits each.
   401                              <1> ; Luckily for us, that's the same format as .wav files.
   402                              <1> ;
   403                              <1> ; A value of FFFF is 65536 samples. Running at 44.1Khz, that's just about
   404                              <1> ; 1.5 seconds of sample time. FFFF * 32bits is 1FFFFh bytes or 128k of data.
   405                              <1> ;
   406                              <1> ; A value of 0 in these bits means play no samples.
   407                              <1> ;
   408                              <1> 
   409                              <1> ; 11/11/2023
   410                              <1> CTRL_ST_CREADY		equ	BIT8+BIT9+BIT28 ; Primary Codec Ready
   411                              <1> CODEC_REG_POWERDOWN	equ	26h
    43                                  
    44                                  _STARTUP:
    45                                  	; 30/05/2024
    46                                  	; Prints the Credits Text.
    47                                  	sys_msg Credits, 0Bh
    26                              <1> 
    27 00000000 BE[1B1C]            <1>  mov si, %1
    28 00000003 B30B                <1>  mov bl, %2
    29 00000005 30FF                <1>  xor bh, bh
    30 00000007 B40E                <1>  mov ah, 0Eh
    31 00000009 E8DD1E              <1>  call p_msg
    48                                  
    49                                  	; 30/05/2024
    50 0000000C E85004                          call    setFree			; deallocate unused DOS mem
    51                                  
    52                                  	; 17/02/2017
    53                                  	; Clear BSS (uninitialized data) area
    54 0000000F 31C0                    	xor	ax, ax ; 0
    55 00000011 B93F6E                  	mov	cx, (bss_end - bss_start)/2
    56 00000014 BF[0D1F]                	mov	di, bss_start
    57 00000017 F3AB                    	rep	stosw
    58                                  
    59                                  	; Detect (& Enable) AC'97 Audio Device
    60 00000019 E8A003                  	call	DetectAC97
    61                                  	;jnc	short GetFileName
    62                                  	; 30/05/2024
    63 0000001C 730F                    	jnc	short allocate_memory
    64                                  
    65                                  	; 30/05/2024
    66                                  _dev_not_ready:
    67                                  	; couldn't find the audio device!
    68                                  	sys_msg noDevMsg, 0Fh
    26                              <1> 
    27 0000001E BE[AA1C]            <1>  mov si, %1
    28 00000021 B30F                <1>  mov bl, %2
    29 00000023 30FF                <1>  xor bh, bh
    30 00000025 B40E                <1>  mov ah, 0Eh
    31 00000027 E8BF1E              <1>  call p_msg
    69 0000002A E98F02                          jmp     Exit
    70                                  
    71                                  	; 30/05/2024
    72                                  allocate_memory:
    73                                  
    74                                  ; allocate 256 bytes of data for DCM_OUT Buffer Descriptor List. (BDL)
    75                                  
    76 0000002D B81000                          mov     ax, BDL_SIZE / 16
    77 00000030 E83404                          call    memAlloc
    78 00000033 A3[861F]                        mov     [BDL_BUFFER], ax		; segment 
    79                                  
    80                                  ; allocate 2 buffers, 64k each for now.
    81                                  
    82 00000036 B80010                          mov     ax, BUFFERSIZE / 16		; 64k for .WAV file
    83 00000039 E82B04                          call    memAlloc
    84 0000003C A3[881F]                        mov     [WAV_BUFFER1], ax		; segment
    85                                  
    86 0000003F B80010                  	mov	ax, BUFFERSIZE / 16
    87 00000042 E82204                  	call	memAlloc
    88 00000045 A3[8A1F]                	mov	[WAV_BUFFER2], ax
    89                                  
    90                                  	; 30/05/2024
    91                                  GetFileName:
    92 00000048 BF[301F]                	mov	di, wav_file_name 
    93 0000004B BE8000                  	mov	si, 80h
    94 0000004E 8A1C                    	mov	bl, [si]
    95 00000050 30FF                    	xor	bh, bh
    96 00000052 43                      	inc	bx
    97 00000053 C60000                  	mov	byte [si+bx], 0		; make AsciiZ filename.
    98 00000056 46                      	inc	si
    99                                  ScanName:
   100 00000057 AC                      	lodsb
   101 00000058 84C0                    	test	al, al
   102 0000005A 0F846802                	jz	pmsg_usage
   103 0000005E 3C20                    	cmp	al, 20h
   104 00000060 74F5                    	je	short ScanName	; scan start of name.
   105 00000062 AA                      	stosb
   106 00000063 B4FF                    	mov	ah, 0FFh
   107                                  a_0:	
   108 00000065 FEC4                    	inc	ah
   109                                  a_1:
   110 00000067 AC                      	lodsb
   111 00000068 AA                      	stosb
   112 00000069 3C2E                    	cmp	al, '.'
   113 0000006B 74F8                    	je	short a_0	
   114 0000006D 20C0                    	and	al, al
   115 0000006F 75F6                    	jnz	short a_1
   116                                  
   117 00000071 08E4                    	or	ah, ah		; if period NOT found,
   118 00000073 750C                    	jnz	short _1 	; then add a .WAV extension.
   119                                  SetExt:
   120 00000075 4F                      	dec	di
   121 00000076 66C7052E574156          	mov	dword [di], '.WAV'
   122 0000007D C6450400                	mov	byte [di+4], 0
   123                                  
   124                                  _1:
   125 00000081 E8B004                  	call	write_audio_dev_info 
   126                                  
   127                                  ; open the file
   128                                          ; open existing file
   129 00000084 B002                    	mov     al, OPEN		; open existing file
   130 00000086 BA[301F]                	mov	dx, wav_file_name
   131 00000089 E86B03                          call    openFile ; no error? ok.
   132 0000008C 730F                            jnc     short _gsr
   133                                  
   134                                  ; file not found!
   135                                  	sys_msg noFileErrMsg, 0Fh
    26                              <1> 
    27 0000008E BE[D51C]            <1>  mov si, %1
    28 00000091 B30F                <1>  mov bl, %2
    29 00000093 30FF                <1>  xor bh, bh
    30 00000095 B40E                <1>  mov ah, 0Eh
    31 00000097 E84F1E              <1>  call p_msg
   136                                  _exit_:
   137 0000009A E91F02                          jmp     Exit
   138                                  
   139                                  _gsr:  
   140 0000009D E87E03                         	call    getSampleRate		; read the sample rate
   141                                                                          ; pass it onto codec.
   142                                  	; 25/11/2023
   143 000000A0 72F8                    	jc	short _exit_		; nothing to do
   144                                  
   145 000000A2 A3[941F]                	mov	[sample_rate], ax
   146 000000A5 880E[961F]              	mov	[stmo], cl
   147 000000A9 8816[981F]              	mov	[bps], dl
   148                                  
   149                                  	; 26/11/2023
   150 000000AD C606[9A1F]00            	mov	byte [fbs_shift], 0 ; 0 = stereo and 16 bit 
   151 000000B2 FEC9                    	dec	cl
   152 000000B4 7504                    	jnz	short _gsr_1 ; stereo
   153 000000B6 FE06[9A1F]              	inc	byte [fbs_shift] ; 1 = mono or 8 bit		
   154                                  _gsr_1:	
   155 000000BA 80FA08                  	cmp	dl, 8 
   156 000000BD 7704                    	ja	short _gsr_2 ; 16 bit samples
   157 000000BF FE06[9A1F]              	inc	byte [fbs_shift] ; 2 = mono and 8 bit
   158                                  _gsr_2:	
   159                                  	; 29/05/2024
   160 000000C3 E80605                  	call	write_ac97_pci_dev_info
   161                                  
   162                                  	; 30/05/2024
   163                                  	; 29/05/2024
   164                                  	;call	check_vra
   165                                  
   166                                  	; 30/05/2024
   167 000000C6 E8B018                  	call	codecConfig		; unmute codec, set rates.
   168 000000C9 0F820702                	jc	init_err
   169                                  
   170                                  	; 25/11/2023
   171 000000CD E85006                  	call	write_VRA_info
   172                                  
   173                                  	; 01/05/2017
   174 000000D0 E86E04                  	call	write_wav_file_info
   175                                  
   176                                  	; 25/11/2023
   177                                  	; ------------------------------------------
   178                                  
   179                                  	; 18/11/2023 (ich_wav4.asm)
   180                                  	; 13/11/2023 (ich_wav3.asm)
   181                                  
   182 000000D3 803E[0E1F]01            	cmp	byte [VRA], 1
   183 000000D8 720F                    	jb	short chk_sample_rate
   184                                  playwav_48_khz:	
   185 000000DA C706[9102][7004]        	mov	word [loadfromwavfile], loadFromFile
   186                                  	;mov	word [loadsize], 0 ; 65536
   187 000000E0 C706[9502]0080          	mov	word [buffersize], 32768 ; samples
   188 000000E6 E9B001                  	jmp	PlayNow ; 30/05/2024
   189                                  
   190                                  chk_sample_rate:
   191                                  	; set conversion parameters
   192                                  	; (for 8, 11.025, 16, 22.050, 24, 32 kHZ)
   193 000000E9 A1[941F]                	mov	ax, [sample_rate]
   194 000000EC 3D80BB                  	cmp	ax, 48000
   195 000000EF 74E9                    	je	short playwav_48_khz
   196                                  chk_22khz:
   197 000000F1 3D2256                  	cmp	ax, 22050
   198 000000F4 752F                    	jne	short chk_11khz
   199 000000F6 803E[981F]08            	cmp	byte [bps], 8
   200 000000FB 760F                    	jna	short chk_22khz_1
   201 000000FD BB[7610]                	mov	bx, load_22khz_stereo_16_bit
   202 00000100 803E[961F]01            	cmp	byte [stmo], 1 
   203 00000105 7512                    	jne	short chk_22khz_2
   204 00000107 BB[0D10]                	mov	bx, load_22khz_mono_16_bit
   205 0000010A EB0D                    	jmp	short chk_22khz_2
   206                                  chk_22khz_1:
   207 0000010C BB[A80F]                	mov	bx, load_22khz_stereo_8_bit
   208 0000010F 803E[961F]01            	cmp	byte [stmo], 1 
   209 00000114 7503                    	jne	short chk_22khz_2
   210 00000116 BB[3F0F]                	mov	bx, load_22khz_mono_8_bit
   211                                  chk_22khz_2:
   212 00000119 B85A1D                  	mov	ax, 7514  ; (442*17)
   213 0000011C BA2500                  	mov	dx, 37
   214 0000011F B91100                  	mov	cx, 17 
   215 00000122 E93301                  	jmp	set_sizes	
   216                                  chk_11khz:
   217 00000125 3D112B                  	cmp	ax, 11025
   218 00000128 752F                    	jne	short chk_44khz
   219 0000012A 803E[981F]08            	cmp	byte [bps], 8
   220 0000012F 760F                    	jna	short chk_11khz_1
   221 00000131 BB[0A12]                	mov	bx, load_11khz_stereo_16_bit
   222 00000134 803E[961F]01            	cmp	byte [stmo], 1 
   223 00000139 7512                    	jne	short chk_11khz_2
   224 0000013B BB[AF11]                	mov	bx, load_11khz_mono_16_bit
   225 0000013E EB0D                    	jmp	short chk_11khz_2
   226                                  chk_11khz_1:
   227 00000140 BB[5411]                	mov	bx, load_11khz_stereo_8_bit
   228 00000143 803E[961F]01            	cmp	byte [stmo], 1 
   229 00000148 7503                    	jne	short chk_11khz_2
   230 0000014A BB[F610]                	mov	bx, load_11khz_mono_8_bit
   231                                  chk_11khz_2:
   232 0000014D B8AD0E                  	mov	ax, 3757  ; (221*17)
   233 00000150 BA4A00                  	mov	dx, 74
   234 00000153 B91100                  	mov	cx, 17
   235 00000156 E9FF00                  	jmp	set_sizes 
   236                                  chk_44khz:
   237 00000159 3D44AC                  	cmp	ax, 44100
   238 0000015C 752F                    	jne	short chk_16khz
   239 0000015E 803E[981F]08            	cmp	byte [bps], 8
   240 00000163 760F                    	jna	short chk_44khz_1
   241 00000165 BB[BB13]                	mov	bx, load_44khz_stereo_16_bit
   242 00000168 803E[961F]01            	cmp	byte [stmo], 1 
   243 0000016D 7512                    	jne	short chk_44khz_2
   244 0000016F BB[6313]                	mov	bx, load_44khz_mono_16_bit
   245 00000172 EB0D                    	jmp	short chk_44khz_2
   246                                  chk_44khz_1:
   247 00000174 BB[0513]                	mov	bx, load_44khz_stereo_8_bit
   248 00000177 803E[961F]01            	cmp	byte [stmo], 1 
   249 0000017C 7503                    	jne	short chk_44khz_2
   250 0000017E BB[A812]                	mov	bx, load_44khz_mono_8_bit
   251                                  chk_44khz_2:
   252                                  	;mov	ax, 15065 ; (655*23)
   253                                  	; 18/11/2023 ((file size + bss + stack) <= 64KB)
   254 00000181 B8FC36                  	mov	ax, 14076 ; (612 *23)
   255 00000184 BA1900                  	mov	dx, 25
   256 00000187 B91700                  	mov	cx, 23
   257 0000018A E9CB00                  	jmp	set_sizes 
   258                                  chk_16khz:
   259 0000018D 3D803E                  	cmp	ax, 16000
   260 00000190 752F                    	jne	short chk_8khz
   261 00000192 803E[981F]08            	cmp	byte [bps], 8
   262 00000197 760F                    	jna	short chk_16khz_1
   263 00000199 BB[BD0B]                	mov	bx, load_16khz_stereo_16_bit
   264 0000019C 803E[961F]01            	cmp	byte [stmo], 1 
   265 000001A1 7512                    	jne	short chk_16khz_2
   266 000001A3 BB[5C0B]                	mov	bx, load_16khz_mono_16_bit
   267 000001A6 EB0D                    	jmp	short chk_16khz_2
   268                                  chk_16khz_1:
   269 000001A8 BB[CC0A]                	mov	bx, load_16khz_stereo_8_bit
   270 000001AB 803E[961F]01            	cmp	byte [stmo], 1 
   271 000001B0 7503                    	jne	short chk_16khz_2
   272 000001B2 BB[680A]                	mov	bx, load_16khz_mono_8_bit
   273                                  chk_16khz_2:
   274 000001B5 B85515                  	mov	ax, 5461
   275 000001B8 BA0300                  	mov	dx, 3
   276 000001BB B90100                  	mov	cx, 1
   277 000001BE E99700                  	jmp	set_sizes 
   278                                  chk_8khz:
   279 000001C1 3D401F                  	cmp	ax, 8000
   280 000001C4 752E                    	jne	short chk_24khz
   281 000001C6 803E[981F]08            	cmp	byte [bps], 8
   282 000001CB 760F                    	jna	short chk_8khz_1
   283 000001CD BB[8109]                	mov	bx, load_8khz_stereo_16_bit
   284 000001D0 803E[961F]01            	cmp	byte [stmo], 1 
   285 000001D5 7512                    	jne	short chk_8khz_2
   286 000001D7 BB[F008]                	mov	bx, load_8khz_mono_16_bit
   287 000001DA EB0D                    	jmp	short chk_8khz_2
   288                                  chk_8khz_1:
   289 000001DC BB[0008]                	mov	bx, load_8khz_stereo_8_bit
   290 000001DF 803E[961F]01            	cmp	byte [stmo], 1 
   291 000001E4 7503                    	jne	short chk_8khz_2
   292 000001E6 BB[4D07]                	mov	bx, load_8khz_mono_8_bit
   293                                  chk_8khz_2:
   294 000001E9 B8AA0A                  	mov	ax, 2730
   295 000001EC BA0600                  	mov	dx, 6
   296 000001EF B90100                  	mov	cx, 1
   297 000001F2 EB64                    	jmp	short set_sizes 
   298                                  chk_24khz:
   299 000001F4 3DC05D                  	cmp	ax, 24000
   300 000001F7 752E                    	jne	short chk_32khz
   301 000001F9 803E[981F]08            	cmp	byte [bps], 8
   302 000001FE 760F                    	jna	short chk_24khz_1
   303 00000200 BB[520D]                	mov	bx, load_24khz_stereo_16_bit
   304 00000203 803E[961F]01            	cmp	byte [stmo], 1 
   305 00000208 7512                    	jne	short chk_24khz_2
   306 0000020A BB[090D]                	mov	bx, load_24khz_mono_16_bit
   307 0000020D EB0D                    	jmp	short chk_24khz_2
   308                                  chk_24khz_1:
   309 0000020F BB[A10C]                	mov	bx, load_24khz_stereo_8_bit
   310 00000212 803E[961F]01            	cmp	byte [stmo], 1 
   311 00000217 7503                    	jne	short chk_24khz_2
   312 00000219 BB[520C]                	mov	bx, load_24khz_mono_8_bit
   313                                  chk_24khz_2:
   314 0000021C B80020                  	mov	ax, 8192
   315 0000021F BA0200                  	mov	dx, 2
   316 00000222 B90100                  	mov	cx, 1
   317 00000225 EB31                    	jmp	short set_sizes 
   318                                  chk_32khz:
   319 00000227 3D007D                  	cmp	ax, 32000
   320 0000022A 7556                    	jne	short vra_needed
   321 0000022C 803E[981F]08            	cmp	byte [bps], 8
   322 00000231 760F                    	jna	short chk_32khz_1
   323 00000233 BB[D40E]                	mov	bx, load_32khz_stereo_16_bit
   324 00000236 803E[961F]01            	cmp	byte [stmo], 1 
   325 0000023B 7512                    	jne	short chk_32khz_2
   326 0000023D BB[870E]                	mov	bx, load_32khz_mono_16_bit
   327 00000240 EB0D                    	jmp	short chk_32khz_2
   328                                  chk_32khz_1:
   329 00000242 BB[100E]                	mov	bx, load_32khz_stereo_8_bit
   330 00000245 803E[961F]01            	cmp	byte [stmo], 1 
   331 0000024A 7503                    	jne	short chk_32khz_2
   332 0000024C BB[B80D]                	mov	bx, load_32khz_mono_8_bit
   333                                  chk_32khz_2:
   334 0000024F B8AA2A                  	mov	ax, 10922
   335 00000252 BA0300                  	mov	dx, 3
   336 00000255 B90200                  	mov	cx, 2
   337                                  	;jmp	short set_sizes 
   338                                  set_sizes:
   339 00000258 803E[961F]01            	cmp	byte [stmo], 1
   340 0000025D 7402                    	je	short ss_1
   341 0000025F D1E0                    	shl	ax, 1
   342                                  ss_1:
   343 00000261 803E[981F]08            	cmp	byte [bps], 8
   344 00000266 7602                    	jna	short ss_2
   345                                  	; 16 bit samples
   346 00000268 D1E0                    	shl	ax, 1
   347                                  ss_2:
   348 0000026A A3[9302]                	mov	[loadsize], ax
   349 0000026D F7E2                    	mul	dx
   350                                  	;cmp	cx, 1
   351                                  	;je	short ss_3
   352                                  ;ss_3:
   353 0000026F F7F1                    	div	cx
   354 00000271 8A0E[9A1F]              	mov	cl, [fbs_shift]
   355 00000275 D3E0                    	shl	ax, cl
   356 00000277 D1E8                    	shr	ax, 1	; buffer size is 16 bit sample count
   357 00000279 A3[9502]                	mov	[buffersize], ax 
   358 0000027C 891E[9102]              	mov	[loadfromwavfile], bx
   359 00000280 EB17                    	jmp	short PlayNow
   360                                  
   361                                  vra_needed:
   362                                  	; 13/11/2023
   363 00000282 58                      	pop	ax ; discard return address to the caller
   364                                  	; 30/05/2024
   365                                  vra_err:
   366                                  	sys_msg msg_no_vra, 0Fh 
    26                              <1> 
    27 00000283 BE[1F1D]            <1>  mov si, %1
    28 00000286 B30F                <1>  mov bl, %2
    29 00000288 30FF                <1>  xor bh, bh
    30 0000028A B40E                <1>  mov ah, 0Eh
    31 0000028C E85A1C              <1>  call p_msg
   367 0000028F EB2B                    	jmp	Exit
   368                                  
   369                                  	; 30/05/2024
   370                                  	; 13/11/2023  (ich_wav4.asm)
   371                                  loadfromwavfile:
   372 00000291 [7004]                  	dw	loadFromFile
   373                                  loadsize:	; read from wav file
   374 00000293 0000                    	dw	0
   375                                  buffersize:	; write to DMA buffer
   376 00000295 00800000                	dd	32768 ; 16 bit samples (not bytes)
   377                                  
   378                                  PlayNow: 
   379                                  	; 30/05/2024
   380                                  	; playwav4.asm
   381                                  _2:	
   382 00000299 E8F918                  	call	check4keyboardstop	; flush keyboard buffer
   383 0000029C 72FB                    	jc	short _2		; 07/11/2023
   384                                  
   385                                   	;call	codecConfig		; unmute codec, set rates.
   386                                  	; 11/11/2023
   387                                  	;jc	short init_err
   388                                  
   389                                  ; position file pointer to start in actual wav data
   390                                  ; MUCH improvement should really be done here to check if sample size is
   391                                  ; supported, make sure there are 2 channels, etc.  
   392                                  ;
   393 0000029E B442                            mov     ah, 42h
   394 000002A0 B000                            mov     al, 0                           ; from start of file
   395 000002A2 8B1E[2C1F]                      mov     bx, [filehandle]
   396 000002A6 31C9                            xor     cx, cx
   397 000002A8 BA2C00                          mov     dx, 44                          ; jump past .wav/riff header
   398 000002AB CD21                            int     21h
   399                                  
   400                                  	; 30/05/2024
   401                                  	sys_msg nextline, 07h
    26                              <1> 
    27 000002AD BE[F71D]            <1>  mov si, %1
    28 000002B0 B307                <1>  mov bl, %2
    29 000002B2 30FF                <1>  xor bh, bh
    30 000002B4 B40E                <1>  mov ah, 0Eh
    31 000002B6 E8301C              <1>  call p_msg
   402                                  
   403                                  ; play the .wav file. Most of the good stuff is in here.
   404                                  
   405 000002B9 E83400                  	call    PlayWav
   406                                  
   407                                  ; close the .wav file and exit.
   408                                  
   409                                  Exit:  
   410 000002BC E84A01                          call    closeFile
   411                                           
   412 000002BF B8004C                  	mov	ax, 4c00h	; bye !
   413 000002C2 CD21                    	int	21h
   414                                  here:
   415 000002C4 EBFE                    	jmp	short here	; do not come here !
   416                                  
   417                                  	; 30/05/2024
   418                                  pmsg_usage:
   419                                  	sys_msg msg_usage, 0Bh
    26                              <1> 
    27 000002C6 BE[8B1C]            <1>  mov si, %1
    28 000002C9 B30B                <1>  mov bl, %2
    29 000002CB 30FF                <1>  xor bh, bh
    30 000002CD B40E                <1>  mov ah, 0Eh
    31 000002CF E8171C              <1>  call p_msg
   420 000002D2 EBE8                    	jmp	short Exit
   421                                  
   422                                  	; 30/05/2024
   423                                  init_err:
   424                                  	sys_msg msg_init_err, 0Fh
    26                              <1> 
    27 000002D4 BE[EE1C]            <1>  mov si, %1
    28 000002D7 B30F                <1>  mov bl, %2
    29 000002D9 30FF                <1>  xor bh, bh
    30 000002DB B40E                <1>  mov ah, 0Eh
    31 000002DD E8091C              <1>  call p_msg
   425 000002E0 EBDA                    	jmp	short Exit
   426                                  
   427                                  	; 30/05/2024
   428                                  error_exit:
   429                                  	sys_msg msg_error, 0Eh
    26                              <1> 
    27 000002E2 BE[EE1C]            <1>  mov si, %1
    28 000002E5 B30E                <1>  mov bl, %2
    29 000002E7 30FF                <1>  xor bh, bh
    30 000002E9 B40E                <1>  mov ah, 0Eh
    31 000002EB E8FB1B              <1>  call p_msg
   430 000002EE EBCC                    	jmp	short Exit
   431                                  
   432                                  	; --------------------------------------------
   433                                  	
   434                                  	; 29/05/2024 (TYRDOS 386, playwav7.s)
   435                                  	; ((Modified from playwav4.asm, ich_wav4.asm))
   436                                  	; ------------------
   437                                  ;playwav_vra:
   438                                  PlayWav:
   439                                  	; create Buffer Descriptor List
   440                                  
   441                                  	;  Generic Form of Buffer Descriptor
   442                                  	;  ---------------------------------
   443                                  	;  63   62    61-48    47-32   31-0
   444                                  	;  ---  ---  --------  ------- -----
   445                                  	;  IOC  BUP -reserved- Buffer  Buffer
   446                                  	;		      Length   Pointer
   447                                  	;		      [15:0]   [31:0]
   448                                  
   449 000002F0 06                              push    es
   450 000002F1 A1[861F]                        mov     ax, [BDL_BUFFER]		; get segment # for BDL
   451 000002F4 8EC0                            mov     es, ax
   452                                  
   453 000002F6 B91000                          mov     cx, 32 / 2                      ; make 32 entries in BDL
   454 000002F9 31FF                            xor     di, di
   455                                  _0:
   456 000002FB 660FB706[881F]                  movzx   eax, word [WAV_BUFFER1]
   457 00000301 66C1E004                        shl     eax, 4                          ; convert seg:off ->0:offset
   458 00000305 66AB                            stosd                                   ; store pointer to wavbuffer1
   459                                  
   460                                  	;mov	eax, BUFFERSIZE / 2 ; size of buffer (32K) in (16bit) words
   461                                  	; 13/11/2023 (ich_wav3.asm) - 18/11/2023 (ich_wav4.asm)
   462 00000307 66A1[9502]              	mov	eax, [buffersize]
   463                                  
   464                                  	;or	eax, IOC + BUP
   465                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   466 0000030B 660D00000040            	or	eax, BUP
   467 00000311 66AB                    	stosd
   468                                  
   469 00000313 660FB706[8A1F]                  movzx   eax, word [WAV_BUFFER2]
   470 00000319 66C1E004                        shl     eax, 4                          ; convert seg:off ->0:offset
   471 0000031D 66AB                            stosd                                   ; store pointer to wavbuffer2
   472                                  
   473                                  	;mov	eax, BUFFERSIZE / 2 ; size of half buffer (32K)
   474                                  	; 13/11/2023 (ich_wav3.asm) - 18/11/2023 (ich_wav4.asm)
   475 0000031F 66A1[9502]              	mov	eax, [buffersize]
   476                                  
   477                                  	;or	eax, IOC + BUP
   478                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   479 00000323 660D00000040            	or	eax, BUP
   480 00000329 66AB                    	stosd
   481                                  
   482 0000032B E2CE                            loop    _0
   483 0000032D 07                              pop     es
   484                                  
   485                                  	; load 64k into buffer 1
   486 0000032E A1[881F]                        mov     ax, [WAV_BUFFER1]
   487                                          ;call	loadFromFile
   488                                  	; 13/11/2023
   489 00000331 FF16[9102]              	call	word [loadfromwavfile]
   490                                  
   491                                  	; and 64k into buffer 2
   492 00000335 A1[8A1F]                	mov     ax, [WAV_BUFFER2]
   493                                         	;call	loadFromFile
   494                                  	; 13/11/2023
   495 00000338 FF16[9102]              	call	word [loadfromwavfile]
   496                                  	
   497                                  	; write NABMBAR+10h with offset of buffer descriptor list
   498                                  
   499 0000033C 660FB706[861F]                  movzx   eax, word [BDL_BUFFER]
   500 00000342 66C1E004                	shl     eax, 4                          ; convert seg:off to 0:off
   501 00000346 8B16[841F]                      mov     dx, [NABMBAR]
   502 0000034A 83C210                          add     dx, PO_BDBAR_REG                ; set pointer to BDL
   503 0000034D 66EF                            out     dx, eax                         ; write to AC97 controller
   504                                  
   505                                  	; 19/05/2024
   506 0000034F E82218                  	call	delay1_4ms
   507                                  
   508 00000352 B01F                            mov	al, 31
   509 00000354 E8B518                  	call	setLastValidIndex
   510                                  
   511                                  	; 19/05/2024
   512                                  	;call	delay1_4ms
   513                                  
   514                                  	; 17/02/2017
   515 00000357 8B16[841F]                      mov	dx, [NABMBAR]
   516 0000035B 83C21B                          add	dx, PO_CR_REG		; PCM out Control Register
   517                                          ;mov	al, IOCE + RPBM	; Enable 'Interrupt On Completion' + run
   518                                  	;			; (LVBI interrupt will not be enabled)
   519                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   520 0000035E B001                    	mov	al, RPBM
   521 00000360 EE                      	out	dx, al			; Start bus master operation.
   522                                  
   523                                  	; 19/05/2024
   524                                  	; 06/11/2023
   525 00000361 E81018                  	call	delay1_4ms	; 30/05/2024
   526                                  	;call	delay1_4ms
   527                                  	;call	delay1_4ms
   528                                  	;call	delay1_4ms
   529                                  
   530                                  ; while DMA engine is running, examine current index and wait until it hits 1
   531                                  ; as soon as it's 1, we need to refresh the data in wavbuffer1 with another
   532                                  ; 64k. Likewise when it's playing buffer 2, refresh buffer 1 and repeat.
   533                                  
   534                                  ; 18/11/2023
   535                                  ; 08/11/2023
   536                                  ; 07/11/2023
   537                                  	
   538                                  tuneLoop:
   539                                  	; 30/05/2024
   540                                  	; 18/11/2023 (ich_wav4.asm)
   541                                  	; 08/11/2023
   542                                  	; 06/11/2023
   543 00000364 B031                    	mov	al, '1'
   544 00000366 E84500                  	call	tL0
   545                                  tL1:
   546 00000369 E87518                  	call	updateLVI	; /set LVI != CIV/
   547 0000036C 7434                    	jz	short _exitt_	; 08/11/2023
   548 0000036E E82418                  	call	check4keyboardstop
   549 00000371 722F                    	jc	short _exitt_
   550 00000373 E86218                  	call	getCurrentIndex
   551 00000376 A801                    	test	al, BIT0
   552 00000378 74EF                    	jz	short tL1	; loop if buffer 2 is not playing
   553                                  
   554                                  	; load buffer 1
   555 0000037A A1[881F]                	mov     ax, [WAV_BUFFER1]
   556                                  	;call	loadFromFile
   557                                  	; 18/11/2023
   558 0000037D FF16[9102]              	call	word [loadfromwavfile]
   559 00000381 721F                    	jc	short _exitt_	; end of file
   560                                  
   561 00000383 B032                    	mov	al, '2'
   562 00000385 E82600                  	call	tL0
   563                                  tL2:
   564 00000388 E85618                  	call    updateLVI
   565 0000038B 7415                    	jz	short _exitt_	; 08/11/2023
   566 0000038D E80518                  	call    check4keyboardstop
   567 00000390 7210                    	jc	short _exitt_
   568 00000392 E84318                  	call    getCurrentIndex
   569 00000395 A801                    	test	al, BIT0
   570 00000397 75EF                    	jnz	short tL2	; loop if buffer 1 is not playing
   571                                  
   572                                  	; load buffer 2
   573 00000399 A1[8A1F]                	mov     ax, [WAV_BUFFER2]
   574                                  	;call	loadFromFile
   575                                  	; 18/11/2023
   576 0000039C FF16[9102]              	call	word [loadfromwavfile]
   577 000003A0 73C2                    	jnc	short tuneLoop
   578                                  _exitt_:
   579 000003A2 8B16[841F]              	mov	dx, [NABMBAR]		
   580 000003A6 83C21B                  	add	dx, PO_CR_REG	; PCM out Control Register
   581 000003A9 B000                    	mov	al, 0
   582 000003AB EE                      	out	dx, al		; stop player
   583                                  
   584                                  	; 30/05/2024
   585 000003AC B030                    	mov	al, '0'
   586                                  
   587                                  	;add	al, '0'
   588                                  	;call	tL0
   589                                  	;
   590                                  	;retn
   591                                  	; 06/11/2023
   592                                  	;jmp	short tL0
   593                                  	;retn
   594                                  
   595                                  	; 06/11/2023
   596                                  tL0:
   597                                  	; 08/11/2023
   598                                  	; 05/11/2023
   599                                  	; 17/02/2017 - Buffer switch test (temporary)
   600                                  	; 06/11/2023
   601                                  	; al = buffer indicator ('1', '2' or '0' -stop- )
   602 000003AE 1E                      	push	ds
   603                                  	;push	bx 
   604 000003AF BB00B8                  	mov	bx, 0B800h ; video display page segment
   605 000003B2 8EDB                    	mov	ds, bx
   606 000003B4 29DB                    	sub	bx, bx ; 0
   607 000003B6 B44E                    	mov	ah, 4Eh
   608 000003B8 8907                    	mov	[bx], ax ; show current play buffer (1, 2)
   609                                  	;pop	bx
   610 000003BA 1F                      	pop	ds
   611 000003BB C3                      	retn
   612                                  
   613                                  	; ------------------
   614                                  
   615                                  	; 30/05/2024
   616                                  DetectAC97:
   617                                  DetectICH:
   618                                  	; 22/11/2023
   619                                  	; 19/11/2023
   620                                  	; 01/11/2023 - TRDOS 386 Kernel v2.0.7
   621                                  	;; 10/06/2017
   622                                  	;; 05/06/2017
   623                                  	;; 29/05/2017
   624                                  	;; 28/05/2017
   625                                  
   626                                  	; 19/11/2023
   627 000003BC BE[581D]                	mov	si, valid_ids	; address of Valid ICH (AC97) Device IDs
   628 000003BF B91500                  	mov	cx, valid_id_count
   629                                  pfd_1:
   630 000003C2 66AD                    	lodsd
   631 000003C4 E88C14                  	call	pciFindDevice
   632 000003C7 7303                    	jnc	short d_ac97_1
   633 000003C9 E2F7                    	loop	pfd_1
   634                                  
   635                                  	;stc
   636 000003CB C3                      	retn
   637                                  
   638                                  d_ac97_1:
   639                                  	; eax = BUS/DEV/FN
   640                                  	;	00000000BBBBBBBBDDDDDFFF00000000
   641                                  	; edx = DEV/VENDOR
   642                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
   643                                  
   644                                  	; playwav4.asm - 19/05/2024
   645                                  
   646 000003CC 66A3[8C1F]              	mov	[bus_dev_fn], eax
   647 000003D0 668916[901F]            	mov	[dev_vendor], edx
   648                                  
   649                                  	; get ICH base address regs for mixer and bus master
   650                                  
   651 000003D5 B010                            mov     al, NAMBAR_REG
   652 000003D7 E80715                          call    pciRegRead16			; read PCI registers 10-11
   653                                          ;and    dx, IO_ADDR_MASK 		; mask off BIT0
   654                                  	; 19/05/2024
   655 000003DA 80E2FE                  	and	dl, 0FEh
   656                                  
   657 000003DD 8916[821F]                      mov     [NAMBAR], dx			; save audio mixer base addr
   658                                  
   659 000003E1 B014                    	mov     al, NABMBAR_REG
   660 000003E3 E8FB14                          call    pciRegRead16
   661                                          ;and    dx, IO_ADDR_MASK
   662                                  	; 19/05/2024
   663 000003E6 80E2C0                  	and	dl, 0C0h
   664                                  
   665 000003E9 8916[841F]                      mov     [NABMBAR], dx			; save bus master base addr
   666                                  
   667 000003ED B03C                    	mov	al, AC97_INT_LINE ; Interrupt line register (3Ch)
   668 000003EF E8E714                  	call	pciRegRead8 ; 17/02/2017
   669                                  
   670 000003F2 8816[2F1F]              	mov     [ac97_int_ln_reg], dl
   671                                  
   672                                  	;clc
   673                                  
   674 000003F6 C3                      	retn
   675                                  
   676                                  ; FILE.ASM
   677                                  ;open or create file
   678                                  ;
   679                                  ;input: ds:dx-->filename (asciiz)
   680                                  ;       al=file Mode (create or open)
   681                                  ;output: none  cs:[filehandle] filled
   682                                  ;
   683                                  openFile:	; (playwav4.asm)
   684 000003F7 50                      	push	ax
   685 000003F8 51                      	push	cx
   686 000003F9 B43B                    	mov	ah, 3Bh			; start with a mode
   687 000003FB 00C4                    	add	ah, al			; add in create or open mode
   688 000003FD 31C9                    	xor	cx, cx
   689 000003FF CD21                    	int	21h
   690 00000401 7203                    	jc	short _of1
   691                                  	;mov	[cs:filehandle], ax
   692 00000403 A3[2C1F]                	mov	[filehandle], ax
   693                                  _of1:
   694 00000406 59                      	pop	cx
   695 00000407 58                      	pop	ax
   696 00000408 C3                      	retn
   697                                  
   698                                  ; close the currently open file
   699                                  ; input: none, uses cs:[filehandle]
   700                                  closeFile:	; (playwav4.asm)
   701 00000409 50                      	push	ax
   702 0000040A 53                      	push	bx
   703 0000040B 833E[2C1F]FF            	cmp	word [filehandle], -1
   704 00000410 7409                    	jz	short _cf1
   705 00000412 8B1E[2C1F]              	mov     bx, [filehandle]  
   706 00000416 B8003E                  	mov     ax,3e00h
   707 00000419 CD21                            int     21h              ;close file
   708                                  _cf1:
   709 0000041B 5B                      	pop	bx
   710 0000041C 58                      	pop	ax
   711 0000041D C3                      	retn
   712                                  
   713                                  getSampleRate:	; (playwav4.asm)
   714                                  	; 08/12/2016
   715                                  ; reads the sample rate from the .wav file.
   716                                  ; entry: none - assumes file is already open
   717                                  	; 19/11/2016 - Erdogan Tan
   718                                  ; exit: ax = sample rate (11025, 22050, 44100, 48000)
   719                                  ;	cx = number of channels (mono=1, stereo=2)
   720                                  ;	dx = bits per sample (8, 16)
   721                                  
   722 0000041E 53                      	push    bx
   723                                  
   724 0000041F B442                            mov     ah, 42h
   725 00000421 B000                            mov     al, 0				; from start of file
   726 00000423 8B1E[2C1F]                      mov     bx, [filehandle]
   727 00000427 31C9                            xor     cx, cx
   728 00000429 BA0800                          mov     dx, 08h				; "WAVE"
   729 0000042C CD21                            int     21h
   730                                  
   731 0000042E BA[101F]                        mov     dx, smpRBuff
   732 00000431 B91C00                          mov     cx, 28				; 28 bytes
   733 00000434 B43F                    	mov	ah, 3fh
   734 00000436 CD21                            int     21h
   735                                  
   736 00000438 813E[101F]5741          	cmp	word [smpRBuff], 'WA'
   737 0000043E 751C                    	jne	short gsr_stc
   738                                  
   739 00000440 813E[121F]5645          	cmp	word [smpRBuff+2], 'VE'
   740 00000446 7514                    	jne	short gsr_stc
   741                                  
   742 00000448 833E[1C1F]01            	cmp	word [smpRBuff+12], 1	; Offset 20, must be 1 (= PCM)
   743 0000044D 750D                    	jne	short gsr_stc
   744                                  
   745                                  
   746 0000044F 8B0E[1E1F]              	mov	cx, [smpRBuff+14]	; return num of channels in CX
   747 00000453 A1[201F]                        mov     ax, [smpRBuff+16]	; return sample rate in AX
   748 00000456 8B16[2A1F]              	mov	dx, [smpRBuff+26]	; return bits per sample value in DX
   749                                  gsr_retn:
   750 0000045A 5B                              pop     bx
   751 0000045B C3                              retn
   752                                  
   753                                  gsr_stc:
   754 0000045C F9                      	stc
   755 0000045D EBFB                    	jmp	short gsr_retn
   756                                  
   757                                  ; ----	30/05/2024 (playwav4.asm, 19/05/2024)
   758                                  
   759                                  ; MEMALLOC.ASM
   760                                  ;-- SETFREE: Release memory not used  ----------------
   761                                  ;-- Input    : ES = address of PSP
   762                                  ;-- Output   : none
   763                                  ;-- Register : AX, BX, CL and FLAGS are changed 
   764                                  ;-- Info     : Since the stack-segment is always the last segment in an 
   765                                  ;              EXE-file, ES:0000 points to the beginning and SS:SP
   766                                  ;              to the end of the program in memory. Through this the
   767                                  ;              length of the program can be calculated 
   768                                  ; call this routine once at the beginning of the program to free up memory
   769                                  ; assigned to it by DOS.
   770                                  
   771                                  setFree:
   772 0000045F BB0010                  	mov	bx, 65536/16	; 4K paragraphs ; 17/02/2017 (Erdogan Tan)		
   773                                  
   774 00000462 B44A                    	mov	ah, 4Ah		; pass new length to DOS
   775 00000464 CD21                    	int	21h
   776                                  
   777 00000466 C3                      	retn			; back to caller 
   778                                  				; new size (allocated memory) = 64KB
   779                                  
   780                                  memAlloc:
   781                                  ; input: AX = # of paragraphs required
   782                                  ; output: AX = segment of block to use
   783                                  
   784 00000467 53                      	push	bx
   785 00000468 89C3                    	mov	bx, ax
   786 0000046A B448                    	mov	ah, 48h
   787 0000046C CD21                    	int	21h
   788 0000046E 5B                      	pop	bx
   789 0000046F C3                      	retn
   790                                  
   791                                  ; ----
   792                                  
   793                                  ; /////
   794                                  
   795                                  	; 30/05/2024 (ich_wav4.asm, 19/05/2024)
   796                                  loadFromFile:
   797                                  	; 07/11/2023
   798                                  
   799 00000470 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
   800                                  					; last of the file?
   801 00000475 7402                    	jz	short lff_0		; no
   802 00000477 F9                      	stc
   803 00000478 C3                      	retn
   804                                  
   805                                  lff_0:
   806                                  	; 08/11/2023
   807 00000479 89C5                    	mov	bp, ax ; save buffer segment	
   808                                  
   809 0000047B 8A0E[9A1F]              	mov	cl, [fbs_shift]   
   810 0000047F 20C9                    	and	cl, cl
   811 00000481 7467                    	jz	short lff_1 ; stereo, 16 bit	
   812                                  
   813 00000483 BFFFFF                  	mov	di, BUFFERSIZE - 1 ; 65535
   814                                  
   815                                  	; fbs_shift =
   816                                  	;	2 for mono and 8 bit sample (multiplier = 4)
   817                                  	;	1 for mono or 8 bit sample (multiplier = 2)
   818 00000486 D3EF                    	shr	di, cl
   819 00000488 47                      	inc	di ; 16384 for 8 bit and mono	
   820                                  		   ; 32768 for 8 bit or mono	
   821                                  
   822 00000489 8CC8                    	mov	ax, cs
   823 0000048B BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
   824                                  
   825                                  	; 17/02/2017 (stereo/mono, 8bit/16bit corrections)
   826                                  	; load file into memory
   827 0000048E 89F9                            mov	cx, di                       
   828 00000490 8B1E[2C1F]              	mov	bx, [filehandle]
   829 00000494 8ED8                    	mov     ds, ax
   830 00000496 B43F                           	mov	ah, 3Fh
   831 00000498 CD21                    	int	21h
   832                                  
   833 0000049A 8CCB                    	mov	bx, cs
   834 0000049C 8EDB                    	mov	ds, bx
   835                                  
   836 0000049E 727C                    	jc	short lff_4 ; error !
   837                                  
   838                                  	; 08/11/2023
   839 000004A0 31D2                    	xor	dx, dx ; 0
   840                                  
   841 000004A2 21C0                    	and	ax, ax
   842 000004A4 746D                    	jz	short lff_3
   843                                  
   844 000004A6 8A1E[9A1F]              	mov	bl, [fbs_shift]
   845                                  
   846 000004AA 06                      	push	es
   847 000004AB 89D7                    	mov	di, dx ; 0 ; [fbs_off]
   848                                  	;mov	bp, [fbs_seg] ; buffer segment
   849 000004AD 8EC5                    	mov	es, bp
   850 000004AF BE[9C1F]                	mov	si, temp_buffer ; temporary buffer address
   851 000004B2 89C1                    	mov	cx, ax ; byte count
   852 000004B4 803E[981F]08            	cmp	byte [bps], 8 ; bits per sample (8 or 16)
   853 000004B9 751B                    	jne	short lff_7 ; 16 bit samples
   854                                  	; 8 bit samples
   855 000004BB FECB                    	dec	bl  ; shift count, 1 = stereo, 2 = mono
   856 000004BD 740C                    	jz	short lff_6 ; 8 bit, stereo
   857                                  lff_5:
   858                                  	; mono & 8 bit
   859 000004BF AC                      	lodsb
   860 000004C0 2C80                    	sub	al, 80h ; 08/11/2023
   861 000004C2 C1E008                  	shl	ax, 8 ; convert 8 bit sample to 16 bit sample
   862 000004C5 AB                      	stosw	; left channel
   863 000004C6 AB                      	stosw	; right channel
   864 000004C7 E2F6                    	loop	lff_5
   865 000004C9 EB12                    	jmp	short lff_9	
   866                                  lff_6:
   867                                  	; stereo & 8 bit
   868 000004CB AC                      	lodsb
   869 000004CC 2C80                    	sub	al, 80h ; 08/11/2023
   870 000004CE C1E008                  	shl	ax, 8 ; convert 8 bit sample to 16 bit sample
   871 000004D1 AB                      	stosw
   872 000004D2 E2F7                    	loop	lff_6			
   873 000004D4 EB07                    	jmp	short lff_9
   874                                  lff_7:
   875 000004D6 D1E9                    	shr	cx, 1 ; word count
   876                                  lff_8:
   877 000004D8 AD                      	lodsw
   878 000004D9 AB                      	stosw	; left channel
   879 000004DA AB                      	stosw	; right channel
   880 000004DB E2FB                    	loop	lff_8
   881                                  lff_9:
   882 000004DD 07                      	pop	es
   883 000004DE 09FF                    	or	di, di
   884 000004E0 7439                    	jz	short endLFF ; 64KB ok 
   885                                  	
   886 000004E2 89F8                    	mov	ax, di ; [fbs_off]
   887 000004E4 48                      	dec	ax
   888 000004E5 B9FFFF                  	mov	cx, BUFFERSIZE - 1 ; 65535
   889 000004E8 EB29                    	jmp	short lff_3
   890                                  	
   891                                  lff_1:  
   892                                  	;mov	bp, ax ; save buffer segment
   893 000004EA 31D2                    	xor	dx, dx
   894                                  	; load file into memory
   895 000004EC B90080                          mov	cx, (BUFFERSIZE / 2)	; 32k chunk
   896 000004EF 8B1E[2C1F]              	mov	bx, [filehandle]
   897 000004F3 8ED8                    	mov     ds, ax
   898 000004F5 B43F                           	mov	ah, 3Fh
   899 000004F7 CD21                    	int	21h
   900                                  
   901 000004F9 8CCF                    	mov	di, cs
   902 000004FB 8EDF                    	mov	ds, di
   903                                  
   904                                  	; 07/11/2023
   905 000004FD 721D                    	jc	short lff_4 ; error !
   906                                  	
   907 000004FF 39C8                    	cmp	ax, cx
   908 00000501 7510                    	jne	short lff_3
   909                                  lff_2:
   910                                  	; 08/11/2023
   911 00000503 01C2                    	add	dx, ax
   912                                  	;mov	cx, (BUFFERSIZE / 2)	; 32k chunk
   913                                  	;mov	bx, [filehandle]
   914 00000505 8EDD                    	mov     ds, bp
   915 00000507 B43F                           	mov	ah, 3Fh
   916 00000509 CD21                    	int	21h
   917                                  
   918                                  	;mov	di, cs
   919 0000050B 8EDF                    	mov	ds, di
   920                                  
   921 0000050D 720D                    	jc	short lff_4 ; error !
   922                                  
   923 0000050F 39C8                    	cmp	ax, cx
   924 00000511 7408                    	je	short endLFF
   925                                  lff_3:
   926 00000513 E80F00                  	call    padfill			; blank pad the remainder
   927                                          ;clc				; don't exit with CY yet.
   928 00000516 800E[2E1F]01                    or	byte [flags], ENDOFFILE	; end of file flag
   929                                  endLFF:
   930 0000051B C3                              retn
   931                                  lff_4:
   932                                  	; 08/11/2023
   933 0000051C B021                    	mov	al, '!'  ; error
   934 0000051E E88DFE                  	call	tL0
   935                                  
   936 00000521 31C0                    	xor	ax, ax
   937 00000523 EBEE                    	jmp	short lff_3
   938                                  
   939                                  ; entry ds:ax points to last byte in file
   940                                  ; cx=target size
   941                                  ; note: must do byte size fill
   942                                  ; destroys bx, cx
   943                                  ;
   944                                  padfill:
   945                                  	; 07/11/2023
   946                                  	; 06/11/2023
   947                                  	; 17/02/2017
   948 00000525 06                      	push	es
   949                                          ;push	di
   950                                  	;mov	di, [fbs_seg]
   951                                  	;mov	es, di
   952 00000526 8EC5                            mov	es, bp
   953 00000528 29C1                    	sub	cx, ax
   954                                  	; 08/11/2023
   955                                  	;mov	di, ax ; (wrong)
   956 0000052A 89D7                    	mov	di, dx ; buffer offset
   957 0000052C 01C7                    	add	di, ax       	
   958                                  	; 07/11/2023
   959                                  	;add	di, [fbs_off]
   960 0000052E 30C0                            xor	al, al
   961 00000530 F3AA                    	rep	stosb
   962                                  	;mov	[fbs_off], di
   963                                  	;pop	di
   964 00000532 07                              pop	es
   965 00000533 C3                      	retn
   966                                  ; /////
   967                                  	
   968                                  write_audio_dev_info:
   969                                  	; 30/05/2024
   970                                       	sys_msg msgAudioCardInfo, 0Fh
    26                              <1> 
    27 00000534 BE[621C]            <1>  mov si, %1
    28 00000537 B30F                <1>  mov bl, %2
    29 00000539 30FF                <1>  xor bh, bh
    30 0000053B B40E                <1>  mov ah, 0Eh
    31 0000053D E8A919              <1>  call p_msg
   971 00000540 C3                      	retn
   972                                  
   973                                  write_wav_file_info:
   974                                  	; 30/05/2024
   975                                  	; 01/05/2017
   976                                  	sys_msg msgWavFileName, 0Fh
    26                              <1> 
    27 00000541 BE[AC1D]            <1>  mov si, %1
    28 00000544 B30F                <1>  mov bl, %2
    29 00000546 30FF                <1>  xor bh, bh
    30 00000548 B40E                <1>  mov ah, 0Eh
    31 0000054A E89C19              <1>  call p_msg
   977                                  	sys_msg wav_file_name, 0Fh
    26                              <1> 
    27 0000054D BE[301F]            <1>  mov si, %1
    28 00000550 B30F                <1>  mov bl, %2
    29 00000552 30FF                <1>  xor bh, bh
    30 00000554 B40E                <1>  mov ah, 0Eh
    31 00000556 E89019              <1>  call p_msg
   978                                  
   979                                  write_sample_rate:
   980                                  	; 30/05/2024
   981                                  	; 01/05/2017
   982 00000559 A1[941F]                	mov	ax, [sample_rate]
   983                                  	; ax = sample rate (hertz)
   984 0000055C 31D2                    	xor	dx, dx
   985 0000055E B90A00                  	mov	cx, 10
   986 00000561 F7F1                    	div	cx
   987 00000563 0016[D11D]              	add	[msgHertz+4], dl
   988 00000567 29D2                    	sub	dx, dx
   989 00000569 F7F1                    	div	cx
   990 0000056B 0016[D01D]              	add	[msgHertz+3], dl
   991 0000056F 29D2                    	sub	dx, dx
   992 00000571 F7F1                    	div	cx
   993 00000573 0016[CF1D]              	add	[msgHertz+2], dl
   994 00000577 29D2                    	sub	dx, dx
   995 00000579 F7F1                    	div	cx
   996 0000057B 0016[CE1D]              	add	[msgHertz+1], dl
   997 0000057F 0006[CD1D]              	add	[msgHertz], al
   998                                  	
   999                                  	; 30/05/2024
  1000                                  	sys_msg msgSampleRate, 0Fh
    26                              <1> 
    27 00000583 BE[BE1D]            <1>  mov si, %1
    28 00000586 B30F                <1>  mov bl, %2
    29 00000588 30FF                <1>  xor bh, bh
    30 0000058A B40E                <1>  mov ah, 0Eh
    31 0000058C E85A19              <1>  call p_msg
  1001                                  
  1002                                  	; 19/11/2016
  1003 0000058F BA[E61D]                	mov	dx, msg16Bits
  1004 00000592 803E[981F]10            	cmp	byte [bps], 16
  1005 00000597 7403                    	je	short wsr_1
  1006 00000599 BA[D81D]                	mov	dx, msg8Bits
  1007                                  wsr_1:
  1008                                  	; 30/05/2024
  1009                                  	sys_msg dx, 0Fh
    26                              <1> 
    27 0000059C 89D6                <1>  mov si, %1
    28 0000059E B30F                <1>  mov bl, %2
    29 000005A0 30FF                <1>  xor bh, bh
    30 000005A2 B40E                <1>  mov ah, 0Eh
    31 000005A4 E84219              <1>  call p_msg
  1010                                  
  1011 000005A7 BA[E11D]                	mov	dx, msgMono
  1012 000005AA 803E[961F]01            	cmp	byte [stmo], 1
  1013 000005AF 7403                    	je	short wsr_2
  1014 000005B1 BA[F01D]                	mov	dx, msgStereo
  1015                                  wsr_2:
  1016                                  	; 30/05/2024
  1017                                  	sys_msg dx, 0Fh
    26                              <1> 
    27 000005B4 89D6                <1>  mov si, %1
    28 000005B6 B30F                <1>  mov bl, %2
    29 000005B8 30FF                <1>  xor bh, bh
    30 000005BA B40E                <1>  mov ah, 0Eh
    31 000005BC E82A19              <1>  call p_msg
  1018                                  	; 30/05/2024
  1019                                  	sys_msg	nextline, 07h
    26                              <1> 
    27 000005BF BE[F71D]            <1>  mov si, %1
    28 000005C2 B307                <1>  mov bl, %2
    29 000005C4 30FF                <1>  xor bh, bh
    30 000005C6 B40E                <1>  mov ah, 0Eh
    31 000005C8 E81E19              <1>  call p_msg
  1020 000005CB C3                              retn
  1021                                  
  1022                                  write_ac97_pci_dev_info:
  1023                                  	; 30/05/2024
  1024                                  	; 06/06/2017
  1025                                  	; 03/06/2017
  1026                                  	; BUS/DEV/FN
  1027                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  1028                                  	; DEV/VENDOR
  1029                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  1030                                  
  1031 000005CC 66A1[901F]              	mov	eax, [dev_vendor]
  1032 000005D0 30FF                    	xor	bh, bh
  1033 000005D2 88C3                    	mov	bl, al
  1034 000005D4 88DA                    	mov	dl, bl
  1035 000005D6 80E30F                  	and	bl, 0Fh
  1036 000005D9 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1037 000005DD A2[3F1E]                	mov	[msgVendorId+3], al
  1038 000005E0 88D3                    	mov	bl, dl
  1039 000005E2 C0EB04                  	shr	bl, 4
  1040 000005E5 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1041 000005E9 A2[3E1E]                	mov	[msgVendorId+2], al
  1042 000005EC 88E3                    	mov	bl, ah
  1043 000005EE 88DA                    	mov	dl, bl
  1044 000005F0 80E30F                  	and	bl, 0Fh
  1045 000005F3 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1046 000005F7 A2[3D1E]                	mov	[msgVendorId+1], al
  1047 000005FA 88D3                    	mov	bl, dl
  1048 000005FC C0EB04                  	shr	bl, 4
  1049 000005FF 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1050 00000603 A2[3C1E]                	mov	[msgVendorId], al
  1051 00000606 66C1E810                	shr	eax, 16
  1052 0000060A 88C3                    	mov	bl, al
  1053 0000060C 88DA                    	mov	dl, bl
  1054 0000060E 80E30F                  	and	bl, 0Fh
  1055 00000611 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1056 00000615 A2[501E]                	mov	[msgDevId+3], al
  1057 00000618 88D3                    	mov	bl, dl
  1058 0000061A C0EB04                  	shr	bl, 4
  1059 0000061D 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1060 00000621 A2[4F1E]                	mov	[msgDevId+2], al
  1061 00000624 88E3                    	mov	bl, ah
  1062 00000626 88DA                    	mov	dl, bl
  1063 00000628 80E30F                  	and	bl, 0Fh
  1064 0000062B 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1065 0000062F A2[4E1E]                	mov	[msgDevId+1], al
  1066 00000632 88D3                    	mov	bl, dl
  1067 00000634 C0EB04                  	shr	bl, 4
  1068 00000637 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1069 0000063B A2[4D1E]                	mov	[msgDevId], al
  1070                                  
  1071 0000063E 66A1[8C1F]              	mov	eax, [bus_dev_fn]
  1072 00000642 66C1E808                	shr	eax, 8
  1073 00000646 88C3                    	mov	bl, al
  1074 00000648 88DA                    	mov	dl, bl
  1075 0000064A 80E307                  	and	bl, 7 ; bit 0,1,2
  1076 0000064D 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1077 00000651 A2[741E]                	mov	[msgFncNo+1], al
  1078 00000654 88D3                    	mov	bl, dl
  1079 00000656 C0EB03                  	shr	bl, 3
  1080 00000659 88DA                    	mov	dl, bl
  1081 0000065B 80E30F                  	and	bl, 0Fh
  1082 0000065E 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1083 00000662 A2[661E]                	mov	[msgDevNo+1], al
  1084 00000665 88D3                    	mov	bl, dl
  1085 00000667 C0EB04                  	shr	bl, 4
  1086 0000066A 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1087 0000066E A2[651E]                	mov	[msgDevNo], al
  1088 00000671 88E3                    	mov	bl, ah
  1089 00000673 88DA                    	mov	dl, bl
  1090 00000675 80E30F                  	and	bl, 0Fh
  1091 00000678 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1092 0000067C A2[5A1E]                	mov	[msgBusNo+1], al
  1093 0000067F 88D3                    	mov	bl, dl
  1094 00000681 C0EB04                  	shr	bl, 4
  1095 00000684 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1096 00000688 A2[591E]                	mov	[msgBusNo], al
  1097                                  
  1098                                  	;mov	ax, [ac97_NamBar]
  1099 0000068B A1[821F]                	mov	ax, [NAMBAR]
  1100 0000068E 88C3                    	mov	bl, al
  1101 00000690 88DA                    	mov	dl, bl
  1102 00000692 80E30F                  	and	bl, 0Fh
  1103 00000695 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1104 00000699 A2[831E]                	mov	[msgNamBar+3], al
  1105 0000069C 88D3                    	mov	bl, dl
  1106 0000069E C0EB04                  	shr	bl, 4
  1107 000006A1 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1108 000006A5 A2[821E]                	mov	[msgNamBar+2], al
  1109 000006A8 88E3                    	mov	bl, ah
  1110 000006AA 88DA                    	mov	dl, bl
  1111 000006AC 80E30F                  	and	bl, 0Fh
  1112 000006AF 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1113 000006B3 A2[811E]                	mov	[msgNamBar+1], al
  1114 000006B6 88D3                    	mov	bl, dl
  1115 000006B8 C0EB04                  	shr	bl, 4
  1116 000006BB 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1117 000006BF A2[801E]                	mov	[msgNamBar], al
  1118                                  
  1119                                  	;mov	ax, [ac97_NabmBar]
  1120 000006C2 A1[841F]                	mov	ax, [NABMBAR]
  1121 000006C5 88C3                    	mov	bl, al
  1122 000006C7 88DA                    	mov	dl, bl
  1123 000006C9 80E30F                  	and	bl, 0Fh
  1124 000006CC 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1125 000006D0 A2[931E]                	mov	[msgNabmBar+3], al
  1126 000006D3 88D3                    	mov	bl, dl
  1127 000006D5 C0EB04                  	shr	bl, 4
  1128 000006D8 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1129 000006DC A2[921E]                	mov	[msgNabmBar+2], al
  1130 000006DF 88E3                    	mov	bl, ah
  1131 000006E1 88DA                    	mov	dl, bl
  1132 000006E3 80E30F                  	and	bl, 0Fh
  1133 000006E6 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1134 000006EA A2[911E]                	mov	[msgNabmBar+1], al
  1135 000006ED 88D3                    	mov	bl, dl
  1136 000006EF C0EB04                  	shr	bl, 4
  1137 000006F2 8A87[FA1D]              	mov	al, [bx+hex_chars]
  1138 000006F6 A2[901E]                	mov	[msgNabmBar], al
  1139                                  
  1140 000006F9 6631C0                  	xor	eax, eax
  1141 000006FC A0[2F1F]                	mov	al, [ac97_int_ln_reg]
  1142 000006FF B10A                    	mov	cl, 10
  1143 00000701 F6F1                    	div	cl
  1144 00000703 0106[9C1E]              	add	[msgIRQ], ax
  1145 00000707 20C0                    	and	al, al
  1146 00000709 7508                    	jnz	short _w_ac97imsg_
  1147 0000070B A0[9D1E]                	mov	al, [msgIRQ+1]
  1148 0000070E B420                    	mov	ah, ' '
  1149 00000710 A3[9C1E]                	mov	[msgIRQ], ax
  1150                                  _w_ac97imsg_:
  1151                                  	; 30/05/2024
  1152                                  	sys_msg msgAC97Info, 07h
    26                              <1> 
    27 00000713 BE[0B1E]            <1>  mov si, %1
    28 00000716 B307                <1>  mov bl, %2
    29 00000718 30FF                <1>  xor bh, bh
    30 0000071A B40E                <1>  mov ah, 0Eh
    31 0000071C E8CA17              <1>  call p_msg
  1153                                  
  1154 0000071F C3                              retn
  1155                                  
  1156                                  	; 30/05/2024
  1157                                  write_VRA_info:
  1158                                  	sys_msg	msgVRAheader, 07h
    26                              <1> 
    27 00000720 BE[A11E]            <1>  mov si, %1
    28 00000723 B307                <1>  mov bl, %2
    29 00000725 30FF                <1>  xor bh, bh
    30 00000727 B40E                <1>  mov ah, 0Eh
    31 00000729 E8BD17              <1>  call p_msg
  1159 0000072C 803E[0E1F]00            	cmp	byte [VRA], 0
  1160 00000731 760D                    	jna	short _w_VRAi_no
  1161                                  _w_VRAi_yes:
  1162                                  	sys_msg msgVRAyes, 07h
    26                              <1> 
    27 00000733 BE[AF1E]            <1>  mov si, %1
    28 00000736 B307                <1>  mov bl, %2
    29 00000738 30FF                <1>  xor bh, bh
    30 0000073A B40E                <1>  mov ah, 0Eh
    31 0000073C E8AA17              <1>  call p_msg
  1163 0000073F C3                      	retn
  1164                                  _w_VRAi_no:
  1165                                  	sys_msg msgVRAno, 07h
    26                              <1> 
    27 00000740 BE[B51E]            <1>  mov si, %1
    28 00000743 B307                <1>  mov bl, %2
    29 00000745 30FF                <1>  xor bh, bh
    30 00000747 B40E                <1>  mov ah, 0Eh
    31 00000749 E89D17              <1>  call p_msg
  1166 0000074C C3                      	retn
  1167                                  
  1168                                  ; 30/05/2024 (playwav6.asm)
  1169                                  ; 18/11/2023 (ich_wav3.asm & ich_wav4.asm)
  1170                                  ; 15/11/2023 (ich_wav3.asm)	
  1171                                  ; 14/11/2023
  1172                                  ; 13/11/2023 - Erdogan Tan - (VRA, sample rate conversion)
  1173                                  ; --------------------------------------------------------
  1174                                  
  1175                                  ;;Note:	At the end of every buffer load,
  1176                                  ;;	during buffer switch/swap, there will be discontinuity
  1177                                  ;;	between the last converted sample and the 1st sample
  1178                                  ;;	of the next buffer.
  1179                                  ;;	(like as a dot noises vaguely between normal sound samples)
  1180                                  ;;	-To avoid this defect, the 1st sample of
  1181                                  ;;	the next buffer may be read from the wav file but
  1182                                  ;;	the file pointer would need to be set to 1 sample back
  1183                                  ;;	again via seek system call. Time comsumption problem! -
  1184                                  ;;
  1185                                  ;;	Erdogan Tan - 15/11/2023
  1186                                  ;;
  1187                                  ;;	((If entire wav data would be loaded at once.. conversion
  1188                                  ;;	defect/noise would disappear.. but for DOS, to keep
  1189                                  ;;	64KB buffer limit is important also it is important
  1190                                  ;;	for running under 1MB barrier without HIMEM.SYS or DPMI.
  1191                                  ;;	I have tested this program by using 2-30MB wav files.))
  1192                                  ;;
  1193                                  ;;	Test Computer:	ASUS desktop/mainboard, M2N4-SLI, 2010.
  1194                                  ;;			AMD Athlon 64 X2 2200 MHZ CPU.
  1195                                  ;;		       	NFORCE4 (CK804) AC97 audio hardware.
  1196                                  ;;			Realtek ALC850 codec.
  1197                                  ;;		       	Retro DOS v4.2 (MSDOS 6.22) operating system.
  1198                                  
  1199                                  load_8khz_mono_8_bit:
  1200                                  	; 15/11/2023
  1201                                  	; 14/11/2023
  1202                                  	; 13/11/2023
  1203 0000074D F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1204                                  					; last of the file?
  1205 00000752 7402                    	jz	short lff8m_0		; no
  1206 00000754 F9                      	stc
  1207 00000755 C3                      	retn
  1208                                  
  1209                                  lff8m_0:
  1210 00000756 8EC0                    	mov	es, ax ; buffer segment	
  1211 00000758 31FF                    	xor	di, di
  1212 0000075A BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1213                                  	; ds = cs
  1214                                  
  1215                                  	; load file into memory
  1216 0000075D 8B0E[9302]                      mov	cx, [loadsize]
  1217 00000761 8B1E[2C1F]              	mov	bx, [filehandle]
  1218 00000765 B43F                           	mov	ah, 3Fh
  1219 00000767 CD21                    	int	21h
  1220                                  	;jc	short lff8m_5 ; error !
  1221                                  	; 14/11/2023
  1222 00000769 7303                    	jnc	short lff8m_6
  1223 0000076B E98B00                  	jmp	lff8m_5
  1224                                  
  1225                                  lff8m_6:
  1226 0000076E 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1227 00000770 21C0                    	and	ax, ax
  1228                                  	;jz	short lff8m_3
  1229                                  	; 15/11/2023
  1230 00000772 747E                    	jz	short lff8_eof
  1231                                  
  1232 00000774 89C1                    	mov	cx, ax		; byte count
  1233                                  lff8m_1:
  1234 00000776 AC                      	lodsb
  1235 00000777 A2[4A18]                	mov	[previous_val], al
  1236 0000077A 2C80                    	sub	al, 80h
  1237 0000077C C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1238 0000077F AB                      	stosw		; original sample (left channel)
  1239 00000780 AB                      	stosw		; original sample (right channel)
  1240                                  	;xor	ax, ax
  1241                                  	; 14/11/2023
  1242 00000781 B080                    	mov	al, 80h
  1243 00000783 49                      	dec	cx
  1244 00000784 7402                    	jz	short lff8m_2
  1245 00000786 8A04                    	mov	al, [si]
  1246                                  lff8m_2:
  1247                                  	;mov	[next_val], ax
  1248 00000788 88C7                    	mov	bh, al	; [next_val]
  1249 0000078A 8A26[4A18]              	mov	ah, [previous_val]
  1250 0000078E 00E0                    	add	al, ah	; [previous_val]
  1251 00000790 D0D8                    	rcr	al, 1
  1252 00000792 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample
  1253 00000794 00E0                    	add	al, ah	; [previous_val]
  1254 00000796 D0D8                    	rcr	al, 1	
  1255 00000798 88C3                    	mov	bl, al 	; this is temporary interpolation value	
  1256 0000079A 00E0                    	add	al, ah	; [previous_val]
  1257 0000079C D0D8                    	rcr	al, 1
  1258 0000079E 2C80                    	sub	al, 80h
  1259 000007A0 C1E008                  	shl	ax, 8	
  1260 000007A3 AB                      	stosw		; this is 1st interpolated sample (L)
  1261 000007A4 AB                      	stosw		; this is 1st interpolated sample (R)
  1262 000007A5 88D8                    	mov	al, bl
  1263 000007A7 00D0                    	add	al, dl
  1264 000007A9 D0D8                    	rcr	al, 1
  1265 000007AB 2C80                    	sub	al, 80h
  1266 000007AD C1E008                  	shl	ax, 8
  1267 000007B0 AB                      	stosw		; this is 2nd interpolated sample (L)
  1268 000007B1 AB                      	stosw		; this is 2nd interpolated sample (R)
  1269 000007B2 88D0                    	mov	al, dl
  1270 000007B4 2C80                    	sub	al, 80h
  1271 000007B6 C1E008                  	shl	ax, 8
  1272 000007B9 AB                      	stosw		; this is middle (3th) interpolated sample (L)
  1273 000007BA AB                      	stosw		; this is middle (3th) interpolated sample (R)
  1274                                  	;mov	al, [next_val]
  1275 000007BB 88F8                    	mov	al, bh
  1276 000007BD 00D0                    	add	al, dl
  1277 000007BF D0D8                    	rcr	al, 1
  1278 000007C1 88C3                    	mov	bl, al	; this is temporary interpolation value
  1279 000007C3 00D0                    	add	al, dl
  1280 000007C5 D0D8                    	rcr	al, 1
  1281 000007C7 2C80                    	sub	al, 80h
  1282 000007C9 C1E008                  	shl	ax, 8
  1283 000007CC AB                      	stosw		; this is 4th interpolated sample (L)
  1284 000007CD AB                      	stosw		; this is 4th interpolated sample (R)
  1285                                  	;mov	al, [next_val]
  1286 000007CE 88F8                    	mov	al, bh
  1287 000007D0 00D8                    	add	al, bl
  1288 000007D2 D0D8                    	rcr	al, 1
  1289 000007D4 2C80                    	sub	al, 80h
  1290 000007D6 C1E008                  	shl	ax, 8
  1291 000007D9 AB                      	stosw		; this is 5th interpolated sample (L)
  1292 000007DA AB                      	stosw		; this is 5th interpolated sample (R)
  1293                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1294 000007DB 09C9                    	or	cx, cx
  1295 000007DD 7597                    	jnz	short lff8m_1
  1296                                  
  1297                                  	; --------------
  1298                                  
  1299                                  lff8s_3:
  1300                                  lff8m_3:
  1301                                  lff8s2_3:
  1302                                  lff8m2_3:
  1303                                  lff16s_3:
  1304                                  lff16m_3:
  1305                                  lff16s2_3:
  1306                                  lff16m2_3:
  1307                                  lff24_3:
  1308                                  lff32_3:
  1309                                  lff44_3:
  1310                                  lff22_3:
  1311                                  lff11_3:
  1312 000007DF 8B0E[9502]              	mov	cx, [buffersize] ; 16 bit (48 kHZ, stereo) sample size
  1313 000007E3 D1E1                    	shl	cx, 1	; byte count
  1314 000007E5 29F9                    	sub	cx, di
  1315 000007E7 7606                    	jna	short lff8m_4
  1316                                  	;inc	cx
  1317 000007E9 D1E9                    	shr	cx, 1
  1318 000007EB 31C0                    	xor	ax, ax	; fill (remain part of) buffer with zeros	
  1319 000007ED F3AB                    	rep	stosw
  1320                                  lff8m_4:
  1321 000007EF 0E                      	push	cs
  1322 000007F0 07                      	pop	es
  1323 000007F1 C3                      	retn
  1324                                  
  1325                                  lff8_eof:
  1326                                  lff16_eof:
  1327                                  lff24_eof:
  1328                                  lff32_eof:
  1329                                  lff44_eof:
  1330                                  lff22_eof:
  1331                                  lff11_eof:
  1332                                  	; 15/11/2023
  1333 000007F2 C606[2E1F]01            	mov	byte [flags], ENDOFFILE
  1334 000007F7 EBE6                    	jmp	short lff8m_3
  1335                                  
  1336                                  lff8s_5:
  1337                                  lff8m_5:
  1338                                  lff8s2_5:
  1339                                  lff8m2_5:
  1340                                  lff16s_5:
  1341                                  lff16m_5:
  1342                                  lff16s2_5:
  1343                                  lff16m2_5:
  1344                                  lff24_5:
  1345                                  lff32_5:
  1346                                  lff44_5:
  1347                                  lff22_5:
  1348                                  lff11_5:
  1349 000007F9 B021                    	mov	al, '!'  ; error
  1350 000007FB E8B0FB                  	call	tL0
  1351                                  	
  1352                                  	;jmp	short lff8m_3
  1353                                  	; 15/11/2023
  1354 000007FE EBF2                    	jmp	lff8_eof
  1355                                  
  1356                                  	; --------------
  1357                                  
  1358                                  load_8khz_stereo_8_bit:
  1359                                  	; 15/11/2023
  1360                                  	; 14/11/2023
  1361                                  	; 13/11/2023
  1362 00000800 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1363                                  					; last of the file?
  1364 00000805 7402                    	jz	short lff8s_0		; no
  1365 00000807 F9                      	stc
  1366 00000808 C3                      	retn
  1367                                  
  1368                                  lff8s_0:
  1369 00000809 8EC0                    	mov	es, ax ; buffer segment	
  1370 0000080B 31FF                    	xor	di, di
  1371 0000080D BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1372                                  	; ds = cs
  1373                                  
  1374                                  	; load file into memory
  1375 00000810 8B0E[9302]                      mov	cx, [loadsize]
  1376 00000814 8B1E[2C1F]              	mov	bx, [filehandle]
  1377 00000818 B43F                           	mov	ah, 3Fh
  1378 0000081A CD21                    	int	21h
  1379 0000081C 72DB                    	jc	short lff8s_5 ; error !
  1380                                  
  1381 0000081E 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1382                                  	
  1383 00000820 D1E8                    	shr	ax, 1
  1384                                  	;;and	ax, ax
  1385                                  	;jz	short lff8s_3
  1386                                  	; 15/11/2023
  1387 00000822 74CE                    	jz	short lff8_eof
  1388                                  
  1389 00000824 89C1                    	mov	cx, ax		; word count
  1390                                  lff8s_1:
  1391 00000826 AC                      	lodsb
  1392 00000827 A2[4A18]                	mov	[previous_val_l], al
  1393 0000082A 2C80                    	sub	al, 80h
  1394 0000082C C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1395 0000082F AB                      	stosw		; original sample (L)
  1396 00000830 AC                      	lodsb
  1397 00000831 A2[4C18]                	mov	[previous_val_r], al
  1398 00000834 2C80                    	sub	al, 80h
  1399 00000836 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1400 00000839 AB                      	stosw		; original sample (R)
  1401                                  
  1402                                  	;xor	ax, ax
  1403                                  	; 14/11/2023
  1404 0000083A B88080                  	mov	ax, 8080h
  1405 0000083D 49                      	dec	cx
  1406 0000083E 7402                    	jz	short lff8s_2
  1407                                  		; convert 8 bit sample to 16 bit sample
  1408 00000840 8B04                    	mov	ax, [si]
  1409                                  lff8s_2:
  1410 00000842 A2[4E18]                	mov	[next_val_l], al
  1411 00000845 8826[5018]              	mov	[next_val_r], ah
  1412 00000849 8A26[4A18]              	mov	ah, [previous_val_l]
  1413 0000084D 00E0                    	add	al, ah
  1414 0000084F D0D8                    	rcr	al, 1
  1415 00000851 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample (L)
  1416 00000853 00E0                    	add	al, ah
  1417 00000855 D0D8                    	rcr	al, 1	
  1418 00000857 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1419 00000859 00E0                    	add	al, ah
  1420 0000085B D0D8                    	rcr	al, 1
  1421 0000085D 2C80                    	sub	al, 80h
  1422 0000085F C1E008                  	shl	ax, 8
  1423 00000862 AB                      	stosw		; this is 1st interpolated sample (L)
  1424 00000863 A0[5018]                	mov	al, [next_val_r]
  1425 00000866 8A26[4C18]              	mov	ah, [previous_val_r]
  1426 0000086A 00E0                    	add	al, ah
  1427 0000086C D0D8                    	rcr	al, 1
  1428 0000086E 88C6                    	mov	dh, al	; this is interpolated middle (3th) sample (R)
  1429 00000870 00E0                    	add	al, ah
  1430 00000872 D0D8                    	rcr	al, 1
  1431 00000874 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1432 00000876 00E0                    	add	al, ah
  1433 00000878 D0D8                    	rcr	al, 1
  1434 0000087A 2C80                    	sub	al, 80h
  1435 0000087C C1E008                  	shl	ax, 8
  1436 0000087F AB                      	stosw		; this is 1st interpolated sample (R)
  1437 00000880 88D8                    	mov	al, bl
  1438 00000882 00D0                    	add	al, dl
  1439 00000884 D0D8                    	rcr	al, 1
  1440 00000886 2C80                    	sub	al, 80h
  1441 00000888 C1E008                  	shl	ax, 8
  1442 0000088B AB                      	stosw		; this is 2nd interpolated sample (L)
  1443 0000088C 88F8                    	mov	al, bh
  1444 0000088E 00F0                    	add	al, dh
  1445 00000890 D0D8                    	rcr	al, 1
  1446 00000892 2C80                    	sub	al, 80h
  1447 00000894 C1E008                  	shl	ax, 8
  1448 00000897 AB                      	stosw 		; this is 2nd interpolated sample (R)
  1449 00000898 88D0                    	mov	al, dl
  1450 0000089A 2C80                    	sub	al, 80h
  1451 0000089C C1E008                  	shl	ax, 8
  1452 0000089F AB                      	stosw		; this is middle (3th) interpolated sample (L)
  1453 000008A0 88F0                    	mov	al, dh
  1454 000008A2 2C80                    	sub	al, 80h
  1455 000008A4 C1E008                  	shl	ax, 8
  1456 000008A7 AB                      	stosw		; this is middle (3th) interpolated sample (R)
  1457 000008A8 A0[4E18]                	mov	al, [next_val_l]
  1458 000008AB 00D0                    	add	al, dl
  1459 000008AD D0D8                    	rcr	al, 1
  1460 000008AF 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1461 000008B1 00D0                    	add	al, dl
  1462 000008B3 D0D8                    	rcr	al, 1
  1463 000008B5 2C80                    	sub	al, 80h
  1464 000008B7 C1E008                  	shl	ax, 8
  1465 000008BA AB                      	stosw		; this is 4th interpolated sample (L)
  1466 000008BB A0[5018]                	mov	al, [next_val_r]
  1467 000008BE 00F0                    	add	al, dh
  1468 000008C0 D0D8                    	rcr	al, 1
  1469 000008C2 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1470 000008C4 00F0                    	add	al, dh
  1471 000008C6 D0D8                    	rcr	al, 1
  1472 000008C8 2C80                    	sub	al, 80h
  1473 000008CA C1E008                  	shl	ax, 8
  1474 000008CD AB                      	stosw		; this is 4th interpolated sample (R)
  1475 000008CE A0[4E18]                	mov	al, [next_val_l]
  1476 000008D1 00D8                    	add	al, bl
  1477 000008D3 D0D8                    	rcr	al, 1
  1478 000008D5 2C80                    	sub	al, 80h
  1479 000008D7 C1E008                  	shl	ax, 8
  1480 000008DA AB                      	stosw		; this is 5th interpolated sample (L)
  1481 000008DB A0[5018]                	mov	al, [next_val_r]
  1482 000008DE 00F8                    	add	al, bh
  1483 000008E0 D0D8                    	rcr	al, 1
  1484 000008E2 2C80                    	sub	al, 80h
  1485 000008E4 C1E008                  	shl	ax, 8
  1486 000008E7 AB                      	stosw		; this is 5th interpolated sample (R)
  1487                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1488 000008E8 E303                    	jcxz	lff8s_6
  1489 000008EA E939FF                  	jmp	lff8s_1
  1490                                  lff8s_6:
  1491 000008ED E9EFFE                  	jmp	lff8s_3
  1492                                  
  1493                                  load_8khz_mono_16_bit:
  1494                                  	; 13/11/2023
  1495 000008F0 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1496                                  					; last of the file?
  1497 000008F5 7402                    	jz	short lff8m2_0		; no
  1498 000008F7 F9                      	stc
  1499 000008F8 C3                      	retn
  1500                                  
  1501                                  lff8m2_0:
  1502 000008F9 8EC0                    	mov	es, ax ; buffer segment	
  1503 000008FB 31FF                    	xor	di, di
  1504 000008FD BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1505                                  	; ds = cs
  1506                                  
  1507                                  	; load file into memory
  1508 00000900 8B0E[9302]                      mov	cx, [loadsize]
  1509 00000904 8B1E[2C1F]              	mov	bx, [filehandle]
  1510 00000908 B43F                           	mov	ah, 3Fh
  1511 0000090A CD21                    	int	21h
  1512 0000090C 7270                    	jc	short lff8m2_7 ; error !
  1513                                  
  1514 0000090E 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1515                                  	
  1516 00000910 D1E8                    	shr	ax, 1
  1517                                  	;and	ax, ax
  1518 00000912 7503                    	jnz	short lff8m2_8
  1519                                  	;jmp	lff8m2_3
  1520                                  	; 15/11/2023
  1521 00000914 E9DBFE                  	jmp	lff8_eof
  1522                                  
  1523                                  lff8m2_8:
  1524 00000917 89C1                    	mov	cx, ax		; word count
  1525                                  lff8m2_1:
  1526 00000919 AD                      	lodsw
  1527 0000091A AB                      	stosw		; original sample (left channel)
  1528 0000091B AB                      	stosw		; original sample (right channel)
  1529 0000091C 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1530 0000091F A3[4A18]                	mov	[previous_val], ax
  1531 00000922 31C0                    	xor	ax, ax
  1532 00000924 49                      	dec	cx
  1533 00000925 7402                    	jz	short lff8m2_2
  1534 00000927 8B04                    	mov	ax, [si]
  1535                                  lff8m2_2:
  1536 00000929 80C480                  	add	ah, 80h ; convert sound level to 0-65535 format
  1537 0000092C 89C5                    	mov	bp, ax	; [next_val]
  1538 0000092E 0306[4A18]              	add	ax, [previous_val]
  1539 00000932 D1D8                    	rcr	ax, 1
  1540 00000934 89C2                    	mov	dx, ax	; this is interpolated middle (3th) sample
  1541 00000936 0306[4A18]              	add	ax, [previous_val]
  1542 0000093A D1D8                    	rcr	ax, 1	; this is temporary interpolation value
  1543 0000093C 89C3                    	mov	bx, ax 		
  1544 0000093E 0306[4A18]              	add	ax, [previous_val]
  1545 00000942 D1D8                    	rcr	ax, 1
  1546 00000944 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1547 00000947 AB                      	stosw		; this is 1st interpolated sample (L)
  1548 00000948 AB                      	stosw		; this is 1st interpolated sample (R)
  1549 00000949 89D8                    	mov	ax, bx
  1550 0000094B 01D0                    	add	ax, dx
  1551 0000094D D1D8                    	rcr	ax, 1
  1552 0000094F 80EC80                  	sub	ah, 80h
  1553 00000952 AB                      	stosw		; this is 2nd interpolated sample (L)
  1554 00000953 AB                      	stosw		; this is 2nd interpolated sample (R)
  1555 00000954 89D0                    	mov	ax, dx
  1556 00000956 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1557 00000959 AB                      	stosw		; this is middle (3th) interpolated sample (L)
  1558 0000095A AB                      	stosw		; this is middle (3th) interpolated sample (R)
  1559 0000095B 89E8                    	mov	ax, bp
  1560 0000095D 01D0                    	add	ax, dx
  1561 0000095F D1D8                    	rcr	ax, 1
  1562 00000961 89C3                    	mov	bx, ax	; this is temporary interpolation value
  1563 00000963 01D0                    	add	ax, dx
  1564 00000965 D1D8                    	rcr	ax, 1
  1565 00000967 80EC80                  	sub	ah, 80h
  1566 0000096A AB                      	stosw		; this is 4th interpolated sample (L)
  1567 0000096B AB                      	stosw		; this is 4th interpolated sample (R)
  1568 0000096C 89E8                    	mov	ax, bp
  1569 0000096E 01D8                    	add	ax, bx
  1570 00000970 D1D8                    	rcr	ax, 1
  1571 00000972 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1572 00000975 AB                      	stosw		; this is 5th interpolated sample (L)
  1573 00000976 AB                      	stosw		; this is 5th interpolated sample (R)
  1574                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1575 00000977 09C9                    	or	cx, cx
  1576 00000979 759E                    	jnz	short lff8m2_1
  1577 0000097B E961FE                  	jmp	lff8m2_3
  1578                                  
  1579                                  lff8m2_7:
  1580                                  lff8s2_7:
  1581 0000097E E978FE                  	jmp	lff8m2_5  ; error
  1582                                  
  1583                                  load_8khz_stereo_16_bit:
  1584                                  	; 16/11/2023
  1585                                  	; 15/11/2023
  1586                                  	; 13/11/2023
  1587 00000981 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1588                                  					; last of the file?
  1589 00000986 7402                    	jz	short lff8s2_0		; no
  1590 00000988 F9                      	stc
  1591 00000989 C3                      	retn
  1592                                  
  1593                                  lff8s2_0:
  1594 0000098A 8EC0                    	mov	es, ax ; buffer segment	
  1595 0000098C 31FF                    	xor	di, di
  1596 0000098E BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1597                                  	; ds = cs
  1598                                  
  1599                                  	; load file into memory
  1600 00000991 8B0E[9302]                      mov	cx, [loadsize]
  1601 00000995 8B1E[2C1F]              	mov	bx, [filehandle]
  1602 00000999 B43F                           	mov	ah, 3Fh
  1603 0000099B CD21                    	int	21h
  1604 0000099D 72DF                    	jc	short lff8s2_7 ; error !
  1605                                  
  1606 0000099F 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1607                                  	
  1608 000009A1 C1E802                  	shr	ax, 2	; 16/11/2023
  1609                                  	;and	ax, ax
  1610 000009A4 7503                    	jnz	short lff8s2_8
  1611                                  	;jmp	lff8s2_3
  1612                                  	; 15/11/2023
  1613 000009A6 E949FE                  	jmp	lff8_eof
  1614                                  
  1615                                  lff8s2_8:
  1616 000009A9 89C1                    	mov	cx, ax ; dword count
  1617                                  lff8s2_1:
  1618 000009AB AD                      	lodsw
  1619 000009AC AB                      	stosw		; original sample (L)
  1620                                  	; 15/11/2023
  1621 000009AD 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1622 000009B0 A3[4A18]                	mov	[previous_val_l], ax
  1623 000009B3 AD                      	lodsw
  1624 000009B4 AB                      	stosw		; original sample (R)
  1625 000009B5 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1626 000009B8 A3[4C18]                	mov	[previous_val_r], ax
  1627 000009BB 31D2                    	xor	dx, dx
  1628 000009BD 31C0                    	xor	ax, ax
  1629                                  	; 16/11/2023
  1630 000009BF 49                      	dec	cx
  1631 000009C0 7405                    	jz	short lff8s2_2
  1632 000009C2 8B04                    	mov	ax, [si]
  1633 000009C4 8B5402                  	mov	dx, [si+2]
  1634                                  lff8s2_2:
  1635 000009C7 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1636 000009CA A3[4E18]                	mov	[next_val_l], ax
  1637 000009CD 80C680                  	add	dh, 80h	; convert sound level to 0-65535 format
  1638 000009D0 8916[5018]              	mov	[next_val_r], dx
  1639 000009D4 0306[4A18]              	add	ax, [previous_val_l]
  1640 000009D8 D1D8                    	rcr	ax, 1
  1641 000009DA 89C2                    	mov	dx, ax	; this is interpolated middle (3th) sample (L)
  1642 000009DC 0306[4A18]              	add	ax, [previous_val_l]
  1643 000009E0 D1D8                    	rcr	ax, 1	
  1644 000009E2 89C3                    	mov	bx, ax 	; this is temporary interpolation value (L)
  1645 000009E4 0306[4A18]              	add	ax, [previous_val_l]
  1646 000009E8 D1D8                    	rcr	ax, 1
  1647 000009EA 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1648 000009ED AB                      	stosw		; this is 1st interpolated sample (L)
  1649 000009EE A1[5018]                	mov	ax, [next_val_r]
  1650 000009F1 0306[4C18]              	add	ax, [previous_val_r]
  1651 000009F5 D1D8                    	rcr	ax, 1
  1652 000009F7 89C5                    	mov	bp, ax	; this is interpolated middle (3th) sample (R)
  1653 000009F9 0306[4C18]              	add	ax, [previous_val_r]
  1654 000009FD D1D8                    	rcr	ax, 1
  1655 000009FF 50                      	push	ax ; *	; this is temporary interpolation value (R)
  1656 00000A00 0306[4C18]              	add	ax, [previous_val_r]
  1657 00000A04 D1D8                    	rcr	ax, 1
  1658 00000A06 80EC80                  	sub	ah, 80h
  1659 00000A09 AB                      	stosw		; this is 1st interpolated sample (R)
  1660 00000A0A 89D8                    	mov	ax, bx
  1661 00000A0C 01D0                    	add	ax, dx
  1662 00000A0E D1D8                    	rcr	ax, 1
  1663 00000A10 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1664 00000A13 AB                      	stosw		; this is 2nd interpolated sample (L)
  1665 00000A14 58                      	pop	ax ; *
  1666 00000A15 01E8                    	add	ax, bp
  1667 00000A17 D1D8                    	rcr	ax, 1
  1668 00000A19 80EC80                  	sub	ah, 80h
  1669 00000A1C AB                      	stosw 		; this is 2nd interpolated sample (R)
  1670 00000A1D 89D0                    	mov	ax, dx
  1671 00000A1F 80EC80                  	sub	ah, 80h
  1672 00000A22 AB                      	stosw		; this is middle (3th) interpolated sample (L)
  1673 00000A23 89E8                    	mov	ax, bp
  1674 00000A25 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1675 00000A28 AB                      	stosw		; this is middle (3th) interpolated sample (R)
  1676 00000A29 A1[4E18]                	mov	ax, [next_val_l]
  1677 00000A2C 01D0                    	add	ax, dx
  1678 00000A2E D1D8                    	rcr	ax, 1
  1679 00000A30 89C3                    	mov	bx, ax	; this is temporary interpolation value (L)
  1680 00000A32 01D0                    	add	ax, dx
  1681 00000A34 D1D8                    	rcr	ax, 1
  1682 00000A36 80EC80                  	sub	ah, 80h
  1683 00000A39 AB                      	stosw		; this is 4th interpolated sample (L)
  1684 00000A3A A1[5018]                	mov	ax, [next_val_r]
  1685 00000A3D 01E8                    	add	ax, bp
  1686 00000A3F D1D8                    	rcr	ax, 1
  1687 00000A41 50                      	push	ax ; ** ; this is temporary interpolation value (R)
  1688 00000A42 01E8                    	add	ax, bp
  1689 00000A44 D1D8                    	rcr	ax, 1
  1690 00000A46 80EC80                  	sub	ah, 80h
  1691 00000A49 AB                      	stosw		; this is 4th interpolated sample (R)
  1692 00000A4A A1[4E18]                	mov	ax, [next_val_l]
  1693 00000A4D 01D8                    	add	ax, bx
  1694 00000A4F D1D8                    	rcr	ax, 1
  1695 00000A51 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1696 00000A54 AB                      	stosw		; this is 5th interpolated sample (L)
  1697 00000A55 58                      	pop	ax ; **
  1698 00000A56 0306[5018]              	add	ax, [next_val_r]
  1699 00000A5A D1D8                    	rcr	ax, 1
  1700 00000A5C 80EC80                  	sub	ah, 80h
  1701 00000A5F AB                      	stosw		; this is 5th interpolated sample (R)
  1702                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1703 00000A60 E303                    	jcxz	lff8_s2_9
  1704 00000A62 E946FF                  	jmp	lff8s2_1
  1705                                  lff8_s2_9:
  1706 00000A65 E977FD                  	jmp	lff8s2_3
  1707                                  
  1708                                  ; .....................
  1709                                  
  1710                                  load_16khz_mono_8_bit:
  1711                                  	; 14/11/2023
  1712                                  	; 13/11/2023
  1713 00000A68 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1714                                  					; last of the file?
  1715 00000A6D 7402                    	jz	short lff16m_0		; no
  1716 00000A6F F9                      	stc
  1717 00000A70 C3                      	retn
  1718                                  
  1719                                  lff16m_0:
  1720 00000A71 8EC0                    	mov	es, ax ; buffer segment	
  1721 00000A73 31FF                    	xor	di, di
  1722 00000A75 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1723                                  	; ds = cs
  1724                                  
  1725                                  	; load file into memory
  1726 00000A78 8B0E[9302]                      mov	cx, [loadsize]
  1727 00000A7C 8B1E[2C1F]              	mov	bx, [filehandle]
  1728 00000A80 B43F                           	mov	ah, 3Fh
  1729 00000A82 CD21                    	int	21h
  1730 00000A84 7243                    	jc	short lff16m_7 ; error !
  1731                                  
  1732 00000A86 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1733                                  	
  1734 00000A88 21C0                    	and	ax, ax
  1735 00000A8A 7503                    	jnz	short lff16m_8
  1736                                  	;jmp	lff16m_3
  1737                                  	; 15/11/2023
  1738 00000A8C E963FD                  	jmp	lff16_eof
  1739                                  
  1740                                  lff16m_8:
  1741 00000A8F 89C1                    	mov	cx, ax		; byte count
  1742                                  lff16m_1:
  1743 00000A91 AC                      	lodsb
  1744                                  	;mov	[previous_val], al
  1745 00000A92 88C3                    	mov	bl, al
  1746 00000A94 2C80                    	sub	al, 80h
  1747 00000A96 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1748 00000A99 AB                      	stosw		; original sample (left channel)
  1749 00000A9A AB                      	stosw		; original sample (right channel)
  1750                                  	;xor	ax, ax
  1751                                  	; 14/11/22023
  1752 00000A9B B080                    	mov	al, 80h
  1753 00000A9D 49                      	dec	cx
  1754 00000A9E 7402                    	jz	short lff16m_2
  1755 00000AA0 8A04                    	mov	al, [si]
  1756                                  lff16m_2:
  1757                                  	;mov	[next_val], al
  1758 00000AA2 88C7                    	mov	bh, al
  1759                                  	;add	al, [previous_val]
  1760 00000AA4 00D8                    	add	al, bl
  1761 00000AA6 D0D8                    	rcr	al, 1
  1762 00000AA8 88C2                    	mov	dl, al	; this is interpolated middle (temp) sample
  1763                                  	;add	al, [previous_val]
  1764 00000AAA 00D8                    	add	al, bl
  1765 00000AAC D0D8                    	rcr	al, 1
  1766 00000AAE 2C80                    	sub	al, 80h
  1767 00000AB0 C1E008                  	shl	ax, 8
  1768 00000AB3 AB                      	stosw		; this is 1st interpolated sample (L)
  1769 00000AB4 AB                      	stosw		; this is 1st interpolated sample (R)
  1770                                  	;mov	al, [next_val]
  1771 00000AB5 88F8                    	mov	al, bh
  1772 00000AB7 00D0                    	add	al, dl
  1773 00000AB9 D0D8                    	rcr	al, 1
  1774 00000ABB 2C80                    	sub	al, 80h
  1775 00000ABD C1E008                  	shl	ax, 8
  1776 00000AC0 AB                      	stosw		; this is 2nd interpolated sample (L)
  1777 00000AC1 AB                      	stosw		; this is 2nd interpolated sample (R)
  1778                                  	
  1779                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1780 00000AC2 09C9                    	or	cx, cx
  1781 00000AC4 75CB                    	jnz	short lff16m_1
  1782 00000AC6 E916FD                  	jmp	lff16m_3
  1783                                  
  1784                                  lff16m_7:
  1785                                  lff16s_7:
  1786 00000AC9 E92DFD                  	jmp	lff16m_5  ; error
  1787                                  
  1788                                  load_16khz_stereo_8_bit:
  1789                                  	; 14/11/2023
  1790                                  	; 13/11/2023
  1791 00000ACC F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1792                                  					; last of the file?
  1793 00000AD1 7402                    	jz	short lff16s_0		; no
  1794 00000AD3 F9                      	stc
  1795 00000AD4 C3                      	retn
  1796                                  
  1797                                  lff16s_0:
  1798 00000AD5 8EC0                    	mov	es, ax ; buffer segment	
  1799 00000AD7 31FF                    	xor	di, di
  1800 00000AD9 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1801                                  	; ds = cs
  1802                                  
  1803                                  	; load file into memory
  1804 00000ADC 8B0E[9302]                      mov	cx, [loadsize]
  1805 00000AE0 8B1E[2C1F]              	mov	bx, [filehandle]
  1806 00000AE4 B43F                           	mov	ah, 3Fh
  1807 00000AE6 CD21                    	int	21h
  1808 00000AE8 72DF                    	jc	short lff16s_7 ; error !
  1809                                  
  1810 00000AEA 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1811                                  	
  1812 00000AEC D1E8                    	shr	ax, 1
  1813                                  	;and	ax, ax
  1814 00000AEE 7503                    	jnz	short lff16s_8
  1815                                  	;jmp	lff16s_3
  1816                                  	; 15/11/2023
  1817 00000AF0 E9FFFC                  	jmp	lff16_eof
  1818                                  
  1819                                  lff16s_8:
  1820 00000AF3 89C1                    	mov	cx, ax		; word count
  1821                                  lff16s_1:
  1822 00000AF5 AC                      	lodsb
  1823 00000AF6 A2[4A18]                	mov	[previous_val_l], al
  1824 00000AF9 2C80                    	sub	al, 80h
  1825 00000AFB C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1826 00000AFE AB                      	stosw		; original sample (L)
  1827 00000AFF AC                      	lodsb
  1828 00000B00 A2[4C18]                	mov	[previous_val_r], al
  1829 00000B03 2C80                    	sub	al, 80h
  1830 00000B05 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1831 00000B08 AB                      	stosw		; original sample (R)
  1832                                  
  1833                                  	;xor	ax, ax
  1834                                  	; 14/11/2023
  1835 00000B09 B88080                  	mov	ax, 8080h
  1836 00000B0C 49                      	dec	cx
  1837 00000B0D 7402                    	jz	short lff16s_2
  1838                                  		; convert 8 bit sample to 16 bit sample
  1839 00000B0F 8B04                    	mov	ax, [si]
  1840                                  lff16s_2:
  1841                                  	;mov	[next_val_l], al
  1842                                  	;mov	[next_val_r], ah
  1843 00000B11 89C3                    	mov	bx, ax
  1844 00000B13 0206[4A18]              	add	al, [previous_val_l]
  1845 00000B17 D0D8                    	rcr	al, 1
  1846 00000B19 88C2                    	mov	dl, al	; this is temporary interpolation value (L)
  1847 00000B1B 0206[4A18]              	add	al, [previous_val_l]
  1848 00000B1F D0D8                    	rcr	al, 1
  1849 00000B21 2C80                    	sub	al, 80h
  1850 00000B23 C1E008                  	shl	ax, 8
  1851 00000B26 AB                      	stosw		; this is 1st interpolated sample (L)
  1852 00000B27 88F8                    	mov	al, bh	; [next_val_r]
  1853 00000B29 0206[4C18]              	add	al, [previous_val_r]
  1854 00000B2D D0D8                    	rcr	al, 1
  1855 00000B2F 88C6                    	mov	dh, al	; this is temporary interpolation value (R)
  1856 00000B31 0206[4C18]              	add	al, [previous_val_r]
  1857 00000B35 D0D8                    	rcr	al, 1
  1858 00000B37 2C80                    	sub	al, 80h
  1859 00000B39 C1E008                  	shl	ax, 8
  1860 00000B3C AB                      	stosw		; this is 1st interpolated sample (R)
  1861 00000B3D 88D0                    	mov	al, dl
  1862 00000B3F 00D8                    	add	al, bl	; [next_val_l]
  1863 00000B41 D0D8                    	rcr	al, 1
  1864 00000B43 2C80                    	sub	al, 80h
  1865 00000B45 C1E008                  	shl	ax, 8
  1866 00000B48 AB                      	stosw		; this is 2nd interpolated sample (L)
  1867 00000B49 88F0                    	mov	al, dh
  1868 00000B4B 00F8                    	add	al, bh	; [next_val_r]
  1869 00000B4D D0D8                    	rcr	al, 1
  1870 00000B4F 2C80                    	sub	al, 80h
  1871 00000B51 C1E008                  	shl	ax, 8
  1872 00000B54 AB                      	stosw 		; this is 2nd interpolated sample (R)
  1873                                  	
  1874                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1875 00000B55 09C9                    	or	cx, cx
  1876 00000B57 759C                    	jnz	short lff16s_1
  1877 00000B59 E983FC                  	jmp	lff16s_3
  1878                                  
  1879                                  load_16khz_mono_16_bit:
  1880                                  	; 15/11/2023
  1881                                  	; 13/11/2023
  1882 00000B5C F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1883                                  					; last of the file?
  1884 00000B61 7402                    	jz	short lff16m2_0		; no
  1885 00000B63 F9                      	stc
  1886 00000B64 C3                      	retn
  1887                                  
  1888                                  lff16m2_0:
  1889 00000B65 8EC0                    	mov	es, ax ; buffer segment	
  1890 00000B67 31FF                    	xor	di, di
  1891 00000B69 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1892                                  	; ds = cs
  1893                                  
  1894                                  	; load file into memory
  1895 00000B6C 8B0E[9302]                      mov	cx, [loadsize]
  1896 00000B70 8B1E[2C1F]              	mov	bx, [filehandle]
  1897 00000B74 B43F                           	mov	ah, 3Fh
  1898 00000B76 CD21                    	int	21h
  1899 00000B78 7240                    	jc	short lff16m2_7 ; error !
  1900                                  
  1901 00000B7A 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1902                                  	
  1903 00000B7C D1E8                    	shr	ax, 1
  1904                                  	;and	ax, ax
  1905 00000B7E 7503                    	jnz	short lff16m2_8
  1906                                  	;jmp	lff16m2_3
  1907                                  	; 15/11/2023
  1908 00000B80 E96FFC                  	jmp	lff16_eof
  1909                                  
  1910                                  lff16m2_8:
  1911 00000B83 89C1                    	mov	cx, ax	; word count
  1912                                  lff16m2_1:
  1913 00000B85 AD                      	lodsw
  1914 00000B86 AB                      	stosw		; original sample (left channel)
  1915 00000B87 AB                      	stosw		; original sample (right channel)
  1916 00000B88 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  1917                                  	;mov	[previous_val], ax
  1918 00000B8B 89C3                    	mov	bx, ax	
  1919 00000B8D 31C0                    	xor	ax, ax
  1920 00000B8F 49                      	dec	cx
  1921 00000B90 7402                    	jz	short lff16m2_2
  1922 00000B92 8B04                    	mov	ax, [si]
  1923                                  lff16m2_2:
  1924 00000B94 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  1925 00000B97 89C5                    	mov	bp, ax	; [next_val]
  1926                                  	;add	ax, [previous_val]
  1927 00000B99 01D8                    	add	ax, bx
  1928 00000B9B D1D8                    	rcr	ax, 1
  1929 00000B9D 89C2                    	mov	dx, ax	; this is temporary interpolation value
  1930                                  	;add	ax, [previous_val]
  1931 00000B9F 01D8                    	add	ax, bx
  1932 00000BA1 D1D8                    	rcr	ax, 1
  1933 00000BA3 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1934 00000BA6 AB                      	stosw		; this is 1st interpolated sample (L)
  1935 00000BA7 AB                      	stosw		; this is 1st interpolated sample (R)
  1936 00000BA8 89E8                    	mov	ax, bp 
  1937 00000BAA 01D0                    	add	ax, dx
  1938 00000BAC D1D8                    	rcr	ax, 1
  1939 00000BAE 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1940 00000BB1 AB                      	stosw		; this is 2nd interpolated sample (L)
  1941 00000BB2 AB                      	stosw		; this is 2nd interpolated sample (R)
  1942                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1943 00000BB3 09C9                    	or	cx, cx
  1944 00000BB5 75CE                    	jnz	short lff16m2_1
  1945 00000BB7 E925FC                  	jmp	lff16m2_3
  1946                                  
  1947                                  lff16m2_7:
  1948                                  lff16s2_7:
  1949 00000BBA E93CFC                  	jmp	lff16m2_5  ; error
  1950                                  
  1951                                  load_16khz_stereo_16_bit:
  1952                                  	; 16/11/2023
  1953                                  	; 15/11/2023
  1954                                  	; 13/11/2023
  1955 00000BBD F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1956                                  					; last of the file?
  1957 00000BC2 7402                    	jz	short lff16s2_0		; no
  1958 00000BC4 F9                      	stc
  1959 00000BC5 C3                      	retn
  1960                                  
  1961                                  lff16s2_0:
  1962 00000BC6 8EC0                    	mov	es, ax ; buffer segment	
  1963 00000BC8 31FF                    	xor	di, di
  1964 00000BCA BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1965                                  	; ds = cs
  1966                                  
  1967                                  	; load file into memory
  1968 00000BCD 8B0E[9302]                      mov	cx, [loadsize]
  1969 00000BD1 8B1E[2C1F]              	mov	bx, [filehandle]
  1970 00000BD5 B43F                           	mov	ah, 3Fh
  1971 00000BD7 CD21                    	int	21h
  1972 00000BD9 72DF                    	jc	short lff16s2_7 ; error !
  1973                                  
  1974 00000BDB 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1975                                  	
  1976                                  	;shr	ax, 1
  1977 00000BDD C1E802                  	shr	ax, 2	; 16/11/2023
  1978                                  	;and	ax, ax
  1979 00000BE0 7503                    	jnz	short lff16s2_8
  1980                                  	;jmp	lff16s2_3
  1981                                  	; 15/11/2023
  1982 00000BE2 E90DFC                  	jmp	lff16_eof
  1983                                  
  1984                                  lff16s2_8:
  1985 00000BE5 89C1                    	mov	cx, ax		; dword count
  1986                                  lff16s2_1:
  1987 00000BE7 AD                      	lodsw
  1988 00000BE8 AB                      	stosw		; original sample (L)
  1989 00000BE9 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  1990 00000BEC A3[4A18]                	mov	[previous_val_l], ax
  1991 00000BEF AD                      	lodsw
  1992 00000BF0 AB                      	stosw		; original sample (R)
  1993 00000BF1 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  1994 00000BF4 A3[4C18]                	mov	[previous_val_r], ax
  1995 00000BF7 31D2                    	xor	dx, dx
  1996 00000BF9 31C0                    	xor	ax, ax
  1997                                  	; 16/11/2023
  1998 00000BFB 49                      	dec	cx
  1999 00000BFC 7405                    	jz	short lff16s2_2
  2000 00000BFE 8B04                    	mov	ax, [si]
  2001 00000C00 8B5402                  	mov	dx, [si+2]
  2002                                  lff16s2_2:
  2003 00000C03 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2004                                  	;mov	[next_val_l], ax
  2005 00000C06 89C5                    	mov	bp, ax
  2006 00000C08 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2007 00000C0B 8916[5018]              	mov	[next_val_r], dx
  2008 00000C0F 0306[4A18]              	add	ax, [previous_val_l]
  2009 00000C13 D1D8                    	rcr	ax, 1
  2010 00000C15 89C2                    	mov	dx, ax	; this is temporary interpolation value (L)
  2011 00000C17 0306[4A18]              	add	ax, [previous_val_l]
  2012 00000C1B D1D8                    	rcr	ax, 1
  2013 00000C1D 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2014 00000C20 AB                      	stosw		; this is 1st interpolated sample (L)
  2015 00000C21 A1[5018]                	mov	ax, [next_val_r]
  2016 00000C24 0306[4C18]              	add	ax, [previous_val_r]
  2017 00000C28 D1D8                    	rcr	ax, 1
  2018 00000C2A 89C3                    	mov	bx, ax	; this is temporary interpolation value (R)
  2019 00000C2C 0306[4C18]              	add	ax, [previous_val_r]
  2020 00000C30 D1D8                    	rcr	ax, 1
  2021 00000C32 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2022 00000C35 AB                      	stosw		; this is 1st interpolated sample (R)
  2023                                  	;mov	ax, [next_val_l]
  2024 00000C36 89E8                    	mov	ax, bp
  2025 00000C38 01D0                    	add	ax, dx
  2026 00000C3A D1D8                    	rcr	ax, 1
  2027 00000C3C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2028 00000C3F AB                      	stosw		; this is 2nd interpolated sample (L)
  2029 00000C40 A1[5018]                	mov	ax, [next_val_r]
  2030 00000C43 01D8                    	add	ax, bx
  2031 00000C45 D1D8                    	rcr	ax, 1
  2032 00000C47 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2033 00000C4A AB                      	stosw 		; this is 2nd interpolated sample (R)
  2034                                  	
  2035                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2036 00000C4B 09C9                    	or	cx, cx
  2037 00000C4D 7598                    	jnz	short lff16s2_1
  2038 00000C4F E98DFB                  	jmp	lff16s2_3
  2039                                  
  2040                                  ; .....................
  2041                                  
  2042                                  load_24khz_mono_8_bit:
  2043                                  	; 15/11/2023
  2044 00000C52 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2045                                  					; last of the file?
  2046 00000C57 7402                    	jz	short lff24m_0		; no
  2047 00000C59 F9                      	stc
  2048 00000C5A C3                      	retn
  2049                                  
  2050                                  lff24m_0:
  2051 00000C5B 8EC0                    	mov	es, ax ; buffer segment	
  2052 00000C5D 31FF                    	xor	di, di
  2053 00000C5F BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2054                                  	; ds = cs
  2055                                  
  2056                                  	; load file into memory
  2057 00000C62 8B0E[9302]                      mov	cx, [loadsize]
  2058 00000C66 8B1E[2C1F]              	mov	bx, [filehandle]
  2059 00000C6A B43F                           	mov	ah, 3Fh
  2060 00000C6C CD21                    	int	21h
  2061 00000C6E 722E                    	jc	short lff24m_7 ; error !
  2062                                  
  2063 00000C70 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2064                                  	
  2065 00000C72 21C0                    	and	ax, ax
  2066 00000C74 7503                    	jnz	short lff24m_8
  2067 00000C76 E979FB                  	jmp	lff24_eof
  2068                                  
  2069                                  lff24m_8:
  2070 00000C79 89C1                    	mov	cx, ax		; byte count
  2071                                  lff24m_1:
  2072 00000C7B AC                      	lodsb
  2073                                  	;mov	[previous_val], al
  2074 00000C7C 88C3                    	mov	bl, al
  2075 00000C7E 2C80                    	sub	al, 80h
  2076 00000C80 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2077 00000C83 AB                      	stosw		; original sample (left channel)
  2078 00000C84 AB                      	stosw		; original sample (right channel)
  2079                                  	;xor	ax, ax
  2080 00000C85 B080                    	mov	al, 80h
  2081 00000C87 49                      	dec	cx
  2082 00000C88 7402                    	jz	short lff24m_2
  2083 00000C8A 8A04                    	mov	al, [si]
  2084                                  lff24m_2:
  2085                                  	;;mov	[next_val], al
  2086                                  	;mov	bh, al
  2087                                  	;add	al, [previous_val]
  2088 00000C8C 00D8                    	add	al, bl
  2089 00000C8E D0D8                    	rcr	al, 1
  2090 00000C90 2C80                    	sub	al, 80h
  2091 00000C92 C1E008                  	shl	ax, 8
  2092 00000C95 AB                      	stosw		; this is interpolated sample (L)
  2093 00000C96 AB                      	stosw		; this is interpolated sample (R)
  2094                                  	
  2095                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2096 00000C97 09C9                    	or	cx, cx
  2097 00000C99 75E0                    	jnz	short lff24m_1
  2098 00000C9B E941FB                  	jmp	lff24_3
  2099                                  
  2100                                  lff24m_7:
  2101                                  lff24s_7:
  2102 00000C9E E958FB                  	jmp	lff24_5  ; error
  2103                                  
  2104                                  load_24khz_stereo_8_bit:
  2105                                  	; 15/11/2023
  2106 00000CA1 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2107                                  					; last of the file?
  2108 00000CA6 7402                    	jz	short lff24s_0		; no
  2109 00000CA8 F9                      	stc
  2110 00000CA9 C3                      	retn
  2111                                  
  2112                                  lff24s_0:
  2113 00000CAA 8EC0                    	mov	es, ax ; buffer segment	
  2114 00000CAC 31FF                    	xor	di, di
  2115 00000CAE BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2116                                  	; ds = cs
  2117                                  
  2118                                  	; load file into memory
  2119 00000CB1 8B0E[9302]                      mov	cx, [loadsize]
  2120 00000CB5 8B1E[2C1F]              	mov	bx, [filehandle]
  2121 00000CB9 B43F                           	mov	ah, 3Fh
  2122 00000CBB CD21                    	int	21h
  2123 00000CBD 72DF                    	jc	short lff24s_7 ; error !
  2124                                  
  2125 00000CBF 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2126                                  	
  2127 00000CC1 D1E8                    	shr	ax, 1
  2128                                  	;and	ax, ax
  2129 00000CC3 7503                    	jnz	short lff24s_8
  2130 00000CC5 E92AFB                  	jmp	lff24_eof
  2131                                  
  2132                                  lff24s_8:
  2133 00000CC8 89C1                    	mov	cx, ax		; word count
  2134                                  lff24s_1:
  2135 00000CCA AC                      	lodsb
  2136 00000CCB A2[4A18]                	mov	[previous_val_l], al
  2137 00000CCE 2C80                    	sub	al, 80h
  2138 00000CD0 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2139 00000CD3 AB                      	stosw		; original sample (L)
  2140 00000CD4 AC                      	lodsb
  2141 00000CD5 A2[4C18]                	mov	[previous_val_r], al
  2142 00000CD8 2C80                    	sub	al, 80h
  2143 00000CDA C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2144 00000CDD AB                      	stosw		; original sample (R)
  2145                                  
  2146                                  	;xor	ax, ax
  2147 00000CDE B88080                  	mov	ax, 8080h
  2148 00000CE1 49                      	dec	cx
  2149 00000CE2 7402                    	jz	short lff24s_2
  2150                                  		; convert 8 bit sample to 16 bit sample
  2151 00000CE4 8B04                    	mov	ax, [si]
  2152                                  lff24s_2:
  2153                                  	;;mov	[next_val_l], al
  2154                                  	;;mov	[next_val_r], ah
  2155                                  	;mov	bx, ax
  2156 00000CE6 88E7                    	mov	bh, ah
  2157 00000CE8 0206[4A18]              	add	al, [previous_val_l]
  2158 00000CEC D0D8                    	rcr	al, 1
  2159                                  	;mov	dl, al
  2160 00000CEE 2C80                    	sub	al, 80h
  2161 00000CF0 C1E008                  	shl	ax, 8
  2162 00000CF3 AB                      	stosw		; this is interpolated sample (L)
  2163 00000CF4 88F8                    	mov	al, bh	; [next_val_r]
  2164 00000CF6 0206[4C18]              	add	al, [previous_val_r]
  2165 00000CFA D0D8                    	rcr	al, 1
  2166                                  	;mov	dh, al
  2167 00000CFC 2C80                    	sub	al, 80h
  2168 00000CFE C1E008                  	shl	ax, 8
  2169 00000D01 AB                      	stosw		; this is interpolated sample (R)
  2170                                  		
  2171                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2172 00000D02 09C9                    	or	cx, cx
  2173 00000D04 75C4                    	jnz	short lff24s_1
  2174 00000D06 E9D6FA                  	jmp	lff24_3
  2175                                  
  2176                                  load_24khz_mono_16_bit:
  2177                                  	; 15/11/2023
  2178 00000D09 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2179                                  					; last of the file?
  2180 00000D0E 7402                    	jz	short lff24m2_0		; no
  2181 00000D10 F9                      	stc
  2182 00000D11 C3                      	retn
  2183                                  
  2184                                  lff24m2_0:
  2185 00000D12 8EC0                    	mov	es, ax ; buffer segment	
  2186 00000D14 31FF                    	xor	di, di
  2187 00000D16 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2188                                  	; ds = cs
  2189                                  
  2190                                  	; load file into memory
  2191 00000D19 8B0E[9302]                      mov	cx, [loadsize]
  2192 00000D1D 8B1E[2C1F]              	mov	bx, [filehandle]
  2193 00000D21 B43F                           	mov	ah, 3Fh
  2194 00000D23 CD21                    	int	21h
  2195 00000D25 7228                    	jc	short lff24m2_7 ; error !
  2196                                  
  2197 00000D27 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2198                                  	
  2199 00000D29 D1E8                    	shr	ax, 1
  2200                                  	;and	ax, ax
  2201 00000D2B 7503                    	jnz	short lff24m2_8
  2202 00000D2D E9C2FA                  	jmp	lff24_eof
  2203                                  
  2204                                  lff24m2_8:
  2205 00000D30 89C1                    	mov	cx, ax	; word count
  2206                                  lff24m2_1:
  2207 00000D32 AD                      	lodsw
  2208 00000D33 AB                      	stosw		; original sample (left channel)
  2209 00000D34 AB                      	stosw		; original sample (right channel)
  2210 00000D35 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2211                                  	;mov	[previous_val], ax
  2212                                  	;mov	bx, ax	
  2213                                  	;xor	ax, ax
  2214 00000D38 31DB                    	xor	bx, bx
  2215 00000D3A 49                      	dec	cx
  2216 00000D3B 7402                    	jz	short lff24m2_2
  2217                                  	;mov	ax, [si
  2218 00000D3D 8B1C                    	mov	bx, [si]
  2219                                  lff24m2_2:
  2220                                  	;add	ah, 80h ; convert sound level 0 to 65535 format
  2221                                  	;mov	bp, ax	; [next_val]
  2222                                  	;add	ax, [previous_val]
  2223                                  	; ax = [previous_val]
  2224                                  	; bx = [next_val]
  2225 00000D3F 01D8                    	add	ax, bx
  2226 00000D41 D1D8                    	rcr	ax, 1
  2227 00000D43 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2228 00000D46 AB                      	stosw		; this is interpolated sample (L)
  2229 00000D47 AB                      	stosw		; this is interpolated sample (R)
  2230                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2231 00000D48 09C9                    	or	cx, cx
  2232 00000D4A 75E6                    	jnz	short lff24m2_1
  2233 00000D4C E990FA                  	jmp	lff24_3
  2234                                  
  2235                                  lff24m2_7:
  2236                                  lff24s2_7:
  2237 00000D4F E9A7FA                  	jmp	lff24_5  ; error
  2238                                  
  2239                                  load_24khz_stereo_16_bit:
  2240                                  	; 16/11/2023
  2241                                  	; 15/11/2023
  2242 00000D52 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2243                                  					; last of the file?
  2244 00000D57 7402                    	jz	short lff24s2_0		; no
  2245 00000D59 F9                      	stc
  2246 00000D5A C3                      	retn
  2247                                  
  2248                                  lff24s2_0:
  2249 00000D5B 8EC0                    	mov	es, ax ; buffer segment	
  2250 00000D5D 31FF                    	xor	di, di
  2251 00000D5F BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2252                                  	; ds = cs
  2253                                  
  2254                                  	; load file into memory
  2255 00000D62 8B0E[9302]                      mov	cx, [loadsize]
  2256 00000D66 8B1E[2C1F]              	mov	bx, [filehandle]
  2257 00000D6A B43F                           	mov	ah, 3Fh
  2258 00000D6C CD21                    	int	21h
  2259 00000D6E 72DF                    	jc	short lff24s2_7 ; error !
  2260                                  
  2261 00000D70 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2262                                  	
  2263                                  	;shr	ax, 1
  2264 00000D72 C1E802                  	shr	ax, 2	; 16/11/2023
  2265                                  	;and	ax, ax
  2266 00000D75 7503                    	jnz	short lff24s2_8
  2267 00000D77 E978FA                  	jmp	lff24_eof
  2268                                  
  2269                                  lff24s2_8:
  2270 00000D7A 89C1                    	mov	cx, ax		; dword count
  2271                                  lff24s2_1:
  2272 00000D7C AD                      	lodsw
  2273 00000D7D AB                      	stosw		; original sample (L)
  2274 00000D7E 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2275 00000D81 A3[4A18]                	mov	[previous_val_l], ax
  2276 00000D84 AD                      	lodsw
  2277 00000D85 AB                      	stosw		; original sample (R)
  2278 00000D86 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2279                                  	;mov	[previous_val_r], ax
  2280 00000D89 89C3                    	mov	bx, ax
  2281 00000D8B 31D2                    	xor	dx, dx
  2282 00000D8D 31C0                    	xor	ax, ax
  2283                                  	; 16/11/2023
  2284 00000D8F 49                      	dec	cx
  2285 00000D90 7405                    	jz	short lff24s2_2
  2286 00000D92 8B04                    	mov	ax, [si]
  2287 00000D94 8B5402                  	mov	dx, [si+2]
  2288                                  lff24s2_2:
  2289 00000D97 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2290                                  	;;mov	[next_val_l], ax
  2291                                  	;mov	bp, ax
  2292 00000D9A 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2293                                  	;mov	[next_val_r], dx
  2294 00000D9D 0306[4A18]              	add	ax, [previous_val_l]
  2295 00000DA1 D1D8                    	rcr	ax, 1
  2296 00000DA3 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2297 00000DA6 AB                      	stosw		; this is interpolated sample (L)
  2298                                  	;mov	ax, [next_val_r]
  2299 00000DA7 89D0                    	mov	ax, dx
  2300                                  	;add	ax, [previous_val_r]
  2301 00000DA9 01D8                    	add	ax, bx
  2302 00000DAB D1D8                    	rcr	ax, 1
  2303 00000DAD 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2304 00000DB0 AB                      	stosw		; this is interpolated sample (R)
  2305                                  	
  2306                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2307 00000DB1 09C9                    	or	cx, cx
  2308 00000DB3 75C7                    	jnz	short lff24s2_1
  2309 00000DB5 E927FA                  	jmp	lff24_3
  2310                                  
  2311                                  ; .....................
  2312                                  
  2313                                  load_32khz_mono_8_bit:
  2314                                  	; 15/11/2023
  2315 00000DB8 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2316                                  					; last of the file?
  2317 00000DBD 7402                    	jz	short lff32m_0		; no
  2318 00000DBF F9                      	stc
  2319 00000DC0 C3                      	retn
  2320                                  
  2321                                  lff32m_0:
  2322 00000DC1 8EC0                    	mov	es, ax ; buffer segment	
  2323 00000DC3 31FF                    	xor	di, di
  2324 00000DC5 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2325                                  	; ds = cs
  2326                                  
  2327                                  	; load file into memory
  2328 00000DC8 8B0E[9302]                      mov	cx, [loadsize]
  2329 00000DCC 8B1E[2C1F]              	mov	bx, [filehandle]
  2330 00000DD0 B43F                           	mov	ah, 3Fh
  2331 00000DD2 CD21                    	int	21h
  2332 00000DD4 7237                    	jc	short lff32m_7 ; error !
  2333                                  
  2334 00000DD6 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2335                                  	
  2336 00000DD8 21C0                    	and	ax, ax
  2337 00000DDA 7503                    	jnz	short lff32m_8
  2338 00000DDC E913FA                  	jmp	lff32_eof
  2339                                  
  2340                                  lff32m_8:
  2341 00000DDF 89C1                    	mov	cx, ax		; byte count
  2342                                  lff32m_1:
  2343 00000DE1 AC                      	lodsb
  2344                                  	;mov	[previous_val], al
  2345 00000DE2 88C3                    	mov	bl, al
  2346 00000DE4 2C80                    	sub	al, 80h
  2347 00000DE6 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2348 00000DE9 AB                      	stosw		; original sample (left channel)
  2349 00000DEA AB                      	stosw		; original sample (right channel)
  2350                                  	;xor	ax, ax
  2351 00000DEB B080                    	mov	al, 80h
  2352 00000DED 49                      	dec	cx
  2353 00000DEE 7402                    	jz	short lff32m_2
  2354 00000DF0 8A04                    	mov	al, [si]
  2355                                  lff32m_2:
  2356                                  	;;mov	[next_val], al
  2357                                  	;mov	bh, al
  2358                                  	;add	al, [previous_val]
  2359 00000DF2 00D8                    	add	al, bl
  2360 00000DF4 D0D8                    	rcr	al, 1
  2361 00000DF6 2C80                    	sub	al, 80h
  2362 00000DF8 C1E008                  	shl	ax, 8
  2363 00000DFB AB                      	stosw		; this is interpolated sample (L)
  2364 00000DFC AB                      	stosw		; this is interpolated sample (R)
  2365                                  	
  2366                                  	; different than 8-16-24 kHZ !
  2367                                  	; 'original-interpolated-original' trio samples 
  2368 00000DFD E30B                    	jcxz	lff32m_3
  2369                                  
  2370 00000DFF AC                      	lodsb
  2371 00000E00 2C80                    	sub	al, 80h
  2372 00000E02 C1E008                  	shl	ax, 8
  2373 00000E05 AB                      	stosw		; original sample (left channel)
  2374 00000E06 AB                      	stosw		; original sample (right channel)
  2375                                  
  2376                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2377 00000E07 49                      	dec	cx
  2378 00000E08 75D7                    	jnz	short lff32m_1
  2379                                  lff32m_3:
  2380 00000E0A E9D2F9                  	jmp	lff32_3
  2381                                  
  2382                                  lff32m_7:
  2383                                  lff32s_7:
  2384 00000E0D E9E9F9                  	jmp	lff32_5  ; error
  2385                                  
  2386                                  load_32khz_stereo_8_bit:
  2387                                  	; 15/11/2023
  2388 00000E10 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2389                                  					; last of the file?
  2390 00000E15 7402                    	jz	short lff32s_0		; no
  2391 00000E17 F9                      	stc
  2392 00000E18 C3                      	retn
  2393                                  
  2394                                  lff32s_0:
  2395 00000E19 8EC0                    	mov	es, ax ; buffer segment	
  2396 00000E1B 31FF                    	xor	di, di
  2397 00000E1D BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2398                                  	; ds = cs
  2399                                  
  2400                                  	; load file into memory
  2401 00000E20 8B0E[9302]                      mov	cx, [loadsize]
  2402 00000E24 8B1E[2C1F]              	mov	bx, [filehandle]
  2403 00000E28 B43F                           	mov	ah, 3Fh
  2404 00000E2A CD21                    	int	21h
  2405 00000E2C 72DF                    	jc	short lff32s_7 ; error !
  2406                                  
  2407 00000E2E 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2408                                  	
  2409 00000E30 D1E8                    	shr	ax, 1
  2410                                  	;and	ax, ax
  2411 00000E32 7503                    	jnz	short lff32s_8
  2412 00000E34 E9BBF9                  	jmp	lff32_eof
  2413                                  
  2414                                  lff32s_8:
  2415 00000E37 89C1                    	mov	cx, ax		; word count
  2416                                  lff32s_1:
  2417 00000E39 AC                      	lodsb
  2418 00000E3A A2[4A18]                	mov	[previous_val_l], al
  2419 00000E3D 2C80                    	sub	al, 80h
  2420 00000E3F C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2421 00000E42 AB                      	stosw		; original sample (L)
  2422 00000E43 AC                      	lodsb
  2423 00000E44 A2[4C18]                	mov	[previous_val_r], al
  2424 00000E47 2C80                    	sub	al, 80h
  2425 00000E49 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2426 00000E4C AB                      	stosw		; original sample (R)
  2427                                  
  2428                                  	;xor	ax, ax
  2429 00000E4D B88080                  	mov	ax, 8080h
  2430 00000E50 49                      	dec	cx
  2431 00000E51 7402                    	jz	short lff32s_2
  2432                                  		; convert 8 bit sample to 16 bit sample
  2433 00000E53 8B04                    	mov	ax, [si]
  2434                                  lff32s_2:
  2435                                  	;;mov	[next_val_l], al
  2436                                  	;;mov	[next_val_r], ah
  2437                                  	;mov	bx, ax
  2438 00000E55 88E7                    	mov	bh, ah
  2439 00000E57 0206[4A18]              	add	al, [previous_val_l]
  2440 00000E5B D0D8                    	rcr	al, 1
  2441                                  	;mov	dl, al
  2442 00000E5D 2C80                    	sub	al, 80h
  2443 00000E5F C1E008                  	shl	ax, 8
  2444 00000E62 AB                      	stosw		; this is interpolated sample (L)
  2445 00000E63 88F8                    	mov	al, bh	; [next_val_r]
  2446 00000E65 0206[4C18]              	add	al, [previous_val_r]
  2447 00000E69 D0D8                    	rcr	al, 1
  2448                                  	;mov	dh, al
  2449 00000E6B 2C80                    	sub	al, 80h
  2450 00000E6D C1E008                  	shl	ax, 8
  2451 00000E70 AB                      	stosw		; this is interpolated sample (R)
  2452                                  
  2453                                  	; different than 8-16-24 kHZ !
  2454                                  	; 'original-interpolated-original' trio samples 
  2455 00000E71 E311                    	jcxz	lff32s_3
  2456                                  
  2457 00000E73 AC                      	lodsb
  2458 00000E74 2C80                    	sub	al, 80h
  2459 00000E76 C1E008                  	shl	ax, 8
  2460 00000E79 AB                      	stosw		; original sample (left channel)
  2461                                  
  2462 00000E7A AC                      	lodsb
  2463 00000E7B 2C80                    	sub	al, 80h
  2464 00000E7D C1E008                  	shl	ax, 8
  2465 00000E80 AB                      	stosw		; original sample (right channel)
  2466                                  		
  2467                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2468 00000E81 49                      	dec	cx
  2469 00000E82 75B5                    	jnz	short lff32s_1
  2470                                  lff32s_3:
  2471 00000E84 E958F9                  	jmp	lff32_3
  2472                                  
  2473                                  load_32khz_mono_16_bit:
  2474                                  	; 15/11/2023
  2475 00000E87 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2476                                  					; last of the file?
  2477 00000E8C 7402                    	jz	short lff32m2_0		; no
  2478 00000E8E F9                      	stc
  2479 00000E8F C3                      	retn
  2480                                  
  2481                                  lff32m2_0:
  2482 00000E90 8EC0                    	mov	es, ax ; buffer segment	
  2483 00000E92 31FF                    	xor	di, di
  2484 00000E94 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2485                                  	; ds = cs
  2486                                  
  2487                                  	; load file into memory
  2488 00000E97 8B0E[9302]                      mov	cx, [loadsize]
  2489 00000E9B 8B1E[2C1F]              	mov	bx, [filehandle]
  2490 00000E9F B43F                           	mov	ah, 3Fh
  2491 00000EA1 CD21                    	int	21h
  2492 00000EA3 722C                    	jc	short lff32m2_7 ; error !
  2493                                  
  2494 00000EA5 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2495                                  	
  2496 00000EA7 D1E8                    	shr	ax, 1
  2497                                  	;and	ax, ax
  2498 00000EA9 7503                    	jnz	short lff32m2_8
  2499 00000EAB E944F9                  	jmp	lff32_eof
  2500                                  
  2501                                  lff32m2_8:
  2502 00000EAE 89C1                    	mov	cx, ax	; word count
  2503                                  lff32m2_1:
  2504 00000EB0 AD                      	lodsw
  2505 00000EB1 AB                      	stosw		; original sample (left channel)
  2506 00000EB2 AB                      	stosw		; original sample (right channel)
  2507 00000EB3 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2508                                  	;mov	[previous_val], ax
  2509                                  	;mov	bx, ax	
  2510                                  	;xor	ax, ax
  2511 00000EB6 31DB                    	xor	bx, bx
  2512 00000EB8 49                      	dec	cx
  2513 00000EB9 7402                    	jz	short lff32m2_2
  2514                                  	;mov	ax, [si
  2515 00000EBB 8B1C                    	mov	bx, [si]
  2516                                  lff32m2_2:
  2517                                  	;add	ah, 80h ; convert sound level 0 to 65535 format
  2518                                  	;mov	bp, ax	; [next_val]
  2519                                  	;add	ax, [previous_val]
  2520                                  	; ax = [previous_val]
  2521                                  	; bx = [next_val]
  2522 00000EBD 01D8                    	add	ax, bx
  2523 00000EBF D1D8                    	rcr	ax, 1
  2524 00000EC1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2525 00000EC4 AB                      	stosw		; this is interpolated sample (L)
  2526 00000EC5 AB                      	stosw		; this is interpolated sample (R)
  2527                                  
  2528                                  	; different than 8-16-24 kHZ !
  2529                                  	; 'original-interpolated-original' trio samples 
  2530 00000EC6 E306                    	jcxz	lff32m2_3
  2531                                  
  2532 00000EC8 AD                      	lodsw
  2533 00000EC9 AB                      	stosw		; original sample (left channel)
  2534 00000ECA AB                      	stosw		; original sample (right channel)
  2535                                  
  2536                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2537 00000ECB 49                      	dec	cx
  2538 00000ECC 75E2                    	jnz	short lff32m2_1
  2539                                  lff32m2_3:
  2540 00000ECE E90EF9                  	jmp	lff32_3
  2541                                  
  2542                                  lff32m2_7:
  2543                                  lff32s2_7:
  2544 00000ED1 E925F9                  	jmp	lff32_5  ; error
  2545                                  
  2546                                  load_32khz_stereo_16_bit:
  2547                                  	 ;16/11/2023
  2548                                  	; 15/11/2023
  2549 00000ED4 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2550                                  					; last of the file?
  2551 00000ED9 7402                    	jz	short lff32s2_0		; no
  2552 00000EDB F9                      	stc
  2553 00000EDC C3                      	retn
  2554                                  
  2555                                  lff32s2_0:
  2556 00000EDD 8EC0                    	mov	es, ax ; buffer segment	
  2557 00000EDF 31FF                    	xor	di, di
  2558 00000EE1 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2559                                  	; ds = cs
  2560                                  
  2561                                  	; load file into memory
  2562 00000EE4 8B0E[9302]                      mov	cx, [loadsize]
  2563 00000EE8 8B1E[2C1F]              	mov	bx, [filehandle]
  2564 00000EEC B43F                           	mov	ah, 3Fh
  2565 00000EEE CD21                    	int	21h
  2566 00000EF0 72DF                    	jc	short lff32s2_7 ; error !
  2567                                  
  2568 00000EF2 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2569                                  	
  2570 00000EF4 C1E802                  	shr	ax, 2	; 16/11/2023 (word left ch + word right ch) 
  2571                                  	;and	ax, ax
  2572 00000EF7 7503                    	jnz	short lff32s2_8
  2573 00000EF9 E9F6F8                  	jmp	lff32_eof
  2574                                  
  2575                                  lff32s2_8:
  2576 00000EFC 89C1                    	mov	cx, ax		; dword count
  2577                                  lff32s2_1:
  2578 00000EFE AD                      	lodsw
  2579 00000EFF AB                      	stosw		; original sample (L)
  2580 00000F00 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2581 00000F03 A3[4A18]                	mov	[previous_val_l], ax
  2582 00000F06 AD                      	lodsw
  2583 00000F07 AB                      	stosw		; original sample (R)
  2584 00000F08 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2585                                  	;mov	[previous_val_r], ax
  2586 00000F0B 89C3                    	mov	bx, ax
  2587 00000F0D 31D2                    	xor	dx, dx
  2588 00000F0F 31C0                    	xor	ax, ax
  2589                                  	; 16/11/2023
  2590 00000F11 49                      	dec	cx
  2591 00000F12 7405                    	jz	short lff32s2_2
  2592 00000F14 8B04                    	mov	ax, [si]
  2593 00000F16 8B5402                  	mov	dx, [si+2]
  2594                                  lff32s2_2:
  2595 00000F19 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2596                                  	;;mov	[next_val_l], ax
  2597                                  	;mov	bp, ax
  2598 00000F1C 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2599                                  	;mov	[next_val_r], dx
  2600 00000F1F 0306[4A18]              	add	ax, [previous_val_l]
  2601 00000F23 D1D8                    	rcr	ax, 1
  2602 00000F25 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2603 00000F28 AB                      	stosw		; this is interpolated sample (L)
  2604                                  	;mov	ax, [next_val_r]
  2605 00000F29 89D0                    	mov	ax, dx
  2606                                  	;add	ax, [previous_val_r]
  2607 00000F2B 01D8                    	add	ax, bx
  2608 00000F2D D1D8                    	rcr	ax, 1
  2609 00000F2F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2610 00000F32 AB                      	stosw		; this is interpolated sample (R)
  2611                                  
  2612                                  	; different than 8-16-24 kHZ !
  2613                                  	; 'original-interpolated-original' trio samples 
  2614 00000F33 E307                    	jcxz	lff32s2_3
  2615                                  
  2616 00000F35 AD                      	lodsw
  2617 00000F36 AB                      	stosw	; original sample (L)
  2618 00000F37 AD                      	lodsw
  2619 00000F38 AB                      	stosw	; original sample (R)
  2620                                  	
  2621                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2622 00000F39 49                      	dec	cx
  2623 00000F3A 75C2                    	jnz	short lff32s2_1
  2624                                  lff32s2_3:
  2625 00000F3C E9A0F8                  	jmp	lff32_3
  2626                                  
  2627                                  ; .....................
  2628                                  
  2629                                  load_22khz_mono_8_bit:
  2630                                  	; 16/11/2023
  2631 00000F3F F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2632                                  					; last of the file?
  2633 00000F44 7402                    	jz	short lff22m_0		; no
  2634 00000F46 F9                      	stc
  2635 00000F47 C3                      	retn
  2636                                  
  2637                                  lff22m_0:
  2638 00000F48 8EC0                    	mov	es, ax ; buffer segment	
  2639 00000F4A 31FF                    	xor	di, di
  2640 00000F4C BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2641                                  	; ds = cs
  2642                                  
  2643                                  	; load file into memory
  2644 00000F4F 8B0E[9302]                      mov	cx, [loadsize]
  2645 00000F53 8B1E[2C1F]              	mov	bx, [filehandle]
  2646 00000F57 B43F                           	mov	ah, 3Fh
  2647 00000F59 CD21                    	int	21h
  2648 00000F5B 7248                    	jc	short lff22m_7 ; error !
  2649                                  
  2650 00000F5D 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2651                                  	
  2652 00000F5F 21C0                    	and	ax, ax
  2653 00000F61 7503                    	jnz	short lff22m_8
  2654 00000F63 E98CF8                  	jmp	lff22_eof
  2655                                  
  2656                                  lff22m_8:
  2657 00000F66 89C1                    	mov	cx, ax		; byte count
  2658                                  lff22m_9:
  2659 00000F68 BD0500                  	mov	bp, 5 ; interpolation (one step) loop count
  2660 00000F6B C606[5218]03            	mov	byte [faz], 3  ; 3 steps/phases
  2661                                  lff22m_1:
  2662                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2663 00000F70 AC                      	lodsb
  2664 00000F71 B280                    	mov	dl, 80h
  2665 00000F73 49                      	dec	cx
  2666 00000F74 7402                    	jz	short lff22m_2_1
  2667 00000F76 8A14                    	mov	dl, [si]
  2668                                  lff22m_2_1:	
  2669                                  	; al = [previous_val]
  2670                                  	; dl = [next_val]
  2671 00000F78 E8A004                  	call	interpolating_3_8bit_mono ; 1 of 17
  2672 00000F7B E325                    	jcxz	lff22m_3
  2673                                  lff22m_2_2:
  2674 00000F7D AC                      	lodsb
  2675 00000F7E B280                    	mov	dl, 80h
  2676 00000F80 49                      	dec	cx
  2677 00000F81 7402                    	jz	short lff22m_2_3
  2678 00000F83 8A14                    	mov	dl, [si]
  2679                                  lff22m_2_3:
  2680 00000F85 E80205                   	call	interpolating_2_8bit_mono ; 2 of 17 .. 6 of 17
  2681 00000F88 E318                    	jcxz	lff22m_3
  2682 00000F8A 4D                      	dec	bp
  2683 00000F8B 75F0                    	jnz	short lff22m_2_2
  2684                                  
  2685 00000F8D A0[5218]                	mov	al, [faz]
  2686 00000F90 FEC8                    	dec	al
  2687 00000F92 74D4                    	jz	short lff22m_9
  2688 00000F94 FE0E[5218]              	dec	byte [faz]
  2689 00000F98 BD0400                  	mov	bp, 4
  2690 00000F9B FEC8                    	dec	al
  2691 00000F9D 75D1                    	jnz	short lff22m_1 ; 3:2:2:2:2 ; 7-11 of 17
  2692 00000F9F 45                      	inc	bp ; 5
  2693 00000FA0 EBCE                    	jmp	short lff22m_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2694                                  
  2695                                  lff22m_3:
  2696                                  lff22s_3:
  2697 00000FA2 E93AF8                  	jmp	lff22_3	; padfill
  2698                                  		; (put zeros in the remain words of the buffer)
  2699                                  lff22m_7:
  2700                                  lff22s_7:
  2701 00000FA5 E951F8                  	jmp	lff22_5  ; error
  2702                                  
  2703                                  load_22khz_stereo_8_bit:
  2704                                  	; 16/11/2023
  2705 00000FA8 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2706                                  					; last of the file?
  2707 00000FAD 7402                    	jz	short lff22s_0		; no
  2708 00000FAF F9                      	stc
  2709 00000FB0 C3                      	retn
  2710                                  
  2711                                  lff22s_0:
  2712 00000FB1 8EC0                    	mov	es, ax ; buffer segment	
  2713 00000FB3 31FF                    	xor	di, di
  2714 00000FB5 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2715                                  	; ds = cs
  2716                                  
  2717                                  	; load file into memory
  2718 00000FB8 8B0E[9302]                      mov	cx, [loadsize]
  2719 00000FBC 8B1E[2C1F]              	mov	bx, [filehandle]
  2720 00000FC0 B43F                           	mov	ah, 3Fh
  2721 00000FC2 CD21                    	int	21h
  2722 00000FC4 72DF                    	jc	short lff22s_7 ; error !
  2723                                  
  2724 00000FC6 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2725                                  	
  2726 00000FC8 D1E8                    	shr	ax, 1
  2727                                  	;and	ax, ax
  2728 00000FCA 7503                    	jnz	short lff22s_8
  2729 00000FCC E923F8                  	jmp	lff22_eof
  2730                                  
  2731                                  lff22s_8:
  2732 00000FCF 89C1                    	mov	cx, ax		; word count
  2733                                  lff22s_9:
  2734 00000FD1 BD0500                  	mov	bp, 5 ; interpolation (one step) loop count
  2735 00000FD4 C606[5218]03            	mov	byte [faz], 3  ; 3 steps/phase
  2736                                  lff22s_1:
  2737                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2738 00000FD9 AD                      	lodsw
  2739 00000FDA BA8080                  	mov	dx, 8080h
  2740 00000FDD 49                      	dec	cx
  2741 00000FDE 7402                    	jz	short lff22s_2_1 
  2742 00000FE0 8B14                    	mov	dx, [si]
  2743                                  lff22s_2_1:	
  2744                                  	; al = [previous_val_l]
  2745                                  	; ah = [previous_val_r]
  2746                                  	; dl = [next_val_l]
  2747                                  	; dl = [next_val_r]	
  2748 00000FE2 E85E04                  	call	interpolating_3_8bit_stereo ; 1 of 17 
  2749 00000FE5 E3BB                    	jcxz	lff22s_3
  2750                                  lff22s_2_2:
  2751 00000FE7 AD                      	lodsw
  2752 00000FE8 BA8080                  	mov	dx, 8080h
  2753 00000FEB 49                      	dec	cx
  2754 00000FEC 7402                    	jz	short lff22s_2_3
  2755 00000FEE 8B14                    	mov	dx, [si]
  2756                                  lff22s_2_3:
  2757 00000FF0 E8AE04                   	call	interpolating_2_8bit_stereo ; 2 of 17 .. 6 of 17
  2758 00000FF3 E3AD                    	jcxz	lff22s_3
  2759 00000FF5 4D                      	dec	bp
  2760 00000FF6 75EF                    	jnz	short lff22s_2_2
  2761                                  
  2762 00000FF8 A0[5218]                	mov	al, [faz]
  2763 00000FFB FEC8                    	dec	al
  2764 00000FFD 74D2                    	jz	short lff22s_9
  2765 00000FFF FE0E[5218]              	dec	byte [faz]
  2766 00001003 BD0400                  	mov	bp, 4
  2767 00001006 FEC8                    	dec	al
  2768 00001008 75CF                    	jnz	short lff22s_1 ; 3:2:2:2:2 ; 7-11 of 17
  2769 0000100A 45                      	inc	bp ; 5
  2770 0000100B EBCC                    	jmp	short lff22s_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2771                                  
  2772                                  load_22khz_mono_16_bit:
  2773                                  	; 16/11/2023
  2774 0000100D F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2775                                  					; last of the file?
  2776 00001012 7402                    	jz	short lff22m2_0		; no
  2777 00001014 F9                      	stc
  2778 00001015 C3                      	retn
  2779                                  
  2780                                  lff22m2_0:
  2781 00001016 8EC0                    	mov	es, ax ; buffer segment	
  2782 00001018 31FF                    	xor	di, di
  2783 0000101A BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2784                                  	; ds = cs
  2785                                  
  2786                                  	; load file into memory
  2787 0000101D 8B0E[9302]                      mov	cx, [loadsize]
  2788 00001021 8B1E[2C1F]              	mov	bx, [filehandle]
  2789 00001025 B43F                           	mov	ah, 3Fh
  2790 00001027 CD21                    	int	21h
  2791 00001029 7248                    	jc	short lff22m2_7 ; error !
  2792                                  
  2793 0000102B 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2794                                  	
  2795 0000102D D1E8                    	shr	ax, 1
  2796                                  	;and	ax, ax
  2797 0000102F 7503                    	jnz	short lff22m2_8
  2798 00001031 E9BEF7                  	jmp	lff22_eof
  2799                                  
  2800                                  lff22m2_8:
  2801 00001034 89C1                    	mov	cx, ax		; word count
  2802                                  lff22m2_9:
  2803 00001036 BD0500                  	mov	bp, 5 ; interpolation (one step) loop count
  2804 00001039 C606[5218]03            	mov	byte [faz], 3  ; 3 steps/phases
  2805                                  lff22m2_1:
  2806                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2807 0000103E AD                      	lodsw
  2808 0000103F 31D2                    	xor	dx, dx
  2809 00001041 49                      	dec	cx
  2810 00001042 7402                    	jz	short lff22m2_2_1
  2811 00001044 8B14                    	mov	dx, [si]
  2812                                  lff22m2_2_1:	
  2813                                  	; ax = [previous_val]
  2814                                  	; dx = [next_val]
  2815 00001046 E88104                  	call	interpolating_3_16bit_mono ; 1 of 17
  2816 00001049 E325                    	jcxz	lff22m2_3
  2817                                  lff22m2_2_2:
  2818 0000104B AD                      	lodsw
  2819 0000104C 31D2                    	xor	dx, dx
  2820 0000104E 49                      	dec	cx
  2821 0000104F 7402                    	jz	short lff22m2_2_3
  2822 00001051 8B14                    	mov	dx, [si]
  2823                                  lff22m2_2_3:
  2824 00001053 E8E104                   	call	interpolating_2_16bit_mono ; 2 of 17 .. 6 of 17
  2825 00001056 E318                    	jcxz	lff22m2_3
  2826 00001058 4D                      	dec	bp
  2827 00001059 75F0                    	jnz	short lff22m2_2_2
  2828                                  
  2829 0000105B A0[5218]                	mov	al, [faz]
  2830 0000105E FEC8                    	dec	al
  2831 00001060 74D4                    	jz	short lff22m2_9
  2832 00001062 FE0E[5218]              	dec	byte [faz]
  2833 00001066 BD0400                  	mov	bp, 4
  2834 00001069 FEC8                    	dec	al
  2835 0000106B 75D1                    	jnz	short lff22m2_1 ; 3:2:2:2:2 ; 7-11 of 17
  2836 0000106D 45                      	inc	bp ; 5
  2837 0000106E EBCE                    	jmp	short lff22m2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2838                                  
  2839                                  lff22m2_3:
  2840                                  lff22s2_3:
  2841 00001070 E96CF7                  	jmp	lff22_3	; padfill
  2842                                  		; (put zeros in the remain words of the buffer)
  2843                                  lff22m2_7:
  2844                                  lff22s2_7:
  2845 00001073 E983F7                  	jmp	lff22_5  ; error
  2846                                  
  2847                                  load_22khz_stereo_16_bit:
  2848                                  	; 16/11/2023
  2849 00001076 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2850                                  					; last of the file?
  2851 0000107B 7402                    	jz	short lff22s2_0		; no
  2852 0000107D F9                      	stc
  2853 0000107E C3                      	retn
  2854                                  
  2855                                  lff22s2_0:
  2856 0000107F 8EC0                    	mov	es, ax ; buffer segment	
  2857 00001081 31FF                    	xor	di, di
  2858 00001083 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2859                                  	; ds = cs
  2860                                  
  2861                                  	; load file into memory
  2862 00001086 8B0E[9302]                      mov	cx, [loadsize]
  2863 0000108A 8B1E[2C1F]              	mov	bx, [filehandle]
  2864 0000108E B43F                           	mov	ah, 3Fh
  2865 00001090 CD21                    	int	21h
  2866 00001092 72DF                    	jc	short lff22s2_7 ; error !
  2867                                  
  2868 00001094 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2869                                  	
  2870 00001096 C1E802                  	shr	ax, 2	; dword (left chan word + right chan word)
  2871                                  	;and	ax, ax
  2872 00001099 7503                    	jnz	short lff22s2_8
  2873 0000109B E954F7                  	jmp	lff22_eof
  2874                                  
  2875                                  lff22s2_8:
  2876 0000109E 89C1                    	mov	cx, ax		; dword count
  2877                                  lff22s2_9:
  2878 000010A0 BD0500                  	mov	bp, 5 ; interpolation (one step) loop count
  2879 000010A3 C606[5218]03            	mov	byte [faz], 3  ; 3 steps/phase
  2880                                  lff22s2_1:
  2881                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2882 000010A8 AD                      	lodsw
  2883 000010A9 89C3                    	mov	bx, ax
  2884 000010AB AD                      	lodsw
  2885 000010AC 8B14                    	mov	dx, [si]
  2886 000010AE 8916[4E18]              	mov	[next_val_l], dx
  2887 000010B2 8B5402                  	mov	dx, [si+2]
  2888 000010B5 49                      	dec	cx
  2889 000010B6 7506                    	jnz	short lff22s2_2_1
  2890 000010B8 31D2                    	xor	dx, dx ; 0
  2891 000010BA 8916[4E18]              	mov	[next_val_l], dx
  2892                                  lff22s2_2_1:
  2893                                  	; bx = [previous_val_l]
  2894                                  	; ax = [previous_val_r]
  2895                                  	; [next_val_l]
  2896                                  	; dx = [next_val_r]
  2897 000010BE E82D04                  	call	interpolating_3_16bit_stereo ; 1 of 17 
  2898 000010C1 E3AD                    	jcxz	lff22s2_3
  2899                                  lff22s2_2_2:
  2900 000010C3 AD                      	lodsw
  2901 000010C4 89C3                    	mov	bx, ax
  2902 000010C6 AD                      	lodsw
  2903 000010C7 8B14                    	mov	dx, [si]
  2904 000010C9 8916[4E18]              	mov	[next_val_l], dx
  2905 000010CD 8B5402                  	mov	dx, [si+2]
  2906 000010D0 49                      	dec	cx
  2907 000010D1 7506                    	jnz	short lff22s2_2_3
  2908 000010D3 31D2                    	xor	dx, dx ; 0
  2909 000010D5 8916[4E18]              	mov	[next_val_l], dx
  2910                                  lff22s2_2_3:
  2911 000010D9 E86D04                   	call	interpolating_2_16bit_stereo ; 2 of 17 .. 6 of 17
  2912 000010DC E392                    	jcxz	lff22s2_3
  2913 000010DE 4D                      	dec	bp
  2914 000010DF 75E2                    	jnz	short lff22s2_2_2
  2915                                  
  2916 000010E1 A0[5218]                	mov	al, [faz]
  2917 000010E4 FEC8                    	dec	al
  2918 000010E6 74B8                    	jz	short lff22s2_9
  2919 000010E8 FE0E[5218]              	dec	byte [faz]
  2920 000010EC BD0400                  	mov	bp, 4
  2921 000010EF FEC8                    	dec	al
  2922 000010F1 75B5                    	jnz	short lff22s2_1 ; 3:2:2:2:2 ; 7-11 of 17
  2923 000010F3 45                      	inc	bp ; 5
  2924 000010F4 EBB2                    	jmp	short lff22s2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2925                                  
  2926                                  ; .....................
  2927                                  
  2928                                  load_11khz_mono_8_bit:
  2929                                  	; 18/11/2023
  2930 000010F6 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2931                                  					; last of the file?
  2932 000010FB 7402                    	jz	short lff11m_0		; no
  2933 000010FD F9                      	stc
  2934 000010FE C3                      	retn
  2935                                  
  2936                                  lff11m_0:
  2937 000010FF 8EC0                    	mov	es, ax ; buffer segment	
  2938 00001101 31FF                    	xor	di, di
  2939 00001103 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2940                                  	; ds = cs
  2941                                  
  2942                                  	; load file into memory
  2943 00001106 8B0E[9302]                      mov	cx, [loadsize]
  2944 0000110A 8B1E[2C1F]              	mov	bx, [filehandle]
  2945 0000110E B43F                           	mov	ah, 3Fh
  2946 00001110 CD21                    	int	21h
  2947 00001112 723D                    	jc	short lff11m_7 ; error !
  2948                                  
  2949 00001114 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2950                                  	
  2951 00001116 21C0                    	and	ax, ax
  2952 00001118 7503                    	jnz	short lff11m_8
  2953 0000111A E9D5F6                  	jmp	lff11_eof
  2954                                  
  2955                                  lff11m_8:
  2956 0000111D 89C1                    	mov	cx, ax		; byte count
  2957                                  lff11m_9:
  2958 0000111F BD0600                  	mov	bp, 6 ; interpolation (one step) loop count
  2959                                  lff11m_1:
  2960                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  2961 00001122 AC                      	lodsb
  2962 00001123 B280                    	mov	dl, 80h
  2963 00001125 49                      	dec	cx
  2964 00001126 7402                    	jz	short lff11m_2_1
  2965 00001128 8A14                    	mov	dl, [si]
  2966                                  lff11m_2_1:	
  2967                                  	; al = [previous_val]
  2968                                  	; dl = [next_val]
  2969 0000112A E84204                  	call	interpolating_5_8bit_mono
  2970 0000112D E31F                    	jcxz	lff11m_3
  2971                                  lff11m_2_2:
  2972 0000112F AC                      	lodsb
  2973 00001130 B280                    	mov	dl, 80h
  2974 00001132 49                      	dec	cx
  2975 00001133 7402                    	jz	short lff11m_2_3
  2976 00001135 8A14                    	mov	dl, [si]
  2977                                  lff11m_2_3:
  2978 00001137 E81E05                   	call	interpolating_4_8bit_mono
  2979 0000113A E312                    	jcxz	lff11m_3
  2980                                  
  2981 0000113C 4D                      	dec	bp
  2982 0000113D 74E0                    	jz	short lff11m_9
  2983                                  
  2984 0000113F AC                      	lodsb
  2985 00001140 B280                    	mov	dl, 80h
  2986 00001142 49                      	dec	cx
  2987 00001143 7402                    	jz	short lff11m_2_4
  2988 00001145 8A14                    	mov	dl, [si]
  2989                                  lff11m_2_4:
  2990 00001147 E80E05                  	call	interpolating_4_8bit_mono
  2991 0000114A E302                    	jcxz	lff11m_3
  2992 0000114C EBD4                    	jmp	short lff11m_1
  2993                                  
  2994                                  lff11m_3:
  2995                                  lff11s_3:
  2996 0000114E E98EF6                  	jmp	lff11_3	; padfill
  2997                                  		; (put zeros in the remain words of the buffer)
  2998                                  lff11m_7:
  2999                                  lff11s_7:
  3000 00001151 E9A5F6                  	jmp	lff11_5  ; error
  3001                                  
  3002                                  load_11khz_stereo_8_bit:
  3003                                  	; 18/11/2023
  3004 00001154 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3005                                  					; last of the file?
  3006 00001159 7402                    	jz	short lff11s_0		; no
  3007 0000115B F9                      	stc
  3008 0000115C C3                      	retn
  3009                                  
  3010                                  lff11s_0:
  3011 0000115D 8EC0                    	mov	es, ax ; buffer segment	
  3012 0000115F 31FF                    	xor	di, di
  3013 00001161 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3014                                  	; ds = cs
  3015                                  
  3016                                  	; load file into memory
  3017 00001164 8B0E[9302]                      mov	cx, [loadsize]
  3018 00001168 8B1E[2C1F]              	mov	bx, [filehandle]
  3019 0000116C B43F                           	mov	ah, 3Fh
  3020 0000116E CD21                    	int	21h
  3021 00001170 72DF                    	jc	short lff11s_7 ; error !
  3022                                  
  3023 00001172 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3024                                  	
  3025 00001174 D1E8                    	shr	ax, 1
  3026                                  	;and	ax, ax
  3027 00001176 7503                    	jnz	short lff11s_8
  3028 00001178 E977F6                  	jmp	lff11_eof
  3029                                  
  3030                                  lff11s_8:
  3031 0000117B 89C1                    	mov	cx, ax		; word count
  3032                                  lff11s_9:
  3033 0000117D BD0600                  	mov	bp, 6 ; interpolation (one step) loop count
  3034                                  lff11s_1:
  3035                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3036 00001180 AD                      	lodsw
  3037 00001181 BA8080                  	mov	dx, 8080h
  3038 00001184 49                      	dec	cx
  3039 00001185 7402                    	jz	short lff11s_2_1 
  3040 00001187 8B14                    	mov	dx, [si]
  3041                                  lff11s_2_1:	
  3042                                  	; al = [previous_val_l]
  3043                                  	; ah = [previous_val_r]
  3044                                  	; dl = [next_val_l]
  3045                                  	; dl = [next_val_r]	
  3046 00001189 E83304                  	call	interpolating_5_8bit_stereo
  3047 0000118C E3C0                    	jcxz	lff11s_3
  3048                                  lff11s_2_2:
  3049 0000118E AD                      	lodsw
  3050 0000118F BA8080                  	mov	dx, 8080h
  3051 00001192 49                      	dec	cx
  3052 00001193 7402                    	jz	short lff11s_2_3
  3053 00001195 8B14                    	mov	dx, [si]
  3054                                  lff11s_2_3:
  3055 00001197 E8F104                   	call	interpolating_4_8bit_stereo
  3056 0000119A E3B2                    	jcxz	lff11s_3
  3057                                  	
  3058 0000119C 4D                      	dec	bp
  3059 0000119D 74DE                    	jz	short lff11s_9
  3060                                  
  3061 0000119F AD                      	lodsw
  3062 000011A0 BA8080                  	mov	dx, 8080h
  3063 000011A3 49                      	dec	cx
  3064 000011A4 7402                    	jz	short lff11s_2_4
  3065 000011A6 8B14                    	mov	dx, [si]
  3066                                  lff11s_2_4:
  3067 000011A8 E8E004                  	call	interpolating_4_8bit_stereo
  3068 000011AB E3A1                    	jcxz	lff11s_3
  3069 000011AD EBD1                    	jmp	short lff11s_1
  3070                                  
  3071                                  load_11khz_mono_16_bit:
  3072                                  	; 18/11/2023
  3073 000011AF F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3074                                  					; last of the file?
  3075 000011B4 7402                    	jz	short lff11m2_0		; no
  3076 000011B6 F9                      	stc
  3077 000011B7 C3                      	retn
  3078                                  
  3079                                  lff11m2_0:
  3080 000011B8 8EC0                    	mov	es, ax ; buffer segment	
  3081 000011BA 31FF                    	xor	di, di
  3082 000011BC BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3083                                  	; ds = cs
  3084                                  
  3085                                  	; load file into memory
  3086 000011BF 8B0E[9302]                      mov	cx, [loadsize]
  3087 000011C3 8B1E[2C1F]              	mov	bx, [filehandle]
  3088 000011C7 B43F                           	mov	ah, 3Fh
  3089 000011C9 CD21                    	int	21h
  3090 000011CB 723A                    	jc	short lff11m2_7 ; error !
  3091                                  
  3092 000011CD 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3093                                  	
  3094 000011CF D1E8                    	shr	ax, 1
  3095                                  	;and	ax, ax
  3096 000011D1 7503                    	jnz	short lff11m2_8
  3097 000011D3 E91CF6                  	jmp	lff11_eof
  3098                                  
  3099                                  lff11m2_8:
  3100 000011D6 89C1                    	mov	cx, ax		; word count
  3101                                  lff11m2_9:
  3102 000011D8 BD0600                  	mov	bp, 6 ; interpolation (one step) loop count
  3103                                  lff11m2_1:
  3104                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3105 000011DB AD                      	lodsw
  3106 000011DC 31D2                    	xor	dx, dx
  3107 000011DE 49                      	dec	cx
  3108 000011DF 7402                    	jz	short lff11m2_2_1
  3109 000011E1 8B14                    	mov	dx, [si]
  3110                                  lff11m2_2_1:	
  3111                                  	; ax = [previous_val]
  3112                                  	; dx = [next_val]
  3113 000011E3 E80205                  	call	interpolating_5_16bit_mono
  3114 000011E6 E34A                    	jcxz	lff11m2_3
  3115                                  lff11m2_2_2:
  3116 000011E8 AD                      	lodsw
  3117 000011E9 31D2                    	xor	dx, dx
  3118 000011EB 49                      	dec	cx
  3119 000011EC 7402                    	jz	short lff11m2_2_3
  3120 000011EE 8B14                    	mov	dx, [si]
  3121                                  lff11m2_2_3:
  3122 000011F0 E8D005                   	call	interpolating_4_16bit_mono
  3123 000011F3 E33D                    	jcxz	lff11m2_3
  3124                                  
  3125 000011F5 4D                      	dec	bp
  3126 000011F6 74E0                    	jz	short lff11m2_9
  3127                                  
  3128 000011F8 AD                      	lodsw
  3129 000011F9 31D2                    	xor	dx, dx
  3130 000011FB 49                      	dec	cx
  3131 000011FC 7402                    	jz	short lff11m2_2_4
  3132 000011FE 8B14                    	mov	dx, [si]
  3133                                  lff11m2_2_4:
  3134 00001200 E8C005                   	call	interpolating_4_16bit_mono
  3135 00001203 E32D                    	jcxz	lff11m2_3
  3136 00001205 EBD4                    	jmp	short lff11m2_1
  3137                                  
  3138                                  lff11m2_7:
  3139                                  lff11s2_7:
  3140 00001207 E9EFF5                  	jmp	lff11_5  ; error
  3141                                  
  3142                                  load_11khz_stereo_16_bit:
  3143                                  	; 18/11/2023
  3144 0000120A F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3145                                  					; last of the file?
  3146 0000120F 7402                    	jz	short lff11s2_0		; no
  3147 00001211 F9                      	stc
  3148 00001212 C3                      	retn
  3149                                  
  3150                                  lff11s2_0:
  3151 00001213 8EC0                    	mov	es, ax ; buffer segment	
  3152 00001215 31FF                    	xor	di, di
  3153 00001217 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3154                                  	; ds = cs
  3155                                  
  3156                                  	; load file into memory
  3157 0000121A 8B0E[9302]                      mov	cx, [loadsize]
  3158 0000121E 8B1E[2C1F]              	mov	bx, [filehandle]
  3159 00001222 B43F                           	mov	ah, 3Fh
  3160 00001224 CD21                    	int	21h
  3161 00001226 72DF                    	jc	short lff11s2_7 ; error !
  3162                                  
  3163 00001228 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3164                                  	
  3165 0000122A C1E802                  	shr	ax, 2	; dword (left chan word + right chan word)
  3166                                  	;and	ax, ax
  3167 0000122D 7506                    	jnz	short lff11s2_8
  3168 0000122F E9C0F5                  	jmp	lff11_eof
  3169                                  
  3170                                  lff11m2_3:
  3171                                  lff11s2_3:
  3172 00001232 E9AAF5                  	jmp	lff11_3	; padfill
  3173                                  		; (put zeros in the remain words of the buffer)
  3174                                  
  3175                                  lff11s2_8:
  3176 00001235 89C1                    	mov	cx, ax		; dword count
  3177                                  lff11s2_9:
  3178 00001237 BD0600                  	mov	bp, 6 ; interpolation (one step) loop count
  3179                                  lff11s2_1:
  3180                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3181 0000123A AD                      	lodsw
  3182 0000123B 89C3                    	mov	bx, ax
  3183 0000123D AD                      	lodsw
  3184 0000123E 8B14                    	mov	dx, [si]
  3185 00001240 8916[4E18]              	mov	[next_val_l], dx
  3186 00001244 8B5402                  	mov	dx, [si+2]
  3187 00001247 8916[5018]              	mov	[next_val_r], dx
  3188 0000124B 49                      	dec	cx
  3189 0000124C 750A                    	jnz	short lff11s2_2_1
  3190 0000124E 31D2                    	xor	dx, dx ; 0
  3191 00001250 8916[4E18]              	mov	[next_val_l], dx
  3192 00001254 8916[5018]              	mov	[next_val_r], dx
  3193                                  lff11s2_2_1:
  3194                                  	; bx = [previous_val_l]
  3195                                  	; ax = [previous_val_r]
  3196                                  	; [next_val_l]
  3197                                  	; dx = [next_val_r]
  3198 00001258 E8D004                  	call	interpolating_5_16bit_stereo
  3199 0000125B E3D5                    	jcxz	lff11s2_3
  3200                                  lff11s2_2_2:
  3201 0000125D AD                      	lodsw
  3202 0000125E 89C3                    	mov	bx, ax
  3203 00001260 AD                      	lodsw
  3204 00001261 8B14                    	mov	dx, [si]
  3205 00001263 8916[4E18]              	mov	[next_val_l], dx
  3206 00001267 8B5402                  	mov	dx, [si+2]
  3207 0000126A 8916[5018]              	mov	[next_val_r], dx
  3208 0000126E 49                      	dec	cx
  3209 0000126F 750A                    	jnz	short lff11s2_2_3
  3210 00001271 31D2                    	xor	dx, dx ; 0
  3211 00001273 8916[4E18]              	mov	[next_val_l], dx
  3212 00001277 8916[5018]              	mov	[next_val_r], dx
  3213                                  lff11s2_2_3:
  3214 0000127B E87005                   	call	interpolating_4_16bit_stereo
  3215 0000127E E3B2                    	jcxz	lff11s2_3
  3216                                  	
  3217 00001280 4D                      	dec	bp
  3218 00001281 74B4                    	jz	short lff11s2_9
  3219                                  
  3220 00001283 AD                      	lodsw
  3221 00001284 89C3                    	mov	bx, ax
  3222 00001286 AD                      	lodsw
  3223 00001287 8B14                    	mov	dx, [si]
  3224 00001289 8916[4E18]              	mov	[next_val_l], dx
  3225 0000128D 8B5402                  	mov	dx, [si+2]
  3226 00001290 8916[5018]              	mov	[next_val_r], dx
  3227 00001294 49                      	dec	cx
  3228 00001295 750A                    	jnz	short lff11s2_2_4
  3229 00001297 31D2                    	xor	dx, dx ; 0
  3230 00001299 8916[4E18]              	mov	[next_val_l], dx
  3231 0000129D 8916[5018]              	mov	[next_val_r], dx
  3232                                  lff11s2_2_4:
  3233 000012A1 E84A05                   	call	interpolating_4_16bit_stereo
  3234 000012A4 E38C                    	jcxz	lff11s2_3
  3235 000012A6 EB92                    	jmp	short lff11s2_1
  3236                                  
  3237                                  ; .....................
  3238                                  
  3239                                  load_44khz_mono_8_bit:
  3240                                  	; 18/11/2023
  3241 000012A8 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3242                                  					; last of the file?
  3243 000012AD 7402                    	jz	short lff44m_0		; no
  3244 000012AF F9                      	stc
  3245 000012B0 C3                      	retn
  3246                                  
  3247                                  lff44m_0:
  3248 000012B1 8EC0                    	mov	es, ax ; buffer segment	
  3249 000012B3 31FF                    	xor	di, di
  3250 000012B5 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3251                                  	; ds = cs
  3252                                  
  3253                                  	; load file into memory
  3254 000012B8 8B0E[9302]                      mov	cx, [loadsize]
  3255 000012BC 8B1E[2C1F]              	mov	bx, [filehandle]
  3256 000012C0 B43F                           	mov	ah, 3Fh
  3257 000012C2 CD21                    	int	21h
  3258 000012C4 723C                    	jc	short lff44m_7 ; error !
  3259                                  
  3260 000012C6 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3261                                  	
  3262 000012C8 21C0                    	and	ax, ax
  3263 000012CA 7503                    	jnz	short lff44m_8
  3264 000012CC E923F5                  	jmp	lff44_eof
  3265                                  
  3266                                  lff44m_8:
  3267 000012CF 89C1                    	mov	cx, ax		; byte count
  3268                                  lff44m_9:
  3269 000012D1 BD0A00                  	mov	bp, 10 ; interpolation (one step) loop count
  3270 000012D4 C606[5218]02            	mov	byte [faz], 2  ; 2 steps/phases
  3271                                  lff44m_1:
  3272                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3273                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3274 000012D9 AC                      	lodsb
  3275 000012DA B280                    	mov	dl, 80h
  3276 000012DC 49                      	dec	cx
  3277 000012DD 7402                    	jz	short lff44m_2_1
  3278 000012DF 8A14                    	mov	dl, [si]
  3279                                  lff44m_2_1:	
  3280                                  	; al = [previous_val]
  3281                                  	; dl = [next_val]
  3282 000012E1 E8A601                  	call	interpolating_2_8bit_mono
  3283 000012E4 E319                    	jcxz	lff44m_3
  3284                                  lff44m_2_2:
  3285 000012E6 AC                      	lodsb
  3286 000012E7 2C80                    	sub	al, 80h
  3287 000012E9 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3288 000012EC AB                      	stosw		; (L)
  3289 000012ED AB                      	stosw		; (R)	
  3290                                  
  3291 000012EE 49                      	dec	cx
  3292 000012EF 740E                    	jz	short lff44m_3	
  3293 000012F1 4D                      	dec	bp
  3294 000012F2 75F2                    	jnz	short lff44m_2_2
  3295                                  	
  3296 000012F4 FE0E[5218]              	dec	byte [faz]
  3297 000012F8 74D7                    	jz	short lff44m_9 
  3298 000012FA BD0B00                  	mov	bp, 11
  3299 000012FD EBDA                    	jmp	short lff44m_1
  3300                                  
  3301                                  lff44m_3:
  3302                                  lff44s_3:
  3303 000012FF E9DDF4                  	jmp	lff44_3	; padfill
  3304                                  		; (put zeros in the remain words of the buffer)
  3305                                  lff44m_7:
  3306                                  lff44s_7:
  3307 00001302 E9F4F4                  	jmp	lff44_5  ; error
  3308                                  
  3309                                  load_44khz_stereo_8_bit:
  3310                                  	; 16/11/2023
  3311 00001305 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3312                                  					; last of the file?
  3313 0000130A 7402                    	jz	short lff44s_0		; no
  3314 0000130C F9                      	stc
  3315 0000130D C3                      	retn
  3316                                  
  3317                                  lff44s_0:
  3318 0000130E 8EC0                    	mov	es, ax ; buffer segment	
  3319 00001310 31FF                    	xor	di, di
  3320 00001312 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3321                                  	; ds = cs
  3322                                  
  3323                                  	; load file into memory
  3324 00001315 8B0E[9302]                      mov	cx, [loadsize]
  3325 00001319 8B1E[2C1F]              	mov	bx, [filehandle]
  3326 0000131D B43F                           	mov	ah, 3Fh
  3327 0000131F CD21                    	int	21h
  3328 00001321 72DF                    	jc	short lff44s_7 ; error !
  3329                                  
  3330 00001323 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3331                                  	
  3332 00001325 D1E8                    	shr	ax, 1
  3333                                  	;and	ax, ax
  3334 00001327 7503                    	jnz	short lff44s_8
  3335 00001329 E9C6F4                  	jmp	lff44_eof
  3336                                  
  3337                                  lff44s_8:
  3338 0000132C 89C1                    	mov	cx, ax		; word count
  3339                                  lff44s_9:
  3340 0000132E BD0A00                  	mov	bp, 10 ; interpolation (one step) loop count
  3341 00001331 C606[5218]02            	mov	byte [faz], 2  ; 2 steps/phase
  3342                                  lff44s_1:
  3343                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3344                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3345 00001336 AD                      	lodsw
  3346 00001337 BA8080                  	mov	dx, 8080h
  3347 0000133A 49                      	dec	cx
  3348 0000133B 7402                    	jz	short lff44s_2_1 
  3349 0000133D 8B14                    	mov	dx, [si]
  3350                                  lff44s_2_1:	
  3351                                  	; al = [previous_val_l]
  3352                                  	; ah = [previous_val_r]
  3353                                  	; dl = [next_val_l]
  3354                                  	; dl = [next_val_r]	
  3355 0000133F E85F01                  	call	interpolating_2_8bit_stereo
  3356 00001342 E3BB                    	jcxz	lff44s_3
  3357                                  lff44s_2_2:
  3358 00001344 AC                      	lodsb
  3359 00001345 2C80                    	sub	al, 80h
  3360 00001347 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3361 0000134A AB                      	stosw		; (L)
  3362 0000134B AC                      	lodsb
  3363 0000134C 2C80                    	sub	al, 80h
  3364 0000134E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3365 00001351 AB                      	stosw		; (R)
  3366                                  
  3367 00001352 49                      	dec	cx
  3368 00001353 74AA                    	jz	short lff44s_3	
  3369 00001355 4D                      	dec	bp
  3370 00001356 75EC                    	jnz	short lff44s_2_2
  3371                                  	
  3372 00001358 FE0E[5218]              	dec	byte [faz]
  3373 0000135C 74D0                    	jz	short lff44s_9 
  3374 0000135E BD0B00                  	mov	bp, 11
  3375 00001361 EBD3                    	jmp	short lff44s_1
  3376                                  
  3377                                  load_44khz_mono_16_bit:
  3378                                  	; 18/11/2023
  3379 00001363 F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3380                                  					; last of the file?
  3381 00001368 7402                    	jz	short lff44m2_0		; no
  3382 0000136A F9                      	stc
  3383 0000136B C3                      	retn
  3384                                  
  3385                                  lff44m2_0:
  3386 0000136C 8EC0                    	mov	es, ax ; buffer segment	
  3387 0000136E 31FF                    	xor	di, di
  3388 00001370 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3389                                  	; ds = cs
  3390                                  
  3391                                  	; load file into memory
  3392 00001373 8B0E[9302]                      mov	cx, [loadsize]
  3393 00001377 8B1E[2C1F]              	mov	bx, [filehandle]
  3394 0000137B B43F                           	mov	ah, 3Fh
  3395 0000137D CD21                    	int	21h
  3396 0000137F 7237                    	jc	short lff44m2_7 ; error !
  3397                                  
  3398 00001381 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3399                                  	
  3400 00001383 D1E8                    	shr	ax, 1
  3401                                  	;and	ax, ax
  3402 00001385 7503                    	jnz	short lff44m2_8
  3403 00001387 E968F4                  	jmp	lff44_eof
  3404                                  
  3405                                  lff44m2_8:
  3406 0000138A 89C1                    	mov	cx, ax		; word count
  3407                                  lff44m2_9:
  3408 0000138C BD0A00                  	mov	bp, 10 ; interpolation (one step) loop count
  3409 0000138F C606[5218]02            	mov	byte [faz], 2  ; 2 steps/phases
  3410                                  lff44m2_1:
  3411                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3412                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3413 00001394 AD                      	lodsw
  3414 00001395 31D2                    	xor	dx, dx
  3415 00001397 49                      	dec	cx
  3416 00001398 7402                    	jz	short lff44m2_2_1
  3417 0000139A 8B14                    	mov	dx, [si]
  3418                                  lff44m2_2_1:	
  3419                                  	; ax = [previous_val]
  3420                                  	; dx = [next_val]
  3421 0000139C E89801                  	call	interpolating_2_16bit_mono
  3422 0000139F E314                    	jcxz	lff44m2_3
  3423                                  lff44m2_2_2:
  3424 000013A1 AD                      	lodsw
  3425 000013A2 AB                      	stosw		; (L)eft Channel
  3426 000013A3 AB                      	stosw		; (R)ight Channel
  3427                                  
  3428 000013A4 49                      	dec	cx
  3429 000013A5 740E                    	jz	short lff44m2_3	
  3430 000013A7 4D                      	dec	bp
  3431 000013A8 75F7                    	jnz	short lff44m2_2_2
  3432                                  	
  3433 000013AA FE0E[5218]              	dec	byte [faz]
  3434 000013AE 74DC                    	jz	short lff44m2_9 
  3435 000013B0 BD0B00                  	mov	bp, 11
  3436 000013B3 EBDF                    	jmp	short lff44m2_1
  3437                                  
  3438                                  lff44m2_3:
  3439                                  lff44s2_3:
  3440 000013B5 E927F4                  	jmp	lff44_3	; padfill
  3441                                  		; (put zeros in the remain words of the buffer)
  3442                                  lff44m2_7:
  3443                                  lff44s2_7:
  3444 000013B8 E93EF4                  	jmp	lff44_5  ; error
  3445                                  
  3446                                  load_44khz_stereo_16_bit:
  3447                                  	; 18/11/2023
  3448 000013BB F606[2E1F]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3449                                  					; last of the file?
  3450 000013C0 7402                    	jz	short lff44s2_0		; no
  3451 000013C2 F9                      	stc
  3452 000013C3 C3                      	retn
  3453                                  
  3454                                  lff44s2_0:
  3455 000013C4 8EC0                    	mov	es, ax ; buffer segment	
  3456 000013C6 31FF                    	xor	di, di
  3457 000013C8 BA[9C1F]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3458                                  	; ds = cs
  3459                                  
  3460                                  	; load file into memory
  3461 000013CB 8B0E[9302]                      mov	cx, [loadsize]
  3462 000013CF 8B1E[2C1F]              	mov	bx, [filehandle]
  3463 000013D3 B43F                           	mov	ah, 3Fh
  3464 000013D5 CD21                    	int	21h
  3465 000013D7 72DF                    	jc	short lff44s2_7 ; error !
  3466                                  
  3467 000013D9 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3468                                  	
  3469 000013DB C1E802                  	shr	ax, 2	; dword (left chan word + right chan word)
  3470                                  	;and	ax, ax
  3471 000013DE 7503                    	jnz	short lff44s2_8
  3472 000013E0 E90FF4                  	jmp	lff44_eof
  3473                                  
  3474                                  lff44s2_8:
  3475 000013E3 89C1                    	mov	cx, ax		; dword count
  3476                                  lff44s2_9:
  3477 000013E5 BD0A00                  	mov	bp, 10 ; interpolation (one step) loop count
  3478 000013E8 C606[5218]02            	mov	byte [faz], 2  ; 2 steps/phase
  3479                                  lff44s2_1:
  3480                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3481                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3482 000013ED AD                      	lodsw
  3483 000013EE 89C3                    	mov	bx, ax
  3484 000013F0 AD                      	lodsw
  3485 000013F1 8B14                    	mov	dx, [si]
  3486 000013F3 8916[4E18]              	mov	[next_val_l], dx
  3487 000013F7 8B5402                  	mov	dx, [si+2]
  3488 000013FA 49                      	dec	cx
  3489 000013FB 7506                    	jnz	short lff44s2_2_1
  3490 000013FD 31D2                    	xor	dx, dx ; 0
  3491 000013FF 8916[4E18]              	mov	[next_val_l], dx
  3492                                  lff44s2_2_1:
  3493                                  	; bx = [previous_val_l]
  3494                                  	; ax = [previous_val_r]
  3495                                  	; [next_val_l]
  3496                                  	; dx = [next_val_r]
  3497 00001403 E84301                  	call	interpolating_2_16bit_stereo
  3498 00001406 E3AD                    	jcxz	lff44s2_3
  3499                                  lff44s2_2_2:
  3500                                  	;lodsw
  3501                                  	;stosw		; (L)
  3502                                  	;lodsw
  3503                                  	;stosw		; (R)
  3504 00001408 A5                      	movsw		; (L)eft Channel
  3505 00001409 A5                      	movsw		; (R)ight Channel
  3506                                  
  3507 0000140A 49                      	dec	cx
  3508 0000140B 74A8                    	jz	short lff44s2_3	
  3509 0000140D 4D                      	dec	bp
  3510 0000140E 75F8                    	jnz	short lff44s2_2_2
  3511                                  	
  3512 00001410 FE0E[5218]              	dec	byte [faz]
  3513 00001414 74CF                    	jz	short lff44s2_9 
  3514 00001416 BD0B00                  	mov	bp, 11
  3515 00001419 EBD2                    	jmp	short lff44s2_1
  3516                                  
  3517                                  ; .....................
  3518                                  
  3519                                  interpolating_3_8bit_mono:
  3520                                  	; 16/11/2023
  3521                                  	; al = [previous_val]
  3522                                  	; dl = [next_val]
  3523                                  	; original-interpolated-interpolated
  3524 0000141B 88C3                    	mov	bl, al
  3525 0000141D 2C80                    	sub	al, 80h
  3526 0000141F C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3527 00001422 AB                      	stosw		; original sample (L)
  3528 00001423 AB                      	stosw		; original sample (R)
  3529 00001424 88D8                    	mov	al, bl
  3530 00001426 00D0                    	add	al, dl
  3531 00001428 D0D8                    	rcr	al, 1
  3532 0000142A 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3533 0000142C 00D8                    	add	al, bl
  3534 0000142E D0D8                    	rcr	al, 1
  3535 00001430 2C80                    	sub	al, 80h
  3536 00001432 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3537 00001435 AB                      	stosw		; interpolated sample 1 (L)
  3538 00001436 AB                      	stosw		; interpolated sample 1 (R)
  3539 00001437 88F8                    	mov	al, bh
  3540 00001439 00D0                    	add	al, dl	; [next_val]
  3541 0000143B D0D8                    	rcr	al, 1
  3542 0000143D C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3543 00001440 AB                      	stosw		; interpolated sample 2 (L)
  3544 00001441 AB                      	stosw		; interpolated sample 2 (R)
  3545 00001442 C3                      	retn
  3546                                  
  3547                                  interpolating_3_8bit_stereo:
  3548                                  	; 16/11/2023
  3549                                  	; al = [previous_val_l]
  3550                                  	; ah = [previous_val_r]
  3551                                  	; dl = [next_val_l]
  3552                                  	; dh = [next_val_r]
  3553                                  	; original-interpolated-interpolated
  3554 00001443 89C3                    	mov	bx, ax
  3555 00001445 2C80                    	sub	al, 80h
  3556 00001447 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3557 0000144A AB                      	stosw		; original sample (L)
  3558 0000144B 88F8                    	mov	al, bh
  3559 0000144D 2C80                    	sub	al, 80h
  3560 0000144F C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3561 00001452 AB                      	stosw		; original sample (R)
  3562 00001453 88D8                    	mov	al, bl
  3563 00001455 00D0                    	add	al, dl	; [next_val_l]
  3564 00001457 D0D8                    	rcr	al, 1
  3565 00001459 50                      	push	ax ; *	; al = interpolated middle (L) (temporary)
  3566 0000145A 00D8                    	add	al, bl	; [previous_val_l]
  3567 0000145C D0D8                    	rcr	al, 1
  3568 0000145E 2C80                    	sub	al, 80h
  3569 00001460 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3570 00001463 AB                      	stosw		; interpolated sample 1 (L)
  3571 00001464 88F8                    	mov	al, bh
  3572 00001466 00F0                    	add	al, dh	; [next_val_r]
  3573 00001468 D0D8                    	rcr	al, 1
  3574 0000146A 50                      	push	ax ; ** ; al = interpolated middle (R) (temporary)
  3575 0000146B 00F8                    	add	al, bh	; [previous_val_r]
  3576 0000146D D0D8                    	rcr	al, 1
  3577 0000146F 2C80                    	sub	al, 80h
  3578 00001471 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3579 00001474 AB                      	stosw		; interpolated sample 1 (R)
  3580 00001475 5B                      	pop	bx ; **
  3581 00001476 58                      	pop	ax ; *
  3582 00001477 00D0                    	add	al, dl	; [next_val_l]
  3583 00001479 D0D8                    	rcr	al, 1
  3584 0000147B C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3585 0000147E AB                      	stosw		; interpolated sample 2 (L)
  3586 0000147F 88D8                    	mov	al, bl
  3587 00001481 00F0                    	add	al, dh	; [next_val_r]
  3588 00001483 D0D8                    	rcr	al, 1
  3589 00001485 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3590 00001488 AB                      	stosw		; interpolated sample 2 (R)
  3591 00001489 C3                      	retn
  3592                                  
  3593                                  interpolating_2_8bit_mono:
  3594                                  	; 16/11/2023
  3595                                  	; al = [previous_val]
  3596                                  	; dl = [next_val]
  3597                                  	; original-interpolated
  3598 0000148A 88C3                    	mov	bl, al
  3599 0000148C 2C80                    	sub	al, 80h
  3600 0000148E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3601 00001491 AB                      	stosw		; original sample (L)
  3602 00001492 AB                      	stosw		; original sample (R)
  3603 00001493 88D8                    	mov	al, bl
  3604 00001495 00D0                    	add	al, dl
  3605 00001497 D0D8                    	rcr	al, 1
  3606 00001499 2C80                    	sub	al, 80h
  3607 0000149B C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3608 0000149E AB                      	stosw		; interpolated sample (L)
  3609 0000149F AB                      	stosw		; interpolated sample (R)
  3610 000014A0 C3                      	retn
  3611                                  
  3612                                  interpolating_2_8bit_stereo:
  3613                                  	; 16/11/2023
  3614                                  	; al = [previous_val_l]
  3615                                  	; ah = [previous_val_r]
  3616                                  	; dl = [next_val_l]
  3617                                  	; dh = [next_val_r]
  3618                                  	; original-interpolated
  3619 000014A1 89C3                    	mov	bx, ax
  3620 000014A3 2C80                    	sub	al, 80h
  3621 000014A5 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3622 000014A8 AB                      	stosw		; original sample (L)
  3623 000014A9 88F8                    	mov	al, bh
  3624 000014AB 2C80                    	sub	al, 80h
  3625 000014AD C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3626 000014B0 AB                      	stosw		; original sample (R)
  3627 000014B1 88D8                    	mov	al, bl	; [previous_val_l]
  3628 000014B3 00D0                    	add	al, dl	; [next_val_l]	
  3629 000014B5 D0D8                    	rcr	al, 1
  3630 000014B7 2C80                    	sub	al, 80h
  3631 000014B9 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3632 000014BC AB                      	stosw		; interpolated sample (L)
  3633 000014BD 88F8                    	mov	al, bh
  3634 000014BF 00F0                    	add	al, dh	; [next_val_r]
  3635 000014C1 D0D8                    	rcr	al, 1
  3636 000014C3 2C80                    	sub	al, 80h
  3637 000014C5 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3638 000014C8 AB                      	stosw		; interpolated sample (R)
  3639 000014C9 C3                      	retn
  3640                                  
  3641                                  interpolating_3_16bit_mono:
  3642                                  	; 16/11/2023
  3643                                  	; ax = [previous_val]
  3644                                  	; dx = [next_val]
  3645                                  	; original-interpolated-interpolated
  3646                                  
  3647 000014CA AB                      	stosw		; original sample (L)
  3648 000014CB AB                      	stosw		; original sample (R)
  3649 000014CC 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3650 000014CF 50                      	push	ax ; *	; [previous_val]
  3651 000014D0 80C680                  	add	dh, 80h
  3652 000014D3 01D0                    	add	ax, dx
  3653 000014D5 D1D8                    	rcr	ax, 1
  3654 000014D7 5B                      	pop	bx ; *
  3655 000014D8 93                      	xchg	bx, ax	; bx  = interpolated middle (temporary)
  3656 000014D9 01D8                    	add	ax, bx	; [previous_val] + interpolated middle
  3657 000014DB D1D8                    	rcr	ax, 1
  3658 000014DD 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3659 000014E0 AB                      	stosw 		; interpolated sample 1 (L)
  3660 000014E1 AB                      	stosw		; interpolated sample 1 (R)
  3661 000014E2 89D8                    	mov	ax, bx
  3662 000014E4 01D0                    	add	ax, dx	 ;interpolated middle + [next_val]
  3663 000014E6 D1D8                    	rcr	ax, 1
  3664 000014E8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3665 000014EB AB                      	stosw		; interpolated sample 2 (L)
  3666 000014EC AB                      	stosw		; interpolated sample 2 (R)
  3667 000014ED C3                      	retn
  3668                                  
  3669                                  interpolating_3_16bit_stereo:
  3670                                  	; 16/11/2023
  3671                                  	; bx = [previous_val_l]
  3672                                  	; ax = [previous_val_r]
  3673                                  	; [next_val_l]
  3674                                  	; dx = [next_val_r]
  3675                                  	; original-interpolated-interpolated
  3676                                  
  3677 000014EE 93                      	xchg	ax, bx
  3678 000014EF AB                      	stosw		; original sample (L)
  3679 000014F0 93                      	xchg	ax, bx
  3680 000014F1 AB                      	stosw		; original sample (R)
  3681 000014F2 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3682 000014F5 50                      	push	ax ; *	; [previous_val_r]
  3683 000014F6 80C780                  	add	bh, 80h
  3684 000014F9 8006[4F18]80            	add	byte [next_val_l+1], 80h
  3685 000014FE A1[4E18]                	mov	ax, [next_val_l]
  3686 00001501 01D8                    	add	ax, bx	; [previous_val_l]
  3687 00001503 D1D8                    	rcr	ax, 1
  3688 00001505 93                      	xchg	ax, bx	; ax = [previous_val_l]	
  3689 00001506 01D8                    	add	ax, bx	; bx = interpolated middle (L)
  3690 00001508 D1D8                    	rcr	ax, 1
  3691 0000150A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3692 0000150D AB                      	stosw 		; interpolated sample 1 (L)
  3693 0000150E 58                      	pop	ax  ; *
  3694 0000150F 80C680                  	add	dh, 80h ; convert sound level 0 to 65535 format
  3695 00001512 52                      	push	dx  ; * ; [next_val_r]
  3696 00001513 92                      	xchg	ax, dx
  3697 00001514 01D0                    	add	ax, dx	; [next_val_r] + [previous_val_r]
  3698 00001516 D1D8                    	rcr	ax, 1	; / 2
  3699 00001518 50                      	push	ax ; ** ; interpolated middle (R)
  3700 00001519 01D0                    	add	ax, dx	; + [previous_val_r]
  3701 0000151B D1D8                    	rcr	ax, 1
  3702 0000151D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3703 00001520 AB                      	stosw 		; interpolated sample 1 (R)
  3704 00001521 A1[4E18]                	mov	ax, [next_val_l]
  3705 00001524 01D8                    	add	ax, bx	; + interpolated middle (L)
  3706 00001526 D1D8                    	rcr	ax, 1
  3707 00001528 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3708 0000152B AB                      	stosw 		; interpolated sample 2 (L)
  3709 0000152C 58                      	pop	ax ; **
  3710 0000152D 5A                      	pop	dx ; *	
  3711 0000152E 01D0                    	add	ax, dx	; interpolated middle + [next_val_r]
  3712 00001530 D1D8                    	rcr	ax, 1	; / 2
  3713 00001532 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3714 00001535 AB                      	stosw 		; interpolated sample 2 (L)
  3715 00001536 C3                      	retn
  3716                                  
  3717                                  
  3718                                  interpolating_2_16bit_mono:
  3719                                  	; 16/11/2023
  3720                                  	; ax = [previous_val]
  3721                                  	; dx = [next_val]
  3722                                  	; original-interpolated
  3723                                  
  3724 00001537 AB                      	stosw		; original sample (L)
  3725 00001538 AB                      	stosw		; original sample (R)
  3726 00001539 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3727 0000153C 80C680                  	add	dh, 80h
  3728 0000153F 01D0                    	add	ax, dx
  3729 00001541 D1D8                    	rcr	ax, 1
  3730 00001543 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3731 00001546 AB                      	stosw		; interpolated sample (L)
  3732 00001547 AB                      	stosw		; interpolated sample (R)
  3733 00001548 C3                      	retn
  3734                                  
  3735                                  interpolating_2_16bit_stereo:
  3736                                  	; 16/11/2023
  3737                                  	; bx = [previous_val_l]
  3738                                  	; ax = [previous_val_r]
  3739                                  	; [next_val_l]
  3740                                  	; dx = [next_val_r]
  3741                                  	; original-interpolated
  3742                                  
  3743 00001549 93                      	xchg	ax, bx
  3744 0000154A AB                      	stosw		; original sample (L)
  3745 0000154B 93                      	xchg	ax, bx
  3746 0000154C AB                      	stosw		; original sample (R)
  3747 0000154D 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3748 00001550 80C680                  	add	dh, 80h
  3749 00001553 01D0                    	add	ax, dx	; [previous_val_r] + [next_val_r]
  3750 00001555 D1D8                    	rcr	ax, 1	; / 2
  3751 00001557 50                      	push	ax ; *	; interpolated sample (R)
  3752 00001558 A1[4E18]                	mov	ax, [next_val_l]
  3753 0000155B 80C480                  	add	ah, 80h
  3754 0000155E 80C780                  	add	bh, 80h
  3755 00001561 01D8                    	add	ax, bx	; [next_val_l] + [previous_val_l]
  3756 00001563 D1D8                    	rcr	ax, 1	; / 2		
  3757 00001565 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3758 00001568 AB                      	stosw 		; interpolated sample (L)
  3759 00001569 58                      	pop	ax ; *	
  3760 0000156A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3761 0000156D AB                      	stosw 		; interpolated sample (R)
  3762 0000156E C3                      	retn
  3763                                  
  3764                                  interpolating_5_8bit_mono:
  3765                                  	; 17/11/2023
  3766                                  	; al = [previous_val]
  3767                                  	; dl = [next_val]
  3768                                  	; original-interpltd-interpltd-interpltd-interpltd
  3769 0000156F 88C3                    	mov	bl, al
  3770 00001571 2C80                    	sub	al, 80h
  3771 00001573 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3772 00001576 AB                      	stosw		; original sample (L)
  3773 00001577 AB                      	stosw		; original sample (R)
  3774 00001578 88D8                    	mov	al, bl
  3775 0000157A 00D0                    	add	al, dl
  3776 0000157C D0D8                    	rcr	al, 1
  3777 0000157E 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3778 00001580 00D8                    	add	al, bl  ; [previous_val]
  3779 00001582 D0D8                    	rcr	al, 1 	
  3780 00001584 88C6                    	mov	dh, al	; interpolated 1st quarter (temporary)
  3781 00001586 00D8                    	add	al, bl
  3782 00001588 D0D8                    	rcr	al, 1
  3783 0000158A 2C80                    	sub	al, 80h
  3784 0000158C C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3785 0000158F AB                      	stosw		; interpolated sample 1 (L)
  3786 00001590 AB                      	stosw		; interpolated sample 1 (R)
  3787 00001591 88F8                    	mov	al, bh
  3788 00001593 00F0                    	add	al, dh
  3789 00001595 D0D8                    	rcr	al, 1
  3790 00001597 2C80                    	sub	al, 80h
  3791 00001599 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3792 0000159C AB                      	stosw		; interpolated sample 2 (L)
  3793 0000159D AB                      	stosw		; interpolated sample 2 (R)
  3794 0000159E 88F8                    	mov	al, bh
  3795 000015A0 00D0                    	add	al, dl	; [next_val]
  3796 000015A2 D0D8                    	rcr	al, 1
  3797 000015A4 88C6                    	mov	dh, al	; interpolated 3rd quarter (temporary)
  3798 000015A6 00F8                    	add	al, bh
  3799 000015A8 D0D8                    	rcr	al, 1
  3800 000015AA 2C80                    	sub	al, 80h
  3801 000015AC C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3802 000015AF AB                      	stosw		; interpolated sample 3 (L)
  3803 000015B0 AB                      	stosw		; interpolated sample 3 (R)
  3804 000015B1 88F0                    	mov	al, dh
  3805 000015B3 00D0                    	add	al, dl
  3806 000015B5 D0D8                    	rcr	al, 1
  3807 000015B7 2C80                    	sub	al, 80h
  3808 000015B9 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3809 000015BC AB                      	stosw		; interpolated sample 4 (L)
  3810 000015BD AB                      	stosw		; interpolated sample 4 (R)
  3811 000015BE C3                      	retn
  3812                                  
  3813                                  interpolating_5_8bit_stereo:
  3814                                  	; 17/11/2023
  3815                                  	; al = [previous_val_l]
  3816                                  	; ah = [previous_val_r]
  3817                                  	; dl = [next_val_l]
  3818                                  	; dh = [next_val_r]
  3819                                  	; original-interpltd-interpltd-interpltd-interpltd
  3820 000015BF 89C3                    	mov	bx, ax
  3821 000015C1 2C80                    	sub	al, 80h
  3822 000015C3 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3823 000015C6 AB                      	stosw		; original sample (L)
  3824 000015C7 88F8                    	mov	al, bh
  3825 000015C9 2C80                    	sub	al, 80h
  3826 000015CB C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3827 000015CE AB                      	stosw		; original sample (R)
  3828 000015CF 52                      	push	dx ; *
  3829 000015D0 88D8                    	mov	al, bl
  3830 000015D2 00D0                    	add	al, dl	; [next_val_l]
  3831 000015D4 D0D8                    	rcr	al, 1
  3832 000015D6 50                      	push	ax ; **	; al = interpolated middle (L) (temporary)
  3833 000015D7 00D8                    	add	al, bl	; [previous_val_l]
  3834 000015D9 D0D8                    	rcr	al, 1
  3835 000015DB 86C3                    	xchg	al, bl	
  3836 000015DD 00D8                    	add	al, bl	; bl = interpolated 1st quarter (L) (temp)
  3837 000015DF D0D8                    	rcr	al, 1
  3838 000015E1 2C80                    	sub	al, 80h
  3839 000015E3 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3840 000015E6 AB                      	stosw		; interpolated sample 1 (L)
  3841 000015E7 88F8                    	mov	al, bh
  3842 000015E9 00F0                    	add	al, dh	; [next_val_r]
  3843 000015EB D0D8                    	rcr	al, 1
  3844 000015ED 50                      	push	ax ; *** ; al = interpolated middle (R) (temporary)
  3845 000015EE 00F8                    	add	al, bh	; [previous_val_r]
  3846 000015F0 D0D8                    	rcr	al, 1
  3847 000015F2 86C7                    	xchg	al, bh	
  3848 000015F4 00F8                    	add	al, bh	; bh = interpolated 1st quarter (R) (temp)
  3849 000015F6 D0D8                    	rcr	al, 1
  3850 000015F8 2C80                    	sub	al, 80h
  3851 000015FA C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3852 000015FD AB                      	stosw		; interpolated sample 1 (R)
  3853 000015FE 5A                      	pop	dx ; ***
  3854 000015FF 58                      	pop	ax ; **	; al = interpolated middle (L) (temporary)
  3855 00001600 86C3                    	xchg	al, bl	; al = interpolated 1st quarter (L) (temp)
  3856 00001602 00D8                    	add	al, bl	; bl = interpolated middle (L) (temporary)
  3857 00001604 D0D8                    	rcr	al, 1
  3858 00001606 2C80                    	sub	al, 80h
  3859 00001608 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3860 0000160B AB                      	stosw		; interpolated sample 2 (L)	
  3861 0000160C 88D0                    	mov	al, dl 	; interpolated middle (R) (temporary)
  3862 0000160E 86C7                    	xchg	al, bh	; al = interpolated 1st quarter (R) (temp)
  3863 00001610 00F8                    	add	al, bh	; bh = interpolated middle (R) (temporary)
  3864 00001612 D0D8                    	rcr	al, 1
  3865 00001614 2C80                    	sub	al, 80h
  3866 00001616 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3867 00001619 AB                      	stosw		; interpolated sample 2 (R)
  3868 0000161A 5A                      	pop	dx ; *
  3869 0000161B 88D8                    	mov	al, bl	; interpolated middle (L) (temporary)
  3870 0000161D 00D0                    	add	al, dl	; [next_val_l]
  3871 0000161F D0D8                    	rcr	al, 1
  3872 00001621 86C3                    	xchg	al, bl	; al = interpolated middle (R) (temporary)	
  3873 00001623 00D8                    	add	al, bl	; bl = interpolated 3rd quarter (L) (temp) 
  3874 00001625 D0D8                    	rcr	al, 1
  3875 00001627 2C80                    	sub	al, 80h
  3876 00001629 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3877 0000162C AB                      	stosw		; interpolated sample 3 (L)
  3878 0000162D 88F8                    	mov	al, bh	
  3879 0000162F 00F0                    	add	al, dh	; interpolated middle (R) + [next_val_r]
  3880 00001631 D0D8                    	rcr	al, 1
  3881 00001633 86C7                    	xchg	al, bh	; al = interpolated middle (R)
  3882 00001635 00F8                    	add	al, bh	; bh = interpolated 3rd quarter (R) (temp)
  3883 00001637 D0D8                    	rcr	al, 1
  3884 00001639 2C80                    	sub	al, 80h
  3885 0000163B C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3886 0000163E AB                      	stosw		; interpolated sample 3 (R)
  3887 0000163F 88D8                    	mov	al, bl
  3888 00001641 00D0                    	add	al, dl	; [next_val_l]
  3889 00001643 D0D8                    	rcr	al, 1
  3890 00001645 2C80                    	sub	al, 80h
  3891 00001647 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3892 0000164A AB                      	stosw		; interpolated sample 4 (L)
  3893 0000164B 88F8                    	mov	al, bh
  3894 0000164D 00F0                    	add	al, dh	; [next_val_r]
  3895 0000164F D0D8                    	rcr	al, 1
  3896 00001651 2C80                    	sub	al, 80h
  3897 00001653 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3898 00001656 AB                      	stosw		; interpolated sample 4 (R)
  3899 00001657 C3                      	retn
  3900                                  
  3901                                  interpolating_4_8bit_mono:
  3902                                  	; 17/11/2023
  3903                                  	; al = [previous_val]
  3904                                  	; dl = [next_val]
  3905                                  	; original-interpolated-interpolated-interpolated
  3906 00001658 88C3                    	mov	bl, al
  3907 0000165A 2C80                    	sub	al, 80h
  3908 0000165C C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3909 0000165F AB                      	stosw		; original sample (L)
  3910 00001660 AB                      	stosw		; original sample (R)
  3911 00001661 88D8                    	mov	al, bl
  3912 00001663 00D0                    	add	al, dl	
  3913 00001665 D0D8                    	rcr	al, 1
  3914 00001667 86C3                    	xchg	al, bl  ; al = [previous_val]
  3915 00001669 00D8                    	add	al, bl	; bl = interpolated middle (sample 2)
  3916 0000166B D0D8                    	rcr	al, 1 	
  3917 0000166D 2C80                    	sub	al, 80h
  3918 0000166F C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3919 00001672 AB                      	stosw		; interpolated sample 1 (L)
  3920 00001673 AB                      	stosw		; interpolated sample 1 (R)
  3921 00001674 88D8                    	mov	al, bl	; interpolated middle (sample 2)
  3922 00001676 2C80                    	sub	al, 80h
  3923 00001678 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3924 0000167B AB                      	stosw		; interpolated sample 2 (L)
  3925 0000167C AB                      	stosw		; interpolated sample 2 (R)
  3926 0000167D 88D8                    	mov	al, bl
  3927 0000167F 00D0                    	add	al, dl	; [next_val]
  3928 00001681 D0D8                    	rcr	al, 1
  3929 00001683 2C80                    	sub	al, 80h
  3930 00001685 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3931 00001688 AB                      	stosw		; interpolated sample 3 (L)
  3932 00001689 AB                      	stosw		; interpolated sample 3 (R)
  3933 0000168A C3                      	retn
  3934                                  
  3935                                  interpolating_4_8bit_stereo:
  3936                                  	; 17/11/2023
  3937                                  	; al = [previous_val_l]
  3938                                  	; ah = [previous_val_r]
  3939                                  	; dl = [next_val_l]
  3940                                  	; dh = [next_val_r]
  3941                                  	; original-interpolated-interpolated-interpolated
  3942 0000168B 89C3                    	mov	bx, ax
  3943 0000168D 2C80                    	sub	al, 80h
  3944 0000168F C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3945 00001692 AB                      	stosw		; original sample (L)
  3946 00001693 88F8                    	mov	al, bh
  3947 00001695 2C80                    	sub	al, 80h
  3948 00001697 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3949 0000169A AB                      	stosw		; original sample (R)
  3950 0000169B 88D8                    	mov	al, bl
  3951 0000169D 00D0                    	add	al, dl	; [next_val_l]
  3952 0000169F D0D8                    	rcr	al, 1
  3953 000016A1 86C3                    	xchg	al, bl	; al = [previous_val_l]
  3954 000016A3 00D8                    	add	al, bl	; bl = interpolated middle (L) (sample 2)
  3955 000016A5 D0D8                    	rcr	al, 1
  3956 000016A7 2C80                    	sub	al, 80h
  3957 000016A9 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3958 000016AC AB                      	stosw		; interpolated sample 1 (L)
  3959 000016AD 88F8                    	mov	al, bh
  3960 000016AF 00F0                    	add	al, dh	; [next_val_r]
  3961 000016B1 D0D8                    	rcr	al, 1
  3962 000016B3 86C7                    	xchg	al, bh	; al = [previous_val_h]
  3963 000016B5 00F8                    	add	al, bh	; bh = interpolated middle (R) (sample 2)
  3964 000016B7 D0D8                    	rcr	al, 1
  3965 000016B9 2C80                    	sub	al, 80h
  3966 000016BB C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3967 000016BE AB                      	stosw		; interpolated sample 1 (R)
  3968 000016BF 88D8                    	mov	al, bl	; interpolated middle (L) (sample 2)
  3969 000016C1 2C80                    	sub	al, 80h
  3970 000016C3 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3971 000016C6 AB                      	stosw		; interpolated sample 2 (L)
  3972 000016C7 88F8                    	mov	al, bh	; interpolated middle (L) (sample 2)
  3973 000016C9 2C80                    	sub	al, 80h
  3974 000016CB C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3975 000016CE AB                      	stosw		; interpolated sample 2 (L)
  3976 000016CF 88D8                    	mov	al, bl
  3977 000016D1 00D0                    	add	al, dl	; [next_val_l]
  3978 000016D3 D0D8                    	rcr	al, 1
  3979 000016D5 2C80                    	sub	al, 80h
  3980 000016D7 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3981 000016DA AB                      	stosw		; interpolated sample 3 (L)
  3982 000016DB 88F8                    	mov	al, bh
  3983 000016DD 00F0                    	add	al, dh	; [next_val_r]
  3984 000016DF D0D8                    	rcr	al, 1
  3985 000016E1 2C80                    	sub	al, 80h
  3986 000016E3 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3987 000016E6 AB                      	stosw		; interpolated sample 3 (R)
  3988 000016E7 C3                      	retn
  3989                                  
  3990                                  interpolating_5_16bit_mono:
  3991                                  	; 18/11/2023
  3992                                  	; ax = [previous_val]
  3993                                  	; dx = [next_val]
  3994                                  	; original-interpltd-interpltd-interpltd-interpltd
  3995 000016E8 AB                      	stosw		; original sample (L)
  3996 000016E9 AB                      	stosw		; original sample (R)
  3997 000016EA 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3998 000016ED 89C3                    	mov	bx, ax	; [previous_val]
  3999 000016EF 80C680                  	add	dh, 80h
  4000 000016F2 01D0                    	add	ax, dx
  4001 000016F4 D1D8                    	rcr	ax, 1
  4002 000016F6 50                      	push	ax ; *	; interpolated middle (temporary)
  4003 000016F7 01D8                    	add	ax, bx	; interpolated middle + [previous_val] 
  4004 000016F9 D1D8                    	rcr	ax, 1
  4005 000016FB 50                      	push	ax ; **	; interpolated 1st quarter (temporary)
  4006 000016FC 01D8                    	add	ax, bx	; 1st quarter + [previous_val]
  4007 000016FE D1D8                    	rcr	ax, 1	
  4008 00001700 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4009 00001703 AB                      	stosw 		; interpolated sample 1 (L)
  4010 00001704 AB                      	stosw		; interpolated sample 1 (R)
  4011 00001705 58                      	pop	ax ; **	
  4012 00001706 5B                      	pop	bx ; *
  4013 00001707 01D8                    	add	ax, bx	; 1st quarter + middle
  4014 00001709 D1D8                    	rcr	ax, 1	; / 2
  4015 0000170B 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again	
  4016 0000170E AB                      	stosw		; interpolated sample 2 (L)
  4017 0000170F AB                      	stosw		; interpolated sample 2 (R)		
  4018 00001710 89D8                    	mov	ax, bx
  4019 00001712 01D0                    	add	ax, dx	; interpolated middle + [next_val]
  4020 00001714 D1D8                    	rcr	ax, 1
  4021 00001716 50                      	push	ax ; *	; interpolated 3rd quarter (temporary)
  4022 00001717 01D8                    	add	ax, bx	; + interpolated middle
  4023 00001719 D1D8                    	rcr	ax, 1
  4024 0000171B 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4025 0000171E AB                      	stosw		; interpolated sample 3 (L)
  4026 0000171F AB                      	stosw		; interpolated sample 3 (R)
  4027 00001720 58                      	pop	ax ; *	
  4028 00001721 01D0                    	add	ax, dx	; 3rd quarter + [next_val]
  4029 00001723 D1D8                    	rcr	ax, 1	; / 2
  4030 00001725 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4031 00001728 AB                      	stosw		; interpolated sample 4 (L)
  4032 00001729 AB                      	stosw		; interpolated sample 4 (R)
  4033 0000172A C3                      	retn
  4034                                  
  4035                                  interpolating_5_16bit_stereo:
  4036                                  	; 18/11/2023
  4037                                  	; bx = [previous_val_l]
  4038                                  	; ax = [previous_val_r]
  4039                                  	; [next_val_l]
  4040                                  	; [next_val_r]
  4041                                  	; original-interpltd-interpltd-interpltd-interpltd
  4042 0000172B 51                      	push	cx ; !
  4043 0000172C 93                      	xchg	ax, bx
  4044 0000172D AB                      	stosw		; original sample (L)
  4045 0000172E 93                      	xchg	ax, bx
  4046 0000172F AB                      	stosw		; original sample (R)
  4047 00001730 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4048 00001733 50                      	push	ax ; *	; [previous_val_r]
  4049 00001734 80C780                  	add	bh, 80h
  4050 00001737 8006[4F18]80            	add	byte [next_val_l+1], 80h
  4051 0000173C A1[4E18]                	mov	ax, [next_val_l]
  4052 0000173F 01D8                    	add	ax, bx	; [previous_val_l]
  4053 00001741 D1D8                    	rcr	ax, 1
  4054 00001743 89C1                    	mov	cx, ax	; interpolated middle (L)
  4055 00001745 01D8                    	add	ax, bx	
  4056 00001747 D1D8                    	rcr	ax, 1
  4057 00001749 89C2                    	mov	dx, ax	; interpolated 1st quarter (L)	
  4058 0000174B 01D8                    	add	ax, bx	; [previous_val_l]
  4059 0000174D D1D8                    	rcr	ax, 1
  4060 0000174F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4061 00001752 AB                      	stosw 		; interpolated sample 1 (L)
  4062 00001753 89C8                    	mov	ax, cx
  4063 00001755 01D0                    	add	ax, dx	; middle (L) + 1st quarter (L) 
  4064 00001757 D1D8                    	rcr	ax, 1	; / 2
  4065 00001759 89C3                    	mov	bx, ax  ; interpolated sample 2 (L)
  4066 0000175B 5A                      	pop	dx ; *	; [previous_val_r]
  4067 0000175C 89D0                    	mov	ax, dx
  4068 0000175E 8006[5118]80            	add	byte [next_val_r+1], 80h
  4069 00001763 0306[5018]              	add	ax, [next_val_r]
  4070 00001767 D1D8                    	rcr	ax, 1
  4071 00001769 50                      	push	ax ; *	; interpolated middle (R)
  4072 0000176A 01D0                    	add	ax, dx
  4073 0000176C D1D8                    	rcr	ax, 1
  4074 0000176E 50                      	push	ax ; **	; interpolated 1st quarter (R)
  4075 0000176F 01D0                    	add	ax, dx	; [previous_val_r]
  4076 00001771 D1D8                    	rcr	ax, 1
  4077 00001773 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4078 00001776 AB                      	stosw 		; interpolated sample 1 (R)
  4079 00001777 89D8                    	mov	ax, bx
  4080 00001779 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4081 0000177C AB                      	stosw 		; interpolated sample 2 (L)
  4082 0000177D 58                      	pop	ax ; **
  4083 0000177E 5A                      	pop	dx ; *
  4084 0000177F 01D0                    	add	ax, dx	; 1st quarter (R) + middle (R)
  4085 00001781 D1D8                    	rcr	ax, 1	; / 2
  4086 00001783 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4087 00001786 AB                      	stosw 		; interpolated sample 2 (R)
  4088 00001787 89C8                    	mov	ax, cx
  4089 00001789 0306[4E18]              	add	ax, [next_val_l]
  4090 0000178D D1D8                    	rcr	ax, 1
  4091 0000178F 50                      	push	ax ; * 	; interpolated 3rd quarter (L)
  4092 00001790 01C8                    	add	ax, cx	; interpolated middle (L)
  4093 00001792 D1D8                    	rcr	ax, 1
  4094 00001794 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4095 00001797 AB                      	stosw 		; interpolated sample 3 (L)
  4096 00001798 89D0                    	mov	ax, dx
  4097 0000179A 0306[5018]              	add	ax, [next_val_r]
  4098 0000179E D1D8                    	rcr	ax, 1
  4099 000017A0 50                      	push	ax ; ** ; interpolated 3rd quarter (R)
  4100 000017A1 01D0                    	add	ax, dx	; interpolated middle (R)
  4101 000017A3 D1D8                    	rcr	ax, 1
  4102 000017A5 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4103 000017A8 AB                      	stosw 		; interpolated sample 3 (R)
  4104 000017A9 5B                      	pop	bx ; **
  4105 000017AA 58                      	pop	ax ; *
  4106 000017AB 0306[4E18]              	add	ax, [next_val_l]
  4107 000017AF D1D8                    	rcr	ax, 1
  4108 000017B1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4109 000017B4 AB                      	stosw 		; interpolated sample 4 (L)
  4110 000017B5 89D8                    	mov	ax, bx	
  4111 000017B7 0306[5018]              	add	ax, [next_val_r]
  4112 000017BB D1D8                    	rcr	ax, 1
  4113 000017BD 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4114 000017C0 AB                      	stosw 		; interpolated sample 4 (R)
  4115 000017C1 59                      	pop	cx ; !
  4116 000017C2 C3                      	retn
  4117                                  
  4118                                  interpolating_4_16bit_mono:
  4119                                  	; 18/11/2023
  4120                                  	; ax = [previous_val]
  4121                                  	; dx = [next_val]
  4122                                  	; original-interpolated
  4123                                  
  4124 000017C3 AB                      	stosw		; original sample (L)
  4125 000017C4 AB                      	stosw		; original sample (R)
  4126 000017C5 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4127 000017C8 89C3                    	mov	bx, ax	; [previous_val]
  4128 000017CA 80C680                  	add	dh, 80h
  4129 000017CD 01D0                    	add	ax, dx	; [previous_val] + [next_val]
  4130 000017CF D1D8                    	rcr	ax, 1
  4131 000017D1 93                      	xchg	ax, bx	
  4132 000017D2 01D8                    	add	ax, bx	; [previous_val] + interpolated middle
  4133 000017D4 D1D8                    	rcr	ax, 1
  4134 000017D6 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4135 000017D9 AB                      	stosw 		; interpolated sample 1 (L)
  4136 000017DA AB                      	stosw		; interpolated sample 1 (R)
  4137 000017DB 89D8                    	mov	ax, bx	; interpolated middle
  4138 000017DD 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4139 000017E0 AB                      	stosw 		; interpolated sample 2 (L)
  4140 000017E1 AB                      	stosw		; interpolated sample 2 (R)
  4141 000017E2 89D8                    	mov	ax, bx
  4142 000017E4 01D0                    	add	ax, dx	; interpolated middle + [next_val]
  4143 000017E6 D1D8                    	rcr	ax, 1
  4144 000017E8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4145 000017EB AB                      	stosw		; interpolated sample 3 (L)
  4146 000017EC AB                      	stosw		; interpolated sample 3 (R)
  4147 000017ED C3                      	retn
  4148                                  
  4149                                  interpolating_4_16bit_stereo:
  4150                                  	; 18/11/2023
  4151                                  	; bx = [previous_val_l]
  4152                                  	; ax = [previous_val_r]
  4153                                  	; [next_val_l]
  4154                                  	; [next_val_r]
  4155                                  	; original-interpolated-interpolated-interpolated
  4156 000017EE 93                      	xchg	ax, bx
  4157 000017EF AB                      	stosw		; original sample (L)
  4158 000017F0 93                      	xchg	ax, bx
  4159 000017F1 AB                      	stosw		; original sample (R)
  4160 000017F2 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4161 000017F5 89C2                    	mov	dx, ax	; [previous_val_r]
  4162 000017F7 80C780                  	add	bh, 80h
  4163 000017FA 8006[4F18]80            	add	byte [next_val_l+1], 80h
  4164 000017FF A1[4E18]                	mov	ax, [next_val_l]
  4165 00001802 01D8                    	add	ax, bx	; [previous_val_l]
  4166 00001804 D1D8                    	rcr	ax, 1
  4167 00001806 93                      	xchg	ax, bx	
  4168 00001807 01D8                    	add	ax, bx	; bx = interpolated middle (L)
  4169 00001809 D1D8                    	rcr	ax, 1
  4170 0000180B 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4171 0000180E AB                      	stosw 		; interpolated sample 1 (L)
  4172 0000180F 8006[5118]80            	add	byte [next_val_r+1], 80h
  4173 00001814 89D0                    	mov	ax, dx	; [previous_val_r]
  4174 00001816 0306[5018]              	add	ax, [next_val_r]
  4175 0000181A D1D8                    	rcr	ax, 1
  4176 0000181C 92                      	xchg	ax, dx	
  4177 0000181D 01D0                    	add	ax, dx	; dx = interpolated middle (R)
  4178 0000181F D1D8                    	rcr	ax, 1
  4179 00001821 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4180 00001824 AB                      	stosw 		; interpolated sample 1 (R)
  4181 00001825 89D8                    	mov	ax, bx
  4182 00001827 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4183 0000182A AB                      	stosw 		; interpolated sample 2 (L)
  4184 0000182B 89D0                    	mov	ax, dx
  4185 0000182D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4186 00001830 AB                      	stosw 		; interpolated sample 2 (R)
  4187 00001831 89D8                    	mov	ax, bx
  4188 00001833 0306[4E18]              	add	ax, [next_val_l]
  4189 00001837 D1D8                    	rcr	ax, 1
  4190 00001839 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4191 0000183C AB                      	stosw 		; interpolated sample 3 (L)
  4192 0000183D 89D0                    	mov	ax, dx
  4193 0000183F 0306[5018]              	add	ax, [next_val_r]
  4194 00001843 D1D8                    	rcr	ax, 1
  4195 00001845 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4196 00001848 AB                      	stosw 		; interpolated sample 3 (R)
  4197 00001849 C3                      	retn
  4198                                  
  4199                                  ; 13/11/2023
  4200                                  previous_val:
  4201 0000184A 0000                    previous_val_l: dw 0
  4202 0000184C 0000                    previous_val_r: dw 0
  4203                                  next_val:
  4204 0000184E 0000                    next_val_l: dw 0
  4205 00001850 0000                    next_val_r: dw 0
  4206                                  
  4207                                  ; 16/11/2023
  4208 00001852 00                      faz:	db 0	
  4209                                  	
  4210                                  ; --------------------------------------------------------
  4211                                  ; 27/05/2024 - (TRDOS 386 Kernel) audio.s
  4212                                  ; --------------------------------------------------------
  4213                                  
  4214                                  NOT_PCI32_PCI16	EQU 03FFFFFFFh ; NOT BIT31+BIT30 ; 19/03/2017
  4215                                  NOT_BIT31 EQU 7FFFFFFFh
  4216                                  
  4217                                  pciFindDevice:
  4218                                  	; 19/11/2023
  4219                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4220                                  	;
  4221                                  	; scan through PCI space looking for a device+vendor ID
  4222                                  	;
  4223                                  	; Entry: EAX=Device+Vendor ID
  4224                                  	;
  4225                                  	; Exit: EAX=PCI address if device found
  4226                                  	;	EDX=Device+Vendor ID
  4227                                  	;       CY clear if found, set if not found. EAX invalid if CY set.
  4228                                  	;
  4229                                  	; Destroys: ebx, edi ; 19/11/2023
  4230                                  
  4231                                          ; 19/11/2023
  4232 00001853 6689C3                  	mov	ebx, eax
  4233 00001856 66BF00000080            	mov	edi, 80000000h
  4234                                  nextPCIdevice:
  4235 0000185C 6689F8                  	mov 	eax, edi		; read PCI registers
  4236 0000185F E88D00                  	call	pciRegRead32
  4237                                  	; 19/11/2023
  4238 00001862 6639DA                  	cmp	edx, ebx
  4239 00001865 7414                    	je	short PCIScanExit	; found
  4240                                  	; 19/11/2023
  4241 00001867 6681FF00F8FF80          	cmp	edi, 80FFF800h
  4242 0000186E 7309                    	jnb	short pfd_nf		; not found
  4243 00001870 6681C700010000          	add	edi, 100h
  4244 00001877 EBE3                    	jmp	short nextPCIdevice
  4245                                  pfd_nf:
  4246 00001879 F9                      	stc
  4247 0000187A C3                      	retn
  4248                                  PCIScanExit:
  4249                                  	;pushf
  4250 0000187B 66B8FFFFFF7F            	mov	eax, NOT_BIT31 	; 19/03/2017
  4251 00001881 6621F8                  	and	eax, edi	; return only bus/dev/fn #
  4252 00001884 C3                      	retn
  4253                                  
  4254                                  pciRegRead:
  4255                                  	; 30/05/2024
  4256                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4257                                  	;
  4258                                  	; 8/16/32bit PCI reader
  4259                                  	;
  4260                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4261                                  	;           BIT30 set if 32 bit access requested
  4262                                  	;           BIT29 set if 16 bit access requested
  4263                                  	;           otherwise defaults to 8 bit read
  4264                                  	;
  4265                                  	; Exit:  DL,DX,EDX register data depending on requested read size
  4266                                  	;
  4267                                  	; Note1: this routine is meant to be called via pciRegRead8,
  4268                                  	;	 pciRegread16 or pciRegRead32, listed below.
  4269                                  	;
  4270                                  	; Note2: don't attempt to read 32 bits of data from a non dword
  4271                                  	;	 aligned reg number. Likewise, don't do 16 bit reads from
  4272                                  	;	 non word aligned reg #
  4273                                  	
  4274 00001885 6653                    	push	ebx
  4275 00001887 51                      	push	cx
  4276 00001888 6689C3                          mov     ebx, eax		; save eax, dh
  4277 0000188B 88F1                            mov     cl, dh
  4278                                  
  4279 0000188D 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; clear out data size request
  4280 00001893 660D00000080                    or      eax, BIT31		; make a PCI access request
  4281 00001899 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4282                                  
  4283 0000189B BAF80C                          mov     dx, PCI_INDEX_PORT
  4284 0000189E 66EF                    	out	dx, eax			; write PCI selector
  4285                                  		
  4286 000018A0 BAFC0C                          mov     dx, PCI_DATA_PORT
  4287 000018A3 88D8                            mov     al, bl
  4288 000018A5 2403                            and     al, 3			; figure out which port to
  4289 000018A7 00C2                            add     dl, al			; read to
  4290                                  
  4291 000018A9 66F7C3000000C0          	test    ebx, PCI32+PCI16
  4292 000018B0 7507                            jnz     short _pregr0
  4293                                  
  4294 000018B2 EC                      	in	al, dx			; return 8 bits of data
  4295                                  
  4296 000018B3 88C2                    	mov	dl, al
  4297 000018B5 88CE                    	mov     dh, cl			; restore dh for 8 bit read
  4298 000018B7 EB13                    	jmp	short _pregr2
  4299                                  _pregr0:	
  4300 000018B9 66F7C300000080          	test    ebx, PCI32
  4301 000018C0 7505                            jnz	short _pregr1
  4302                                  
  4303 000018C2 ED                      	in	ax, dx
  4304                                  
  4305 000018C3 89C2                    	mov     dx, ax			; return 16 bits of data
  4306 000018C5 EB05                    	jmp	short _pregr2
  4307                                  _pregr1:
  4308 000018C7 66ED                    	in	eax, dx			; return 32 bits of data
  4309                                  
  4310 000018C9 6689C2                  	mov	edx, eax
  4311                                  _pregr2:
  4312 000018CC 6689D8                  	mov     eax, ebx		; restore eax
  4313 000018CF 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; clear out data size request
  4314 000018D5 59                      	pop	cx
  4315 000018D6 665B                    	pop	ebx
  4316 000018D8 C3                      	retn
  4317                                  
  4318                                  pciRegRead8:
  4319 000018D9 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 8 bit read size
  4320 000018DF EBA4                            jmp     short pciRegRead	; call generic PCI access
  4321                                  
  4322                                  pciRegRead16:
  4323 000018E1 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 16 bit read size
  4324 000018E7 660D00000040                    or      eax, PCI16		; call generic PCI access
  4325 000018ED EB96                            jmp     short pciRegRead
  4326                                  
  4327                                  pciRegRead32:
  4328 000018EF 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 32 bit read size
  4329 000018F5 660D00000080                    or      eax, PCI32		; call generic PCI access
  4330 000018FB EB88                            jmp     pciRegRead
  4331                                  
  4332                                  pciRegWrite:
  4333                                  	; 30/05/2024
  4334                                  	; 03/04/2017 ('pci.asm', 29/11/2016)
  4335                                  	;
  4336                                  	; 8/16/32bit PCI writer
  4337                                  	;
  4338                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4339                                  	;           BIT31 set if 32 bit access requested
  4340                                  	;           BIT30 set if 16 bit access requested
  4341                                  	;           otherwise defaults to 8bit read
  4342                                  	;        DL/DX/EDX data to write depending on size
  4343                                  	;
  4344                                  	; Note1: this routine is meant to be called via pciRegWrite8, 
  4345                                  	;	 pciRegWrite16 or pciRegWrite32 as detailed below.
  4346                                  	;
  4347                                  	; Note2: don't attempt to write 32bits of data from a non dword
  4348                                  	;	 aligned reg number. Likewise, don't do 16 bit writes from
  4349                                  	;	 non word aligned reg #
  4350                                  
  4351 000018FD 6653                    	push	ebx
  4352 000018FF 6651                    	push	ecx
  4353 00001901 6689C3                          mov     ebx, eax		; save eax, edx
  4354 00001904 6689D1                          mov     ecx, edx
  4355 00001907 6625FFFFFF3F            	and     eax, NOT_PCI32_PCI16	; clear out data size request
  4356 0000190D 660D00000080                    or      eax, BIT31		; make a PCI access request
  4357 00001913 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4358                                  
  4359 00001915 BAF80C                          mov     dx, PCI_INDEX_PORT
  4360 00001918 66EF                    	out	dx, eax			; write PCI selector
  4361                                  		
  4362 0000191A BAFC0C                          mov     dx, PCI_DATA_PORT
  4363 0000191D 88D8                            mov     al, bl
  4364 0000191F 2403                            and     al, 3			; figure out which port to
  4365 00001921 00C2                            add     dl, al			; write to
  4366                                  
  4367 00001923 66F7C3000000C0          	test    ebx, PCI32+PCI16
  4368 0000192A 7505                            jnz     short _pregw0
  4369                                  	
  4370 0000192C 88C8                    	mov	al, cl 			; put data into al
  4371 0000192E EE                      	out	dx, al
  4372                                  	
  4373 0000192F EB13                    	jmp	short _pregw2
  4374                                  _pregw0:
  4375 00001931 66F7C300000080          	test    ebx, PCI32
  4376 00001938 7505                            jnz     short _pregw1
  4377                                  	
  4378 0000193A 89C8                    	mov	ax, cx			; put data into ax
  4379 0000193C EF                      	out	dx, ax
  4380                                  
  4381 0000193D EB05                    	jmp	short _pregw2
  4382                                  _pregw1:
  4383 0000193F 6689C8                  	mov	eax, ecx		; put data into eax
  4384 00001942 66EF                    	out	dx, eax
  4385                                  _pregw2:
  4386 00001944 6689D8                          mov     eax, ebx		; restore eax
  4387 00001947 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; clear out data size request
  4388 0000194D 6689CA                          mov     edx, ecx		; restore dx
  4389 00001950 6659                    	pop	ecx
  4390 00001952 665B                    	pop	ebx
  4391 00001954 C3                      	retn
  4392                                  
  4393                                  pciRegWrite8:
  4394 00001955 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 8 bit write size
  4395 0000195B EBA0                            jmp	short pciRegWrite	; call generic PCI access
  4396                                  
  4397                                  pciRegWrite16:
  4398 0000195D 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 16 bit write size
  4399 00001963 660D00000040                    or      eax, PCI16		; call generic PCI access
  4400 00001969 EB92                            jmp	short pciRegWrite
  4401                                  
  4402                                  pciRegWrite32:
  4403 0000196B 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 32 bit write size
  4404 00001971 660D00000080                    or      eax, PCI32		; call generic PCI access
  4405 00001977 EB84                            jmp	pciRegWrite
  4406                                  
  4407                                  ; --------------------------------------------------------
  4408                                  ; 19/05/2024 - (playwav4.asm) ac97_vra.asm
  4409                                  ; --------------------------------------------------------
  4410                                  
  4411                                  	; 13/11/2023
  4412                                  
  4413                                  ;VRA:	db 1
  4414                                  
  4415                                  codecConfig:
  4416                                  	; 30/05/2024
  4417                                  	; 19/05/2024
  4418                                  	; 19/11/2023
  4419                                  	; 15/11/2023
  4420                                  	; 04/11/2023
  4421                                  	; 17/02/2017 
  4422                                  	; 07/11/2016 (Erdogan Tan)
  4423                                  
  4424                                  	;AC97_EA_VRA equ 1
  4425                                  	AC97_EA_VRA equ BIT0
  4426                                  
  4427                                  	; 04/11/2023
  4428                                  init_ac97_controller:
  4429 00001979 66A1[8C1F]              	mov	eax, [bus_dev_fn]
  4430 0000197D B004                    	mov	al, PCI_CMD_REG
  4431 0000197F E85FFF                  	call	pciRegRead16		; read PCI command register
  4432 00001982 80CA05                  	or      dl, IO_ENA+BM_ENA	; enable IO and bus master
  4433 00001985 E8D5FF                  	call	pciRegWrite16
  4434                                  
  4435                                  	;call	delay_100ms
  4436                                  
  4437                                  	; 19/05/2024
  4438                                  	; ('PLAYMOD3.ASM', Erdogan Tan, 18/05/2024)
  4439                                  
  4440                                  init_ac97_codec:
  4441                                  	; 18/11/2023
  4442 00001988 BD2800                  	mov	bp, 40
  4443                                  	; 29/05/2024
  4444                                  	;mov	bp, 1000
  4445                                  _initc_1:
  4446                                  	; 30/05/2024
  4447 0000198B BA3000                  	mov	dx, GLOB_STS_REG ; 30h
  4448 0000198E 0316[841F]              	add	dx, [NABMBAR]
  4449 00001992 66ED                    	in	eax, dx
  4450                                  
  4451                                  	; 19/05/2024
  4452 00001994 E8DD01                  	call	delay1_4ms
  4453                                  
  4454 00001997 6683F8FF                	cmp	eax, 0FFFFFFFFh ; -1
  4455 0000199B 7508                    	jne	short _initc_3
  4456                                  _initc_2:
  4457 0000199D 4D                      	dec	bp
  4458 0000199E 741E                    	jz	short _ac97_codec_ready
  4459                                  
  4460 000019A0 E8C601                  	call	delay_100ms
  4461 000019A3 EBE6                    	jmp	short _initc_1
  4462                                  _initc_3:
  4463 000019A5 66A900030010            	test	eax, CTRL_ST_CREADY
  4464 000019AB 7511                    	jnz	short _ac97_codec_ready
  4465                                  
  4466                                  	; 30/05/2024
  4467 000019AD 803E[1A1C]01            	cmp	byte [reset], 1
  4468 000019B2 73E9                    	jnb	short _initc_2
  4469                                  
  4470 000019B4 E81801                  	call	reset_ac97_codec
  4471                                  	; 30/05/2024
  4472 000019B7 C606[1A1C]01            	mov	byte [reset], 1
  4473                                  	; 19/05/2024
  4474 000019BC EBDF                    	jmp	short _initc_2
  4475                                  
  4476                                  _ac97_codec_ready:
  4477 000019BE 8B16[821F]              	mov	dx, [NAMBAR]
  4478                                  	;add	dx, 0 ; ac_reg_0 ; reset register
  4479 000019C2 EF                      	out	dx, ax
  4480                                  	
  4481 000019C3 E8A301                  	call	delay_100ms
  4482                                  
  4483                                  	; 19/11/2023
  4484 000019C6 09ED                    	or	bp, bp
  4485 000019C8 7525                    	jnz	short _ac97_codec_init_ok
  4486                                  
  4487 000019CA 31C0                    	xor	ax, ax ; 0
  4488 000019CC 8B16[821F]              	mov	dx, [NAMBAR]
  4489 000019D0 83C226                  	add	dx, CODEC_REG_POWERDOWN
  4490 000019D3 EF                      	out	dx, ax
  4491                                  
  4492                                  	; 30/05/2024
  4493 000019D4 E89D01                  	call	delay1_4ms
  4494                                  
  4495                                  	; 19/11/2023
  4496                                  	; wait for 1 second
  4497                                  	; 19/05/2024
  4498 000019D7 B9E803                  	mov	cx, 1000 ; 1000*4*0.25ms = 1s
  4499                                  	;;mov	cx, 10
  4500                                  	; 30/05/2024
  4501                                  	;mov	cx, 40
  4502                                  _ac97_codec_rloop:
  4503                                  	;call	delay_100ms
  4504                                  
  4505                                  	; 30/05/2024
  4506 000019DA 8B16[821F]              	mov	dx, [NAMBAR]
  4507 000019DE 83C226                  	add	dx, CODEC_REG_POWERDOWN
  4508 000019E1 ED                      	in	ax, dx
  4509                                  
  4510 000019E2 E88F01                  	call	delay1_4ms
  4511                                  	
  4512 000019E5 83E00F                  	and	ax, 0Fh
  4513 000019E8 3C0F                    	cmp	al, 0Fh
  4514 000019EA 7403                    	je	short _ac97_codec_init_ok
  4515 000019EC E2EC                    	loop	_ac97_codec_rloop 
  4516                                  
  4517                                  init_ac97_codec_err1:
  4518                                  	;stc	; cf = 1 ; 19/05/2024
  4519                                  init_ac97_codec_err2:
  4520 000019EE C3                      	retn
  4521                                  
  4522                                  _ac97_codec_init_ok:
  4523 000019EF E89600                  	call 	reset_ac97_controller
  4524                                  
  4525                                  	; 30/05/2024
  4526                                  	; 19/05/2024
  4527                                  	;call	delay_100ms
  4528                                  
  4529                                  	; 30/05/2024
  4530 000019F2 E87F01                  	call	delay1_4ms
  4531 000019F5 E87C01                  	call	delay1_4ms
  4532 000019F8 E87901                  	call	delay1_4ms
  4533 000019FB E87601                  	call	delay1_4ms
  4534                                  
  4535                                  setup_ac97_codec:
  4536                                  	; 12/11/2023
  4537 000019FE 813E[941F]80BB          	cmp	word [sample_rate], 48000
  4538 00001A04 7453                    	je	short skip_rate
  4539                                  	
  4540                                  	; 30/05/2024
  4541                                  	; 19/05/2024
  4542                                  	;call	delay1_4ms
  4543                                  
  4544                                  	; 30/05/2024
  4545                                  	;cmp	byte [VRA], 0
  4546                                  	;jna	short skip_rate
  4547                                  
  4548                                  	; 11/11/2023
  4549 00001A06 8B16[821F]              	mov	dx, [NAMBAR]
  4550 00001A0A 83C22A                  	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4551 00001A0D ED                      	in	ax, dx
  4552                                  
  4553                                  	; 30/05/2024
  4554                                  	; 19/05/2024
  4555 00001A0E E86301                  	call	delay1_4ms
  4556                                  	
  4557                                  	;and	al, ~BIT1 ; Clear DRA
  4558                                  	;;;
  4559                                  	; 30/05/2024
  4560 00001A11 24FC                    	and	al, ~(BIT1+BIT0) ; Clear DRA+VRA
  4561 00001A13 EF                      	out	dx, ax
  4562                                  
  4563 00001A14 E83801                  	call	check_vra
  4564                                  
  4565 00001A17 803E[0E1F]00            	cmp	byte [VRA], 0
  4566 00001A1C 763B                    	jna	short skip_rate
  4567                                  
  4568 00001A1E 8B16[821F]              	mov	dx, [NAMBAR]
  4569 00001A22 83C22A                  	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4570 00001A25 ED                      	in	ax, dx
  4571                                  	;and	al, ~BIT1 ; Clear DRA
  4572                                  	;;;
  4573                                  
  4574 00001A26 0C01                    	or	al, AC97_EA_VRA ; 1 ; 04/11/2023
  4575                                  	; 30/05/2024
  4576 00001A28 8B16[821F]              	mov	dx, [NAMBAR]
  4577 00001A2C 83C22A                  	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4578                                  
  4579 00001A2F EF                      	out	dx, ax			; Enable variable rate audio
  4580                                  
  4581 00001A30 B90A00                  	mov	cx, 10
  4582                                  check_vra_loop:
  4583 00001A33 E83301                  	call	delay_100ms
  4584                                  	; 30/05/2024
  4585                                  	;call	delay1_4ms
  4586                                  
  4587                                  	; 30/05/2024
  4588 00001A36 8B16[821F]              	mov	dx, [NAMBAR]
  4589 00001A3A 83C22A                  	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4590                                  	; 11/11/2023
  4591 00001A3D ED                      	in	ax, dx
  4592                                  	
  4593 00001A3E A801                    	test	al, AC97_EA_VRA ; 1
  4594 00001A40 7509                    	jnz	short set_rate
  4595                                  
  4596                                  	; 11/11/2023
  4597 00001A42 E2EF                    	loop	check_vra_loop
  4598                                  
  4599                                  ;vra_not_supported:	; 19/05/2024
  4600 00001A44 C606[0E1F]00            	mov	byte [VRA], 0
  4601 00001A49 EB0E                    	jmp	short skip_rate
  4602                                  
  4603                                  set_rate:
  4604 00001A4B A1[941F]                	mov	ax, [sample_rate] ; 17/02/2017 (Erdogan Tan)
  4605                                  
  4606 00001A4E 8B16[821F]              	mov    	dx, [NAMBAR]               	
  4607 00001A52 83C22C                  	add    	dx, CODEC_PCM_FRONT_DACRATE_REG	; 2Ch  	  
  4608 00001A55 EF                      	out	dx, ax 			; PCM Front/Center Output Sample Rate
  4609                                  
  4610                                  	;call	delay_100ms
  4611                                  	; 30/05/2024
  4612 00001A56 E81B01                  	call	delay1_4ms
  4613                                  
  4614                                  	; 12/11/2023
  4615                                  skip_rate:
  4616 00001A59 B80202                  	mov	ax, 0202h
  4617 00001A5C 8B16[821F]                	mov	dx, [NAMBAR]
  4618 00001A60 83C202                    	add	dx, CODEC_MASTER_VOL_REG	;02h 
  4619 00001A63 EF                      	out	dx, ax
  4620                                  
  4621                                  	; 11/11/2023
  4622 00001A64 E80D01                  	call	delay1_4ms
  4623 00001A67 E80A01                  	call	delay1_4ms
  4624 00001A6A E80701                  	call	delay1_4ms
  4625 00001A6D E80401                  	call	delay1_4ms
  4626                                  
  4627 00001A70 B80202                  	mov	ax, 0202h
  4628 00001A73 8B16[821F]                	mov	dx, [NAMBAR]
  4629 00001A77 83C218                    	add	dx, CODEC_PCM_OUT_REG		;18h 
  4630 00001A7A EF                        	out	dx, ax
  4631                                  	
  4632                                  	; 11/11/2023
  4633 00001A7B E8F600                  	call	delay1_4ms
  4634 00001A7E E8F300                  	call	delay1_4ms
  4635 00001A81 E8F000                  	call	delay1_4ms
  4636 00001A84 E8ED00                  	call	delay1_4ms
  4637                                  
  4638                                  	; 30/05/2024
  4639                                  	; 19/05/2024
  4640                                  	;clc
  4641                                  
  4642 00001A87 C3                              retn
  4643                                  
  4644                                  reset_ac97_controller:
  4645                                  	; 19/05/2024
  4646                                  	; 11/11/2023
  4647                                  	; 10/06/2017
  4648                                  	; 29/05/2017
  4649                                  	; 28/05/2017
  4650                                  	; reset AC97 audio controller registers
  4651 00001A88 31C0                    	xor     ax, ax
  4652 00001A8A BA0B00                          mov	dx, PI_CR_REG
  4653 00001A8D 0316[841F]              	add	dx, [NABMBAR]
  4654 00001A91 EE                      	out     dx, al
  4655                                  
  4656                                  	; 19/05/2024
  4657 00001A92 E8DF00                  	call	delay1_4ms
  4658                                  
  4659 00001A95 BA1B00                          mov     dx, PO_CR_REG
  4660 00001A98 0316[841F]              	add	dx, [NABMBAR]
  4661 00001A9C EE                      	out     dx, al
  4662                                  
  4663                                  	; 19/05/2024
  4664 00001A9D E8D400                  	call	delay1_4ms
  4665                                  
  4666 00001AA0 BA2B00                          mov     dx, MC_CR_REG
  4667 00001AA3 0316[841F]              	add	dx, [NABMBAR]
  4668 00001AA7 EE                      	out     dx, al
  4669                                  
  4670                                  	; 19/05/2024
  4671 00001AA8 E8C900                  	call	delay1_4ms
  4672                                  
  4673 00001AAB B002                            mov     al, RR
  4674 00001AAD BA0B00                          mov     dx, PI_CR_REG
  4675 00001AB0 0316[841F]              	add	dx, [NABMBAR]
  4676 00001AB4 EE                      	out     dx, al
  4677                                  
  4678                                  	; 19/05/2024
  4679 00001AB5 E8BC00                  	call	delay1_4ms
  4680                                  
  4681 00001AB8 BA1B00                          mov     dx, PO_CR_REG
  4682 00001ABB 0316[841F]              	add	dx, [NABMBAR]
  4683 00001ABF EE                      	out     dx, al
  4684                                  
  4685                                  	; 19/05/2024
  4686 00001AC0 E8B100                  	call	delay1_4ms
  4687                                  
  4688 00001AC3 BA2B00                          mov     dx, MC_CR_REG
  4689 00001AC6 0316[841F]              	add	dx, [NABMBAR]
  4690 00001ACA EE                      	out     dx, al
  4691                                  
  4692                                  	; 19/05/2024
  4693 00001ACB E8A600                  	call	delay1_4ms
  4694                                  
  4695 00001ACE C3                      	retn
  4696                                  
  4697                                  reset_ac97_codec:
  4698                                  	; 11/11/2023
  4699                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  4700 00001ACF BA2C00                  	mov	dx, GLOB_CNT_REG ; 2Ch
  4701 00001AD2 0316[841F]              	add	dx, [NABMBAR]
  4702 00001AD6 66ED                    	in	eax, dx
  4703                                  
  4704                                  	;test	eax, 2
  4705                                  	; 06/08/2022
  4706 00001AD8 A802                    	test	al, 2
  4707 00001ADA 7405                    	jz	short _r_ac97codec_cold	
  4708                                  
  4709 00001ADC E80E00                  	call	warm_ac97codec_reset
  4710 00001ADF 7306                    	jnc	short _r_ac97codec_ok
  4711                                  _r_ac97codec_cold:
  4712 00001AE1 E83400                          call    cold_ac97codec_reset
  4713 00001AE4 7301                            jnc     short _r_ac97codec_ok
  4714                                  	
  4715                                  	; 16/04/2017
  4716                                          ;xor	eax, eax	; timeout error
  4717                                         	;stc
  4718 00001AE6 C3                      	retn
  4719                                  
  4720                                  _r_ac97codec_ok:
  4721 00001AE7 6631C0                          xor     eax, eax
  4722                                          ;mov	al, VIA_ACLINK_C00_READY ; 1
  4723 00001AEA FEC0                            inc	al
  4724 00001AEC C3                      	retn
  4725                                  
  4726                                  warm_ac97codec_reset:
  4727                                  	; 11/11/2023
  4728                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  4729                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  4730 00001AED 66B806000000            	mov	eax, 6
  4731 00001AF3 BA2C00                  	mov	dx, GLOB_CNT_REG ; 2Ch
  4732 00001AF6 0316[841F]              	add	dx, [NABMBAR]
  4733 00001AFA 66EF                    	out	dx, eax
  4734                                  
  4735 00001AFC B90A00                  	mov	cx, 10	; total 1s
  4736                                  _warm_ac97c_rst_wait:
  4737 00001AFF E86700                  	call	delay_100ms
  4738                                  
  4739 00001B02 BA3000                  	mov	dx, GLOB_STS_REG ; 30h
  4740 00001B05 0316[841F]              	add	dx, [NABMBAR]
  4741 00001B09 66ED                    	in	eax, dx
  4742                                  
  4743 00001B0B 66A900030010            	test	eax, CTRL_ST_CREADY
  4744 00001B11 7504                    	jnz	short _warm_ac97c_rst_ok
  4745                                  
  4746 00001B13 49                              dec     cx
  4747 00001B14 75E9                            jnz     short _warm_ac97c_rst_wait
  4748                                  
  4749                                  _warm_ac97c_rst_fail:
  4750 00001B16 F9                              stc
  4751                                  _warm_ac97c_rst_ok:
  4752 00001B17 C3                      	retn
  4753                                  
  4754                                  cold_ac97codec_reset:
  4755                                  	; 11/11/2023
  4756                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  4757                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  4758 00001B18 66B802000000                    mov	eax, 2
  4759 00001B1E BA2C00                  	mov	dx, GLOB_CNT_REG ; 2Ch
  4760 00001B21 0316[841F]              	add	dx, [NABMBAR]
  4761 00001B25 66EF                    	out	dx, eax
  4762                                  
  4763 00001B27 E83F00                  	call	delay_100ms 	; wait 100 ms
  4764 00001B2A E83C00                  	call	delay_100ms 	; wait 100 ms
  4765 00001B2D E83900                  	call	delay_100ms 	; wait 100 ms
  4766 00001B30 E83600                  	call	delay_100ms 	; wait 100 ms
  4767                                  
  4768 00001B33 B91000                  	mov	cx, 16	; total 20*100 ms = 2s
  4769                                  
  4770                                  _cold_ac97c_rst_wait:
  4771 00001B36 BA3000                  	mov	dx, GLOB_STS_REG ; 30h
  4772 00001B39 0316[841F]              	add	dx, [NABMBAR]
  4773 00001B3D 66ED                    	in	eax, dx
  4774                                  
  4775 00001B3F 66A900030010            	test	eax, CTRL_ST_CREADY
  4776 00001B45 7507                    	jnz	short _cold_ac97c_rst_ok
  4777                                  
  4778 00001B47 E81F00                  	call	delay_100ms
  4779                                  
  4780 00001B4A 49                              dec     cx
  4781 00001B4B 75E9                            jnz     short _cold_ac97c_rst_wait
  4782                                  
  4783                                  _cold_ac97c_rst_fail:
  4784 00001B4D F9                              stc
  4785                                  _cold_ac97c_rst_ok:
  4786 00001B4E C3                      	retn
  4787                                  
  4788                                  ; 30/05/2024
  4789                                  %if 1
  4790                                  check_vra:
  4791                                  	; 30/05/2024
  4792 00001B4F C606[0E1F]01            	mov	byte [VRA], 1
  4793                                  
  4794                                  	; 29/05/2024 - audio.s (TRDOS 386 Kernel) - 27/05/2024
  4795                                  	; 24/05/2024
  4796                                  	; 23/05/2024
  4797 00001B54 8B16[821F]              	mov	dx, [NAMBAR]
  4798 00001B58 83C228                  	add	dx, CODEC_EXT_AUDIO_REG	; 28h
  4799 00001B5B ED                      	in	ax, dx
  4800                                  
  4801                                  	; 30/05/2024
  4802                                  	; 23/05/2024
  4803 00001B5C E81500                  	call	delay1_4ms
  4804                                  
  4805                                  	; 30/05/2024
  4806 00001B5F A801                    	test	al, BIT0
  4807                                  	;test	al, 1 ; BIT0 ; Variable Rate Audio bit
  4808 00001B61 7505                    	jnz	short check_vra_ok
  4809                                  
  4810                                  vra_not_supported:
  4811                                  	; 13/11/2023
  4812 00001B63 C606[0E1F]00            	mov	byte [VRA], 0
  4813                                  check_vra_ok:
  4814 00001B68 C3                      	retn
  4815                                  %endif
  4816                                  
  4817                                  ; --------------------------------------------------------
  4818                                  
  4819                                  PORTB		EQU 061h
  4820                                  REFRESH_STATUS	EQU 010h	; Refresh signal status
  4821                                  
  4822                                  delay_100ms:
  4823                                  	; 11/11/2023
  4824                                  	; 29/05/2017
  4825                                  	; 24/03/2017 ('codec.asm')
  4826                                  	; wait 100 ms
  4827 00001B69 51                      	push	cx
  4828 00001B6A B99001                  	mov	cx, 400  ; 400*0.25ms
  4829                                  _delay_x_ms:
  4830 00001B6D E80400                  	call	delay1_4ms
  4831 00001B70 E2FB                            loop	_delay_x_ms
  4832 00001B72 59                      	pop	cx
  4833 00001B73 C3                      	retn
  4834                                  
  4835                                  delay1_4ms:
  4836 00001B74 50                              push    ax 
  4837 00001B75 51                              push    cx
  4838 00001B76 B91000                          mov     cx, 16			; close enough.
  4839 00001B79 E461                    	in	al,PORTB
  4840 00001B7B 2410                    	and	al,REFRESH_STATUS
  4841 00001B7D 88C4                    	mov	ah,al			; Start toggle state
  4842 00001B7F 09C9                    	or	cx, cx
  4843 00001B81 7401                    	jz	short _d4ms1
  4844 00001B83 41                      	inc	cx			; Throwaway first toggle
  4845                                  _d4ms1:	
  4846 00001B84 E461                    	in	al,PORTB		; Read system control port
  4847 00001B86 2410                    	and	al,REFRESH_STATUS	; Refresh toggles 15.085 microseconds
  4848 00001B88 38C4                    	cmp	ah,al
  4849 00001B8A 74F8                    	je	short _d4ms1		; Wait for state change
  4850                                  
  4851 00001B8C 88C4                    	mov	ah,al			; Update with new state
  4852 00001B8E 49                      	dec	cx
  4853 00001B8F 75F3                    	jnz	short _d4ms1
  4854                                  
  4855                                  	; 30/05/2024
  4856 00001B91 F8                      	clc
  4857                                  
  4858 00001B92 59                              pop     cx
  4859 00001B93 58                              pop     ax
  4860 00001B94 C3                              retn
  4861                                  
  4862                                  ; --------------------------------------------------------
  4863                                  ; 19/05/2024 - (playwav4.asm) ich_wav4.asm
  4864                                  ; --------------------------------------------------------
  4865                                  
  4866                                  check4keyboardstop:
  4867                                  	; 19/05/2024
  4868                                  	; 08/11/2023
  4869                                  	; 04/11/2023
  4870 00001B95 B401                    	mov	ah, 1
  4871 00001B97 CD16                    	int	16h
  4872                                  	;clc
  4873 00001B99 7439                    	jz	short _cksr
  4874                                  
  4875 00001B9B 30E4                    	xor	ah, ah
  4876 00001B9D CD16                    	int	16h
  4877                                  
  4878                                  	;;;
  4879                                  	; 19/05/2024 (change PCM out volume)
  4880 00001B9F 3C2B                    	cmp	al, '+'
  4881 00001BA1 750B                    	jne	short p_1
  4882                                  	
  4883 00001BA3 A0[151C]                	mov	al, [volume]
  4884 00001BA6 3C00                    	cmp	al, 0
  4885 00001BA8 762B                    	jna	short p_3
  4886 00001BAA FEC8                    	dec	al
  4887 00001BAC EB0D                    	jmp	short p_2
  4888                                  p_1:
  4889 00001BAE 3C2D                    	cmp	al, '-'
  4890 00001BB0 7524                    	jne	short p_4
  4891                                  
  4892 00001BB2 A0[151C]                	mov	al, [volume]
  4893 00001BB5 3C1F                    	cmp	al, 31
  4894 00001BB7 731C                    	jnb	short p_3
  4895 00001BB9 FEC0                    	inc	al
  4896                                  p_2:
  4897 00001BBB A2[151C]                	mov	[volume], al
  4898 00001BBE 88C4                    	mov	ah, al
  4899 00001BC0 8B16[821F]              	mov     dx, [NAMBAR]
  4900                                    	;add    dx, CODEC_MASTER_VOL_REG
  4901 00001BC4 83C218                  	add	dx, CODEC_PCM_OUT_REG
  4902 00001BC7 EF                      	out     dx, ax
  4903                                  
  4904 00001BC8 E8A9FF                  	call    delay1_4ms
  4905 00001BCB E8A6FF                          call    delay1_4ms
  4906 00001BCE E8A3FF                          call    delay1_4ms
  4907 00001BD1 E8A0FF                          call    delay1_4ms
  4908                                  _cksr:		; 19/05/2024
  4909 00001BD4 F8                      	clc
  4910                                  p_3:
  4911 00001BD5 C3                      	retn
  4912                                  p_4:
  4913                                  	;;;
  4914                                  ;_cskr:	
  4915 00001BD6 F9                      	stc
  4916 00001BD7 C3                      	retn
  4917                                  
  4918                                  ; returns AL = current index value
  4919                                  getCurrentIndex:
  4920                                  	; 08/11/2023
  4921                                  	;push	dx
  4922 00001BD8 8B16[841F]              	mov	dx, [NABMBAR]
  4923 00001BDC 83C214                  	add	dx, PO_CIV_REG
  4924 00001BDF EC                      	in	al, dx
  4925                                  	;pop	dx
  4926                                  uLVI2:	;	06/11/2023
  4927 00001BE0 C3                      	retn
  4928                                  
  4929                                  updateLVI:
  4930                                  	; 06/11/2023
  4931 00001BE1 8B16[841F]              	mov	dx, [NABMBAR]
  4932 00001BE5 83C214                  	add	dx, PO_CIV_REG
  4933                                  	; (Current Index Value and Last Valid Index value)
  4934 00001BE8 ED                      	in	ax, dx
  4935                                  
  4936 00001BE9 38E0                    	cmp	al, ah ; is current index = last index ?
  4937 00001BEB 75F3                    	jne	short uLVI2
  4938                                  
  4939                                  	; 08/11/2023	
  4940 00001BED E8E8FF                  	call	getCurrentIndex
  4941                                   
  4942 00001BF0 F606[2E1F]01            	test	byte [flags], ENDOFFILE
  4943                                  	;jnz	short uLVI1
  4944 00001BF5 7411                    	jz	short uLVI0  ; 08/11/2023
  4945                                  
  4946                                  	; 08/11/2023
  4947 00001BF7 50                      	push	ax
  4948 00001BF8 8B16[841F]              	mov	dx, [NABMBAR]
  4949 00001BFC 83C216                  	add	dx, PO_SR_REG  ; PCM out status register
  4950 00001BFF ED                      	in	ax, dx
  4951                                  
  4952 00001C00 A803                    	test	al, 3 ; bit 1 = Current Equals Last Valid (CELV)
  4953                                  		      ; (has been processed)
  4954                                  		      ; bit 0 = 1 -> DMA Controller Halted (DCH)
  4955 00001C02 58                      	pop	ax
  4956 00001C03 7407                    	jz	short uLVI1
  4957                                  uLVI3:
  4958 00001C05 31C0                    	xor	ax, ax
  4959                                  	; zf = 1
  4960 00001C07 C3                      	retn
  4961                                  uLVI0:
  4962                                          ; not at the end of the file yet.
  4963 00001C08 FEC8                    	dec	al
  4964 00001C0A 241F                    	and	al, 1Fh
  4965                                  uLVI1:
  4966                                  	;call	setLastValidIndex
  4967                                  ;uLVI2:
  4968                                  	;retn
  4969                                  
  4970                                  ;input AL = index # to stop on
  4971                                  setLastValidIndex:
  4972                                  	; 08/11/2023
  4973                                  	;push	dx
  4974 00001C0C 8B16[841F]              	mov	dx, [NABMBAR]
  4975 00001C10 83C215                  	add	dx, PO_LVI_REG
  4976 00001C13 EE                              out     dx, al
  4977                                  	;pop	dx
  4978 00001C14 C3                      	retn
  4979                                  
  4980                                  ; 29/05/2024
  4981                                  ; 19/05/2024
  4982 00001C15 02                      volume: db	02h
  4983                                  	
  4984                                  ; --------------------------------------------------------
  4985                                  
  4986                                  ; DATA
  4987                                  
  4988                                  FileHandle:	
  4989 00001C16 FFFFFFFF                	dd	-1
  4990                                  
  4991                                  ; 30/05/2024
  4992 00001C1A 00                      reset:	db	0
  4993                                  
  4994                                  Credits:
  4995 00001C1B 54696E792057415620-     	db	'Tiny WAV Player for Retro DOS by Erdogan Tan. '
  4995 00001C24 506C6179657220666F-
  4995 00001C2D 7220526574726F2044-
  4995 00001C36 4F5320627920457264-
  4995 00001C3F 6F67616E2054616E2E-
  4995 00001C48 20                 
  4996 00001C49 4D617920323032342E-     	db	'May 2024.',10,13,0
  4996 00001C52 0A0D00             
  4997 00001C55 33302F30352F323032-     	db	'30/05/2024', 10,13,0
  4997 00001C5E 340A0D00           
  4998                                  
  4999                                  msgAudioCardInfo:
  5000 00001C62 666F7220496E74656C-     	db 	'for Intel AC97 (ICH) Audio Controller.', 10,13,0
  5000 00001C6B 204143393720284943-
  5000 00001C74 482920417564696F20-
  5000 00001C7D 436F6E74726F6C6C65-
  5000 00001C86 722E0A0D00         
  5001                                  
  5002                                  msg_usage:
  5003 00001C8B 75736167653A20706C-     	db	'usage: playwav6 filename.wav',10,13,0 ; 30/05/2024
  5003 00001C94 617977617636206669-
  5003 00001C9D 6C656E616D652E7761-
  5003 00001CA6 760A0D00           
  5004                                  
  5005                                  noDevMsg:
  5006 00001CAA 4572726F723A20556E-     	db	'Error: Unable to find AC97 audio device!'
  5006 00001CB3 61626C6520746F2066-
  5006 00001CBC 696E64204143393720-
  5006 00001CC5 617564696F20646576-
  5006 00001CCE 69636521           
  5007 00001CD2 0A0D00                  	db	10,13,0
  5008                                  
  5009                                  noFileErrMsg:
  5010 00001CD5 4572726F723A206669-     	db	'Error: file not found.',10,13,0
  5010 00001CDE 6C65206E6F7420666F-
  5010 00001CE7 756E642E0A0D00     
  5011                                  
  5012                                  msg_error:	; 30/05/2024
  5013                                  
  5014                                  ; 29/05/2024
  5015                                  ; 11/11/2023
  5016                                  msg_init_err:
  5017 00001CEE 0D0A                    	db	CR, LF
  5018 00001CF0 4143393720436F6E74-     	db	"AC97 Controller/Codec initialization error !"
  5018 00001CF9 726F6C6C65722F436F-
  5018 00001D02 64656320696E697469-
  5018 00001D0B 616C697A6174696F6E-
  5018 00001D14 206572726F722021   
  5019 00001D1C 0D0A24                  	db	CR, LF, "$"
  5020                                  
  5021                                  ; 25/11/2023
  5022                                  msg_no_vra:
  5023 00001D1F 0A0D                    	db	10,13
  5024 00001D21 4E6F20565241207375-     	db	"No VRA support ! Only 48 kHZ sample rate supported !"
  5024 00001D2A 70706F72742021204F-
  5024 00001D33 6E6C79203438206B48-
  5024 00001D3C 5A2073616D706C6520-
  5024 00001D45 726174652073757070-
  5024 00001D4E 6F727465642021     
  5025 00001D55 0A0D00                  	db	10,13,0
  5026                                  
  5027                                  ; 29/05/2024 (TRDOS 386)
  5028                                  ; 17/02/2017
  5029                                  ; Valid ICH device IDs
  5030                                  
  5031                                  valid_ids:
  5032 00001D58 86801524                dd	(ICH_DID << 16) + INTEL_VID  	 ; 8086h:2415h
  5033 00001D5C 86802524                dd	(ICH0_DID << 16) + INTEL_VID 	 ; 8086h:2425h
  5034 00001D60 86804524                dd	(ICH2_DID << 16) + INTEL_VID 	 ; 8086h:2445h
  5035 00001D64 86808524                dd	(ICH3_DID << 16) + INTEL_VID 	 ; 8086h:2485h
  5036 00001D68 8680C524                dd	(ICH4_DID << 16) + INTEL_VID 	 ; 8086h:24C5h
  5037 00001D6C 8680D524                dd	(ICH5_DID << 16) + INTEL_VID 	 ; 8086h:24D5h
  5038 00001D70 86806E26                dd	(ICH6_DID << 16) + INTEL_VID 	 ; 8086h:266Eh
  5039 00001D74 8680A625                dd	(ESB6300_DID << 16) + INTEL_VID  ; 8086h:25A6h
  5040 00001D78 86809826                dd	(ESB631X_DID << 16) + INTEL_VID  ; 8086h:2698h
  5041 00001D7C 8680DE27                dd	(ICH7_DID << 16) + INTEL_VID 	 ; 8086h:27DEh
  5042                                  ; 03/11/2023 - Erdogan Tan
  5043 00001D80 86809571                dd	(MX82440_DID << 16) + INTEL_VID  ; 8086h:7195h
  5044 00001D84 39101270                dd	(SI7012_DID << 16)  + SIS_VID	 ; 1039h:7012h
  5045 00001D88 DE10B101                dd 	(NFORCE_DID << 16)  + NVIDIA_VID ; 10DEh:01B1h
  5046 00001D8C DE106A00                dd 	(NFORCE2_DID << 16) + NVIDIA_VID ; 10DEh:006Ah
  5047 00001D90 22106D74                dd 	(AMD8111_DID << 16) + AMD_VID 	 ; 1022h:746Dh
  5048 00001D94 22104574                dd 	(AMD768_DID << 16)  + AMD_VID 	 ; 1022h:7445h
  5049 00001D98 DE105900                dd 	(CK804_DID << 16) + NVIDIA_VID	 ; 10DEh:0059h
  5050 00001D9C DE103A00                dd 	(MCP04_DID << 16) + NVIDIA_VID	 ; 10DEh:003Ah
  5051 00001DA0 DE108A00                dd 	(CK8_DID << 16) + NVIDIA_VID	 ; 1022h:008Ah
  5052 00001DA4 DE10DA00                dd 	(NFORCE3_DID << 16) + NVIDIA_VID ; 10DEh:00DAh
  5053 00001DA8 DE10EA00                dd 	(CK8S_DID << 16) + NVIDIA_VID	 ; 10DEh:00EAh
  5054                                  
  5055                                  valid_id_count:	equ ($ - valid_ids)>>2 ; 05/11/2023
  5056                                  
  5057 00001DAC 0D0A5741562046696C-     msgWavFileName:	db 0Dh, 0Ah, "WAV File Name: ",0
  5057 00001DB5 65204E616D653A2000 
  5058 00001DBE 0D0A53616D706C6520-     msgSampleRate:	db 0Dh, 0Ah, "Sample Rate: "
  5058 00001DC7 526174653A20       
  5059 00001DCD 303030303020487A2C-     msgHertz:	db "00000 Hz, ", 0 
  5059 00001DD6 2000               
  5060 00001DD8 3820626974732C2000      msg8Bits:	db "8 bits, ", 0 
  5061                                  ;msgMono:	db "Mono", 0Dh, 0Ah, 0
  5062 00001DE1 4D6F6E6F00              msgMono:	db "Mono", 0
  5063 00001DE6 313620626974732C20-     msg16Bits:	db "16 bits, ", 0 
  5063 00001DEF 00                 
  5064                                  ;msgStereo:	db "Stereo"
  5065 00001DF0 53746572656F00          msgStereo:	db "Stereo",0
  5066 00001DF7 0D0A00                  nextline:	db 0Dh, 0Ah, 0
  5067                                  
  5068                                  ; 03/06/2017
  5069 00001DFA 303132333435363738-     hex_chars	db "0123456789ABCDEF", 0
  5069 00001E03 3941424344454600   
  5070 00001E0B 0D0A                    msgAC97Info	db 0Dh, 0Ah
  5071 00001E0D 414339372041756469-     		db "AC97 Audio Controller & Codec Info", 0Dh, 0Ah 
  5071 00001E16 6F20436F6E74726F6C-
  5071 00001E1F 6C6572202620436F64-
  5071 00001E28 656320496E666F0D0A 
  5072 00001E31 56656E646F72204944-     		db "Vendor ID: "
  5072 00001E3A 3A20               
  5073 00001E3C 303030306820446576-     msgVendorId	db "0000h Device ID: "
  5073 00001E45 6963652049443A20   
  5074 00001E4D 30303030680D0A          msgDevId	db "0000h", 0Dh, 0Ah
  5075 00001E54 4275733A20              		db "Bus: "
  5076 00001E59 303068204465766963-     msgBusNo	db "00h Device: "
  5076 00001E62 653A20             
  5077 00001E65 3030682046756E6374-     msgDevNo	db "00h Function: "
  5077 00001E6E 696F6E3A20         
  5078 00001E73 303068                  msgFncNo	db "00h"
  5079 00001E76 0D0A                    		db 0Dh, 0Ah
  5080 00001E78 4E414D4241523A20        		db "NAMBAR: "
  5081 00001E80 30303030682020          msgNamBar	db "0000h  "
  5082 00001E87 4E41424D4241523A20      		db "NABMBAR: "
  5083 00001E90 303030306820204952-     msgNabmBar	db "0000h  IRQ: "
  5083 00001E99 513A20             
  5084 00001E9C 3030                    msgIRQ		dw 3030h
  5085 00001E9E 0D0A00                  		db 0Dh, 0Ah, 0
  5086                                  ; 25/11/2023
  5087 00001EA1 56524120737570706F-     msgVRAheader:	db "VRA support: "
  5087 00001EAA 72743A20           
  5088 00001EAE 00                      		db 0	
  5089 00001EAF 5945530D0A00            msgVRAyes:	db "YES", 0Dh, 0Ah, 0
  5090 00001EB5 4E4F200D0A              msgVRAno:	db "NO ", 0Dh, 0Ah
  5091 00001EBA 28496E746572706F6C-     		db "(Interpolated sample rate playing method)"
  5091 00001EC3 617465642073616D70-
  5091 00001ECC 6C6520726174652070-
  5091 00001ED5 6C6179696E67206D65-
  5091 00001EDE 74686F6429         
  5092 00001EE3 0D0A00                  		db 0Dh, 0Ah, 0
  5093                                  
  5094                                  ; 30/05/2024
  5095                                  print_msg:
  5096 00001EE6 BB0700                  	mov	bx, 07h
  5097                                  p_msg:
  5098 00001EE9 06                      	push	es
  5099 00001EEA 55                      	push	bp
  5100 00001EEB 51                      	push	cx
  5101 00001EEC 52                      	push	dx
  5102                                  
  5103 00001EED 1E                      	push	ds
  5104 00001EEE 07                      	pop	es
  5105 00001EEF 89F5                    	mov	bp,si
  5106 00001EF1 B403                    	mov	ah, 03h ; Return cursor position (in DX)
  5107                                  	; bh = video page number 	
  5108 00001EF3 CD10                    	int	10h
  5109 00001EF5 31C9                    	xor	cx, cx
  5110                                  p_msg_0:	
  5111 00001EF7 AC                      	lodsb
  5112 00001EF8 08C0                    	or	al, al
  5113 00001EFA 7403                    	jz	short p_msg_1
  5114 00001EFC 41                      	inc	cx
  5115 00001EFD EBF8                    	jmp	short p_msg_0
  5116                                  p_msg_1:
  5117 00001EFF 09C9                    	or	cx, cx
  5118 00001F01 7405                    	jz	short p_msg_x
  5119                                  	; cx = number of chars
  5120                                  	; dx = screen (cursor) position
  5121                                  	; bl = color/attribute
  5122                                  	; bh = video page number
  5123                                  	; es:bp = string buffer
  5124                                  	;mov	al, 1 ; attribute in BL, update cursor pos
  5125                                  	;mov	ah, 13h ; write character string
  5126 00001F03 B80113                   	mov	ax, 1301h
  5127 00001F06 CD10                    	int	10h
  5128                                  p_msg_x:
  5129 00001F08 5A                      	pop	dx
  5130 00001F09 59                      	pop	cx
  5131 00001F0A 5D                      	pop	bp
  5132 00001F0B 07                      	pop	es
  5133 00001F0C C3                      	retn
  5134                                  
  5135                                  EOF: 
  5136                                  
  5137                                  ; BSS
  5138                                  
  5139                                  ; 17/02/2017
  5140                                  bss_start:
  5141                                  
  5142                                  ABSOLUTE bss_start
  5143                                  
  5144 00001F0D ??                      alignb 2
  5145                                  
  5146                                  ; 30/05/2024
  5147 00001F0E ??                      VRA:		resb 1	; Variable Rate Audio Support Status
  5148 00001F0F ??                      		resb 1
  5149                                  ; 28/11/2016
  5150                                  
  5151 00001F10 <res 1Ch>               smpRBuff:	resw 14 ; 19/11/2016 - Erdogan Tan
  5152                                  
  5153 00001F2C ????                    filehandle:	resw 1
  5154                                  
  5155 00001F2E ??                      flags:		resb 1
  5156                                  ; 06/11/2023
  5157 00001F2F ??                      ac97_int_ln_reg: resb 1
  5158                                  
  5159                                  ; 30/05/2024
  5160                                  wav_file_name:
  5161 00001F30 <res 50h>               		resb 80 ; wave file, path name (<= 80 bytes)
  5162                                  
  5163 00001F80 ????                    		resw 1	
  5164                                  
  5165                                  ; 17/02/2017
  5166                                  ; NAMBAR:  Native Audio Mixer Base Address Register
  5167                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 10h-13h
  5168                                  ; NABMBAR: Native Audio Bus Mastering Base Address register
  5169                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 14h-17h
  5170 00001F82 ????                    NAMBAR:		resw 1			; BAR for mixer
  5171 00001F84 ????                    NABMBAR:	resw 1			; BAR for bus master regs
  5172                                  
  5173                                  ; 256 byte buffer for descriptor list
  5174 00001F86 ????                    BDL_BUFFER:	resw 1			; segment of our 256byte BDL buffer
  5175 00001F88 ????                    WAV_BUFFER1:	resw 1			; segment of our WAV storage
  5176                                  ; 64k buffers for wav file storage
  5177 00001F8A ????                    WAV_BUFFER2:	resw 1			; segment of 2nd wav buffer
  5178                                  
  5179                                  ; 12/11/2016 - Erdogan Tan
  5180                                  
  5181 00001F8C ????????                bus_dev_fn:	resd 1
  5182 00001F90 ????????                dev_vendor:	resd 1
  5183                                  
  5184                                  ; 06/11/2023
  5185 00001F94 ????                    sample_rate:	resw 1
  5186                                  
  5187                                  ; 19/11/2016
  5188 00001F96 ????                    stmo:		resw 1 
  5189 00001F98 ????                    bps:		resw 1
  5190                                  
  5191                                  ; 08/11/2023
  5192                                  ; 07/11/2023
  5193 00001F9A ??                      fbs_shift:	resb 1
  5194 00001F9B ??                      		resb 1 ; 08/11/2023
  5195                                  
  5196                                  ;alignb 2
  5197                                  
  5198                                  ; 32 kilo bytes for temporay buffer
  5199                                  ; (for stereo-mono, 8bit/16bit corrections)
  5200                                  ;temp_buffer:	resb 32768
  5201                                  ; 18/11/2023
  5202 00001F9C <res DBF0h>             temp_buffer:	resb 56304  ; (44.1 kHZ stereo 14076 samples)	
  5203                                  
  5204                                  ;alignb 16
  5205                                  bss_end:
