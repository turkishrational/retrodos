     1                                  ; ****************************************************************************
     2                                  ; playwav6.asm (for Retro DOS)
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; PLAYWAV6.COM ! AC'97 (ICH) .WAV PLAYER program by Erdogan TAN
     5                                  ;
     6                                  ; 30/05/2024
     7                                  ;
     8                                  ; [ Last Modification: 04/02/2025 ]
     9                                  ;
    10                                  ; Modified from PLAYWAV6.PRG .wav player program by Erdogan Tan, 27/11/2023
    11                                  ; Modified from PLAYWAV4.COM .wav player program by Erdogan Tan, 19/05/2024
    12                                  ;
    13                                  ; Assembler: NASM version 2.15
    14                                  ;	     nasm playwav6.asm -l playwav6.txt -o PLAYWAV6.COM	
    15                                  ; ----------------------------------------------------------------------------
    16                                  ; Derived from '.wav file player for DOS' Jeff Leyda, Sep 02, 2002
    17                                  
    18                                  ; previous version: playwav4.asm (19/05/2024)
    19                                  
    20                                  ; TUNELOOP version (playing without AC97 interrupt) - 06/11/2023 - Erdogan Tan
    21                                  ; sample rate conversion version - 18/11/2023 - Erdogan Tan
    22                                  
    23                                  ; CODE
    24                                  
    25                                  %macro sys_msg 2
    26                                     	; 30/05/2024
    27                                  	mov	si, %1	; message
    28                                    	mov	bl, %2	; text color
    29                                  	xor	bh, bh	; video page 0
    30                                  	mov	ah, 0Eh
    31                                  	call	p_msg
    32                                  %endmacro
    33                                  
    34                                  ; player internal variables and other equates.
    35                                  BUFFERSIZE      equ     64 * 1024       ; 64k file buffer size.
    36                                  ENDOFFILE       equ     BIT0            ; flag for knowing end of file
    37                                  
    38                                  [BITS 16]
    39                                  
    40                                  [ORG 100h] 
    41                                  
    42                                  	%include 'ac97.inc' ; 17/02/2017
     1                              <1> ; 11/11/2023
     2                              <1> ; 05/11/2023
     3                              <1> ; 03/11/2023
     4                              <1> ; 17/02/2017 (Erdogan Tan, PLAYWAV.ASM)
     5                              <1> ; constant.inc & codec.inc (for ICH AC97 wav player, 'PLAYWAV.COM') 
     6                              <1> 
     7                              <1> ; ----------------------------------------------------------------------------
     8                              <1> ; CONSTANT.INC
     9                              <1> ; ----------------------------------------------------------------------------
    10                              <1> 
    11                              <1> ;constants of stuff that seem hard to remember at times.
    12                              <1> 
    13                              <1> TRUE  EQU 1
    14                              <1> FALSE EQU 0
    15                              <1> 
    16                              <1> ENABLED  EQU 1
    17                              <1> DISABLED EQU 0
    18                              <1> 
    19                              <1> BIT0  EQU 1
    20                              <1> BIT1  EQU 2
    21                              <1> BIT2  EQU 4
    22                              <1> BIT3  EQU 8
    23                              <1> BIT4  EQU 10h
    24                              <1> BIT5  EQU 20h
    25                              <1> BIT6  EQU 40h
    26                              <1> BIT7  EQU 80h
    27                              <1> BIT8  EQU 100h
    28                              <1> BIT9  EQU 200h
    29                              <1> BIT10 EQU 400h
    30                              <1> BIT11 EQU 800h
    31                              <1> BIT12 EQU 1000h
    32                              <1> BIT13 EQU 2000h
    33                              <1> BIT14 EQU 4000h
    34                              <1> BIT15 EQU 8000h
    35                              <1> BIT16 EQU 10000h
    36                              <1> BIT17 EQU 20000h
    37                              <1> BIT18 EQU 40000h
    38                              <1> BIT19 EQU 80000h
    39                              <1> BIT20 EQU 100000h
    40                              <1> BIT21 EQU 200000h
    41                              <1> BIT22 EQU 400000h
    42                              <1> BIT23 EQU 800000h
    43                              <1> BIT24 EQU 1000000h
    44                              <1> BIT25 EQU 2000000h
    45                              <1> BIT26 EQU 4000000h
    46                              <1> BIT27 EQU 8000000h
    47                              <1> BIT28 EQU 10000000h
    48                              <1> BIT29 EQU 20000000h
    49                              <1> BIT30 EQU 40000000h
    50                              <1> BIT31 EQU 80000000h
    51                              <1> 
    52                              <1> ;special characters
    53                              <1> NUL     EQU 0
    54                              <1> NULL    EQU 0
    55                              <1> BELL    EQU 07
    56                              <1> BS      EQU 08
    57                              <1> TAB     EQU 09
    58                              <1> LF      EQU 10
    59                              <1> CR      EQU 13
    60                              <1> ESCAPE  EQU 27           ;ESC is a reserved word....
    61                              <1> 
    62                              <1> 
    63                              <1> ;file stuff
    64                              <1> READONLY  EQU   BIT0
    65                              <1> HIDDEN    EQU   BIT1
    66                              <1> SYSTEM    EQU   BIT2
    67                              <1> VOLUME    EQU   BIT3         ;ignored for file access
    68                              <1> DIRECTORY EQU   BIT4         ;must be 0 for file access
    69                              <1> ARCHIVE   EQU   BIT5
    70                              <1> SHAREABLE EQU   BIT7         ;for novell networks
    71                              <1> OPEN	EQU	2		; open existing file
    72                              <1> CREATE	EQU	1		; create new file
    73                              <1> 
    74                              <1> 
    75                              <1> ; PCI equates
    76                              <1> ; PCI function address (PFA)
    77                              <1> ; bit 31 = 1
    78                              <1> ; bit 23:16 = bus number     (0-255)
    79                              <1> ; bit 15:11 = device number  (0-31)
    80                              <1> ; bit 10:8 = function number (0-7)
    81                              <1> ; bit 7:0 = register number  (0-255)
    82                              <1> 
    83                              <1> IO_ADDR_MASK    EQU     0FFFEh          ; mask off bit 0 for reading BARs
    84                              <1> PCI_INDEX_PORT  EQU     0CF8h
    85                              <1> PCI_DATA_PORT   EQU     0CFCh
    86                              <1> PCI32           EQU     BIT31           ; bitflag to signal 32bit access
    87                              <1> PCI16           EQU     BIT30           ; bitflag for 16bit access
    88                              <1> 
    89                              <1> PCI_FN0         EQU     0 << 8
    90                              <1> PCI_FN1         EQU     1 << 8
    91                              <1> PCI_FN2         EQU     2 << 8
    92                              <1> PCI_FN3         EQU     3 << 8
    93                              <1> PCI_FN4         EQU     4 << 8
    94                              <1> PCI_FN5         EQU     5 << 8
    95                              <1> PCI_FN6         EQU     6 << 8
    96                              <1> PCI_FN7         EQU     7 << 8
    97                              <1> 
    98                              <1> PCI_CMD_REG		EQU	04h		; reg 04, command reg
    99                              <1>  IO_ENA			EQU	BIT0		; i/o decode enable
   100                              <1>  MEM_ENA		EQU	BIT1		; memory decode enable
   101                              <1>  BM_ENA                 EQU     BIT2		; bus master enable
   102                              <1> 
   103                              <1> ; ----------------------------------------------------------------------------
   104                              <1> ; CODEC.INC
   105                              <1> ; ----------------------------------------------------------------------------
   106                              <1> 
   107                              <1> ;Codec registers.
   108                              <1> ;
   109                              <1> ;Not all codecs are created equal. Refer to the spec for your specific codec.
   110                              <1> ;
   111                              <1> ;All registers are 16bits wide.  Access to codec registers over the AC97 link
   112                              <1> ;is defined by the OEM.  
   113                              <1> ;
   114                              <1> ;Secondary codec's are accessed by ORing in BIT7 of all register accesses.
   115                              <1> ;
   116                              <1> 
   117                              <1> ; each codec/mixer register is 16bits
   118                              <1> 
   119                              <1> CODEC_RESET_REG                 equ     00      ; reset codec
   120                              <1> CODEC_MASTER_VOL_REG            equ     02      ; master volume
   121                              <1> CODEC_HP_VOL_REG                equ     04      ; headphone volume
   122                              <1> CODEC_MASTER_MONO_VOL_REG       equ     06      ; master mono volume
   123                              <1> CODEC_MASTER_TONE_REG           equ     08      ; master tone (R+L)
   124                              <1> CODEC_PCBEEP_VOL_REG            equ     0ah     ; PC beep volume
   125                              <1> CODEC_PHONE_VOL_REG             equ     0bh     ; phone volume
   126                              <1> CODEC_MIC_VOL_REG               equ     0eh     ; MIC volume
   127                              <1> CODEC_LINE_IN_VOL_REG           equ     10h     ; line input volume
   128                              <1> CODEC_CD_VOL_REG                equ     12h     ; CD volume
   129                              <1> CODEC_VID_VOL_REG               equ     14h     ; video volume
   130                              <1> CODEC_AUX_VOL_REG               equ     16h     ; aux volume
   131                              <1> CODEC_PCM_OUT_REG               equ     18h     ; PCM output volume
   132                              <1> CODEC_RECORD_SELECT_REG         equ     1ah     ; record select input
   133                              <1> CODEC_RECORD_VOL_REG            equ     1ch     ; record volume
   134                              <1> CODEC_RECORD_MIC_VOL_REG        equ     1eh     ; record mic volume
   135                              <1> CODEC_GP_REG                    equ     20h     ; general purpose
   136                              <1> CODEC_3D_CONTROL_REG            equ     22h     ; 3D control
   137                              <1> ; 24h is reserved
   138                              <1> CODEC_POWER_CTRL_REG            equ     26h     ; powerdown control
   139                              <1> CODEC_EXT_AUDIO_REG             equ     28h     ; extended audio
   140                              <1> CODEC_EXT_AUDIO_CTRL_REG        equ     2ah     ; extended audio control
   141                              <1> CODEC_PCM_FRONT_DACRATE_REG     equ     2ch     ; PCM out sample rate
   142                              <1> CODEC_PCM_SURND_DACRATE_REG     equ     2eh     ; surround sound sample rate
   143                              <1> CODEC_PCM_LFE_DACRATE_REG       equ     30h     ; LFE sample rate
   144                              <1> CODEC_LR_ADCRATE_REG            equ     32h     ; PCM in sample rate
   145                              <1> CODEC_MIC_ADCRATE_REG           equ     34h     ; mic in sample rate
   146                              <1> 
   147                              <1> ; registers 36-7a are reserved on the ICH
   148                              <1> 
   149                              <1> CODEC_VENDORID1_REG             equ     7ch     ; codec vendor ID 1
   150                              <1> CODEC_VENDORID2_REG             equ     7eh     ; codec vendor ID 2
   151                              <1> 
   152                              <1> ; Mixer registers 0 through 51h reside in the ICH and are not forwarded over
   153                              <1> ; the AC97 link to the codec, which I think is a little weird.  Looks like
   154                              <1> ; the ICH makes it so you don't need a fully functional codec to play audio?
   155                              <1> ;
   156                              <1> ; whenever 2 codecs are present in the system, use BIT7 to access the 2nd
   157                              <1> ; set of registers, ie 80h-feh
   158                              <1> 
   159                              <1> PRIMARY_CODEC                   equ     0       ; 0-7F for primary codec
   160                              <1> SECONDARY_CODEC                 equ     BIT7    ; 80-8f registers for 2ndary
   161                              <1> 
   162                              <1> SAMPLE_RATE_441khz	equ     44100   ; 44.1Khz (cd quality) rate
   163                              <1> 
   164                              <1> ; ----------------------------------------------------------------------------
   165                              <1> ; 17/02/2017
   166                              <1> PCI_IO_BASE	equ 10h			; = NAMBAR register offset
   167                              <1> AC97_INT_LINE   equ 3Ch			; AC97 Interrupt Line register offset
   168                              <1> 
   169                              <1> ; ----------------------------------------------------------------------------
   170                              <1> ; ICH2AC97.INC
   171                              <1> ; ----------------------------------------------------------------------------
   172                              <1> 
   173                              <1> ; PCI stuff
   174                              <1> 
   175                              <1> ; Intel ICH2 equates. It is assumed that ICH0 and plain ole ICH are compatible.
   176                              <1> 
   177                              <1> INTEL_VID       equ     8086h           ; Intel's PCI vendor ID
   178                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   179                              <1> SIS_VID		equ	1039h
   180                              <1> NVIDIA_VID	equ	10DEh	 ; Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source c.
   181                              <1> AMD_VID		equ	1022h
   182                              <1> 
   183                              <1> ICH_DID         equ     2415h           ; ICH device ID
   184                              <1> ICH0_DID        equ     2425h           ; ICH0
   185                              <1> ICH2_DID        equ     2445h           ; ICH2 I think there are more ICHes.
   186                              <1>                                         ; they all should be compatible.
   187                              <1> 
   188                              <1> ; 17/02/2017 (Erdogan Tan, ref: ALSA Device IDs, ALSA project)
   189                              <1> ICH3_DID	equ     2485h           ; ICH3
   190                              <1> ICH4_DID        equ     24C5h           ; ICH4
   191                              <1> ICH5_DID	equ     24D5h           ; ICH5 
   192                              <1> ICH6_DID	equ     266Eh           ; ICH6
   193                              <1> ESB6300_DID	equ     25A6h           ; 6300ESB
   194                              <1> ESB631X_DID	equ     2698h           ; 631XESB
   195                              <1> ICH7_DID	equ	27DEh		; ICH7
   196                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   197                              <1> MX82440_DID	equ	7195h
   198                              <1> SI7012_DID	equ	7012h
   199                              <1> NFORCE_DID	equ	01B1h
   200                              <1> NFORCE2_DID	equ	006Ah
   201                              <1> AMD8111_DID	equ	746Dh
   202                              <1> AMD768_DID	equ	7445h
   203                              <1> ; 03/11/2023 - Erdogan Tan - Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source code
   204                              <1> CK804_DID	equ	0059h
   205                              <1> MCP04_DID	equ	003Ah
   206                              <1> CK8_DID		equ	008Ah
   207                              <1> NFORCE3_DID	equ	00DAh
   208                              <1> CK8S_DID	equ	00EAh
   209                              <1> 
   210                              <1> NAMBAR_REG      equ     10h             ; native audio mixer BAR
   211                              <1>  NAM_SIZE       equ     256             ; 256 bytes required.
   212                              <1> 
   213                              <1> NABMBAR_REG     equ     14h             ; native audio bus mastering BAR
   214                              <1>  NABM_SIZE      equ     64              ; 64 bytes
   215                              <1> 
   216                              <1> ; BUS master registers, accessed via NABMBAR+offset
   217                              <1> 
   218                              <1> ; ICH supports 3 different types of register sets for three types of things
   219                              <1> ; it can do, thus:
   220                              <1> ;
   221                              <1> ; PCM in (for recording) aka PI
   222                              <1> ; PCM out (for playback) aka PO
   223                              <1> ; MIC in (for recording) aka MC
   224                              <1> 
   225                              <1> PI_BDBAR_REG            equ     0       ; PCM in buffer descriptor BAR
   226                              <1> PO_BDBAR_REG            equ     10h     ; PCM out buffer descriptor BAR
   227                              <1> MC_BDBAR_REG            equ     20h     ; MIC in buffer descriptor BAR
   228                              <1> 
   229                              <1> ; each buffer descriptor BAR holds a pointer which has entries to the buffer
   230                              <1> ; contents of the .WAV file we're going to play. Each entry is 8 bytes long
   231                              <1> ; (more on that later) and can contain 32 entries total, so each BAR is
   232                              <1> ; 256 bytes in length, thus:
   233                              <1> 
   234                              <1> BDL_SIZE                equ     32*8    ; Buffer Descriptor List size
   235                              <1> INDEX_MASK              equ     31      ; indexes must be 0-31
   236                              <1> 
   237                              <1> 
   238                              <1> 
   239                              <1> PI_CIV_REG              equ     4       ; PCM in current Index value (RO)
   240                              <1> PO_CIV_REG              equ     14h     ; PCM out current Index value (RO)
   241                              <1> MC_CIV_REG              equ     24h     ; MIC in current Index value (RO)
   242                              <1> ;8bit read only
   243                              <1> ; each current index value is simply a pointer showing us which buffer
   244                              <1> ; (0-31) the codec is currently processing. Once this counter hits 31, it
   245                              <1> ; wraps back to 0.
   246                              <1> ; this can be handy to know, as once it hits 31, we're almost out of data to
   247                              <1> ; play back or room to record!
   248                              <1> 
   249                              <1> 
   250                              <1> PI_LVI_REG              equ     5       ; PCM in Last Valid Index
   251                              <1> PO_LVI_REG              equ     15h     ; PCM out Last Valid Index
   252                              <1> MC_LVI_REG              equ     25h     ; MIC in Last Valid Index
   253                              <1> ;8bit read/write
   254                              <1> ; The Last Valid Index is a number (0-31) to let the codec know what buffer
   255                              <1> ; number to stop on after processing. It could be very nasty to play audio
   256                              <1> ; from buffers that aren't filled with the audio we want to play.
   257                              <1> 
   258                              <1> 
   259                              <1> PI_SR_REG               equ     6       ; PCM in Status register
   260                              <1> PO_SR_REG               equ     16h     ; PCM out Status register
   261                              <1> MC_SR_REG               equ     26h     ; MIC in Status register
   262                              <1> ;16bit read/write
   263                              <1> ; status registers.  Bitfields follow:
   264                              <1> 
   265                              <1> FIFO_ERR                equ     BIT4    ; FIFO Over/Underrun W1TC.
   266                              <1> 
   267                              <1> BCIS                    equ     BIT3    ; buffer completion interrupt status.
   268                              <1>                                         ; Set whenever the last sample in ANY
   269                              <1>                                         ; buffer is finished.  Bit is only
   270                              <1>                                         ; set when the Interrupt on Complete
   271                              <1>                                         ; (BIT4 of control reg) is set.
   272                              <1> 
   273                              <1> LVBCI                   equ     BIT2    ; Set whenever the codec has processed
   274                              <1>                                         ; the last buffer in the buffer list.
   275                              <1>                                         ; Will fire an interrupt if IOC bit is
   276                              <1>                                         ; set. Probably set after the last
   277                              <1>                                         ; sample in the last buffer is
   278                              <1>                                         ; processed.  W1TC
   279                              <1> 
   280                              <1>                                         ; 
   281                              <1> CELV                    equ     BIT1    ; Current buffer == last valid.
   282                              <1>                                         ; Bit is RO and remains set until LVI is
   283                              <1>                                         ; cleared.  Probably set up the start
   284                              <1>                                         ; of processing for the last buffer.
   285                              <1> 
   286                              <1> 
   287                              <1> DCH                     equ     BIT0    ; DMA controller halted.
   288                              <1>                                         ; set whenever audio stream is stopped
   289                              <1>                                         ; or something else goes wrong.
   290                              <1> 
   291                              <1> 
   292                              <1> PI_PICB_REG             equ     8       ; PCM in position in current buffer(RO)
   293                              <1> PO_PICB_REG             equ     18h     ; PCM out position in current buffer(RO)
   294                              <1> MC_PICB_REG             equ     28h     ; MIC in position in current buffer (RO)
   295                              <1> ;16bit read only
   296                              <1> ; position in current buffer regs show the number of dwords left to be
   297                              <1> ; processed in the current buffer.
   298                              <1> ; 
   299                              <1> 
   300                              <1> PI_PIV_REG              equ     0ah     ; PCM in Prefected index value
   301                              <1> PO_PIV_REG              equ     1ah     ; PCM out Prefected index value
   302                              <1> MC_PIV_REG              equ     2ah     ; MIC in Prefected index value
   303                              <1> ;8bit, read only
   304                              <1> ; Prefetched index value register.
   305                              <1> ; tells which buffer number (0-31) has be prefetched. I'd imagine this
   306                              <1> ; value follows the current index value fairly closely. (CIV+1)
   307                              <1> ;
   308                              <1> 
   309                              <1> 
   310                              <1> PI_CR_REG               equ     0bh     ; PCM in Control Register
   311                              <1> PO_CR_REG               equ     1bh     ; PCM out Control Register
   312                              <1> MC_CR_REG               equ     2bh     ; MIC in Control Register
   313                              <1> ; 8bit
   314                              <1> ; Control register *MUST* only be accessed as an 8bit value.
   315                              <1> ; Control register. See bitfields below.
   316                              <1> ;
   317                              <1> 
   318                              <1> 
   319                              <1> IOCE                    equ     BIT4    ; interrupt on complete enable.
   320                              <1>                                         ; set this bit if you want an intrtpt
   321                              <1>                                         ; to fire whenever LVBCI is set.
   322                              <1> FEIFE                   equ     BIT3    ; set if you want an interrupt to fire
   323                              <1>                                         ; whenever there is a FIFO (over or
   324                              <1>                                         ; under) error.
   325                              <1> LVBIE                   equ     BIT2    ; last valid buffer interrupt enable.
   326                              <1>                                         ; set if you want an interrupt to fire
   327                              <1>                                         ; whenever the completion of the last
   328                              <1>                                         ; valid buffer.
   329                              <1> RR                      equ     BIT1    ; reset registers.  Nukes all regs
   330                              <1>                                         ; except bits 4:2 of this register.
   331                              <1>                                         ; Only set this bit if BIT 0 is 0
   332                              <1> RPBM                    equ     BIT0    ; Run/Pause
   333                              <1>                                         ; set this bit to start the codec!
   334                              <1> 
   335                              <1> 
   336                              <1> GLOB_CNT_REG            equ     2ch     ; Global control register
   337                              <1> SEC_RES_EN              equ     BIT5    ; secondary codec resume event 
   338                              <1>                                         ; interrupt enable.  Not used here.
   339                              <1> PRI_RES_EN              equ     BIT4    ; ditto for primary. Not used here.
   340                              <1> ACLINK_OFF              equ     BIT3    ; Turn off the AC97 link
   341                              <1> ACWARM_RESET            equ     BIT2    ; Awaken the AC97 link from sleep.
   342                              <1>                                         ; registers preserved, bit self clears
   343                              <1> ACCOLD_RESET            equ     BIT1    ; Reset everything in the AC97 and
   344                              <1>                                         ; reset all registers.  Not self clearing
   345                              <1> 
   346                              <1> GPIIE                   equ     BIT0    ; GPI Interrupt enable.
   347                              <1>                                         ; set if you want an interrupt to
   348                              <1>                                         ; fire upon ANY of the bits in the
   349                              <1>                                         ; GPI (general pursose inputs?) not used.
   350                              <1> 
   351                              <1> GLOB_STS_REG            equ     30h     ; Global Status register (RO)
   352                              <1> 
   353                              <1> MD3                     equ     BIT17   ; modem powerdown status (yawn)
   354                              <1> AD3                     equ     BIT16   ; Audio powerdown status (yawn)
   355                              <1> RD_COMPLETE_STS         equ     BIT15   ; Codec read timed out. 0=normal
   356                              <1> BIT3SLOT12              equ     BIT14   ; shadowed status of bit 3 in slot 12
   357                              <1> BIT2SLOT12              equ     BIT13   ; shadowed status of bit 2 in slot 12
   358                              <1> BIT1SLOT12              equ     BIT12   ; shadowed status of bit 1 in slot 12
   359                              <1> SEC_RESUME_STS          equ     BIT11   ; secondary codec has resumed (and irqed)
   360                              <1> PRI_RESUME_STS          equ     BIT10   ; primary codec has resumed (and irqed)
   361                              <1> SEC_CODEC_RDY           equ     BIT9    ; secondary codec is ready for action
   362                              <1> PRI_CODEC_RDY           equ     BIT8    ; Primary codec is ready for action
   363                              <1>                                         ; software must check these bits before
   364                              <1>                                         ; starting the codec!
   365                              <1> MIC_IN_IRQ              equ     BIT7    ; MIC in caused an interrupt
   366                              <1> PCM_OUT_IRQ             equ     BIT6    ; One of the PCM out channels IRQed
   367                              <1> PCM_IN_IRQ              equ     BIT5    ; One of the PCM in channels IRQed
   368                              <1> MODEM_OUT_IRQ           equ     BIT2    ; modem out channel IRQed
   369                              <1> MODEM_IN_IRQ            equ     BIT1    ; modem in channel IRQed
   370                              <1> GPI_STS_CHANGE          equ     BIT0    ; set whenever GPI's have changed.
   371                              <1>                                         ; BIT0 of slot 12 also reflects this.
   372                              <1> 
   373                              <1> ACC_SEMA_REG            equ     34h     ; Codec write semiphore register
   374                              <1> CODEC_BUSY              equ     BIT0    ; codec register I/O is happening
   375                              <1>                                         ; self clearing
   376                              <1> ;
   377                              <1> ; Buffer Descriptors List
   378                              <1> ; As stated earlier, each buffer descriptor list is a set of (up to) 32 
   379                              <1> ; descriptors, each 8 bytes in length. Bytes 0-3 of a descriptor entry point
   380                              <1> ; to a chunk of memory to either play from or record to. Bytes 4-7 of an
   381                              <1> ; entry describe various control things detailed below.
   382                              <1> ; 
   383                              <1> ; Buffer pointers must always be aligned on a Dword boundry.
   384                              <1> ;
   385                              <1> 
   386                              <1> IOC                     equ     BIT31   ; Fire an interrupt whenever this
   387                              <1>                                         ; buffer is complete.
   388                              <1> 
   389                              <1> BUP                     equ     BIT30   ; Buffer Underrun Policy.
   390                              <1>                                         ; if this buffer is the last buffer
   391                              <1>                                         ; in a playback, fill the remaining
   392                              <1>                                         ; samples with 0 (silence) or not.
   393                              <1>                                         ; It's a good idea to set this to 1
   394                              <1>                                         ; for the last buffer in playback,
   395                              <1>                                         ; otherwise you're likely to get a lot
   396                              <1>                                         ; of noise at the end of the sound.
   397                              <1> 
   398                              <1> ;
   399                              <1> ; Bits 15:0 contain the length of the buffer, in number of samples, which
   400                              <1> ; are 16 bits each, coupled in left and right pairs, or 32bits each.
   401                              <1> ; Luckily for us, that's the same format as .wav files.
   402                              <1> ;
   403                              <1> ; A value of FFFF is 65536 samples. Running at 44.1Khz, that's just about
   404                              <1> ; 1.5 seconds of sample time. FFFF * 32bits is 1FFFFh bytes or 128k of data.
   405                              <1> ;
   406                              <1> ; A value of 0 in these bits means play no samples.
   407                              <1> ;
   408                              <1> 
   409                              <1> ; 11/11/2023
   410                              <1> CTRL_ST_CREADY		equ	BIT8+BIT9+BIT28 ; Primary Codec Ready
   411                              <1> CODEC_REG_POWERDOWN	equ	26h
    43                                  
    44                                  _STARTUP:
    45                                  	; 30/05/2024
    46                                  	; Prints the Credits Text.
    47                                  	sys_msg Credits, 0Bh
    26                              <1> 
    27 00000000 BE[661D]            <1>  mov si, %1
    28 00000003 B30B                <1>  mov bl, %2
    29 00000005 30FF                <1>  xor bh, bh
    30 00000007 B40E                <1>  mov ah, 0Eh
    31 00000009 E82D20              <1>  call p_msg
    48                                  
    49                                  	; 30/05/2024
    50 0000000C E88804                          call    setFree			; deallocate unused DOS mem
    51                                  
    52                                  	; 17/02/2017
    53                                  	; Clear BSS (uninitialized data) area
    54 0000000F 31C0                    	xor	ax, ax ; 0
    55 00000011 B93F6E                  	mov	cx, (bss_end - bss_start)/2
    56 00000014 BF[5D20]                	mov	di, bss_start
    57 00000017 F3AB                    	rep	stosw
    58                                  
    59                                  	; Detect (& Enable) AC'97 Audio Device
    60 00000019 E8D803                  	call	DetectAC97
    61                                  	;jnc	short GetFileName
    62                                  	; 30/05/2024
    63 0000001C 730F                    	jnc	short allocate_memory
    64                                  
    65                                  	; 30/05/2024
    66                                  _dev_not_ready:
    67                                  	; couldn't find the audio device!
    68                                  	sys_msg noDevMsg, 0Fh
    26                              <1> 
    27 0000001E BE[FA1D]            <1>  mov si, %1
    28 00000021 B30F                <1>  mov bl, %2
    29 00000023 30FF                <1>  xor bh, bh
    30 00000025 B40E                <1>  mov ah, 0Eh
    31 00000027 E80F20              <1>  call p_msg
    69 0000002A E9C702                          jmp     Exit
    70                                  
    71                                  	; 30/05/2024
    72                                  allocate_memory:
    73                                  
    74                                  ; allocate 256 bytes of data for DCM_OUT Buffer Descriptor List. (BDL)
    75                                  
    76 0000002D B81000                          mov     ax, BDL_SIZE / 16
    77 00000030 E86C04                          call    memAlloc
    78 00000033 A3[D620]                        mov     [BDL_BUFFER], ax		; segment 
    79                                  
    80                                  ; allocate 2 buffers, 64k each for now.
    81                                  
    82 00000036 B80010                          mov     ax, BUFFERSIZE / 16		; 64k for .WAV file
    83 00000039 E86304                          call    memAlloc
    84 0000003C A3[D820]                        mov     [WAV_BUFFER1], ax		; segment
    85                                  
    86 0000003F B80010                  	mov	ax, BUFFERSIZE / 16
    87 00000042 E85A04                  	call	memAlloc
    88 00000045 A3[DA20]                	mov	[WAV_BUFFER2], ax
    89                                  
    90                                  	; 30/05/2024
    91                                  GetFileName:
    92 00000048 BF[8020]                	mov	di, wav_file_name 
    93 0000004B BE8000                  	mov	si, 80h
    94 0000004E 8A1C                    	mov	bl, [si]
    95 00000050 30FF                    	xor	bh, bh
    96 00000052 43                      	inc	bx
    97 00000053 C60000                  	mov	byte [si+bx], 0		; make AsciiZ filename.
    98 00000056 46                      	inc	si
    99                                  ScanName:
   100 00000057 AC                      	lodsb
   101 00000058 84C0                    	test	al, al
   102 0000005A 0F84A002                	jz	pmsg_usage
   103 0000005E 3C20                    	cmp	al, 20h
   104 00000060 74F5                    	je	short ScanName	; scan start of name.
   105 00000062 AA                      	stosb
   106 00000063 B4FF                    	mov	ah, 0FFh
   107                                  a_0:	
   108 00000065 FEC4                    	inc	ah
   109                                  a_1:
   110 00000067 AC                      	lodsb
   111 00000068 AA                      	stosb
   112 00000069 3C2E                    	cmp	al, '.'
   113 0000006B 74F8                    	je	short a_0	
   114 0000006D 20C0                    	and	al, al
   115 0000006F 75F6                    	jnz	short a_1
   116                                  
   117 00000071 08E4                    	or	ah, ah		; if period NOT found,
   118 00000073 750C                    	jnz	short _1 	; then add a .WAV extension.
   119                                  SetExt:
   120 00000075 4F                      	dec	di
   121 00000076 66C7052E574156          	mov	dword [di], '.WAV'
   122 0000007D C6450400                	mov	byte [di+4], 0
   123                                  
   124                                  _1:
   125 00000081 E8E804                  	call	write_audio_dev_info 
   126                                  
   127                                  ; open the file
   128                                          ; open existing file
   129 00000084 B002                    	mov     al, OPEN		; open existing file
   130 00000086 BA[8020]                	mov	dx, wav_file_name
   131 00000089 E8A303                          call    openFile ; no error? ok.
   132 0000008C 730F                            jnc     short _gsr
   133                                  
   134                                  ; file not found!
   135                                  	sys_msg noFileErrMsg, 0Fh
    26                              <1> 
    27 0000008E BE[251E]            <1>  mov si, %1
    28 00000091 B30F                <1>  mov bl, %2
    29 00000093 30FF                <1>  xor bh, bh
    30 00000095 B40E                <1>  mov ah, 0Eh
    31 00000097 E89F1F              <1>  call p_msg
   136                                  _exit_:
   137 0000009A E95702                          jmp     Exit
   138                                  
   139                                  _gsr:  
   140 0000009D E8B603                         	call    getSampleRate		; read the sample rate
   141                                                                          ; pass it onto codec.
   142                                  	; 25/11/2023
   143 000000A0 72F8                    	jc	short _exit_		; nothing to do
   144                                  
   145 000000A2 A3[E420]                	mov	[sample_rate], ax
   146 000000A5 880E[E620]              	mov	[stmo], cl
   147 000000A9 8816[E820]              	mov	[bps], dl
   148                                  
   149                                  	; 26/11/2023
   150 000000AD C606[EA20]00            	mov	byte [fbs_shift], 0 ; 0 = stereo and 16 bit 
   151 000000B2 FEC9                    	dec	cl
   152 000000B4 7504                    	jnz	short _gsr_1 ; stereo
   153 000000B6 FE06[EA20]              	inc	byte [fbs_shift] ; 1 = mono or 8 bit		
   154                                  _gsr_1:
   155 000000BA 80FA08                  	cmp	dl, 8 
   156 000000BD 7704                    	ja	short _gsr_2 ; 16 bit samples
   157 000000BF FE06[EA20]              	inc	byte [fbs_shift] ; 2 = mono and 8 bit
   158                                  _gsr_2:
   159                                  	; 29/05/2024
   160 000000C3 E83E05                  	call	write_ac97_pci_dev_info
   161                                  
   162                                  	; 30/05/2024
   163                                  	; 29/05/2024
   164                                  	;call	check_vra
   165                                  
   166                                  	; 30/05/2024
   167 000000C6 E8FB19                  	call	codecConfig		; unmute codec, set rates.
   168 000000C9 0F823F02                	jc	init_err
   169                                  
   170                                  	; 25/11/2023
   171 000000CD E88806                  	call	write_VRA_info
   172                                  
   173                                  	; 01/05/2017
   174 000000D0 E8A604                  	call	write_wav_file_info
   175                                  
   176                                  	; 25/11/2023
   177                                  	; ------------------------------------------
   178                                  
   179                                  	; 18/11/2023 (ich_wav4.asm)
   180                                  	; 13/11/2023 (ich_wav3.asm)
   181                                  
   182 000000D3 803E[5E20]01            	cmp	byte [VRA], 1
   183 000000D8 720F                    	jb	short chk_sample_rate
   184                                  playwav_48_khz:	
   185 000000DA C706[C902][A804]        	mov	word [loadfromwavfile], loadFromFile
   186                                  	;mov	word [loadsize], 0 ; 65536
   187 000000E0 C706[CD02]0080          	mov	word [buffersize], 32768 ; samples
   188 000000E6 E9E801                  	jmp	PlayNow ; 30/05/2024
   189                                  
   190                                  	; 04/02/2025
   191                                  	; 02/02/2025
   192                                  chk_sample_rate:
   193                                  	; set conversion parameters
   194                                  	; (for 8, 11.025, 16, 22.050, 24, 32 kHZ)
   195 000000E9 A1[E420]                	mov	ax, [sample_rate]
   196 000000EC 3D80BB                  	cmp	ax, 48000
   197 000000EF 74E9                    	je	short playwav_48_khz
   198                                  chk_22khz:
   199 000000F1 3D2256                  	cmp	ax, 22050
   200 000000F4 752F                    	jne	short chk_11khz
   201 000000F6 803E[E820]08            	cmp	byte [bps], 8
   202 000000FB 760F                    	jna	short chk_22khz_1
   203 000000FD BB[B410]                	mov	bx, load_22khz_stereo_16_bit
   204 00000100 803E[E620]01            	cmp	byte [stmo], 1 
   205 00000105 7512                    	jne	short chk_22khz_2
   206 00000107 BB[4B10]                	mov	bx, load_22khz_mono_16_bit
   207 0000010A EB0D                    	jmp	short chk_22khz_2
   208                                  chk_22khz_1:
   209 0000010C BB[E60F]                	mov	bx, load_22khz_stereo_8_bit
   210 0000010F 803E[E620]01            	cmp	byte [stmo], 1 
   211 00000114 7503                    	jne	short chk_22khz_2
   212 00000116 BB[7D0F]                	mov	bx, load_22khz_mono_8_bit
   213                                  chk_22khz_2:
   214 00000119 B85A1D                  	mov	ax, 7514  ; (442*17)
   215 0000011C BA2500                  	mov	dx, 37
   216 0000011F B91100                  	mov	cx, 17 
   217 00000122 E93301                  	jmp	set_sizes	
   218                                  chk_11khz:
   219 00000125 3D112B                  	cmp	ax, 11025
   220 00000128 752F                    	jne	short chk_44khz
   221 0000012A 803E[E820]08            	cmp	byte [bps], 8
   222 0000012F 760F                    	jna	short chk_11khz_1
   223 00000131 BB[4812]                	mov	bx, load_11khz_stereo_16_bit
   224 00000134 803E[E620]01            	cmp	byte [stmo], 1 
   225 00000139 7512                    	jne	short chk_11khz_2
   226 0000013B BB[ED11]                	mov	bx, load_11khz_mono_16_bit
   227 0000013E EB0D                    	jmp	short chk_11khz_2
   228                                  chk_11khz_1:
   229 00000140 BB[9211]                	mov	bx, load_11khz_stereo_8_bit
   230 00000143 803E[E620]01            	cmp	byte [stmo], 1 
   231 00000148 7503                    	jne	short chk_11khz_2
   232 0000014A BB[3411]                	mov	bx, load_11khz_mono_8_bit
   233                                  chk_11khz_2:
   234 0000014D B8AD0E                  	mov	ax, 3757  ; (221*17)
   235 00000150 BA4A00                  	mov	dx, 74
   236 00000153 B91100                  	mov	cx, 17
   237 00000156 E9FF00                  	jmp	set_sizes 
   238                                  chk_44khz:
   239 00000159 3D44AC                  	cmp	ax, 44100
   240 0000015C 752F                    	jne	short chk_16khz
   241 0000015E 803E[E820]08            	cmp	byte [bps], 8
   242 00000163 760F                    	jna	short chk_44khz_1
   243 00000165 BB[F913]                	mov	bx, load_44khz_stereo_16_bit
   244 00000168 803E[E620]01            	cmp	byte [stmo], 1 
   245 0000016D 7512                    	jne	short chk_44khz_2
   246 0000016F BB[A113]                	mov	bx, load_44khz_mono_16_bit
   247 00000172 EB0D                    	jmp	short chk_44khz_2
   248                                  chk_44khz_1:
   249 00000174 BB[4313]                	mov	bx, load_44khz_stereo_8_bit
   250 00000177 803E[E620]01            	cmp	byte [stmo], 1 
   251 0000017C 7503                    	jne	short chk_44khz_2
   252 0000017E BB[E612]                	mov	bx, load_44khz_mono_8_bit
   253                                  chk_44khz_2:
   254                                  	;mov	ax, 15065 ; (655*23)
   255                                  	; 18/11/2023 ((file size + bss + stack) <= 64KB)
   256 00000181 B8FC36                  	mov	ax, 14076 ; (612 *23)
   257 00000184 BA1900                  	mov	dx, 25
   258 00000187 B91700                  	mov	cx, 23
   259 0000018A E9CB00                  	jmp	set_sizes 
   260                                  chk_16khz:
   261 0000018D 3D803E                  	cmp	ax, 16000
   262 00000190 752F                    	jne	short chk_8khz
   263 00000192 803E[E820]08            	cmp	byte [bps], 8
   264 00000197 760F                    	jna	short chk_16khz_1
   265 00000199 BB[F50B]                	mov	bx, load_16khz_stereo_16_bit
   266 0000019C 803E[E620]01            	cmp	byte [stmo], 1 
   267 000001A1 7512                    	jne	short chk_16khz_2
   268 000001A3 BB[940B]                	mov	bx, load_16khz_mono_16_bit
   269 000001A6 EB0D                    	jmp	short chk_16khz_2
   270                                  chk_16khz_1:
   271 000001A8 BB[040B]                	mov	bx, load_16khz_stereo_8_bit
   272 000001AB 803E[E620]01            	cmp	byte [stmo], 1 
   273 000001B0 7503                    	jne	short chk_16khz_2
   274 000001B2 BB[A00A]                	mov	bx, load_16khz_mono_8_bit
   275                                  chk_16khz_2:
   276 000001B5 B85515                  	mov	ax, 5461
   277 000001B8 BA0300                  	mov	dx, 3
   278 000001BB B90100                  	mov	cx, 1
   279 000001BE E99700                  	jmp	set_sizes 
   280                                  chk_8khz:
   281 000001C1 3D401F                  	cmp	ax, 8000
   282 000001C4 752E                    	jne	short chk_24khz
   283 000001C6 803E[E820]08            	cmp	byte [bps], 8
   284 000001CB 760F                    	jna	short chk_8khz_1
   285 000001CD BB[B909]                	mov	bx, load_8khz_stereo_16_bit
   286 000001D0 803E[E620]01            	cmp	byte [stmo], 1 
   287 000001D5 7512                    	jne	short chk_8khz_2
   288 000001D7 BB[2809]                	mov	bx, load_8khz_mono_16_bit
   289 000001DA EB0D                    	jmp	short chk_8khz_2
   290                                  chk_8khz_1:
   291 000001DC BB[3808]                	mov	bx, load_8khz_stereo_8_bit
   292 000001DF 803E[E620]01            	cmp	byte [stmo], 1 
   293 000001E4 7503                    	jne	short chk_8khz_2
   294 000001E6 BB[8507]                	mov	bx, load_8khz_mono_8_bit
   295                                  chk_8khz_2:
   296 000001E9 B8AA0A                  	mov	ax, 2730
   297 000001EC BA0600                  	mov	dx, 6
   298 000001EF B90100                  	mov	cx, 1
   299 000001F2 EB64                    	jmp	short set_sizes 
   300                                  chk_24khz:
   301 000001F4 3DC05D                  	cmp	ax, 24000
   302 000001F7 752E                    	jne	short chk_32khz
   303 000001F9 803E[E820]08            	cmp	byte [bps], 8
   304 000001FE 760F                    	jna	short chk_24khz_1
   305 00000200 BB[8D0D]                	mov	bx, load_24khz_stereo_16_bit
   306 00000203 803E[E620]01            	cmp	byte [stmo], 1 
   307 00000208 7512                    	jne	short chk_24khz_2
   308 0000020A BB[410D]                	mov	bx, load_24khz_mono_16_bit
   309 0000020D EB0D                    	jmp	short chk_24khz_2
   310                                  chk_24khz_1:
   311 0000020F BB[D90C]                	mov	bx, load_24khz_stereo_8_bit
   312 00000212 803E[E620]01            	cmp	byte [stmo], 1 
   313 00000217 7503                    	jne	short chk_24khz_2
   314 00000219 BB[8A0C]                	mov	bx, load_24khz_mono_8_bit
   315                                  chk_24khz_2:
   316                                  	;mov	ax, 8192
   317                                  	; 04/02/2025
   318 0000021C B8FE1F                  	mov	ax, 8190
   319 0000021F BA0200                  	mov	dx, 2
   320 00000222 B90100                  	mov	cx, 1
   321 00000225 EB31                    	jmp	short set_sizes 
   322                                  chk_32khz:
   323 00000227 3D007D                  	cmp	ax, 32000
   324                                  	;jne	short vra_needed
   325                                  	; 02/02/2025
   326 0000022A 755B                    	jne	short chk_12khz
   327 0000022C 803E[E820]08            	cmp	byte [bps], 8
   328 00000231 760F                    	jna	short chk_32khz_1
   329 00000233 BB[120F]                	mov	bx, load_32khz_stereo_16_bit
   330 00000236 803E[E620]01            	cmp	byte [stmo], 1 
   331 0000023B 7512                    	jne	short chk_32khz_2
   332 0000023D BB[C20E]                	mov	bx, load_32khz_mono_16_bit
   333 00000240 EB0D                    	jmp	short chk_32khz_2
   334                                  chk_32khz_1:
   335 00000242 BB[4B0E]                	mov	bx, load_32khz_stereo_8_bit
   336 00000245 803E[E620]01            	cmp	byte [stmo], 1 
   337 0000024A 7503                    	jne	short chk_32khz_2
   338 0000024C BB[F30D]                	mov	bx, load_32khz_mono_8_bit
   339                                  chk_32khz_2:
   340 0000024F B8AA2A                  	mov	ax, 10922
   341 00000252 BA0300                  	mov	dx, 3
   342 00000255 B90200                  	mov	cx, 2
   343                                  	;jmp	short set_sizes 
   344                                  set_sizes:
   345 00000258 803E[E620]01            	cmp	byte [stmo], 1
   346 0000025D 7402                    	je	short ss_1
   347 0000025F D1E0                    	shl	ax, 1
   348                                  ss_1:
   349 00000261 803E[E820]08            	cmp	byte [bps], 8
   350 00000266 7602                    	jna	short ss_2
   351                                  	; 16 bit samples
   352 00000268 D1E0                    	shl	ax, 1
   353                                  ss_2:
   354 0000026A A3[CB02]                	mov	[loadsize], ax
   355 0000026D F7E2                    	mul	dx
   356                                  
   357                                  	; 04/02/2025
   358 0000026F 83F901                  	cmp	cx, 1
   359 00000272 7402                    	je	short ss_3
   360                                  
   361 00000274 F7F1                    	div	cx
   362                                  ss_3:
   363 00000276 8A0E[EA20]              	mov	cl, [fbs_shift]
   364 0000027A D3E0                    	shl	ax, cl
   365                                  
   366                                  	; 03/02/2025
   367 0000027C D1E8                    	shr	ax, 1	; buffer size is 16 bit sample count
   368                                  	; 65536 -> 32768
   369 0000027E A3[CD02]                	mov	[buffersize], ax
   370 00000281 891E[C902]              	mov	[loadfromwavfile], bx
   371 00000285 EB4A                    	jmp	short PlayNow
   372                                  
   373                                  	;;;;
   374                                  	; 02/02/2025
   375                                  chk_12khz:
   376 00000287 3DE02E                  	cmp	ax, 12000
   377 0000028A 752E                    	jne	short vra_needed
   378 0000028C 803E[E820]08            	cmp	byte [bps], 8
   379 00000291 760F                    	jna	short chk_12khz_1
   380 00000293 BB[0D15]                	mov	bx, load_12khz_stereo_16_bit
   381 00000296 803E[E620]01            	cmp	byte [stmo], 1 
   382 0000029B 7512                    	jne	short chk_12khz_2
   383 0000029D BB[D114]                	mov	bx, load_12khz_mono_16_bit
   384 000002A0 EB0D                    	jmp	short chk_12khz_2
   385                                  chk_12khz_1:
   386 000002A2 BB[9114]                	mov	bx, load_12khz_stereo_8_bit
   387 000002A5 803E[E620]01            	cmp	byte [stmo], 1 
   388 000002AA 7503                    	jne	short chk_12khz_2
   389 000002AC BB[5914]                	mov	bx, load_12khz_mono_8_bit
   390                                  chk_12khz_2:
   391                                  	;mov	ax, 4096
   392                                  	; 04/02/2025
   393 000002AF B8FF0F                  	mov	ax, 4095
   394 000002B2 BA0400                  	mov	dx, 4
   395 000002B5 B90100                  	mov	cx, 1
   396 000002B8 EB9E                    	jmp	set_sizes 
   397                                  	;;;;
   398                                  
   399                                  vra_needed:
   400                                  	; 13/11/2023
   401 000002BA 58                      	pop	ax ; discard return address to the caller
   402                                  	; 30/05/2024
   403                                  vra_err:
   404                                  	sys_msg msg_no_vra, 0Fh 
    26                              <1> 
    27 000002BB BE[6F1E]            <1>  mov si, %1
    28 000002BE B30F                <1>  mov bl, %2
    29 000002C0 30FF                <1>  xor bh, bh
    30 000002C2 B40E                <1>  mov ah, 0Eh
    31 000002C4 E8721D              <1>  call p_msg
   405 000002C7 EB2B                    	jmp	Exit
   406                                  
   407                                  	; 30/05/2024
   408                                  	; 13/11/2023  (ich_wav4.asm)
   409                                  loadfromwavfile:
   410 000002C9 [A804]                  	dw	loadFromFile
   411                                  loadsize:	; read from wav file
   412 000002CB 0000                    	dw	0
   413                                  buffersize:	; write to DMA buffer
   414 000002CD 00800000                	dd	32768 ; 16 bit samples (not bytes)
   415                                  
   416                                  PlayNow: 
   417                                  	; 30/05/2024
   418                                  	; playwav4.asm
   419                                  _2:
   420 000002D1 E80C1A                  	call	check4keyboardstop	; flush keyboard buffer
   421 000002D4 72FB                    	jc	short _2		; 07/11/2023
   422                                  
   423                                   	;call	codecConfig		; unmute codec, set rates.
   424                                  	; 11/11/2023
   425                                  	;jc	short init_err
   426                                  
   427                                  ; position file pointer to start in actual wav data
   428                                  ; MUCH improvement should really be done here to check if sample size is
   429                                  ; supported, make sure there are 2 channels, etc.  
   430                                  ;
   431 000002D6 B442                            mov     ah, 42h
   432 000002D8 B000                            mov     al, 0                           ; from start of file
   433 000002DA 8B1E[7C20]                      mov     bx, [filehandle]
   434 000002DE 31C9                            xor     cx, cx
   435 000002E0 BA2C00                          mov     dx, 44                          ; jump past .wav/riff header
   436 000002E3 CD21                            int     21h
   437                                  
   438                                  	; 30/05/2024
   439                                  	sys_msg nextline, 07h
    26                              <1> 
    27 000002E5 BE[471F]            <1>  mov si, %1
    28 000002E8 B307                <1>  mov bl, %2
    29 000002EA 30FF                <1>  xor bh, bh
    30 000002EC B40E                <1>  mov ah, 0Eh
    31 000002EE E8481D              <1>  call p_msg
   440                                  
   441                                  ; play the .wav file. Most of the good stuff is in here.
   442                                  
   443 000002F1 E83400                  	call    PlayWav
   444                                  
   445                                  ; close the .wav file and exit.
   446                                  
   447                                  Exit:  
   448 000002F4 E84A01                          call    closeFile
   449                                           
   450 000002F7 B8004C                  	mov	ax, 4c00h	; bye !
   451 000002FA CD21                    	int	21h
   452                                  here:
   453 000002FC EBFE                    	jmp	short here	; do not come here !
   454                                  
   455                                  	; 30/05/2024
   456                                  pmsg_usage:
   457                                  	sys_msg msg_usage, 0Bh
    26                              <1> 
    27 000002FE BE[DB1D]            <1>  mov si, %1
    28 00000301 B30B                <1>  mov bl, %2
    29 00000303 30FF                <1>  xor bh, bh
    30 00000305 B40E                <1>  mov ah, 0Eh
    31 00000307 E82F1D              <1>  call p_msg
   458 0000030A EBE8                    	jmp	short Exit
   459                                  
   460                                  	; 30/05/2024
   461                                  init_err:
   462                                  	sys_msg msg_init_err, 0Fh
    26                              <1> 
    27 0000030C BE[3E1E]            <1>  mov si, %1
    28 0000030F B30F                <1>  mov bl, %2
    29 00000311 30FF                <1>  xor bh, bh
    30 00000313 B40E                <1>  mov ah, 0Eh
    31 00000315 E8211D              <1>  call p_msg
   463 00000318 EBDA                    	jmp	short Exit
   464                                  
   465                                  	; 30/05/2024
   466                                  error_exit:
   467                                  	sys_msg msg_error, 0Eh
    26                              <1> 
    27 0000031A BE[3E1E]            <1>  mov si, %1
    28 0000031D B30E                <1>  mov bl, %2
    29 0000031F 30FF                <1>  xor bh, bh
    30 00000321 B40E                <1>  mov ah, 0Eh
    31 00000323 E8131D              <1>  call p_msg
   468 00000326 EBCC                    	jmp	short Exit
   469                                  
   470                                  	; --------------------------------------------
   471                                  	
   472                                  	; 29/05/2024 (TYRDOS 386, playwav7.s)
   473                                  	; ((Modified from playwav4.asm, ich_wav4.asm))
   474                                  	; ------------------
   475                                  ;playwav_vra:
   476                                  PlayWav:
   477                                  	; create Buffer Descriptor List
   478                                  
   479                                  	;  Generic Form of Buffer Descriptor
   480                                  	;  ---------------------------------
   481                                  	;  63   62    61-48    47-32   31-0
   482                                  	;  ---  ---  --------  ------- -----
   483                                  	;  IOC  BUP -reserved- Buffer  Buffer
   484                                  	;		      Length   Pointer
   485                                  	;		      [15:0]   [31:0]
   486                                  
   487 00000328 06                              push    es
   488 00000329 A1[D620]                        mov     ax, [BDL_BUFFER]		; get segment # for BDL
   489 0000032C 8EC0                            mov     es, ax
   490                                  
   491 0000032E B91000                          mov     cx, 32 / 2                      ; make 32 entries in BDL
   492 00000331 31FF                            xor     di, di
   493                                  _0:
   494 00000333 660FB706[D820]                  movzx   eax, word [WAV_BUFFER1]
   495 00000339 66C1E004                        shl     eax, 4                          ; convert seg:off ->0:offset
   496 0000033D 66AB                            stosd                                   ; store pointer to wavbuffer1
   497                                  
   498                                  	;mov	eax, BUFFERSIZE / 2 ; size of buffer (32K) in (16bit) words
   499                                  	; 13/11/2023 (ich_wav3.asm) - 18/11/2023 (ich_wav4.asm)
   500 0000033F 66A1[CD02]              	mov	eax, [buffersize]
   501                                  
   502                                  	;or	eax, IOC + BUP
   503                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   504 00000343 660D00000040            	or	eax, BUP
   505 00000349 66AB                    	stosd
   506                                  
   507 0000034B 660FB706[DA20]                  movzx   eax, word [WAV_BUFFER2]
   508 00000351 66C1E004                        shl     eax, 4                          ; convert seg:off ->0:offset
   509 00000355 66AB                            stosd                                   ; store pointer to wavbuffer2
   510                                  
   511                                  	;mov	eax, BUFFERSIZE / 2 ; size of half buffer (32K)
   512                                  	; 13/11/2023 (ich_wav3.asm) - 18/11/2023 (ich_wav4.asm)
   513 00000357 66A1[CD02]              	mov	eax, [buffersize]
   514                                  
   515                                  	;or	eax, IOC + BUP
   516                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   517 0000035B 660D00000040            	or	eax, BUP
   518 00000361 66AB                    	stosd
   519                                  
   520 00000363 E2CE                            loop    _0
   521 00000365 07                              pop     es
   522                                  
   523                                  	; load 64k into buffer 1
   524 00000366 A1[D820]                        mov     ax, [WAV_BUFFER1]
   525                                          ;call	loadFromFile
   526                                  	; 13/11/2023
   527 00000369 FF16[C902]              	call	word [loadfromwavfile]
   528                                  
   529                                  	; and 64k into buffer 2
   530 0000036D A1[DA20]                	mov     ax, [WAV_BUFFER2]
   531                                         	;call	loadFromFile
   532                                  	; 13/11/2023
   533 00000370 FF16[C902]              	call	word [loadfromwavfile]
   534                                  	
   535                                  	; write NABMBAR+10h with offset of buffer descriptor list
   536                                  
   537 00000374 660FB706[D620]                  movzx   eax, word [BDL_BUFFER]
   538 0000037A 66C1E004                	shl     eax, 4                          ; convert seg:off to 0:off
   539 0000037E 8B16[D420]                      mov     dx, [NABMBAR]
   540 00000382 83C210                          add     dx, PO_BDBAR_REG                ; set pointer to BDL
   541 00000385 66EF                            out     dx, eax                         ; write to AC97 controller
   542                                  
   543                                  	; 19/05/2024
   544 00000387 E83519                  	call	delay1_4ms
   545                                  
   546 0000038A B01F                            mov	al, 31
   547 0000038C E8C819                  	call	setLastValidIndex
   548                                  
   549                                  	; 19/05/2024
   550                                  	;call	delay1_4ms
   551                                  
   552                                  	; 17/02/2017
   553 0000038F 8B16[D420]                      mov	dx, [NABMBAR]
   554 00000393 83C21B                          add	dx, PO_CR_REG		; PCM out Control Register
   555                                          ;mov	al, IOCE + RPBM	; Enable 'Interrupt On Completion' + run
   556                                  	;			; (LVBI interrupt will not be enabled)
   557                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   558 00000396 B001                    	mov	al, RPBM
   559 00000398 EE                      	out	dx, al			; Start bus master operation.
   560                                  
   561                                  	; 19/05/2024
   562                                  	; 06/11/2023
   563 00000399 E82319                  	call	delay1_4ms	; 30/05/2024
   564                                  	;call	delay1_4ms
   565                                  	;call	delay1_4ms
   566                                  	;call	delay1_4ms
   567                                  
   568                                  ; while DMA engine is running, examine current index and wait until it hits 1
   569                                  ; as soon as it's 1, we need to refresh the data in wavbuffer1 with another
   570                                  ; 64k. Likewise when it's playing buffer 2, refresh buffer 1 and repeat.
   571                                  
   572                                  ; 18/11/2023
   573                                  ; 08/11/2023
   574                                  ; 07/11/2023
   575                                  	
   576                                  tuneLoop:
   577                                  	; 30/05/2024
   578                                  	; 18/11/2023 (ich_wav4.asm)
   579                                  	; 08/11/2023
   580                                  	; 06/11/2023
   581 0000039C B031                    	mov	al, '1'
   582 0000039E E84500                  	call	tL0
   583                                  tL1:
   584 000003A1 E88819                  	call	updateLVI	; /set LVI != CIV/
   585 000003A4 7434                    	jz	short _exitt_	; 08/11/2023
   586 000003A6 E83719                  	call	check4keyboardstop
   587 000003A9 722F                    	jc	short _exitt_
   588 000003AB E87519                  	call	getCurrentIndex
   589 000003AE A801                    	test	al, BIT0
   590 000003B0 74EF                    	jz	short tL1	; loop if buffer 2 is not playing
   591                                  
   592                                  	; load buffer 1
   593 000003B2 A1[D820]                	mov     ax, [WAV_BUFFER1]
   594                                  	;call	loadFromFile
   595                                  	; 18/11/2023
   596 000003B5 FF16[C902]              	call	word [loadfromwavfile]
   597 000003B9 721F                    	jc	short _exitt_	; end of file
   598                                  
   599 000003BB B032                    	mov	al, '2'
   600 000003BD E82600                  	call	tL0
   601                                  tL2:
   602 000003C0 E86919                  	call    updateLVI
   603 000003C3 7415                    	jz	short _exitt_	; 08/11/2023
   604 000003C5 E81819                  	call    check4keyboardstop
   605 000003C8 7210                    	jc	short _exitt_
   606 000003CA E85619                  	call    getCurrentIndex
   607 000003CD A801                    	test	al, BIT0
   608 000003CF 75EF                    	jnz	short tL2	; loop if buffer 1 is not playing
   609                                  
   610                                  	; load buffer 2
   611 000003D1 A1[DA20]                	mov     ax, [WAV_BUFFER2]
   612                                  	;call	loadFromFile
   613                                  	; 18/11/2023
   614 000003D4 FF16[C902]              	call	word [loadfromwavfile]
   615 000003D8 73C2                    	jnc	short tuneLoop
   616                                  _exitt_:
   617 000003DA 8B16[D420]              	mov	dx, [NABMBAR]		
   618 000003DE 83C21B                  	add	dx, PO_CR_REG	; PCM out Control Register
   619 000003E1 B000                    	mov	al, 0
   620 000003E3 EE                      	out	dx, al		; stop player
   621                                  
   622                                  	; 30/05/2024
   623 000003E4 B030                    	mov	al, '0'
   624                                  
   625                                  	;add	al, '0'
   626                                  	;call	tL0
   627                                  	;
   628                                  	;retn
   629                                  	; 06/11/2023
   630                                  	;jmp	short tL0
   631                                  	;retn
   632                                  
   633                                  	; 06/11/2023
   634                                  tL0:
   635                                  	; 08/11/2023
   636                                  	; 05/11/2023
   637                                  	; 17/02/2017 - Buffer switch test (temporary)
   638                                  	; 06/11/2023
   639                                  	; al = buffer indicator ('1', '2' or '0' -stop- )
   640 000003E6 1E                      	push	ds
   641                                  	;push	bx 
   642 000003E7 BB00B8                  	mov	bx, 0B800h ; video display page segment
   643 000003EA 8EDB                    	mov	ds, bx
   644 000003EC 29DB                    	sub	bx, bx ; 0
   645 000003EE B44E                    	mov	ah, 4Eh
   646 000003F0 8907                    	mov	[bx], ax ; show current play buffer (1, 2)
   647                                  	;pop	bx
   648 000003F2 1F                      	pop	ds
   649 000003F3 C3                      	retn
   650                                  
   651                                  	; ------------------
   652                                  
   653                                  	; 30/05/2024
   654                                  DetectAC97:
   655                                  DetectICH:
   656                                  	; 22/11/2023
   657                                  	; 19/11/2023
   658                                  	; 01/11/2023 - TRDOS 386 Kernel v2.0.7
   659                                  	;; 10/06/2017
   660                                  	;; 05/06/2017
   661                                  	;; 29/05/2017
   662                                  	;; 28/05/2017
   663                                  
   664                                  	; 19/11/2023
   665 000003F4 BE[A81E]                	mov	si, valid_ids	; address of Valid ICH (AC97) Device IDs
   666 000003F7 B91500                  	mov	cx, valid_id_count
   667                                  pfd_1:
   668 000003FA 66AD                    	lodsd
   669 000003FC E89F15                  	call	pciFindDevice
   670 000003FF 7303                    	jnc	short d_ac97_1
   671 00000401 E2F7                    	loop	pfd_1
   672                                  
   673                                  	;stc
   674 00000403 C3                      	retn
   675                                  
   676                                  d_ac97_1:
   677                                  	; eax = BUS/DEV/FN
   678                                  	;	00000000BBBBBBBBDDDDDFFF00000000
   679                                  	; edx = DEV/VENDOR
   680                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
   681                                  
   682                                  	; playwav4.asm - 19/05/2024
   683                                  
   684 00000404 66A3[DC20]              	mov	[bus_dev_fn], eax
   685 00000408 668916[E020]            	mov	[dev_vendor], edx
   686                                  
   687                                  	; get ICH base address regs for mixer and bus master
   688                                  
   689 0000040D B010                            mov     al, NAMBAR_REG
   690 0000040F E81A16                          call    pciRegRead16			; read PCI registers 10-11
   691                                          ;and    dx, IO_ADDR_MASK 		; mask off BIT0
   692                                  	; 19/05/2024
   693 00000412 80E2FE                  	and	dl, 0FEh
   694                                  
   695 00000415 8916[D220]                      mov     [NAMBAR], dx			; save audio mixer base addr
   696                                  
   697 00000419 B014                    	mov     al, NABMBAR_REG
   698 0000041B E80E16                          call    pciRegRead16
   699                                          ;and    dx, IO_ADDR_MASK
   700                                  	; 19/05/2024
   701 0000041E 80E2C0                  	and	dl, 0C0h
   702                                  
   703 00000421 8916[D420]                      mov     [NABMBAR], dx			; save bus master base addr
   704                                  
   705 00000425 B03C                    	mov	al, AC97_INT_LINE ; Interrupt line register (3Ch)
   706 00000427 E8FA15                  	call	pciRegRead8 ; 17/02/2017
   707                                  
   708 0000042A 8816[7F20]              	mov     [ac97_int_ln_reg], dl
   709                                  
   710                                  	;clc
   711                                  
   712 0000042E C3                      	retn
   713                                  
   714                                  ; FILE.ASM
   715                                  ;open or create file
   716                                  ;
   717                                  ;input: ds:dx-->filename (asciiz)
   718                                  ;       al=file Mode (create or open)
   719                                  ;output: none  cs:[filehandle] filled
   720                                  ;
   721                                  openFile:	; (playwav4.asm)
   722 0000042F 50                      	push	ax
   723 00000430 51                      	push	cx
   724 00000431 B43B                    	mov	ah, 3Bh			; start with a mode
   725 00000433 00C4                    	add	ah, al			; add in create or open mode
   726 00000435 31C9                    	xor	cx, cx
   727 00000437 CD21                    	int	21h
   728 00000439 7203                    	jc	short _of1
   729                                  	;mov	[cs:filehandle], ax
   730 0000043B A3[7C20]                	mov	[filehandle], ax
   731                                  _of1:
   732 0000043E 59                      	pop	cx
   733 0000043F 58                      	pop	ax
   734 00000440 C3                      	retn
   735                                  
   736                                  ; close the currently open file
   737                                  ; input: none, uses cs:[filehandle]
   738                                  closeFile:	; (playwav4.asm)
   739 00000441 50                      	push	ax
   740 00000442 53                      	push	bx
   741 00000443 833E[7C20]FF            	cmp	word [filehandle], -1
   742 00000448 7409                    	jz	short _cf1
   743 0000044A 8B1E[7C20]              	mov     bx, [filehandle]  
   744 0000044E B8003E                  	mov     ax,3e00h
   745 00000451 CD21                            int     21h              ;close file
   746                                  _cf1:
   747 00000453 5B                      	pop	bx
   748 00000454 58                      	pop	ax
   749 00000455 C3                      	retn
   750                                  
   751                                  getSampleRate:	; (playwav4.asm)
   752                                  	; 08/12/2016
   753                                  ; reads the sample rate from the .wav file.
   754                                  ; entry: none - assumes file is already open
   755                                  	; 19/11/2016 - Erdogan Tan
   756                                  ; exit: ax = sample rate (11025, 22050, 44100, 48000)
   757                                  ;	cx = number of channels (mono=1, stereo=2)
   758                                  ;	dx = bits per sample (8, 16)
   759                                  
   760 00000456 53                      	push    bx
   761                                  
   762 00000457 B442                            mov     ah, 42h
   763 00000459 B000                            mov     al, 0				; from start of file
   764 0000045B 8B1E[7C20]                      mov     bx, [filehandle]
   765 0000045F 31C9                            xor     cx, cx
   766 00000461 BA0800                          mov     dx, 08h				; "WAVE"
   767 00000464 CD21                            int     21h
   768                                  
   769 00000466 BA[6020]                        mov     dx, smpRBuff
   770 00000469 B91C00                          mov     cx, 28				; 28 bytes
   771 0000046C B43F                    	mov	ah, 3fh
   772 0000046E CD21                            int     21h
   773                                  
   774 00000470 813E[6020]5741          	cmp	word [smpRBuff], 'WA'
   775 00000476 751C                    	jne	short gsr_stc
   776                                  
   777 00000478 813E[6220]5645          	cmp	word [smpRBuff+2], 'VE'
   778 0000047E 7514                    	jne	short gsr_stc
   779                                  
   780 00000480 833E[6C20]01            	cmp	word [smpRBuff+12], 1	; Offset 20, must be 1 (= PCM)
   781 00000485 750D                    	jne	short gsr_stc
   782                                  
   783                                  
   784 00000487 8B0E[6E20]              	mov	cx, [smpRBuff+14]	; return num of channels in CX
   785 0000048B A1[7020]                        mov     ax, [smpRBuff+16]	; return sample rate in AX
   786 0000048E 8B16[7A20]              	mov	dx, [smpRBuff+26]	; return bits per sample value in DX
   787                                  gsr_retn:
   788 00000492 5B                              pop     bx
   789 00000493 C3                              retn
   790                                  
   791                                  gsr_stc:
   792 00000494 F9                      	stc
   793 00000495 EBFB                    	jmp	short gsr_retn
   794                                  
   795                                  ; ----	30/05/2024 (playwav4.asm, 19/05/2024)
   796                                  
   797                                  ; MEMALLOC.ASM
   798                                  ;-- SETFREE: Release memory not used  ----------------
   799                                  ;-- Input    : ES = address of PSP
   800                                  ;-- Output   : none
   801                                  ;-- Register : AX, BX, CL and FLAGS are changed 
   802                                  ;-- Info     : Since the stack-segment is always the last segment in an 
   803                                  ;              EXE-file, ES:0000 points to the beginning and SS:SP
   804                                  ;              to the end of the program in memory. Through this the
   805                                  ;              length of the program can be calculated 
   806                                  ; call this routine once at the beginning of the program to free up memory
   807                                  ; assigned to it by DOS.
   808                                  
   809                                  setFree:
   810 00000497 BB0010                  	mov	bx, 65536/16	; 4K paragraphs ; 17/02/2017 (Erdogan Tan)		
   811                                  
   812 0000049A B44A                    	mov	ah, 4Ah		; pass new length to DOS
   813 0000049C CD21                    	int	21h
   814                                  
   815 0000049E C3                      	retn			; back to caller 
   816                                  				; new size (allocated memory) = 64KB
   817                                  
   818                                  memAlloc:
   819                                  ; input: AX = # of paragraphs required
   820                                  ; output: AX = segment of block to use
   821                                  
   822 0000049F 53                      	push	bx
   823 000004A0 89C3                    	mov	bx, ax
   824 000004A2 B448                    	mov	ah, 48h
   825 000004A4 CD21                    	int	21h
   826 000004A6 5B                      	pop	bx
   827 000004A7 C3                      	retn
   828                                  
   829                                  ; ----
   830                                  
   831                                  ; /////
   832                                  
   833                                  	; 30/05/2024 (ich_wav4.asm, 19/05/2024)
   834                                  loadFromFile:
   835                                  	; 07/11/2023
   836                                  
   837 000004A8 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
   838                                  					; last of the file?
   839 000004AD 7402                    	jz	short lff_0		; no
   840 000004AF F9                      	stc
   841 000004B0 C3                      	retn
   842                                  
   843                                  lff_0:
   844                                  	; 08/11/2023
   845 000004B1 89C5                    	mov	bp, ax ; save buffer segment
   846                                  
   847 000004B3 8A0E[EA20]              	mov	cl, [fbs_shift]   
   848 000004B7 20C9                    	and	cl, cl
   849 000004B9 7467                    	jz	short lff_1 ; stereo, 16 bit	
   850                                  
   851 000004BB BFFFFF                  	mov	di, BUFFERSIZE - 1 ; 65535
   852                                  
   853                                  	; fbs_shift =
   854                                  	;	2 for mono and 8 bit sample (multiplier = 4)
   855                                  	;	1 for mono or 8 bit sample (multiplier = 2)
   856 000004BE D3EF                    	shr	di, cl
   857 000004C0 47                      	inc	di ; 16384 for 8 bit and mono	
   858                                  		   ; 32768 for 8 bit or mono	
   859                                  
   860 000004C1 8CC8                    	mov	ax, cs
   861 000004C3 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
   862                                  
   863                                  	; 17/02/2017 (stereo/mono, 8bit/16bit corrections)
   864                                  	; load file into memory
   865 000004C6 89F9                            mov	cx, di                       
   866 000004C8 8B1E[7C20]              	mov	bx, [filehandle]
   867 000004CC 8ED8                    	mov     ds, ax
   868 000004CE B43F                           	mov	ah, 3Fh
   869 000004D0 CD21                    	int	21h
   870                                  
   871 000004D2 8CCB                    	mov	bx, cs
   872 000004D4 8EDB                    	mov	ds, bx
   873                                  
   874 000004D6 727C                    	jc	short lff_4 ; error !
   875                                  
   876                                  	; 08/11/2023
   877 000004D8 31D2                    	xor	dx, dx ; 0
   878                                  
   879 000004DA 21C0                    	and	ax, ax
   880 000004DC 746D                    	jz	short lff_3
   881                                  
   882 000004DE 8A1E[EA20]              	mov	bl, [fbs_shift]
   883                                  
   884 000004E2 06                      	push	es
   885 000004E3 89D7                    	mov	di, dx ; 0 ; [fbs_off]
   886                                  	;mov	bp, [fbs_seg] ; buffer segment
   887 000004E5 8EC5                    	mov	es, bp
   888 000004E7 BE[EC20]                	mov	si, temp_buffer ; temporary buffer address
   889 000004EA 89C1                    	mov	cx, ax ; byte count
   890 000004EC 803E[E820]08            	cmp	byte [bps], 8 ; bits per sample (8 or 16)
   891 000004F1 751B                    	jne	short lff_7 ; 16 bit samples
   892                                  	; 8 bit samples
   893 000004F3 FECB                    	dec	bl  ; shift count, 1 = stereo, 2 = mono
   894 000004F5 740C                    	jz	short lff_6 ; 8 bit, stereo
   895                                  lff_5:
   896                                  	; mono & 8 bit
   897 000004F7 AC                      	lodsb
   898 000004F8 2C80                    	sub	al, 80h ; 08/11/2023
   899 000004FA C1E008                  	shl	ax, 8 ; convert 8 bit sample to 16 bit sample
   900 000004FD AB                      	stosw	; left channel
   901 000004FE AB                      	stosw	; right channel
   902 000004FF E2F6                    	loop	lff_5
   903 00000501 EB12                    	jmp	short lff_9	
   904                                  lff_6:
   905                                  	; stereo & 8 bit
   906 00000503 AC                      	lodsb
   907 00000504 2C80                    	sub	al, 80h ; 08/11/2023
   908 00000506 C1E008                  	shl	ax, 8 ; convert 8 bit sample to 16 bit sample
   909 00000509 AB                      	stosw
   910 0000050A E2F7                    	loop	lff_6			
   911 0000050C EB07                    	jmp	short lff_9
   912                                  lff_7:
   913 0000050E D1E9                    	shr	cx, 1 ; word count
   914                                  lff_8:
   915 00000510 AD                      	lodsw
   916 00000511 AB                      	stosw	; left channel
   917 00000512 AB                      	stosw	; right channel
   918 00000513 E2FB                    	loop	lff_8
   919                                  lff_9:
   920 00000515 07                      	pop	es
   921 00000516 09FF                    	or	di, di
   922 00000518 7439                    	jz	short endLFF ; 64KB ok 
   923                                  	
   924 0000051A 89F8                    	mov	ax, di ; [fbs_off]
   925 0000051C 48                      	dec	ax
   926 0000051D B9FFFF                  	mov	cx, BUFFERSIZE - 1 ; 65535
   927 00000520 EB29                    	jmp	short lff_3
   928                                  	
   929                                  lff_1:  
   930                                  	;mov	bp, ax ; save buffer segment
   931 00000522 31D2                    	xor	dx, dx
   932                                  	; load file into memory
   933 00000524 B90080                          mov	cx, (BUFFERSIZE / 2)	; 32k chunk
   934 00000527 8B1E[7C20]              	mov	bx, [filehandle]
   935 0000052B 8ED8                    	mov     ds, ax
   936 0000052D B43F                           	mov	ah, 3Fh
   937 0000052F CD21                    	int	21h
   938                                  
   939 00000531 8CCF                    	mov	di, cs
   940 00000533 8EDF                    	mov	ds, di
   941                                  
   942                                  	; 07/11/2023
   943 00000535 721D                    	jc	short lff_4 ; error !
   944                                  	
   945 00000537 39C8                    	cmp	ax, cx
   946 00000539 7510                    	jne	short lff_3
   947                                  lff_2:
   948                                  	; 08/11/2023
   949 0000053B 01C2                    	add	dx, ax
   950                                  	;mov	cx, (BUFFERSIZE / 2)	; 32k chunk
   951                                  	;mov	bx, [filehandle]
   952 0000053D 8EDD                    	mov     ds, bp
   953 0000053F B43F                           	mov	ah, 3Fh
   954 00000541 CD21                    	int	21h
   955                                  
   956                                  	;mov	di, cs
   957 00000543 8EDF                    	mov	ds, di
   958                                  
   959 00000545 720D                    	jc	short lff_4 ; error !
   960                                  
   961 00000547 39C8                    	cmp	ax, cx
   962 00000549 7408                    	je	short endLFF
   963                                  lff_3:
   964 0000054B E80F00                  	call    padfill			; blank pad the remainder
   965                                          ;clc				; don't exit with CY yet.
   966 0000054E 800E[7E20]01                    or	byte [flags], ENDOFFILE	; end of file flag
   967                                  endLFF:
   968 00000553 C3                              retn
   969                                  lff_4:
   970                                  	; 08/11/2023
   971 00000554 B021                    	mov	al, '!'  ; error
   972 00000556 E88DFE                  	call	tL0
   973                                  
   974 00000559 31C0                    	xor	ax, ax
   975 0000055B EBEE                    	jmp	short lff_3
   976                                  
   977                                  ; entry ds:ax points to last byte in file
   978                                  ; cx=target size
   979                                  ; note: must do byte size fill
   980                                  ; destroys bx, cx
   981                                  ;
   982                                  padfill:
   983                                  	; 07/11/2023
   984                                  	; 06/11/2023
   985                                  	; 17/02/2017
   986 0000055D 06                      	push	es
   987                                          ;push	di
   988                                  	;mov	di, [fbs_seg]
   989                                  	;mov	es, di
   990 0000055E 8EC5                            mov	es, bp
   991 00000560 29C1                    	sub	cx, ax
   992                                  	; 08/11/2023
   993                                  	;mov	di, ax ; (wrong)
   994 00000562 89D7                    	mov	di, dx ; buffer offset
   995 00000564 01C7                    	add	di, ax       	
   996                                  	; 07/11/2023
   997                                  	;add	di, [fbs_off]
   998 00000566 30C0                            xor	al, al
   999 00000568 F3AA                    	rep	stosb
  1000                                  	;mov	[fbs_off], di
  1001                                  	;pop	di
  1002 0000056A 07                              pop	es
  1003 0000056B C3                      	retn
  1004                                  ; /////
  1005                                  	
  1006                                  write_audio_dev_info:
  1007                                  	; 30/05/2024
  1008                                       	sys_msg msgAudioCardInfo, 0Fh
    26                              <1> 
    27 0000056C BE[B21D]            <1>  mov si, %1
    28 0000056F B30F                <1>  mov bl, %2
    29 00000571 30FF                <1>  xor bh, bh
    30 00000573 B40E                <1>  mov ah, 0Eh
    31 00000575 E8C11A              <1>  call p_msg
  1009 00000578 C3                      	retn
  1010                                  
  1011                                  write_wav_file_info:
  1012                                  	; 30/05/2024
  1013                                  	; 01/05/2017
  1014                                  	sys_msg msgWavFileName, 0Fh
    26                              <1> 
    27 00000579 BE[FC1E]            <1>  mov si, %1
    28 0000057C B30F                <1>  mov bl, %2
    29 0000057E 30FF                <1>  xor bh, bh
    30 00000580 B40E                <1>  mov ah, 0Eh
    31 00000582 E8B41A              <1>  call p_msg
  1015                                  	sys_msg wav_file_name, 0Fh
    26                              <1> 
    27 00000585 BE[8020]            <1>  mov si, %1
    28 00000588 B30F                <1>  mov bl, %2
    29 0000058A 30FF                <1>  xor bh, bh
    30 0000058C B40E                <1>  mov ah, 0Eh
    31 0000058E E8A81A              <1>  call p_msg
  1016                                  
  1017                                  write_sample_rate:
  1018                                  	; 30/05/2024
  1019                                  	; 01/05/2017
  1020 00000591 A1[E420]                	mov	ax, [sample_rate]
  1021                                  	; ax = sample rate (hertz)
  1022 00000594 31D2                    	xor	dx, dx
  1023 00000596 B90A00                  	mov	cx, 10
  1024 00000599 F7F1                    	div	cx
  1025 0000059B 0016[211F]              	add	[msgHertz+4], dl
  1026 0000059F 29D2                    	sub	dx, dx
  1027 000005A1 F7F1                    	div	cx
  1028 000005A3 0016[201F]              	add	[msgHertz+3], dl
  1029 000005A7 29D2                    	sub	dx, dx
  1030 000005A9 F7F1                    	div	cx
  1031 000005AB 0016[1F1F]              	add	[msgHertz+2], dl
  1032 000005AF 29D2                    	sub	dx, dx
  1033 000005B1 F7F1                    	div	cx
  1034 000005B3 0016[1E1F]              	add	[msgHertz+1], dl
  1035 000005B7 0006[1D1F]              	add	[msgHertz], al
  1036                                  	
  1037                                  	; 30/05/2024
  1038                                  	sys_msg msgSampleRate, 0Fh
    26                              <1> 
    27 000005BB BE[0E1F]            <1>  mov si, %1
    28 000005BE B30F                <1>  mov bl, %2
    29 000005C0 30FF                <1>  xor bh, bh
    30 000005C2 B40E                <1>  mov ah, 0Eh
    31 000005C4 E8721A              <1>  call p_msg
  1039                                  
  1040                                  	; 19/11/2016
  1041 000005C7 BA[361F]                	mov	dx, msg16Bits
  1042 000005CA 803E[E820]10            	cmp	byte [bps], 16
  1043 000005CF 7403                    	je	short wsr_1
  1044 000005D1 BA[281F]                	mov	dx, msg8Bits
  1045                                  wsr_1:
  1046                                  	; 30/05/2024
  1047                                  	sys_msg dx, 0Fh
    26                              <1> 
    27 000005D4 89D6                <1>  mov si, %1
    28 000005D6 B30F                <1>  mov bl, %2
    29 000005D8 30FF                <1>  xor bh, bh
    30 000005DA B40E                <1>  mov ah, 0Eh
    31 000005DC E85A1A              <1>  call p_msg
  1048                                  
  1049 000005DF BA[311F]                	mov	dx, msgMono
  1050 000005E2 803E[E620]01            	cmp	byte [stmo], 1
  1051 000005E7 7403                    	je	short wsr_2
  1052 000005E9 BA[401F]                	mov	dx, msgStereo
  1053                                  wsr_2:
  1054                                  	; 30/05/2024
  1055                                  	sys_msg dx, 0Fh
    26                              <1> 
    27 000005EC 89D6                <1>  mov si, %1
    28 000005EE B30F                <1>  mov bl, %2
    29 000005F0 30FF                <1>  xor bh, bh
    30 000005F2 B40E                <1>  mov ah, 0Eh
    31 000005F4 E8421A              <1>  call p_msg
  1056                                  	; 30/05/2024
  1057                                  	sys_msg	nextline, 07h
    26                              <1> 
    27 000005F7 BE[471F]            <1>  mov si, %1
    28 000005FA B307                <1>  mov bl, %2
    29 000005FC 30FF                <1>  xor bh, bh
    30 000005FE B40E                <1>  mov ah, 0Eh
    31 00000600 E8361A              <1>  call p_msg
  1058 00000603 C3                              retn
  1059                                  
  1060                                  write_ac97_pci_dev_info:
  1061                                  	; 30/05/2024
  1062                                  	; 06/06/2017
  1063                                  	; 03/06/2017
  1064                                  	; BUS/DEV/FN
  1065                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  1066                                  	; DEV/VENDOR
  1067                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  1068                                  
  1069 00000604 66A1[E020]              	mov	eax, [dev_vendor]
  1070 00000608 30FF                    	xor	bh, bh
  1071 0000060A 88C3                    	mov	bl, al
  1072 0000060C 88DA                    	mov	dl, bl
  1073 0000060E 80E30F                  	and	bl, 0Fh
  1074 00000611 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1075 00000615 A2[8F1F]                	mov	[msgVendorId+3], al
  1076 00000618 88D3                    	mov	bl, dl
  1077 0000061A C0EB04                  	shr	bl, 4
  1078 0000061D 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1079 00000621 A2[8E1F]                	mov	[msgVendorId+2], al
  1080 00000624 88E3                    	mov	bl, ah
  1081 00000626 88DA                    	mov	dl, bl
  1082 00000628 80E30F                  	and	bl, 0Fh
  1083 0000062B 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1084 0000062F A2[8D1F]                	mov	[msgVendorId+1], al
  1085 00000632 88D3                    	mov	bl, dl
  1086 00000634 C0EB04                  	shr	bl, 4
  1087 00000637 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1088 0000063B A2[8C1F]                	mov	[msgVendorId], al
  1089 0000063E 66C1E810                	shr	eax, 16
  1090 00000642 88C3                    	mov	bl, al
  1091 00000644 88DA                    	mov	dl, bl
  1092 00000646 80E30F                  	and	bl, 0Fh
  1093 00000649 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1094 0000064D A2[A01F]                	mov	[msgDevId+3], al
  1095 00000650 88D3                    	mov	bl, dl
  1096 00000652 C0EB04                  	shr	bl, 4
  1097 00000655 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1098 00000659 A2[9F1F]                	mov	[msgDevId+2], al
  1099 0000065C 88E3                    	mov	bl, ah
  1100 0000065E 88DA                    	mov	dl, bl
  1101 00000660 80E30F                  	and	bl, 0Fh
  1102 00000663 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1103 00000667 A2[9E1F]                	mov	[msgDevId+1], al
  1104 0000066A 88D3                    	mov	bl, dl
  1105 0000066C C0EB04                  	shr	bl, 4
  1106 0000066F 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1107 00000673 A2[9D1F]                	mov	[msgDevId], al
  1108                                  
  1109 00000676 66A1[DC20]              	mov	eax, [bus_dev_fn]
  1110 0000067A 66C1E808                	shr	eax, 8
  1111 0000067E 88C3                    	mov	bl, al
  1112 00000680 88DA                    	mov	dl, bl
  1113 00000682 80E307                  	and	bl, 7 ; bit 0,1,2
  1114 00000685 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1115 00000689 A2[C41F]                	mov	[msgFncNo+1], al
  1116 0000068C 88D3                    	mov	bl, dl
  1117 0000068E C0EB03                  	shr	bl, 3
  1118 00000691 88DA                    	mov	dl, bl
  1119 00000693 80E30F                  	and	bl, 0Fh
  1120 00000696 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1121 0000069A A2[B61F]                	mov	[msgDevNo+1], al
  1122 0000069D 88D3                    	mov	bl, dl
  1123 0000069F C0EB04                  	shr	bl, 4
  1124 000006A2 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1125 000006A6 A2[B51F]                	mov	[msgDevNo], al
  1126 000006A9 88E3                    	mov	bl, ah
  1127 000006AB 88DA                    	mov	dl, bl
  1128 000006AD 80E30F                  	and	bl, 0Fh
  1129 000006B0 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1130 000006B4 A2[AA1F]                	mov	[msgBusNo+1], al
  1131 000006B7 88D3                    	mov	bl, dl
  1132 000006B9 C0EB04                  	shr	bl, 4
  1133 000006BC 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1134 000006C0 A2[A91F]                	mov	[msgBusNo], al
  1135                                  
  1136                                  	;mov	ax, [ac97_NamBar]
  1137 000006C3 A1[D220]                	mov	ax, [NAMBAR]
  1138 000006C6 88C3                    	mov	bl, al
  1139 000006C8 88DA                    	mov	dl, bl
  1140 000006CA 80E30F                  	and	bl, 0Fh
  1141 000006CD 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1142 000006D1 A2[D31F]                	mov	[msgNamBar+3], al
  1143 000006D4 88D3                    	mov	bl, dl
  1144 000006D6 C0EB04                  	shr	bl, 4
  1145 000006D9 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1146 000006DD A2[D21F]                	mov	[msgNamBar+2], al
  1147 000006E0 88E3                    	mov	bl, ah
  1148 000006E2 88DA                    	mov	dl, bl
  1149 000006E4 80E30F                  	and	bl, 0Fh
  1150 000006E7 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1151 000006EB A2[D11F]                	mov	[msgNamBar+1], al
  1152 000006EE 88D3                    	mov	bl, dl
  1153 000006F0 C0EB04                  	shr	bl, 4
  1154 000006F3 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1155 000006F7 A2[D01F]                	mov	[msgNamBar], al
  1156                                  
  1157                                  	;mov	ax, [ac97_NabmBar]
  1158 000006FA A1[D420]                	mov	ax, [NABMBAR]
  1159 000006FD 88C3                    	mov	bl, al
  1160 000006FF 88DA                    	mov	dl, bl
  1161 00000701 80E30F                  	and	bl, 0Fh
  1162 00000704 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1163 00000708 A2[E31F]                	mov	[msgNabmBar+3], al
  1164 0000070B 88D3                    	mov	bl, dl
  1165 0000070D C0EB04                  	shr	bl, 4
  1166 00000710 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1167 00000714 A2[E21F]                	mov	[msgNabmBar+2], al
  1168 00000717 88E3                    	mov	bl, ah
  1169 00000719 88DA                    	mov	dl, bl
  1170 0000071B 80E30F                  	and	bl, 0Fh
  1171 0000071E 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1172 00000722 A2[E11F]                	mov	[msgNabmBar+1], al
  1173 00000725 88D3                    	mov	bl, dl
  1174 00000727 C0EB04                  	shr	bl, 4
  1175 0000072A 8A87[4A1F]              	mov	al, [bx+hex_chars]
  1176 0000072E A2[E01F]                	mov	[msgNabmBar], al
  1177                                  
  1178 00000731 6631C0                  	xor	eax, eax
  1179 00000734 A0[7F20]                	mov	al, [ac97_int_ln_reg]
  1180 00000737 B10A                    	mov	cl, 10
  1181 00000739 F6F1                    	div	cl
  1182 0000073B 0106[EC1F]              	add	[msgIRQ], ax
  1183 0000073F 20C0                    	and	al, al
  1184 00000741 7508                    	jnz	short _w_ac97imsg_
  1185 00000743 A0[ED1F]                	mov	al, [msgIRQ+1]
  1186 00000746 B420                    	mov	ah, ' '
  1187 00000748 A3[EC1F]                	mov	[msgIRQ], ax
  1188                                  _w_ac97imsg_:
  1189                                  	; 30/05/2024
  1190                                  	sys_msg msgAC97Info, 07h
    26                              <1> 
    27 0000074B BE[5B1F]            <1>  mov si, %1
    28 0000074E B307                <1>  mov bl, %2
    29 00000750 30FF                <1>  xor bh, bh
    30 00000752 B40E                <1>  mov ah, 0Eh
    31 00000754 E8E218              <1>  call p_msg
  1191                                  
  1192 00000757 C3                              retn
  1193                                  
  1194                                  	; 30/05/2024
  1195                                  write_VRA_info:
  1196                                  	sys_msg	msgVRAheader, 07h
    26                              <1> 
    27 00000758 BE[F11F]            <1>  mov si, %1
    28 0000075B B307                <1>  mov bl, %2
    29 0000075D 30FF                <1>  xor bh, bh
    30 0000075F B40E                <1>  mov ah, 0Eh
    31 00000761 E8D518              <1>  call p_msg
  1197 00000764 803E[5E20]00            	cmp	byte [VRA], 0
  1198 00000769 760D                    	jna	short _w_VRAi_no
  1199                                  _w_VRAi_yes:
  1200                                  	sys_msg msgVRAyes, 07h
    26                              <1> 
    27 0000076B BE[FF1F]            <1>  mov si, %1
    28 0000076E B307                <1>  mov bl, %2
    29 00000770 30FF                <1>  xor bh, bh
    30 00000772 B40E                <1>  mov ah, 0Eh
    31 00000774 E8C218              <1>  call p_msg
  1201 00000777 C3                      	retn
  1202                                  _w_VRAi_no:
  1203                                  	sys_msg msgVRAno, 07h
    26                              <1> 
    27 00000778 BE[0520]            <1>  mov si, %1
    28 0000077B B307                <1>  mov bl, %2
    29 0000077D 30FF                <1>  xor bh, bh
    30 0000077F B40E                <1>  mov ah, 0Eh
    31 00000781 E8B518              <1>  call p_msg
  1204 00000784 C3                      	retn
  1205                                  
  1206                                  ; 02/02/2025
  1207                                  ; 30/05/2024 (playwav6.asm)
  1208                                  ; 18/11/2023 (ich_wav3.asm & ich_wav4.asm)
  1209                                  ; 15/11/2023 (ich_wav3.asm)	
  1210                                  ; 14/11/2023
  1211                                  ; 13/11/2023 - Erdogan Tan - (VRA, sample rate conversion)
  1212                                  ; --------------------------------------------------------
  1213                                  
  1214                                  ;;Note:	At the end of every buffer load,
  1215                                  ;;	during buffer switch/swap, there will be discontinuity
  1216                                  ;;	between the last converted sample and the 1st sample
  1217                                  ;;	of the next buffer.
  1218                                  ;;	(like as a dot noises vaguely between normal sound samples)
  1219                                  ;;	-To avoid this defect, the 1st sample of
  1220                                  ;;	the next buffer may be read from the wav file but
  1221                                  ;;	the file pointer would need to be set to 1 sample back
  1222                                  ;;	again via seek system call. Time comsumption problem! -
  1223                                  ;;
  1224                                  ;;	Erdogan Tan - 15/11/2023
  1225                                  ;;
  1226                                  ;;	((If entire wav data would be loaded at once.. conversion
  1227                                  ;;	defect/noise would disappear.. but for DOS, to keep
  1228                                  ;;	64KB buffer limit is important also it is important
  1229                                  ;;	for running under 1MB barrier without HIMEM.SYS or DPMI.
  1230                                  ;;	I have tested this program by using 2-30MB wav files.))
  1231                                  ;;
  1232                                  ;;	Test Computer:	ASUS desktop/mainboard, M2N4-SLI, 2010.
  1233                                  ;;			AMD Athlon 64 X2 2200 MHZ CPU.
  1234                                  ;;		       	NFORCE4 (CK804) AC97 audio hardware.
  1235                                  ;;			Realtek ALC850 codec.
  1236                                  ;;		       	Retro DOS v4.2 (MSDOS 6.22) operating system.
  1237                                  
  1238                                  load_8khz_mono_8_bit:
  1239                                  	; 02/02/2025
  1240                                  	; 15/11/2023
  1241                                  	; 14/11/2023
  1242                                  	; 13/11/2023
  1243 00000785 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1244                                  					; last of the file?
  1245 0000078A 7402                    	jz	short lff8m_0		; no
  1246 0000078C F9                      	stc
  1247 0000078D C3                      	retn
  1248                                  
  1249                                  lff8m_0:
  1250 0000078E 8EC0                    	mov	es, ax ; buffer segment
  1251 00000790 31FF                    	xor	di, di
  1252 00000792 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1253                                  	; ds = cs
  1254                                  
  1255                                  	; load file into memory
  1256 00000795 8B0E[CB02]                      mov	cx, [loadsize]
  1257 00000799 8B1E[7C20]              	mov	bx, [filehandle]
  1258 0000079D B43F                           	mov	ah, 3Fh
  1259 0000079F CD21                    	int	21h
  1260                                  	;jc	short lff8m_5 ; error !
  1261                                  	; 14/11/2023
  1262 000007A1 7303                    	jnc	short lff8m_6
  1263 000007A3 E98B00                  	jmp	lff8m_5
  1264                                  
  1265                                  lff8m_6:
  1266 000007A6 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1267 000007A8 21C0                    	and	ax, ax
  1268                                  	;jz	short lff8m_3
  1269                                  	; 15/11/2023
  1270 000007AA 747E                    	jz	short lff8_eof
  1271                                  
  1272 000007AC 89C1                    	mov	cx, ax	; byte count
  1273                                  lff8m_1:
  1274 000007AE AC                      	lodsb
  1275 000007AF A2[9519]                	mov	[previous_val], al
  1276 000007B2 2C80                    	sub	al, 80h
  1277 000007B4 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1278 000007B7 AB                      	stosw		; original sample (left channel)
  1279 000007B8 AB                      	stosw		; original sample (right channel)
  1280                                  	;xor	ax, ax
  1281                                  	; 02/02/2025
  1282 000007B9 8A04                    	mov	al, [si]
  1283 000007BB 49                      	dec	cx
  1284 000007BC 7502                    	jnz	short lff8m_2
  1285                                  	; 14/11/2023
  1286 000007BE B080                    	mov	al, 80h
  1287                                  lff8m_2:
  1288                                  	;mov	[next_val], ax
  1289 000007C0 88C7                    	mov	bh, al	; [next_val]
  1290 000007C2 8A26[9519]              	mov	ah, [previous_val]
  1291 000007C6 00E0                    	add	al, ah	; [previous_val]
  1292 000007C8 D0D8                    	rcr	al, 1
  1293 000007CA 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample
  1294 000007CC 00E0                    	add	al, ah	; [previous_val]
  1295 000007CE D0D8                    	rcr	al, 1	
  1296 000007D0 88C3                    	mov	bl, al 	; this is temporary interpolation value	
  1297 000007D2 00E0                    	add	al, ah	; [previous_val]
  1298 000007D4 D0D8                    	rcr	al, 1
  1299 000007D6 2C80                    	sub	al, 80h
  1300 000007D8 C1E008                  	shl	ax, 8	
  1301 000007DB AB                      	stosw		; this is 1st interpolated sample (L)
  1302 000007DC AB                      	stosw		; this is 1st interpolated sample (R)
  1303 000007DD 88D8                    	mov	al, bl
  1304 000007DF 00D0                    	add	al, dl
  1305 000007E1 D0D8                    	rcr	al, 1
  1306 000007E3 2C80                    	sub	al, 80h
  1307 000007E5 C1E008                  	shl	ax, 8
  1308 000007E8 AB                      	stosw		; this is 2nd interpolated sample (L)
  1309 000007E9 AB                      	stosw		; this is 2nd interpolated sample (R)
  1310 000007EA 88D0                    	mov	al, dl
  1311 000007EC 2C80                    	sub	al, 80h
  1312 000007EE C1E008                  	shl	ax, 8
  1313 000007F1 AB                      	stosw		; this is middle (3th) interpolated sample (L)
  1314 000007F2 AB                      	stosw		; this is middle (3th) interpolated sample (R)
  1315                                  	;mov	al, [next_val]
  1316 000007F3 88F8                    	mov	al, bh
  1317 000007F5 00D0                    	add	al, dl
  1318 000007F7 D0D8                    	rcr	al, 1
  1319 000007F9 88C3                    	mov	bl, al	; this is temporary interpolation value
  1320 000007FB 00D0                    	add	al, dl
  1321 000007FD D0D8                    	rcr	al, 1
  1322 000007FF 2C80                    	sub	al, 80h
  1323 00000801 C1E008                  	shl	ax, 8
  1324 00000804 AB                      	stosw		; this is 4th interpolated sample (L)
  1325 00000805 AB                      	stosw		; this is 4th interpolated sample (R)
  1326                                  	;mov	al, [next_val]
  1327 00000806 88F8                    	mov	al, bh
  1328 00000808 00D8                    	add	al, bl
  1329 0000080A D0D8                    	rcr	al, 1
  1330 0000080C 2C80                    	sub	al, 80h
  1331 0000080E C1E008                  	shl	ax, 8
  1332 00000811 AB                      	stosw		; this is 5th interpolated sample (L)
  1333 00000812 AB                      	stosw		; this is 5th interpolated sample (R)
  1334                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1335 00000813 09C9                    	or	cx, cx
  1336 00000815 7597                    	jnz	short lff8m_1
  1337                                  
  1338                                  	; --------------
  1339                                  
  1340                                  lff8s_3:
  1341                                  lff8m_3:
  1342                                  lff8s2_3:
  1343                                  lff8m2_3:
  1344                                  lff16s_3:
  1345                                  lff16m_3:
  1346                                  lff16s2_3:
  1347                                  lff16m2_3:
  1348                                  lff24_3:
  1349                                  lff32_3:
  1350                                  lff44_3:
  1351                                  lff22_3:
  1352                                  lff11_3:
  1353                                  lff12_3:	; 02/02/2025
  1354 00000817 8B0E[CD02]              	mov	cx, [buffersize] ; 16 bit (48 kHZ, stereo) sample size
  1355 0000081B D1E1                    	shl	cx, 1	; byte count
  1356 0000081D 29F9                    	sub	cx, di
  1357 0000081F 7606                    	jna	short lff8m_4
  1358                                  	;inc	cx
  1359 00000821 D1E9                    	shr	cx, 1
  1360 00000823 31C0                    	xor	ax, ax	; fill (remain part of) buffer with zeros	
  1361 00000825 F3AB                    	rep	stosw
  1362                                  lff8m_4:
  1363 00000827 0E                      	push	cs
  1364 00000828 07                      	pop	es
  1365 00000829 C3                      	retn
  1366                                  
  1367                                  lff8_eof:
  1368                                  lff16_eof:
  1369                                  lff24_eof:
  1370                                  lff32_eof:
  1371                                  lff44_eof:
  1372                                  lff22_eof:
  1373                                  lff11_eof:
  1374                                  lff12_eof:	; 02/02/2025
  1375                                  	; 15/11/2023
  1376 0000082A C606[7E20]01            	mov	byte [flags], ENDOFFILE
  1377 0000082F EBE6                    	jmp	short lff8m_3
  1378                                  
  1379                                  lff8s_5:
  1380                                  lff8m_5:
  1381                                  lff8s2_5:
  1382                                  lff8m2_5:
  1383                                  lff16s_5:
  1384                                  lff16m_5:
  1385                                  lff16s2_5:
  1386                                  lff16m2_5:
  1387                                  lff24_5:
  1388                                  lff32_5:
  1389                                  lff44_5:
  1390                                  lff22_5:
  1391                                  lff11_5:
  1392                                  lff12_5:	; 02/02/2025
  1393 00000831 B021                    	mov	al, '!'  ; error
  1394 00000833 E8B0FB                  	call	tL0
  1395                                  	
  1396                                  	;jmp	short lff8m_3
  1397                                  	; 15/11/2023
  1398 00000836 EBF2                    	jmp	lff8_eof
  1399                                  
  1400                                  	; --------------
  1401                                  
  1402                                  load_8khz_stereo_8_bit:
  1403                                  	; 02/02/2025
  1404                                  	; 15/11/2023
  1405                                  	; 14/11/2023
  1406                                  	; 13/11/2023
  1407 00000838 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1408                                  					; last of the file?
  1409 0000083D 7402                    	jz	short lff8s_0		; no
  1410 0000083F F9                      	stc
  1411 00000840 C3                      	retn
  1412                                  
  1413                                  lff8s_0:
  1414 00000841 8EC0                    	mov	es, ax ; buffer segment
  1415 00000843 31FF                    	xor	di, di
  1416 00000845 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1417                                  	; ds = cs
  1418                                  
  1419                                  	; load file into memory
  1420 00000848 8B0E[CB02]                      mov	cx, [loadsize]
  1421 0000084C 8B1E[7C20]              	mov	bx, [filehandle]
  1422 00000850 B43F                           	mov	ah, 3Fh
  1423 00000852 CD21                    	int	21h
  1424 00000854 72DB                    	jc	short lff8s_5 ; error !
  1425                                  
  1426 00000856 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1427                                  	
  1428 00000858 D1E8                    	shr	ax, 1
  1429                                  	;;and	ax, ax
  1430                                  	;jz	short lff8s_3
  1431                                  	; 15/11/2023
  1432 0000085A 74CE                    	jz	short lff8_eof
  1433                                  
  1434 0000085C 89C1                    	mov	cx, ax	; word count
  1435                                  lff8s_1:
  1436 0000085E AC                      	lodsb
  1437 0000085F A2[9519]                	mov	[previous_val_l], al
  1438 00000862 2C80                    	sub	al, 80h
  1439 00000864 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1440 00000867 AB                      	stosw		; original sample (L)
  1441 00000868 AC                      	lodsb
  1442 00000869 A2[9719]                	mov	[previous_val_r], al
  1443 0000086C 2C80                    	sub	al, 80h
  1444 0000086E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1445 00000871 AB                      	stosw		; original sample (R)
  1446                                  
  1447                                  	;xor	ax, ax
  1448                                  	; 02/02/2025
  1449 00000872 8B04                    	mov	ax, [si]
  1450 00000874 49                      	dec	cx
  1451 00000875 7503                    	jnz	short lff8s_2
  1452                                  		; convert 8 bit sample to 16 bit sample
  1453                                  	; 14/11/2023
  1454 00000877 B88080                  	mov	ax, 8080h
  1455                                  lff8s_2:
  1456 0000087A A2[9919]                	mov	[next_val_l], al
  1457 0000087D 8826[9B19]              	mov	[next_val_r], ah
  1458 00000881 8A26[9519]              	mov	ah, [previous_val_l]
  1459 00000885 00E0                    	add	al, ah
  1460 00000887 D0D8                    	rcr	al, 1
  1461 00000889 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample (L)
  1462 0000088B 00E0                    	add	al, ah
  1463 0000088D D0D8                    	rcr	al, 1	
  1464 0000088F 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1465 00000891 00E0                    	add	al, ah
  1466 00000893 D0D8                    	rcr	al, 1
  1467 00000895 2C80                    	sub	al, 80h
  1468 00000897 C1E008                  	shl	ax, 8
  1469 0000089A AB                      	stosw		; this is 1st interpolated sample (L)
  1470 0000089B A0[9B19]                	mov	al, [next_val_r]
  1471 0000089E 8A26[9719]              	mov	ah, [previous_val_r]
  1472 000008A2 00E0                    	add	al, ah
  1473 000008A4 D0D8                    	rcr	al, 1
  1474 000008A6 88C6                    	mov	dh, al	; this is interpolated middle (3th) sample (R)
  1475 000008A8 00E0                    	add	al, ah
  1476 000008AA D0D8                    	rcr	al, 1
  1477 000008AC 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1478 000008AE 00E0                    	add	al, ah
  1479 000008B0 D0D8                    	rcr	al, 1
  1480 000008B2 2C80                    	sub	al, 80h
  1481 000008B4 C1E008                  	shl	ax, 8
  1482 000008B7 AB                      	stosw		; this is 1st interpolated sample (R)
  1483 000008B8 88D8                    	mov	al, bl
  1484 000008BA 00D0                    	add	al, dl
  1485 000008BC D0D8                    	rcr	al, 1
  1486 000008BE 2C80                    	sub	al, 80h
  1487 000008C0 C1E008                  	shl	ax, 8
  1488 000008C3 AB                      	stosw		; this is 2nd interpolated sample (L)
  1489 000008C4 88F8                    	mov	al, bh
  1490 000008C6 00F0                    	add	al, dh
  1491 000008C8 D0D8                    	rcr	al, 1
  1492 000008CA 2C80                    	sub	al, 80h
  1493 000008CC C1E008                  	shl	ax, 8
  1494 000008CF AB                      	stosw 		; this is 2nd interpolated sample (R)
  1495 000008D0 88D0                    	mov	al, dl
  1496 000008D2 2C80                    	sub	al, 80h
  1497 000008D4 C1E008                  	shl	ax, 8
  1498 000008D7 AB                      	stosw		; this is middle (3th) interpolated sample (L)
  1499 000008D8 88F0                    	mov	al, dh
  1500 000008DA 2C80                    	sub	al, 80h
  1501 000008DC C1E008                  	shl	ax, 8
  1502 000008DF AB                      	stosw		; this is middle (3th) interpolated sample (R)
  1503 000008E0 A0[9919]                	mov	al, [next_val_l]
  1504 000008E3 00D0                    	add	al, dl
  1505 000008E5 D0D8                    	rcr	al, 1
  1506 000008E7 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1507 000008E9 00D0                    	add	al, dl
  1508 000008EB D0D8                    	rcr	al, 1
  1509 000008ED 2C80                    	sub	al, 80h
  1510 000008EF C1E008                  	shl	ax, 8
  1511 000008F2 AB                      	stosw		; this is 4th interpolated sample (L)
  1512 000008F3 A0[9B19]                	mov	al, [next_val_r]
  1513 000008F6 00F0                    	add	al, dh
  1514 000008F8 D0D8                    	rcr	al, 1
  1515 000008FA 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1516 000008FC 00F0                    	add	al, dh
  1517 000008FE D0D8                    	rcr	al, 1
  1518 00000900 2C80                    	sub	al, 80h
  1519 00000902 C1E008                  	shl	ax, 8
  1520 00000905 AB                      	stosw		; this is 4th interpolated sample (R)
  1521 00000906 A0[9919]                	mov	al, [next_val_l]
  1522 00000909 00D8                    	add	al, bl
  1523 0000090B D0D8                    	rcr	al, 1
  1524 0000090D 2C80                    	sub	al, 80h
  1525 0000090F C1E008                  	shl	ax, 8
  1526 00000912 AB                      	stosw		; this is 5th interpolated sample (L)
  1527 00000913 A0[9B19]                	mov	al, [next_val_r]
  1528 00000916 00F8                    	add	al, bh
  1529 00000918 D0D8                    	rcr	al, 1
  1530 0000091A 2C80                    	sub	al, 80h
  1531 0000091C C1E008                  	shl	ax, 8
  1532 0000091F AB                      	stosw		; this is 5th interpolated sample (R)
  1533                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1534 00000920 E303                    	jcxz	lff8s_6
  1535 00000922 E939FF                  	jmp	lff8s_1
  1536                                  lff8s_6:
  1537 00000925 E9EFFE                  	jmp	lff8s_3
  1538                                  
  1539                                  load_8khz_mono_16_bit:
  1540                                  	; 02/02/2025
  1541                                  	; 13/11/2023
  1542 00000928 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1543                                  					; last of the file?
  1544 0000092D 7402                    	jz	short lff8m2_0		; no
  1545 0000092F F9                      	stc
  1546 00000930 C3                      	retn
  1547                                  
  1548                                  lff8m2_0:
  1549 00000931 8EC0                    	mov	es, ax ; buffer segment
  1550 00000933 31FF                    	xor	di, di
  1551 00000935 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1552                                  	; ds = cs
  1553                                  
  1554                                  	; load file into memory
  1555 00000938 8B0E[CB02]                      mov	cx, [loadsize]
  1556 0000093C 8B1E[7C20]              	mov	bx, [filehandle]
  1557 00000940 B43F                           	mov	ah, 3Fh
  1558 00000942 CD21                    	int	21h
  1559 00000944 7270                    	jc	short lff8m2_7 ; error !
  1560                                  
  1561 00000946 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1562                                  	
  1563 00000948 D1E8                    	shr	ax, 1
  1564                                  	;and	ax, ax
  1565 0000094A 7503                    	jnz	short lff8m2_8
  1566                                  	;jmp	lff8m2_3
  1567                                  	; 15/11/2023
  1568 0000094C E9DBFE                  	jmp	lff8_eof
  1569                                  
  1570                                  lff8m2_8:
  1571 0000094F 89C1                    	mov	cx, ax	; word count
  1572                                  lff8m2_1:
  1573 00000951 AD                      	lodsw
  1574 00000952 AB                      	stosw		; original sample (left channel)
  1575 00000953 AB                      	stosw		; original sample (right channel)
  1576 00000954 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1577 00000957 A3[9519]                	mov	[previous_val], ax
  1578                                  	; 02/02/2025
  1579 0000095A 8B04                    	mov	ax, [si]
  1580 0000095C 49                      	dec	cx
  1581 0000095D 7502                    	jnz	short lff8m2_2
  1582 0000095F 31C0                    	xor	ax, ax
  1583                                  lff8m2_2:
  1584 00000961 80C480                  	add	ah, 80h ; convert sound level to 0-65535 format
  1585 00000964 89C5                    	mov	bp, ax	; [next_val]
  1586 00000966 0306[9519]              	add	ax, [previous_val]
  1587 0000096A D1D8                    	rcr	ax, 1
  1588 0000096C 89C2                    	mov	dx, ax	; this is interpolated middle (3th) sample
  1589 0000096E 0306[9519]              	add	ax, [previous_val]
  1590 00000972 D1D8                    	rcr	ax, 1	; this is temporary interpolation value
  1591 00000974 89C3                    	mov	bx, ax 		
  1592 00000976 0306[9519]              	add	ax, [previous_val]
  1593 0000097A D1D8                    	rcr	ax, 1
  1594 0000097C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1595 0000097F AB                      	stosw		; this is 1st interpolated sample (L)
  1596 00000980 AB                      	stosw		; this is 1st interpolated sample (R)
  1597 00000981 89D8                    	mov	ax, bx
  1598 00000983 01D0                    	add	ax, dx
  1599 00000985 D1D8                    	rcr	ax, 1
  1600 00000987 80EC80                  	sub	ah, 80h
  1601 0000098A AB                      	stosw		; this is 2nd interpolated sample (L)
  1602 0000098B AB                      	stosw		; this is 2nd interpolated sample (R)
  1603 0000098C 89D0                    	mov	ax, dx
  1604 0000098E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1605 00000991 AB                      	stosw		; this is middle (3th) interpolated sample (L)
  1606 00000992 AB                      	stosw		; this is middle (3th) interpolated sample (R)
  1607 00000993 89E8                    	mov	ax, bp
  1608 00000995 01D0                    	add	ax, dx
  1609 00000997 D1D8                    	rcr	ax, 1
  1610 00000999 89C3                    	mov	bx, ax	; this is temporary interpolation value
  1611 0000099B 01D0                    	add	ax, dx
  1612 0000099D D1D8                    	rcr	ax, 1
  1613 0000099F 80EC80                  	sub	ah, 80h
  1614 000009A2 AB                      	stosw		; this is 4th interpolated sample (L)
  1615 000009A3 AB                      	stosw		; this is 4th interpolated sample (R)
  1616 000009A4 89E8                    	mov	ax, bp
  1617 000009A6 01D8                    	add	ax, bx
  1618 000009A8 D1D8                    	rcr	ax, 1
  1619 000009AA 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1620 000009AD AB                      	stosw		; this is 5th interpolated sample (L)
  1621 000009AE AB                      	stosw		; this is 5th interpolated sample (R)
  1622                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1623 000009AF 09C9                    	or	cx, cx
  1624 000009B1 759E                    	jnz	short lff8m2_1
  1625 000009B3 E961FE                  	jmp	lff8m2_3
  1626                                  
  1627                                  lff8m2_7:
  1628                                  lff8s2_7:
  1629 000009B6 E978FE                  	jmp	lff8m2_5  ; error
  1630                                  
  1631                                  load_8khz_stereo_16_bit:
  1632                                  	; 02/02/2025
  1633                                  	; 16/11/2023
  1634                                  	; 15/11/2023
  1635                                  	; 13/11/2023
  1636 000009B9 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1637                                  					; last of the file?
  1638 000009BE 7402                    	jz	short lff8s2_0		; no
  1639 000009C0 F9                      	stc
  1640 000009C1 C3                      	retn
  1641                                  
  1642                                  lff8s2_0:
  1643 000009C2 8EC0                    	mov	es, ax ; buffer segment
  1644 000009C4 31FF                    	xor	di, di
  1645 000009C6 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1646                                  	; ds = cs
  1647                                  
  1648                                  	; load file into memory
  1649 000009C9 8B0E[CB02]                      mov	cx, [loadsize]
  1650 000009CD 8B1E[7C20]              	mov	bx, [filehandle]
  1651 000009D1 B43F                           	mov	ah, 3Fh
  1652 000009D3 CD21                    	int	21h
  1653 000009D5 72DF                    	jc	short lff8s2_7 ; error !
  1654                                  
  1655 000009D7 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1656                                  	
  1657 000009D9 C1E802                  	shr	ax, 2	; 16/11/2023
  1658                                  	;and	ax, ax
  1659 000009DC 7503                    	jnz	short lff8s2_8
  1660                                  	;jmp	lff8s2_3
  1661                                  	; 15/11/2023
  1662 000009DE E949FE                  	jmp	lff8_eof
  1663                                  
  1664                                  lff8s2_8:
  1665 000009E1 89C1                    	mov	cx, ax ; dword count
  1666                                  lff8s2_1:
  1667 000009E3 AD                      	lodsw
  1668 000009E4 AB                      	stosw		; original sample (L)
  1669                                  	; 15/11/2023
  1670 000009E5 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1671 000009E8 A3[9519]                	mov	[previous_val_l], ax
  1672 000009EB AD                      	lodsw
  1673 000009EC AB                      	stosw		; original sample (R)
  1674 000009ED 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1675 000009F0 A3[9719]                	mov	[previous_val_r], ax
  1676                                  	; 02/02/2025
  1677 000009F3 8B04                    	mov	ax, [si]
  1678 000009F5 8B5402                  	mov	dx, [si+2]
  1679                                  	; 16/11/2023
  1680 000009F8 49                      	dec	cx
  1681 000009F9 7504                    	jnz	short lff8s2_2
  1682 000009FB 31D2                    	xor	dx, dx
  1683 000009FD 31C0                    	xor	ax, ax
  1684                                  lff8s2_2:
  1685 000009FF 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1686 00000A02 A3[9919]                	mov	[next_val_l], ax
  1687 00000A05 80C680                  	add	dh, 80h	; convert sound level to 0-65535 format
  1688 00000A08 8916[9B19]              	mov	[next_val_r], dx
  1689 00000A0C 0306[9519]              	add	ax, [previous_val_l]
  1690 00000A10 D1D8                    	rcr	ax, 1
  1691 00000A12 89C2                    	mov	dx, ax	; this is interpolated middle (3th) sample (L)
  1692 00000A14 0306[9519]              	add	ax, [previous_val_l]
  1693 00000A18 D1D8                    	rcr	ax, 1	
  1694 00000A1A 89C3                    	mov	bx, ax 	; this is temporary interpolation value (L)
  1695 00000A1C 0306[9519]              	add	ax, [previous_val_l]
  1696 00000A20 D1D8                    	rcr	ax, 1
  1697 00000A22 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1698 00000A25 AB                      	stosw		; this is 1st interpolated sample (L)
  1699 00000A26 A1[9B19]                	mov	ax, [next_val_r]
  1700 00000A29 0306[9719]              	add	ax, [previous_val_r]
  1701 00000A2D D1D8                    	rcr	ax, 1
  1702 00000A2F 89C5                    	mov	bp, ax	; this is interpolated middle (3th) sample (R)
  1703 00000A31 0306[9719]              	add	ax, [previous_val_r]
  1704 00000A35 D1D8                    	rcr	ax, 1
  1705 00000A37 50                      	push	ax ; *	; this is temporary interpolation value (R)
  1706 00000A38 0306[9719]              	add	ax, [previous_val_r]
  1707 00000A3C D1D8                    	rcr	ax, 1
  1708 00000A3E 80EC80                  	sub	ah, 80h
  1709 00000A41 AB                      	stosw		; this is 1st interpolated sample (R)
  1710 00000A42 89D8                    	mov	ax, bx
  1711 00000A44 01D0                    	add	ax, dx
  1712 00000A46 D1D8                    	rcr	ax, 1
  1713 00000A48 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1714 00000A4B AB                      	stosw		; this is 2nd interpolated sample (L)
  1715 00000A4C 58                      	pop	ax ; *
  1716 00000A4D 01E8                    	add	ax, bp
  1717 00000A4F D1D8                    	rcr	ax, 1
  1718 00000A51 80EC80                  	sub	ah, 80h
  1719 00000A54 AB                      	stosw 		; this is 2nd interpolated sample (R)
  1720 00000A55 89D0                    	mov	ax, dx
  1721 00000A57 80EC80                  	sub	ah, 80h
  1722 00000A5A AB                      	stosw		; this is middle (3th) interpolated sample (L)
  1723 00000A5B 89E8                    	mov	ax, bp
  1724 00000A5D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1725 00000A60 AB                      	stosw		; this is middle (3th) interpolated sample (R)
  1726 00000A61 A1[9919]                	mov	ax, [next_val_l]
  1727 00000A64 01D0                    	add	ax, dx
  1728 00000A66 D1D8                    	rcr	ax, 1
  1729 00000A68 89C3                    	mov	bx, ax	; this is temporary interpolation value (L)
  1730 00000A6A 01D0                    	add	ax, dx
  1731 00000A6C D1D8                    	rcr	ax, 1
  1732 00000A6E 80EC80                  	sub	ah, 80h
  1733 00000A71 AB                      	stosw		; this is 4th interpolated sample (L)
  1734 00000A72 A1[9B19]                	mov	ax, [next_val_r]
  1735 00000A75 01E8                    	add	ax, bp
  1736 00000A77 D1D8                    	rcr	ax, 1
  1737 00000A79 50                      	push	ax ; ** ; this is temporary interpolation value (R)
  1738 00000A7A 01E8                    	add	ax, bp
  1739 00000A7C D1D8                    	rcr	ax, 1
  1740 00000A7E 80EC80                  	sub	ah, 80h
  1741 00000A81 AB                      	stosw		; this is 4th interpolated sample (R)
  1742 00000A82 A1[9919]                	mov	ax, [next_val_l]
  1743 00000A85 01D8                    	add	ax, bx
  1744 00000A87 D1D8                    	rcr	ax, 1
  1745 00000A89 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1746 00000A8C AB                      	stosw		; this is 5th interpolated sample (L)
  1747 00000A8D 58                      	pop	ax ; **
  1748 00000A8E 0306[9B19]              	add	ax, [next_val_r]
  1749 00000A92 D1D8                    	rcr	ax, 1
  1750 00000A94 80EC80                  	sub	ah, 80h
  1751 00000A97 AB                      	stosw		; this is 5th interpolated sample (R)
  1752                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1753 00000A98 E303                    	jcxz	lff8_s2_9
  1754 00000A9A E946FF                  	jmp	lff8s2_1
  1755                                  lff8_s2_9:
  1756 00000A9D E977FD                  	jmp	lff8s2_3
  1757                                  
  1758                                  ; .....................
  1759                                  
  1760                                  load_16khz_mono_8_bit:
  1761                                  	; 02/02/2025
  1762                                  	; 14/11/2023
  1763                                  	; 13/11/2023
  1764 00000AA0 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1765                                  					; last of the file?
  1766 00000AA5 7402                    	jz	short lff16m_0		; no
  1767 00000AA7 F9                      	stc
  1768 00000AA8 C3                      	retn
  1769                                  
  1770                                  lff16m_0:
  1771 00000AA9 8EC0                    	mov	es, ax ; buffer segment
  1772 00000AAB 31FF                    	xor	di, di
  1773 00000AAD BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1774                                  	; ds = cs
  1775                                  
  1776                                  	; load file into memory
  1777 00000AB0 8B0E[CB02]                      mov	cx, [loadsize]
  1778 00000AB4 8B1E[7C20]              	mov	bx, [filehandle]
  1779 00000AB8 B43F                           	mov	ah, 3Fh
  1780 00000ABA CD21                    	int	21h
  1781 00000ABC 7243                    	jc	short lff16m_7 ; error !
  1782                                  
  1783 00000ABE 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1784                                  	
  1785 00000AC0 21C0                    	and	ax, ax
  1786 00000AC2 7503                    	jnz	short lff16m_8
  1787                                  	;jmp	lff16m_3
  1788                                  	; 15/11/2023
  1789 00000AC4 E963FD                  	jmp	lff16_eof
  1790                                  
  1791                                  lff16m_8:
  1792 00000AC7 89C1                    	mov	cx, ax		; byte count
  1793                                  lff16m_1:
  1794 00000AC9 AC                      	lodsb
  1795                                  	;mov	[previous_val], al
  1796 00000ACA 88C3                    	mov	bl, al
  1797 00000ACC 2C80                    	sub	al, 80h
  1798 00000ACE C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1799 00000AD1 AB                      	stosw		; original sample (left channel)
  1800 00000AD2 AB                      	stosw		; original sample (right channel)
  1801                                  	;xor	ax, ax
  1802                                  	; 02/02/2025
  1803 00000AD3 8A04                    	mov	al, [si]
  1804 00000AD5 49                      	dec	cx
  1805 00000AD6 7502                    	jnz	short lff16m_2
  1806                                  	; 14/11/2023
  1807 00000AD8 B080                    	mov	al, 80h
  1808                                  lff16m_2:
  1809                                  	;mov	[next_val], al
  1810 00000ADA 88C7                    	mov	bh, al
  1811                                  	;add	al, [previous_val]
  1812 00000ADC 00D8                    	add	al, bl
  1813 00000ADE D0D8                    	rcr	al, 1
  1814 00000AE0 88C2                    	mov	dl, al	; this is interpolated middle (temp) sample
  1815                                  	;add	al, [previous_val]
  1816 00000AE2 00D8                    	add	al, bl
  1817 00000AE4 D0D8                    	rcr	al, 1
  1818 00000AE6 2C80                    	sub	al, 80h
  1819 00000AE8 C1E008                  	shl	ax, 8
  1820 00000AEB AB                      	stosw		; this is 1st interpolated sample (L)
  1821 00000AEC AB                      	stosw		; this is 1st interpolated sample (R)
  1822                                  	;mov	al, [next_val]
  1823 00000AED 88F8                    	mov	al, bh
  1824 00000AEF 00D0                    	add	al, dl
  1825 00000AF1 D0D8                    	rcr	al, 1
  1826 00000AF3 2C80                    	sub	al, 80h
  1827 00000AF5 C1E008                  	shl	ax, 8
  1828 00000AF8 AB                      	stosw		; this is 2nd interpolated sample (L)
  1829 00000AF9 AB                      	stosw		; this is 2nd interpolated sample (R)
  1830                                  	
  1831                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1832 00000AFA 09C9                    	or	cx, cx
  1833 00000AFC 75CB                    	jnz	short lff16m_1
  1834 00000AFE E916FD                  	jmp	lff16m_3
  1835                                  
  1836                                  lff16m_7:
  1837                                  lff16s_7:
  1838 00000B01 E92DFD                  	jmp	lff16m_5  ; error
  1839                                  
  1840                                  load_16khz_stereo_8_bit:
  1841                                  	; 02/02/2025
  1842                                  	; 14/11/2023
  1843                                  	; 13/11/2023
  1844 00000B04 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1845                                  					; last of the file?
  1846 00000B09 7402                    	jz	short lff16s_0		; no
  1847 00000B0B F9                      	stc
  1848 00000B0C C3                      	retn
  1849                                  
  1850                                  lff16s_0:
  1851 00000B0D 8EC0                    	mov	es, ax ; buffer segment
  1852 00000B0F 31FF                    	xor	di, di
  1853 00000B11 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1854                                  	; ds = cs
  1855                                  
  1856                                  	; load file into memory
  1857 00000B14 8B0E[CB02]                      mov	cx, [loadsize]
  1858 00000B18 8B1E[7C20]              	mov	bx, [filehandle]
  1859 00000B1C B43F                           	mov	ah, 3Fh
  1860 00000B1E CD21                    	int	21h
  1861 00000B20 72DF                    	jc	short lff16s_7 ; error !
  1862                                  
  1863 00000B22 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1864                                  	
  1865 00000B24 D1E8                    	shr	ax, 1
  1866                                  	;and	ax, ax
  1867 00000B26 7503                    	jnz	short lff16s_8
  1868                                  	;jmp	lff16s_3
  1869                                  	; 15/11/2023
  1870 00000B28 E9FFFC                  	jmp	lff16_eof
  1871                                  
  1872                                  lff16s_8:
  1873 00000B2B 89C1                    	mov	cx, ax	; word count
  1874                                  lff16s_1:
  1875 00000B2D AC                      	lodsb
  1876 00000B2E A2[9519]                	mov	[previous_val_l], al
  1877 00000B31 2C80                    	sub	al, 80h
  1878 00000B33 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1879 00000B36 AB                      	stosw		; original sample (L)
  1880 00000B37 AC                      	lodsb
  1881 00000B38 A2[9719]                	mov	[previous_val_r], al
  1882 00000B3B 2C80                    	sub	al, 80h
  1883 00000B3D C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1884 00000B40 AB                      	stosw		; original sample (R)
  1885                                  
  1886                                  	;xor	ax, ax
  1887                                  	; 02/02/2025
  1888 00000B41 8B04                    	mov	ax, [si]
  1889 00000B43 49                      	dec	cx
  1890 00000B44 7503                    	jnz	short lff16s_2
  1891                                  		; convert 8 bit sample to 16 bit sample
  1892                                  	; 14/11/2023
  1893 00000B46 B88080                  	mov	ax, 8080h
  1894                                  lff16s_2:
  1895                                  	;mov	[next_val_l], al
  1896                                  	;mov	[next_val_r], ah
  1897 00000B49 89C3                    	mov	bx, ax
  1898 00000B4B 0206[9519]              	add	al, [previous_val_l]
  1899 00000B4F D0D8                    	rcr	al, 1
  1900 00000B51 88C2                    	mov	dl, al	; this is temporary interpolation value (L)
  1901 00000B53 0206[9519]              	add	al, [previous_val_l]
  1902 00000B57 D0D8                    	rcr	al, 1
  1903 00000B59 2C80                    	sub	al, 80h
  1904 00000B5B C1E008                  	shl	ax, 8
  1905 00000B5E AB                      	stosw		; this is 1st interpolated sample (L)
  1906 00000B5F 88F8                    	mov	al, bh	; [next_val_r]
  1907 00000B61 0206[9719]              	add	al, [previous_val_r]
  1908 00000B65 D0D8                    	rcr	al, 1
  1909 00000B67 88C6                    	mov	dh, al	; this is temporary interpolation value (R)
  1910 00000B69 0206[9719]              	add	al, [previous_val_r]
  1911 00000B6D D0D8                    	rcr	al, 1
  1912 00000B6F 2C80                    	sub	al, 80h
  1913 00000B71 C1E008                  	shl	ax, 8
  1914 00000B74 AB                      	stosw		; this is 1st interpolated sample (R)
  1915 00000B75 88D0                    	mov	al, dl
  1916 00000B77 00D8                    	add	al, bl	; [next_val_l]
  1917 00000B79 D0D8                    	rcr	al, 1
  1918 00000B7B 2C80                    	sub	al, 80h
  1919 00000B7D C1E008                  	shl	ax, 8
  1920 00000B80 AB                      	stosw		; this is 2nd interpolated sample (L)
  1921 00000B81 88F0                    	mov	al, dh
  1922 00000B83 00F8                    	add	al, bh	; [next_val_r]
  1923 00000B85 D0D8                    	rcr	al, 1
  1924 00000B87 2C80                    	sub	al, 80h
  1925 00000B89 C1E008                  	shl	ax, 8
  1926 00000B8C AB                      	stosw 		; this is 2nd interpolated sample (R)
  1927                                  	
  1928                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1929 00000B8D 09C9                    	or	cx, cx
  1930 00000B8F 759C                    	jnz	short lff16s_1
  1931 00000B91 E983FC                  	jmp	lff16s_3
  1932                                  
  1933                                  load_16khz_mono_16_bit:
  1934                                  	; 02/02/2025
  1935                                  	; 15/11/2023
  1936                                  	; 13/11/2023
  1937 00000B94 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  1938                                  					; last of the file?
  1939 00000B99 7402                    	jz	short lff16m2_0		; no
  1940 00000B9B F9                      	stc
  1941 00000B9C C3                      	retn
  1942                                  
  1943                                  lff16m2_0:
  1944 00000B9D 8EC0                    	mov	es, ax ; buffer segment
  1945 00000B9F 31FF                    	xor	di, di
  1946 00000BA1 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  1947                                  	; ds = cs
  1948                                  
  1949                                  	; load file into memory
  1950 00000BA4 8B0E[CB02]                      mov	cx, [loadsize]
  1951 00000BA8 8B1E[7C20]              	mov	bx, [filehandle]
  1952 00000BAC B43F                           	mov	ah, 3Fh
  1953 00000BAE CD21                    	int	21h
  1954 00000BB0 7240                    	jc	short lff16m2_7 ; error !
  1955                                  
  1956 00000BB2 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  1957                                  	
  1958 00000BB4 D1E8                    	shr	ax, 1
  1959                                  	;and	ax, ax
  1960 00000BB6 7503                    	jnz	short lff16m2_8
  1961                                  	;jmp	lff16m2_3
  1962                                  	; 15/11/2023
  1963 00000BB8 E96FFC                  	jmp	lff16_eof
  1964                                  
  1965                                  lff16m2_8:
  1966 00000BBB 89C1                    	mov	cx, ax	; word count
  1967                                  lff16m2_1:
  1968 00000BBD AD                      	lodsw
  1969 00000BBE AB                      	stosw		; original sample (left channel)
  1970 00000BBF AB                      	stosw		; original sample (right channel)
  1971 00000BC0 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  1972                                  	;mov	[previous_val], ax
  1973 00000BC3 89C3                    	mov	bx, ax	
  1974                                  	; 02/02/2025
  1975 00000BC5 8B04                    	mov	ax, [si]
  1976 00000BC7 49                      	dec	cx
  1977 00000BC8 7502                    	jnz	short lff16m2_2
  1978 00000BCA 31C0                    	xor	ax, ax
  1979                                  lff16m2_2:
  1980 00000BCC 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  1981 00000BCF 89C5                    	mov	bp, ax	; [next_val]
  1982                                  	;add	ax, [previous_val]
  1983 00000BD1 01D8                    	add	ax, bx
  1984 00000BD3 D1D8                    	rcr	ax, 1
  1985 00000BD5 89C2                    	mov	dx, ax	; this is temporary interpolation value
  1986                                  	;add	ax, [previous_val]
  1987 00000BD7 01D8                    	add	ax, bx
  1988 00000BD9 D1D8                    	rcr	ax, 1
  1989 00000BDB 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1990 00000BDE AB                      	stosw		; this is 1st interpolated sample (L)
  1991 00000BDF AB                      	stosw		; this is 1st interpolated sample (R)
  1992 00000BE0 89E8                    	mov	ax, bp 
  1993 00000BE2 01D0                    	add	ax, dx
  1994 00000BE4 D1D8                    	rcr	ax, 1
  1995 00000BE6 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1996 00000BE9 AB                      	stosw		; this is 2nd interpolated sample (L)
  1997 00000BEA AB                      	stosw		; this is 2nd interpolated sample (R)
  1998                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1999 00000BEB 09C9                    	or	cx, cx
  2000 00000BED 75CE                    	jnz	short lff16m2_1
  2001 00000BEF E925FC                  	jmp	lff16m2_3
  2002                                  
  2003                                  lff16m2_7:
  2004                                  lff16s2_7:
  2005 00000BF2 E93CFC                  	jmp	lff16m2_5  ; error
  2006                                  
  2007                                  load_16khz_stereo_16_bit:
  2008                                  	; 02/02/2025
  2009                                  	; 16/11/2023
  2010                                  	; 15/11/2023
  2011                                  	; 13/11/2023
  2012 00000BF5 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2013                                  					; last of the file?
  2014 00000BFA 7402                    	jz	short lff16s2_0		; no
  2015 00000BFC F9                      	stc
  2016 00000BFD C3                      	retn
  2017                                  
  2018                                  lff16s2_0:
  2019 00000BFE 8EC0                    	mov	es, ax ; buffer segment
  2020 00000C00 31FF                    	xor	di, di
  2021 00000C02 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2022                                  	; ds = cs
  2023                                  
  2024                                  	; load file into memory
  2025 00000C05 8B0E[CB02]                      mov	cx, [loadsize]
  2026 00000C09 8B1E[7C20]              	mov	bx, [filehandle]
  2027 00000C0D B43F                           	mov	ah, 3Fh
  2028 00000C0F CD21                    	int	21h
  2029 00000C11 72DF                    	jc	short lff16s2_7 ; error !
  2030                                  
  2031 00000C13 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2032                                  	
  2033                                  	;shr	ax, 1
  2034 00000C15 C1E802                  	shr	ax, 2	; 16/11/2023
  2035                                  	;and	ax, ax
  2036 00000C18 7503                    	jnz	short lff16s2_8
  2037                                  	;jmp	lff16s2_3
  2038                                  	; 15/11/2023
  2039 00000C1A E90DFC                  	jmp	lff16_eof
  2040                                  
  2041                                  lff16s2_8:
  2042 00000C1D 89C1                    	mov	cx, ax	; dword count
  2043                                  lff16s2_1:
  2044 00000C1F AD                      	lodsw
  2045 00000C20 AB                      	stosw		; original sample (L)
  2046 00000C21 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2047 00000C24 A3[9519]                	mov	[previous_val_l], ax
  2048 00000C27 AD                      	lodsw
  2049 00000C28 AB                      	stosw		; original sample (R)
  2050 00000C29 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2051 00000C2C A3[9719]                	mov	[previous_val_r], ax
  2052                                  	; 02/02/2025
  2053 00000C2F 8B04                    	mov	ax, [si]
  2054 00000C31 8B5402                  	mov	dx, [si+2]
  2055                                  	; 16/11/2023
  2056 00000C34 49                      	dec	cx
  2057 00000C35 7504                    	jnz	short lff16s2_2
  2058 00000C37 31D2                    	xor	dx, dx
  2059 00000C39 31C0                    	xor	ax, ax
  2060                                  lff16s2_2:
  2061 00000C3B 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2062                                  	;mov	[next_val_l], ax
  2063 00000C3E 89C5                    	mov	bp, ax
  2064 00000C40 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2065 00000C43 8916[9B19]              	mov	[next_val_r], dx
  2066 00000C47 0306[9519]              	add	ax, [previous_val_l]
  2067 00000C4B D1D8                    	rcr	ax, 1
  2068 00000C4D 89C2                    	mov	dx, ax	; this is temporary interpolation value (L)
  2069 00000C4F 0306[9519]              	add	ax, [previous_val_l]
  2070 00000C53 D1D8                    	rcr	ax, 1
  2071 00000C55 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2072 00000C58 AB                      	stosw		; this is 1st interpolated sample (L)
  2073 00000C59 A1[9B19]                	mov	ax, [next_val_r]
  2074 00000C5C 0306[9719]              	add	ax, [previous_val_r]
  2075 00000C60 D1D8                    	rcr	ax, 1
  2076 00000C62 89C3                    	mov	bx, ax	; this is temporary interpolation value (R)
  2077 00000C64 0306[9719]              	add	ax, [previous_val_r]
  2078 00000C68 D1D8                    	rcr	ax, 1
  2079 00000C6A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2080 00000C6D AB                      	stosw		; this is 1st interpolated sample (R)
  2081                                  	;mov	ax, [next_val_l]
  2082 00000C6E 89E8                    	mov	ax, bp
  2083 00000C70 01D0                    	add	ax, dx
  2084 00000C72 D1D8                    	rcr	ax, 1
  2085 00000C74 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2086 00000C77 AB                      	stosw		; this is 2nd interpolated sample (L)
  2087 00000C78 A1[9B19]                	mov	ax, [next_val_r]
  2088 00000C7B 01D8                    	add	ax, bx
  2089 00000C7D D1D8                    	rcr	ax, 1
  2090 00000C7F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2091 00000C82 AB                      	stosw 		; this is 2nd interpolated sample (R)
  2092                                  	
  2093                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2094 00000C83 09C9                    	or	cx, cx
  2095 00000C85 7598                    	jnz	short lff16s2_1
  2096 00000C87 E98DFB                  	jmp	lff16s2_3
  2097                                  
  2098                                  ; .....................
  2099                                  
  2100                                  load_24khz_mono_8_bit:
  2101                                  	; 02/02/2025
  2102                                  	; 15/11/2023
  2103 00000C8A F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2104                                  					; last of the file?
  2105 00000C8F 7402                    	jz	short lff24m_0		; no
  2106 00000C91 F9                      	stc
  2107 00000C92 C3                      	retn
  2108                                  
  2109                                  lff24m_0:
  2110 00000C93 8EC0                    	mov	es, ax ; buffer segment
  2111 00000C95 31FF                    	xor	di, di
  2112 00000C97 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2113                                  	; ds = cs
  2114                                  
  2115                                  	; load file into memory
  2116 00000C9A 8B0E[CB02]                      mov	cx, [loadsize]
  2117 00000C9E 8B1E[7C20]              	mov	bx, [filehandle]
  2118 00000CA2 B43F                           	mov	ah, 3Fh
  2119 00000CA4 CD21                    	int	21h
  2120 00000CA6 722E                    	jc	short lff24m_7 ; error !
  2121                                  
  2122 00000CA8 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2123                                  	
  2124 00000CAA 21C0                    	and	ax, ax
  2125 00000CAC 7503                    	jnz	short lff24m_8
  2126 00000CAE E979FB                  	jmp	lff24_eof
  2127                                  
  2128                                  lff24m_8:
  2129 00000CB1 89C1                    	mov	cx, ax		; byte count
  2130                                  lff24m_1:
  2131 00000CB3 AC                      	lodsb
  2132                                  	;mov	[previous_val], al
  2133 00000CB4 88C3                    	mov	bl, al
  2134 00000CB6 2C80                    	sub	al, 80h
  2135 00000CB8 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2136 00000CBB AB                      	stosw		; original sample (left channel)
  2137 00000CBC AB                      	stosw		; original sample (right channel)
  2138                                  	;xor	ax, ax
  2139                                  	; 02/02/2025
  2140 00000CBD 8A04                    	mov	al, [si]
  2141 00000CBF 49                      	dec	cx
  2142 00000CC0 7502                    	jnz	short lff24m_2
  2143 00000CC2 B080                    	mov	al, 80h
  2144                                  lff24m_2:
  2145                                  	;;mov	[next_val], al
  2146                                  	;mov	bh, al
  2147                                  	;add	al, [previous_val]
  2148 00000CC4 00D8                    	add	al, bl
  2149 00000CC6 D0D8                    	rcr	al, 1
  2150 00000CC8 2C80                    	sub	al, 80h
  2151 00000CCA C1E008                  	shl	ax, 8
  2152 00000CCD AB                      	stosw		; this is interpolated sample (L)
  2153 00000CCE AB                      	stosw		; this is interpolated sample (R)
  2154                                  	
  2155                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2156 00000CCF 09C9                    	or	cx, cx
  2157 00000CD1 75E0                    	jnz	short lff24m_1
  2158 00000CD3 E941FB                  	jmp	lff24_3
  2159                                  
  2160                                  lff24m_7:
  2161                                  lff24s_7:
  2162 00000CD6 E958FB                  	jmp	lff24_5  ; error
  2163                                  
  2164                                  load_24khz_stereo_8_bit:
  2165                                  	; 02/02/2025
  2166                                  	; 15/11/2023
  2167 00000CD9 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2168                                  					; last of the file?
  2169 00000CDE 7402                    	jz	short lff24s_0		; no
  2170 00000CE0 F9                      	stc
  2171 00000CE1 C3                      	retn
  2172                                  
  2173                                  lff24s_0:
  2174 00000CE2 8EC0                    	mov	es, ax ; buffer segment
  2175 00000CE4 31FF                    	xor	di, di
  2176 00000CE6 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2177                                  	; ds = cs
  2178                                  
  2179                                  	; load file into memory
  2180 00000CE9 8B0E[CB02]                      mov	cx, [loadsize]
  2181 00000CED 8B1E[7C20]              	mov	bx, [filehandle]
  2182 00000CF1 B43F                           	mov	ah, 3Fh
  2183 00000CF3 CD21                    	int	21h
  2184 00000CF5 72DF                    	jc	short lff24s_7 ; error !
  2185                                  
  2186 00000CF7 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2187                                  	
  2188 00000CF9 D1E8                    	shr	ax, 1
  2189                                  	;and	ax, ax
  2190 00000CFB 7503                    	jnz	short lff24s_8
  2191 00000CFD E92AFB                  	jmp	lff24_eof
  2192                                  
  2193                                  lff24s_8:
  2194 00000D00 89C1                    	mov	cx, ax	; word count
  2195                                  lff24s_1:
  2196 00000D02 AC                      	lodsb
  2197 00000D03 A2[9519]                	mov	[previous_val_l], al
  2198 00000D06 2C80                    	sub	al, 80h
  2199 00000D08 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2200 00000D0B AB                      	stosw		; original sample (L)
  2201 00000D0C AC                      	lodsb
  2202 00000D0D A2[9719]                	mov	[previous_val_r], al
  2203 00000D10 2C80                    	sub	al, 80h
  2204 00000D12 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2205 00000D15 AB                      	stosw		; original sample (R)
  2206                                  	;xor	ax, ax
  2207                                  	; 02/02/2025
  2208 00000D16 8B04                    	mov	ax, [si]
  2209 00000D18 49                      	dec	cx
  2210 00000D19 7503                    	jnz	short lff24s_2
  2211                                  		; convert 8 bit sample to 16 bit sample
  2212 00000D1B B88080                  	mov	ax, 8080h
  2213                                  lff24s_2:
  2214                                  	;;mov	[next_val_l], al
  2215                                  	;;mov	[next_val_r], ah
  2216                                  	;mov	bx, ax
  2217 00000D1E 88E7                    	mov	bh, ah
  2218 00000D20 0206[9519]              	add	al, [previous_val_l]
  2219 00000D24 D0D8                    	rcr	al, 1
  2220                                  	;mov	dl, al
  2221 00000D26 2C80                    	sub	al, 80h
  2222 00000D28 C1E008                  	shl	ax, 8
  2223 00000D2B AB                      	stosw		; this is interpolated sample (L)
  2224 00000D2C 88F8                    	mov	al, bh	; [next_val_r]
  2225 00000D2E 0206[9719]              	add	al, [previous_val_r]
  2226 00000D32 D0D8                    	rcr	al, 1
  2227                                  	;mov	dh, al
  2228 00000D34 2C80                    	sub	al, 80h
  2229 00000D36 C1E008                  	shl	ax, 8
  2230 00000D39 AB                      	stosw		; this is interpolated sample (R)
  2231                                  		
  2232                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2233 00000D3A 09C9                    	or	cx, cx
  2234 00000D3C 75C4                    	jnz	short lff24s_1
  2235 00000D3E E9D6FA                  	jmp	lff24_3
  2236                                  
  2237                                  load_24khz_mono_16_bit:
  2238                                  	; 02/02/2025
  2239                                  	; 15/11/2023
  2240 00000D41 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2241                                  					; last of the file?
  2242 00000D46 7402                    	jz	short lff24m2_0		; no
  2243 00000D48 F9                      	stc
  2244 00000D49 C3                      	retn
  2245                                  
  2246                                  lff24m2_0:
  2247 00000D4A 8EC0                    	mov	es, ax ; buffer segment
  2248 00000D4C 31FF                    	xor	di, di
  2249 00000D4E BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2250                                  	; ds = cs
  2251                                  
  2252                                  	; load file into memory
  2253 00000D51 8B0E[CB02]                      mov	cx, [loadsize]
  2254 00000D55 8B1E[7C20]              	mov	bx, [filehandle]
  2255 00000D59 B43F                           	mov	ah, 3Fh
  2256 00000D5B CD21                    	int	21h
  2257 00000D5D 722B                    	jc	short lff24m2_7 ; error !
  2258                                  
  2259 00000D5F 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2260                                  	
  2261 00000D61 D1E8                    	shr	ax, 1
  2262                                  	;and	ax, ax
  2263 00000D63 7503                    	jnz	short lff24m2_8
  2264 00000D65 E9C2FA                  	jmp	lff24_eof
  2265                                  
  2266                                  lff24m2_8:
  2267 00000D68 89C1                    	mov	cx, ax	; word count
  2268                                  lff24m2_1:
  2269 00000D6A AD                      	lodsw
  2270 00000D6B AB                      	stosw		; original sample (left channel)
  2271 00000D6C AB                      	stosw		; original sample (right channel)
  2272 00000D6D 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2273                                  	;mov	[previous_val], ax
  2274                                  	;mov	bx, ax	
  2275                                  	;mov	ax, [si
  2276                                  	; 02/02/2025
  2277 00000D70 8B1C                    	mov	bx, [si]
  2278 00000D72 49                      	dec	cx
  2279 00000D73 7502                    	jnz	short lff24m2_2
  2280                                  	;xor	ax, ax
  2281 00000D75 31DB                    	xor	bx, bx
  2282                                  lff24m2_2:
  2283                                  	; 02/02/2025
  2284 00000D77 80C780                  	add	bh, 80h ; convert sound level 0 to 65535 format
  2285                                  	;add	ah, 80h
  2286                                  	;mov	bp, ax	; [next_val]
  2287                                  	;add	ax, [previous_val]
  2288                                  	; ax = [previous_val]
  2289                                  	; bx = [next_val]
  2290 00000D7A 01D8                    	add	ax, bx
  2291 00000D7C D1D8                    	rcr	ax, 1
  2292 00000D7E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2293 00000D81 AB                      	stosw		; this is interpolated sample (L)
  2294 00000D82 AB                      	stosw		; this is interpolated sample (R)
  2295                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2296 00000D83 09C9                    	or	cx, cx
  2297 00000D85 75E3                    	jnz	short lff24m2_1
  2298 00000D87 E98DFA                  	jmp	lff24_3
  2299                                  
  2300                                  lff24m2_7:
  2301                                  lff24s2_7:
  2302 00000D8A E9A4FA                  	jmp	lff24_5  ; error
  2303                                  
  2304                                  load_24khz_stereo_16_bit:
  2305                                  	; 02/02/2025
  2306                                  	; 16/11/2023
  2307                                  	; 15/11/2023
  2308 00000D8D F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2309                                  					; last of the file?
  2310 00000D92 7402                    	jz	short lff24s2_0		; no
  2311 00000D94 F9                      	stc
  2312 00000D95 C3                      	retn
  2313                                  
  2314                                  lff24s2_0:
  2315 00000D96 8EC0                    	mov	es, ax ; buffer segment
  2316 00000D98 31FF                    	xor	di, di
  2317 00000D9A BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2318                                  	; ds = cs
  2319                                  
  2320                                  	; load file into memory
  2321 00000D9D 8B0E[CB02]                      mov	cx, [loadsize]
  2322 00000DA1 8B1E[7C20]              	mov	bx, [filehandle]
  2323 00000DA5 B43F                           	mov	ah, 3Fh
  2324 00000DA7 CD21                    	int	21h
  2325 00000DA9 72DF                    	jc	short lff24s2_7 ; error !
  2326                                  
  2327 00000DAB 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2328                                  	
  2329                                  	;shr	ax, 1
  2330 00000DAD C1E802                  	shr	ax, 2	; 16/11/2023
  2331                                  	;and	ax, ax
  2332 00000DB0 7503                    	jnz	short lff24s2_8
  2333 00000DB2 E975FA                  	jmp	lff24_eof
  2334                                  
  2335                                  lff24s2_8:
  2336 00000DB5 89C1                    	mov	cx, ax	; dword count
  2337                                  lff24s2_1:
  2338 00000DB7 AD                      	lodsw
  2339 00000DB8 AB                      	stosw		; original sample (L)
  2340 00000DB9 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2341 00000DBC A3[9519]                	mov	[previous_val_l], ax
  2342 00000DBF AD                      	lodsw
  2343 00000DC0 AB                      	stosw		; original sample (R)
  2344 00000DC1 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2345                                  	;mov	[previous_val_r], ax
  2346 00000DC4 89C3                    	mov	bx, ax
  2347                                  	; 02/02/2025
  2348 00000DC6 8B04                    	mov	ax, [si]
  2349 00000DC8 8B5402                  	mov	dx, [si+2]
  2350                                  	; 16/11/2023
  2351 00000DCB 49                      	dec	cx
  2352 00000DCC 7504                    	jnz	short lff24s2_2
  2353 00000DCE 31D2                    	xor	dx, dx
  2354 00000DD0 31C0                    	xor	ax, ax
  2355                                  lff24s2_2:
  2356 00000DD2 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2357                                  	;;mov	[next_val_l], ax
  2358                                  	;mov	bp, ax
  2359 00000DD5 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2360                                  	;mov	[next_val_r], dx
  2361 00000DD8 0306[9519]              	add	ax, [previous_val_l]
  2362 00000DDC D1D8                    	rcr	ax, 1
  2363 00000DDE 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2364 00000DE1 AB                      	stosw		; this is interpolated sample (L)
  2365                                  	;mov	ax, [next_val_r]
  2366 00000DE2 89D0                    	mov	ax, dx
  2367                                  	;add	ax, [previous_val_r]
  2368 00000DE4 01D8                    	add	ax, bx
  2369 00000DE6 D1D8                    	rcr	ax, 1
  2370 00000DE8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2371 00000DEB AB                      	stosw		; this is interpolated sample (R)
  2372                                  	
  2373                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2374 00000DEC 09C9                    	or	cx, cx
  2375 00000DEE 75C7                    	jnz	short lff24s2_1
  2376 00000DF0 E924FA                  	jmp	lff24_3
  2377                                  
  2378                                  ; .....................
  2379                                  
  2380                                  load_32khz_mono_8_bit:
  2381                                  	; 02/02/2025
  2382                                  	; 15/11/2023
  2383 00000DF3 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2384                                  					; last of the file?
  2385 00000DF8 7402                    	jz	short lff32m_0		; no
  2386 00000DFA F9                      	stc
  2387 00000DFB C3                      	retn
  2388                                  
  2389                                  lff32m_0:
  2390 00000DFC 8EC0                    	mov	es, ax ; buffer segment
  2391 00000DFE 31FF                    	xor	di, di
  2392 00000E00 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2393                                  	; ds = cs
  2394                                  
  2395                                  	; load file into memory
  2396 00000E03 8B0E[CB02]                      mov	cx, [loadsize]
  2397 00000E07 8B1E[7C20]              	mov	bx, [filehandle]
  2398 00000E0B B43F                           	mov	ah, 3Fh
  2399 00000E0D CD21                    	int	21h
  2400 00000E0F 7237                    	jc	short lff32m_7 ; error !
  2401                                  
  2402 00000E11 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2403                                  	
  2404 00000E13 21C0                    	and	ax, ax
  2405 00000E15 7503                    	jnz	short lff32m_8
  2406 00000E17 E910FA                  	jmp	lff32_eof
  2407                                  
  2408                                  lff32m_8:
  2409 00000E1A 89C1                    	mov	cx, ax	; byte count
  2410                                  lff32m_1:
  2411 00000E1C AC                      	lodsb
  2412                                  	;mov	[previous_val], al
  2413 00000E1D 88C3                    	mov	bl, al
  2414 00000E1F 2C80                    	sub	al, 80h
  2415 00000E21 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2416 00000E24 AB                      	stosw		; original sample (left channel)
  2417 00000E25 AB                      	stosw		; original sample (right channel)
  2418                                  	;xor	ax, ax
  2419                                  	; 02/02/2025
  2420 00000E26 8A04                    	mov	al, [si]
  2421 00000E28 49                      	dec	cx
  2422 00000E29 7502                    	jnz	short lff32m_2
  2423 00000E2B B080                    	mov	al, 80h
  2424                                  lff32m_2:
  2425                                  	;;mov	[next_val], al
  2426                                  	;mov	bh, al
  2427                                  	;add	al, [previous_val]
  2428 00000E2D 00D8                    	add	al, bl
  2429 00000E2F D0D8                    	rcr	al, 1
  2430 00000E31 2C80                    	sub	al, 80h
  2431 00000E33 C1E008                  	shl	ax, 8
  2432 00000E36 AB                      	stosw		; this is interpolated sample (L)
  2433 00000E37 AB                      	stosw		; this is interpolated sample (R)
  2434                                  	
  2435                                  	; different than 8-16-24 kHZ !
  2436                                  	; 'original-interpolated-original' trio samples 
  2437 00000E38 E30B                    	jcxz	lff32m_3
  2438                                  
  2439 00000E3A AC                      	lodsb
  2440 00000E3B 2C80                    	sub	al, 80h
  2441 00000E3D C1E008                  	shl	ax, 8
  2442 00000E40 AB                      	stosw		; original sample (left channel)
  2443 00000E41 AB                      	stosw		; original sample (right channel)
  2444                                  
  2445                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2446 00000E42 49                      	dec	cx
  2447 00000E43 75D7                    	jnz	short lff32m_1
  2448                                  lff32m_3:
  2449 00000E45 E9CFF9                  	jmp	lff32_3
  2450                                  
  2451                                  lff32m_7:
  2452                                  lff32s_7:
  2453 00000E48 E9E6F9                  	jmp	lff32_5  ; error
  2454                                  
  2455                                  load_32khz_stereo_8_bit:
  2456                                  	; 02/02/2025
  2457                                  	; 15/11/2023
  2458 00000E4B F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2459                                  					; last of the file?
  2460 00000E50 7402                    	jz	short lff32s_0		; no
  2461 00000E52 F9                      	stc
  2462 00000E53 C3                      	retn
  2463                                  
  2464                                  lff32s_0:
  2465 00000E54 8EC0                    	mov	es, ax ; buffer segment
  2466 00000E56 31FF                    	xor	di, di
  2467 00000E58 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2468                                  	; ds = cs
  2469                                  
  2470                                  	; load file into memory
  2471 00000E5B 8B0E[CB02]                      mov	cx, [loadsize]
  2472 00000E5F 8B1E[7C20]              	mov	bx, [filehandle]
  2473 00000E63 B43F                           	mov	ah, 3Fh
  2474 00000E65 CD21                    	int	21h
  2475 00000E67 72DF                    	jc	short lff32s_7 ; error !
  2476                                  
  2477 00000E69 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2478                                  	
  2479 00000E6B D1E8                    	shr	ax, 1
  2480                                  	;and	ax, ax
  2481 00000E6D 7503                    	jnz	short lff32s_8
  2482 00000E6F E9B8F9                  	jmp	lff32_eof
  2483                                  
  2484                                  lff32s_8:
  2485 00000E72 89C1                    	mov	cx, ax	; word count
  2486                                  lff32s_1:
  2487 00000E74 AC                      	lodsb
  2488 00000E75 A2[9519]                	mov	[previous_val_l], al
  2489 00000E78 2C80                    	sub	al, 80h
  2490 00000E7A C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2491 00000E7D AB                      	stosw		; original sample (L)
  2492 00000E7E AC                      	lodsb
  2493 00000E7F A2[9719]                	mov	[previous_val_r], al
  2494 00000E82 2C80                    	sub	al, 80h
  2495 00000E84 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2496 00000E87 AB                      	stosw		; original sample (R)
  2497                                  	; 02/02/2025
  2498 00000E88 8B04                    	mov	ax, [si]
  2499 00000E8A 49                      	dec	cx
  2500 00000E8B 7503                    	jnz	short lff32s_2
  2501                                  		; convert 8 bit sample to 16 bit sample
  2502                                  	;xor	ax, ax
  2503 00000E8D B88080                  	mov	ax, 8080h
  2504                                  lff32s_2:
  2505                                  	;;mov	[next_val_l], al
  2506                                  	;;mov	[next_val_r], ah
  2507                                  	;mov	bx, ax
  2508 00000E90 88E7                    	mov	bh, ah
  2509 00000E92 0206[9519]              	add	al, [previous_val_l]
  2510 00000E96 D0D8                    	rcr	al, 1
  2511                                  	;mov	dl, al
  2512 00000E98 2C80                    	sub	al, 80h
  2513 00000E9A C1E008                  	shl	ax, 8
  2514 00000E9D AB                      	stosw		; this is interpolated sample (L)
  2515 00000E9E 88F8                    	mov	al, bh	; [next_val_r]
  2516 00000EA0 0206[9719]              	add	al, [previous_val_r]
  2517 00000EA4 D0D8                    	rcr	al, 1
  2518                                  	;mov	dh, al
  2519 00000EA6 2C80                    	sub	al, 80h
  2520 00000EA8 C1E008                  	shl	ax, 8
  2521 00000EAB AB                      	stosw		; this is interpolated sample (R)
  2522                                  
  2523                                  	; different than 8-16-24 kHZ !
  2524                                  	; 'original-interpolated-original' trio samples 
  2525 00000EAC E311                    	jcxz	lff32s_3
  2526                                  
  2527 00000EAE AC                      	lodsb
  2528 00000EAF 2C80                    	sub	al, 80h
  2529 00000EB1 C1E008                  	shl	ax, 8
  2530 00000EB4 AB                      	stosw		; original sample (left channel)
  2531                                  
  2532 00000EB5 AC                      	lodsb
  2533 00000EB6 2C80                    	sub	al, 80h
  2534 00000EB8 C1E008                  	shl	ax, 8
  2535 00000EBB AB                      	stosw		; original sample (right channel)
  2536                                  		
  2537                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2538 00000EBC 49                      	dec	cx
  2539 00000EBD 75B5                    	jnz	short lff32s_1
  2540                                  lff32s_3:
  2541 00000EBF E955F9                  	jmp	lff32_3
  2542                                  
  2543                                  load_32khz_mono_16_bit:
  2544                                  	; 02/02/2025
  2545                                  	; 15/11/2023
  2546 00000EC2 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2547                                  					; last of the file?
  2548 00000EC7 7402                    	jz	short lff32m2_0		; no
  2549 00000EC9 F9                      	stc
  2550 00000ECA C3                      	retn
  2551                                  
  2552                                  lff32m2_0:
  2553 00000ECB 8EC0                    	mov	es, ax ; buffer segment
  2554 00000ECD 31FF                    	xor	di, di
  2555 00000ECF BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2556                                  	; ds = cs
  2557                                  
  2558                                  	; load file into memory
  2559 00000ED2 8B0E[CB02]                      mov	cx, [loadsize]
  2560 00000ED6 8B1E[7C20]              	mov	bx, [filehandle]
  2561 00000EDA B43F                           	mov	ah, 3Fh
  2562 00000EDC CD21                    	int	21h
  2563 00000EDE 722F                    	jc	short lff32m2_7 ; error !
  2564                                  
  2565 00000EE0 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2566                                  	
  2567 00000EE2 D1E8                    	shr	ax, 1
  2568                                  	;and	ax, ax
  2569 00000EE4 7503                    	jnz	short lff32m2_8
  2570 00000EE6 E941F9                  	jmp	lff32_eof
  2571                                  
  2572                                  lff32m2_8:
  2573 00000EE9 89C1                    	mov	cx, ax	; word count
  2574                                  lff32m2_1:
  2575 00000EEB AD                      	lodsw
  2576 00000EEC AB                      	stosw		; original sample (left channel)
  2577 00000EED AB                      	stosw		; original sample (right channel)
  2578 00000EEE 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2579                                  	;mov	[previous_val], ax
  2580                                  	;mov	bx, ax
  2581                                  	; 02/02/2025
  2582                                  	;mov	ax, [si
  2583 00000EF1 8B1C                    	mov	bx, [si]
  2584 00000EF3 49                      	dec	cx
  2585 00000EF4 7502                    	jnz	short lff32m2_2
  2586                                  	;xor	ax, ax
  2587 00000EF6 31DB                    	xor	bx, bx
  2588                                  lff32m2_2:
  2589                                  	; 02/02/2025
  2590 00000EF8 80C780                  	add	bh, 80h ; convert sound level 0 to 65535 format
  2591                                  	;add	ah, 80h
  2592                                  	;mov	bp, ax	; [next_val]
  2593                                  	;add	ax, [previous_val]
  2594                                  	; ax = [previous_val]
  2595                                  	; bx = [next_val]
  2596 00000EFB 01D8                    	add	ax, bx
  2597 00000EFD D1D8                    	rcr	ax, 1
  2598 00000EFF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2599 00000F02 AB                      	stosw		; this is interpolated sample (L)
  2600 00000F03 AB                      	stosw		; this is interpolated sample (R)
  2601                                  
  2602                                  	; different than 8-16-24 kHZ !
  2603                                  	; 'original-interpolated-original' trio samples 
  2604 00000F04 E306                    	jcxz	lff32m2_3
  2605                                  
  2606 00000F06 AD                      	lodsw
  2607 00000F07 AB                      	stosw		; original sample (left channel)
  2608 00000F08 AB                      	stosw		; original sample (right channel)
  2609                                  
  2610                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2611 00000F09 49                      	dec	cx
  2612 00000F0A 75DF                    	jnz	short lff32m2_1
  2613                                  lff32m2_3:
  2614 00000F0C E908F9                  	jmp	lff32_3
  2615                                  
  2616                                  lff32m2_7:
  2617                                  lff32s2_7:
  2618 00000F0F E91FF9                  	jmp	lff32_5  ; error
  2619                                  
  2620                                  load_32khz_stereo_16_bit:
  2621                                  	; 02/02/2025
  2622                                  	; 16/11/2023
  2623                                  	; 15/11/2023
  2624 00000F12 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2625                                  					; last of the file?
  2626 00000F17 7402                    	jz	short lff32s2_0		; no
  2627 00000F19 F9                      	stc
  2628 00000F1A C3                      	retn
  2629                                  
  2630                                  lff32s2_0:
  2631 00000F1B 8EC0                    	mov	es, ax ; buffer segment
  2632 00000F1D 31FF                    	xor	di, di
  2633 00000F1F BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2634                                  	; ds = cs
  2635                                  
  2636                                  	; load file into memory
  2637 00000F22 8B0E[CB02]                      mov	cx, [loadsize]
  2638 00000F26 8B1E[7C20]              	mov	bx, [filehandle]
  2639 00000F2A B43F                           	mov	ah, 3Fh
  2640 00000F2C CD21                    	int	21h
  2641 00000F2E 72DF                    	jc	short lff32s2_7 ; error !
  2642                                  
  2643 00000F30 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2644                                  	
  2645 00000F32 C1E802                  	shr	ax, 2	; 16/11/2023 (word left ch + word right ch) 
  2646                                  	;and	ax, ax
  2647 00000F35 7503                    	jnz	short lff32s2_8
  2648 00000F37 E9F0F8                  	jmp	lff32_eof
  2649                                  
  2650                                  lff32s2_8:
  2651 00000F3A 89C1                    	mov	cx, ax	; dword count
  2652                                  lff32s2_1:
  2653 00000F3C AD                      	lodsw
  2654 00000F3D AB                      	stosw		; original sample (L)
  2655 00000F3E 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2656 00000F41 A3[9519]                	mov	[previous_val_l], ax
  2657 00000F44 AD                      	lodsw
  2658 00000F45 AB                      	stosw		; original sample (R)
  2659 00000F46 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2660                                  	;mov	[previous_val_r], ax
  2661 00000F49 89C3                    	mov	bx, ax
  2662                                  	; 02/02/2025
  2663 00000F4B 8B04                    	mov	ax, [si]
  2664 00000F4D 8B5402                  	mov	dx, [si+2]
  2665                                  	; 16/11/2023
  2666 00000F50 49                      	dec	cx
  2667 00000F51 7504                    	jnz	short lff32s2_2
  2668 00000F53 31D2                    	xor	dx, dx
  2669 00000F55 31C0                    	xor	ax, ax
  2670                                  lff32s2_2:
  2671 00000F57 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2672                                  	;;mov	[next_val_l], ax
  2673                                  	;mov	bp, ax
  2674 00000F5A 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2675                                  	;mov	[next_val_r], dx
  2676 00000F5D 0306[9519]              	add	ax, [previous_val_l]
  2677 00000F61 D1D8                    	rcr	ax, 1
  2678 00000F63 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2679 00000F66 AB                      	stosw		; this is interpolated sample (L)
  2680                                  	;mov	ax, [next_val_r]
  2681 00000F67 89D0                    	mov	ax, dx
  2682                                  	;add	ax, [previous_val_r]
  2683 00000F69 01D8                    	add	ax, bx
  2684 00000F6B D1D8                    	rcr	ax, 1
  2685 00000F6D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2686 00000F70 AB                      	stosw		; this is interpolated sample (R)
  2687                                  
  2688                                  	; different than 8-16-24 kHZ !
  2689                                  	; 'original-interpolated-original' trio samples 
  2690 00000F71 E307                    	jcxz	lff32s2_3
  2691                                  
  2692 00000F73 AD                      	lodsw
  2693 00000F74 AB                      	stosw	; original sample (L)
  2694 00000F75 AD                      	lodsw
  2695 00000F76 AB                      	stosw	; original sample (R)
  2696                                  	
  2697                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2698 00000F77 49                      	dec	cx
  2699 00000F78 75C2                    	jnz	short lff32s2_1
  2700                                  lff32s2_3:
  2701 00000F7A E99AF8                  	jmp	lff32_3
  2702                                  
  2703                                  ; .....................
  2704                                  
  2705                                  load_22khz_mono_8_bit:
  2706                                  	; 02/02/2025
  2707                                  	; 16/11/2023
  2708 00000F7D F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2709                                  					; last of the file?
  2710 00000F82 7402                    	jz	short lff22m_0		; no
  2711 00000F84 F9                      	stc
  2712 00000F85 C3                      	retn
  2713                                  
  2714                                  lff22m_0:
  2715 00000F86 8EC0                    	mov	es, ax ; buffer segment
  2716 00000F88 31FF                    	xor	di, di
  2717 00000F8A BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2718                                  	; ds = cs
  2719                                  
  2720                                  	; load file into memory
  2721 00000F8D 8B0E[CB02]                      mov	cx, [loadsize]
  2722 00000F91 8B1E[7C20]              	mov	bx, [filehandle]
  2723 00000F95 B43F                           	mov	ah, 3Fh
  2724 00000F97 CD21                    	int	21h
  2725 00000F99 7248                    	jc	short lff22m_7 ; error !
  2726                                  
  2727 00000F9B 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2728                                  	
  2729 00000F9D 21C0                    	and	ax, ax
  2730 00000F9F 7503                    	jnz	short lff22m_8
  2731 00000FA1 E986F8                  	jmp	lff22_eof
  2732                                  
  2733                                  lff22m_8:
  2734 00000FA4 89C1                    	mov	cx, ax	; byte count
  2735                                  lff22m_9:
  2736 00000FA6 BD0500                  	mov	bp, 5 ; interpolation (one step) loop count
  2737 00000FA9 C606[9D19]03            	mov	byte [faz], 3  ; 3 steps/phases
  2738                                  lff22m_1:
  2739                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2740 00000FAE AC                      	lodsb
  2741                                  	; 02/02/2025
  2742 00000FAF 8A14                    	mov	dl, [si]
  2743 00000FB1 49                      	dec	cx
  2744 00000FB2 7502                    	jnz	short lff22m_2_1
  2745 00000FB4 B280                    	mov	dl, 80h
  2746                                  lff22m_2_1:
  2747                                  	; al = [previous_val]
  2748                                  	; dl = [next_val]
  2749 00000FB6 E8A705                  	call	interpolating_3_8bit_mono ; 1 of 17
  2750 00000FB9 E325                    	jcxz	lff22m_3
  2751                                  lff22m_2_2:
  2752 00000FBB AC                      	lodsb
  2753                                  	; 02/02/2025
  2754 00000FBC 8A14                    	mov	dl, [si]
  2755 00000FBE 49                      	dec	cx
  2756 00000FBF 7502                    	jnz	short lff22m_2_3
  2757 00000FC1 B280                    	mov	dl, 80h
  2758                                  lff22m_2_3:
  2759 00000FC3 E80F06                   	call	interpolating_2_8bit_mono ; 2 of 17 .. 6 of 17
  2760 00000FC6 E318                    	jcxz	lff22m_3
  2761 00000FC8 4D                      	dec	bp
  2762 00000FC9 75F0                    	jnz	short lff22m_2_2
  2763                                  
  2764 00000FCB A0[9D19]                	mov	al, [faz]
  2765 00000FCE FEC8                    	dec	al
  2766 00000FD0 74D4                    	jz	short lff22m_9
  2767 00000FD2 FE0E[9D19]              	dec	byte [faz]
  2768 00000FD6 BD0400                  	mov	bp, 4
  2769 00000FD9 FEC8                    	dec	al
  2770 00000FDB 75D1                    	jnz	short lff22m_1 ; 3:2:2:2:2 ; 7-11 of 17
  2771 00000FDD 45                      	inc	bp ; 5
  2772 00000FDE EBCE                    	jmp	short lff22m_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2773                                  
  2774                                  lff22m_3:
  2775                                  lff22s_3:
  2776 00000FE0 E934F8                  	jmp	lff22_3	; padfill
  2777                                  		; (put zeros in the remain words of the buffer)
  2778                                  lff22m_7:
  2779                                  lff22s_7:
  2780 00000FE3 E94BF8                  	jmp	lff22_5  ; error
  2781                                  
  2782                                  load_22khz_stereo_8_bit:
  2783                                  	; 02/02/2025
  2784                                  	; 16/11/2023
  2785 00000FE6 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2786                                  					; last of the file?
  2787 00000FEB 7402                    	jz	short lff22s_0		; no
  2788 00000FED F9                      	stc
  2789 00000FEE C3                      	retn
  2790                                  
  2791                                  lff22s_0:
  2792 00000FEF 8EC0                    	mov	es, ax ; buffer segment
  2793 00000FF1 31FF                    	xor	di, di
  2794 00000FF3 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2795                                  	; ds = cs
  2796                                  
  2797                                  	; load file into memory
  2798 00000FF6 8B0E[CB02]                      mov	cx, [loadsize]
  2799 00000FFA 8B1E[7C20]              	mov	bx, [filehandle]
  2800 00000FFE B43F                           	mov	ah, 3Fh
  2801 00001000 CD21                    	int	21h
  2802 00001002 72DF                    	jc	short lff22s_7 ; error !
  2803                                  
  2804 00001004 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2805                                  
  2806 00001006 D1E8                    	shr	ax, 1
  2807                                  	;and	ax, ax
  2808 00001008 7503                    	jnz	short lff22s_8
  2809 0000100A E91DF8                  	jmp	lff22_eof
  2810                                  
  2811                                  lff22s_8:
  2812 0000100D 89C1                    	mov	cx, ax	; word count
  2813                                  lff22s_9:
  2814 0000100F BD0500                  	mov	bp, 5 ; interpolation (one step) loop count
  2815 00001012 C606[9D19]03            	mov	byte [faz], 3  ; 3 steps/phase
  2816                                  lff22s_1:
  2817                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2818 00001017 AD                      	lodsw
  2819                                  	; 02/02/2025
  2820 00001018 8B14                    	mov	dx, [si]
  2821 0000101A 49                      	dec	cx
  2822 0000101B 7503                    	jnz	short lff22s_2_1
  2823 0000101D BA8080                  	mov	dx, 8080h
  2824                                  lff22s_2_1:
  2825                                  	; al = [previous_val_l]
  2826                                  	; ah = [previous_val_r]
  2827                                  	; dl = [next_val_l]
  2828                                  	; dl = [next_val_r]
  2829 00001020 E86705                  	call	interpolating_3_8bit_stereo ; 1 of 17
  2830 00001023 E3BB                    	jcxz	lff22s_3
  2831                                  lff22s_2_2:
  2832 00001025 AD                      	lodsw
  2833                                  	; 02/02/2025
  2834 00001026 8B14                    	mov	dx, [si]
  2835 00001028 49                      	dec	cx
  2836 00001029 7503                    	jnz	short lff22s_2_3
  2837 0000102B BA8080                  	mov	dx, 8080h
  2838                                  lff22s_2_3:
  2839 0000102E E8BB05                   	call	interpolating_2_8bit_stereo ; 2 of 17 .. 6 of 17
  2840 00001031 E3AD                    	jcxz	lff22s_3
  2841 00001033 4D                      	dec	bp
  2842 00001034 75EF                    	jnz	short lff22s_2_2
  2843                                  
  2844 00001036 A0[9D19]                	mov	al, [faz]
  2845 00001039 FEC8                    	dec	al
  2846 0000103B 74D2                    	jz	short lff22s_9
  2847 0000103D FE0E[9D19]              	dec	byte [faz]
  2848 00001041 BD0400                  	mov	bp, 4
  2849 00001044 FEC8                    	dec	al
  2850 00001046 75CF                    	jnz	short lff22s_1 ; 3:2:2:2:2 ; 7-11 of 17
  2851 00001048 45                      	inc	bp ; 5
  2852 00001049 EBCC                    	jmp	short lff22s_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2853                                  
  2854                                  load_22khz_mono_16_bit:
  2855                                  	; 02/02/2025
  2856                                  	; 16/11/2023
  2857 0000104B F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2858                                  					; last of the file?
  2859 00001050 7402                    	jz	short lff22m2_0		; no
  2860 00001052 F9                      	stc
  2861 00001053 C3                      	retn
  2862                                  
  2863                                  lff22m2_0:
  2864 00001054 8EC0                    	mov	es, ax ; buffer segment
  2865 00001056 31FF                    	xor	di, di
  2866 00001058 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2867                                  	; ds = cs
  2868                                  
  2869                                  	; load file into memory
  2870 0000105B 8B0E[CB02]                      mov	cx, [loadsize]
  2871 0000105F 8B1E[7C20]              	mov	bx, [filehandle]
  2872 00001063 B43F                           	mov	ah, 3Fh
  2873 00001065 CD21                    	int	21h
  2874 00001067 7248                    	jc	short lff22m2_7 ; error !
  2875                                  
  2876 00001069 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2877                                  	
  2878 0000106B D1E8                    	shr	ax, 1
  2879                                  	;and	ax, ax
  2880 0000106D 7503                    	jnz	short lff22m2_8
  2881 0000106F E9B8F7                  	jmp	lff22_eof
  2882                                  
  2883                                  lff22m2_8:
  2884 00001072 89C1                    	mov	cx, ax	; word count
  2885                                  lff22m2_9:
  2886 00001074 BD0500                  	mov	bp, 5 ; interpolation (one step) loop count
  2887 00001077 C606[9D19]03            	mov	byte [faz], 3  ; 3 steps/phases
  2888                                  lff22m2_1:
  2889                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2890 0000107C AD                      	lodsw
  2891                                  	; 02/02/2025
  2892 0000107D 8B14                    	mov	dx, [si]
  2893 0000107F 49                      	dec	cx
  2894 00001080 7502                    	jnz	short lff22m2_2_1
  2895 00001082 31D2                    	xor	dx, dx
  2896                                  lff22m2_2_1:
  2897                                  	; ax = [previous_val]
  2898                                  	; dx = [next_val]
  2899 00001084 E88E05                  	call	interpolating_3_16bit_mono ; 1 of 17
  2900 00001087 E325                    	jcxz	lff22m2_3
  2901                                  lff22m2_2_2:
  2902 00001089 AD                      	lodsw
  2903                                  	; 02/02/2025
  2904 0000108A 8B14                    	mov	dx, [si]
  2905 0000108C 49                      	dec	cx
  2906 0000108D 7502                    	jnz	short lff22m2_2_3
  2907 0000108F 31D2                    	xor	dx, dx
  2908                                  lff22m2_2_3:
  2909 00001091 E8EE05                   	call	interpolating_2_16bit_mono ; 2 of 17 .. 6 of 17
  2910 00001094 E318                    	jcxz	lff22m2_3
  2911 00001096 4D                      	dec	bp
  2912 00001097 75F0                    	jnz	short lff22m2_2_2
  2913                                  
  2914 00001099 A0[9D19]                	mov	al, [faz]
  2915 0000109C FEC8                    	dec	al
  2916 0000109E 74D4                    	jz	short lff22m2_9
  2917 000010A0 FE0E[9D19]              	dec	byte [faz]
  2918 000010A4 BD0400                  	mov	bp, 4
  2919 000010A7 FEC8                    	dec	al
  2920 000010A9 75D1                    	jnz	short lff22m2_1 ; 3:2:2:2:2 ; 7-11 of 17
  2921 000010AB 45                      	inc	bp ; 5
  2922 000010AC EBCE                    	jmp	short lff22m2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2923                                  
  2924                                  lff22m2_3:
  2925                                  lff22s2_3:
  2926 000010AE E966F7                  	jmp	lff22_3	; padfill
  2927                                  		; (put zeros in the remain words of the buffer)
  2928                                  lff22m2_7:
  2929                                  lff22s2_7:
  2930 000010B1 E97DF7                  	jmp	lff22_5  ; error
  2931                                  
  2932                                  load_22khz_stereo_16_bit:
  2933                                  	; 16/11/2023
  2934 000010B4 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  2935                                  					; last of the file?
  2936 000010B9 7402                    	jz	short lff22s2_0		; no
  2937 000010BB F9                      	stc
  2938 000010BC C3                      	retn
  2939                                  
  2940                                  lff22s2_0:
  2941 000010BD 8EC0                    	mov	es, ax ; buffer segment
  2942 000010BF 31FF                    	xor	di, di
  2943 000010C1 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  2944                                  	; ds = cs
  2945                                  
  2946                                  	; load file into memory
  2947 000010C4 8B0E[CB02]                      mov	cx, [loadsize]
  2948 000010C8 8B1E[7C20]              	mov	bx, [filehandle]
  2949 000010CC B43F                           	mov	ah, 3Fh
  2950 000010CE CD21                    	int	21h
  2951 000010D0 72DF                    	jc	short lff22s2_7 ; error !
  2952                                  
  2953 000010D2 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  2954                                  	
  2955 000010D4 C1E802                  	shr	ax, 2	; dword (left chan word + right chan word)
  2956                                  	;and	ax, ax
  2957 000010D7 7503                    	jnz	short lff22s2_8
  2958 000010D9 E94EF7                  	jmp	lff22_eof
  2959                                  
  2960                                  lff22s2_8:
  2961 000010DC 89C1                    	mov	cx, ax	; dword count
  2962                                  lff22s2_9:
  2963 000010DE BD0500                  	mov	bp, 5 ; interpolation (one step) loop count
  2964 000010E1 C606[9D19]03            	mov	byte [faz], 3  ; 3 steps/phase
  2965                                  lff22s2_1:
  2966                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2967 000010E6 AD                      	lodsw
  2968 000010E7 89C3                    	mov	bx, ax
  2969 000010E9 AD                      	lodsw
  2970 000010EA 8B14                    	mov	dx, [si]
  2971 000010EC 8916[9919]              	mov	[next_val_l], dx
  2972 000010F0 8B5402                  	mov	dx, [si+2]
  2973 000010F3 49                      	dec	cx
  2974 000010F4 7506                    	jnz	short lff22s2_2_1
  2975 000010F6 31D2                    	xor	dx, dx ; 0
  2976 000010F8 8916[9919]              	mov	[next_val_l], dx
  2977                                  lff22s2_2_1:
  2978                                  	; bx = [previous_val_l]
  2979                                  	; ax = [previous_val_r]
  2980                                  	; [next_val_l]
  2981                                  	; dx = [next_val_r]
  2982 000010FC E83A05                  	call	interpolating_3_16bit_stereo ; 1 of 17 
  2983 000010FF E3AD                    	jcxz	lff22s2_3
  2984                                  lff22s2_2_2:
  2985 00001101 AD                      	lodsw
  2986 00001102 89C3                    	mov	bx, ax
  2987 00001104 AD                      	lodsw
  2988 00001105 8B14                    	mov	dx, [si]
  2989 00001107 8916[9919]              	mov	[next_val_l], dx
  2990 0000110B 8B5402                  	mov	dx, [si+2]
  2991 0000110E 49                      	dec	cx
  2992 0000110F 7506                    	jnz	short lff22s2_2_3
  2993 00001111 31D2                    	xor	dx, dx ; 0
  2994 00001113 8916[9919]              	mov	[next_val_l], dx
  2995                                  lff22s2_2_3:
  2996 00001117 E87A05                   	call	interpolating_2_16bit_stereo ; 2 of 17 .. 6 of 17
  2997 0000111A E392                    	jcxz	lff22s2_3
  2998 0000111C 4D                      	dec	bp
  2999 0000111D 75E2                    	jnz	short lff22s2_2_2
  3000                                  
  3001 0000111F A0[9D19]                	mov	al, [faz]
  3002 00001122 FEC8                    	dec	al
  3003 00001124 74B8                    	jz	short lff22s2_9
  3004 00001126 FE0E[9D19]              	dec	byte [faz]
  3005 0000112A BD0400                  	mov	bp, 4
  3006 0000112D FEC8                    	dec	al
  3007 0000112F 75B5                    	jnz	short lff22s2_1 ; 3:2:2:2:2 ; 7-11 of 17
  3008 00001131 45                      	inc	bp ; 5
  3009 00001132 EBB2                    	jmp	short lff22s2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  3010                                  
  3011                                  ; .....................
  3012                                  
  3013                                  load_11khz_mono_8_bit:
  3014                                  	; 02/02/2025
  3015                                  	; 18/11/2023
  3016 00001134 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3017                                  					; last of the file?
  3018 00001139 7402                    	jz	short lff11m_0		; no
  3019 0000113B F9                      	stc
  3020 0000113C C3                      	retn
  3021                                  
  3022                                  lff11m_0:
  3023 0000113D 8EC0                    	mov	es, ax ; buffer segment
  3024 0000113F 31FF                    	xor	di, di
  3025 00001141 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3026                                  	; ds = cs
  3027                                  
  3028                                  	; load file into memory
  3029 00001144 8B0E[CB02]                      mov	cx, [loadsize]
  3030 00001148 8B1E[7C20]              	mov	bx, [filehandle]
  3031 0000114C B43F                           	mov	ah, 3Fh
  3032 0000114E CD21                    	int	21h
  3033 00001150 723D                    	jc	short lff11m_7 ; error !
  3034                                  
  3035 00001152 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3036                                  	
  3037 00001154 21C0                    	and	ax, ax
  3038 00001156 7503                    	jnz	short lff11m_8
  3039 00001158 E9CFF6                  	jmp	lff11_eof
  3040                                  
  3041                                  lff11m_8:
  3042 0000115B 89C1                    	mov	cx, ax	; byte count
  3043                                  lff11m_9:
  3044 0000115D BD0600                  	mov	bp, 6 ; interpolation (one step) loop count
  3045                                  lff11m_1:
  3046                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3047 00001160 AC                      	lodsb
  3048                                  	; 02/02/2025
  3049 00001161 8A14                    	mov	dl, [si]
  3050 00001163 49                      	dec	cx
  3051 00001164 7502                    	jnz	short lff11m_2_1
  3052 00001166 B280                    	mov	dl, 80h
  3053                                  lff11m_2_1:
  3054                                  	; al = [previous_val]
  3055                                  	; dl = [next_val]
  3056 00001168 E84F05                  	call	interpolating_5_8bit_mono
  3057 0000116B E31F                    	jcxz	lff11m_3
  3058                                  lff11m_2_2:
  3059 0000116D AC                      	lodsb
  3060                                  	; 02/02/2025
  3061 0000116E 8A14                    	mov	dl, [si]
  3062 00001170 49                      	dec	cx
  3063 00001171 7502                    	jnz	short lff11m_2_3
  3064 00001173 B280                    	mov	dl, 80h
  3065                                  lff11m_2_3:
  3066 00001175 E82B06                   	call	interpolating_4_8bit_mono
  3067 00001178 E312                    	jcxz	lff11m_3
  3068                                  
  3069 0000117A 4D                      	dec	bp
  3070 0000117B 74E0                    	jz	short lff11m_9
  3071                                  
  3072 0000117D AC                      	lodsb
  3073                                  	; 02/02/2025
  3074 0000117E 8A14                    	mov	dl, [si]
  3075 00001180 49                      	dec	cx
  3076 00001181 7502                    	jnz	short lff11m_2_4
  3077 00001183 B280                    	mov	dl, 80h
  3078                                  lff11m_2_4:
  3079 00001185 E81B06                  	call	interpolating_4_8bit_mono
  3080 00001188 E302                    	jcxz	lff11m_3
  3081 0000118A EBD4                    	jmp	short lff11m_1
  3082                                  
  3083                                  lff11m_3:
  3084                                  lff11s_3:
  3085 0000118C E988F6                  	jmp	lff11_3	; padfill
  3086                                  		; (put zeros in the remain words of the buffer)
  3087                                  lff11m_7:
  3088                                  lff11s_7:
  3089 0000118F E99FF6                  	jmp	lff11_5  ; error
  3090                                  
  3091                                  load_11khz_stereo_8_bit:
  3092                                  	; 02/02/2025
  3093                                  	; 18/11/2023
  3094 00001192 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3095                                  					; last of the file?
  3096 00001197 7402                    	jz	short lff11s_0		; no
  3097 00001199 F9                      	stc
  3098 0000119A C3                      	retn
  3099                                  
  3100                                  lff11s_0:
  3101 0000119B 8EC0                    	mov	es, ax ; buffer segment
  3102 0000119D 31FF                    	xor	di, di
  3103 0000119F BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3104                                  	; ds = cs
  3105                                  
  3106                                  	; load file into memory
  3107 000011A2 8B0E[CB02]                      mov	cx, [loadsize]
  3108 000011A6 8B1E[7C20]              	mov	bx, [filehandle]
  3109 000011AA B43F                           	mov	ah, 3Fh
  3110 000011AC CD21                    	int	21h
  3111 000011AE 72DF                    	jc	short lff11s_7 ; error !
  3112                                  
  3113 000011B0 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3114                                  
  3115 000011B2 D1E8                    	shr	ax, 1
  3116                                  	;and	ax, ax
  3117 000011B4 7503                    	jnz	short lff11s_8
  3118 000011B6 E971F6                  	jmp	lff11_eof
  3119                                  
  3120                                  lff11s_8:
  3121 000011B9 89C1                    	mov	cx, ax	; word count
  3122                                  lff11s_9:
  3123 000011BB BD0600                  	mov	bp, 6 ; interpolation (one step) loop count
  3124                                  lff11s_1:
  3125                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3126 000011BE AD                      	lodsw
  3127                                  	; 02/02/2025
  3128 000011BF 8B14                    	mov	dx, [si]
  3129 000011C1 49                      	dec	cx
  3130 000011C2 7503                    	jnz	short lff11s_2_1
  3131 000011C4 BA8080                  	mov	dx, 8080h
  3132                                  lff11s_2_1:
  3133                                  	; al = [previous_val_l]
  3134                                  	; ah = [previous_val_r]
  3135                                  	; dl = [next_val_l]
  3136                                  	; dl = [next_val_r]
  3137 000011C7 E84005                  	call	interpolating_5_8bit_stereo
  3138 000011CA E3C0                    	jcxz	lff11s_3
  3139                                  lff11s_2_2:
  3140 000011CC AD                      	lodsw
  3141                                  	; 02/02/2025
  3142 000011CD 8B14                    	mov	dx, [si]
  3143 000011CF 49                      	dec	cx
  3144 000011D0 7503                    	jnz	short lff11s_2_3
  3145 000011D2 BA8080                  	mov	dx, 8080h
  3146                                  lff11s_2_3:
  3147 000011D5 E8FE05                   	call	interpolating_4_8bit_stereo
  3148 000011D8 E3B2                    	jcxz	lff11s_3
  3149                                  	
  3150 000011DA 4D                      	dec	bp
  3151 000011DB 74DE                    	jz	short lff11s_9
  3152                                  
  3153 000011DD AD                      	lodsw
  3154                                  	; 02/02/2025
  3155 000011DE 8B14                    	mov	dx, [si]
  3156 000011E0 49                      	dec	cx
  3157 000011E1 7503                    	jnz	short lff11s_2_4
  3158 000011E3 BA8080                  	mov	dx, 8080h
  3159                                  lff11s_2_4:
  3160 000011E6 E8ED05                  	call	interpolating_4_8bit_stereo
  3161 000011E9 E3A1                    	jcxz	lff11s_3
  3162 000011EB EBD1                    	jmp	short lff11s_1
  3163                                  
  3164                                  load_11khz_mono_16_bit:
  3165                                  	; 02/02/2025
  3166                                  	; 18/11/2023
  3167 000011ED F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3168                                  					; last of the file?
  3169 000011F2 7402                    	jz	short lff11m2_0		; no
  3170 000011F4 F9                      	stc
  3171 000011F5 C3                      	retn
  3172                                  
  3173                                  lff11m2_0:
  3174 000011F6 8EC0                    	mov	es, ax ; buffer segment
  3175 000011F8 31FF                    	xor	di, di
  3176 000011FA BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3177                                  	; ds = cs
  3178                                  
  3179                                  	; load file into memory
  3180 000011FD 8B0E[CB02]                      mov	cx, [loadsize]
  3181 00001201 8B1E[7C20]              	mov	bx, [filehandle]
  3182 00001205 B43F                           	mov	ah, 3Fh
  3183 00001207 CD21                    	int	21h
  3184 00001209 723A                    	jc	short lff11m2_7 ; error !
  3185                                  
  3186 0000120B 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3187                                  	
  3188 0000120D D1E8                    	shr	ax, 1
  3189                                  	;and	ax, ax
  3190 0000120F 7503                    	jnz	short lff11m2_8
  3191 00001211 E916F6                  	jmp	lff11_eof
  3192                                  
  3193                                  lff11m2_8:
  3194 00001214 89C1                    	mov	cx, ax	; word count
  3195                                  lff11m2_9:
  3196 00001216 BD0600                  	mov	bp, 6 ; interpolation (one step) loop count
  3197                                  lff11m2_1:
  3198                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3199 00001219 AD                      	lodsw
  3200                                  	; 02/02/2025
  3201 0000121A 8B14                    	mov	dx, [si]
  3202 0000121C 49                      	dec	cx
  3203 0000121D 7502                    	jnz	short lff11m2_2_1
  3204 0000121F 31D2                    	xor	dx, dx
  3205                                  lff11m2_2_1:
  3206                                  	; ax = [previous_val]
  3207                                  	; dx = [next_val]
  3208 00001221 E80F06                  	call	interpolating_5_16bit_mono
  3209 00001224 E34A                    	jcxz	lff11m2_3
  3210                                  lff11m2_2_2:
  3211 00001226 AD                      	lodsw
  3212                                  	; 02/02/2025
  3213 00001227 8B14                    	mov	dx, [si]
  3214 00001229 49                      	dec	cx
  3215 0000122A 7502                    	jnz	short lff11m2_2_3
  3216 0000122C 31D2                    	xor	dx, dx
  3217                                  lff11m2_2_3:
  3218 0000122E E8DD06                   	call	interpolating_4_16bit_mono
  3219 00001231 E33D                    	jcxz	lff11m2_3
  3220                                  
  3221 00001233 4D                      	dec	bp
  3222 00001234 74E0                    	jz	short lff11m2_9
  3223                                  
  3224 00001236 AD                      	lodsw
  3225                                  	; 02/02/2025
  3226 00001237 8B14                    	mov	dx, [si]
  3227 00001239 49                      	dec	cx
  3228 0000123A 7502                    	jnz	short lff11m2_2_4
  3229 0000123C 31D2                    	xor	dx, dx
  3230                                  lff11m2_2_4:
  3231 0000123E E8CD06                   	call	interpolating_4_16bit_mono
  3232 00001241 E32D                    	jcxz	lff11m2_3
  3233 00001243 EBD4                    	jmp	short lff11m2_1
  3234                                  
  3235                                  lff11m2_7:
  3236                                  lff11s2_7:
  3237 00001245 E9E9F5                  	jmp	lff11_5  ; error
  3238                                  
  3239                                  load_11khz_stereo_16_bit:
  3240                                  	; 18/11/2023
  3241 00001248 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3242                                  					; last of the file?
  3243 0000124D 7402                    	jz	short lff11s2_0		; no
  3244 0000124F F9                      	stc
  3245 00001250 C3                      	retn
  3246                                  
  3247                                  lff11s2_0:
  3248 00001251 8EC0                    	mov	es, ax ; buffer segment
  3249 00001253 31FF                    	xor	di, di
  3250 00001255 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3251                                  	; ds = cs
  3252                                  
  3253                                  	; load file into memory
  3254 00001258 8B0E[CB02]                      mov	cx, [loadsize]
  3255 0000125C 8B1E[7C20]              	mov	bx, [filehandle]
  3256 00001260 B43F                           	mov	ah, 3Fh
  3257 00001262 CD21                    	int	21h
  3258 00001264 72DF                    	jc	short lff11s2_7 ; error !
  3259                                  
  3260 00001266 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3261                                  	
  3262 00001268 C1E802                  	shr	ax, 2	; dword (left chan word + right chan word)
  3263                                  	;and	ax, ax
  3264 0000126B 7506                    	jnz	short lff11s2_8
  3265 0000126D E9BAF5                  	jmp	lff11_eof
  3266                                  
  3267                                  lff11m2_3:
  3268                                  lff11s2_3:
  3269 00001270 E9A4F5                  	jmp	lff11_3	; padfill
  3270                                  		; (put zeros in the remain words of the buffer)
  3271                                  
  3272                                  lff11s2_8:
  3273 00001273 89C1                    	mov	cx, ax	; dword count
  3274                                  lff11s2_9:
  3275 00001275 BD0600                  	mov	bp, 6 ; interpolation (one step) loop count
  3276                                  lff11s2_1:
  3277                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3278 00001278 AD                      	lodsw
  3279 00001279 89C3                    	mov	bx, ax
  3280 0000127B AD                      	lodsw
  3281 0000127C 8B14                    	mov	dx, [si]
  3282 0000127E 8916[9919]              	mov	[next_val_l], dx
  3283 00001282 8B5402                  	mov	dx, [si+2]
  3284 00001285 8916[9B19]              	mov	[next_val_r], dx
  3285 00001289 49                      	dec	cx
  3286 0000128A 750A                    	jnz	short lff11s2_2_1
  3287 0000128C 31D2                    	xor	dx, dx ; 0
  3288 0000128E 8916[9919]              	mov	[next_val_l], dx
  3289 00001292 8916[9B19]              	mov	[next_val_r], dx
  3290                                  lff11s2_2_1:
  3291                                  	; bx = [previous_val_l]
  3292                                  	; ax = [previous_val_r]
  3293                                  	; [next_val_l]
  3294                                  	; dx = [next_val_r]
  3295 00001296 E8DD05                  	call	interpolating_5_16bit_stereo
  3296 00001299 E3D5                    	jcxz	lff11s2_3
  3297                                  lff11s2_2_2:
  3298 0000129B AD                      	lodsw
  3299 0000129C 89C3                    	mov	bx, ax
  3300 0000129E AD                      	lodsw
  3301 0000129F 8B14                    	mov	dx, [si]
  3302 000012A1 8916[9919]              	mov	[next_val_l], dx
  3303 000012A5 8B5402                  	mov	dx, [si+2]
  3304 000012A8 8916[9B19]              	mov	[next_val_r], dx
  3305 000012AC 49                      	dec	cx
  3306 000012AD 750A                    	jnz	short lff11s2_2_3
  3307 000012AF 31D2                    	xor	dx, dx ; 0
  3308 000012B1 8916[9919]              	mov	[next_val_l], dx
  3309 000012B5 8916[9B19]              	mov	[next_val_r], dx
  3310                                  lff11s2_2_3:
  3311 000012B9 E87D06                   	call	interpolating_4_16bit_stereo
  3312 000012BC E3B2                    	jcxz	lff11s2_3
  3313                                  	
  3314 000012BE 4D                      	dec	bp
  3315 000012BF 74B4                    	jz	short lff11s2_9
  3316                                  
  3317 000012C1 AD                      	lodsw
  3318 000012C2 89C3                    	mov	bx, ax
  3319 000012C4 AD                      	lodsw
  3320 000012C5 8B14                    	mov	dx, [si]
  3321 000012C7 8916[9919]              	mov	[next_val_l], dx
  3322 000012CB 8B5402                  	mov	dx, [si+2]
  3323 000012CE 8916[9B19]              	mov	[next_val_r], dx
  3324 000012D2 49                      	dec	cx
  3325 000012D3 750A                    	jnz	short lff11s2_2_4
  3326 000012D5 31D2                    	xor	dx, dx ; 0
  3327 000012D7 8916[9919]              	mov	[next_val_l], dx
  3328 000012DB 8916[9B19]              	mov	[next_val_r], dx
  3329                                  lff11s2_2_4:
  3330 000012DF E85706                   	call	interpolating_4_16bit_stereo
  3331 000012E2 E38C                    	jcxz	lff11s2_3
  3332 000012E4 EB92                    	jmp	short lff11s2_1
  3333                                  
  3334                                  ; .....................
  3335                                  
  3336                                  load_44khz_mono_8_bit:
  3337                                  	; 02/02/2025
  3338                                  	; 18/11/2023
  3339 000012E6 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3340                                  					; last of the file?
  3341 000012EB 7402                    	jz	short lff44m_0		; no
  3342 000012ED F9                      	stc
  3343 000012EE C3                      	retn
  3344                                  
  3345                                  lff44m_0:
  3346 000012EF 8EC0                    	mov	es, ax ; buffer segment
  3347 000012F1 31FF                    	xor	di, di
  3348 000012F3 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3349                                  	; ds = cs
  3350                                  
  3351                                  	; load file into memory
  3352 000012F6 8B0E[CB02]                      mov	cx, [loadsize]
  3353 000012FA 8B1E[7C20]              	mov	bx, [filehandle]
  3354 000012FE B43F                           	mov	ah, 3Fh
  3355 00001300 CD21                    	int	21h
  3356 00001302 723C                    	jc	short lff44m_7 ; error !
  3357                                  
  3358 00001304 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3359                                  
  3360 00001306 21C0                    	and	ax, ax
  3361 00001308 7503                    	jnz	short lff44m_8
  3362 0000130A E91DF5                  	jmp	lff44_eof
  3363                                  
  3364                                  lff44m_8:
  3365 0000130D 89C1                    	mov	cx, ax	; byte count
  3366                                  lff44m_9:
  3367 0000130F BD0A00                  	mov	bp, 10 ; interpolation (one step) loop count
  3368 00001312 C606[9D19]02            	mov	byte [faz], 2  ; 2 steps/phases
  3369                                  lff44m_1:
  3370                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3371                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3372 00001317 AC                      	lodsb
  3373                                  	; 02/02/2025
  3374 00001318 8A14                    	mov	dl, [si]
  3375 0000131A 49                      	dec	cx
  3376 0000131B 7502                    	jnz	short lff44m_2_1
  3377 0000131D B280                    	mov	dl, 80h
  3378                                  lff44m_2_1:
  3379                                  	; al = [previous_val]
  3380                                  	; dl = [next_val]
  3381 0000131F E8B302                  	call	interpolating_2_8bit_mono
  3382 00001322 E319                    	jcxz	lff44m_3
  3383                                  lff44m_2_2:
  3384 00001324 AC                      	lodsb
  3385 00001325 2C80                    	sub	al, 80h
  3386 00001327 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3387 0000132A AB                      	stosw		; (L)
  3388 0000132B AB                      	stosw		; (R)
  3389                                  
  3390 0000132C 49                      	dec	cx
  3391 0000132D 740E                    	jz	short lff44m_3
  3392 0000132F 4D                      	dec	bp
  3393 00001330 75F2                    	jnz	short lff44m_2_2
  3394                                  
  3395 00001332 FE0E[9D19]              	dec	byte [faz]
  3396 00001336 74D7                    	jz	short lff44m_9
  3397 00001338 BD0B00                  	mov	bp, 11
  3398 0000133B EBDA                    	jmp	short lff44m_1
  3399                                  
  3400                                  lff44m_3:
  3401                                  lff44s_3:
  3402 0000133D E9D7F4                  	jmp	lff44_3	; padfill
  3403                                  		; (put zeros in the remain words of the buffer)
  3404                                  lff44m_7:
  3405                                  lff44s_7:
  3406 00001340 E9EEF4                  	jmp	lff44_5  ; error
  3407                                  
  3408                                  load_44khz_stereo_8_bit:
  3409                                  	; 02/02/2025
  3410                                  	; 16/11/2023
  3411 00001343 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3412                                  					; last of the file?
  3413 00001348 7402                    	jz	short lff44s_0		; no
  3414 0000134A F9                      	stc
  3415 0000134B C3                      	retn
  3416                                  
  3417                                  lff44s_0:
  3418 0000134C 8EC0                    	mov	es, ax ; buffer segment
  3419 0000134E 31FF                    	xor	di, di
  3420 00001350 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3421                                  	; ds = cs
  3422                                  
  3423                                  	; load file into memory
  3424 00001353 8B0E[CB02]                      mov	cx, [loadsize]
  3425 00001357 8B1E[7C20]              	mov	bx, [filehandle]
  3426 0000135B B43F                           	mov	ah, 3Fh
  3427 0000135D CD21                    	int	21h
  3428 0000135F 72DF                    	jc	short lff44s_7 ; error !
  3429                                  
  3430 00001361 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3431                                  
  3432 00001363 D1E8                    	shr	ax, 1
  3433                                  	;and	ax, ax
  3434 00001365 7503                    	jnz	short lff44s_8
  3435 00001367 E9C0F4                  	jmp	lff44_eof
  3436                                  
  3437                                  lff44s_8:
  3438 0000136A 89C1                    	mov	cx, ax	; word count
  3439                                  lff44s_9:
  3440 0000136C BD0A00                  	mov	bp, 10 ; interpolation (one step) loop count
  3441 0000136F C606[9D19]02            	mov	byte [faz], 2  ; 2 steps/phase
  3442                                  lff44s_1:
  3443                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3444                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3445 00001374 AD                      	lodsw
  3446                                  	; 02/02/2025
  3447 00001375 8B14                    	mov	dx, [si]
  3448 00001377 49                      	dec	cx
  3449 00001378 7503                    	jnz	short lff44s_2_1
  3450 0000137A BA8080                  	mov	dx, 8080h
  3451                                  lff44s_2_1:
  3452                                  	; al = [previous_val_l]
  3453                                  	; ah = [previous_val_r]
  3454                                  	; dl = [next_val_l]
  3455                                  	; dl = [next_val_r]
  3456 0000137D E86C02                  	call	interpolating_2_8bit_stereo
  3457 00001380 E3BB                    	jcxz	lff44s_3
  3458                                  lff44s_2_2:
  3459 00001382 AC                      	lodsb
  3460 00001383 2C80                    	sub	al, 80h
  3461 00001385 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3462 00001388 AB                      	stosw		; (L)
  3463 00001389 AC                      	lodsb
  3464 0000138A 2C80                    	sub	al, 80h
  3465 0000138C C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3466 0000138F AB                      	stosw		; (R)
  3467                                  
  3468 00001390 49                      	dec	cx
  3469 00001391 74AA                    	jz	short lff44s_3
  3470 00001393 4D                      	dec	bp
  3471 00001394 75EC                    	jnz	short lff44s_2_2
  3472                                  	
  3473 00001396 FE0E[9D19]              	dec	byte [faz]
  3474 0000139A 74D0                    	jz	short lff44s_9
  3475 0000139C BD0B00                  	mov	bp, 11
  3476 0000139F EBD3                    	jmp	short lff44s_1
  3477                                  
  3478                                  load_44khz_mono_16_bit:
  3479                                  	; 02/02/2025
  3480                                  	; 18/11/2023
  3481 000013A1 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3482                                  					; last of the file?
  3483 000013A6 7402                    	jz	short lff44m2_0		; no
  3484 000013A8 F9                      	stc
  3485 000013A9 C3                      	retn
  3486                                  
  3487                                  lff44m2_0:
  3488 000013AA 8EC0                    	mov	es, ax ; buffer segment
  3489 000013AC 31FF                    	xor	di, di
  3490 000013AE BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3491                                  	; ds = cs
  3492                                  
  3493                                  	; load file into memory
  3494 000013B1 8B0E[CB02]                      mov	cx, [loadsize]
  3495 000013B5 8B1E[7C20]              	mov	bx, [filehandle]
  3496 000013B9 B43F                           	mov	ah, 3Fh
  3497 000013BB CD21                    	int	21h
  3498 000013BD 7237                    	jc	short lff44m2_7 ; error !
  3499                                  
  3500 000013BF 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3501                                  	
  3502 000013C1 D1E8                    	shr	ax, 1
  3503                                  	;and	ax, ax
  3504 000013C3 7503                    	jnz	short lff44m2_8
  3505 000013C5 E962F4                  	jmp	lff44_eof
  3506                                  
  3507                                  lff44m2_8:
  3508 000013C8 89C1                    	mov	cx, ax	; word count
  3509                                  lff44m2_9:
  3510 000013CA BD0A00                  	mov	bp, 10 ; interpolation (one step) loop count
  3511 000013CD C606[9D19]02            	mov	byte [faz], 2  ; 2 steps/phases
  3512                                  lff44m2_1:
  3513                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3514                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3515 000013D2 AD                      	lodsw
  3516                                  	; 02/02/2025
  3517 000013D3 8B14                    	mov	dx, [si]
  3518 000013D5 49                      	dec	cx
  3519 000013D6 7502                    	jnz	short lff44m2_2_1
  3520 000013D8 31D2                    	xor	dx, dx
  3521                                  lff44m2_2_1:
  3522                                  	; ax = [previous_val]
  3523                                  	; dx = [next_val]
  3524 000013DA E8A502                  	call	interpolating_2_16bit_mono
  3525 000013DD E314                    	jcxz	lff44m2_3
  3526                                  lff44m2_2_2:
  3527 000013DF AD                      	lodsw
  3528 000013E0 AB                      	stosw		; (L)eft Channel
  3529 000013E1 AB                      	stosw		; (R)ight Channel
  3530                                  
  3531 000013E2 49                      	dec	cx
  3532 000013E3 740E                    	jz	short lff44m2_3	
  3533 000013E5 4D                      	dec	bp
  3534 000013E6 75F7                    	jnz	short lff44m2_2_2
  3535                                  	
  3536 000013E8 FE0E[9D19]              	dec	byte [faz]
  3537 000013EC 74DC                    	jz	short lff44m2_9 
  3538 000013EE BD0B00                  	mov	bp, 11
  3539 000013F1 EBDF                    	jmp	short lff44m2_1
  3540                                  
  3541                                  lff44m2_3:
  3542                                  lff44s2_3:
  3543 000013F3 E921F4                  	jmp	lff44_3	; padfill
  3544                                  		; (put zeros in the remain words of the buffer)
  3545                                  lff44m2_7:
  3546                                  lff44s2_7:
  3547 000013F6 E938F4                  	jmp	lff44_5  ; error
  3548                                  
  3549                                  load_44khz_stereo_16_bit:
  3550                                  	; 18/11/2023
  3551 000013F9 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3552                                  					; last of the file?
  3553 000013FE 7402                    	jz	short lff44s2_0		; no
  3554 00001400 F9                      	stc
  3555 00001401 C3                      	retn
  3556                                  
  3557                                  lff44s2_0:
  3558 00001402 8EC0                    	mov	es, ax ; buffer segment
  3559 00001404 31FF                    	xor	di, di
  3560 00001406 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3561                                  	; ds = cs
  3562                                  
  3563                                  	; load file into memory
  3564 00001409 8B0E[CB02]                      mov	cx, [loadsize]
  3565 0000140D 8B1E[7C20]              	mov	bx, [filehandle]
  3566 00001411 B43F                           	mov	ah, 3Fh
  3567 00001413 CD21                    	int	21h
  3568 00001415 72DF                    	jc	short lff44s2_7 ; error !
  3569                                  
  3570 00001417 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3571                                  	
  3572 00001419 C1E802                  	shr	ax, 2	; dword (left chan word + right chan word)
  3573                                  	;and	ax, ax
  3574 0000141C 7503                    	jnz	short lff44s2_8
  3575 0000141E E909F4                  	jmp	lff44_eof
  3576                                  
  3577                                  lff44s2_8:
  3578 00001421 89C1                    	mov	cx, ax	; dword count
  3579                                  lff44s2_9:
  3580 00001423 BD0A00                  	mov	bp, 10 ; interpolation (one step) loop count
  3581 00001426 C606[9D19]02            	mov	byte [faz], 2  ; 2 steps/phase
  3582                                  lff44s2_1:
  3583                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3584                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3585 0000142B AD                      	lodsw
  3586 0000142C 89C3                    	mov	bx, ax
  3587 0000142E AD                      	lodsw
  3588 0000142F 8B14                    	mov	dx, [si]
  3589 00001431 8916[9919]              	mov	[next_val_l], dx
  3590 00001435 8B5402                  	mov	dx, [si+2]
  3591 00001438 49                      	dec	cx
  3592 00001439 7506                    	jnz	short lff44s2_2_1
  3593 0000143B 31D2                    	xor	dx, dx ; 0
  3594 0000143D 8916[9919]              	mov	[next_val_l], dx
  3595                                  lff44s2_2_1:
  3596                                  	; bx = [previous_val_l]
  3597                                  	; ax = [previous_val_r]
  3598                                  	; [next_val_l]
  3599                                  	; dx = [next_val_r]
  3600 00001441 E85002                  	call	interpolating_2_16bit_stereo
  3601 00001444 E3AD                    	jcxz	lff44s2_3
  3602                                  lff44s2_2_2:
  3603                                  	;lodsw
  3604                                  	;stosw		; (L)
  3605                                  	;lodsw
  3606                                  	;stosw		; (R)
  3607 00001446 A5                      	movsw		; (L)eft Channel
  3608 00001447 A5                      	movsw		; (R)ight Channel
  3609                                  
  3610 00001448 49                      	dec	cx
  3611 00001449 74A8                    	jz	short lff44s2_3	
  3612 0000144B 4D                      	dec	bp
  3613 0000144C 75F8                    	jnz	short lff44s2_2_2
  3614                                  	
  3615 0000144E FE0E[9D19]              	dec	byte [faz]
  3616 00001452 74CF                    	jz	short lff44s2_9 
  3617 00001454 BD0B00                  	mov	bp, 11
  3618 00001457 EBD2                    	jmp	short lff44s2_1
  3619                                  
  3620                                  ; .....................
  3621                                  
  3622                                  	; 02/02/2025
  3623                                  load_12khz_mono_8_bit:
  3624 00001459 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3625                                  					; last of the file?
  3626 0000145E 7402                    	jz	short lff12m_0		; no
  3627 00001460 F9                      	stc
  3628 00001461 C3                      	retn
  3629                                  
  3630                                  lff12m_0:
  3631 00001462 8EC0                    	mov	es, ax ; buffer segment
  3632 00001464 31FF                    	xor	di, di
  3633 00001466 BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3634                                  	; ds = cs
  3635                                  
  3636                                  	; load file into memory
  3637 00001469 8B0E[CB02]                      mov	cx, [loadsize]
  3638 0000146D 8B1E[7C20]              	mov	bx, [filehandle]
  3639 00001471 B43F                           	mov	ah, 3Fh
  3640 00001473 CD21                    	int	21h
  3641 00001475 7241                    	jc	short lff12m_7 ; error ! !
  3642                                  
  3643 00001477 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3644                                  	
  3645 00001479 21C0                    	and	ax, ax
  3646 0000147B 7503                    	jnz	short lff12m_8
  3647 0000147D E9AAF3                  	jmp	lff12_eof
  3648                                  
  3649                                  lff12m_8:
  3650 00001480 89C1                    	mov	cx, ax	; byte count
  3651                                  lff12m_1:
  3652                                  	; original-interpolated-interpolated-interpolated
  3653 00001482 AC                      	lodsb
  3654                                  	; 02/02/2025
  3655 00001483 8A14                    	mov	dl, [si]
  3656 00001485 49                      	dec	cx
  3657 00001486 7502                    	jnz	short lff12m_2
  3658 00001488 B280                    	mov	dl, 80h
  3659                                  lff12m_2:
  3660                                  	; al = [previous_val]
  3661                                  	; dl = [next_val]
  3662 0000148A E81603                   	call	interpolating_4_8bit_mono
  3663 0000148D E33F                    	jcxz	lff12m_3
  3664 0000148F EBF1                    	jmp	short lff12m_1
  3665                                  
  3666                                  	; 02/02/2025
  3667                                  load_12khz_stereo_8_bit:
  3668 00001491 F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3669                                  					; last of the file?
  3670 00001496 7402                    	jz	short lff12s_0		; no
  3671 00001498 F9                      	stc
  3672 00001499 C3                      	retn
  3673                                  
  3674                                  lff12s_0:
  3675 0000149A 8EC0                    	mov	es, ax ; buffer segment
  3676 0000149C 31FF                    	xor	di, di
  3677 0000149E BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3678                                  	; ds = cs
  3679                                  
  3680                                  	; load file into memory
  3681 000014A1 8B0E[CB02]                      mov	cx, [loadsize]
  3682 000014A5 8B1E[7C20]              	mov	bx, [filehandle]
  3683 000014A9 B43F                           	mov	ah, 3Fh
  3684 000014AB CD21                    	int	21h
  3685 000014AD 7209                    	jc	short lff12s_7 ; error !
  3686                                  
  3687 000014AF 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3688                                  	
  3689 000014B1 D1E8                    	shr	ax, 1
  3690                                  	;and	ax, ax
  3691 000014B3 7506                    	jnz	short lff12s_8
  3692 000014B5 E972F3                  	jmp	lff12_eof
  3693                                  
  3694                                  lff12m_7:
  3695                                  lff12s_7:
  3696 000014B8 E976F3                  	jmp	lff12_5  ; error
  3697                                  
  3698                                  lff12s_8:
  3699 000014BB 89C1                    	mov	cx, ax	; word count
  3700                                  lff12s_1:
  3701                                  	; original-interpolated-interpolated-interpolated
  3702 000014BD AD                      	lodsw
  3703                                  	; 02/02/2025
  3704 000014BE 8B14                    	mov	dx, [si]
  3705 000014C0 49                      	dec	cx
  3706 000014C1 7503                    	jnz	short lff12s_2
  3707 000014C3 BA8080                  	mov	dx, 8080h
  3708                                  lff12s_2:
  3709                                  	; al = [previous_val_l]
  3710                                  	; ah = [previous_val_r]
  3711                                  	; dl = [next_val_l]
  3712                                  	; dh = [next_val_r]
  3713 000014C6 E80D03                  	call	interpolating_4_8bit_stereo
  3714 000014C9 67E302                  	jecxz	lff12s_3
  3715 000014CC EBEF                    	jmp	short lff12s_1
  3716                                  
  3717                                  lff12m_3:
  3718                                  lff12s_3:
  3719 000014CE E946F3                  	jmp	lff12_3	; padfill
  3720                                  		; (put zeros in the remain words of the buffer)
  3721                                  
  3722                                  	; 02/02/2025
  3723                                  load_12khz_mono_16_bit:
  3724 000014D1 F606[7E20]01            	test    byte [flags], ENDOFFILE	; have we already read the
  3725                                  					; last of the file?
  3726 000014D6 7402                    	jz	short lff12m2_0		; no
  3727 000014D8 F9                      	stc
  3728 000014D9 C3                      	retn
  3729                                  
  3730                                  lff12m2_0:
  3731 000014DA 8EC0                    	mov	es, ax ; buffer segment
  3732 000014DC 31FF                    	xor	di, di
  3733 000014DE BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3734                                  	; ds = cs
  3735                                  
  3736                                  	; load file into memory
  3737 000014E1 8B0E[CB02]                      mov	cx, [loadsize]
  3738 000014E5 8B1E[7C20]              	mov	bx, [filehandle]
  3739 000014E9 B43F                           	mov	ah, 3Fh
  3740 000014EB CD21                    	int	21h
  3741 000014ED 721B                    	jc	short lff12m2_7 ; error !
  3742                                  
  3743 000014EF 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3744                                  	
  3745 000014F1 D1E8                    	shr	ax, 1
  3746                                  	;and	ax, ax
  3747 000014F3 7503                    	jnz	short lff12m2_8
  3748 000014F5 E932F3                  	jmp	lff12_eof
  3749                                  
  3750                                  lff12m2_8:
  3751 000014F8 89C1                    	mov	cx, ax	; word count
  3752                                  lff12m2_1:
  3753                                  	; original-interpolated-interpolated-interpolated
  3754 000014FA AD                      	lodsw
  3755                                  	; 02/02/2025
  3756 000014FB 8B14                    	mov	dx, [si]
  3757 000014FD 49                      	dec	cx
  3758 000014FE 7502                    	jnz	short lff12m2_2
  3759 00001500 31D2                    	xor	dx, dx
  3760                                  lff12m2_2:
  3761                                  	; ax = [previous_val]
  3762                                  	; dx = [next_val]
  3763 00001502 E80904                   	call	interpolating_4_16bit_mono
  3764 00001505 67E3C6                  	jecxz	lff12m_3
  3765 00001508 EBF0                    	jmp	short lff12m2_1
  3766                                  
  3767                                  lff12m2_7:
  3768                                  lff12s2_7:
  3769 0000150A E924F3                  	jmp	lff12_5  ; error
  3770                                  
  3771                                  	; 02/02/2025
  3772                                  load_12khz_stereo_16_bit:
  3773 0000150D F606[7E20]01                    test    byte [flags], ENDOFFILE	; have we already read the
  3774                                  					; last of the file?
  3775 00001512 7402                    	jz	short lff12s2_0		; no
  3776 00001514 F9                      	stc
  3777 00001515 C3                      	retn
  3778                                  
  3779                                  lff12s2_0:
  3780 00001516 8EC0                    	mov	es, ax ; buffer segment
  3781 00001518 31FF                    	xor	di, di
  3782 0000151A BA[EC20]                	mov	dx, temp_buffer ; temporary buffer for wav data
  3783                                  	; ds = cs
  3784                                  
  3785                                  	; load file into memory
  3786 0000151D 8B0E[CB02]                      mov	cx, [loadsize]
  3787 00001521 8B1E[7C20]              	mov	bx, [filehandle]
  3788 00001525 B43F                           	mov	ah, 3Fh
  3789 00001527 CD21                    	int	21h
  3790 00001529 72DF                    	jc	short lff12s2_7 ; error !
  3791                                  
  3792 0000152B 89D6                    	mov	si, dx ; temp_buffer ; temporary buffer address
  3793                                  	
  3794 0000152D C1E802                  	shr	ax, 2	; dword (left chan word + right chan word)
  3795                                  	;and	ax, ax
  3796 00001530 7506                    	jnz	short lff12s2_8
  3797 00001532 E9F5F2                  	jmp	lff12_eof
  3798                                  
  3799                                  lff12m2_3:
  3800                                  lff12s2_3:
  3801 00001535 E9DFF2                  	jmp	lff12_3	; padfill
  3802                                  		; (put zeros in the remain words of the buffer)
  3803                                  
  3804                                  lff12s2_8:
  3805 00001538 89C1                    	mov	cx, ax	; dword count
  3806                                  lff12s2_1:
  3807                                  	; original-interpolated-interpolated-interpolated
  3808 0000153A AD                      	lodsw
  3809 0000153B 89C3                    	mov	bx, ax
  3810 0000153D AD                      	lodsw
  3811                                  	; 02/02/2025
  3812 0000153E 8B14                    	mov	dx, [si]
  3813 00001540 8916[9919]              	mov	[next_val_l], dx
  3814 00001544 8B5402                  	mov	dx, [si+2]
  3815 00001547 8916[9B19]              	mov	[next_val_r], dx
  3816 0000154B 49                      	dec	cx
  3817 0000154C 750A                    	jnz	short lff12s2_2
  3818 0000154E 31D2                    	xor	dx, dx ; 0
  3819 00001550 8916[9919]              	mov	[next_val_l], dx
  3820 00001554 8916[9B19]              	mov	[next_val_r], dx
  3821                                  lff12s2_2:
  3822                                  	; bx = [previous_val_l]
  3823                                  	; ax = [previous_val_r]
  3824                                  	; [next_val_l]
  3825                                  	; [next_val_r]
  3826 00001558 E8DE03                  	call	interpolating_4_16bit_stereo
  3827 0000155B 67E3D7                  	jecxz	lff12s2_3
  3828 0000155E EBDA                    	jmp	short lff12s2_1
  3829                                  
  3830                                  ; .....................
  3831                                  
  3832                                  interpolating_3_8bit_mono:
  3833                                  	; 02/02/2025
  3834                                  	; 16/11/2023
  3835                                  	; al = [previous_val]
  3836                                  	; dl = [next_val]
  3837                                  	; original-interpolated-interpolated
  3838 00001560 88C3                    	mov	bl, al
  3839 00001562 2C80                    	sub	al, 80h
  3840 00001564 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3841 00001567 AB                      	stosw		; original sample (L)
  3842 00001568 AB                      	stosw		; original sample (R)
  3843 00001569 88D8                    	mov	al, bl
  3844 0000156B 00D0                    	add	al, dl
  3845 0000156D D0D8                    	rcr	al, 1
  3846 0000156F 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3847 00001571 00D8                    	add	al, bl
  3848 00001573 D0D8                    	rcr	al, 1
  3849 00001575 2C80                    	sub	al, 80h
  3850 00001577 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3851 0000157A AB                      	stosw		; interpolated sample 1 (L)
  3852 0000157B AB                      	stosw		; interpolated sample 1 (R)
  3853 0000157C 88F8                    	mov	al, bh
  3854 0000157E 00D0                    	add	al, dl	; [next_val]
  3855 00001580 D0D8                    	rcr	al, 1
  3856                                  	; 02/02/2025
  3857 00001582 2C80                    	sub	al, 80h
  3858 00001584 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3859 00001587 AB                      	stosw		; interpolated sample 2 (L)
  3860 00001588 AB                      	stosw		; interpolated sample 2 (R)
  3861 00001589 C3                      	retn
  3862                                  
  3863                                  interpolating_3_8bit_stereo:
  3864                                  	; 02/02/2025
  3865                                  	; 16/11/2023
  3866                                  	; al = [previous_val_l]
  3867                                  	; ah = [previous_val_r]
  3868                                  	; dl = [next_val_l]
  3869                                  	; dh = [next_val_r]
  3870                                  	; original-interpolated-interpolated
  3871 0000158A 89C3                    	mov	bx, ax
  3872 0000158C 2C80                    	sub	al, 80h
  3873 0000158E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3874 00001591 AB                      	stosw		; original sample (L)
  3875 00001592 88F8                    	mov	al, bh
  3876 00001594 2C80                    	sub	al, 80h
  3877 00001596 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3878 00001599 AB                      	stosw		; original sample (R)
  3879 0000159A 88D8                    	mov	al, bl
  3880 0000159C 00D0                    	add	al, dl	; [next_val_l]
  3881 0000159E D0D8                    	rcr	al, 1
  3882 000015A0 50                      	push	ax ; *	; al = interpolated middle (L) (temporary)
  3883 000015A1 00D8                    	add	al, bl	; [previous_val_l]
  3884 000015A3 D0D8                    	rcr	al, 1
  3885 000015A5 2C80                    	sub	al, 80h
  3886 000015A7 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3887 000015AA AB                      	stosw		; interpolated sample 1 (L)
  3888 000015AB 88F8                    	mov	al, bh
  3889 000015AD 00F0                    	add	al, dh	; [next_val_r]
  3890 000015AF D0D8                    	rcr	al, 1
  3891 000015B1 50                      	push	ax ; ** ; al = interpolated middle (R) (temporary)
  3892 000015B2 00F8                    	add	al, bh	; [previous_val_r]
  3893 000015B4 D0D8                    	rcr	al, 1
  3894 000015B6 2C80                    	sub	al, 80h
  3895 000015B8 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3896 000015BB AB                      	stosw		; interpolated sample 1 (R)
  3897 000015BC 5B                      	pop	bx ; **
  3898 000015BD 58                      	pop	ax ; *
  3899 000015BE 00D0                    	add	al, dl	; [next_val_l]
  3900 000015C0 D0D8                    	rcr	al, 1
  3901                                  	; 02/02/2025
  3902 000015C2 2C80                    	sub	al, 80h
  3903 000015C4 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3904 000015C7 AB                      	stosw		; interpolated sample 2 (L)
  3905 000015C8 88D8                    	mov	al, bl
  3906 000015CA 00F0                    	add	al, dh	; [next_val_r]
  3907 000015CC D0D8                    	rcr	al, 1
  3908                                  	; 02/02/2025
  3909 000015CE 2C80                    	sub	al, 80h
  3910 000015D0 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3911 000015D3 AB                      	stosw		; interpolated sample 2 (R)
  3912 000015D4 C3                      	retn
  3913                                  
  3914                                  interpolating_2_8bit_mono:
  3915                                  	; 16/11/2023
  3916                                  	; al = [previous_val]
  3917                                  	; dl = [next_val]
  3918                                  	; original-interpolated
  3919 000015D5 88C3                    	mov	bl, al
  3920 000015D7 2C80                    	sub	al, 80h
  3921 000015D9 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3922 000015DC AB                      	stosw		; original sample (L)
  3923 000015DD AB                      	stosw		; original sample (R)
  3924 000015DE 88D8                    	mov	al, bl
  3925 000015E0 00D0                    	add	al, dl
  3926 000015E2 D0D8                    	rcr	al, 1
  3927 000015E4 2C80                    	sub	al, 80h
  3928 000015E6 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3929 000015E9 AB                      	stosw		; interpolated sample (L)
  3930 000015EA AB                      	stosw		; interpolated sample (R)
  3931 000015EB C3                      	retn
  3932                                  
  3933                                  interpolating_2_8bit_stereo:
  3934                                  	; 16/11/2023
  3935                                  	; al = [previous_val_l]
  3936                                  	; ah = [previous_val_r]
  3937                                  	; dl = [next_val_l]
  3938                                  	; dh = [next_val_r]
  3939                                  	; original-interpolated
  3940 000015EC 89C3                    	mov	bx, ax
  3941 000015EE 2C80                    	sub	al, 80h
  3942 000015F0 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3943 000015F3 AB                      	stosw		; original sample (L)
  3944 000015F4 88F8                    	mov	al, bh
  3945 000015F6 2C80                    	sub	al, 80h
  3946 000015F8 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3947 000015FB AB                      	stosw		; original sample (R)
  3948 000015FC 88D8                    	mov	al, bl	; [previous_val_l]
  3949 000015FE 00D0                    	add	al, dl	; [next_val_l]	
  3950 00001600 D0D8                    	rcr	al, 1
  3951 00001602 2C80                    	sub	al, 80h
  3952 00001604 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3953 00001607 AB                      	stosw		; interpolated sample (L)
  3954 00001608 88F8                    	mov	al, bh
  3955 0000160A 00F0                    	add	al, dh	; [next_val_r]
  3956 0000160C D0D8                    	rcr	al, 1
  3957 0000160E 2C80                    	sub	al, 80h
  3958 00001610 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3959 00001613 AB                      	stosw		; interpolated sample (R)
  3960 00001614 C3                      	retn
  3961                                  
  3962                                  interpolating_3_16bit_mono:
  3963                                  	; 16/11/2023
  3964                                  	; ax = [previous_val]
  3965                                  	; dx = [next_val]
  3966                                  	; original-interpolated-interpolated
  3967                                  
  3968 00001615 AB                      	stosw		; original sample (L)
  3969 00001616 AB                      	stosw		; original sample (R)
  3970 00001617 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3971 0000161A 50                      	push	ax ; *	; [previous_val]
  3972 0000161B 80C680                  	add	dh, 80h
  3973 0000161E 01D0                    	add	ax, dx
  3974 00001620 D1D8                    	rcr	ax, 1
  3975 00001622 5B                      	pop	bx ; *
  3976 00001623 93                      	xchg	bx, ax	; bx  = interpolated middle (temporary)
  3977 00001624 01D8                    	add	ax, bx	; [previous_val] + interpolated middle
  3978 00001626 D1D8                    	rcr	ax, 1
  3979 00001628 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3980 0000162B AB                      	stosw 		; interpolated sample 1 (L)
  3981 0000162C AB                      	stosw		; interpolated sample 1 (R)
  3982 0000162D 89D8                    	mov	ax, bx
  3983 0000162F 01D0                    	add	ax, dx	 ;interpolated middle + [next_val]
  3984 00001631 D1D8                    	rcr	ax, 1
  3985 00001633 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3986 00001636 AB                      	stosw		; interpolated sample 2 (L)
  3987 00001637 AB                      	stosw		; interpolated sample 2 (R)
  3988 00001638 C3                      	retn
  3989                                  
  3990                                  interpolating_3_16bit_stereo:
  3991                                  	; 16/11/2023
  3992                                  	; bx = [previous_val_l]
  3993                                  	; ax = [previous_val_r]
  3994                                  	; [next_val_l]
  3995                                  	; dx = [next_val_r]
  3996                                  	; original-interpolated-interpolated
  3997                                  
  3998 00001639 93                      	xchg	ax, bx
  3999 0000163A AB                      	stosw		; original sample (L)
  4000 0000163B 93                      	xchg	ax, bx
  4001 0000163C AB                      	stosw		; original sample (R)
  4002 0000163D 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4003 00001640 50                      	push	ax ; *	; [previous_val_r]
  4004 00001641 80C780                  	add	bh, 80h
  4005 00001644 8006[9A19]80            	add	byte [next_val_l+1], 80h
  4006 00001649 A1[9919]                	mov	ax, [next_val_l]
  4007 0000164C 01D8                    	add	ax, bx	; [previous_val_l]
  4008 0000164E D1D8                    	rcr	ax, 1
  4009 00001650 93                      	xchg	ax, bx	; ax = [previous_val_l]	
  4010 00001651 01D8                    	add	ax, bx	; bx = interpolated middle (L)
  4011 00001653 D1D8                    	rcr	ax, 1
  4012 00001655 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4013 00001658 AB                      	stosw 		; interpolated sample 1 (L)
  4014 00001659 58                      	pop	ax  ; *
  4015 0000165A 80C680                  	add	dh, 80h ; convert sound level 0 to 65535 format
  4016 0000165D 52                      	push	dx  ; * ; [next_val_r]
  4017 0000165E 92                      	xchg	ax, dx
  4018 0000165F 01D0                    	add	ax, dx	; [next_val_r] + [previous_val_r]
  4019 00001661 D1D8                    	rcr	ax, 1	; / 2
  4020 00001663 50                      	push	ax ; ** ; interpolated middle (R)
  4021 00001664 01D0                    	add	ax, dx	; + [previous_val_r]
  4022 00001666 D1D8                    	rcr	ax, 1
  4023 00001668 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4024 0000166B AB                      	stosw 		; interpolated sample 1 (R)
  4025 0000166C A1[9919]                	mov	ax, [next_val_l]
  4026 0000166F 01D8                    	add	ax, bx	; + interpolated middle (L)
  4027 00001671 D1D8                    	rcr	ax, 1
  4028 00001673 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4029 00001676 AB                      	stosw 		; interpolated sample 2 (L)
  4030 00001677 58                      	pop	ax ; **
  4031 00001678 5A                      	pop	dx ; *
  4032 00001679 01D0                    	add	ax, dx	; interpolated middle + [next_val_r]
  4033 0000167B D1D8                    	rcr	ax, 1	; / 2
  4034 0000167D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4035 00001680 AB                      	stosw 		; interpolated sample 2 (L)
  4036 00001681 C3                      	retn
  4037                                  
  4038                                  
  4039                                  interpolating_2_16bit_mono:
  4040                                  	; 16/11/2023
  4041                                  	; ax = [previous_val]
  4042                                  	; dx = [next_val]
  4043                                  	; original-interpolated
  4044                                  
  4045 00001682 AB                      	stosw		; original sample (L)
  4046 00001683 AB                      	stosw		; original sample (R)
  4047 00001684 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4048 00001687 80C680                  	add	dh, 80h
  4049 0000168A 01D0                    	add	ax, dx
  4050 0000168C D1D8                    	rcr	ax, 1
  4051 0000168E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4052 00001691 AB                      	stosw		; interpolated sample (L)
  4053 00001692 AB                      	stosw		; interpolated sample (R)
  4054 00001693 C3                      	retn
  4055                                  
  4056                                  interpolating_2_16bit_stereo:
  4057                                  	; 16/11/2023
  4058                                  	; bx = [previous_val_l]
  4059                                  	; ax = [previous_val_r]
  4060                                  	; [next_val_l]
  4061                                  	; dx = [next_val_r]
  4062                                  	; original-interpolated
  4063                                  
  4064 00001694 93                      	xchg	ax, bx
  4065 00001695 AB                      	stosw		; original sample (L)
  4066 00001696 93                      	xchg	ax, bx
  4067 00001697 AB                      	stosw		; original sample (R)
  4068 00001698 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4069 0000169B 80C680                  	add	dh, 80h
  4070 0000169E 01D0                    	add	ax, dx	; [previous_val_r] + [next_val_r]
  4071 000016A0 D1D8                    	rcr	ax, 1	; / 2
  4072 000016A2 50                      	push	ax ; *	; interpolated sample (R)
  4073 000016A3 A1[9919]                	mov	ax, [next_val_l]
  4074 000016A6 80C480                  	add	ah, 80h
  4075 000016A9 80C780                  	add	bh, 80h
  4076 000016AC 01D8                    	add	ax, bx	; [next_val_l] + [previous_val_l]
  4077 000016AE D1D8                    	rcr	ax, 1	; / 2		
  4078 000016B0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4079 000016B3 AB                      	stosw 		; interpolated sample (L)
  4080 000016B4 58                      	pop	ax ; *
  4081 000016B5 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4082 000016B8 AB                      	stosw 		; interpolated sample (R)
  4083 000016B9 C3                      	retn
  4084                                  
  4085                                  interpolating_5_8bit_mono:
  4086                                  	; 17/11/2023
  4087                                  	; al = [previous_val]
  4088                                  	; dl = [next_val]
  4089                                  	; original-interpltd-interpltd-interpltd-interpltd
  4090 000016BA 88C3                    	mov	bl, al
  4091 000016BC 2C80                    	sub	al, 80h
  4092 000016BE C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4093 000016C1 AB                      	stosw		; original sample (L)
  4094 000016C2 AB                      	stosw		; original sample (R)
  4095 000016C3 88D8                    	mov	al, bl
  4096 000016C5 00D0                    	add	al, dl
  4097 000016C7 D0D8                    	rcr	al, 1
  4098 000016C9 88C7                    	mov	bh, al	; interpolated middle (temporary)
  4099 000016CB 00D8                    	add	al, bl  ; [previous_val]
  4100 000016CD D0D8                    	rcr	al, 1 	
  4101 000016CF 88C6                    	mov	dh, al	; interpolated 1st quarter (temporary)
  4102 000016D1 00D8                    	add	al, bl
  4103 000016D3 D0D8                    	rcr	al, 1
  4104 000016D5 2C80                    	sub	al, 80h
  4105 000016D7 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4106 000016DA AB                      	stosw		; interpolated sample 1 (L)
  4107 000016DB AB                      	stosw		; interpolated sample 1 (R)
  4108 000016DC 88F8                    	mov	al, bh
  4109 000016DE 00F0                    	add	al, dh
  4110 000016E0 D0D8                    	rcr	al, 1
  4111 000016E2 2C80                    	sub	al, 80h
  4112 000016E4 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4113 000016E7 AB                      	stosw		; interpolated sample 2 (L)
  4114 000016E8 AB                      	stosw		; interpolated sample 2 (R)
  4115 000016E9 88F8                    	mov	al, bh
  4116 000016EB 00D0                    	add	al, dl	; [next_val]
  4117 000016ED D0D8                    	rcr	al, 1
  4118 000016EF 88C6                    	mov	dh, al	; interpolated 3rd quarter (temporary)
  4119 000016F1 00F8                    	add	al, bh
  4120 000016F3 D0D8                    	rcr	al, 1
  4121 000016F5 2C80                    	sub	al, 80h
  4122 000016F7 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4123 000016FA AB                      	stosw		; interpolated sample 3 (L)
  4124 000016FB AB                      	stosw		; interpolated sample 3 (R)
  4125 000016FC 88F0                    	mov	al, dh
  4126 000016FE 00D0                    	add	al, dl
  4127 00001700 D0D8                    	rcr	al, 1
  4128 00001702 2C80                    	sub	al, 80h
  4129 00001704 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4130 00001707 AB                      	stosw		; interpolated sample 4 (L)
  4131 00001708 AB                      	stosw		; interpolated sample 4 (R)
  4132 00001709 C3                      	retn
  4133                                  
  4134                                  interpolating_5_8bit_stereo:
  4135                                  	; 17/11/2023
  4136                                  	; al = [previous_val_l]
  4137                                  	; ah = [previous_val_r]
  4138                                  	; dl = [next_val_l]
  4139                                  	; dh = [next_val_r]
  4140                                  	; original-interpltd-interpltd-interpltd-interpltd
  4141 0000170A 89C3                    	mov	bx, ax
  4142 0000170C 2C80                    	sub	al, 80h
  4143 0000170E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4144 00001711 AB                      	stosw		; original sample (L)
  4145 00001712 88F8                    	mov	al, bh
  4146 00001714 2C80                    	sub	al, 80h
  4147 00001716 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4148 00001719 AB                      	stosw		; original sample (R)
  4149 0000171A 52                      	push	dx ; *
  4150 0000171B 88D8                    	mov	al, bl
  4151 0000171D 00D0                    	add	al, dl	; [next_val_l]
  4152 0000171F D0D8                    	rcr	al, 1
  4153 00001721 50                      	push	ax ; **	; al = interpolated middle (L) (temporary)
  4154 00001722 00D8                    	add	al, bl	; [previous_val_l]
  4155 00001724 D0D8                    	rcr	al, 1
  4156 00001726 86D8                    	xchg	al, bl
  4157 00001728 00D8                    	add	al, bl	; bl = interpolated 1st quarter (L) (temp)
  4158 0000172A D0D8                    	rcr	al, 1
  4159 0000172C 2C80                    	sub	al, 80h
  4160 0000172E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4161 00001731 AB                      	stosw		; interpolated sample 1 (L)
  4162 00001732 88F8                    	mov	al, bh
  4163 00001734 00F0                    	add	al, dh	; [next_val_r]
  4164 00001736 D0D8                    	rcr	al, 1
  4165 00001738 50                      	push	ax ; *** ; al = interpolated middle (R) (temporary)
  4166 00001739 00F8                    	add	al, bh	; [previous_val_r]
  4167 0000173B D0D8                    	rcr	al, 1
  4168 0000173D 86F8                    	xchg	al, bh
  4169 0000173F 00F8                    	add	al, bh	; bh = interpolated 1st quarter (R) (temp)
  4170 00001741 D0D8                    	rcr	al, 1
  4171 00001743 2C80                    	sub	al, 80h
  4172 00001745 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4173 00001748 AB                      	stosw		; interpolated sample 1 (R)
  4174 00001749 5A                      	pop	dx ; ***
  4175 0000174A 58                      	pop	ax ; **	; al = interpolated middle (L) (temporary)
  4176 0000174B 86D8                    	xchg	al, bl	; al = interpolated 1st quarter (L) (temp)
  4177 0000174D 00D8                    	add	al, bl	; bl = interpolated middle (L) (temporary)
  4178 0000174F D0D8                    	rcr	al, 1
  4179 00001751 2C80                    	sub	al, 80h
  4180 00001753 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4181 00001756 AB                      	stosw		; interpolated sample 2 (L)
  4182 00001757 88D0                    	mov	al, dl 	; interpolated middle (R) (temporary)
  4183 00001759 86F8                    	xchg	al, bh	; al = interpolated 1st quarter (R) (temp)
  4184 0000175B 00F8                    	add	al, bh	; bh = interpolated middle (R) (temporary)
  4185 0000175D D0D8                    	rcr	al, 1
  4186 0000175F 2C80                    	sub	al, 80h
  4187 00001761 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4188 00001764 AB                      	stosw		; interpolated sample 2 (R)
  4189 00001765 5A                      	pop	dx ; *
  4190 00001766 88D8                    	mov	al, bl	; interpolated middle (L) (temporary)
  4191 00001768 00D0                    	add	al, dl	; [next_val_l]
  4192 0000176A D0D8                    	rcr	al, 1
  4193 0000176C 86D8                    	xchg	al, bl	; al = interpolated middle (R) (temporary)
  4194 0000176E 00D8                    	add	al, bl	; bl = interpolated 3rd quarter (L) (temp)
  4195 00001770 D0D8                    	rcr	al, 1
  4196 00001772 2C80                    	sub	al, 80h
  4197 00001774 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4198 00001777 AB                      	stosw		; interpolated sample 3 (L)
  4199 00001778 88F8                    	mov	al, bh
  4200 0000177A 00F0                    	add	al, dh	; interpolated middle (R) + [next_val_r]
  4201 0000177C D0D8                    	rcr	al, 1
  4202 0000177E 86F8                    	xchg	al, bh	; al = interpolated middle (R)
  4203 00001780 00F8                    	add	al, bh	; bh = interpolated 3rd quarter (R) (temp)
  4204 00001782 D0D8                    	rcr	al, 1
  4205 00001784 2C80                    	sub	al, 80h
  4206 00001786 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4207 00001789 AB                      	stosw		; interpolated sample 3 (R)
  4208 0000178A 88D8                    	mov	al, bl
  4209 0000178C 00D0                    	add	al, dl	; [next_val_l]
  4210 0000178E D0D8                    	rcr	al, 1
  4211 00001790 2C80                    	sub	al, 80h
  4212 00001792 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4213 00001795 AB                      	stosw		; interpolated sample 4 (L)
  4214 00001796 88F8                    	mov	al, bh
  4215 00001798 00F0                    	add	al, dh	; [next_val_r]
  4216 0000179A D0D8                    	rcr	al, 1
  4217 0000179C 2C80                    	sub	al, 80h
  4218 0000179E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4219 000017A1 AB                      	stosw		; interpolated sample 4 (R)
  4220 000017A2 C3                      	retn
  4221                                  
  4222                                  interpolating_4_8bit_mono:
  4223                                  	; 17/11/2023
  4224                                  	; al = [previous_val]
  4225                                  	; dl = [next_val]
  4226                                  	; original-interpolated-interpolated-interpolated
  4227 000017A3 88C3                    	mov	bl, al
  4228 000017A5 2C80                    	sub	al, 80h
  4229 000017A7 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4230 000017AA AB                      	stosw		; original sample (L)
  4231 000017AB AB                      	stosw		; original sample (R)
  4232 000017AC 88D8                    	mov	al, bl
  4233 000017AE 00D0                    	add	al, dl
  4234 000017B0 D0D8                    	rcr	al, 1
  4235 000017B2 86D8                    	xchg	al, bl  ; al = [previous_val]
  4236 000017B4 00D8                    	add	al, bl	; bl = interpolated middle (sample 2)
  4237 000017B6 D0D8                    	rcr	al, 1
  4238 000017B8 2C80                    	sub	al, 80h
  4239 000017BA C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4240 000017BD AB                      	stosw		; interpolated sample 1 (L)
  4241 000017BE AB                      	stosw		; interpolated sample 1 (R)
  4242 000017BF 88D8                    	mov	al, bl	; interpolated middle (sample 2)
  4243 000017C1 2C80                    	sub	al, 80h
  4244 000017C3 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4245 000017C6 AB                      	stosw		; interpolated sample 2 (L)
  4246 000017C7 AB                      	stosw		; interpolated sample 2 (R)
  4247 000017C8 88D8                    	mov	al, bl
  4248 000017CA 00D0                    	add	al, dl	; [next_val]
  4249 000017CC D0D8                    	rcr	al, 1
  4250 000017CE 2C80                    	sub	al, 80h
  4251 000017D0 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4252 000017D3 AB                      	stosw		; interpolated sample 3 (L)
  4253 000017D4 AB                      	stosw		; interpolated sample 3 (R)
  4254 000017D5 C3                      	retn
  4255                                  
  4256                                  interpolating_4_8bit_stereo:
  4257                                  	; 17/11/2023
  4258                                  	; al = [previous_val_l]
  4259                                  	; ah = [previous_val_r]
  4260                                  	; dl = [next_val_l]
  4261                                  	; dh = [next_val_r]
  4262                                  	; original-interpolated-interpolated-interpolated
  4263 000017D6 89C3                    	mov	bx, ax
  4264 000017D8 2C80                    	sub	al, 80h
  4265 000017DA C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4266 000017DD AB                      	stosw		; original sample (L)
  4267 000017DE 88F8                    	mov	al, bh
  4268 000017E0 2C80                    	sub	al, 80h
  4269 000017E2 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4270 000017E5 AB                      	stosw		; original sample (R)
  4271 000017E6 88D8                    	mov	al, bl
  4272 000017E8 00D0                    	add	al, dl	; [next_val_l]
  4273 000017EA D0D8                    	rcr	al, 1
  4274 000017EC 86D8                    	xchg	al, bl	; al = [previous_val_l]
  4275 000017EE 00D8                    	add	al, bl	; bl = interpolated middle (L) (sample 2)
  4276 000017F0 D0D8                    	rcr	al, 1
  4277 000017F2 2C80                    	sub	al, 80h
  4278 000017F4 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4279 000017F7 AB                      	stosw		; interpolated sample 1 (L)
  4280 000017F8 88F8                    	mov	al, bh
  4281 000017FA 00F0                    	add	al, dh	; [next_val_r]
  4282 000017FC D0D8                    	rcr	al, 1
  4283 000017FE 86F8                    	xchg	al, bh	; al = [previous_val_h]
  4284 00001800 00F8                    	add	al, bh	; bh = interpolated middle (R) (sample 2)
  4285 00001802 D0D8                    	rcr	al, 1
  4286 00001804 2C80                    	sub	al, 80h
  4287 00001806 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4288 00001809 AB                      	stosw		; interpolated sample 1 (R)
  4289 0000180A 88D8                    	mov	al, bl	; interpolated middle (L) (sample 2)
  4290 0000180C 2C80                    	sub	al, 80h
  4291 0000180E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4292 00001811 AB                      	stosw		; interpolated sample 2 (L)
  4293 00001812 88F8                    	mov	al, bh	; interpolated middle (L) (sample 2)
  4294 00001814 2C80                    	sub	al, 80h
  4295 00001816 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4296 00001819 AB                      	stosw		; interpolated sample 2 (L)
  4297 0000181A 88D8                    	mov	al, bl
  4298 0000181C 00D0                    	add	al, dl	; [next_val_l]
  4299 0000181E D0D8                    	rcr	al, 1
  4300 00001820 2C80                    	sub	al, 80h
  4301 00001822 C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4302 00001825 AB                      	stosw		; interpolated sample 3 (L)
  4303 00001826 88F8                    	mov	al, bh
  4304 00001828 00F0                    	add	al, dh	; [next_val_r]
  4305 0000182A D0D8                    	rcr	al, 1
  4306 0000182C 2C80                    	sub	al, 80h
  4307 0000182E C1E008                  	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4308 00001831 AB                      	stosw		; interpolated sample 3 (R)
  4309 00001832 C3                      	retn
  4310                                  
  4311                                  interpolating_5_16bit_mono:
  4312                                  	; 18/11/2023
  4313                                  	; ax = [previous_val]
  4314                                  	; dx = [next_val]
  4315                                  	; original-interpltd-interpltd-interpltd-interpltd
  4316 00001833 AB                      	stosw		; original sample (L)
  4317 00001834 AB                      	stosw		; original sample (R)
  4318 00001835 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4319 00001838 89C3                    	mov	bx, ax	; [previous_val]
  4320 0000183A 80C680                  	add	dh, 80h
  4321 0000183D 01D0                    	add	ax, dx
  4322 0000183F D1D8                    	rcr	ax, 1
  4323 00001841 50                      	push	ax ; *	; interpolated middle (temporary)
  4324 00001842 01D8                    	add	ax, bx	; interpolated middle + [previous_val]
  4325 00001844 D1D8                    	rcr	ax, 1
  4326 00001846 50                      	push	ax ; **	; interpolated 1st quarter (temporary)
  4327 00001847 01D8                    	add	ax, bx	; 1st quarter + [previous_val]
  4328 00001849 D1D8                    	rcr	ax, 1	
  4329 0000184B 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4330 0000184E AB                      	stosw 		; interpolated sample 1 (L)
  4331 0000184F AB                      	stosw		; interpolated sample 1 (R)
  4332 00001850 58                      	pop	ax ; **
  4333 00001851 5B                      	pop	bx ; *
  4334 00001852 01D8                    	add	ax, bx	; 1st quarter + middle
  4335 00001854 D1D8                    	rcr	ax, 1	; / 2
  4336 00001856 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again	
  4337 00001859 AB                      	stosw		; interpolated sample 2 (L)
  4338 0000185A AB                      	stosw		; interpolated sample 2 (R)
  4339 0000185B 89D8                    	mov	ax, bx
  4340 0000185D 01D0                    	add	ax, dx	; interpolated middle + [next_val]
  4341 0000185F D1D8                    	rcr	ax, 1
  4342 00001861 50                      	push	ax ; *	; interpolated 3rd quarter (temporary)
  4343 00001862 01D8                    	add	ax, bx	; + interpolated middle
  4344 00001864 D1D8                    	rcr	ax, 1
  4345 00001866 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4346 00001869 AB                      	stosw		; interpolated sample 3 (L)
  4347 0000186A AB                      	stosw		; interpolated sample 3 (R)
  4348 0000186B 58                      	pop	ax ; *
  4349 0000186C 01D0                    	add	ax, dx	; 3rd quarter + [next_val]
  4350 0000186E D1D8                    	rcr	ax, 1	; / 2
  4351 00001870 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4352 00001873 AB                      	stosw		; interpolated sample 4 (L)
  4353 00001874 AB                      	stosw		; interpolated sample 4 (R)
  4354 00001875 C3                      	retn
  4355                                  
  4356                                  interpolating_5_16bit_stereo:
  4357                                  	; 18/11/2023
  4358                                  	; bx = [previous_val_l]
  4359                                  	; ax = [previous_val_r]
  4360                                  	; [next_val_l]
  4361                                  	; [next_val_r]
  4362                                  	; original-interpltd-interpltd-interpltd-interpltd
  4363 00001876 51                      	push	cx ; !
  4364 00001877 93                      	xchg	ax, bx
  4365 00001878 AB                      	stosw		; original sample (L)
  4366 00001879 93                      	xchg	ax, bx
  4367 0000187A AB                      	stosw		; original sample (R)
  4368 0000187B 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4369 0000187E 50                      	push	ax ; *	; [previous_val_r]
  4370 0000187F 80C780                  	add	bh, 80h
  4371 00001882 8006[9A19]80            	add	byte [next_val_l+1], 80h
  4372 00001887 A1[9919]                	mov	ax, [next_val_l]
  4373 0000188A 01D8                    	add	ax, bx	; [previous_val_l]
  4374 0000188C D1D8                    	rcr	ax, 1
  4375 0000188E 89C1                    	mov	cx, ax	; interpolated middle (L)
  4376 00001890 01D8                    	add	ax, bx
  4377 00001892 D1D8                    	rcr	ax, 1
  4378 00001894 89C2                    	mov	dx, ax	; interpolated 1st quarter (L)
  4379 00001896 01D8                    	add	ax, bx	; [previous_val_l]
  4380 00001898 D1D8                    	rcr	ax, 1
  4381 0000189A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4382 0000189D AB                      	stosw 		; interpolated sample 1 (L)
  4383 0000189E 89C8                    	mov	ax, cx
  4384 000018A0 01D0                    	add	ax, dx	; middle (L) + 1st quarter (L)
  4385 000018A2 D1D8                    	rcr	ax, 1	; / 2
  4386 000018A4 89C3                    	mov	bx, ax  ; interpolated sample 2 (L)
  4387 000018A6 5A                      	pop	dx ; *	; [previous_val_r]
  4388 000018A7 89D0                    	mov	ax, dx
  4389 000018A9 8006[9C19]80            	add	byte [next_val_r+1], 80h
  4390 000018AE 0306[9B19]              	add	ax, [next_val_r]
  4391 000018B2 D1D8                    	rcr	ax, 1
  4392 000018B4 50                      	push	ax ; *	; interpolated middle (R)
  4393 000018B5 01D0                    	add	ax, dx
  4394 000018B7 D1D8                    	rcr	ax, 1
  4395 000018B9 50                      	push	ax ; **	; interpolated 1st quarter (R)
  4396 000018BA 01D0                    	add	ax, dx	; [previous_val_r]
  4397 000018BC D1D8                    	rcr	ax, 1
  4398 000018BE 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4399 000018C1 AB                      	stosw 		; interpolated sample 1 (R)
  4400 000018C2 89D8                    	mov	ax, bx
  4401 000018C4 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4402 000018C7 AB                      	stosw 		; interpolated sample 2 (L)
  4403 000018C8 58                      	pop	ax ; **
  4404 000018C9 5A                      	pop	dx ; *
  4405 000018CA 01D0                    	add	ax, dx	; 1st quarter (R) + middle (R)
  4406 000018CC D1D8                    	rcr	ax, 1	; / 2
  4407 000018CE 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4408 000018D1 AB                      	stosw 		; interpolated sample 2 (R)
  4409 000018D2 89C8                    	mov	ax, cx
  4410 000018D4 0306[9919]              	add	ax, [next_val_l]
  4411 000018D8 D1D8                    	rcr	ax, 1
  4412 000018DA 50                      	push	ax ; * 	; interpolated 3rd quarter (L)
  4413 000018DB 01C8                    	add	ax, cx	; interpolated middle (L)
  4414 000018DD D1D8                    	rcr	ax, 1
  4415 000018DF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4416 000018E2 AB                      	stosw 		; interpolated sample 3 (L)
  4417 000018E3 89D0                    	mov	ax, dx
  4418 000018E5 0306[9B19]              	add	ax, [next_val_r]
  4419 000018E9 D1D8                    	rcr	ax, 1
  4420 000018EB 50                      	push	ax ; ** ; interpolated 3rd quarter (R)
  4421 000018EC 01D0                    	add	ax, dx	; interpolated middle (R)
  4422 000018EE D1D8                    	rcr	ax, 1
  4423 000018F0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4424 000018F3 AB                      	stosw 		; interpolated sample 3 (R)
  4425 000018F4 5B                      	pop	bx ; **
  4426 000018F5 58                      	pop	ax ; *
  4427 000018F6 0306[9919]              	add	ax, [next_val_l]
  4428 000018FA D1D8                    	rcr	ax, 1
  4429 000018FC 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4430 000018FF AB                      	stosw 		; interpolated sample 4 (L)
  4431 00001900 89D8                    	mov	ax, bx	
  4432 00001902 0306[9B19]              	add	ax, [next_val_r]
  4433 00001906 D1D8                    	rcr	ax, 1
  4434 00001908 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4435 0000190B AB                      	stosw 		; interpolated sample 4 (R)
  4436 0000190C 59                      	pop	cx ; !
  4437 0000190D C3                      	retn
  4438                                  
  4439                                  interpolating_4_16bit_mono:
  4440                                  	; 18/11/2023
  4441                                  	; ax = [previous_val]
  4442                                  	; dx = [next_val]
  4443                                  	; 02/02/2025
  4444                                  	; original-interpolated-interpolated-interpolated
  4445                                  
  4446 0000190E AB                      	stosw		; original sample (L)
  4447 0000190F AB                      	stosw		; original sample (R)
  4448 00001910 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4449 00001913 89C3                    	mov	bx, ax	; [previous_val]
  4450 00001915 80C680                  	add	dh, 80h
  4451 00001918 01D0                    	add	ax, dx	; [previous_val] + [next_val]
  4452 0000191A D1D8                    	rcr	ax, 1
  4453 0000191C 93                      	xchg	ax, bx
  4454 0000191D 01D8                    	add	ax, bx	; [previous_val] + interpolated middle
  4455 0000191F D1D8                    	rcr	ax, 1
  4456 00001921 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4457 00001924 AB                      	stosw 		; interpolated sample 1 (L)
  4458 00001925 AB                      	stosw		; interpolated sample 1 (R)
  4459 00001926 89D8                    	mov	ax, bx	; interpolated middle
  4460 00001928 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4461 0000192B AB                      	stosw 		; interpolated sample 2 (L)
  4462 0000192C AB                      	stosw		; interpolated sample 2 (R)
  4463 0000192D 89D8                    	mov	ax, bx
  4464 0000192F 01D0                    	add	ax, dx	; interpolated middle + [next_val]
  4465 00001931 D1D8                    	rcr	ax, 1
  4466 00001933 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4467 00001936 AB                      	stosw		; interpolated sample 3 (L)
  4468 00001937 AB                      	stosw		; interpolated sample 3 (R)
  4469 00001938 C3                      	retn
  4470                                  
  4471                                  interpolating_4_16bit_stereo:
  4472                                  	; 18/11/2023
  4473                                  	; bx = [previous_val_l]
  4474                                  	; ax = [previous_val_r]
  4475                                  	; [next_val_l]
  4476                                  	; [next_val_r]
  4477                                  	; original-interpolated-interpolated-interpolated
  4478 00001939 93                      	xchg	ax, bx
  4479 0000193A AB                      	stosw		; original sample (L)
  4480 0000193B 93                      	xchg	ax, bx
  4481 0000193C AB                      	stosw		; original sample (R)
  4482 0000193D 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4483 00001940 89C2                    	mov	dx, ax	; [previous_val_r]
  4484 00001942 80C780                  	add	bh, 80h
  4485 00001945 8006[9A19]80            	add	byte [next_val_l+1], 80h
  4486 0000194A A1[9919]                	mov	ax, [next_val_l]
  4487 0000194D 01D8                    	add	ax, bx	; [previous_val_l]
  4488 0000194F D1D8                    	rcr	ax, 1
  4489 00001951 93                      	xchg	ax, bx
  4490 00001952 01D8                    	add	ax, bx	; bx = interpolated middle (L)
  4491 00001954 D1D8                    	rcr	ax, 1
  4492 00001956 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4493 00001959 AB                      	stosw 		; interpolated sample 1 (L)
  4494 0000195A 8006[9C19]80            	add	byte [next_val_r+1], 80h
  4495 0000195F 89D0                    	mov	ax, dx	; [previous_val_r]
  4496 00001961 0306[9B19]              	add	ax, [next_val_r]
  4497 00001965 D1D8                    	rcr	ax, 1
  4498 00001967 92                      	xchg	ax, dx
  4499 00001968 01D0                    	add	ax, dx	; dx = interpolated middle (R)
  4500 0000196A D1D8                    	rcr	ax, 1
  4501 0000196C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4502 0000196F AB                      	stosw 		; interpolated sample 1 (R)
  4503 00001970 89D8                    	mov	ax, bx
  4504 00001972 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4505 00001975 AB                      	stosw 		; interpolated sample 2 (L)
  4506 00001976 89D0                    	mov	ax, dx
  4507 00001978 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4508 0000197B AB                      	stosw 		; interpolated sample 2 (R)
  4509 0000197C 89D8                    	mov	ax, bx
  4510 0000197E 0306[9919]              	add	ax, [next_val_l]
  4511 00001982 D1D8                    	rcr	ax, 1
  4512 00001984 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4513 00001987 AB                      	stosw 		; interpolated sample 3 (L)
  4514 00001988 89D0                    	mov	ax, dx
  4515 0000198A 0306[9B19]              	add	ax, [next_val_r]
  4516 0000198E D1D8                    	rcr	ax, 1
  4517 00001990 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4518 00001993 AB                      	stosw 		; interpolated sample 3 (R)
  4519 00001994 C3                      	retn
  4520                                  
  4521                                  ; 13/11/2023
  4522                                  previous_val:
  4523 00001995 0000                    previous_val_l: dw 0
  4524 00001997 0000                    previous_val_r: dw 0
  4525                                  next_val:
  4526 00001999 0000                    next_val_l: dw 0
  4527 0000199B 0000                    next_val_r: dw 0
  4528                                  
  4529                                  ; 16/11/2023
  4530 0000199D 00                      faz:	db 0	
  4531                                  	
  4532                                  ; --------------------------------------------------------
  4533                                  ; 27/05/2024 - (TRDOS 386 Kernel) audio.s
  4534                                  ; --------------------------------------------------------
  4535                                  
  4536                                  NOT_PCI32_PCI16	EQU 03FFFFFFFh ; NOT BIT31+BIT30 ; 19/03/2017
  4537                                  NOT_BIT31 EQU 7FFFFFFFh
  4538                                  
  4539                                  pciFindDevice:
  4540                                  	; 19/11/2023
  4541                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4542                                  	;
  4543                                  	; scan through PCI space looking for a device+vendor ID
  4544                                  	;
  4545                                  	; Entry: EAX=Device+Vendor ID
  4546                                  	;
  4547                                  	; Exit: EAX=PCI address if device found
  4548                                  	;	EDX=Device+Vendor ID
  4549                                  	;       CY clear if found, set if not found. EAX invalid if CY set.
  4550                                  	;
  4551                                  	; Destroys: ebx, edi ; 19/11/2023
  4552                                  
  4553                                          ; 19/11/2023
  4554 0000199E 6689C3                  	mov	ebx, eax
  4555 000019A1 66BF00000080            	mov	edi, 80000000h
  4556                                  nextPCIdevice:
  4557 000019A7 6689F8                  	mov 	eax, edi		; read PCI registers
  4558 000019AA E88D00                  	call	pciRegRead32
  4559                                  	; 19/11/2023
  4560 000019AD 6639DA                  	cmp	edx, ebx
  4561 000019B0 7414                    	je	short PCIScanExit	; found
  4562                                  	; 19/11/2023
  4563 000019B2 6681FF00F8FF80          	cmp	edi, 80FFF800h
  4564 000019B9 7309                    	jnb	short pfd_nf		; not found
  4565 000019BB 6681C700010000          	add	edi, 100h
  4566 000019C2 EBE3                    	jmp	short nextPCIdevice
  4567                                  pfd_nf:
  4568 000019C4 F9                      	stc
  4569 000019C5 C3                      	retn
  4570                                  PCIScanExit:
  4571                                  	;pushf
  4572 000019C6 66B8FFFFFF7F            	mov	eax, NOT_BIT31 	; 19/03/2017
  4573 000019CC 6621F8                  	and	eax, edi	; return only bus/dev/fn #
  4574 000019CF C3                      	retn
  4575                                  
  4576                                  pciRegRead:
  4577                                  	; 30/05/2024
  4578                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4579                                  	;
  4580                                  	; 8/16/32bit PCI reader
  4581                                  	;
  4582                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4583                                  	;           BIT30 set if 32 bit access requested
  4584                                  	;           BIT29 set if 16 bit access requested
  4585                                  	;           otherwise defaults to 8 bit read
  4586                                  	;
  4587                                  	; Exit:  DL,DX,EDX register data depending on requested read size
  4588                                  	;
  4589                                  	; Note1: this routine is meant to be called via pciRegRead8,
  4590                                  	;	 pciRegread16 or pciRegRead32, listed below.
  4591                                  	;
  4592                                  	; Note2: don't attempt to read 32 bits of data from a non dword
  4593                                  	;	 aligned reg number. Likewise, don't do 16 bit reads from
  4594                                  	;	 non word aligned reg #
  4595                                  	
  4596 000019D0 6653                    	push	ebx
  4597 000019D2 51                      	push	cx
  4598 000019D3 6689C3                          mov     ebx, eax		; save eax, dh
  4599 000019D6 88F1                            mov     cl, dh
  4600                                  
  4601 000019D8 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; clear out data size request
  4602 000019DE 660D00000080                    or      eax, BIT31		; make a PCI access request
  4603 000019E4 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4604                                  
  4605 000019E6 BAF80C                          mov     dx, PCI_INDEX_PORT
  4606 000019E9 66EF                    	out	dx, eax			; write PCI selector
  4607                                  		
  4608 000019EB BAFC0C                          mov     dx, PCI_DATA_PORT
  4609 000019EE 88D8                            mov     al, bl
  4610 000019F0 2403                            and     al, 3			; figure out which port to
  4611 000019F2 00C2                            add     dl, al			; read to
  4612                                  
  4613 000019F4 66F7C3000000C0          	test    ebx, PCI32+PCI16
  4614 000019FB 7507                            jnz     short _pregr0
  4615                                  
  4616 000019FD EC                      	in	al, dx			; return 8 bits of data
  4617                                  
  4618 000019FE 88C2                    	mov	dl, al
  4619 00001A00 88CE                    	mov     dh, cl			; restore dh for 8 bit read
  4620 00001A02 EB13                    	jmp	short _pregr2
  4621                                  _pregr0:	
  4622 00001A04 66F7C300000080          	test    ebx, PCI32
  4623 00001A0B 7505                            jnz	short _pregr1
  4624                                  
  4625 00001A0D ED                      	in	ax, dx
  4626                                  
  4627 00001A0E 89C2                    	mov     dx, ax			; return 16 bits of data
  4628 00001A10 EB05                    	jmp	short _pregr2
  4629                                  _pregr1:
  4630 00001A12 66ED                    	in	eax, dx			; return 32 bits of data
  4631                                  
  4632 00001A14 6689C2                  	mov	edx, eax
  4633                                  _pregr2:
  4634 00001A17 6689D8                  	mov     eax, ebx		; restore eax
  4635 00001A1A 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; clear out data size request
  4636 00001A20 59                      	pop	cx
  4637 00001A21 665B                    	pop	ebx
  4638 00001A23 C3                      	retn
  4639                                  
  4640                                  pciRegRead8:
  4641 00001A24 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 8 bit read size
  4642 00001A2A EBA4                            jmp     short pciRegRead	; call generic PCI access
  4643                                  
  4644                                  pciRegRead16:
  4645 00001A2C 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 16 bit read size
  4646 00001A32 660D00000040                    or      eax, PCI16		; call generic PCI access
  4647 00001A38 EB96                            jmp     short pciRegRead
  4648                                  
  4649                                  pciRegRead32:
  4650 00001A3A 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 32 bit read size
  4651 00001A40 660D00000080                    or      eax, PCI32		; call generic PCI access
  4652 00001A46 EB88                            jmp     pciRegRead
  4653                                  
  4654                                  pciRegWrite:
  4655                                  	; 30/05/2024
  4656                                  	; 03/04/2017 ('pci.asm', 29/11/2016)
  4657                                  	;
  4658                                  	; 8/16/32bit PCI writer
  4659                                  	;
  4660                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4661                                  	;           BIT31 set if 32 bit access requested
  4662                                  	;           BIT30 set if 16 bit access requested
  4663                                  	;           otherwise defaults to 8bit read
  4664                                  	;        DL/DX/EDX data to write depending on size
  4665                                  	;
  4666                                  	; Note1: this routine is meant to be called via pciRegWrite8, 
  4667                                  	;	 pciRegWrite16 or pciRegWrite32 as detailed below.
  4668                                  	;
  4669                                  	; Note2: don't attempt to write 32bits of data from a non dword
  4670                                  	;	 aligned reg number. Likewise, don't do 16 bit writes from
  4671                                  	;	 non word aligned reg #
  4672                                  
  4673 00001A48 6653                    	push	ebx
  4674 00001A4A 6651                    	push	ecx
  4675 00001A4C 6689C3                          mov     ebx, eax		; save eax, edx
  4676 00001A4F 6689D1                          mov     ecx, edx
  4677 00001A52 6625FFFFFF3F            	and     eax, NOT_PCI32_PCI16	; clear out data size request
  4678 00001A58 660D00000080                    or      eax, BIT31		; make a PCI access request
  4679 00001A5E 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4680                                  
  4681 00001A60 BAF80C                          mov     dx, PCI_INDEX_PORT
  4682 00001A63 66EF                    	out	dx, eax			; write PCI selector
  4683                                  		
  4684 00001A65 BAFC0C                          mov     dx, PCI_DATA_PORT
  4685 00001A68 88D8                            mov     al, bl
  4686 00001A6A 2403                            and     al, 3			; figure out which port to
  4687 00001A6C 00C2                            add     dl, al			; write to
  4688                                  
  4689 00001A6E 66F7C3000000C0          	test    ebx, PCI32+PCI16
  4690 00001A75 7505                            jnz     short _pregw0
  4691                                  	
  4692 00001A77 88C8                    	mov	al, cl 			; put data into al
  4693 00001A79 EE                      	out	dx, al
  4694                                  	
  4695 00001A7A EB13                    	jmp	short _pregw2
  4696                                  _pregw0:
  4697 00001A7C 66F7C300000080          	test    ebx, PCI32
  4698 00001A83 7505                            jnz     short _pregw1
  4699                                  	
  4700 00001A85 89C8                    	mov	ax, cx			; put data into ax
  4701 00001A87 EF                      	out	dx, ax
  4702                                  
  4703 00001A88 EB05                    	jmp	short _pregw2
  4704                                  _pregw1:
  4705 00001A8A 6689C8                  	mov	eax, ecx		; put data into eax
  4706 00001A8D 66EF                    	out	dx, eax
  4707                                  _pregw2:
  4708 00001A8F 6689D8                          mov     eax, ebx		; restore eax
  4709 00001A92 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; clear out data size request
  4710 00001A98 6689CA                          mov     edx, ecx		; restore dx
  4711 00001A9B 6659                    	pop	ecx
  4712 00001A9D 665B                    	pop	ebx
  4713 00001A9F C3                      	retn
  4714                                  
  4715                                  pciRegWrite8:
  4716 00001AA0 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 8 bit write size
  4717 00001AA6 EBA0                            jmp	short pciRegWrite	; call generic PCI access
  4718                                  
  4719                                  pciRegWrite16:
  4720 00001AA8 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 16 bit write size
  4721 00001AAE 660D00000040                    or      eax, PCI16		; call generic PCI access
  4722 00001AB4 EB92                            jmp	short pciRegWrite
  4723                                  
  4724                                  pciRegWrite32:
  4725 00001AB6 6625FFFFFF3F                    and     eax, NOT_PCI32_PCI16	; set up 32 bit write size
  4726 00001ABC 660D00000080                    or      eax, PCI32		; call generic PCI access
  4727 00001AC2 EB84                            jmp	pciRegWrite
  4728                                  
  4729                                  ; --------------------------------------------------------
  4730                                  ; 19/05/2024 - (playwav4.asm) ac97_vra.asm
  4731                                  ; --------------------------------------------------------
  4732                                  
  4733                                  	; 13/11/2023
  4734                                  
  4735                                  ;VRA:	db 1
  4736                                  
  4737                                  codecConfig:
  4738                                  	; 30/05/2024
  4739                                  	; 19/05/2024
  4740                                  	; 19/11/2023
  4741                                  	; 15/11/2023
  4742                                  	; 04/11/2023
  4743                                  	; 17/02/2017 
  4744                                  	; 07/11/2016 (Erdogan Tan)
  4745                                  
  4746                                  	;AC97_EA_VRA equ 1
  4747                                  	AC97_EA_VRA equ BIT0
  4748                                  
  4749                                  	; 04/11/2023
  4750                                  init_ac97_controller:
  4751 00001AC4 66A1[DC20]              	mov	eax, [bus_dev_fn]
  4752 00001AC8 B004                    	mov	al, PCI_CMD_REG
  4753 00001ACA E85FFF                  	call	pciRegRead16		; read PCI command register
  4754 00001ACD 80CA05                  	or      dl, IO_ENA+BM_ENA	; enable IO and bus master
  4755 00001AD0 E8D5FF                  	call	pciRegWrite16
  4756                                  
  4757                                  	;call	delay_100ms
  4758                                  
  4759                                  	; 19/05/2024
  4760                                  	; ('PLAYMOD3.ASM', Erdogan Tan, 18/05/2024)
  4761                                  
  4762                                  init_ac97_codec:
  4763                                  	; 18/11/2023
  4764 00001AD3 BD2800                  	mov	bp, 40
  4765                                  	; 29/05/2024
  4766                                  	;mov	bp, 1000
  4767                                  _initc_1:
  4768                                  	; 30/05/2024
  4769 00001AD6 BA3000                  	mov	dx, GLOB_STS_REG ; 30h
  4770 00001AD9 0316[D420]              	add	dx, [NABMBAR]
  4771 00001ADD 66ED                    	in	eax, dx
  4772                                  
  4773                                  	; 19/05/2024
  4774 00001ADF E8DD01                  	call	delay1_4ms
  4775                                  
  4776 00001AE2 6683F8FF                	cmp	eax, 0FFFFFFFFh ; -1
  4777 00001AE6 7508                    	jne	short _initc_3
  4778                                  _initc_2:
  4779 00001AE8 4D                      	dec	bp
  4780 00001AE9 741E                    	jz	short _ac97_codec_ready
  4781                                  
  4782 00001AEB E8C601                  	call	delay_100ms
  4783 00001AEE EBE6                    	jmp	short _initc_1
  4784                                  _initc_3:
  4785 00001AF0 66A900030010            	test	eax, CTRL_ST_CREADY
  4786 00001AF6 7511                    	jnz	short _ac97_codec_ready
  4787                                  
  4788                                  	; 30/05/2024
  4789 00001AF8 803E[651D]01            	cmp	byte [reset], 1
  4790 00001AFD 73E9                    	jnb	short _initc_2
  4791                                  
  4792 00001AFF E81801                  	call	reset_ac97_codec
  4793                                  	; 30/05/2024
  4794 00001B02 C606[651D]01            	mov	byte [reset], 1
  4795                                  	; 19/05/2024
  4796 00001B07 EBDF                    	jmp	short _initc_2
  4797                                  
  4798                                  _ac97_codec_ready:
  4799 00001B09 8B16[D220]              	mov	dx, [NAMBAR]
  4800                                  	;add	dx, 0 ; ac_reg_0 ; reset register
  4801 00001B0D EF                      	out	dx, ax
  4802                                  	
  4803 00001B0E E8A301                  	call	delay_100ms
  4804                                  
  4805                                  	; 19/11/2023
  4806 00001B11 09ED                    	or	bp, bp
  4807 00001B13 7525                    	jnz	short _ac97_codec_init_ok
  4808                                  
  4809 00001B15 31C0                    	xor	ax, ax ; 0
  4810 00001B17 8B16[D220]              	mov	dx, [NAMBAR]
  4811 00001B1B 83C226                  	add	dx, CODEC_REG_POWERDOWN
  4812 00001B1E EF                      	out	dx, ax
  4813                                  
  4814                                  	; 30/05/2024
  4815 00001B1F E89D01                  	call	delay1_4ms
  4816                                  
  4817                                  	; 19/11/2023
  4818                                  	; wait for 1 second
  4819                                  	; 19/05/2024
  4820 00001B22 B9E803                  	mov	cx, 1000 ; 1000*4*0.25ms = 1s
  4821                                  	;;mov	cx, 10
  4822                                  	; 30/05/2024
  4823                                  	;mov	cx, 40
  4824                                  _ac97_codec_rloop:
  4825                                  	;call	delay_100ms
  4826                                  
  4827                                  	; 30/05/2024
  4828 00001B25 8B16[D220]              	mov	dx, [NAMBAR]
  4829 00001B29 83C226                  	add	dx, CODEC_REG_POWERDOWN
  4830 00001B2C ED                      	in	ax, dx
  4831                                  
  4832 00001B2D E88F01                  	call	delay1_4ms
  4833                                  	
  4834 00001B30 83E00F                  	and	ax, 0Fh
  4835 00001B33 3C0F                    	cmp	al, 0Fh
  4836 00001B35 7403                    	je	short _ac97_codec_init_ok
  4837 00001B37 E2EC                    	loop	_ac97_codec_rloop 
  4838                                  
  4839                                  init_ac97_codec_err1:
  4840                                  	;stc	; cf = 1 ; 19/05/2024
  4841                                  init_ac97_codec_err2:
  4842 00001B39 C3                      	retn
  4843                                  
  4844                                  _ac97_codec_init_ok:
  4845 00001B3A E89600                  	call 	reset_ac97_controller
  4846                                  
  4847                                  	; 30/05/2024
  4848                                  	; 19/05/2024
  4849                                  	;call	delay_100ms
  4850                                  
  4851                                  	; 30/05/2024
  4852 00001B3D E87F01                  	call	delay1_4ms
  4853 00001B40 E87C01                  	call	delay1_4ms
  4854 00001B43 E87901                  	call	delay1_4ms
  4855 00001B46 E87601                  	call	delay1_4ms
  4856                                  
  4857                                  setup_ac97_codec:
  4858                                  	; 12/11/2023
  4859 00001B49 813E[E420]80BB          	cmp	word [sample_rate], 48000
  4860 00001B4F 7453                    	je	short skip_rate
  4861                                  	
  4862                                  	; 30/05/2024
  4863                                  	; 19/05/2024
  4864                                  	;call	delay1_4ms
  4865                                  
  4866                                  	; 30/05/2024
  4867                                  	;cmp	byte [VRA], 0
  4868                                  	;jna	short skip_rate
  4869                                  
  4870                                  	; 11/11/2023
  4871 00001B51 8B16[D220]              	mov	dx, [NAMBAR]
  4872 00001B55 83C22A                  	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4873 00001B58 ED                      	in	ax, dx
  4874                                  
  4875                                  	; 30/05/2024
  4876                                  	; 19/05/2024
  4877 00001B59 E86301                  	call	delay1_4ms
  4878                                  	
  4879                                  	;and	al, ~BIT1 ; Clear DRA
  4880                                  	;;;
  4881                                  	; 30/05/2024
  4882 00001B5C 24FC                    	and	al, ~(BIT1+BIT0) ; Clear DRA+VRA
  4883 00001B5E EF                      	out	dx, ax
  4884                                  
  4885 00001B5F E83801                  	call	check_vra
  4886                                  
  4887 00001B62 803E[5E20]00            	cmp	byte [VRA], 0
  4888 00001B67 763B                    	jna	short skip_rate
  4889                                  
  4890 00001B69 8B16[D220]              	mov	dx, [NAMBAR]
  4891 00001B6D 83C22A                  	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4892 00001B70 ED                      	in	ax, dx
  4893                                  	;and	al, ~BIT1 ; Clear DRA
  4894                                  	;;;
  4895                                  
  4896 00001B71 0C01                    	or	al, AC97_EA_VRA ; 1 ; 04/11/2023
  4897                                  	; 30/05/2024
  4898 00001B73 8B16[D220]              	mov	dx, [NAMBAR]
  4899 00001B77 83C22A                  	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4900                                  
  4901 00001B7A EF                      	out	dx, ax			; Enable variable rate audio
  4902                                  
  4903 00001B7B B90A00                  	mov	cx, 10
  4904                                  check_vra_loop:
  4905 00001B7E E83301                  	call	delay_100ms
  4906                                  	; 30/05/2024
  4907                                  	;call	delay1_4ms
  4908                                  
  4909                                  	; 30/05/2024
  4910 00001B81 8B16[D220]              	mov	dx, [NAMBAR]
  4911 00001B85 83C22A                  	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4912                                  	; 11/11/2023
  4913 00001B88 ED                      	in	ax, dx
  4914                                  	
  4915 00001B89 A801                    	test	al, AC97_EA_VRA ; 1
  4916 00001B8B 7509                    	jnz	short set_rate
  4917                                  
  4918                                  	; 11/11/2023
  4919 00001B8D E2EF                    	loop	check_vra_loop
  4920                                  
  4921                                  ;vra_not_supported:	; 19/05/2024
  4922 00001B8F C606[5E20]00            	mov	byte [VRA], 0
  4923 00001B94 EB0E                    	jmp	short skip_rate
  4924                                  
  4925                                  set_rate:
  4926 00001B96 A1[E420]                	mov	ax, [sample_rate] ; 17/02/2017 (Erdogan Tan)
  4927                                  
  4928 00001B99 8B16[D220]              	mov    	dx, [NAMBAR]               	
  4929 00001B9D 83C22C                  	add    	dx, CODEC_PCM_FRONT_DACRATE_REG	; 2Ch  	  
  4930 00001BA0 EF                      	out	dx, ax 			; PCM Front/Center Output Sample Rate
  4931                                  
  4932                                  	;call	delay_100ms
  4933                                  	; 30/05/2024
  4934 00001BA1 E81B01                  	call	delay1_4ms
  4935                                  
  4936                                  	; 12/11/2023
  4937                                  skip_rate:
  4938 00001BA4 B80202                  	mov	ax, 0202h
  4939 00001BA7 8B16[D220]                	mov	dx, [NAMBAR]
  4940 00001BAB 83C202                    	add	dx, CODEC_MASTER_VOL_REG	;02h 
  4941 00001BAE EF                      	out	dx, ax
  4942                                  
  4943                                  	; 11/11/2023
  4944 00001BAF E80D01                  	call	delay1_4ms
  4945 00001BB2 E80A01                  	call	delay1_4ms
  4946 00001BB5 E80701                  	call	delay1_4ms
  4947 00001BB8 E80401                  	call	delay1_4ms
  4948                                  
  4949 00001BBB B80202                  	mov	ax, 0202h
  4950 00001BBE 8B16[D220]                	mov	dx, [NAMBAR]
  4951 00001BC2 83C218                    	add	dx, CODEC_PCM_OUT_REG		;18h 
  4952 00001BC5 EF                        	out	dx, ax
  4953                                  	
  4954                                  	; 11/11/2023
  4955 00001BC6 E8F600                  	call	delay1_4ms
  4956 00001BC9 E8F300                  	call	delay1_4ms
  4957 00001BCC E8F000                  	call	delay1_4ms
  4958 00001BCF E8ED00                  	call	delay1_4ms
  4959                                  
  4960                                  	; 30/05/2024
  4961                                  	; 19/05/2024
  4962                                  	;clc
  4963                                  
  4964 00001BD2 C3                              retn
  4965                                  
  4966                                  reset_ac97_controller:
  4967                                  	; 19/05/2024
  4968                                  	; 11/11/2023
  4969                                  	; 10/06/2017
  4970                                  	; 29/05/2017
  4971                                  	; 28/05/2017
  4972                                  	; reset AC97 audio controller registers
  4973 00001BD3 31C0                    	xor     ax, ax
  4974 00001BD5 BA0B00                          mov	dx, PI_CR_REG
  4975 00001BD8 0316[D420]              	add	dx, [NABMBAR]
  4976 00001BDC EE                      	out     dx, al
  4977                                  
  4978                                  	; 19/05/2024
  4979 00001BDD E8DF00                  	call	delay1_4ms
  4980                                  
  4981 00001BE0 BA1B00                          mov     dx, PO_CR_REG
  4982 00001BE3 0316[D420]              	add	dx, [NABMBAR]
  4983 00001BE7 EE                      	out     dx, al
  4984                                  
  4985                                  	; 19/05/2024
  4986 00001BE8 E8D400                  	call	delay1_4ms
  4987                                  
  4988 00001BEB BA2B00                          mov     dx, MC_CR_REG
  4989 00001BEE 0316[D420]              	add	dx, [NABMBAR]
  4990 00001BF2 EE                      	out     dx, al
  4991                                  
  4992                                  	; 19/05/2024
  4993 00001BF3 E8C900                  	call	delay1_4ms
  4994                                  
  4995 00001BF6 B002                            mov     al, RR
  4996 00001BF8 BA0B00                          mov     dx, PI_CR_REG
  4997 00001BFB 0316[D420]              	add	dx, [NABMBAR]
  4998 00001BFF EE                      	out     dx, al
  4999                                  
  5000                                  	; 19/05/2024
  5001 00001C00 E8BC00                  	call	delay1_4ms
  5002                                  
  5003 00001C03 BA1B00                          mov     dx, PO_CR_REG
  5004 00001C06 0316[D420]              	add	dx, [NABMBAR]
  5005 00001C0A EE                      	out     dx, al
  5006                                  
  5007                                  	; 19/05/2024
  5008 00001C0B E8B100                  	call	delay1_4ms
  5009                                  
  5010 00001C0E BA2B00                          mov     dx, MC_CR_REG
  5011 00001C11 0316[D420]              	add	dx, [NABMBAR]
  5012 00001C15 EE                      	out     dx, al
  5013                                  
  5014                                  	; 19/05/2024
  5015 00001C16 E8A600                  	call	delay1_4ms
  5016                                  
  5017 00001C19 C3                      	retn
  5018                                  
  5019                                  reset_ac97_codec:
  5020                                  	; 11/11/2023
  5021                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5022 00001C1A BA2C00                  	mov	dx, GLOB_CNT_REG ; 2Ch
  5023 00001C1D 0316[D420]              	add	dx, [NABMBAR]
  5024 00001C21 66ED                    	in	eax, dx
  5025                                  
  5026                                  	;test	eax, 2
  5027                                  	; 06/08/2022
  5028 00001C23 A802                    	test	al, 2
  5029 00001C25 7405                    	jz	short _r_ac97codec_cold	
  5030                                  
  5031 00001C27 E80E00                  	call	warm_ac97codec_reset
  5032 00001C2A 7306                    	jnc	short _r_ac97codec_ok
  5033                                  _r_ac97codec_cold:
  5034 00001C2C E83400                          call    cold_ac97codec_reset
  5035 00001C2F 7301                            jnc     short _r_ac97codec_ok
  5036                                  	
  5037                                  	; 16/04/2017
  5038                                          ;xor	eax, eax	; timeout error
  5039                                         	;stc
  5040 00001C31 C3                      	retn
  5041                                  
  5042                                  _r_ac97codec_ok:
  5043 00001C32 6631C0                          xor     eax, eax
  5044                                          ;mov	al, VIA_ACLINK_C00_READY ; 1
  5045 00001C35 FEC0                            inc	al
  5046 00001C37 C3                      	retn
  5047                                  
  5048                                  warm_ac97codec_reset:
  5049                                  	; 11/11/2023
  5050                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  5051                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5052 00001C38 66B806000000            	mov	eax, 6
  5053 00001C3E BA2C00                  	mov	dx, GLOB_CNT_REG ; 2Ch
  5054 00001C41 0316[D420]              	add	dx, [NABMBAR]
  5055 00001C45 66EF                    	out	dx, eax
  5056                                  
  5057 00001C47 B90A00                  	mov	cx, 10	; total 1s
  5058                                  _warm_ac97c_rst_wait:
  5059 00001C4A E86700                  	call	delay_100ms
  5060                                  
  5061 00001C4D BA3000                  	mov	dx, GLOB_STS_REG ; 30h
  5062 00001C50 0316[D420]              	add	dx, [NABMBAR]
  5063 00001C54 66ED                    	in	eax, dx
  5064                                  
  5065 00001C56 66A900030010            	test	eax, CTRL_ST_CREADY
  5066 00001C5C 7504                    	jnz	short _warm_ac97c_rst_ok
  5067                                  
  5068 00001C5E 49                              dec     cx
  5069 00001C5F 75E9                            jnz     short _warm_ac97c_rst_wait
  5070                                  
  5071                                  _warm_ac97c_rst_fail:
  5072 00001C61 F9                              stc
  5073                                  _warm_ac97c_rst_ok:
  5074 00001C62 C3                      	retn
  5075                                  
  5076                                  cold_ac97codec_reset:
  5077                                  	; 11/11/2023
  5078                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  5079                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5080 00001C63 66B802000000                    mov	eax, 2
  5081 00001C69 BA2C00                  	mov	dx, GLOB_CNT_REG ; 2Ch
  5082 00001C6C 0316[D420]              	add	dx, [NABMBAR]
  5083 00001C70 66EF                    	out	dx, eax
  5084                                  
  5085 00001C72 E83F00                  	call	delay_100ms 	; wait 100 ms
  5086 00001C75 E83C00                  	call	delay_100ms 	; wait 100 ms
  5087 00001C78 E83900                  	call	delay_100ms 	; wait 100 ms
  5088 00001C7B E83600                  	call	delay_100ms 	; wait 100 ms
  5089                                  
  5090 00001C7E B91000                  	mov	cx, 16	; total 20*100 ms = 2s
  5091                                  
  5092                                  _cold_ac97c_rst_wait:
  5093 00001C81 BA3000                  	mov	dx, GLOB_STS_REG ; 30h
  5094 00001C84 0316[D420]              	add	dx, [NABMBAR]
  5095 00001C88 66ED                    	in	eax, dx
  5096                                  
  5097 00001C8A 66A900030010            	test	eax, CTRL_ST_CREADY
  5098 00001C90 7507                    	jnz	short _cold_ac97c_rst_ok
  5099                                  
  5100 00001C92 E81F00                  	call	delay_100ms
  5101                                  
  5102 00001C95 49                              dec     cx
  5103 00001C96 75E9                            jnz     short _cold_ac97c_rst_wait
  5104                                  
  5105                                  _cold_ac97c_rst_fail:
  5106 00001C98 F9                              stc
  5107                                  _cold_ac97c_rst_ok:
  5108 00001C99 C3                      	retn
  5109                                  
  5110                                  ; 30/05/2024
  5111                                  %if 1
  5112                                  check_vra:
  5113                                  	; 30/05/2024
  5114 00001C9A C606[5E20]01            	mov	byte [VRA], 1
  5115                                  
  5116                                  	; 29/05/2024 - audio.s (TRDOS 386 Kernel) - 27/05/2024
  5117                                  	; 24/05/2024
  5118                                  	; 23/05/2024
  5119 00001C9F 8B16[D220]              	mov	dx, [NAMBAR]
  5120 00001CA3 83C228                  	add	dx, CODEC_EXT_AUDIO_REG	; 28h
  5121 00001CA6 ED                      	in	ax, dx
  5122                                  
  5123                                  	; 30/05/2024
  5124                                  	; 23/05/2024
  5125 00001CA7 E81500                  	call	delay1_4ms
  5126                                  
  5127                                  	; 30/05/2024
  5128 00001CAA A801                    	test	al, BIT0
  5129                                  	;test	al, 1 ; BIT0 ; Variable Rate Audio bit
  5130 00001CAC 7505                    	jnz	short check_vra_ok
  5131                                  
  5132                                  vra_not_supported:
  5133                                  	; 13/11/2023
  5134 00001CAE C606[5E20]00            	mov	byte [VRA], 0
  5135                                  check_vra_ok:
  5136 00001CB3 C3                      	retn
  5137                                  %endif
  5138                                  
  5139                                  ; --------------------------------------------------------
  5140                                  
  5141                                  PORTB		EQU 061h
  5142                                  REFRESH_STATUS	EQU 010h	; Refresh signal status
  5143                                  
  5144                                  delay_100ms:
  5145                                  	; 11/11/2023
  5146                                  	; 29/05/2017
  5147                                  	; 24/03/2017 ('codec.asm')
  5148                                  	; wait 100 ms
  5149 00001CB4 51                      	push	cx
  5150 00001CB5 B99001                  	mov	cx, 400  ; 400*0.25ms
  5151                                  _delay_x_ms:
  5152 00001CB8 E80400                  	call	delay1_4ms
  5153 00001CBB E2FB                            loop	_delay_x_ms
  5154 00001CBD 59                      	pop	cx
  5155 00001CBE C3                      	retn
  5156                                  
  5157                                  delay1_4ms:
  5158 00001CBF 50                              push    ax 
  5159 00001CC0 51                              push    cx
  5160 00001CC1 B91000                          mov     cx, 16			; close enough.
  5161 00001CC4 E461                    	in	al,PORTB
  5162 00001CC6 2410                    	and	al,REFRESH_STATUS
  5163 00001CC8 88C4                    	mov	ah,al			; Start toggle state
  5164 00001CCA 09C9                    	or	cx, cx
  5165 00001CCC 7401                    	jz	short _d4ms1
  5166 00001CCE 41                      	inc	cx			; Throwaway first toggle
  5167                                  _d4ms1:
  5168 00001CCF E461                    	in	al,PORTB		; Read system control port
  5169 00001CD1 2410                    	and	al,REFRESH_STATUS	; Refresh toggles 15.085 microseconds
  5170 00001CD3 38C4                    	cmp	ah,al
  5171 00001CD5 74F8                    	je	short _d4ms1		; Wait for state change
  5172                                  
  5173 00001CD7 88C4                    	mov	ah,al			; Update with new state
  5174 00001CD9 49                      	dec	cx
  5175 00001CDA 75F3                    	jnz	short _d4ms1
  5176                                  
  5177                                  	; 30/05/2024
  5178 00001CDC F8                      	clc
  5179                                  
  5180 00001CDD 59                              pop     cx
  5181 00001CDE 58                              pop     ax
  5182 00001CDF C3                              retn
  5183                                  
  5184                                  ; --------------------------------------------------------
  5185                                  ; 19/05/2024 - (playwav4.asm) ich_wav4.asm
  5186                                  ; --------------------------------------------------------
  5187                                  
  5188                                  check4keyboardstop:
  5189                                  	; 19/05/2024
  5190                                  	; 08/11/2023
  5191                                  	; 04/11/2023
  5192 00001CE0 B401                    	mov	ah, 1
  5193 00001CE2 CD16                    	int	16h
  5194                                  	;clc
  5195 00001CE4 7439                    	jz	short _cksr
  5196                                  
  5197 00001CE6 30E4                    	xor	ah, ah
  5198 00001CE8 CD16                    	int	16h
  5199                                  
  5200                                  	;;;
  5201                                  	; 19/05/2024 (change PCM out volume)
  5202 00001CEA 3C2B                    	cmp	al, '+'
  5203 00001CEC 750B                    	jne	short p_1
  5204                                  	
  5205 00001CEE A0[601D]                	mov	al, [volume]
  5206 00001CF1 3C00                    	cmp	al, 0
  5207 00001CF3 762B                    	jna	short p_3
  5208 00001CF5 FEC8                    	dec	al
  5209 00001CF7 EB0D                    	jmp	short p_2
  5210                                  p_1:
  5211 00001CF9 3C2D                    	cmp	al, '-'
  5212 00001CFB 7524                    	jne	short p_4
  5213                                  
  5214 00001CFD A0[601D]                	mov	al, [volume]
  5215 00001D00 3C1F                    	cmp	al, 31
  5216 00001D02 731C                    	jnb	short p_3
  5217 00001D04 FEC0                    	inc	al
  5218                                  p_2:
  5219 00001D06 A2[601D]                	mov	[volume], al
  5220 00001D09 88C4                    	mov	ah, al
  5221 00001D0B 8B16[D220]              	mov     dx, [NAMBAR]
  5222                                    	;add    dx, CODEC_MASTER_VOL_REG
  5223 00001D0F 83C218                  	add	dx, CODEC_PCM_OUT_REG
  5224 00001D12 EF                      	out     dx, ax
  5225                                  
  5226 00001D13 E8A9FF                  	call    delay1_4ms
  5227 00001D16 E8A6FF                          call    delay1_4ms
  5228 00001D19 E8A3FF                          call    delay1_4ms
  5229 00001D1C E8A0FF                          call    delay1_4ms
  5230                                  _cksr:		; 19/05/2024
  5231 00001D1F F8                      	clc
  5232                                  p_3:
  5233 00001D20 C3                      	retn
  5234                                  p_4:
  5235                                  	;;;
  5236                                  ;_cskr:	
  5237 00001D21 F9                      	stc
  5238 00001D22 C3                      	retn
  5239                                  
  5240                                  ; returns AL = current index value
  5241                                  getCurrentIndex:
  5242                                  	; 08/11/2023
  5243                                  	;push	dx
  5244 00001D23 8B16[D420]              	mov	dx, [NABMBAR]
  5245 00001D27 83C214                  	add	dx, PO_CIV_REG
  5246 00001D2A EC                      	in	al, dx
  5247                                  	;pop	dx
  5248                                  uLVI2:	;	06/11/2023
  5249 00001D2B C3                      	retn
  5250                                  
  5251                                  updateLVI:
  5252                                  	; 06/11/2023
  5253 00001D2C 8B16[D420]              	mov	dx, [NABMBAR]
  5254 00001D30 83C214                  	add	dx, PO_CIV_REG
  5255                                  	; (Current Index Value and Last Valid Index value)
  5256 00001D33 ED                      	in	ax, dx
  5257                                  
  5258 00001D34 38E0                    	cmp	al, ah ; is current index = last index ?
  5259 00001D36 75F3                    	jne	short uLVI2
  5260                                  
  5261                                  	; 08/11/2023	
  5262 00001D38 E8E8FF                  	call	getCurrentIndex
  5263                                   
  5264 00001D3B F606[7E20]01            	test	byte [flags], ENDOFFILE
  5265                                  	;jnz	short uLVI1
  5266 00001D40 7411                    	jz	short uLVI0  ; 08/11/2023
  5267                                  
  5268                                  	; 08/11/2023
  5269 00001D42 50                      	push	ax
  5270 00001D43 8B16[D420]              	mov	dx, [NABMBAR]
  5271 00001D47 83C216                  	add	dx, PO_SR_REG  ; PCM out status register
  5272 00001D4A ED                      	in	ax, dx
  5273                                  
  5274 00001D4B A803                    	test	al, 3 ; bit 1 = Current Equals Last Valid (CELV)
  5275                                  		      ; (has been processed)
  5276                                  		      ; bit 0 = 1 -> DMA Controller Halted (DCH)
  5277 00001D4D 58                      	pop	ax
  5278 00001D4E 7407                    	jz	short uLVI1
  5279                                  uLVI3:
  5280 00001D50 31C0                    	xor	ax, ax
  5281                                  	; zf = 1
  5282 00001D52 C3                      	retn
  5283                                  uLVI0:
  5284                                          ; not at the end of the file yet.
  5285 00001D53 FEC8                    	dec	al
  5286 00001D55 241F                    	and	al, 1Fh
  5287                                  uLVI1:
  5288                                  	;call	setLastValidIndex
  5289                                  ;uLVI2:
  5290                                  	;retn
  5291                                  
  5292                                  ;input AL = index # to stop on
  5293                                  setLastValidIndex:
  5294                                  	; 08/11/2023
  5295                                  	;push	dx
  5296 00001D57 8B16[D420]              	mov	dx, [NABMBAR]
  5297 00001D5B 83C215                  	add	dx, PO_LVI_REG
  5298 00001D5E EE                              out     dx, al
  5299                                  	;pop	dx
  5300 00001D5F C3                      	retn
  5301                                  
  5302                                  ; 29/05/2024
  5303                                  ; 19/05/2024
  5304 00001D60 02                      volume: db	02h
  5305                                  	
  5306                                  ; --------------------------------------------------------
  5307                                  
  5308                                  ; DATA
  5309                                  
  5310                                  FileHandle:	
  5311 00001D61 FFFFFFFF                	dd	-1
  5312                                  
  5313                                  ; 30/05/2024
  5314 00001D65 00                      reset:	db	0
  5315                                  
  5316                                  Credits:
  5317 00001D66 54696E792057415620-     	db	'Tiny WAV Player for Retro DOS by Erdogan Tan. '
  5317 00001D6F 506C6179657220666F-
  5317 00001D78 7220526574726F2044-
  5317 00001D81 4F5320627920457264-
  5317 00001D8A 6F67616E2054616E2E-
  5317 00001D93 20                 
  5318                                  	;;db	'May 2024.',10,13,0
  5319                                  	;;db	'30/05/2024', 10,13,0
  5320                                  	;db	'December 2024.',10,13,0
  5321                                  	;db	'14/12/2024', 10,13,0
  5322 00001D94 466562727561727920-     	db	'February 2025.',10,13,0
  5322 00001D9D 323032352E0A0D00   
  5323 00001DA5 30342F30322F323032-     	db	'04/02/2025', 10,13,0
  5323 00001DAE 350A0D00           
  5324                                  
  5325                                  msgAudioCardInfo:
  5326 00001DB2 666F7220496E74656C-     	db 	'for Intel AC97 (ICH) Audio Controller.', 10,13,0
  5326 00001DBB 204143393720284943-
  5326 00001DC4 482920417564696F20-
  5326 00001DCD 436F6E74726F6C6C65-
  5326 00001DD6 722E0A0D00         
  5327                                  
  5328                                  msg_usage:
  5329 00001DDB 75736167653A20706C-     	db	'usage: playwav6 filename.wav',10,13,0 ; 30/05/2024
  5329 00001DE4 617977617636206669-
  5329 00001DED 6C656E616D652E7761-
  5329 00001DF6 760A0D00           
  5330                                  
  5331                                  noDevMsg:
  5332 00001DFA 4572726F723A20556E-     	db	'Error: Unable to find AC97 audio device!'
  5332 00001E03 61626C6520746F2066-
  5332 00001E0C 696E64204143393720-
  5332 00001E15 617564696F20646576-
  5332 00001E1E 69636521           
  5333 00001E22 0A0D00                  	db	10,13,0
  5334                                  
  5335                                  noFileErrMsg:
  5336 00001E25 4572726F723A206669-     	db	'Error: file not found.',10,13,0
  5336 00001E2E 6C65206E6F7420666F-
  5336 00001E37 756E642E0A0D00     
  5337                                  
  5338                                  msg_error:	; 30/05/2024
  5339                                  
  5340                                  ; 29/05/2024
  5341                                  ; 11/11/2023
  5342                                  msg_init_err:
  5343 00001E3E 0D0A                    	db	CR, LF
  5344 00001E40 4143393720436F6E74-     	db	"AC97 Controller/Codec initialization error !"
  5344 00001E49 726F6C6C65722F436F-
  5344 00001E52 64656320696E697469-
  5344 00001E5B 616C697A6174696F6E-
  5344 00001E64 206572726F722021   
  5345                                  	;db	CR, LF, "$"
  5346 00001E6C 0D0A00                  	db	CR, LF, 0 ; 14/12/2024
  5347                                  
  5348                                  ; 25/11/2023
  5349                                  msg_no_vra:
  5350 00001E6F 0A0D                    	db	10,13
  5351 00001E71 4E6F20565241207375-     	db	"No VRA support ! Only 48 kHZ sample rate supported !"
  5351 00001E7A 70706F72742021204F-
  5351 00001E83 6E6C79203438206B48-
  5351 00001E8C 5A2073616D706C6520-
  5351 00001E95 726174652073757070-
  5351 00001E9E 6F727465642021     
  5352 00001EA5 0A0D00                  	db	10,13,0
  5353                                  
  5354                                  ; 29/05/2024 (TRDOS 386)
  5355                                  ; 17/02/2017
  5356                                  ; Valid ICH device IDs
  5357                                  
  5358                                  valid_ids:
  5359 00001EA8 86801524                dd	(ICH_DID << 16) + INTEL_VID  	 ; 8086h:2415h
  5360 00001EAC 86802524                dd	(ICH0_DID << 16) + INTEL_VID 	 ; 8086h:2425h
  5361 00001EB0 86804524                dd	(ICH2_DID << 16) + INTEL_VID 	 ; 8086h:2445h
  5362 00001EB4 86808524                dd	(ICH3_DID << 16) + INTEL_VID 	 ; 8086h:2485h
  5363 00001EB8 8680C524                dd	(ICH4_DID << 16) + INTEL_VID 	 ; 8086h:24C5h
  5364 00001EBC 8680D524                dd	(ICH5_DID << 16) + INTEL_VID 	 ; 8086h:24D5h
  5365 00001EC0 86806E26                dd	(ICH6_DID << 16) + INTEL_VID 	 ; 8086h:266Eh
  5366 00001EC4 8680A625                dd	(ESB6300_DID << 16) + INTEL_VID  ; 8086h:25A6h
  5367 00001EC8 86809826                dd	(ESB631X_DID << 16) + INTEL_VID  ; 8086h:2698h
  5368 00001ECC 8680DE27                dd	(ICH7_DID << 16) + INTEL_VID 	 ; 8086h:27DEh
  5369                                  ; 03/11/2023 - Erdogan Tan
  5370 00001ED0 86809571                dd	(MX82440_DID << 16) + INTEL_VID  ; 8086h:7195h
  5371 00001ED4 39101270                dd	(SI7012_DID << 16)  + SIS_VID	 ; 1039h:7012h
  5372 00001ED8 DE10B101                dd 	(NFORCE_DID << 16)  + NVIDIA_VID ; 10DEh:01B1h
  5373 00001EDC DE106A00                dd 	(NFORCE2_DID << 16) + NVIDIA_VID ; 10DEh:006Ah
  5374 00001EE0 22106D74                dd 	(AMD8111_DID << 16) + AMD_VID 	 ; 1022h:746Dh
  5375 00001EE4 22104574                dd 	(AMD768_DID << 16)  + AMD_VID 	 ; 1022h:7445h
  5376 00001EE8 DE105900                dd 	(CK804_DID << 16) + NVIDIA_VID	 ; 10DEh:0059h
  5377 00001EEC DE103A00                dd 	(MCP04_DID << 16) + NVIDIA_VID	 ; 10DEh:003Ah
  5378 00001EF0 DE108A00                dd 	(CK8_DID << 16) + NVIDIA_VID	 ; 1022h:008Ah
  5379 00001EF4 DE10DA00                dd 	(NFORCE3_DID << 16) + NVIDIA_VID ; 10DEh:00DAh
  5380 00001EF8 DE10EA00                dd 	(CK8S_DID << 16) + NVIDIA_VID	 ; 10DEh:00EAh
  5381                                  
  5382                                  valid_id_count:	equ ($ - valid_ids)>>2 ; 05/11/2023
  5383                                  
  5384 00001EFC 0D0A5741562046696C-     msgWavFileName:	db 0Dh, 0Ah, "WAV File Name: ",0
  5384 00001F05 65204E616D653A2000 
  5385 00001F0E 0D0A53616D706C6520-     msgSampleRate:	db 0Dh, 0Ah, "Sample Rate: "
  5385 00001F17 526174653A20       
  5386 00001F1D 303030303020487A2C-     msgHertz:	db "00000 Hz, ", 0 
  5386 00001F26 2000               
  5387 00001F28 3820626974732C2000      msg8Bits:	db "8 bits, ", 0 
  5388                                  ;msgMono:	db "Mono", 0Dh, 0Ah, 0
  5389 00001F31 4D6F6E6F00              msgMono:	db "Mono", 0
  5390 00001F36 313620626974732C20-     msg16Bits:	db "16 bits, ", 0 
  5390 00001F3F 00                 
  5391                                  ;msgStereo:	db "Stereo"
  5392 00001F40 53746572656F00          msgStereo:	db "Stereo",0
  5393 00001F47 0D0A00                  nextline:	db 0Dh, 0Ah, 0
  5394                                  
  5395                                  ; 03/06/2017
  5396 00001F4A 303132333435363738-     hex_chars	db "0123456789ABCDEF", 0
  5396 00001F53 3941424344454600   
  5397 00001F5B 0D0A                    msgAC97Info	db 0Dh, 0Ah
  5398 00001F5D 414339372041756469-     		db "AC97 Audio Controller & Codec Info", 0Dh, 0Ah 
  5398 00001F66 6F20436F6E74726F6C-
  5398 00001F6F 6C6572202620436F64-
  5398 00001F78 656320496E666F0D0A 
  5399 00001F81 56656E646F72204944-     		db "Vendor ID: "
  5399 00001F8A 3A20               
  5400 00001F8C 303030306820446576-     msgVendorId	db "0000h Device ID: "
  5400 00001F95 6963652049443A20   
  5401 00001F9D 30303030680D0A          msgDevId	db "0000h", 0Dh, 0Ah
  5402 00001FA4 4275733A20              		db "Bus: "
  5403 00001FA9 303068204465766963-     msgBusNo	db "00h Device: "
  5403 00001FB2 653A20             
  5404 00001FB5 3030682046756E6374-     msgDevNo	db "00h Function: "
  5404 00001FBE 696F6E3A20         
  5405 00001FC3 303068                  msgFncNo	db "00h"
  5406 00001FC6 0D0A                    		db 0Dh, 0Ah
  5407 00001FC8 4E414D4241523A20        		db "NAMBAR: "
  5408 00001FD0 30303030682020          msgNamBar	db "0000h  "
  5409 00001FD7 4E41424D4241523A20      		db "NABMBAR: "
  5410 00001FE0 303030306820204952-     msgNabmBar	db "0000h  IRQ: "
  5410 00001FE9 513A20             
  5411 00001FEC 3030                    msgIRQ		dw 3030h
  5412 00001FEE 0D0A00                  		db 0Dh, 0Ah, 0
  5413                                  ; 25/11/2023
  5414 00001FF1 56524120737570706F-     msgVRAheader:	db "VRA support: "
  5414 00001FFA 72743A20           
  5415 00001FFE 00                      		db 0	
  5416 00001FFF 5945530D0A00            msgVRAyes:	db "YES", 0Dh, 0Ah, 0
  5417 00002005 4E4F200D0A              msgVRAno:	db "NO ", 0Dh, 0Ah
  5418 0000200A 28496E746572706F6C-     		db "(Interpolated sample rate playing method)"
  5418 00002013 617465642073616D70-
  5418 0000201C 6C6520726174652070-
  5418 00002025 6C6179696E67206D65-
  5418 0000202E 74686F6429         
  5419 00002033 0D0A00                  		db 0Dh, 0Ah, 0
  5420                                  
  5421                                  ; 30/05/2024
  5422                                  print_msg:
  5423 00002036 BB0700                  	mov	bx, 07h
  5424                                  p_msg:
  5425 00002039 06                      	push	es
  5426 0000203A 55                      	push	bp
  5427 0000203B 51                      	push	cx
  5428 0000203C 52                      	push	dx
  5429                                  
  5430 0000203D 1E                      	push	ds
  5431 0000203E 07                      	pop	es
  5432 0000203F 89F5                    	mov	bp,si
  5433 00002041 B403                    	mov	ah, 03h ; Return cursor position (in DX)
  5434                                  	; bh = video page number 	
  5435 00002043 CD10                    	int	10h
  5436 00002045 31C9                    	xor	cx, cx
  5437                                  p_msg_0:	
  5438 00002047 AC                      	lodsb
  5439 00002048 08C0                    	or	al, al
  5440 0000204A 7403                    	jz	short p_msg_1
  5441 0000204C 41                      	inc	cx
  5442 0000204D EBF8                    	jmp	short p_msg_0
  5443                                  p_msg_1:
  5444 0000204F 09C9                    	or	cx, cx
  5445 00002051 7405                    	jz	short p_msg_x
  5446                                  	; cx = number of chars
  5447                                  	; dx = screen (cursor) position
  5448                                  	; bl = color/attribute
  5449                                  	; bh = video page number
  5450                                  	; es:bp = string buffer
  5451                                  	;mov	al, 1 ; attribute in BL, update cursor pos
  5452                                  	;mov	ah, 13h ; write character string
  5453 00002053 B80113                   	mov	ax, 1301h
  5454 00002056 CD10                    	int	10h
  5455                                  p_msg_x:
  5456 00002058 5A                      	pop	dx
  5457 00002059 59                      	pop	cx
  5458 0000205A 5D                      	pop	bp
  5459 0000205B 07                      	pop	es
  5460 0000205C C3                      	retn
  5461                                  
  5462                                  EOF: 
  5463                                  
  5464                                  ; BSS
  5465                                  
  5466                                  ; 17/02/2017
  5467                                  bss_start:
  5468                                  
  5469                                  ABSOLUTE bss_start
  5470                                  
  5471 0000205D ??                      alignb 2
  5472                                  
  5473                                  ; 30/05/2024
  5474 0000205E ??                      VRA:		resb 1	; Variable Rate Audio Support Status
  5475 0000205F ??                      		resb 1
  5476                                  ; 28/11/2016
  5477                                  
  5478 00002060 <res 1Ch>               smpRBuff:	resw 14 ; 19/11/2016 - Erdogan Tan
  5479                                  
  5480 0000207C ????                    filehandle:	resw 1
  5481                                  
  5482 0000207E ??                      flags:		resb 1
  5483                                  ; 06/11/2023
  5484 0000207F ??                      ac97_int_ln_reg: resb 1
  5485                                  
  5486                                  ; 30/05/2024
  5487                                  wav_file_name:
  5488 00002080 <res 50h>               		resb 80 ; wave file, path name (<= 80 bytes)
  5489                                  
  5490 000020D0 ????                    		resw 1	
  5491                                  
  5492                                  ; 17/02/2017
  5493                                  ; NAMBAR:  Native Audio Mixer Base Address Register
  5494                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 10h-13h
  5495                                  ; NABMBAR: Native Audio Bus Mastering Base Address register
  5496                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 14h-17h
  5497 000020D2 ????                    NAMBAR:		resw 1			; BAR for mixer
  5498 000020D4 ????                    NABMBAR:	resw 1			; BAR for bus master regs
  5499                                  
  5500                                  ; 256 byte buffer for descriptor list
  5501 000020D6 ????                    BDL_BUFFER:	resw 1			; segment of our 256byte BDL buffer
  5502 000020D8 ????                    WAV_BUFFER1:	resw 1			; segment of our WAV storage
  5503                                  ; 64k buffers for wav file storage
  5504 000020DA ????                    WAV_BUFFER2:	resw 1			; segment of 2nd wav buffer
  5505                                  
  5506                                  ; 12/11/2016 - Erdogan Tan
  5507                                  
  5508 000020DC ????????                bus_dev_fn:	resd 1
  5509 000020E0 ????????                dev_vendor:	resd 1
  5510                                  
  5511                                  ; 06/11/2023
  5512 000020E4 ????                    sample_rate:	resw 1
  5513                                  
  5514                                  ; 19/11/2016
  5515 000020E6 ????                    stmo:		resw 1 
  5516 000020E8 ????                    bps:		resw 1
  5517                                  
  5518                                  ; 08/11/2023
  5519                                  ; 07/11/2023
  5520 000020EA ??                      fbs_shift:	resb 1
  5521 000020EB ??                      		resb 1 ; 08/11/2023
  5522                                  
  5523                                  ;alignb 2
  5524                                  
  5525                                  ; 32 kilo bytes for temporay buffer
  5526                                  ; (for stereo-mono, 8bit/16bit corrections)
  5527                                  ;temp_buffer:	resb 32768
  5528                                  ; 18/11/2023
  5529 000020EC <res DBF0h>             temp_buffer:	resb 56304  ; (44.1 kHZ stereo 14076 samples)	
  5530                                  
  5531                                  ;alignb 16
  5532                                  bss_end:
