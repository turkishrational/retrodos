     1                                  ;
     2                                  ; MSDOS2.ASM - MSDOS 2.11 KERNEL SOURCE CODE - Erdogan Tan, 18/04/2018
     3                                  ; 						(Assembler: NASM 2.11)
     4                                  ;
     5                                  ; ###########################################################################
     6                                  ; #	This file is generated by The Interactive Disassembler (IDA)	    #
     7                                  ; #	Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>	    #
     8                                  ; #			 Licensed to: Freeware version			    #
     9                                  ; ###########################################################################
    10                                  ;
    11                                  ; Input	MD5   :	1D55763C742AEA72C3B64A0E8564E585
    12                                  
    13                                  ; ---------------------------------------------------------------------------
    14                                  ; File Name   :	D:\Documents and Settings\Erdoðan Tan\Desktop\IBMDOS.COM
    15                                  ; Format      :	Binary file
    16                                  ; Base Address:	0000h Range: 0000h - 4318h Loaded length: 4318h
    17                                  
    18                                  ENTRYPOINTSEG   EQU     0CH
    19                                  MAXDIF          EQU     0FFFH
    20                                  SAVEXIT         EQU     10
    21                                  
    22                                  ; <interrupt definitions>
    23                                  
    24                                  INTTAB          EQU     20H
    25                                  INTBASE         EQU     4 * INTTAB
    26                                  ENTRYPOINT      EQU     INTBASE+40H
    27                                  
    28                                  ;
    29                                  ; interrupt assignments
    30                                  ;
    31                                  int_abort           EQU     INTTAB          ; abort process
    32                                  int_command         EQU     int_abort+1     ; call MSDOS
    33                                  int_terminate       EQU     int_abort+2     ; int to terminate address
    34                                  int_ctrl_c          EQU     int_abort+3     ; ^c trapper
    35                                  int_fatal_abort     EQU     int_abort+4     ; hard disk error
    36                                  int_disk_read       EQU     int_abort+5     ; logical sector disk read
    37                                  int_disk_write      EQU     int_abort+6     ; logical sector disk write
    38                                  int_keep_process    EQU     int_abort+7     ; terminate program and stay resident
    39                                  int_spooler         EQU     int_abort+8     ; spooler call
    40                                  int_fastcon         EQU     int_abort+9     ; fast CON interrupt
    41                                  
    42                                  addr_int_abort          EQU    4 * int_abort
    43                                  addr_int_command        EQU    4 * int_command
    44                                  addr_int_terminate      EQU    4 * int_terminate
    45                                  addr_int_ctrl_c         EQU    4 * int_ctrl_c
    46                                  addr_int_fatal_abort    EQU    4 * int_fatal_abort
    47                                  addr_int_disk_read      EQU    4 * int_disk_read
    48                                  addr_int_disk_write     EQU    4 * int_disk_write
    49                                  addr_int_keep_process   EQU    4 * int_keep_process
    50                                  addr_int_spooler        EQU    4 * int_spooler
    51                                  addr_int_fastcon        EQU    4 * int_fastcon
    52                                  
    53                                  ;============================================================================
    54                                  ; MSDATA.ASM
    55                                  ;============================================================================
    56                                  
    57                                  ; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    58                                  ; SUBTTL Uninitialized data overlayed by initialization code
    59                                  ; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    60                                  ;PAGE
    61                                  ;DATA    SEGMENT WORD PUBLIC 'DATA'
    62                                  ; Init code overlaps with data area below
    63                                  
    64                                  ;        ORG     0
    65                                  ;        i_am    INBUF,128
    66                                  ;        I_AM    CONBUF,131              ; The rest of INBUF and console buffer
    67                                  ;        i_am    TIMEBUF,6
    68                                  ;        I_AM    DEVIOBUF,2              ; Buffer for I/O under file assignment
    69                                  ;        I_AM    EXITHOLD,DWORD
    70                                  
    71                                  ; Retro DOS 2.0 NASM modifications !!! (02/03/2018)
    72                                  INBUF	 EQU	DATASEGMENT+0	; DATASEGMENT = DOSINIT addr (parag aligned)
    73                                  CONBUF	 EQU	INBUF+128	; DATASEGMENT+128
    74                                  TIMEBUF	 EQU	CONBUF+131	; DATASEGMENT+259
    75                                  DEVIOBUF EQU	TIMEBUF+6	; DATASEGMENT+265
    76                                  EXITHOLD EQU	DEVIOBUF+2	; DATASEGMENT+267
    77                                  
    78                                          ;PUBLIC  DevFCB
    79                                  ;DEVFCB	LABEL   BYTE	; Uses NAME1, NAME2, NAME3 combined
    80                                  DEVFCB	EQU	EXITHOLD+4	; DATASEGMENT+271
    81                                  
    82                                  ; WARNING..  do not alter size or relative location of the following 4 items
    83                                  ; without first examining FCB_RENAME
    84                                          ;I_AM    NAME1,12                ; File name buffer
    85                                          ;I_AM    ATTRIB,BYTE
    86                                          ;I_AM    NAME2,13
    87                                          ;I_AM    NAME3,14
    88                                  
    89                                          ;I_AM    EXTFCB,BYTE
    90                                  NAME1	EQU	EXITHOLD+4	; DATASEGMENT+271 ; File name buffer
    91                                  ATTRIB	EQU	NAME1+12	; DATASEGMENT+283
    92                                  NAME2	EQU	ATTRIB+1	; DATASEGMENT+284
    93                                  NAME3	EQU	NAME2+13	; DATASEGMENT+297
    94                                  EXTFCB  EQU	NAME3+14	; DATASEGMENT+311
    95                                  
    96                                  ; WARNING - the following two items are accessed as a word
    97                                          ;I_AM    CREATING,BYTE
    98                                          ;I_AM    DELALL,BYTE
    99                                  CREATING EQU	EXTFCB+1	; DATASEGMENT+312 
   100                                  DELALL	EQU	CREATING+1	; DATASEGMENT+313 	
   101                                  
   102                                          ;I_AM    FoundDel,BYTE
   103                                  FOUNDDEL EQU	DELALL+1	; DATASEGMENT+314	
   104                                  
   105                                          ;I_AM    user_SP,WORD
   106                                          ;I_AM    user_SS,WORD
   107                                          ;I_AM    CONTSTK,WORD
   108                                          ;I_AM    SECCLUSPOS,BYTE	; Position of first sector 
   109                                  				 	; within cluster
   110                                          ;I_AM    DSKERR,BYTE
   111                                          ;I_AM    TRANS,BYTE
   112                                          ;I_AM    READOP,BYTE
   113                                          ;I_AM    THISDRV,BYTE
   114                                          ;I_AM    THISDPB,DWORD
   115                                          ;I_AM    CLUSFAC,BYTE
   116                                  
   117                                  user_SP	EQU	FOUNDDEL+1	; DATASEGMENT+315		
   118                                  user_SS	EQU	user_SP+2	; DATASEGMENT+317 
   119                                  CONTSTK	EQU	user_SS+2	; DATASEGMENT+319 
   120                                  SECCLUSPOS EQU	CONTSTK+2	; DATASEGMENT+321 
   121                                  DSKERR	EQU	SECCLUSPOS+1	; DATASEGMENT+322 
   122                                  TRANS	EQU	DSKERR+1	; DATASEGMENT+323 
   123                                  READOP	EQU	TRANS+1		; DATASEGMENT+324 
   124                                  THISDRV	EQU	READOP+1	; DATASEGMENT+325 
   125                                  THISDPB	EQU	THISDRV+1	; DATASEGMENT+326 
   126                                  CLUSFAC	EQU	THISDPB+4	; DATASEGMENT+330 
   127                                  
   128                                  ; WARNING - the following two items are accessed as a word
   129                                          ;I_AM    DRIVESPEC,BYTE
   130                                          ;I_AM    ROOTSTART,BYTE
   131                                  DRIVESPEC EQU	CLUSFAC+1	; DATASEGMENT+331	
   132                                  ROOTSTART EQU	DRIVESPEC+1	; DATASEGMENT+332 
   133                                  
   134                                          ;I_AM    CLUSSPLIT,BYTE
   135                                          ;i_am    INSMODE,BYTE
   136                                          ;I_AM    CLUSSAVE,WORD
   137                                          ;I_AM    CLUSSEC,WORD
   138                                          ;I_AM    PREREAD,WORD		; 0 means preread; 1 means optional
   139                                          ;I_AM    FATBYT,WORD
   140                                          ;I_AM    DEVPT,DWORD
   141                                          ;I_AM    THISFCB,DWORD		; Address of user FCB
   142                                  
   143                                  CLUSSPLIT EQU	ROOTSTART+1  	; DATASEGMENT+333 
   144                                  INSMODE	EQU	CLUSSPLIT+1	; DATASEGMENT+334	
   145                                  CLUSSAVE EQU	INSMODE+1	; DATASEGMENT+335	
   146                                  CLUSSEC	EQU	CLUSSAVE+2	; DATASEGMENT+337	
   147                                  PREREAD	EQU	CLUSSEC+2	; DATASEGMENT+339 ; 0 means preread; 1 means optional
   148                                  FATBYT	EQU	PREREAD+2	; DATASEGMENT+341	
   149                                  DEVPT	EQU	FATBYT+2	; DATASEGMENT+343 
   150                                  THISFCB	EQU	DEVPT+4		; DATASEGMENT+347 ; Address of user FCB  
   151                                  
   152                                          ;I_AM    NEXTADD,WORD
   153                                          ;I_AM    RECPOS,4
   154                                          ;I_AM    RECCNT,WORD
   155                                          ;I_AM    LASTPOS,WORD
   156                                          ;I_AM    CLUSNUM,WORD
   157                                          ;I_AM    DIRSEC,WORD
   158                                          ;I_AM    DIRSTART,WORD
   159                                          ;I_AM    SECPOS,WORD		; Position of first sector accessed
   160                                          ;I_AM    VALSEC,WORD		; Number of valid (previously written)
   161                                  	;				; sectors
   162                                  
   163                                  NEXTADD	EQU 	THISFCB+4	; DATASEGMENT+351
   164                                  RECPOS	EQU	NEXTADD+2	; DATASEGMENT+353
   165                                  RECCNT	EQU	RECPOS+4	; DATASEGMENT+357 
   166                                  LASTPOS	EQU	RECCNT+2	; DATASEGMENT+359 
   167                                  CLUSNUM	EQU	LASTPOS+2	; DATASEGMENT+361	
   168                                  DIRSEC	EQU	CLUSNUM+2	; DATASEGMENT+363	
   169                                  DIRSTART EQU	DIRSEC+2	; DATASEGMENT+365 
   170                                  SECPOS	EQU	DIRSTART+2 	; DATASEGMENT+367 ; Position of first sector accessed
   171                                  VALSEC	EQU	SECPOS+2	; DATASEGMENT+369 ; SECPOS+2 ; Number of valid
   172                                  						  	     ; (previously written)
   173                                  	;						     ; sectors
   174                                  
   175                                          ;I_AM    BYTSECPOS,WORD		; Position of first byte within sector
   176                                          ;I_AM    BYTPOS,4		; Byte position in file of access
   177                                          ;I_AM    BYTCNT1,WORD		; No. of bytes in first sector
   178                                          ;I_AM    BYTCNT2,WORD		; No. of bytes in last sector
   179                                          ;I_AM    SECCNT,WORD		; No. of whole sectors
   180                                          ;I_AM    ENTFREE,WORD
   181                                          ;I_AM    ENTLAST,WORD
   182                                          ;I_AM    NXTCLUSNUM,WORD
   183                                          ;I_AM    GROWCNT,DWORD
   184                                          ;I_AM    CURBUF,DWORD
   185                                          ;I_AM    VOLID,BYTE
   186                                          ;I_AM    NULLDEVPT,DWORD
   187                                          ;I_AM    CINSAV,DWORD
   188                                          ;I_AM    CINDSAV,BYTE
   189                                          ;I_AM    COUTDSAV,BYTE
   190                                          ;I_AM    COUTSAV,DWORD
   191                                  
   192                                  BYTSECPOS EQU	VALSEC+2 	; DATASEGMENT+371 ; Position of first byte within sector
   193                                  BYTPOS	EQU	BYTSECPOS+2	; DATASEGMENT+373 ; Byte position in file of access
   194                                  BYTCNT1	EQU	BYTPOS+4 	; DATASEGMENT+377 ; No. of bytes in first sector
   195                                  BYTCNT2	EQU	BYTCNT1+2 	; DATASEGMENT+379 ; No. of bytes in last sector
   196                                  SECCNT	EQU	BYTCNT2+2 	; DATASEGMENT+381 ; No. of whole sectors
   197                                  ENTFREE	EQU	SECCNT+2	; DATASEGMENT+383	
   198                                  ENTLAST	EQU	ENTFREE+2	; DATASEGMENT+385	
   199                                  NXTCLUSNUM EQU	ENTLAST+2	; DATASEGMENT+387	
   200                                  GROWCNT	EQU	NXTCLUSNUM+2	; DATASEGMENT+389	
   201                                  CURBUF	EQU	GROWCNT+4	; DATASEGMENT+393	
   202                                  VOLID	EQU	CURBUF+4	; DATASEGMENT+397	
   203                                  NULLDEVPT EQU	VOLID+1		; DATASEGMENT+398	
   204                                  CINSAV	EQU	NULLDEVPT+4	; DATASEGMENT+402	
   205                                  CINDSAV EQU	CINSAV+4	; DATASEGMENT+406	
   206                                  COUTDSAV EQU	CINDSAV+1	; DATASEGMENT+407	
   207                                  COUTSAV EQU	COUTDSAV+1	; DATASEGMENT+408 
   208                                          
   209                                  	;PUBLIC  SaveBX
   210                                  SaveBX	EQU	COUTSAV+4 	; DATASEGMENT+412 ; DW ?
   211                                          ;PUBLIC  SaveDS
   212                                  SaveDS  EQU	SaveBX+2  	; DATASEGMENT+414 ; DW ?
   213                                          ;I_AM    ConC_spsave,WORD
   214                                  ConC_spsave EQU	SaveDS+2	; DATASEGMENT+416 
   215                                  
   216                                          ;I_AM    exit_code,WORD		; exit code of last proc.
   217                                          ;I_am    exit_type,BYTE		; type of exit...
   218                                  exit_code EQU	ConC_spsave+2	; DATASEGMENT+418 
   219                                  exit_type EQU	exit_code+2	; DATASEGMENT+420 
   220                                  
   221                                  ;       IF      IBM
   222                                  ;;For 2.00 this pads the DOS so that on a 2 disk IBM PC with no
   223                                  ;;CONFIG.SYS file the space taken up by BIOS, DOS, res COMMAND is
   224                                  ;;about 24K
   225                                  ;IBMPAD  DB      540h DUP(?)
   226                                  ;       ENDIF
   227                                  
   228                                  ; make those pushes fast!!!
   229                                  ;EVEN
   230                                          ;DB      0A0H DUP (?)
   231                                          ;I_am    AuxStack,0A0h
   232                                          ;I_AM    DSKSTACK,0A0h		; Stack space
   233                                  AUXSTACK EQU	exit_type+2+160	; DATASEGMENT+422+160
   234                                  DSKSTACK EQU	AUXSTACK+160	; DATASEGMENT+742
   235                                  
   236                                  	;PUBLIC  IOSTACK
   237                                  ;IOSTACK LABEL   BYTE
   238                                  IOSTACK EQU	DSKSTACK+160	; DATASEGMENT+902	
   239                                  
   240                                          ;PUBLIC  NSS
   241                                  ;NSS         DW      ?
   242                                  ;        PUBLIC  NSP
   243                                  ;NSP         DW      ?
   244                                  NSS	EQU	IOSTACK+0	; DATASEGMENT+902
   245                                  NSP	EQU	NSS+2		; DATASEGMENT+904
   246                                  
   247                                  
   248                                  ;============================================================================
   249                                  ; XENIX.ASM
   250                                  ;============================================================================
   251                                  ; 02/04/2018
   252                                  
   253                                  ;DATA        SEGMENT BYTE PUBLIC 'DATA'
   254                                  ;
   255                                  ;open_name   DW  ?
   256                                  ;            DW  ?
   257                                  ;open_access DB  ?
   258                                  ;open_jfn    DW  ?                       ; accessed as DD
   259                                  ;open_jfn_b  DW  ?                       ; accessed as DD with above
   260                                  ;open_sfn    DW  ?
   261                                  ;open_sfoff  DW  ?                       ; accessed as DD
   262                                  ;open_sfn_b  DW  ?                       ; accessed as DD with above
   263                                  ;open_devid  DB  ?
   264                                  ;Cr_read_only    DB  ?
   265                                  ;rename_source   DD  ?
   266                                  ;rename_dest     DD  ?
   267                                  ;
   268                                  ;DATA        ENDS
   269                                  
   270                                  open_name    equ NSP+2		; DATASEGMENT+906
   271                                  open_access  equ open_name+4	; DATASEGMENT+910
   272                                  open_jfn     equ open_access+1	; DATASEGMENT+911
   273                                  open_jfn_b   equ open_jfn+2	; DATASEGMENT+913
   274                                  open_sfn     equ open_jfn_b+2	; DATASEGMENT+915
   275                                  open_sfoff   equ open_sfn+2	; DATASEGMENT+917
   276                                  open_sfn_b   equ open_sfoff+2	; DATASEGMENT+919
   277                                  open_devid   equ open_sfn_b+2	; DATASEGMENT+921
   278                                  Cr_read_only equ open_devid+1	; DATASEGMENT+922
   279                                  rename_source equ Cr_read_only+1 ; DATASEGMENT+923
   280                                  rename_dest  equ rename_source+4 ; DATASEGMENT+927
   281                                  ;		
   282                                  
   283                                  ;============================================================================
   284                                  ; XENIX2.ASM
   285                                  ;============================================================================
   286                                  ; 02/04/2018
   287                                  
   288                                  ;DATA        SEGMENT BYTE PUBLIC 'DATA'
   289                                  
   290                                  ;PushSave    DW      ?
   291                                  ;PushES      DW      ?
   292                                  ;PushBX      DW      ?
   293                                  ;xenix_count DW      ?
   294                                  
   295                                  ;DATA	ENDS
   296                                  
   297                                  ;align 2
   298                                  
   299                                  ; 15/04/2018
   300                                  
   301                                  PushSave     equ rename_dest+4	; DATASEGMENT+932
   302                                  PushES	     equ PushSave+2	; DATASEGMENT+934
   303                                  PushBX	     equ PushES+2	; DATASEGMENT+936
   304                                  xenix_count  equ PushBX+2	; DATASEGMENT+938
   305                                  
   306                                  ; 16/04/2018
   307                                  sf_default_number equ 5
   308                                  sf_entry_size equ 40	 	
   309                                  				
   310                                  
   311                                  ; *****	; Total uninitialized data (segment) size = 940 bytes ; *****
   312                                  ; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   313                                  
   314                                  ;PAGE
   315                                  ;        INCLUDE MSINIT.ASM
   316                                  
   317                                  
   318                                  ; ###########################################################################
   319                                  
   320                                  [BITS 16]
   321                                  [ORG 0]
   322                                  
   323                                  
   324                                  		;jmp	SYSBUF
   325 00000000 E95B40                  		jmp	DOSINIT
   326                                  
   327                                  ; ---------------------------------------------------------------------------
   328 00000003 03                      DEVSTRLEN	db 3			; DATA XREF: seg000:03D6w
   329                                  					; arena_next+2r ...
   330 00000004 44                      DEVSTRING	db  44h	; D
   331 00000005 45                      		db  45h	; E		; DATA XREF: SETMEM+37w
   332 00000006 56                      		db  56h	; V		; DATA XREF: SETMEM+2Aw
   333 00000007 FFFF                    SFTABL		dw 0FFFFh		; DATA XREF: seg000:SFT_ADDRo
   334                                  					; SETMEM+2Dw
   335 00000009 FFFF                    		dw 0FFFFh		; DATA XREF: seg000:33EAw
   336                                  
   337 0000000B 0500                    		dw sf_default_number	; Number of entries in table (=5)
   338                                  		
   339 0000000D 00<rept>                		times (sf_default_number*sf_entry_size) db 0  ; 5*40=200
   340                                  
   341 000000D5 00                      NoSetDir	db 0			; DATA XREF: STATCHK-2532w
   342                                  					; GETPATH:loc_1726r ...
   343 000000D6 00                      DidCTRLC	db 0			; DATA XREF: STATCHK+9Fw seg000:34CEw
   344 000000D7 00                      SpaceFlag	db 0			; DATA XREF: seg000:MAKEFCBw
   345                                  					; seg000:2E92r	...
   346 000000D8 00                      CARPOS		db 0			; DATA XREF: OUTT+8w OUTT+53r	...
   347 000000D9 00                      STARTPOS	db 0			; DATA XREF: $STD_CON_STRING_INPUT+23w
   348                                  					; $STD_CON_STRING_INPUT+B6r ...
   349 000000DA 00                      PFLAG		db 0			; DATA XREF: STATCHK:loc_2BE5w
   350                                  					; OUTT+26r
   351 000000DB 00                      VERFLG		db 0			; DATA XREF: seg000:$GET_VERIFY_ON_WRITEr
   352                                  					; seg000:0C71w	...
   353 000000DC 0000                    CONTPOS		dw 0			; DATA XREF: LOAD+E5w LOAD+101r
   354 000000DE 03                      CHARCO		db 3			; DATA XREF: OUTT+Fw OUTT+14w
   355 000000DF 80000000                DMAADD		dd 80h			; DATA XREF: seg000:09B8r
   356                                  					; seg000:$GET_DMAr ...
   357 000000E3 0000                    ENDMEM		dw 0			; DATA XREF: seg000:exit_typer
   358                                  					; seg000:4063w	...
   359 000000E5 2F                      switch_character db 2Fh			; DATA XREF: seg000:0D67r seg000:0D71w ...
   360 000000E6 FF                      device_availability db 0FFh		; DATA XREF: seg000:0D7Ar seg000:0D84w ...
   361 000000E7 0000                    FirstArena	dw 0			; DATA XREF: $ALLOC+4w
   362                                  					; $ALLOC:loc_1105r ...
   363 000000E9 0000                    BestArena	dw 0			; DATA XREF: $ALLOC+8w
   364                                  					; $ALLOC:loc_113Ar ...
   365 000000EB 0000                    LastArena	dw 0			; DATA XREF: $ALLOC+Cw
   366                                  					; $ALLOC:loc_1155w ...
   367 000000ED 00                      AllocMethod	db 0			; DATA XREF: $ALLOC:loc_1175r
   368                                  					; seg000:loc_1202r ...
   369 000000EE 0000                    arena_head	dw 0			; DATA XREF: seg000:CINSAVw
   370                                  					; arena_free_process+3r ...
   371                                  SYSINITVAR:
   372 000000F0 00000000                DPBHEAD		dd 0			; DATA XREF: seg000:0352r seg000:03E1o ...
   373 000000F4 [0700]                  SFT_ADDR	dw SFTABL		; DATA XREF: Find_free_sfn+2r
   374                                  					; get_sf_from_sfn+1r
   375 000000F6 0000                    		dw 0			; DATA XREF: seg000:035Bw seg000:4244w
   376 000000F8 00000000                BCLOCK		dd 0			; DATA XREF: seg000:2810r seg000:2824r ...
   377 000000FC 00000000                BCON		dd 0			; DATA XREF: DSKSTATCHK+25r
   378                                  					; RealDivOv+25r ...
   379 00000100 00                      NUMIO		db 0			; DATA XREF: seg000:CREATING_x2r
   380                                  					; seg000:$SET_DEFAULT_DRIVEr ...
   381 00000101 0000                    MAXSEC		dw 0			; DATA XREF: seg000:411Br seg000:4122w ...
   382 00000103 00000000                BUFFHEAD	dd 0			; DATA XREF: seg000:THISFCB_1w
   383                                  					; FATREAD+4Fr ...
   384 00000107 0000                    DEVHEAD		dw 0			; DATA XREF: DEVNAME+Ao seg000:407Ew
   385 00000109 0000                    		dw 0			; DATA XREF: seg000:4079w
   386 0000010B 0480                    		dw 8004h
   387 0000010D [2308]                  		dw SNULDEV
   388 0000010F [2E08]                  		dw INULDEV
   389 00000111 4E                      		db  4Eh	; N
   390 00000112 55                      		db  55h	; U
   391 00000113 4C                      		db  4Ch	; L
   392 00000114 20                      		db  20h
   393 00000115 20                      		db  20h
   394 00000116 20                      		db  20h
   395 00000117 20                      		db  20h
   396 00000118 20                      		db  20h
   397 00000119 00                      DAY		db 0			; DATA XREF: seg000:27A1r DATE16+20r ...
   398 0000011A 00                      MONTH		db 0			; DATA XREF: DATE16+16r READTIME+5Ew
   399 0000011B 0000                    YEAR		dw 0			; DATA XREF: seg000:279Er SETYEARw ...
   400 0000011D FFFF                    DAYCNT		dw 0FFFFh		; DATA XREF: READTIME+25r READTIME+30w ...
   401 0000011F 00                      WEEKDAY		db 0			; DATA XREF: seg000:27B1r seg000:3904w
   402 00000120 00                      CURDRV		db 0			; DATA XREF: seg000:$GET_DEFAULT_DRIVEr
   403                                  					; seg000:0D35w	...
   404 00000121 0000                    LASTENT		dw 0			; DATA XREF: seg000:0998r seg000:1040w ...
   405 00000123 00                      INDOS		db 0			; DATA XREF: STATCHK-256Dw
   406                                  					; seg000:06EAw	...
   407 00000124 00                      ERRORMODE	db 0			; DATA XREF: STATCHK:IOROUTr
   408                                  					; STATCHK:DSKROUTw ...
   409 00000125 FF                      WPERR		db 0FFh			; DATA XREF: STATCHK-2504w
   410                                  					; FLUSHBUF+24r	...
   411 00000126 00                      CONSWAP		db 0			; DATA XREF: STATCHK-253Bw
   412                                  					; SWAPBACK+41w	...
   413 00000127 01                      IDLEINT		db 1			; DATA XREF: STATCHK-2537w
   414                                  					; SWAPBACK+46w	...
   415 00000128 00                      CNTCFLAG	db 0			; DATA XREF: STATCHK-24FCr
   416                                  					; seg000:0C7Dr	...
   417 00000129 FFFF                    LASTBUFFER	dw 0FFFFh		; DATA XREF: seg000:0A82w GETBUFFRB+7r	...
   418 0000012B FFFF                    		dw 0FFFFh		; DATA XREF: seg000:0A7Cw GETBUFFRB+90w
   419 0000012D 00                      DEVCALL		db 0			; DATA XREF: SETREAD+9o SETREAD+2Fo ...
   420 0000012E 00                      DEVCALL_REQUNIT	db 0			; DATA XREF: CHARINIT+6w
   421 0000012F 00                      DEVCALL_REQFUNC	db 0			; DATA XREF: FATREAD+Fw FATREAD+B4w ...
   422 00000130 0000                    DEVCALL_REQSTAT	dw 0			; DATA XREF: LOAD+35r LOAD+82r ...
   423 00000132 00                      		db    0
   424 00000133 00                      		db    0
   425 00000134 00                      		db    0
   426 00000135 00                      		db    0
   427 00000136 00                      		db    0
   428 00000137 00                      		db    0
   429 00000138 00                      		db    0
   430 00000139 00                      		db    0
   431 0000013A 00                      CALLUNIT	db 0			; DATA XREF: FATREAD+1Ew FATREAD+C3w ...
   432 0000013B 00000000                CALLXAD		dd 0			; DATA XREF: LOAD:loc_1A51w STORE+D0w	...
   433 0000013F 00000000                CALLBPB		dd 0			; DATA XREF: SETXADDRw	RESTXADDRw ...
   434 00000143 00000000                CALLDEVAD	dd 0			; DATA XREF: DEVIOCALL2+3w
   435                                  					; DEVIOCALL2+Cr ...
   436 00000147 00                      IOCALL		db 0			; DATA XREF: IOFUNC:loc_126Aw
   437                                  					; $IOCTL+C3w
   438 00000148 00                      IOCALL_REQUNIT	db 0
   439 00000149 00                      IOCALL_REQFUNC	db 0			; DATA XREF: IOFUNC+5Aw $IOCTL+B3w ...
   440 0000014A 0000                    IOCALL_REQSTAT	dw 0			; DATA XREF: IOFUNC+2Aw IOFUNC+64r ...
   441 0000014C 00                      		db    0
   442 0000014D 00                      		db    0
   443 0000014E 00                      		db    0
   444 0000014F 00                      		db    0
   445 00000150 00                      		db    0
   446 00000151 00                      		db    0
   447 00000152 00                      		db    0
   448 00000153 00                      		db    0
   449 00000154 00                      IOMED		db 0			; DATA XREF: IOFUNC+2Ew IOFUNC+85r ...
   450 00000155 0000                    IOXAD		dw 0			; DATA XREF: IOFUNC+5w	SETXADDR+1Dr ...
   451 00000157 0000                    		dw    0			; DATA XREF: IOFUNCw SETXADDR+15r ...
   452 00000159 0000                    IOSCNT		dw 0			; DATA XREF: IOFUNC+Cw	SETXADDR+25r ...
   453 0000015B 0000                    IOSSEC		dw 0
   454 0000015D 0E                      DSKSTCALL	db 0Eh			; DATA XREF: DSKSTATCHK+19w
   455                                  					; DSKSTATCHK+43w ...
   456 0000015E 00                      		db 0
   457 0000015F 05                      DSKSTCOM	db 5			; DATA XREF: DSKSTATCHK+14w
   458                                  					; DSKSTATCHK+3Dw ...
   459 00000160 0000                    DSKSTST		dw 0			; DATA XREF: DSKSTATCHK+1Ew
   460                                  					; DSKSTATCHK+2Cr ...
   461 00000162 00                      		db    0
   462 00000163 00                      		db    0
   463 00000164 00                      		db    0
   464 00000165 00                      		db    0
   465 00000166 00                      		db    0
   466 00000167 00                      		db    0
   467 00000168 00                      		db    0
   468 00000169 00                      		db    0
   469 0000016A 00                      DSKCHRET	db 0			; DATA XREF: DSKSTATCHK+35r
   470                                  					; DSKSTATCHK+49w
   471 0000016B [3303]                  off_16B		dw DEVIOBUF		; DATA XREF: RealDivOv+21w
   472                                  					; RealDivOv+2Cw
   473 0000016D 0000                    		dw 0			; DATA XREF: seg000:41A1w
   474 0000016F 0100                    DSKSTCNT	dw 1			; DATA XREF: DSKSTATCHK+54w
   475                                  					; RealDivOv+1Aw ...
   476 00000171 0000                    		dw 0
   477 00000173 C8                      YRTAB		db 0C8h	; È
   478 00000174 A6                      		db 0A6h	; ¦
   479 00000175 C8                      		db 0C8h	; È
   480 00000176 A5                      		db 0A5h	; ¥
   481 00000177 C8                      		db 0C8h	; È
   482 00000178 A5                      		db 0A5h	; ¥
   483 00000179 C8                      		db 0C8h	; È
   484 0000017A A5                      		db 0A5h	; ¥
   485 0000017B 1F                      MONTAB		db  1Fh
   486 0000017C 1C                      MONTAB_february	db  1Ch			; DATA XREF: SETYEAR:loc_3883w
   487 0000017D 1F                      		db  1Fh
   488 0000017E 1E                      		db  1Eh
   489 0000017F 1F                      		db  1Fh
   490 00000180 1E                      		db  1Eh
   491 00000181 1F                      		db  1Fh
   492 00000182 1F                      		db  1Fh
   493 00000183 1E                      		db  1Eh
   494 00000184 1F                      		db  1Fh
   495 00000185 1E                      		db  1Eh
   496 00000186 1F                      		db  1Fh
   497 00000187 FFFFFFFF                OEM_HANDLER	dd 0FFFFFFFFh		; DATA XREF: STATCHK-23D2w
   498                                  					; STATCHK:DO_OEM_FUNCr ...
   499 0000018B 0000                    CurrentPDB	dw 0			; DATA XREF: seg000:NXTCLUSNUMr
   500                                  					; seg000:GROWCNT+2w ...
   501 0000018D 00                      CreatePDB	db 0			; DATA XREF: seg000:BYTCNT1w
   502                                  					; seg000:CURBUF+2w ...
   503 0000018E [EA06]                  LEAVEADDR	dw _LEAVE		; DATA XREF: STATCHK:DISPCALLr
   504 00000190 0D0A                    DIVMES		db 0Dh,0Ah		; DATA XREF: seg000:DIVOVo
   505 00000192 446976696465206F76-     		db 'Divide overflow',0Dh,0Ah
   506 0000019B 6572666C6F770D0A   
   507 000001A3 13                      DivMesLen	db 13h			; DATA XREF: RealDivOv+14r
   508 000001A4 [A801]                  Current_Country	dw USTABLE		; DATA XREF: seg000:0C1Fr
   509                                  					; seg000:loc_C64w ...
   510                                  international_table:
   511 000001A6 18                      		db  18h
   512 000001A7 01                      		db    1
   513 000001A8 0000                    USTABLE		dw 0			; DATA XREF: seg000:Current_Countryo
   514 000001AA 24                      Currency_sym	db  24h	; $
   515 000001AB 00                      		db    0
   516 000001AC 00                      		db    0
   517 000001AD 00                      		db    0
   518 000001AE 00                      		db    0
   519 000001AF 2C                      Thous_sep	db  2Ch	; ,
   520 000001B0 00                      		db    0
   521 000001B1 2E                      Decimal_sep	db  2Eh	; .
   522 000001B2 00                      		db    0
   523 000001B3 2D                      Date_sep	db  2Dh	; -
   524 000001B4 00                      		db    0
   525 000001B5 3A                      Time_sep	db  3Ah	; :
   526 000001B6 00                      		db    0
   527 000001B7 00                      Bit_field	db    0
   528 000001B8 02                      Currency_cents	db    2
   529 000001B9 00                      Time_24		db    0
   530 000001BA [B908]                  Map_call	dw MAP_DCASE
   531 000001BC 0000                    		dw 0
   532 000001BE 2C                      Data_sep	db  2Ch	; ,
   533 000001BF 00                      		db    0
   534 000001C0 18                      		db  18h
   535 000001C1 2C                      		db  2Ch	; ,
   536 000001C2 0100                    UKTABLE		dw 1
   537 000001C4 9C                      		db  9Ch	; 
   538 000001C5 00                      		db    0
   539 000001C6 00                      		db    0
   540 000001C7 00                      		db    0
   541 000001C8 00                      		db    0
   542 000001C9 2C                      		db  2Ch	; ,
   543 000001CA 00                      		db    0
   544 000001CB 2E                      		db  2Eh	; .
   545 000001CC 00                      		db    0
   546 000001CD 2D                      		db  2Dh	; -
   547 000001CE 00                      		db    0
   548 000001CF 3A                      		db  3Ah	; :
   549 000001D0 00                      		db    0
   550 000001D1 00                      		db    0
   551 000001D2 02                      		db    2
   552 000001D3 00                      		db    0
   553 000001D4 [B908]                  		dw MAP_DCASE
   554 000001D6 00                      		db    0
   555 000001D7 00                      		db    0
   556 000001D8 2C                      		db  2Ch	; ,
   557 000001D9 00                      		db    0
   558 000001DA 18                      		db  18h
   559 000001DB 31                      		db  31h	; 1
   560 000001DC 0100                    GRMTABLE	dw 1
   561 000001DE 44                      		db  44h	; D
   562 000001DF 4D                      		db  4Dh	; M
   563 000001E0 00                      		db    0
   564 000001E1 00                      		db    0
   565 000001E2 00                      		db    0
   566 000001E3 2E                      		db  2Eh	; .
   567 000001E4 00                      		db    0
   568 000001E5 2C                      		db  2Ch	; ,
   569 000001E6 00                      		db    0
   570 000001E7 2E                      		db  2Eh	; .
   571 000001E8 00                      		db    0
   572 000001E9 2E                      		db  2Eh	; .
   573 000001EA 00                      		db    0
   574 000001EB 03                      		db    3
   575 000001EC 02                      		db    2
   576 000001ED 01                      		db    1
   577 000001EE [B908]                  		dw MAP_DCASE
   578 000001F0 00                      		db    0
   579 000001F1 00                      		db    0
   580 000001F2 3B                      		db  3Bh	; ;
   581 000001F3 00                      		db    0
   582 000001F4 18                      		db  18h
   583 000001F5 21                      		db  21h	; !
   584 000001F6 0100                    FRNTABLE	dw 1
   585 000001F8 46                      		db  46h	; F
   586 000001F9 00                      		db    0
   587 000001FA 00                      		db    0
   588 000001FB 00                      		db    0
   589 000001FC 00                      		db    0
   590 000001FD 20                      		db  20h
   591 000001FE 00                      		db    0
   592 000001FF 2C                      		db  2Ch	; ,
   593 00000200 00                      		db    0
   594 00000201 2F                      		db  2Fh	; /
   595 00000202 00                      		db    0
   596 00000203 3A                      		db  3Ah	; :
   597 00000204 00                      		db    0
   598 00000205 03                      		db    3
   599 00000206 02                      		db    2
   600 00000207 01                      		db    1
   601 00000208 [B908]                  		dw MAP_DCASE
   602 0000020A 00                      		db    0
   603 0000020B 00                      		db    0
   604 0000020C 3B                      		db  3Bh	; ;
   605 0000020D 00                      		db    0
   606 0000020E 18                      		db  18h
   607 0000020F 51                      		db  51h	; Q
   608 00000210 0200                    JAPTABLE	dw 2
   609 00000212 9D                      		db  9Dh	; 
   610 00000213 00                      		db    0
   611 00000214 00                      		db    0
   612 00000215 00                      		db    0
   613 00000216 00                      		db    0
   614 00000217 2C                      		db  2Ch	; ,
   615 00000218 00                      		db    0
   616 00000219 2E                      		db  2Eh	; .
   617 0000021A 00                      		db    0
   618 0000021B 2D                      		db  2Dh	; -
   619 0000021C 00                      		db    0
   620 0000021D 3A                      		db  3Ah	; :
   621 0000021E 00                      		db    0
   622 0000021F 00                      		db    0
   623 00000220 00                      		db    0
   624 00000221 01                      		db    1
   625 00000222 [B908]                  		dw MAP_DCASE
   626 00000224 00                      		db    0
   627 00000225 00                      		db    0
   628 00000226 2C                      		db  2Ch	; ,
   629 00000227 00                      		db    0
   630 00000228 FF                      		db 0FFh
   631 00000229 00                      		db    0
   632                                  
   633                                  ;align 2
   634                                  
   635                                  DATASEGMENT equ $
   636                                  
   637 0000022A 00<rept>                INITBLOCK	times 272 db 0		; DATA XREF: seg000:4215o
   638                                  
   639 0000033A 0000                    INITSP		dw 0			; DATA XREF: seg000:MOVDPBr
   640                                  					; seg000:4068w
   641 0000033C 0000                    INITSS		dw 0			; DATA XREF: seg000:ATTRIBr
   642                                  					; seg000:406Dw
   643 0000033E 0000                    BUFFSTRT	dw 0			; DATA XREF: seg000:PREREADr
   644                                  					; seg000:4151w
   645                                  ; ---------------------------------------------------------------------------
   646                                  
   647                                  MOVDPB:					; CODE XREF: seg000:426Bj
   648 00000340 2E8B26[3A03]            		mov	sp, [cs:INITSP]
   649 00000345 2E8E16[3C03]            		mov	ss, [cs:INITSS]
   650 0000034A F3A4                    		rep movsb
   651 0000034C FC                      		cld
   652 0000034D 268916[E100]            		mov	word [es:DMAADD+2], dx
   653 00000352 8B36[F000]              		mov	si, word [DPBHEAD]
   654 00000356 268C06[F200]            		mov	word [es:DPBHEAD+2], es
   655 0000035B 268C06[F600]            		mov	[es:SFT_ADDR+2], es
   656 00000360 8A0E[0001]              		mov	cl, [NUMIO]
   657 00000364 30ED                    		xor	ch, ch
   658                                  SETFINDPB:
   659 00000366 268C441A                		mov	word [es:si+1Ah], es
   660 0000036A 26C64417FF              		mov	byte [es:si+17h], -1
   661 0000036F 83C65E                  		add	si, 94
   662 00000372 E2F2                    		loop	SETFINDPB
   663 00000374 83EE5E                  		sub	si, 94
   664 00000377 26C7441AFFFF            		mov	word [es:si+1Ah], -1
   665 0000037D 8B3E[3E03]              		mov	di, [BUFFSTRT]
   666 00000381 268C06[0501]            		mov	word [es:BUFFHEAD+2], es
   667 00000386 26893E[0301]            		mov	word [es:BUFFHEAD], di
   668 0000038B 26C74504FF00            		mov	word [es:di+4], 0FFh
   669 00000391 26C6450600              		mov	byte [es:di+6], 0
   670 00000396 26C705FFFF              		mov	word [es:di], -1
   671 0000039B 26C74502FFFF            		mov	word [es:di+2], -1
   672 000003A1 06                      		push	es
   673 000003A2 42                      		inc	dx
   674 000003A3 C606[8D01]FF            		mov	byte [CreatePDB], 0FFh
   675 000003A8 E89707                  		call	_$CREATE_PROCESS_DATA_BLOCK
   676 000003AB 07                      		pop	es
   677 000003AC 50                      		push	ax
   678 000003AD 2EA1[8B01]              		mov	ax, [cs:CurrentPDB]
   679 000003B1 26A3[8B01]              		mov	[es:CurrentPDB], ax
   680 000003B5 26C606[8D01]00          		mov	byte [es:CreatePDB], 0
   681 000003BB 48                      		dec	ax
   682 000003BC 26A3[EE00]              		mov	[es:arena_head], ax
   683 000003C0 1E                      		push	ds
   684 000003C1 8ED8                    		mov	ds, ax
   685 000003C3 C60600005A              		mov	byte [0], 5Ah ; 'Z'
   686 000003C8 C70601000000            		mov	word [1], 0
   687 000003CE 262B06[E300]            		sub	ax, [es:ENDMEM]
   688 000003D3 F7D8                    		neg	ax
   689 000003D5 48                      		dec	ax
   690 000003D6 A30300                  		mov	word [3], ax
   691 000003D9 1F                      		pop	ds
   692 000003DA 58                      		pop	ax
   693 000003DB BF0D00                  		mov	di, 0Dh
   694 000003DE B003                    		mov	al, 3
   695 000003E0 AA                      		stosb
   696 000003E1 BF[F000]                		mov	di, DPBHEAD	; SYSINITVAR
   697 000003E4 CB                      		retf
   698                                  
   699                                  FILL1	equ	$ - DATASEGMENT
   700                                  
   701                                  ; ---------------------------------------------------------------------------
   702 000003E5 00<rept>                		times (940-FILL1) db 0
   703                                  
   704                                  ; ---------------------------------------------------------------------------
   705 000005D6 0D0A                    HEADER		db 0Dh,0Ah		; DATA XREF: seg000:4248o
   706 000005D8 4D6963726F736F6674-     		db 'Microsoft MS-DOS version 2.11',0Dh,0Ah
   707 000005E1 204D532D444F532076-
   708 000005EA 657273696F6E20322E-
   709 000005F3 31310D0A           
   710 000005F7 436F70797269676874-     		db 'Copyright 1981,82,83 Microsoft Corp.',0Dh,0Ah,'$'
   711 00000600 20313938312C38322C-
   712 00000609 3833204D6963726F73-
   713 00000612 6F667420436F72702E-
   714 0000061B 0D0A24             
   715                                  ; ---------------------------------------------------------------------------
   716                                  
   717                                  QUIT:					; DATA XREF: seg000:41CDo
   718 0000061E B400                    		mov	ah, 0
   719 00000620 EB28                    		jmp	short SAVREGS
   720                                  ; ---------------------------------------------------------------------------
   721                                  ; START	OF FUNCTION CHUNK FOR STATCHK
   722                                  
   723                                  COMMAND:				; CODE XREF: STATCHK:loc_2C53j
   724                                  					; seg000:34C9j
   725                                  					; DATA XREF: ...
   726 00000622 80FCF8                  		cmp	ah, 0F8h ; 'ø'
   727 00000625 7203                    		jb	short NOTOEM
   728 00000627 E9CA01                  		jmp	_$SET_OEM_HANDLER
   729                                  ; ---------------------------------------------------------------------------
   730                                  
   731                                  NOTOEM:					; CODE XREF: STATCHK-25A3j
   732 0000062A 80FC58                  		cmp	ah, 58h	; 'X'
   733 0000062D 90                      		nop
   734 0000062E 761A                    		jbe	short SAVREGS
   735                                  
   736                                  BADCALL:				; CODE XREF: seg000:0645j
   737                                  					; STATCHK-23BFj
   738 00000630 B000                    		mov	al, 0
   739                                  
   740                                  _IRET:					; DATA XREF: seg000:41E3o seg000:41E9o ...
   741 00000632 CF                      		iret
   742                                  ; END OF FUNCTION CHUNK	FOR STATCHK
   743                                  ; ---------------------------------------------------------------------------
   744                                  
   745                                  CALL_ENTRY:				; DATA XREF: seg000:41B6o
   746 00000633 58                      		pop	ax
   747 00000634 58                      		pop	ax
   748 00000635 2E8F06[6503]            		pop	word [cs:user_SP]
   749 0000063A 9C                      		pushf
   750 0000063B FA                      		cli
   751 0000063C 50                      		push	ax
   752 0000063D 2EFF36[6503]            		push	word [cs:user_SP]
   753 00000642 80F924                  		cmp	cl, 36
   754 00000645 90                      		nop
   755 00000646 77E8                    		ja	short BADCALL
   756 00000648 88CC                    		mov	ah, cl
   757                                  ; START	OF FUNCTION CHUNK FOR STATCHK
   758                                  
   759                                  SAVREGS:				; CODE XREF: seg000:061Fj
   760                                  					; STATCHK-259Aj
   761 0000064A E8DC00                  		call	save_world
   762 0000064D 2E8C1E[C803]            		mov	[cs:SaveDS], ds
   763 00000652 2E891E[C603]            		mov	[cs:SaveBX], bx
   764 00000657 8CCB                    		mov	bx, cs
   765 00000659 8EDB                    		mov	ds, bx
   766 0000065B FE06[2301]              		inc	byte [INDOS]
   767 0000065F A1[6503]                		mov	ax, [user_SP]
   768 00000662 A3[B205]                		mov	[NSP], ax
   769 00000665 A1[6703]                		mov	ax, [user_SS]
   770 00000668 A3[B005]                		mov	[NSS], ax
   771 0000066B 58                      		pop	ax
   772 0000066C 50                      		push	ax
   773 0000066D 8926[6503]              		mov	[user_SP], sp
   774 00000671 8C16[6703]              		mov	[user_SS], ss
   775 00000675 8E1E[8B01]              		mov	ds, [CurrentPDB]
   776 00000679 89262E00                		mov	[2Eh], sp
   777 0000067D 8C163000                		mov	[30h], ss
   778 00000681 8CCB                    		mov	bx, cs
   779 00000683 8ED3                    		mov	ss, bx
   780                                  
   781                                  REDISP:					; CODE XREF: seg000:37D4j
   782 00000685 BC[7004]                		mov	sp, AUXSTACK
   783 00000688 FB                      		sti
   784 00000689 0E                      		push	cs
   785 0000068A 1F                      		pop	ds
   786 0000068B 30FF                    		xor	bh, bh
   787 0000068D 883E[2601]              		mov	[CONSWAP], bh
   788 00000691 C606[2701]01            		mov	byte [IDLEINT], 1
   789 00000696 C606[D500]00            		mov	byte [NoSetDir], 0
   790 0000069B 88E3                    		mov	bl, ah
   791 0000069D D1E3                    		shl	bx, 1
   792 0000069F FC                      		cld
   793 000006A0 08E4                    		or	ah, ah
   794 000006A2 741B                    		jz	short DSKROUT
   795 000006A4 80FC0C                  		cmp	ah, 0Ch
   796 000006A7 760A                    		jbe	short IOROUT
   797 000006A9 80FC51                  		cmp	ah, 51h	; 'Q'
   798 000006AC 7405                    		jz	short IOROUT
   799 000006AE 80FC50                  		cmp	ah, 50h	; 'P'
   800 000006B1 750C                    		jnz	short DSKROUT
   801                                  
   802                                  IOROUT:					; CODE XREF: STATCHK-2521j
   803                                  					; STATCHK-251Cj
   804 000006B3 803E[2401]00            		cmp	byte [ERRORMODE], 0
   805 000006B8 751E                    		jnz	short DISPCALL
   806 000006BA BC[B005]                		mov	sp, NSS
   807 000006BD EB19                    		jmp	short DISPCALL
   808                                  ; ---------------------------------------------------------------------------
   809                                  
   810                                  DSKROUT:				; CODE XREF: STATCHK-2526j
   811                                  					; STATCHK-2517j
   812 000006BF C606[2401]00            		mov	byte [ERRORMODE], 0
   813 000006C4 C606[2501]FF            		mov	byte [WPERR], -1
   814 000006C9 BC[1005]                		mov	sp, DSKSTACK
   815 000006CC F606[2801]FF            		test	byte [CNTCFLAG], -1
   816 000006D1 7405                    		jz	short DISPCALL
   817 000006D3 50                      		push	ax
   818 000006D4 E86424                  		call	DSKSTATCHK
   819 000006D7 58                      		pop	ax
   820                                  
   821                                  DISPCALL:				; CODE XREF: STATCHK-2510j
   822                                  					; STATCHK-250Bj ...
   823 000006D8 FF36[8E01]              		push	word [LEAVEADDR]
   824 000006DC 2EFFB7[3F07]            		push	word [cs:bx+DISPATCH]
   825 000006E1 8B1E[C603]              		mov	bx, [SaveBX]
   826 000006E5 8E1E[C803]              		mov	ds, [SaveDS]
   827 000006E9 C3                      		retn
   828                                  ; END OF FUNCTION CHUNK	FOR STATCHK
   829                                  ; ---------------------------------------------------------------------------
   830                                  
   831                                  _LEAVE:					; DATA XREF: seg000:LEAVEADDRo
   832 000006EA FA                      		cli
   833 000006EB 2EFE0E[2301]            		dec	byte [cs:INDOS]
   834 000006F0 2E8B26[6503]            		mov	sp, [cs:user_SP]
   835 000006F5 2E8E16[6703]            		mov	ss, [cs:user_SS]
   836 000006FA 89E5                    		mov	bp, sp
   837 000006FC 884600                  		mov	[bp], al
   838 000006FF 2EA1[B205]              		mov	ax, word [cs:NSP]
   839 00000703 2EA3[6503]              		mov	word [cs:user_SP], ax
   840 00000707 2EA1[B005]              		mov	ax, word [cs:NSS]
   841 0000070B 2EA3[6703]              		mov	word [cs:user_SS], ax
   842 0000070F E80300                  		call	restore_world
   843 00000712 CF                      		iret
   844                                  ; ---------------------------------------------------------------------------
   845 00000713 0000                    restore_tmp	dw 0			; DATA XREF: seg000:restore_worldw
   846                                  					; seg000:world_retr ...
   847                                  ; ---------------------------------------------------------------------------
   848                                  
   849                                  restore_world:				; CODE XREF: seg000:070Ep
   850                                  					; IOFUNC:IOFUNC_RETRYp	...
   851 00000715 2E8F06[1307]            		pop	word [cs:restore_tmp]
   852 0000071A 58                      		pop	ax
   853 0000071B 5B                      		pop	bx
   854 0000071C 59                      		pop	cx
   855 0000071D 5A                      		pop	dx
   856 0000071E 5E                      		pop	si
   857 0000071F 5F                      		pop	di
   858 00000720 5D                      		pop	bp
   859 00000721 1F                      		pop	ds
   860 00000722 07                      		pop	es
   861                                  
   862                                  world_ret:				; CODE XREF: seg000:0736j
   863 00000723 2EFF36[1307]            		push	word [cs:restore_tmp]
   864 00000728 C3                      		retn
   865                                  ; ---------------------------------------------------------------------------
   866                                  
   867                                  save_world:				; CODE XREF: STATCHK:SAVREGSp
   868                                  					; IOFUNC:loc_1234p ...
   869 00000729 2E8F06[1307]            		pop	word [cs:restore_tmp]
   870 0000072E 06                      		push	es
   871 0000072F 1E                      		push	ds
   872 00000730 55                      		push	bp
   873 00000731 57                      		push	di
   874 00000732 56                      		push	si
   875 00000733 52                      		push	dx
   876 00000734 51                      		push	cx
   877 00000735 53                      		push	bx
   878 00000736 50                      		push	ax
   879 00000737 EBEA                    		jmp	short world_ret
   880                                  
   881                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
   882                                  
   883                                  get_user_stack:				; CODE XREF: seg000:$GET_CURRENT_PDBp
   884                                  					; $CLOSE:SYS_RET_OKp ...
   885 00000739 2EC536[6503]            		lds	si, [cs:user_SP]
   886 0000073E C3                      		retn
   887                                  
   888                                  ; ---------------------------------------------------------------------------
   889 0000073F [6509]                  DISPATCH	dw _$ABORT		; DATA XREF: STATCHK-24ECr
   890 00000741 [F234]                  		dw _$STD_CON_INPUT
   891 00000743 [FB34]                  		dw _$STD_CON_OUTPUT
   892 00000745 [8E35]                  		dw _$STD_AUX_INPUT
   893 00000747 [AB35]                  		dw _$STD_AUX_OUTPUT
   894 00000749 [B135]                  		dw _$STD_PRINTER_OUTPUT
   895 0000074B [A50A]                  		dw _$RAW_CON_IO
   896 0000074D [D10A]                  		dw _$RAW_CON_INPUT
   897 0000074F [C535]                  		dw _$STD_CON_INPUT_NO_ECHO
   898 00000751 [D435]                  		dw _$STD_CON_STRING_OUTPUT
   899 00000753 [E035]                  		dw _$STD_CON_STRING_INPUT
   900 00000755 [A137]                  		dw _$STD_CON_INPUT_STATUS
   901 00000757 [AB37]                  		dw _$STD_CON_INPUT_FLUSH
   902 00000759 [770A]                  		dw _$DISK_RESET
   903 0000075B [2F0D]                  		dw _$SET_DEFAULT_DRIVE
   904 0000075D [A929]                  		dw _$FCB_OPEN
   905 0000075F [0F2A]                  		dw _$FCB_CLOSE
   906 00000761 [8F09]                  		dw _$DIR_SEARCH_FIRST
   907 00000763 [F009]                  		dw _$DIR_SEARCH_NEXT
   908 00000765 [9F28]                  		dw _$FCB_DELETE
   909 00000767 [2F28]                  		dw _$FCB_SEQ_READ
   910 00000769 [3728]                  		dw _$FCB_SEQ_WRITE
   911 0000076B [812A]                  		dw _$FCB_CREATE
   912 0000076D [1D29]                  		dw _$FCB_RENAME
   913 0000076F [F107]                  		dw CPMFUNC
   914 00000771 [2A0D]                  		dw _$GET_DEFAULT_DRIVE
   915 00000773 [020D]                  		dw _$SET_DMA
   916 00000775 [3309]                  		dw _$SLEAZEFUNC
   917 00000777 [3509]                  		dw _$SLEAZEFUNCDL
   918 00000779 [F107]                  		dw CPMFUNC
   919 0000077B [F107]                  		dw CPMFUNC
   920 0000077D [0D0D]                  		dw _$GET_DEFAULT_DPB
   921 0000077F [F107]                  		dw CPMFUNC
   922 00000781 [4728]                  		dw _$FCB_RANDOM_READ
   923 00000783 [4F28]                  		dw _$FCB_RANDOM_WRITE
   924 00000785 [260A]                  		dw _$GET_FCB_FILE_LENGTH
   925 00000787 [640A]                  		dw _$GET_FCB_POSITION
   926 00000789 [4D0D]                  		dw _$SET_INTERRUPT_VECTOR
   927 0000078B [420B]                  		dw _$CREATE_PROCESS_DATA_BLOCK
   928 0000078D [5728]                  		dw _$FCB_RANDOM_READ_BLOCK
   929 0000078F [5F28]                  		dw _$FCB_RANDOM_WRITE_BLOCK
   930 00000791 [310B]                  		dw _$PARSE_FILE_DESCRIPTOR
   931 00000793 [9A27]                  		dw _$GET_DATE
   932 00000795 [B727]                  		dw _$SET_DATE
   933 00000797 [D727]                  		dw _$GET_TIME
   934 00000799 [E827]                  		dw _$SET_TIME
   935 0000079B [710C]                  		dw _$SET_VERIFY_ON_WRITE
   936 0000079D [EE0C]                  		dw _$GET_DMA
   937 0000079F [F70B]                  		dw _$GET_VERSION
   938 000007A1 [9734]                  		dw _$KEEP_PROCESS
   939 000007A3 [0F0D]                  		dw _$GET_DPB
   940 000007A5 [780C]                  		dw _$SET_CTRL_C_TRAPPING
   941 000007A7 [970C]                  		dw _$GET_INDOS_FLAG
   942 000007A9 [3D0D]                  		dw _$GET_INTERRUPT_VECTOR
   943 000007AB [AF0C]                  		dw _$GET_DRIVE_FREESPACE
   944 000007AD [630D]                  		dw _$CHAR_OPER
   945 000007AF [100C]                  		dw _$INTERNATIONAL
   946 000007B1 [FE0D]                  		dw _$MKDIR
   947 000007B3 [CE0F]                  		dw _$RMDIR
   948 000007B5 [AE0E]                  		dw _$CHDIR
   949 000007B7 [E33A]                  		dw _$CREAT
   950 000007B9 [CF39]                  		dw _$OPEN
   951 000007BB [F23D]                  		dw _$CLOSE
   952 000007BD [913E]                  		dw _$READ
   953 000007BF [BE3E]                  		dw _$WRITE
   954 000007C1 [AC3A]                  		dw _$UNLINK
   955 000007C3 [E73E]                  		dw _$LSEEK
   956 000007C5 [603B]                  		dw _$CHMOD
   957 000007C7 [393F]                  		dw _$IOCTL
   958 000007C9 [233B]                  		dw _$DUP
   959 000007CB [4A3B]                  		dw _$DUP2
   960 000007CD [AE3B]                  		dw _$CURRENT_DIR
   961 000007CF [D510]                  		dw _$ALLOC
   962 000007D1 [E311]                  		dw _$DEALLOC
   963 000007D3 [C211]                  		dw _$SETBLOCK
   964 000007D5 [3E30]                  		dw _$EXEC
   965 000007D7 [CD34]                  		dw _$EXIT
   966 000007D9 [F82F]                  		dw _$WAIT
   967 000007DB [AB3C]                  		dw _$FIND_FIRST
   968 000007DD [5B3D]                  		dw _$FIND_NEXT
   969 000007DF [1108]                  		dw _$SET_CURRENT_PDB
   970 000007E1 [1708]                  		dw _$GET_CURRENT_PDB
   971 000007E3 [A30C]                  		dw _$GET_IN_VARS
   972 000007E5 [950D]                  		dw _$SETDPB
   973 000007E7 [6C0C]                  		dw _$GET_VERIFY_ON_WRITE
   974 000007E9 [3C0B]                  		dw _$DUP_PDB
   975 000007EB [F93B]                  		dw _$RENAME
   976 000007ED [2540]                  		dw _$FILE_TIMES
   977 000007EF [FA11]                  		dw _$ALLOCOPER
   978                                  ; ---------------------------------------------------------------------------
   979                                  
   980                                  CPMFUNC:				; DATA XREF: seg000:076Eo seg000:0778o ...
   981 000007F1 30C0                    		xor	al, al
   982 000007F3 C3                      		retn
   983                                  ; ---------------------------------------------------------------------------
   984                                  ; START	OF FUNCTION CHUNK FOR STATCHK
   985                                  
   986                                  _$SET_OEM_HANDLER:			; CODE XREF: STATCHK-25A1j
   987 000007F4 750B                    		jnz	short DO_OEM_FUNC
   988 000007F6 2E8916[8701]            		mov	word [cs:OEM_HANDLER], dx
   989 000007FB 2E8C1E[8901]            		mov	word [cs:OEM_HANDLER+2], ds
   990 00000800 CF                      		iret
   991                                  ; ---------------------------------------------------------------------------
   992                                  
   993                                  DO_OEM_FUNC:				; CODE XREF: STATCHK:_$SET_OEM_HANDLERj
   994 00000801 2E833E[8701]FF          		cmp	word [cs:OEM_HANDLER], 0FFFFh
   995 00000807 7503                    		jnz	short OEM_JMP
   996 00000809 E924FE                  		jmp	BADCALL
   997                                  ; ---------------------------------------------------------------------------
   998                                  
   999                                  OEM_JMP:				; CODE XREF: STATCHK-23C1j
  1000 0000080C 2EFF2E[8701]            		jmp	far [cs:OEM_HANDLER]
  1001                                  ; END OF FUNCTION CHUNK	FOR STATCHK
  1002                                  ; ---------------------------------------------------------------------------
  1003                                  
  1004                                  _$SET_CURRENT_PDB:			; DATA XREF: seg000:07DEo
  1005 00000811 2E891E[8B01]            		mov	[cs:CurrentPDB], bx
  1006 00000816 C3                      		retn
  1007                                  ; ---------------------------------------------------------------------------
  1008                                  
  1009                                  _$GET_CURRENT_PDB:			; DATA XREF: seg000:07E0o
  1010 00000817 E81FFF                  		call	get_user_stack
  1011 0000081A 2EFF36[8B01]            		push	word [cs:CurrentPDB]
  1012 0000081F 8F4402                  		pop	word [si+2]
  1013 00000822 C3                      		retn
  1014                                  ; ---------------------------------------------------------------------------
  1015                                  
  1016                                  SNULDEV:				; DATA XREF: seg000:010Do
  1017 00000823 2E891E[B803]            		mov	[cs:NULLDEVPT], bx
  1018 00000828 2E8C06[BA03]            		mov	[cs:NULLDEVPT+2], es
  1019 0000082D CB                      		retf
  1020                                  ; ---------------------------------------------------------------------------
  1021                                  
  1022                                  INULDEV:				; DATA XREF: seg000:010Fo
  1023 0000082E 06                      		push	es
  1024 0000082F 53                      		push	bx
  1025 00000830 2EC41E[B803]            		les	bx, [cs:NULLDEVPT]
  1026 00000835 26814F030001            		or	word [es:bx+3], 100h
  1027 0000083B 5B                      		pop	bx
  1028 0000083C 07                      		pop	es
  1029 0000083D CB                      		retf
  1030                                  ; ---------------------------------------------------------------------------
  1031                                  
  1032                                  ABSDRD:					; DATA XREF: seg000:41EFo
  1033 0000083E FA                      		cli
  1034 0000083F 2E8C16[6703]            		mov	[cs:user_SS], ss
  1035 00000844 2E8926[6503]            		mov	[cs:user_SP], sp
  1036 00000849 0E                      		push	cs
  1037 0000084A 17                      		pop	ss
  1038 0000084B BC[1005]                		mov	sp, DSKSTACK
  1039 0000084E 36FE06[2301]            		inc	byte [ss:INDOS]
  1040 00000853 FB                      		sti
  1041 00000854 FC                      		cld
  1042 00000855 06                      		push	es
  1043 00000856 1E                      		push	ds
  1044 00000857 16                      		push	ss
  1045 00000858 1F                      		pop	ds
  1046 00000859 E8510B                  		call	GETBP
  1047 0000085C 1F                      		pop	ds
  1048 0000085D 7206                    		jb	short ILEAVE
  1049 0000085F E80914                  		call	DSKREAD
  1050                                  
  1051                                  TLEAVE:				; CODE XREF: seg000:089Bj
  1052 00000862 7401                    		jz	short ILEAVE
  1053 00000864 F9                      		stc
  1054                                  
  1055                                  ILEAVE:				; CODE XREF: seg000:085Cj
  1056                                  					; seg000:TLEAVEj ...
  1057 00000865 07                      		pop	es
  1058 00000866 FA                      		cli
  1059 00000867 36FE0E[2301]            		dec	byte [ss:INDOS]
  1060 0000086C 368B26[6503]            		mov	sp, [ss:user_SP]
  1061 00000871 368E16[6703]            		mov	ss, [ss:user_SS]
  1062 00000876 FB                      		sti
  1063 00000877 CB                      		retf
  1064                                  ; ---------------------------------------------------------------------------
  1065                                  
  1066                                  ABSDWRT:				; DATA XREF: seg000:41F5o
  1067 00000878 FA                      		cli
  1068 00000879 2E8C16[6703]            		mov	[cs:user_SS], ss
  1069 0000087E 2E8926[6503]            		mov	[cs:user_SP], sp
  1070 00000883 0E                      		push	cs
  1071 00000884 17                      		pop	ss
  1072 00000885 BC[1005]                		mov	sp, DSKSTACK
  1073 00000888 36FE06[2301]            		inc	byte [ss:INDOS]
  1074 0000088D FB                      		sti
  1075 0000088E FC                      		cld
  1076 0000088F 06                      		push	es
  1077 00000890 1E                      		push	ds
  1078 00000891 16                      		push	ss
  1079 00000892 1F                      		pop	ds
  1080 00000893 E8170B                  		call	GETBP
  1081 00000896 1F                      		pop	ds
  1082 00000897 72CC                    		jb	short ILEAVE
  1083 00000899 E8F313                  		call	DSKWRITE
  1084 0000089C EBC4                    		jmp	short TLEAVE
  1085                                  ; ---------------------------------------------------------------------------
  1086                                  ; START	OF FUNCTION CHUNK FOR $CLOSE
  1087                                  
  1088                                  SYS_RET_OK:				; CODE XREF: seg000:0C58j
  1089                                  					; seg000:loc_E89j ...
  1090 0000089E E898FE                  		call	get_user_stack
  1091 000008A1 FF7416                  		push	word [si+16h]
  1092 000008A4 9D                      		popf
  1093 000008A5 F8                      		clc
  1094 000008A6 EB0A                    		jmp	short DO_RET
  1095                                  ; ---------------------------------------------------------------------------
  1096                                  
  1097                                  SYS_RET_ERR:				; CODE XREF: seg000:loc_C31j
  1098                                  					; seg000:MKNERRj ...
  1099 000008A8 30E4                    		xor	ah, ah
  1100 000008AA E88CFE                  		call	get_user_stack
  1101 000008AD FF7416                  		push	word [si+16h]
  1102 000008B0 9D                      		popf
  1103 000008B1 F9                      		stc
  1104                                  
  1105                                  DO_RET:					; CODE XREF: $CLOSE-354Fj
  1106 000008B2 8904                    		mov	[si], ax
  1107 000008B4 9C                      		pushf
  1108 000008B5 8F4416                  		pop	word [si+16h]
  1109 000008B8 C3                      		retn
  1110                                  ; END OF FUNCTION CHUNK	FOR $CLOSE
  1111                                  ; ---------------------------------------------------------------------------
  1112                                  
  1113                                  MAP_DCASE:				; DATA XREF: seg000:Map_callo
  1114                                  					; seg000:01D4o	...
  1115 000008B9 3C80                    		cmp	al, 80h	; ''
  1116 000008BB 7210                    		jb	short L_RET
  1117 000008BD 3CA7                    		cmp	al, 0A7h ; '§'
  1118 000008BF 770C                    		ja	short L_RET
  1119 000008C1 2C80                    		sub	al, 80h	; ''
  1120 000008C3 1E                      		push	ds
  1121 000008C4 53                      		push	bx
  1122 000008C5 0E                      		push	cs
  1123 000008C6 1F                      		pop	ds
  1124 000008C7 BB[CE08]                		mov	bx, _TABLE
  1125 000008CA D7                      		xlat
  1126 000008CB 5B                      		pop	bx
  1127 000008CC 1F                      		pop	ds
  1128                                  
  1129                                  L_RET:					; CODE XREF: seg000:08BAj seg000:08BEj
  1130 000008CD CB                      		retf
  1131                                  ; ---------------------------------------------------------------------------
  1132 000008CE 80                      _TABLE		db  80h	; 		; DATA XREF: seg000:08C6o
  1133 000008CF 9A                      		db  9Ah	; 
  1134 000008D0 45                      		db  45h	; E
  1135 000008D1 41                      		db  41h	; A
  1136 000008D2 8E                      		db  8Eh	; 
  1137 000008D3 41                      		db  41h	; A
  1138 000008D4 8F                      		db  8Fh	; 
  1139 000008D5 80                      		db  80h	; 
  1140 000008D6 45                      		db  45h	; E
  1141 000008D7 45                      		db  45h	; E
  1142 000008D8 45                      		db  45h	; E
  1143 000008D9 49                      		db  49h	; I
  1144 000008DA 49                      		db  49h	; I
  1145 000008DB 49                      		db  49h	; I
  1146 000008DC 8E                      		db  8Eh	; 
  1147 000008DD 8F                      		db  8Fh	; 
  1148 000008DE 90                      		db  90h	; 
  1149 000008DF 92                      		db  92h	; 
  1150 000008E0 92                      		db  92h	; 
  1151 000008E1 4F                      		db  4Fh	; O
  1152 000008E2 99                      		db  99h	; 
  1153 000008E3 4F                      		db  4Fh	; O
  1154 000008E4 55                      		db  55h	; U
  1155 000008E5 55                      		db  55h	; U
  1156 000008E6 59                      		db  59h	; Y
  1157 000008E7 99                      		db  99h	; 
  1158 000008E8 9A                      		db  9Ah	; 
  1159 000008E9 9B                      		db  9Bh	; 
  1160 000008EA 9C                      		db  9Ch	; 
  1161 000008EB 9D                      		db  9Dh	; 
  1162 000008EC 9E                      		db  9Eh	; 
  1163 000008ED 9F                      		db  9Fh	; 
  1164 000008EE 41                      		db  41h	; A
  1165 000008EF 49                      		db  49h	; I
  1166 000008F0 4F                      		db  4Fh	; O
  1167 000008F1 55                      		db  55h	; U
  1168 000008F2 A5                      		db 0A5h	; ¥
  1169 000008F3 A5                      		db 0A5h	; ¥
  1170 000008F4 A6                      		db 0A6h	; ¦
  1171 000008F5 A7                      		db 0A7h	; §
  1172 000008F6 00                      ESCCHAR		db 0			; DATA XREF: _$STD_CON_STRING_INPUT+42r
  1173                                  					; _$STD_CON_STRING_INPUT:TWOESCr ...
  1174 000008F7 40                      ESCTAB		db  40h	; @		; DATA XREF: _$STD_CON_STRING_INPUT-2CBCo
  1175 000008F8 4D                      		db  4Dh	; M
  1176 000008F9 3B                      		db  3Bh	; ;
  1177 000008FA 53                      		db  53h	; S
  1178 000008FB 3C                      		db  3Ch	; <
  1179 000008FC 3E                      		db  3Eh	; >
  1180 000008FD 3D                      		db  3Dh	; =
  1181 000008FE 3D                      		db  3Dh	; =
  1182 000008FF 3F                      		db  3Fh	; ?
  1183 00000900 4B                      		db  4Bh	; K
  1184 00000901 52                      		db  52h	; R
  1185 00000902 41                      		db  41h	; A
  1186 00000903 41                      		db  41h	; A
  1187                                  
  1188 00000904 [1B36]                  ESCFUNC		dw GETCH		; DATA XREF: _$STD_CON_STRING_INPUT-2CB2r
  1189 00000906 [0B37]                  		dw TWOESC
  1190 00000908 [9437]                  		dw ENTERINS
  1191 0000090A [A036]                  		dw BACKSP
  1192 0000090C [8037]                  		dw REEDIT
  1193 0000090E [8D36]                  		dw KILNEW
  1194 00000910 [1237]                  		dw COPYLIN
  1195 00000912 [4537]                  		dw SKIPSTR
  1196 00000914 [1837]                  		dw COPYSTR
  1197 00000916 [3B37]                  		dw SKIPONE
  1198 00000918 [1D37]                  		dw COPYONE
  1199 0000091A [1D37]                  		dw COPYONE
  1200 0000091C [9C37]                  		dw CTRLZ
  1201                                  ; ---------------------------------------------------------------------------
  1202                                  ; START	OF FUNCTION CHUNK FOR _$STD_CON_STRING_INPUT
  1203                                  
  1204                                  OEMFunctionKey:				; CODE XREF: _$STD_CON_STRING_INPUT:loc_3660j
  1205 0000091E E8A42C                  		call	_$STD_CON_INPUT_NO_ECHO
  1206 00000921 B10D                    		mov	cl, 13
  1207 00000923 57                      		push	di
  1208 00000924 BF[F708]                		mov	di, ESCTAB
  1209 00000927 F2AE                    		repne scasb
  1210 00000929 5F                      		pop	di
  1211 0000092A D1E1                    		shl	cx, 1
  1212 0000092C 89CD                    		mov	bp, cx
  1213 0000092E 36FFA6[0409]            		jmp	word [ss:bp+ESCFUNC]
  1214                                  
  1215                                  ; END OF FUNCTION CHUNK	FOR _$STD_CON_STRING_INPUT
  1216                                  ; ---------------------------------------------------------------------------
  1217                                  
  1218                                  _$SLEAZEFUNC:				; DATA XREF: seg000:0774o
  1219 00000933 B200                    		mov	dl, 0
  1220                                  
  1221                                  _$SLEAZEFUNCDL:				; DATA XREF: seg000:0776o
  1222 00000935 16                      		push	ss
  1223 00000936 1F                      		pop	ds
  1224 00000937 88D0                    		mov	al, dl
  1225 00000939 E8A412                  		call	GETTHISDRV
  1226 0000093C B0FF                    		mov	al, 0FFh
  1227 0000093E 7215                    		jb	short loc_953
  1228 00000940 E8E818                  		call	FATREAD
  1229 00000943 268B560D                		mov	dx, [es:bp+0Dh]
  1230 00000947 4A                      		dec	dx
  1231 00000948 268A4604                		mov	al, [es:bp+4]
  1232 0000094C FEC0                    		inc	al
  1233 0000094E 268B4E02                		mov	cx, [es:bp+2]
  1234 00000952 83C516                  		add	bp, 16h
  1235                                  
  1236                                  loc_953:				; CODE XREF: seg000:093Cj
  1237 00000955 E8E1FD                  		call	get_user_stack
  1238 00000958 894C04                  		mov	[si+4],	cx
  1239 0000095B 895406                  		mov	[si+6],	dx
  1240 0000095E 896C02                  		mov	[si+2],	bp
  1241 00000961 8C440E                  		mov	word [si+0Eh], es
  1242 00000964 C3                      		retn
  1243                                  ; ---------------------------------------------------------------------------
  1244                                  
  1245                                  _$ABORT:				; DATA XREF: seg000:DISPATCHo
  1246 00000965 30C0                    		xor	al, al
  1247 00000967 36C606[CE03]00          		mov	byte [ss:exit_type], 0
  1248                                  
  1249                                  abort_inner:				; CODE XREF: seg000:34EEj
  1250 0000096D 368A26[CE03]            		mov	ah, byte [ss:exit_type]
  1251 00000972 36A3[CC03]              		mov	word [ss:exit_code], ax
  1252 00000976 E8C0FD                  		call	get_user_stack
  1253 00000979 8E5C14                  		mov	ds, word [si+14h]
  1254 0000097C 31C0                    		xor	ax, ax
  1255 0000097E 8EC0                    		mov	es, ax
  1256 00000980 BE0A00                  		mov	si, 10
  1257 00000983 BF8800                  		mov	di, 88h	; ''
  1258 00000986 A5                      		movsw
  1259 00000987 A5                      		movsw
  1260 00000988 A5                      		movsw
  1261 00000989 A5                      		movsw
  1262 0000098A A5                      		movsw
  1263 0000098B A5                      		movsw
  1264 0000098C E90724                  		jmp	reset_environment
  1265                                  ; ---------------------------------------------------------------------------
  1266                                  
  1267                                  _$DIR_SEARCH_FIRST:			; DATA XREF: seg000:0760o
  1268 0000098F E81F0B                  		call	GETFILE
  1269                                  
  1270                                  SAVPLCE:				; CODE XREF: seg000:0A21j
  1271 00000992 B200                    		mov	dl, 0
  1272 00000994 7252                    		jb	short loc_9E6
  1273 00000996 08E4                    		or	ah, ah
  1274 00000998 7805                    		js	short loc_99D
  1275 0000099A A1[2101]                		mov	ax, [LASTENT]
  1276 0000099D FEC2                    		inc	dl
  1277                                  
  1278                                  loc_99D:				; CODE XREF: seg000:0996j
  1279 0000099F 26894510                		mov	[es:di+10h], ax
  1280 000009A3 A1[7003]                		mov	ax, [THISDPB]
  1281 000009A6 26894512                		mov	[es:di+12h], ax
  1282 000009AA A1[7203]                		mov	ax, [THISDPB+2]
  1283 000009AD 26894514                		mov	[es:di+14h], ax
  1284 000009B1 A1[9703]                		mov	ax, [DIRSTART]
  1285 000009B4 26894516                		mov	[es:di+16h], ax
  1286 000009B8 89DE                    		mov	si, bx
  1287 000009BA C43E[DF00]              		les	di, [DMAADD]
  1288 000009BE B8FF00                  		mov	ax, 0FFh
  1289 000009C1 3A06[6103]              		cmp	al, [EXTFCB]
  1290 000009C5 7509                    		jnz	short loc_9CE
  1291 000009C7 AB                      		stosw
  1292 000009C8 FEC0                    		inc	al
  1293 000009CA AB                      		stosw
  1294 000009CB AB                      		stosw
  1295 000009CC A0[4503]                		mov	al, [ATTRIB]
  1296 000009CF AA                      		stosb
  1297                                  
  1298                                  loc_9CE:				; CODE XREF: seg000:09C3j
  1299 000009D0 A0[6F03]                		mov	al, byte [THISDRV]
  1300 000009D3 FEC0                    		inc	al
  1301 000009D5 AA                      		stosb
  1302 000009D6 08D2                    		or	dl, dl
  1303 000009D8 7404                    		jz	short loc_9DC
  1304 000009DA 8E1E[B503]              		mov	ds, word [CURBUF+2]
  1305                                  
  1306                                  loc_9DC:				; CODE XREF: seg000:09D6j
  1307 000009DE B91000                  		mov	cx, 10h
  1308 000009E1 F3A5                    		rep movsw
  1309 000009E3 30C0                    		xor	al, al
  1310 000009E5 C3                      		retn
  1311                                  ; ---------------------------------------------------------------------------
  1312                                  
  1313                                  loc_9E4:				; CODE XREF: seg000:09F3j seg000:09FDj
  1314 000009E6 1E                      		push	ds
  1315 000009E7 07                      		pop	es
  1316                                  
  1317                                  loc_9E6:				; CODE XREF: seg000:0992j
  1318 000009E8 B8FFFF                  		mov	ax, 0FFFFh
  1319 000009EB 26894510                		mov	[es:di+10h], ax
  1320                                  
  1321                                  locret_9ED:				; CODE XREF: seg000:0A29j
  1322 000009EF C3                      		retn
  1323                                  ; ---------------------------------------------------------------------------
  1324                                  
  1325                                  _$DIR_SEARCH_NEXT:			; DATA XREF: seg000:0762o
  1326 000009F0 E83025                  		call	MOVNAMENOSET
  1327 000009F3 89D7                    		mov	di, dx
  1328 000009F5 72EF                    		jb	short loc_9E4
  1329 000009F7 8B4510                  		mov	ax, [di+10h]
  1330 000009FA C46D12                  		les	bp, [di+12h]
  1331 000009FD 09C0                    		or	ax, ax
  1332 000009FF 78E5                    		js	short loc_9E4
  1333 00000A01 8B5D16                  		mov	bx, [di+16h]
  1334 00000A04 52                      		push	dx
  1335 00000A05 1E                      		push	ds
  1336 00000A06 50                      		push	ax
  1337 00000A07 36892E[7003]            		mov	[ss:THISDPB], bp
  1338 00000A0C 368C06[7203]            		mov	[ss:THISDPB+2], es
  1339 00000A11 E8190C                  		call	SETDIRSRCH
  1340 00000A14 58                      		pop	ax
  1341 00000A15 C706[AB03]FFFF          		mov	word [ENTLAST], 0FFFFh
  1342 00000A1B E8510B                  		call	GETENT
  1343 00000A1E E8F00A                  		call	NEXTENT
  1344 00000A21 07                      		pop	es
  1345 00000A22 5F                      		pop	di
  1346 00000A23 E96CFF                  		jmp	SAVPLCE
  1347                                  ; ---------------------------------------------------------------------------
  1348                                  
  1349                                  _$GET_FCB_FILE_LENGTH:			; DATA XREF: seg000:0784o
  1350 00000A26 E8880A                  		call	GETFILE
  1351 00000A29 B0FF                    		mov	al, 0FFh
  1352 00000A2B 72C2                    		jb	short locret_9ED
  1353 00000A2D 83C721                  		add	di, 21h	; '!'
  1354 00000A30 268B4DED                		mov	cx, [es:di-13h]
  1355 00000A34 09C9                    		or	cx, cx
  1356 00000A36 7503                    		jnz	short loc_A39
  1357 00000A38 B98000                  		mov	cx, 80h
  1358                                  
  1359                                  loc_A39:				; CODE XREF: seg000:0A34j
  1360 00000A3B 31D2                    		xor	dx, dx
  1361 00000A3D 46                      		inc	si
  1362 00000A3E 46                      		inc	si
  1363 00000A3F 8E1E[B503]              		mov	ds, word [CURBUF+2]
  1364 00000A43 8B4402                  		mov	ax, [si+2]
  1365 00000A46 F7F1                    		div	cx
  1366 00000A48 50                      		push	ax
  1367 00000A49 AD                      		lodsw
  1368 00000A4A F7F1                    		div	cx
  1369 00000A4C 09D2                    		or	dx, dx
  1370 00000A4E 5A                      		pop	dx
  1371 00000A4F 7404                    		jz	short loc_A53
  1372 00000A51 40                      		inc	ax
  1373 00000A52 7501                    		jnz	short loc_A53
  1374 00000A54 42                      		inc	dx
  1375                                  
  1376                                  loc_A53:				; CODE XREF: seg000:0A4Dj seg000:0A50j
  1377 00000A55 AB                      		stosw
  1378 00000A56 89D0                    		mov	ax, dx
  1379 00000A58 AA                      		stosb
  1380 00000A59 B000                    		mov	al, 0
  1381 00000A5B 83F940                  		cmp	cx, 40h	; '@'
  1382 00000A5E 7303                    		jnb	short locret_A61
  1383 00000A60 268825                  		mov	[es:di], ah
  1384                                  
  1385                                  locret_A61:				; CODE XREF: seg000:0A5Cj
  1386 00000A63 C3                      		retn
  1387                                  ; ---------------------------------------------------------------------------
  1388                                  
  1389                                  _$GET_FCB_POSITION:			; DATA XREF: seg000:0786o
  1390 00000A64 E8651A                  		call	GETREC
  1391 00000A67 894521                  		mov	[di+21h], ax
  1392 00000A6A 885523                  		mov	[di+23h], dl
  1393 00000A6D 837D0E40                		cmp	word [di+0Eh], 40h ; '@'
  1394 00000A71 7303                    		jnb	short RET16
  1395 00000A73 887524                  		mov	[di+24h], dh
  1396                                  
  1397                                  RET16:					; CODE XREF: seg000:0A6Fj
  1398 00000A76 C3                      		retn
  1399                                  ; ---------------------------------------------------------------------------
  1400                                  
  1401                                  _$DISK_RESET:				; DATA XREF: seg000:0758o
  1402 00000A77 16                      		push	ss
  1403 00000A78 1F                      		pop	ds
  1404 00000A79 B0FF                    		mov	al, 0FFh
  1405 00000A7B E8A51C                  		call	FLUSHBUF
  1406 00000A7E C706[2B01]FFFF          		mov	word [LASTBUFFER+2], 0FFFFh
  1407 00000A84 C706[2901]FFFF          		mov	word [LASTBUFFER], 0FFFFh
  1408 00000A8A E81E1B                  		call	SETVISIT
  1409                                  
  1410                                  loc_A8B:				; CODE XREF: seg000:0AA0j
  1411 00000A8D C6450701                		mov	byte [di+7], 1
  1412 00000A91 807D04FF                		cmp	byte [di+4], 0FFh
  1413 00000A95 7408                    		jz	short loc_A9D
  1414 00000A97 C74504FF00              		mov	word [di+4], 0FFh
  1415 00000A9C E8351B                  		call	SCANPLACE
  1416                                  
  1417                                  loc_A9D:				; CODE XREF: seg000:0A93j
  1418 00000A9F E8221B                  		call	SKIPVISIT
  1419 00000AA2 75E9                    		jnz	short loc_A8B
  1420                                  
  1421                                  locret_AA2:				; CODE XREF: seg000:0AB3j
  1422 00000AA4 C3                      		retn
  1423                                  ; ---------------------------------------------------------------------------
  1424                                  
  1425                                  _$RAW_CON_IO:				; DATA XREF: seg000:074Ao
  1426 00000AA5 88D0                    		mov	al, dl
  1427 00000AA7 3CFF                    		cmp	al, 0FFh
  1428 00000AA9 753A                    		jnz	short RAWOUT
  1429 00000AAB 36C43E[6503]            		les	di, [ss:user_SP]
  1430 00000AB0 31DB                    		xor	bx, bx
  1431 00000AB2 E81811                  		call	GET_IO_FCB
  1432 00000AB5 72ED                    		jb	short locret_AA2
  1433 00000AB7 B401                    		mov	ah, 1
  1434 00000AB9 E85A07                  		call	IOFUNC
  1435 00000ABC 750B                    		jnz	short loc_AC7
  1436 00000ABE E8F220                  		call	SPOOLINT
  1437 00000AC1 26804D1640              		or	byte [es:di+16h], 40h
  1438 00000AC6 30C0                    		xor	al, al
  1439                                  
  1440                                  locret_AC6:				; CODE XREF: seg000:0AD4j
  1441 00000AC8 C3                      		retn
  1442                                  ; ---------------------------------------------------------------------------
  1443                                  
  1444                                  loc_AC7:				; CODE XREF: seg000:0ABAj
  1445 00000AC9 26806516BF              		and	byte [es:di+16h], 0BFh
  1446                                  
  1447                                  loc_ACC:				; CODE XREF: seg000:0ADBj
  1448 00000ACE E8E220                  		call	SPOOLINT
  1449                                  
  1450                                  _$RAW_CON_INPUT:			; DATA XREF: seg000:074Co
  1451 00000AD1 31DB                    		xor	bx, bx
  1452 00000AD3 E8F710                  		call	GET_IO_FCB
  1453 00000AD6 72F0                    		jb	short locret_AC6
  1454 00000AD8 B401                    		mov	ah, 1
  1455 00000ADA E83907                  		call	IOFUNC
  1456 00000ADD 74EF                    		jz	short loc_ACC
  1457 00000ADF 30E4                    		xor	ah, ah
  1458 00000AE1 E83207                  		call	IOFUNC
  1459 00000AE4 C3                      		retn
  1460                                  
  1461                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1462                                  
  1463                                  RAWOUT:					; CODE XREF: seg000:0AA7j
  1464                                  					; OUTT:loc_351Dp
  1465 00000AE5 53                      		push	bx
  1466 00000AE6 BB0100                  		mov	bx, 1
  1467 00000AE9 E8E110                  		call	GET_IO_FCB
  1468 00000AEC 721B                    		jb	short loc_B07
  1469 00000AEE F6441880                		test	byte [si+18h], 80h
  1470 00000AF2 7411                    		jz	short loc_B03
  1471 00000AF4 1E                      		push	ds
  1472 00000AF5 56                      		push	si
  1473 00000AF6 C57419                  		lds	si, [si+19h]
  1474 00000AF9 F6440410                		test	byte [si+4], 10h
  1475 00000AFD 5E                      		pop	si
  1476 00000AFE 1F                      		pop	ds
  1477 00000AFF 7404                    		jz	short loc_B03
  1478 00000B01 CD29                    		int	29h		; DOS 2+ internal - FAST PUTCHAR
  1479                                  					; AL = character to display
  1480 00000B03 EB03                    		jmp	short loc_B06
  1481                                  ; ---------------------------------------------------------------------------
  1482                                  
  1483                                  loc_B03:				; CODE XREF: RAWOUT+Dj	RAWOUT+1Aj
  1484 00000B05 E80800                  		call	RAWOUT3
  1485                                  
  1486                                  loc_B06:				; CODE XREF: RAWOUT+1Ej
  1487 00000B08 F8                      		clc
  1488                                  
  1489                                  loc_B07:				; CODE XREF: RAWOUT+7j
  1490 00000B09 5B                      		pop	bx
  1491                                  
  1492                                  locret_B08:				; CODE XREF: RAWOUT2+3j
  1493 00000B0A C3                      		retn
  1494                                  
  1495                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1496                                  
  1497                                  RAWOUT2:				; CODE XREF: OUTT:loc_35BDp
  1498 00000B0B E8BF10                  		call	GET_IO_FCB
  1499 00000B0E 72FA                    		jb	short locret_B08
  1500                                  
  1501                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1502                                  
  1503                                  RAWOUT3:				; CODE XREF: RAWOUT:loc_B03p
  1504 00000B10 50                      		push	ax
  1505 00000B11 EB03                    		jmp	short loc_B14
  1506                                  ; ---------------------------------------------------------------------------
  1507                                  
  1508                                  loc_B11:				; CODE XREF: RAWOUT3+Bj
  1509 00000B13 E89D20                  		call	SPOOLINT
  1510                                  
  1511                                  loc_B14:				; CODE XREF: RAWOUT3+1j
  1512 00000B16 B403                    		mov	ah, 3
  1513 00000B18 E8FB06                  		call	IOFUNC
  1514 00000B1B 74F6                    		jz	short loc_B11
  1515 00000B1D 58                      		pop	ax
  1516 00000B1E B402                    		mov	ah, 2
  1517 00000B20 E8F306                  		call	IOFUNC
  1518 00000B23 F8                      		clc
  1519                                  
  1520                                  RET18:					; CODE XREF: OUTMES+4j
  1521 00000B24 C3                      		retn
  1522                                  
  1523                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1524                                  
  1525                                  OUTMES:					; CODE XREF: OUTMES+9j	seg000:424Bp
  1526 00000B25 2EAC                    		cs	lodsb
  1527 00000B27 3C24                    		cmp	al, '$'
  1528 00000B29 74F9                    		jz	short RET18
  1529 00000B2B E8CF29                  		call	OUTT
  1530 00000B2E EBF5                    		jmp	short OUTMES
  1531                                  
  1532                                  ; ---------------------------------------------------------------------------
  1533 00000B30 C3                      		retn
  1534                                  ; ---------------------------------------------------------------------------
  1535                                  
  1536                                  _$PARSE_FILE_DESCRIPTOR:		; DATA XREF: seg000:0790o
  1537 00000B31 E8D722                  		call	MAKEFCB
  1538 00000B34 56                      		push	si
  1539 00000B35 E801FC                  		call	get_user_stack
  1540 00000B38 8F4408                  		pop	word [si+8]
  1541 00000B3B C3                      		retn
  1542                                  
  1543                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1544                                  
  1545                                  _$DUP_PDB:				; CODE XREF: seg000:336Fp
  1546                                  					; DATA XREF: seg000:07E8o
  1547 00000B3C 36C606[8D01]FF          		mov	byte [ss:CreatePDB], 0FFh
  1548                                  
  1549                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1550                                  
  1551                                  
  1552                                  _$CREATE_PROCESS_DATA_BLOCK:		; CODE XREF: seg000:loc_3A8p
  1553                                  					; DATA XREF: seg000:078Ao
  1554 00000B42 8EC2                    		mov	es, dx
  1555 00000B44 2EF606[8D01]FF          		test	byte [cs:CreatePDB], 0FFh
  1556 00000B4A 7407                    		jz	short Create_PDB_old
  1557 00000B4C 2E8E1E[8B01]            		mov	ds, [cs:CurrentPDB]
  1558 00000B51 EB06                    		jmp	short Create_copy
  1559                                  ; ---------------------------------------------------------------------------
  1560                                  
  1561                                  Create_PDB_old:				; CODE XREF: _$CREATE_PROCESS_DATA_BLOCK+8j
  1562 00000B53 E8E3FB                  		call	get_user_stack
  1563 00000B56 8E5C14                  		mov	ds, word [si+14h]
  1564                                  
  1565                                  Create_copy:				; CODE XREF: _$CREATE_PROCESS_DATA_BLOCK+Fj
  1566 00000B59 31F6                    		xor	si, si
  1567 00000B5B 89F7                    		mov	di, si
  1568 00000B5D B98000                  		mov	cx, 80h	; ''
  1569 00000B60 F3A5                    		rep movsw
  1570 00000B62 2EF606[8D01]FF          		test	byte [cs:CreatePDB], 0FFh
  1571 00000B68 7436                    		jz	short Create_PDB_cont
  1572 00000B6A 0E                      		push	cs
  1573 00000B6B 1F                      		pop	ds
  1574 00000B6C 31DB                    		xor	bx, bx
  1575 00000B6E B91400                  		mov	cx, 20
  1576                                  
  1577                                  create_dup_jfn:				; CODE XREF: _$CREATE_PROCESS_DATA_BLOCK+4Bj
  1578 00000B71 06                      		push	es
  1579 00000B72 E86B32                  		call	get_jfn_pointer
  1580 00000B75 7214                    		jb	short create_skip
  1581 00000B77 06                      		push	es
  1582 00000B78 57                      		push	di
  1583 00000B79 E85032                  		call	get_sf_from_jfn
  1584 00000B7C 7203                    		jb	short create_no_inc
  1585 00000B7E 26FE05                  		inc	byte [es:di]
  1586                                  
  1587                                  create_no_inc:				; CODE XREF: _$CREATE_PROCESS_DATA_BLOCK+3Aj
  1588 00000B81 5F                      		pop	di
  1589 00000B82 07                      		pop	es
  1590 00000B83 268A05                  		mov	al, [es:di]
  1591 00000B86 07                      		pop	es
  1592 00000B87 06                      		push	es
  1593 00000B88 268A07                  		mov	al, [es:bx]
  1594                                  
  1595                                  create_skip:				; CODE XREF: _$CREATE_PROCESS_DATA_BLOCK+33j
  1596 00000B8B 07                      		pop	es
  1597 00000B8C 43                      		inc	bx
  1598 00000B8D E2E2                    		loop	create_dup_jfn
  1599 00000B8F FF36[8B01]              		push	word [CurrentPDB]
  1600 00000B93 5B                      		pop	bx
  1601 00000B94 53                      		push	bx
  1602 00000B95 268F061600              		pop	word [es:16h]
  1603 00000B9A 8C06[8B01]              		mov	[CurrentPDB], es
  1604 00000B9E 8EDB                    		mov	ds, bx
  1605                                  
  1606                                  Create_PDB_cont:			; CODE XREF: _$CREATE_PROCESS_DATA_BLOCK+26j
  1607 00000BA0 2EC606[8D01]00          		mov	byte [cs:CreatePDB], 0
  1608 00000BA6 A10200                  		mov	ax, word [2]
  1609                                  
  1610                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1611                                  
  1612                                  SETMEM:					; CODE XREF: seg000:422Fp
  1613 00000BA9 31C9                    		xor	cx, cx
  1614 00000BAB 8ED9                    		mov	ds, cx
  1615 00000BAD 8EC2                    		mov	es, dx
  1616 00000BAF BE8800                  		mov	si, 88h	; ''
  1617 00000BB2 BF0A00                  		mov	di, 0Ah
  1618 00000BB5 B90600                  		mov	cx, 6
  1619 00000BB8 F3A5                    		rep movsw
  1620 00000BBA 26A30200                		mov	word [es:2], ax
  1621 00000BBE 29D0                    		sub	ax, dx
  1622 00000BC0 3DFF0F                  		cmp	ax, MAXDIF
  1623 00000BC3 7603                    		jbe	short HAVDIF
  1624 00000BC5 B8FF0F                  		mov	ax, MAXDIF
  1625                                  HAVDIF:				; CODE XREF: SETMEM+1Aj
  1626 00000BC8 BB0C00                  		mov	bx, 0Ch
  1627 00000BCB 29C3                    		sub	bx, ax
  1628 00000BCD B104                    		mov	cl, 4
  1629 00000BCF D3E0                    		shl	ax, cl
  1630 00000BD1 8EDA                    		mov	ds, dx
  1631 00000BD3 A30600                  		mov	word [6], ax
  1632 00000BD6 891E0800                		mov	word [8], bx
  1633 00000BDA C7060000CD20            		mov	word [0], 20CDh
  1634 00000BE0 C60605009A              		mov	byte [5], 9Ah
  1635 00000BE5 C7063200CD21            		mov	word [50], 21CDh
  1636 00000BEB C6063400CB              		mov	byte [52], 0CBh
  1637 00000BF0 C3                      		retn
  1638                                  
  1639                                  ; ---------------------------------------------------------------------------
  1640 00000BF1 0000                    USERNUM		dw 0			; DATA XREF: seg000:0BFBr
  1641 00000BF3 00                      		db 0			; DATA XREF: seg000:0BF7r
  1642 00000BF4 FF                      OEMNUM		db 0FFh
  1643                                  MSVERS:					; DATA XREF: seg000:0BFFr
  1644 00000BF5 02                      MSMAJOR		db 02h
  1645 00000BF6 0B                      MSMINOR		db 0Bh			
  1646                                  
  1647                                  ; ---------------------------------------------------------------------------
  1648                                  
  1649                                  _$GET_VERSION:				; DATA XREF: seg000:079Eo
  1650 00000BF7 16                      		push	ss
  1651 00000BF8 1F                      		pop	ds
  1652 00000BF9 8B1E[F30B]              		mov	bx, [USERNUM+2]
  1653 00000BFD 8B0E[F10B]              		mov	cx, [USERNUM]
  1654 00000C01 A1[F50B]                		mov	ax, word [MSVERS]
  1655 00000C04 E832FB                  		call	get_user_stack
  1656 00000C07 895C02                  		mov	[si+2],	bx
  1657 00000C0A 894C04                  		mov	[si+4],	cx
  1658 00000C0D 8904                    		mov	[si], ax
  1659 00000C0F C3                      		retn
  1660                                  ; ---------------------------------------------------------------------------
  1661                                  
  1662                                  _$INTERNATIONAL:			; DATA XREF: seg000:07AEo
  1663 00000C10 88C3                    		mov	bl, al
  1664 00000C12 1E                      		push	ds
  1665 00000C13 07                      		pop	es
  1666 00000C14 52                      		push	dx
  1667 00000C15 5F                      		pop	di
  1668 00000C16 16                      		push	ss
  1669 00000C17 1F                      		pop	ds
  1670 00000C18 83FFFF                  		cmp	di, 0FFFFh
  1671 00000C1B 7440                    		jz	short loc_C5B
  1672 00000C1D 08DB                    		or	bl, bl
  1673 00000C1F 750B                    		jnz	short loc_C2A
  1674 00000C21 8B36[A401]              		mov	si, [Current_Country]
  1675 00000C25 8B44FE                  		mov	ax, [si-2]
  1676 00000C28 88E3                    		mov	bl, ah
  1677 00000C2A EB1E                    		jmp	short loc_C48
  1678                                  ; ---------------------------------------------------------------------------
  1679                                  
  1680                                  loc_C2A:				; CODE XREF: seg000:0C1Dj
  1681 00000C2C E80700                  		call	international_get
  1682 00000C2F 7319                    		jnb	short loc_C48
  1683 00000C31 B002                    		mov	al, 2
  1684                                  
  1685                                  loc_C31:				; CODE XREF: seg000:0C62j
  1686 00000C33 E972FC                  		jmp	SYS_RET_ERR
  1687                                  
  1688                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1689                                  
  1690                                  
  1691                                  international_get:			; CODE XREF: seg000:loc_C2Ap
  1692                                  					; seg000:loc_C5Bp
  1693 00000C36 BE[A601]                		mov	si, international_table ; 1A6h
  1694                                  
  1695                                  loc_C37:				; CODE XREF: international_get+12j
  1696 00000C39 AD                      		lodsw
  1697 00000C3A 3CFF                    		cmp	al, 0FFh
  1698 00000C3C 7502                    		jnz	short loc_C3E
  1699 00000C3E F9                      		stc
  1700                                  
  1701                                  locret_C3D:				; CODE XREF: international_get+Cj
  1702 00000C3F C3                      		retn
  1703                                  ; ---------------------------------------------------------------------------
  1704                                  
  1705                                  loc_C3E:				; CODE XREF: international_get+6j
  1706 00000C40 38E3                    		cmp	bl, ah
  1707 00000C42 74FB                    		jz	short locret_C3D
  1708 00000C44 30E4                    		xor	ah, ah
  1709 00000C46 01C6                    		add	si, ax
  1710 00000C48 EBEF                    		jmp	short loc_C37
  1711                                  
  1712                                  ; ---------------------------------------------------------------------------
  1713                                  
  1714                                  loc_C48:				; CODE XREF: seg000:0C28j seg000:0C2Dj
  1715 00000C4A 88C1                    		mov	cl, al
  1716 00000C4C 30ED                    		xor	ch, ch
  1717 00000C4E 57                      		push	di
  1718 00000C4F F3A4                    		rep movsb
  1719 00000C51 5F                      		pop	di
  1720 00000C52 268C4D14                		mov	word [es:di+14h], cs
  1721                                  
  1722                                  loc_C54:				; CODE XREF: seg000:0C68j
  1723 00000C56 31C0                    		xor	ax, ax
  1724 00000C58 88D8                    		mov	al, bl
  1725 00000C5A E941FC                  		jmp	SYS_RET_OK
  1726                                  ; ---------------------------------------------------------------------------
  1727                                  
  1728                                  loc_C5B:				; CODE XREF: seg000:0C19j
  1729 00000C5D E8D6FF                  		call	international_get
  1730 00000C60 7304                    		jnb	short loc_C64
  1731 00000C62 B002                    		mov	al, 2
  1732 00000C64 EBCD                    		jmp	short loc_C31
  1733                                  ; ---------------------------------------------------------------------------
  1734                                  
  1735                                  loc_C64:				; CODE XREF: seg000:0C5Ej
  1736 00000C66 8936[A401]              		mov	[Current_Country], si
  1737 00000C6A EBEA                    		jmp	short loc_C54
  1738                                  ; ---------------------------------------------------------------------------
  1739                                  
  1740                                  _$GET_VERIFY_ON_WRITE:			; DATA XREF: seg000:07E6o
  1741 00000C6C 36A0[DB00]              		mov	al, [ss:VERFLG]
  1742 00000C70 C3                      		retn
  1743                                  ; ---------------------------------------------------------------------------
  1744                                  
  1745                                  _$SET_VERIFY_ON_WRITE:			; DATA XREF: seg000:079Ao
  1746 00000C71 2401                    		and	al, 1
  1747 00000C73 36A2[DB00]              		mov	[ss:VERFLG], al
  1748 00000C77 C3                      		retn
  1749                                  ; ---------------------------------------------------------------------------
  1750                                  
  1751                                  _$SET_CTRL_C_TRAPPING:			; DATA XREF: seg000:07A4o
  1752 00000C78 08C0                    		or	al, al
  1753 00000C7A 750B                    		jnz	short CTRL_C_set
  1754 00000C7C E8BAFA                  		call	get_user_stack
  1755 00000C7F 36A0[2801]              		mov	al, [ss:CNTCFLAG]
  1756 00000C83 884406                  		mov	[si+6],	al
  1757 00000C86 C3                      		retn
  1758                                  ; ---------------------------------------------------------------------------
  1759                                  
  1760                                  CTRL_C_set:				; CODE XREF: seg000:0C78j
  1761 00000C87 FEC8                    		dec	al
  1762 00000C89 7509                    		jnz	short bad_val
  1763 00000C8B 80E201                  		and	dl, 1
  1764 00000C8E 368816[2801]            		mov	[ss:CNTCFLAG], dl
  1765 00000C93 C3                      		retn
  1766                                  ; ---------------------------------------------------------------------------
  1767                                  
  1768                                  bad_val:				; CODE XREF: seg000:0C87j
  1769 00000C94 B0FF                    		mov	al, 0FFh
  1770 00000C96 C3                      		retn
  1771                                  ; ---------------------------------------------------------------------------
  1772                                  
  1773                                  _$GET_INDOS_FLAG:			; DATA XREF: seg000:07A6o
  1774 00000C97 E89FFA                  		call	get_user_stack
  1775 00000C9A C74402[2301]            		mov	word [si+2], INDOS
  1776 00000C9F 8C5410                  		mov	[si+10h], ss
  1777 00000CA2 C3                      		retn
  1778                                  ; ---------------------------------------------------------------------------
  1779                                  
  1780                                  _$GET_IN_VARS:				; DATA XREF: seg000:07E2o
  1781 00000CA3 E893FA                  		call	get_user_stack
  1782 00000CA6 C74402[F000]            		mov	word [si+2], SYSINITVAR ; DPBHEAD
  1783 00000CAB 8C5410                  		mov	word [si+10h], ss
  1784 00000CAE C3                      		retn
  1785                                  ; ---------------------------------------------------------------------------
  1786                                  
  1787                                  _$GET_DRIVE_FREESPACE:			; DATA XREF: seg000:07AAo
  1788 00000CAF 16                      		push	ss
  1789 00000CB0 1F                      		pop	ds
  1790 00000CB1 88D0                    		mov	al, dl
  1791 00000CB3 E82A0F                  		call	GETTHISDRV
  1792 00000CB6 B8FFFF                  		mov	ax, 0FFFFh
  1793 00000CB9 7224                    		jb	short loc_CDD
  1794 00000CBB E86D15                  		call	FATREAD
  1795 00000CBE 31D2                    		xor	dx, dx
  1796 00000CC0 BB0200                  		mov	bx, 2
  1797 00000CC3 268B4E0D                		mov	cx, [es:bp+0Dh]
  1798 00000CC7 49                      		dec	cx
  1799 00000CC8 51                      		push	cx
  1800                                  
  1801                                  SCANFREE:				; CODE XREF: seg000:0CCEj
  1802 00000CC9 E85E14                  		call	UNPACK
  1803 00000CCC 7501                    		jnz	short loc_CCD
  1804 00000CCE 42                      		inc	dx
  1805                                  
  1806                                  loc_CCD:				; CODE XREF: seg000:0CCAj
  1807 00000CCF 43                      		inc	bx
  1808 00000CD0 E2F7                    		loop	SCANFREE
  1809 00000CD2 5B                      		pop	bx
  1810 00000CD3 268A4604                		mov	al, [es:bp+4]
  1811 00000CD7 FEC0                    		inc	al
  1812 00000CD9 30E4                    		xor	ah, ah
  1813 00000CDB 268B4E02                		mov	cx, [es:bp+2]
  1814                                  
  1815                                  loc_CDD:				; CODE XREF: seg000:0CB7j
  1816 00000CDF E857FA                  		call	get_user_stack
  1817 00000CE2 894C04                  		mov	[si+4],	cx
  1818 00000CE5 895C06                  		mov	[si+6],	bx
  1819 00000CE8 895402                  		mov	[si+2],	dx
  1820 00000CEB 8904                    		mov	[si], ax
  1821 00000CED C3                      		retn
  1822                                  ; ---------------------------------------------------------------------------
  1823                                  
  1824                                  _$GET_DMA:				; DATA XREF: seg000:079Co
  1825 00000CEE 368B1E[DF00]            		mov	bx, [ss:DMAADD]
  1826 00000CF3 368B0E[E100]            		mov	cx, [ss:DMAADD+2]
  1827 00000CF8 E83EFA                  		call	get_user_stack
  1828 00000CFB 895C02                  		mov	[si+2],	bx
  1829 00000CFE 894C10                  		mov	[si+10h], cx
  1830 00000D01 C3                      		retn
  1831                                  ; ---------------------------------------------------------------------------
  1832                                  
  1833                                  _$SET_DMA:				; DATA XREF: seg000:0772o
  1834 00000D02 368916[DF00]            		mov	[ss:DMAADD], dx
  1835 00000D07 368C1E[E100]            		mov	[ss:DMAADD+2], ds
  1836 00000D0C C3                      		retn
  1837                                  ; ---------------------------------------------------------------------------
  1838                                  
  1839                                  _$GET_DEFAULT_DPB:			; DATA XREF: seg000:077Co
  1840 00000D0D B200                    		mov	dl, 0
  1841                                  
  1842                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1843                                  
  1844                                  _$GET_DPB:				; CODE XREF: seg000:3BB3p
  1845                                  					; DATA XREF: seg000:07A2o
  1846 00000D0F 16                      		push	ss
  1847 00000D10 1F                      		pop	ds
  1848 00000D11 88D0                    		mov	al, dl
  1849 00000D13 E8CA0E                  		call	GETTHISDRV
  1850 00000D16 720F                    		jb	short ISNODRV
  1851 00000D18 E81015                  		call	FATREAD
  1852 00000D1B E81BFA                  		call	get_user_stack
  1853 00000D1E 896C02                  		mov	[si+2],	bp
  1854 00000D21 8C440E                  		mov	word [si+0Eh], es
  1855 00000D24 30C0                    		xor	al, al
  1856 00000D26 C3                      		retn
  1857                                  ; ---------------------------------------------------------------------------
  1858                                  
  1859                                  ISNODRV:				; CODE XREF: _$GET_DPB+7j
  1860 00000D27 B0FF                    		mov	al, -1
  1861 00000D29 C3                      		retn
  1862                                  
  1863                                  ; ---------------------------------------------------------------------------
  1864                                  
  1865                                  _$GET_DEFAULT_DRIVE:			; DATA XREF: seg000:0770o
  1866 00000D2A 36A0[2001]              		mov	al, [ss:CURDRV]
  1867 00000D2E C3                      		retn
  1868                                  ; ---------------------------------------------------------------------------
  1869                                  
  1870                                  _$SET_DEFAULT_DRIVE:			; DATA XREF: seg000:075Ao
  1871 00000D2F 36A0[0001]              		mov	al, [ss:NUMIO]
  1872 00000D33 38C2                    		cmp	dl, al
  1873 00000D35 7305                    		jnb	short _RET17
  1874 00000D37 368816[2001]            		mov	[ss:CURDRV], dl
  1875                                  
  1876                                  _RET17:					; CODE XREF: seg000:0D33j
  1877 00000D3C C3                      		retn
  1878                                  
  1879                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1880                                  
  1881                                  
  1882                                  _$GET_INTERRUPT_VECTOR:			; CODE XREF: FATALC+71p
  1883                                  					; DATA XREF: seg000:07A8o
  1884 00000D3D E81800                  		call	RECSET
  1885 00000D40 26C41F                  		les	bx, [es:bx]
  1886 00000D43 E8F3F9                  		call	get_user_stack
  1887 00000D46 895C02                  		mov	[si+2],	bx
  1888 00000D49 8C4410                  		mov	word [si+10h], es
  1889 00000D4C C3                      		retn
  1890                                  
  1891                                  ; ---------------------------------------------------------------------------
  1892                                  
  1893                                  _$SET_INTERRUPT_VECTOR:			; DATA XREF: seg000:0788o
  1894 00000D4D E80800                  		call	RECSET
  1895 00000D50 268917                  		mov	[es:bx], dx
  1896 00000D53 268C5F02                		mov	[es:bx+2], ds
  1897 00000D57 C3                      		retn
  1898                                  
  1899                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1900                                  
  1901                                  
  1902                                  RECSET:					; CODE XREF: _$GET_INTERRUPT_VECTORp
  1903                                  					; seg000:_$SET_INTERRUPT_VECTORp
  1904 00000D58 31DB                    		xor	bx, bx
  1905 00000D5A 8EC3                    		mov	es, bx
  1906 00000D5C 88C3                    		mov	bl, al
  1907 00000D5E D1E3                    		shl	bx, 1
  1908 00000D60 D1E3                    		shl	bx, 1
  1909 00000D62 C3                      		retn
  1910                                  
  1911                                  ; ---------------------------------------------------------------------------
  1912                                  
  1913                                  _$CHAR_OPER:				; DATA XREF: seg000:07ACo
  1914 00000D63 16                      		push	ss
  1915 00000D64 1F                      		pop	ds
  1916 00000D65 08C0                    		or	al, al
  1917 00000D67 7506                    		jnz	short loc_D6D
  1918 00000D69 8A16[E500]              		mov	dl, [switch_character]
  1919 00000D6D EB1F                    		jmp	short loc_D8C
  1920                                  ; ---------------------------------------------------------------------------
  1921                                  
  1922                                  loc_D6D:				; CODE XREF: seg000:0D65j
  1923 00000D6F FEC8                    		dec	al
  1924 00000D71 7505                    		jnz	short loc_D76
  1925 00000D73 8816[E500]              		mov	[switch_character], dl
  1926 00000D77 C3                      		retn
  1927                                  ; ---------------------------------------------------------------------------
  1928                                  
  1929                                  loc_D76:				; CODE XREF: seg000:0D6Fj
  1930 00000D78 FEC8                    		dec	al
  1931 00000D7A 7506                    		jnz	short loc_D80
  1932 00000D7C 8A16[E600]              		mov	dl, [device_availability]
  1933 00000D80 EB0C                    		jmp	short loc_D8C
  1934                                  ; ---------------------------------------------------------------------------
  1935                                  
  1936                                  loc_D80:				; CODE XREF: seg000:0D78j
  1937 00000D82 FEC8                    		dec	al
  1938 00000D84 7505                    		jnz	short loc_D89
  1939 00000D86 8816[E600]              		mov	[device_availability], dl
  1940 00000D8A C3                      		retn
  1941                                  ; ---------------------------------------------------------------------------
  1942                                  
  1943                                  loc_D89:				; CODE XREF: seg000:0D82j
  1944 00000D8B B0FF                    		mov	al, 0FFh
  1945 00000D8D C3                      		retn
  1946                                  ; ---------------------------------------------------------------------------
  1947                                  
  1948                                  loc_D8C:				; CODE XREF: seg000:0D6Bj seg000:0D7Ej
  1949 00000D8E E8A8F9                  		call	get_user_stack
  1950 00000D91 895406                  		mov	[si+6],	dx
  1951 00000D94 C3                      		retn
  1952                                  
  1953                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  1954                                  
  1955                                  _$SETDPB:				; CODE XREF: FATREAD+F3p seg000:4114p
  1956                                  					; DATA XREF: ...
  1957 00000D95 89EF                    		mov	di, bp
  1958 00000D97 83C702                  		add	di, 2
  1959 00000D9A AD                      		lodsw
  1960 00000D9B AB                      		stosw
  1961 00000D9C 89C2                    		mov	dx, ax
  1962 00000D9E AC                      		lodsb
  1963 00000D9F FEC8                    		dec	al
  1964 00000DA1 AA                      		stosb
  1965 00000DA2 FEC0                    		inc	al
  1966 00000DA4 30E4                    		xor	ah, ah
  1967                                  
  1968                                  LOG2LOOP:				; CODE XREF: _$SETDPB+19j
  1969 00000DA6 A801                    		test	al, 1
  1970 00000DA8 7506                    		jnz	short SAVLOG
  1971 00000DAA FEC4                    		inc	ah
  1972 00000DAC D0E8                    		shr	al, 1
  1973 00000DAE EBF6                    		jmp	short LOG2LOOP
  1974                                  
  1975                                  SAVLOG:					; CODE XREF: _$SETDPB+13j
  1976 00000DB0 88E0                    		mov	al, ah
  1977 00000DB2 AA                      		stosb
  1978 00000DB3 88C3                    		mov	bl, al
  1979 00000DB5 A5                      		movsw
  1980 00000DB6 AC                      		lodsb
  1981 00000DB7 AA                      		stosb
  1982 00000DB8 88C7                    		mov	bh, al
  1983 00000DBA AD                      		lodsw
  1984 00000DBB AB                      		stosw
  1985 00000DBC B105                    		mov	cl, 5
  1986 00000DBE D3EA                    		shr	dx, cl
  1987 00000DC0 48                      		dec	ax
  1988 00000DC1 01D0                    		add	ax, dx
  1989 00000DC3 89D1                    		mov	cx, dx
  1990 00000DC5 31D2                    		xor	dx, dx
  1991 00000DC7 F7F1                    		div	cx
  1992 00000DC9 89C1                    		mov	cx, ax
  1993 00000DCB 47                      		inc	di
  1994 00000DCC 47                      		inc	di
  1995 00000DCD A5                      		movsw
  1996 00000DCE AC                      		lodsb
  1997 00000DCF 26884616                		mov	[es:bp+16h], al
  1998 00000DD3 AD                      		lodsw
  1999 00000DD4 AA                      		stosb
  2000 00000DD5 F6E7                    		mul	bh
  2001 00000DD7 26034606                		add	ax, [es:bp+6]
  2002 00000DDB AB                      		stosw
  2003 00000DDC 01C8                    		add	ax, cx
  2004 00000DDE 2689460B                		mov	[es:bp+0Bh], ax
  2005 00000DE2 262B460D                		sub	ax, [es:bp+0Dh]
  2006 00000DE6 F7D8                    		neg	ax
  2007 00000DE8 88D9                    		mov	cl, bl
  2008 00000DEA D3E8                    		shr	ax, cl
  2009 00000DEC 40                      		inc	ax
  2010 00000DED 2689460D                		mov	[es:bp+0Dh], ax
  2011 00000DF1 26C7461C0000            		mov	word [es:bp+1Ch], 0
  2012 00000DF7 C3                      		retn
  2013                                  
  2014                                  ; ---------------------------------------------------------------------------
  2015                                  
  2016                                  MKNERRJ:				; CODE XREF: seg000:0DFFj seg000:0E1Dj
  2017 00000DF8 E9B000                  		jmp	MKNERR
  2018                                  ; ---------------------------------------------------------------------------
  2019                                  
  2020                                  NODEEXISTSJ:				; CODE XREF: seg000:0E1Fj
  2021 00000DFB E9AB00                  		jmp	NODEEXISTS
  2022                                  ; ---------------------------------------------------------------------------
  2023                                  
  2024                                  _$MKDIR:					; DATA XREF: seg000:07B0o
  2025 00000DFE E8132B                  		call	validate_path
  2026 00000E01 72F5                    		jb	short MKNERRJ
  2027 00000E03 89D6                    		mov	si, dx
  2028 00000E05 368C16[8703]            		mov	word [ss:THISFCB+2], ss
  2029 00000E0A 36C706[8503][4804]      		mov	word [ss:THISFCB], AUXSTACK - 40
  2030 00000E11 B010                    		mov	al, 10h
  2031 00000E13 36C706[6203]00E5        		mov	word [ss:CREATING], 0E500h
  2032 00000E1A E83A08                  		call	MAKENODE
  2033 00000E1D B003                    		mov	al, 3
  2034 00000E1F 72D7                    		jb	short MKNERRJ
  2035 00000E21 75D8                    		jnz	short NODEEXISTSJ
  2036 00000E23 C53E[B303]              		lds	di, [CURBUF]
  2037 00000E27 29FE                    		sub	si, di
  2038 00000E29 56                      		push	si
  2039 00000E2A FF7508                  		push	word [di+8]
  2040 00000E2D 16                      		push	ss
  2041 00000E2E 1F                      		pop	ds
  2042 00000E2F FF36[9703]              		push	word [DIRSTART]
  2043 00000E33 31C0                    		xor	ax, ax
  2044 00000E35 A3[9703]                		mov	word [DIRSTART], ax
  2045 00000E38 E8E405                  		call	NEWDIR
  2046 00000E3B 7251                    		jb	short NODEEXISTSPOPDEL
  2047 00000E3D E82F07                  		call	GETENT
  2048 00000E40 C43E[B303]              		les	di, [CURBUF]
  2049 00000E44 26C6450501              		mov	byte [es:di+5], 1
  2050 00000E49 83C710                  		add	di, 10h
  2051 00000E4C B82E20                  		mov	ax, 202Eh
  2052 00000E4F AB                      		stosw
  2053 00000E50 8B16[9703]              		mov	dx, word [DIRSTART]
  2054 00000E54 E83706                  		call	SETDOTENT
  2055 00000E57 B82E2E                  		mov	ax, 2E2Eh
  2056 00000E5A AB                      		stosw
  2057 00000E5B 5A                      		pop	dx
  2058 00000E5C E82F06                  		call	SETDOTENT
  2059 00000E5F C42E[7003]              		les	bp, [THISDPB]
  2060 00000E63 5A                      		pop	dx
  2061 00000E64 30C0                    		xor	al, al
  2062 00000E66 E81818                  		call	GETBUFFR
  2063 00000E69 8B16[9703]              		mov	dx, word [DIRSTART]
  2064 00000E6D C53E[B303]              		lds	di, [CURBUF]
  2065 00000E71 5E                      		pop	si
  2066 00000E72 01FE                    		add	si, di
  2067 00000E74 8914                    		mov	[si], dx
  2068 00000E76 31D2                    		xor	dx, dx
  2069 00000E78 895402                  		mov	[si+2],	dx
  2070 00000E7B 895404                  		mov	[si+4],	dx
  2071                                  
  2072                                  DIRUP:					; CODE XREF: seg000:0EA4p seg000:106Ej
  2073 00000E7E C6450501                		mov	byte [di+5], 1
  2074 00000E82 16                      		push	ss
  2075 00000E83 1F                      		pop	ds
  2076 00000E84 268A4600                		mov	al, [es:bp]
  2077 00000E88 E89818                  		call	FLUSHBUF
  2078                                  
  2079                                  SYS_RET_OKJ:				; CODE XREF: seg000:0EC9j
  2080 00000E8B E910FA                  		jmp	SYS_RET_OK
  2081                                  
  2082                                  NODEEXISTSPOPDEL:			; CODE XREF: seg000:0E39j
  2083 00000E8E 5A                      		pop	dx
  2084 00000E8F 5A                      		pop	dx
  2085 00000E90 C42E[7003]              		les	bp, [THISDPB]
  2086 00000E94 30C0                    		xor	al, al
  2087 00000E96 E8E817                  		call	GETBUFFR
  2088 00000E99 C53E[B303]              		lds	di, [CURBUF]
  2089 00000E9D 5E                      		pop	si
  2090 00000E9E 01FE                    		add	si, di
  2091 00000EA0 83EE1A                  		sub	si, 1Ah
  2092 00000EA3 C604E5                  		mov	byte [si], 0E5h ; 'å'
  2093 00000EA6 E8D5FF                  		call	DIRUP
  2094                                  
  2095                                  NODEEXISTS:				; CODE XREF: seg000:NODEEXISTSJj
  2096 00000EA9 B005                    		mov	al, 5
  2097                                  
  2098                                  MKNERR:					; CODE XREF: seg000:MKNERRJj
  2099 00000EAB E9FAF9                  		jmp	SYS_RET_ERR
  2100                                  ; ---------------------------------------------------------------------------
  2101                                  
  2102                                  _$CHDIR:				; DATA XREF: seg000:07B4o
  2103 00000EAE E8632A                  		call	validate_path
  2104 00000EB1 725A                    		jb	short loc_F0B
  2105 00000EB3 1E                      		push	ds
  2106 00000EB4 52                      		push	dx
  2107 00000EB5 89D6                    		mov	si, dx
  2108 00000EB7 E83F08                  		call	GETPATH
  2109 00000EBA 724F                    		jb	short loc_F09
  2110 00000EBC 754D                    		jnz	short loc_F09
  2111 00000EBE A1[9703]                		mov	ax, [DIRSTART]
  2112 00000EC1 89C3                    		mov	bx, ax
  2113 00000EC3 26875E1C                		xchg	bx, [es:bp+1Ch]
  2114 00000EC7 09C0                    		or	ax, ax
  2115 00000EC9 5E                      		pop	si
  2116 00000ECA 1F                      		pop	ds
  2117 00000ECB 74BE                    		jz	short SYS_RET_OKJ
  2118 00000ECD 89EF                    		mov	di, bp
  2119 00000ECF 83C71E                  		add	di, 1Eh
  2120 00000ED2 89FA                    		mov	dx, di
  2121 00000ED4 36803E[7503]00          		cmp	byte [ss:DRIVESPEC], 0
  2122 00000EDA 7402                    		jz	short loc_EDC
  2123 00000EDC 46                      		inc	si
  2124 00000EDD 46                      		inc	si
  2125                                  
  2126                                  loc_EDC:				; CODE XREF: seg000:0ED8j
  2127 00000EDE 89F1                    		mov	cx, si
  2128 00000EE0 36803E[7603]00          		cmp	byte [ss:ROOTSTART], 0
  2129 00000EE6 7404                    		jz	short loc_EEA
  2130 00000EE8 46                      		inc	si
  2131 00000EE9 41                      		inc	cx
  2132 00000EEA EB2B                    		jmp	short loc_F15
  2133                                  ; ---------------------------------------------------------------------------
  2134                                  
  2135                                  loc_EEA:				; CODE XREF: seg000:0EE4j
  2136 00000EEC 09DB                    		or	bx, bx
  2137 00000EEE 7429                    		jz	short loc_F17
  2138 00000EF0 31DB                    		xor	bx, bx
  2139                                  
  2140                                  loc_EF0:				; CODE XREF: seg000:0EF8j
  2141 00000EF2 26803D00                		cmp	byte [es:di], 0
  2142 00000EF6 7404                    		jz	short loc_EFA
  2143 00000EF8 47                      		inc	di
  2144 00000EF9 43                      		inc	bx
  2145 00000EFA EBF6                    		jmp	short loc_EF0
  2146                                  ; ---------------------------------------------------------------------------
  2147                                  
  2148                                  loc_EFA:				; CODE XREF: seg000:0EF4j
  2149 00000EFC B02F                    		mov	al, '/'
  2150 00000EFE 363A06[E500]            		cmp	al, [ss:switch_character]
  2151 00000F03 7502                    		jnz	short loc_F05
  2152 00000F05 B05C                    		mov	al, '\'
  2153                                  
  2154                                  loc_F05:				; CODE XREF: seg000:0F01j
  2155 00000F07 AA                      		stosb
  2156 00000F08 43                      		inc	bx
  2157 00000F09 EB1D                    		jmp	short loc_F26
  2158                                  ; ---------------------------------------------------------------------------
  2159                                  
  2160                                  loc_F09:				; CODE XREF: seg000:0EB8j seg000:0EBAj
  2161 00000F0B 58                      		pop	ax
  2162 00000F0C 58                      		pop	ax
  2163                                  
  2164                                  loc_F0B:				; CODE XREF: seg000:0EAFj seg000:0F3Ej
  2165 00000F0D B003                    		mov	al, 3
  2166 00000F0F E996F9                  		jmp	SYS_RET_ERR
  2167                                  ; ---------------------------------------------------------------------------
  2168                                  
  2169                                  INCBXCHK:				; CODE XREF: COPYELEM+18p COPYELEM+26p ...
  2170 00000F12 43                      		inc	bx
  2171                                  
  2172                                  BXCHK:					; CODE XREF: COPYELEM+Ap COPYELEM+34p
  2173 00000F13 83FB40                  		cmp	bx, 64
  2174 00000F16 C3                      		retn
  2175                                  ; ---------------------------------------------------------------------------
  2176                                  
  2177                                  loc_F15:				; CODE XREF: seg000:0EE8j
  2178 00000F17 31DB                    		xor	bx, bx
  2179                                  
  2180                                  loc_F17:				; CODE XREF: seg000:0EECj seg000:0F29j ...
  2181 00000F19 AC                      		lodsb
  2182 00000F1A 08C0                    		or	al, al
  2183 00000F1C 7503                    		jnz	short loc_F1F
  2184 00000F1E E98900                  		jmp	loc_FA8
  2185                                  ; ---------------------------------------------------------------------------
  2186                                  
  2187                                  loc_F1F:				; CODE XREF: seg000:0F1Aj
  2188 00000F21 3C2E                    		cmp	al, '.'
  2189 00000F23 741D                    		jz	short loc_F40
  2190 00000F25 E82D00                  		call	COPYELEM
  2191                                  
  2192                                  loc_F26:				; CODE XREF: seg000:0F07j
  2193 00000F28 83FB40                  		cmp	bx, 64
  2194 00000F2B 72EC                    		jb	short loc_F17
  2195 00000F2D 268A45FF                		mov	al, [es:di-1]
  2196 00000F31 E8BD20                  		call	PATHCHRCMP
  2197 00000F34 7501                    		jnz	short loc_F35
  2198 00000F36 4F                      		dec	di
  2199                                  
  2200                                  loc_F35:				; CODE XREF: seg000:0F32j
  2201 00000F37 30C0                    		xor	al, al
  2202 00000F39 AA                      		stosb
  2203 00000F3A 26C7461CFFFF            		mov	word [es:bp+1Ch], 0FFFFh
  2204 00000F40 EBCB                    		jmp	short loc_F0B
  2205                                  ; ---------------------------------------------------------------------------
  2206                                  
  2207                                  loc_F40:				; CODE XREF: seg000:0F21j
  2208 00000F42 AC                      		lodsb
  2209 00000F43 08C0                    		or	al, al
  2210 00000F45 7462                    		jz	short loc_FA7
  2211 00000F47 3C2E                    		cmp	al, '.'
  2212 00000F49 75CE                    		jnz	short loc_F17
  2213 00000F4B E84600                  		call	DELELMES
  2214 00000F4E AC                      		lodsb
  2215 00000F4F 08C0                    		or	al, al
  2216 00000F51 7456                    		jz	short loc_FA7
  2217 00000F53 EBC4                    		jmp	short loc_F17
  2218                                  
  2219                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2220                                  
  2221                                  
  2222                                  COPYELEM:				; CODE XREF: seg000:0F23p
  2223 00000F55 57                      		push	di
  2224 00000F56 51                      		push	cx
  2225 00000F57 B90008                  		mov	cx, 800h
  2226 00000F5A B42E                    		mov	ah, '.'
  2227 00000F5C E84F00                  		call	CopyPiece
  2228 00000F5F E8B1FF                  		call	BXCHK
  2229 00000F62 7313                    		jnb	short loc_F75
  2230 00000F64 38C4                    		cmp	ah, al
  2231 00000F66 7412                    		jz	short loc_F78
  2232 00000F68 08C0                    		or	al, al
  2233 00000F6A 7407                    		jz	short loc_F71
  2234                                  
  2235                                  loc_F6A:				; CODE XREF: COPYELEM+3Dj
  2236 00000F6C AA                      		stosb
  2237 00000F6D E8A2FF                  		call	INCBXCHK
  2238 00000F70 7305                    		jnb	short loc_F75
  2239 00000F72 46                      		inc	si
  2240                                  
  2241                                  loc_F71:				; CODE XREF: COPYELEM+15j COPYELEM+3Bj
  2242 00000F73 4E                      		dec	si
  2243 00000F74 59                      		pop	cx
  2244 00000F75 58                      		pop	ax
  2245 00000F76 C3                      		retn
  2246                                  ; ---------------------------------------------------------------------------
  2247                                  
  2248                                  loc_F75:				; CODE XREF: COPYELEM+Dj COPYELEM+1Bj	...
  2249 00000F77 59                      		pop	cx
  2250 00000F78 5F                      		pop	di
  2251                                  
  2252                                  locret_F77:				; CODE XREF: DELELMES+4j DELELMES+Fj
  2253 00000F79 C3                      		retn
  2254                                  ; ---------------------------------------------------------------------------
  2255                                  
  2256                                  loc_F78:				; CODE XREF: COPYELEM+11j
  2257 00000F7A AA                      		stosb
  2258 00000F7B E894FF                  		call	INCBXCHK
  2259 00000F7E 73F7                    		jnb	short loc_F75
  2260 00000F80 AC                      		lodsb
  2261 00000F81 30E4                    		xor	ah, ah
  2262 00000F83 B90003                  		mov	cx, 300h
  2263 00000F86 E82500                  		call	CopyPiece
  2264 00000F89 E887FF                  		call	BXCHK
  2265 00000F8C 73E9                    		jnb	short loc_F75
  2266 00000F8E 08C0                    		or	al, al
  2267 00000F90 74E1                    		jz	short loc_F71
  2268 00000F92 EBD8                    		jmp	short loc_F6A
  2269                                  
  2270                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2271                                  
  2272                                  DELELMES:				; CODE XREF: seg000:0F49p
  2273 00000F94 4F                      		dec	di
  2274 00000F95 4B                      		dec	bx
  2275                                  
  2276                                  loc_F94:				; CODE XREF: DELELMES+13j
  2277 00000F96 39D7                    		cmp	di, dx
  2278 00000F98 74DF                    		jz	short locret_F77
  2279 00000F9A 50                      		push	ax
  2280 00000F9B 268A45FF                		mov	al, [es:di-1]
  2281 00000F9F E84F20                  		call	PATHCHRCMP
  2282 00000FA2 58                      		pop	ax
  2283 00000FA3 74D4                    		jz	short locret_F77
  2284 00000FA5 4F                      		dec	di
  2285 00000FA6 4B                      		dec	bx
  2286 00000FA7 EBED                    		jmp	short loc_F94
  2287                                  
  2288                                  ; ---------------------------------------------------------------------------
  2289                                  
  2290                                  loc_FA7:				; CODE XREF: seg000:0F43j seg000:0F4Fj
  2291 00000FA9 4F                      		dec	di
  2292                                  
  2293                                  loc_FA8:				; CODE XREF: seg000:0F1Cj
  2294 00000FAA AA                      		stosb
  2295 00000FAB E9F0F8                  		jmp	SYS_RET_OK
  2296                                  
  2297                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2298                                  
  2299                                  CopyPiece:				; CODE XREF: COPYELEM+7p COPYELEM+31p	...
  2300 00000FAE AA                      		stosb
  2301 00000FAF FEC1                    		inc	cl
  2302 00000FB1 E85EFF                  		call	INCBXCHK
  2303 00000FB4 7314                    		jnb	short locret_FC8
  2304 00000FB6 08C0                    		or	al, al
  2305 00000FB8 7410                    		jz	short locret_FC8
  2306 00000FBA 38E9                    		cmp	cl, ch
  2307 00000FBC 7602                    		jbe	short loc_FBE
  2308 00000FBE 4F                      		dec	di
  2309 00000FBF 4B                      		dec	bx
  2310                                  
  2311                                  loc_FBE:				; CODE XREF: CopyPiece+Ej
  2312 00000FC0 AC                      		lodsb
  2313 00000FC1 E82D20                  		call	PATHCHRCMP
  2314 00000FC4 7404                    		jz	short locret_FC8
  2315 00000FC6 38E0                    		cmp	al, ah
  2316 00000FC8 75E4                    		jnz	short CopyPiece
  2317                                  
  2318                                  locret_FC8:				; CODE XREF: CopyPiece+6j CopyPiece+Aj ...
  2319 00000FCA C3                      		retn
  2320                                  
  2321                                  ; ---------------------------------------------------------------------------
  2322                                  
  2323                                  loc_FC9:				; CODE XREF: seg000:0FCFj seg000:0FD6j
  2324 00000FCB E9A500                  		jmp	loc_1071
  2325                                  ; ---------------------------------------------------------------------------
  2326                                  
  2327                                  _$RMDIR:				; CODE XREF: seg000:0FF7j
  2328                                  					; DATA XREF: seg000:07B2o
  2329 00000FCE E84329                  		call	validate_path
  2330 00000FD1 72F8                    		jb	short loc_FC9
  2331 00000FD3 89D6                    		mov	si, dx
  2332 00000FD5 E82107                  		call	GETPATH
  2333 00000FD8 72F1                    		jb	short loc_FC9
  2334 00000FDA 7521                    		jnz	short loc_FFB
  2335 00000FDC 8B3E[9703]              		mov	di, word [DIRSTART]
  2336 00000FE0 09FF                    		or	di, di
  2337 00000FE2 7419                    		jz	short loc_FFB
  2338 00000FE4 268B4E1C                		mov	cx, [es:bp+1Ch]
  2339 00000FE8 83F9FF                  		cmp	cx, 0FFFFh
  2340 00000FEB 7515                    		jnz	short loc_1000
  2341 00000FED E8F705                  		call	GETCURRDIR
  2342 00000FF0 E846F7                  		call	get_user_stack
  2343 00000FF3 8B5406                  		mov	dx, [si+6]
  2344 00000FF6 8E5C0E                  		mov	ds, word [si+0Eh]
  2345 00000FF9 EBD3                    		jmp	short _$RMDIR
  2346                                  ; ---------------------------------------------------------------------------
  2347                                  
  2348                                  loc_FF9:				; CODE XREF: seg000:1033j seg000:103Cj ...
  2349 00000FFB 58                      		pop	ax
  2350 00000FFC 58                      		pop	ax
  2351                                  
  2352                                  loc_FFB:				; CODE XREF: seg000:0FD8j seg000:0FE0j
  2353 00000FFD B005                    		mov	al, 5
  2354                                  
  2355                                  loc_FFD:				; CODE XREF: seg000:loc_1006j
  2356 00000FFF E9A6F8                  		jmp	SYS_RET_ERR
  2357                                  ; ---------------------------------------------------------------------------
  2358                                  
  2359                                  loc_1000:				; CODE XREF: seg000:0FE9j
  2360 00001002 39CF                    		cmp	di, cx
  2361 00001004 7504                    		jnz	short loc_1008
  2362 00001006 B010                    		mov	al, 10h
  2363                                  
  2364                                  loc_1006:				; CODE XREF: seg000:1073j
  2365 00001008 EBF5                    		jmp	short loc_FFD
  2366                                  ; ---------------------------------------------------------------------------
  2367                                  
  2368                                  loc_1008:				; CODE XREF: seg000:1002j
  2369 0000100A C53E[B303]              		lds	di, [CURBUF]
  2370 0000100E 29FB                    		sub	bx, di
  2371 00001010 53                      		push	bx
  2372 00001011 FF7508                  		push	word [di+8]
  2373 00001014 16                      		push	ss
  2374 00001015 1F                      		pop	ds
  2375 00001016 16                      		push	ss
  2376 00001017 07                      		pop	es
  2377 00001018 BF[3903]                		mov	di, NAME1
  2378 0000101B B03F                    		mov	al, '?'
  2379 0000101D B90B00                  		mov	cx, 11
  2380 00001020 F3AA                    		rep stosb
  2381 00001022 30C0                    		xor	al, al
  2382 00001024 AA                      		stosb
  2383 00001025 E88808                  		call	STARTSRCH
  2384 00001028 E84105                  		call	GETENTRY
  2385 0000102B 8E1E[B503]              		mov	ds, word [CURBUF+2]
  2386 0000102F 89DE                    		mov	si, bx
  2387 00001031 AD                      		lodsw
  2388 00001032 3D2E20                  		cmp	ax, 202Eh
  2389 00001035 75C4                    		jnz	short loc_FF9
  2390 00001037 83C61E                  		add	si, 1Eh
  2391 0000103A AD                      		lodsw
  2392 0000103B 3D2E2E                  		cmp	ax, 2E2Eh
  2393 0000103E 75BB                    		jnz	short loc_FF9
  2394 00001040 16                      		push	ss
  2395 00001041 1F                      		pop	ds
  2396 00001042 C706[2101]0200          		mov	word [LASTENT], 2
  2397 00001048 E82105                  		call	GETENTRY
  2398 0000104B C606[4503]16            		mov	byte [ATTRIB], 16h
  2399 00001050 E88B04                  		call	SRCH
  2400 00001053 73A6                    		jnb	short loc_FF9
  2401 00001055 C42E[7003]              		les	bp, [THISDPB]
  2402 00001059 8B1E[9703]              		mov	bx, [DIRSTART]
  2403 0000105D E82A15                  		call	RELEASE
  2404 00001060 5A                      		pop	dx
  2405 00001061 30C0                    		xor	al, al
  2406 00001063 E81B16                  		call	GETBUFFR
  2407 00001066 C53E[B303]              		lds	di, [CURBUF]
  2408 0000106A 5B                      		pop	bx
  2409 0000106B 01FB                    		add	bx, di
  2410 0000106D C607E5                  		mov	byte [bx], 0E5h ; 'å'
  2411 00001070 E90BFE                  		jmp	DIRUP
  2412                                  ; ---------------------------------------------------------------------------
  2413                                  
  2414                                  loc_1071:				; CODE XREF: seg000:loc_FC9j
  2415 00001073 B003                    		mov	al, 3
  2416 00001075 EB91                    		jmp	short loc_1006
  2417                                  
  2418                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2419                                  
  2420                                  
  2421                                  arena_free_process:			; CODE XREF: FATALC+9Ap
  2422 00001077 BF0000                  		mov	di, 0
  2423 0000107A 36A1[EE00]              		mov	ax, [ss:arena_head]
  2424 0000107E E82000                  		call	check_signature
  2425                                  
  2426                                  loc_107F:				; CODE XREF: arena_free_process+21j
  2427 00001081 7301                    		jnb	short loc_1082
  2428                                  
  2429                                  locret_1081:				; CODE XREF: arena_free_process+1Cj
  2430 00001083 C3                      		retn
  2431                                  ; ---------------------------------------------------------------------------
  2432                                  
  2433                                  loc_1082:				; CODE XREF: arena_free_process:loc_107Fj
  2434 00001084 06                      		push	es
  2435 00001085 1F                      		pop	ds
  2436 00001086 391E0100                		cmp	word [1], bx
  2437 0000108A 7504                    		jnz	short loc_108E
  2438 0000108C 893E0100                		mov	word [1], di
  2439                                  
  2440                                  loc_108E:				; CODE XREF: arena_free_process+13j
  2441 00001090 803D5A                  		cmp	byte [di], 5Ah ; 'Z'
  2442 00001093 74EE                    		jz	short locret_1081
  2443 00001095 E80200                  		call	arena_next
  2444 00001098 EBE7                    		jmp	short loc_107F
  2445                                  
  2446                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2447                                  
  2448                                  arena_next:				; CODE XREF: arena_free_process+1Ep
  2449                                  					; Coalesce+5p ...
  2450 0000109A 8CD8                    		mov	ax, ds
  2451 0000109C 03060300                		add	ax, word [3]
  2452 000010A0 40                      		inc	ax
  2453                                  
  2454                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2455                                  
  2456                                  
  2457                                  check_signature:			; CODE XREF: arena_free_process+7p
  2458                                  					; _$ALLOC+15p ...
  2459 000010A1 8EC0                    		mov	es, ax
  2460 000010A3 26803D4D                		cmp	byte [es:di], 4Dh ;	'M'
  2461 000010A7 7408                    		jz	short loc_10AF
  2462 000010A9 26803D5A                		cmp	byte [es:di], 5Ah ;	'Z'
  2463 000010AD 7402                    		jz	short loc_10AF
  2464 000010AF F9                      		stc
  2465 000010B0 C3                      		retn
  2466                                  ; ---------------------------------------------------------------------------
  2467                                  
  2468                                  loc_10AF:				; CODE XREF: check_signature+6j
  2469                                  					; check_signature+Cj
  2470 000010B1 F8                      		clc
  2471                                  
  2472                                  locret_10B0:				; CODE XREF: Coalesce+3j Coalesce+8j ...
  2473 000010B2 C3                      		retn
  2474                                  
  2475                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2476                                  
  2477                                  Coalesce:				; CODE XREF: Coalesce+20j
  2478                                  					; _$ALLOC:loc_1118p ...
  2479 000010B3 803D5A                  		cmp	byte [di], 5Ah ; 'Z'
  2480 000010B6 74FA                    		jz	short locret_10B0
  2481 000010B8 E8DFFF                  		call	arena_next
  2482 000010BB 72F5                    		jb	short locret_10B0
  2483 000010BD 26393E0100              		cmp	[es:1], di
  2484 000010C2 75EE                    		jnz	short locret_10B0
  2485 000010C4 268B0E0300              		mov	cx, [es:3]
  2486 000010C9 41                      		inc	cx
  2487 000010CA 010E0300                		add	word [3], cx
  2488 000010CE 268A0D                  		mov	cl, [es:di]
  2489 000010D1 880D                    		mov	[di], cl
  2490 000010D3 EBDE                    		jmp	short Coalesce
  2491                                  
  2492                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2493                                  
  2494                                  _$ALLOC:				; CODE XREF: seg000:30C6p seg000:315Bp ...
  2495 000010D5 31C0                    		xor	ax, ax
  2496 000010D7 89C7                    		mov	di, ax
  2497 000010D9 36A3[E700]              		mov	[ss:FirstArena], ax
  2498 000010DD 36A3[E900]              		mov	[ss:BestArena], ax
  2499 000010E1 36A3[EB00]              		mov	[ss:LastArena], ax
  2500 000010E5 50                      		push	ax
  2501 000010E6 36A1[EE00]              		mov	ax, [ss:arena_head]
  2502 000010EA E8B4FF                  		call	check_signature
  2503 000010ED 7212                    		jb	short loc_10FF
  2504                                  
  2505                                  loc_10ED:				; CODE XREF: _$ALLOC+2Aj
  2506 000010EF 06                      		push	es
  2507 000010F0 1F                      		pop	ds
  2508 000010F1 393E0100                		cmp	[1], di
  2509 000010F5 7423                    		jz	short loc_1118
  2510                                  
  2511                                  loc_10F5:				; CODE XREF: _$ALLOC+58j _$ALLOC+87j
  2512 000010F7 803D5A                  		cmp	byte [di], 5Ah ; 'Z'
  2513 000010FA 740B                    		jz	short loc_1105
  2514 000010FC E89BFF                  		call	arena_next
  2515 000010FF 73EE                    		jnb	short loc_10ED
  2516                                  
  2517                                  loc_10FF:				; CODE XREF: _$ALLOC+18j _$ALLOC+48j
  2518 00001101 58                      		pop	ax
  2519                                  
  2520                                  loc_1100:				; CODE XREF: _$SETBLOCK:loc_11CBj
  2521 00001102 B007                    		mov	al, 7
  2522                                  
  2523                                  loc_1102:				; CODE XREF: _$ALLOC+43j
  2524 00001104 E9A1F7                  		jmp	SYS_RET_ERR
  2525                                  ; ---------------------------------------------------------------------------
  2526                                  
  2527                                  loc_1105:				; CODE XREF: _$ALLOC+25j
  2528 00001107 36833E[E700]00          		cmp	word [ss:FirstArena], 0
  2529 0000110D 7568                    		jnz	short loc_1175
  2530                                  
  2531                                  loc_110D:				; CODE XREF: _$SETBLOCK+1Ej
  2532 0000110F E827F6                  		call	get_user_stack
  2533 00001112 5B                      		pop	bx
  2534 00001113 895C02                  		mov	[si+2],	bx
  2535 00001116 B008                    		mov	al, 8
  2536 00001118 EBEA                    		jmp	short loc_1102
  2537                                  ; ---------------------------------------------------------------------------
  2538                                  
  2539                                  loc_1118:				; CODE XREF: _$ALLOC+20j
  2540 0000111A E896FF                  		call	Coalesce
  2541 0000111D 72E2                    		jb	short loc_10FF
  2542 0000111F 8B0E0300                		mov	cx, [3]
  2543 00001123 5A                      		pop	dx
  2544 00001124 39D1                    		cmp	cx, dx
  2545 00001126 7602                    		jbe	short loc_1128
  2546 00001128 89CA                    		mov	dx, cx
  2547                                  
  2548                                  loc_1128:				; CODE XREF: _$ALLOC+51j
  2549 0000112A 52                      		push	dx
  2550 0000112B 39CB                    		cmp	bx, cx
  2551 0000112D 77C8                    		ja	short loc_10F5
  2552 0000112F 36833E[E700]00          		cmp	word [ss:FirstArena], 0
  2553 00001135 7505                    		jnz	short loc_113A
  2554 00001137 368C1E[E700]            		mov	[ss:FirstArena], ds
  2555                                  
  2556                                  loc_113A:				; CODE XREF: _$ALLOC+60j
  2557 0000113C 36833E[E900]00          		cmp	word [ss:BestArena], 0
  2558 00001142 740E                    		jz	short loc_1150
  2559 00001144 06                      		push	es
  2560 00001145 368E06[E900]            		mov	es, [ss:BestArena]
  2561 0000114A 26390E0300              		cmp	word [es:3], cx
  2562 0000114F 07                      		pop	es
  2563 00001150 7605                    		jbe	short loc_1155
  2564                                  
  2565                                  loc_1150:				; CODE XREF: _$ALLOC+6Dj
  2566 00001152 368C1E[E900]            		mov	[ss:BestArena], ds
  2567                                  
  2568                                  loc_1155:				; CODE XREF: _$ALLOC+7Bj
  2569 00001157 368C1E[EB00]            		mov	[ss:LastArena], ds
  2570 0000115C EB99                    		jmp	short loc_10F5
  2571                                  ; ---------------------------------------------------------------------------
  2572                                  
  2573                                  loc_115C:				; CODE XREF: _$ALLOC+A8j
  2574 0000115E 368E1E[EB00]            		mov	ds, [ss:LastArena]
  2575 00001163 8B0E0300                		mov	cx, word [3]
  2576 00001167 29D9                    		sub	cx, bx
  2577 00001169 8CDA                    		mov	dx, ds
  2578 0000116B 7445                    		jz	short loc_11B0
  2579 0000116D 01CA                    		add	dx, cx
  2580 0000116F 8EC2                    		mov	es, dx
  2581 00001171 49                      		dec	cx
  2582 00001172 87D9                    		xchg	bx, cx
  2583 00001174 EB27                    		jmp	short loc_119B
  2584                                  ; ---------------------------------------------------------------------------
  2585 00001176 90                      		nop
  2586                                  
  2587                                  loc_1175:				; CODE XREF: _$ALLOC+38j
  2588 00001177 36803E[ED00]01          		cmp	byte [ss:AllocMethod], 1
  2589 0000117D 77DF                    		ja	short loc_115C
  2590 0000117F 368E1E[E700]            		mov	ds, [ss:FirstArena]
  2591 00001184 7205                    		jb	short loc_1189
  2592 00001186 368E1E[E900]            		mov	ds, [ss:BestArena]
  2593                                  
  2594                                  loc_1189:				; CODE XREF: _$ALLOC+AFj _$SETBLOCK+1Cj
  2595 0000118B 8B0E0300                		mov	cx, word [3]
  2596 0000118F 29D9                    		sub	cx, bx
  2597 00001191 8CD8                    		mov	ax, ds
  2598 00001193 89C2                    		mov	dx, ax
  2599 00001195 741B                    		jz	short loc_11B0
  2600 00001197 01D8                    		add	ax, bx
  2601 00001199 40                      		inc	ax
  2602 0000119A 8EC0                    		mov	es, ax
  2603 0000119C 49                      		dec	cx
  2604                                  
  2605                                  loc_119B:				; CODE XREF: _$ALLOC+9Fj
  2606 0000119D 891E0300                		mov	word [3], bx
  2607 000011A1 26890E0300              		mov	word [es:3], cx
  2608 000011A6 B34D                    		mov	bl, 4Dh	; 'M'
  2609 000011A8 861D                    		xchg	bl, [di]
  2610 000011AA 26881D                  		mov	[es:di], bl
  2611 000011AD 26893E0100              		mov	word [es:1], di
  2612                                  
  2613                                  loc_11B0:				; CODE XREF: _$ALLOC+96j _$ALLOC+C0j
  2614 000011B2 8EDA                    		mov	ds, dx
  2615 000011B4 36A1[8B01]              		mov	ax, [ss:CurrentPDB]
  2616 000011B8 A30100                  		mov	word [1], ax
  2617 000011BB 8CD8                    		mov	ax, ds
  2618 000011BD 40                      		inc	ax
  2619 000011BE 5B                      		pop	bx
  2620                                  
  2621                                  loc_11BD:				; CODE XREF: seg000:loc_11F1j
  2622 000011BF E9DCF6                  		jmp	SYS_RET_OK
  2623                                  
  2624                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2625                                  
  2626                                  _$SETBLOCK:				; CODE XREF: seg000:34AEp
  2627                                  					; DATA XREF: seg000:07D2o
  2628 000011C2 BF0000                  		mov	di, 0
  2629 000011C5 8CC0                    		mov	ax, es
  2630 000011C7 48                      		dec	ax
  2631 000011C8 E8D6FE                  		call	check_signature
  2632 000011CB 7303                    		jnb	short loc_11CE
  2633                                  
  2634                                  loc_11CB:				; CODE XREF: _$SETBLOCK+13j
  2635 000011CD E932FF                  		jmp	loc_1100
  2636                                  ; ---------------------------------------------------------------------------
  2637                                  
  2638                                  loc_11CE:				; CODE XREF: _$SETBLOCK+9j
  2639 000011D0 8ED8                    		mov	ds, ax
  2640 000011D2 E8DEFE                  		call	Coalesce
  2641 000011D5 72F6                    		jb	short loc_11CB
  2642 000011D7 8B0E0300                		mov	cx, word [3]
  2643 000011DB 51                      		push	cx
  2644 000011DC 39CB                    		cmp	bx, cx
  2645 000011DE 76AB                    		jbe	short loc_1189
  2646 000011E0 E92CFF                  		jmp	loc_110D
  2647                                  
  2648                                  ; ---------------------------------------------------------------------------
  2649                                  
  2650                                  _$DEALLOC:				; DATA XREF: seg000:07D0o
  2651 000011E3 BF0000                  		mov	di, 0
  2652 000011E6 8CC0                    		mov	ax, es
  2653 000011E8 48                      		dec	ax
  2654 000011E9 E8B5FE                  		call	check_signature
  2655 000011EC 7207                    		jb	short loc_11F3
  2656 000011EE 26893E0100              		mov	word [es:1], di
  2657                                  
  2658                                  loc_11F1:				; CODE XREF: seg000:loc_1208j
  2659 000011F3 EBCA                    		jmp	short loc_11BD
  2660                                  ; ---------------------------------------------------------------------------
  2661                                  
  2662                                  loc_11F3:				; CODE XREF: seg000:11EAj
  2663 000011F5 B009                    		mov	al, 9
  2664                                  
  2665                                  loc_11F5:				; CODE XREF: seg000:1200j
  2666 000011F7 E9AEF6                  		jmp	SYS_RET_ERR
  2667                                  ; ---------------------------------------------------------------------------
  2668                                  
  2669                                  _$ALLOCOPER:				; DATA XREF: seg000:07EEo
  2670 000011FA 3C01                    		cmp	al, 1
  2671 000011FC 7206                    		jb	short loc_1202
  2672 000011FE 740C                    		jz	short loc_120A
  2673 00001200 B001                    		mov	al, 1
  2674 00001202 EBF3                    		jmp	short loc_11F5
  2675                                  ; ---------------------------------------------------------------------------
  2676                                  
  2677                                  loc_1202:				; CODE XREF: seg000:11FAj
  2678 00001204 36A0[ED00]              		mov	al, [ss:AllocMethod]
  2679 00001208 30E4                    		xor	ah, ah
  2680                                  
  2681                                  loc_1208:				; CODE XREF: seg000:120Fj
  2682 0000120A EBE7                    		jmp	short loc_11F1
  2683                                  ; ---------------------------------------------------------------------------
  2684                                  
  2685                                  loc_120A:				; CODE XREF: seg000:11FCj
  2686 0000120C 36881E[ED00]            		mov	[ss:AllocMethod], bl
  2687 00001211 EBF7                    		jmp	short loc_1208
  2688                                  ; ---------------------------------------------------------------------------
  2689                                  ; START	OF FUNCTION CHUNK FOR IOFUNC
  2690                                  
  2691                                  IOFUNC_RETRY:				; CODE XREF: IOFUNC+76j
  2692 00001213 E8FFF4                  		call	restore_world
  2693                                  ; END OF FUNCTION CHUNK	FOR IOFUNC
  2694                                  
  2695                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2696                                  
  2697                                  IOFUNC:					; CODE XREF: seg000:0AB7p seg000:0AD8p ...
  2698                                  
  2699                                  ; FUNCTION CHUNK AT 1211 SIZE 00000003 BYTES
  2700                                  
  2701 00001216 368C16[5701]            		mov	[ss:IOXAD+2], ss
  2702 0000121B 36C706[5501][3303]      		mov	word [ss:IOXAD], DEVIOBUF
  2703 00001222 36C706[5901]0100        		mov	word [ss:IOSCNT], 1
  2704 00001229 36A3[3303]              		mov	word [ss:DEVIOBUF], ax
  2705 0000122D F6441880                		test	byte [si+18h], 80h
  2706 00001231 7503                    		jnz	short loc_1234
  2707 00001233 E98000                  		jmp	loc_12B4
  2708                                  ; ---------------------------------------------------------------------------
  2709                                  
  2710                                  loc_1234:				; CODE XREF: IOFUNC+1Bj
  2711 00001236 E8F0F4                  		call	save_world
  2712 00001239 1E                      		push	ds
  2713 0000123A 16                      		push	ss
  2714 0000123B 07                      		pop	es
  2715 0000123C 16                      		push	ss
  2716 0000123D 1F                      		pop	ds
  2717 0000123E 31DB                    		xor	bx, bx
  2718 00001240 891E[4A01]              		mov	[IOCALL_REQSTAT], bx
  2719 00001244 881E[5401]              		mov	[IOMED], bl
  2720 00001248 BB[4701]                		mov	bx, IOCALL ; 147h
  2721 0000124B B91604                  		mov	cx, 416h
  2722 0000124E 08E4                    		or	ah, ah
  2723 00001250 7418                    		jz	short loc_1268
  2724 00001252 B90E05                  		mov	cx, 50Eh
  2725 00001255 FECC                    		dec	ah
  2726 00001257 7411                    		jz	short loc_1268
  2727 00001259 B91608                  		mov	cx, 816h
  2728 0000125C FECC                    		dec	ah
  2729 0000125E 7452                    		jz	short loc_12B0
  2730 00001260 B90D0A                  		mov	cx, 0A0Dh
  2731 00001263 FECC                    		dec	ah
  2732 00001265 744B                    		jz	short loc_12B0
  2733 00001267 B90F07                  		mov	cx, 70Fh
  2734                                  
  2735                                  loc_1268:				; CODE XREF: IOFUNC+3Aj IOFUNC+41j
  2736 0000126A B486                    		mov	ah, 86h	; ''
  2737                                  
  2738                                  loc_126A:				; CODE XREF: IOFUNC+9Ej
  2739 0000126C 880E[4701]              		mov	[IOCALL], cl
  2740 00001270 882E[4901]              		mov	[IOCALL_REQFUNC], ch
  2741 00001274 88E1                    		mov	cl, ah
  2742 00001276 1F                      		pop	ds
  2743 00001277 E8CC00                  		call	DEVIOCALL
  2744 0000127A 368B3E[4A01]            		mov	di, [ss:IOCALL_REQSTAT]
  2745 0000127F F7C70080                		test	di, 8000h
  2746 00001283 740F                    		jz	short loc_1292
  2747 00001285 88CC                    		mov	ah, cl
  2748 00001287 E8331A                  		call	CHARHARD
  2749 0000128A 3C01                    		cmp	al, 1
  2750 0000128C 7485                    		jz	short IOFUNC_RETRY
  2751 0000128E 368026[4B01]FD          		and	byte [ss:IOCALL_REQSTAT+1], 0FDh
  2752                                  
  2753                                  loc_1292:				; CODE XREF: IOFUNC+6Dj
  2754 00001294 16                      		push	ss
  2755 00001295 1F                      		pop	ds
  2756 00001296 80FD05                  		cmp	ch, 5
  2757 00001299 7506                    		jnz	short loc_129F
  2758 0000129B A0[5401]                		mov	al, [IOMED]  ; [IORCHR]
  2759 0000129E A2[3303]                		mov	[DEVIOBUF], al
  2760                                  
  2761                                  loc_129F:				; CODE XREF: IOFUNC+83j
  2762 000012A1 8A26[4B01]              		mov	ah, [IOCALL_REQSTAT+1]
  2763 000012A5 F6D4                    		not	ah
  2764 000012A7 80E402                  		and	ah, 2
  2765 000012AA E868F4                  		call	restore_world
  2766 000012AD 36A1[3303]              		mov	ax, [ss:DEVIOBUF]
  2767 000012B1 C3                      		retn
  2768                                  ; ---------------------------------------------------------------------------
  2769                                  
  2770                                  loc_12B0:				; CODE XREF: IOFUNC+48j IOFUNC+4Fj
  2771 000012B2 B487                    		mov	ah, 87h	; ''
  2772 000012B4 EBB6                    		jmp	short loc_126A
  2773                                  ; ---------------------------------------------------------------------------
  2774                                  
  2775                                  loc_12B4:				; CODE XREF: IOFUNC+1Dj
  2776 000012B6 08E4                    		or	ah, ah
  2777 000012B8 7426                    		jz	short IOIN
  2778 000012BA FECC                    		dec	ah
  2779 000012BC 7405                    		jz	short loc_12C1
  2780 000012BE FECC                    		dec	ah
  2781 000012C0 7411                    		jz	short loc_12D1
  2782 000012C2 C3                      		retn
  2783                                  ; ---------------------------------------------------------------------------
  2784                                  
  2785                                  loc_12C1:				; CODE XREF: IOFUNC+A6j
  2786 000012C3 FF7421                  		push	word [si+21h]
  2787 000012C6 FF7423                  		push	word [si+23h]
  2788 000012C9 E81400                  		call	IOIN
  2789 000012CC 8F4423                  		pop	word [si+23h]
  2790 000012CF 8F4421                  		pop	word [si+21h]
  2791 000012D2 C3                      		retn
  2792                                  ; ---------------------------------------------------------------------------
  2793                                  
  2794                                  loc_12D1:				; CODE XREF: IOFUNC+AAj
  2795 000012D3 E82300                  		call	SETXADDR
  2796 000012D6 E8FF07                  		call	STORE
  2797 000012D9 E88F15                  		call	FINNOSAV
  2798 000012DC E85000                  		call	RESTXADDR
  2799                                  
  2800                                  IOUT_RETN:				; CODE XREF: IOIN+14j
  2801 000012DF C3                      		retn
  2802                                  
  2803                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2804                                  
  2805                                  IOIN:					; CODE XREF: IOFUNC+A2j IOFUNC+B3p
  2806 000012E0 E81600                  		call	SETXADDR
  2807 000012E3 E8BB06                  		call	LOAD
  2808 000012E6 51                      		push	cx
  2809 000012E7 E88115                  		call	FINNOSAV
  2810 000012EA 59                      		pop	cx
  2811 000012EB 09C9                    		or	cx, cx
  2812 000012ED E83F00                  		call	RESTXADDR
  2813 000012F0 36A0[3303]              		mov	al, [ss:DEVIOBUF]
  2814 000012F4 75E9                    		jnz	short IOUT_RETN
  2815 000012F6 B01A                    		mov	al, 1Ah
  2816 000012F8 C3                      		retn
  2817                                  
  2818                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2819                                  
  2820                                  SETXADDR:				; CODE XREF: IOFUNC:loc_12D1p IOINp
  2821 000012F9 368F06[3F01]            		pop	word [ss:CALLBPB]
  2822 000012FE E828F4                  		call	save_world
  2823 00001301 36FF36[DF00]            		push	word [ss:DMAADD]
  2824 00001306 36FF36[E100]            		push	word [ss:DMAADD+2]
  2825 0000130B 1E                      		push	ds
  2826 0000130C 16                      		push	ss
  2827 0000130D 1F                      		pop	ds
  2828 0000130E 8B0E[5701]              		mov	cx, [IOXAD+2]
  2829 00001312 890E[E100]              		mov	word [DMAADD+2], cx
  2830 00001316 8B0E[5501]              		mov	cx, [IOXAD]
  2831 0000131A 890E[DF00]              		mov	word [DMAADD], cx
  2832 0000131E 8B0E[5901]              		mov	cx, [IOSCNT]
  2833 00001322 1F                      		pop	ds
  2834 00001323 C7440E0100              		mov	word [si+0Eh], 1
  2835 00001328 89F2                    		mov	dx, si
  2836 0000132A E81B10                  		call	GETRRPOS
  2837 0000132D EB12                    		jmp	short RESTRET
  2838                                  
  2839                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2840                                  
  2841                                  RESTXADDR:				; CODE XREF: IOFUNC+C6p IOIN+Dp
  2842 0000132F 368F06[3F01]            		pop	word [ss:CALLBPB]
  2843 00001334 368F06[E100]            		pop	word [ss:DMAADD+2]
  2844 00001339 368F06[DF00]            		pop	word [ss:DMAADD]
  2845 0000133E E8D4F3                  		call	restore_world
  2846                                  
  2847                                  RESTRET:				; CODE XREF: SETXADDR+34j
  2848 00001341 36FF26[3F01]            		jmp	word [ss:CALLBPB]   ; SS:CALLSCNT
  2849                                  
  2850                                  
  2851                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2852                                  
  2853                                  DEVIOCALL:			; CODE XREF: IOFUNC+61p LOAD+2Ep ...
  2854 00001346 C57419                  		lds	si, [si+19h]
  2855                                  
  2856                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2857                                  
  2858                                  DEVIOCALL2:			; CODE XREF: LOAD+7Cp STORE+A4p ...
  2859 00001349 8B4406                  		mov	ax, [si+6]
  2860 0000134C 36A3[4301]              		mov	[ss:CALLDEVAD], ax
  2861 00001350 368C1E[4501]            		mov	[ss:CALLDEVAD+2], ds
  2862 00001355 36FF1E[4301]            		call	far [ss:CALLDEVAD]
  2863 0000135A 8B4408                  		mov	ax, [si+8]
  2864 0000135D 36A3[4301]              		mov	[ss:CALLDEVAD], ax
  2865 00001361 36FF1E[4301]            		call	far [ss:CALLDEVAD]
  2866 00001366 C3                      		retn
  2867                                  
  2868                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2869                                  
  2870                                  DEVNAME:				; CODE XREF: FINDNAME+2p
  2871                                  					; GOTPRESTRING2+24p ...
  2872 00001367 56                      		push	si
  2873 00001368 57                      		push	di
  2874 00001369 51                      		push	cx
  2875 0000136A F606[4503]08            		test	byte [ATTRIB], 8
  2876 0000136F 7520                    		jnz	short loc_138F
  2877 00001371 BE[0701]                		mov	si, DEVHEAD
  2878                                  
  2879                                  LOOKIO:					; CODE XREF: DEVNAME+28j
  2880 00001374 F744040080              		test	word [si+4], 8000h
  2881 00001379 740F                    		jz	short loc_1388
  2882 0000137B 56                      		push	si
  2883 0000137C 83C60A                  		add	si, 10
  2884 0000137F BF[3903]                		mov	di, NAME1
  2885 00001382 B90400                  		mov	cx, 4
  2886 00001385 F3A7                    		repe cmpsw
  2887 00001387 5E                      		pop	si
  2888 00001388 740E                    		jz	short IOCHK
  2889                                  
  2890                                  loc_1388:				; CODE XREF: DEVNAME+12j
  2891 0000138A C534                    		lds	si, [si]
  2892 0000138C 83FEFF                  		cmp	si, 0FFFFh
  2893 0000138F 75E3                    		jnz	short LOOKIO
  2894                                  
  2895                                  loc_138F:				; CODE XREF: DEVNAME+8j
  2896 00001391 F9                      		stc
  2897                                  
  2898                                  loc_1390:				; CODE XREF: DEVNAME+44j
  2899 00001392 16                      		push	ss
  2900 00001393 1F                      		pop	ds
  2901 00001394 59                      		pop	cx
  2902 00001395 5F                      		pop	di
  2903 00001396 5E                      		pop	si
  2904 00001397 C3                      		retn
  2905                                  ; ---------------------------------------------------------------------------
  2906                                  
  2907                                  IOCHK:				; CODE XREF: DEVNAME+21j
  2908 00001398 368C1E[8303]            		mov	word [ss:DEVPT+2], ds
  2909 0000139D 8A7C04                  		mov	bh, [si+4]
  2910 000013A0 80CFC0                  		or	bh, 0C0h
  2911 000013A3 80E7DF                  		and	bh, 0DFh
  2912 000013A6 368936[8103]            		mov	word [ss:DEVPT], si
  2913 000013AB EBE5                    		jmp	short loc_1390
  2914                                  
  2915                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2916                                  
  2917                                  
  2918                                  GETBP:					; CODE XREF: seg000:0858p seg000:0892p ...
  2919 000013AD C42E[F000]              		les	bp, [DPBHEAD]
  2920 000013B1 243F                    		and	al, 3Fh
  2921 000013B3 3A06[0001]              		cmp	al, [NUMIO]
  2922 000013B7 F5                      		cmc
  2923 000013B8 720C                    		jb	short GOTDPB
  2924                                  
  2925                                  FNDDPB:					; CODE XREF: GETBP+17j
  2926 000013BA 263A4600                		cmp	al, [es:bp]
  2927 000013BE 7406                    		jz	short GOTDPB
  2928 000013C0 26C46E18                		les	bp, [es:bp+18h]
  2929 000013C4 EBF4                    		jmp	short FNDDPB
  2930                                  ; ---------------------------------------------------------------------------
  2931                                  
  2932                                  GOTDPB:					; CODE XREF: GETBP+Bj GETBP+11j
  2933 000013C6 892E[7003]              		mov	word [THISDPB], bp
  2934 000013CA 8C06[7203]              		mov	word [THISDPB+2], es
  2935 000013CE C3                      		retn
  2936                                  
  2937                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2938                                  
  2939                                  SETREAD:				; CODE XREF: LOAD+26p LOAD+6Dp ...
  2940 000013CF 57                      		push	di
  2941 000013D0 51                      		push	cx
  2942 000013D1 50                      		push	ax
  2943 000013D2 B104                    		mov	cl, 4
  2944                                  
  2945                                  SETCALLHEAD:				; CODE XREF: SETWRITE+Aj
  2946 000013D4 B016                    		mov	al, 16h
  2947 000013D6 16                      		push	ss
  2948 000013D7 07                      		pop	es
  2949 000013D8 BF[2D01]                		mov	di, DEVCALL
  2950 000013DB AA                      		stosb
  2951 000013DC 58                      		pop	ax
  2952 000013DD AA                      		stosb
  2953 000013DE 50                      		push	ax
  2954 000013DF 88C8                    		mov	al, cl
  2955 000013E1 AA                      		stosb
  2956 000013E2 31C0                    		xor	ax, ax
  2957 000013E4 AB                      		stosw
  2958 000013E5 83C708                  		add	di, 8
  2959 000013E8 58                      		pop	ax
  2960 000013E9 86E0                    		xchg	ah, al
  2961 000013EB AA                      		stosb
  2962 000013EC 86C4                    		xchg	al, ah
  2963 000013EE 50                      		push	ax
  2964 000013EF 89D8                    		mov	ax, bx
  2965 000013F1 AB                      		stosw
  2966 000013F2 8CD8                    		mov	ax, ds
  2967 000013F4 AB                      		stosw
  2968 000013F5 59                      		pop	cx
  2969 000013F6 58                      		pop	ax
  2970 000013F7 AB                      		stosw
  2971 000013F8 92                      		xchg	ax, dx
  2972 000013F9 AB                      		stosw
  2973 000013FA 91                      		xchg	ax, cx
  2974 000013FB 87D1                    		xchg	dx, cx
  2975 000013FD 5F                      		pop	di
  2976 000013FE BB[2D01]                		mov	bx, DEVCALL
  2977 00001401 C3                      		retn
  2978                                  
  2979                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2980                                  
  2981                                  SETWRITE:				; CODE XREF: STORE+35p	STORE+95p ...
  2982 00001402 57                      		push	di
  2983 00001403 51                      		push	cx
  2984 00001404 50                      		push	ax
  2985 00001405 B108                    		mov	cl, 8
  2986 00001407 36020E[DB00]            		add	cl, [ss:VERFLG]
  2987 0000140C EBC6                    		jmp	short SETCALLHEAD
  2988                                  
  2989                                  
  2990                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  2991                                  
  2992                                  BUILDDIR:				; CODE XREF: NEWENTRY-Ep
  2993 0000140E A1[A903]                		mov	ax, [ENTFREE]
  2994 00001411 83F8FF                  		cmp	ax, 0FFFFh
  2995 00001414 7576                    		jnz	short loc_148A
  2996 00001416 833E[9703]00            		cmp	word [DIRSTART], 0
  2997 0000141B 7502                    		jnz	short NEWDIR
  2998 0000141D F9                      		stc
  2999                                  
  3000                                  locret_141C:				; CODE XREF: BUILDDIR+22j
  3001 0000141E C3                      		retn
  3002                                  ; ---------------------------------------------------------------------------
  3003                                  
  3004                                  NEWDIR:					; CODE XREF: seg000:0E36p BUILDDIR+Dj
  3005 0000141F 8B1E[9703]              		mov	bx, [DIRSTART]
  3006 00001423 09DB                    		or	bx, bx
  3007 00001425 7403                    		jz	short loc_1428
  3008 00001427 E87411                  		call	GETEOF
  3009                                  
  3010                                  loc_1428:				; CODE XREF: BUILDDIR+17j
  3011 0000142A B90100                  		mov	cx, 1
  3012 0000142D E8BC10                  		call	ALLOCATE
  3013 00001430 72EC                    		jb	short locret_141C
  3014 00001432 8B16[9703]              		mov	dx, [DIRSTART]
  3015 00001436 09D2                    		or	dx, dx
  3016 00001438 750B                    		jnz	short loc_1443
  3017 0000143A E8F001                  		call	SETDIRSRCH
  3018 0000143D C706[2101]FFFF          		mov	word [LASTENT], 0FFFFh
  3019 00001443 EB13                    		jmp	short loc_1456
  3020                                  ; ---------------------------------------------------------------------------
  3021                                  
  3022                                  loc_1443:				; CODE XREF: BUILDDIR+2Aj
  3023 00001445 813E[9303]F80F          		cmp	word [CLUSNUM], 0FF8h
  3024 0000144B 7204                    		jb	short loc_144F
  3025 0000144D 891E[9303]              		mov	[CLUSNUM], bx
  3026                                  
  3027                                  loc_144F:				; CODE XREF: BUILDDIR+3Dj
  3028 00001451 89DA                    		mov	dx, bx
  3029 00001453 30DB                    		xor	bl, bl
  3030 00001455 E86310                  		call	FIGREC
  3031                                  
  3032                                  loc_1456:				; CODE XREF: BUILDDIR+35j
  3033 00001458 268A4E04                		mov	cl, [es:bp+4]
  3034 0000145C FEC1                    		inc	cl
  3035 0000145E 30ED                    		xor	ch, ch
  3036                                  
  3037                                  ZERODIR:				; CODE XREF: BUILDDIR+78j
  3038 00001460 51                      		push	cx
  3039 00001461 B0FF                    		mov	al, 0FFh
  3040 00001463 E81B12                  		call	GETBUFFR
  3041 00001466 268B4E02                		mov	cx, [es:bp+2]
  3042 0000146A 06                      		push	es
  3043 0000146B C43E[B303]              		les	di, [CURBUF]
  3044 0000146F 57                      		push	di
  3045 00001470 83C710                  		add	di, 10h
  3046 00001473 31C0                    		xor	ax, ax
  3047 00001475 D1E9                    		shr	cx, 1
  3048 00001477 F3AB                    		rep stosw
  3049 00001479 7301                    		jnb	short loc_147A
  3050 0000147B AA                      		stosb
  3051                                  
  3052                                  loc_147A:				; CODE XREF: BUILDDIR+6Bj
  3053 0000147C 5F                      		pop	di
  3054 0000147D FEC0                    		inc	al
  3055 0000147F 26884505                		mov	[es:di+5], al
  3056 00001483 07                      		pop	es
  3057 00001484 59                      		pop	cx
  3058 00001485 42                      		inc	dx
  3059 00001486 E2D8                    		loop	ZERODIR
  3060 00001488 A1[2101]                		mov	ax, [LASTENT]
  3061 0000148B 40                      		inc	ax
  3062                                  
  3063                                  loc_148A:				; CODE XREF: BUILDDIR+6j
  3064 0000148C F8                      		clc
  3065 0000148D C3                      		retn
  3066                                  
  3067                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3068                                  
  3069                                  SETDOTENT:				; CODE XREF: seg000:0E52p seg000:0E5Ap
  3070 0000148E B90400                  		mov	cx, 4
  3071 00001491 B82020                  		mov	ax, 2020h
  3072 00001494 F3AB                    		rep stosw
  3073 00001496 AA                      		stosb
  3074 00001497 8B36[8503]              		mov	si, word [THISFCB]
  3075 0000149B B010                    		mov	al, 10h
  3076 0000149D AA                      		stosb
  3077 0000149E 83C70A                  		add	di, 0Ah
  3078 000014A1 8B4416                  		mov	ax, [si+16h]
  3079 000014A4 AB                      		stosw
  3080 000014A5 8B4414                  		mov	ax, [si+14h]
  3081 000014A8 AB                      		stosw
  3082 000014A9 89D0                    		mov	ax, dx
  3083 000014AB AB                      		stosw
  3084 000014AC 31C0                    		xor	ax, ax
  3085 000014AE AB                      		stosw
  3086 000014AF AB                      		stosw
  3087                                  GETFILE_RETN:				; CODE XREF: GETFILE+3j
  3088 000014B0 C3                      		retn
  3089                                  
  3090                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3091                                  
  3092                                  GETFILE:				; CODE XREF: seg000:_$DIR_SEARCH_FIRSTp
  3093                                  					; seg000:_$GET_FCB_FILE_LENGTHp	...
  3094 000014B1 E8741A                  		call	MOVNAME
  3095 000014B4 72FA                    		jb	short GETFILE_RETN
  3096 000014B6 52                      		push	dx
  3097 000014B7 1E                      		push	ds
  3098 000014B8 E80800                  		call	FINDNAME
  3099 000014BB 07                      		pop	es
  3100 000014BC 5F                      		pop	di
  3101                                  GETNAME_RETN:				; CODE XREF: seg000:14BFj
  3102 000014BD C3                      		retn
  3103                                  
  3104                                  ; ---------------------------------------------------------------------------
  3105                                  
  3106                                  GETNAME:
  3107 000014BE E8671A                  		call	MOVNAME
  3108 000014C1 72FA                    		jb	short GETNAME_RETN
  3109                                  
  3110                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3111                                  
  3112                                  FINDNAME:				; CODE XREF: GETFILE+7p
  3113                                  					; seg000:loc_28C5p ...
  3114 000014C3 16                      		push	ss
  3115 000014C4 1F                      		pop	ds
  3116 000014C5 E89FFE                  		call	DEVNAME
  3117 000014C8 7204                    		jb	short FINDENTRY
  3118 000014CA E8331A                  		call	BUILDFCB
  3119 000014CD C3                      		retn
  3120                                  
  3121                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3122                                  
  3123                                  FINDENTRY:				; CODE XREF: FINDNAME+5j ROOTPATH+3Fp	...
  3124 000014CE E8DF03                  		call	STARTSRCH
  3125 000014D1 803E[4503]08            		cmp	byte [ATTRIB], 8
  3126 000014D6 7503                    		jnz	short loc_14D9
  3127 000014D8 E82A01                  		call	SETROOTSRCH
  3128                                  
  3129                                  loc_14D9:				; CODE XREF: FINDENTRY+8j
  3130 000014DB E88E00                  		call	GETENTRY
  3131                                  
  3132                                  SRCH:					; CODE XREF: seg000:104Ep
  3133                                  					; FINDENTRY+4Aj
  3134 000014DE 1E                      		push	ds
  3135 000014DF 8E1E[B503]              		mov	ds, [CURBUF+2]
  3136 000014E3 8A27                    		mov	ah, [bx]
  3137 000014E5 08E4                    		or	ah, ah
  3138 000014E7 7433                    		jz	short loc_151A
  3139 000014E9 363A26[6303]            		cmp	ah, byte [ss:DELALL]
  3140 000014EE 742C                    		jz	short loc_151A
  3141 000014F0 F6470B08                		test	byte [bx+0Bh], 8
  3142 000014F4 7405                    		jz	short loc_14F9
  3143 000014F6 36FE06[B703]            		inc	byte [ss:VOLID]
  3144                                  
  3145                                  loc_14F9:				; CODE XREF: FINDENTRY+26j
  3146 000014FB 89DE                    		mov	si, bx
  3147 000014FD 16                      		push	ss
  3148 000014FE 07                      		pop	es
  3149 000014FF BF[3903]                		mov	di, NAME1
  3150 00001502 B90B00                  		mov	cx, 11
  3151                                  
  3152                                  loc_1503:				; CODE XREF: FINDENTRY+40j
  3153 00001505 F3A6                    		repe cmpsb
  3154 00001507 742F                    		jz	short FOUND
  3155 00001509 26807DFF3F              		cmp	byte [es:di-1], 3Fh	; '?'
  3156 0000150E 74F5                    		jz	short loc_1503
  3157 00001510 1F                      		pop	ds
  3158                                  
  3159                                  NEXTENT:				; CODE XREF: seg000:0A1Cp
  3160                                  					; FINDENTRY+61j ...
  3161 00001511 C42E[7003]              		les	bp, [THISDPB]
  3162 00001515 E88200                  		call	NEXTENTRY
  3163 00001518 73C4                    		jnb	short SRCH
  3164 0000151A EB4D                    		jmp	short loc_1567
  3165                                  
  3166                                  loc_151A:				; CODE XREF: FINDENTRY+19j
  3167                                  					; FINDENTRY+20j
  3168 0000151C 1F                      		pop	ds
  3169 0000151D 8B0E[2101]              		mov	cx, [LASTENT]
  3170 00001521 3B0E[A903]              		cmp	cx, [ENTFREE]
  3171 00001525 7304                    		jnb	short loc_1529
  3172 00001527 890E[A903]              		mov	[ENTFREE], cx
  3173                                  
  3174                                  loc_1529:				; CODE XREF: FINDENTRY+57j
  3175 0000152B 3A26[6303]              		cmp	ah, [DELALL]
  3176 0000152F 74E0                    		jz	short NEXTENT
  3177 00001531 890E[AB03]              		mov	[ENTLAST], cx
  3178 00001535 F9                      		stc
  3179 00001536 EB31                    		jmp	short loc_1567
  3180                                  ; ---------------------------------------------------------------------------
  3181                                  
  3182                                  FOUND:				; CODE XREF: FINDENTRY+39j
  3183 00001538 8A2C                    		mov	ch, [si]
  3184 0000153A 1F                      		pop	ds
  3185 0000153B 8A26[4503]              		mov	ah, [ATTRIB]
  3186 0000153F F6C508                  		test	ch, 8
  3187 00001542 7409                    		jz	short loc_154B
  3188 00001544 F6C408                  		test	ah, 8
  3189 00001547 74C8                    		jz	short NEXTENT
  3190 00001549 30E4                    		xor	ah, ah
  3191 0000154B EB14                    		jmp	short loc_155F
  3192                                  ; ---------------------------------------------------------------------------
  3193                                  
  3194                                  loc_154B:				; CODE XREF: FINDENTRY+74j
  3195 0000154D 80FC08                  		cmp	ah, 8
  3196 00001550 74BF                    		jz	short NEXTENT
  3197 00001552 83C60F                  		add	si, 0Fh
  3198 00001555 E86C03                  		call	MatchAttributes
  3199 00001558 7407                    		jz	short loc_155F
  3200 0000155A F606[6203]FF            		test	byte [CREATING], 0FFh
  3201 0000155F 74B0                    		jz	short NEXTENT
  3202                                  
  3203                                  loc_155F:				; CODE XREF: FINDENTRY+7Dj
  3204                                  					; FINDENTRY+8Aj
  3205 00001561 C42E[7003]              		les	bp, [THISDPB]
  3206 00001565 268A6600                		mov	ah, [es:bp]
  3207                                  
  3208                                  loc_1567:				; CODE XREF: FINDENTRY+4Cj
  3209                                  					; FINDENTRY+68j
  3210 00001569 16                      		push	ss
  3211 0000156A 07                      		pop	es
  3212 0000156B C3                      		retn
  3213                                  
  3214                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3215                                  
  3216                                  GETENTRY:				; CODE XREF: seg000:1026p seg000:1046p ...
  3217 0000156C A1[2101]                		mov	ax, [LASTENT]
  3218                                  
  3219                                  GETENT:					; CODE XREF: seg000:0A19p seg000:0E3Bp ...
  3220 0000156F A3[2101]                		mov	[LASTENT], ax
  3221 00001572 B104                    		mov	cl, 4
  3222 00001574 D3E0                    		shl	ax, cl
  3223 00001576 31D2                    		xor	dx, dx
  3224 00001578 D1E0                    		shl	ax, 1
  3225 0000157A D1D2                    		rcl	dx, 1
  3226 0000157C 268B5E02                		mov	bx, [es:bp+2]
  3227 00001580 80E3E0                  		and	bl, 0E0h
  3228 00001583 F7F3                    		div	bx
  3229 00001585 89D3                    		mov	bx, dx
  3230 00001587 53                      		push	bx
  3231 00001588 E86906                  		call	DIRREAD
  3232 0000158B 5B                      		pop	bx
  3233                                  
  3234                                  SETENTRY:				; CODE XREF: NEXTENTRY+4Bj
  3235 0000158C 8B16[B303]              		mov	dx, [CURBUF]
  3236 00001590 83C210                  		add	dx, 10h
  3237 00001593 01D3                    		add	bx, dx
  3238 00001595 26035602                		add	dx, [es:bp+2]
  3239 00001599 C3                      		retn
  3240                                  
  3241                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3242                                  
  3243                                  NEXTENTRY:				; CODE XREF: FINDENTRY+47p
  3244 0000159A A1[2101]                		mov	ax, [LASTENT]
  3245 0000159D 3B06[AB03]              		cmp	ax, [ENTLAST]
  3246 000015A1 7425                    		jz	short NONE
  3247 000015A3 40                      		inc	ax
  3248 000015A4 83C320                  		add	bx, 20h	; ' '
  3249 000015A7 39D3                    		cmp	bx, dx
  3250 000015A9 721F                    		jb	short HAVIT
  3251 000015AB 8A1E[6B03]              		mov	bl, [SECCLUSPOS]
  3252 000015AF FEC3                    		inc	bl
  3253 000015B1 3A1E[7403]              		cmp	bl, [CLUSFAC]
  3254 000015B5 7218                    		jb	short SAMECLUS
  3255 000015B7 8B1E[AD03]              		mov	bx, [NXTCLUSNUM]
  3256 000015BB 81FBF80F                		cmp	bx, 0FF8h
  3257 000015BF 7307                    		jnb	short NONE
  3258 000015C1 83FB02                  		cmp	bx, 2
  3259 000015C4 7202                    		jb	short NONE
  3260 000015C6 EBA7                    		jmp	short GETENT
  3261                                  
  3262                                  NONE:					; CODE XREF: NEXTENTRY+7j
  3263                                  					; NEXTENTRY+25j ...
  3264 000015C8 F9                      		stc
  3265 000015C9 C3                      		retn
  3266                                  
  3267                                  HAVIT:					; CODE XREF: NEXTENTRY+Fj
  3268 000015CA A3[2101]                		mov	[LASTENT], ax
  3269 000015CD F8                      		clc
  3270 000015CE C3                      		retn
  3271                                  ; ---------------------------------------------------------------------------
  3272                                  
  3273                                  SAMECLUS:				; CODE XREF: NEXTENTRY+1Bj
  3274 000015CF 881E[6B03]              		mov	byte [SECCLUSPOS], bl
  3275 000015D3 A3[2101]                		mov	[LASTENT], ax
  3276 000015D6 1E                      		push	ds
  3277 000015D7 C53E[B303]              		lds	di, [CURBUF]
  3278 000015DB 8B5508                  		mov	dx, [di+8]
  3279 000015DE 42                      		inc	dx
  3280 000015DF 1F                      		pop	ds
  3281 000015E0 E84A06                  		call	FIRSTCLUSTER
  3282 000015E3 31DB                    		xor	bx, bx
  3283 000015E5 EBA5                    		jmp	short SETENTRY
  3284                                  
  3285                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3286                                  
  3287                                  
  3288                                  GETCURRDIR:				; CODE XREF: seg000:0FEBp GETPATH+3Ap	...
  3289                                  
  3290                                  ; FUNCTION CHUNK AT 1623 SIZE 00000008 BYTES
  3291                                  
  3292 000015E7 268B5E1C                		mov	bx, [es:bp+1Ch]
  3293 000015EB 09DB                    		or	bx, bx
  3294 000015ED 7416                    		jz	short SETROOTSRCH
  3295 000015EF 81FBF80F                		cmp	bx, 0FF8h
  3296 000015F3 7238                    		jb	short SETDIRSRCH
  3297 000015F5 06                      		push	es
  3298 000015F6 1F                      		pop	ds
  3299 000015F7 8D761E                  		lea	si, [bp+1Eh]
  3300 000015FA E8F201                  		call	ROOTPATH
  3301 000015FD 7326                    		jnb	short SETCURR
  3302 000015FF 26C7461C0000            		mov	word [es:bp+1Ch], 0
  3303                                  
  3304                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3305                                  
  3306                                  SETROOTSRCH:				; CODE XREF: FINDENTRY+Ap
  3307                                  					; GETCURRDIR+6j ...
  3308 00001605 16                      		push	ss
  3309 00001606 1F                      		pop	ds
  3310 00001607 31C0                    		xor	ax, ax
  3311 00001609 A3[9703]                		mov	[DIRSTART], ax
  3312 0000160C A2[6B03]                		mov	[SECCLUSPOS], al
  3313 0000160F 48                      		dec	ax
  3314 00001610 A3[9303]                		mov	[CLUSNUM], ax
  3315 00001613 268B460B                		mov	ax, [es:bp+0Bh]
  3316 00001617 268B5610                		mov	dx, [es:bp+10h]
  3317 0000161B 29D0                    		sub	ax, dx
  3318 0000161D A2[7403]                		mov	[CLUSFAC], al
  3319 00001620 8916[9503]              		mov	[DIRSEC], dx
  3320 00001624 C3                      		retn
  3321                                  
  3322                                  ; ---------------------------------------------------------------------------
  3323                                  ; START	OF FUNCTION CHUNK FOR GETCURRDIR
  3324                                  
  3325                                  SETCURR:				; CODE XREF: GETCURRDIR+16j
  3326 00001625 A1[9703]                		mov	ax, [DIRSTART]
  3327 00001628 2689461C                		mov	[es:bp+1Ch], ax
  3328 0000162C C3                      		retn
  3329                                  ; END OF FUNCTION CHUNK	FOR GETCURRDIR
  3330                                  
  3331                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3332                                  
  3333                                  SETDIRSRCH:				; CODE XREF: seg000:0A0Fp BUILDDIR+2Cp ...
  3334 0000162D 09DB                    		or	bx, bx
  3335 0000162F 74D4                    		jz	short SETROOTSRCH
  3336 00001631 16                      		push	ss
  3337 00001632 1F                      		pop	ds
  3338 00001633 891E[9703]              		mov	[DIRSTART], bx
  3339 00001637 268A4604                		mov	al, [es:bp+4]
  3340 0000163B FEC0                    		inc	al
  3341 0000163D A2[7403]                		mov	[CLUSFAC], al
  3342 00001640 E8E70A                  		call	UNPACK
  3343 00001643 893E[9303]              		mov	[CLUSNUM], di
  3344 00001647 89DA                    		mov	dx, bx
  3345 00001649 30DB                    		xor	bl, bl
  3346 0000164B 881E[6B03]              		mov	[SECCLUSPOS], bl
  3347 0000164F E8690E                  		call	FIGREC
  3348 00001652 8916[9503]              		mov	[DIRSEC], dx
  3349 00001656 C3                      		retn
  3350                                  
  3351                                  ; ---------------------------------------------------------------------------
  3352                                  
  3353                                  MAKENODE:				; CODE XREF: seg000:0E18p seg000:3B0Ep ...
  3354 00001657 50                      		push	ax
  3355 00001658 E89E00                  		call	GETPATH
  3356 0000165B 88CA                    		mov	dl, cl
  3357 0000165D 59                      		pop	cx
  3358 0000165E 36880E[4503]            		mov	byte [ss:ATTRIB], cl
  3359 00001663 89C1                    		mov	cx, ax
  3360 00001665 730F                    		jnb	short loc_1674
  3361 00001667 7504                    		jnz	short loc_166B
  3362 00001669 08D2                    		or	dl, dl
  3363 0000166B 7504                    		jnz	short loc_166F
  3364                                  
  3365                                  loc_166B:				; CODE XREF: seg000:1665j
  3366 0000166D B004                    		mov	al, 4
  3367                                  
  3368                                  loc_166D:				; CODE XREF: seg000:169Aj seg000:16AAj
  3369 0000166F F9                      		stc
  3370 00001670 C3                      		retn
  3371                                  ; ---------------------------------------------------------------------------
  3372                                  
  3373                                  loc_166F:				; CODE XREF: seg000:1669j
  3374 00001671 30C0                    		xor	al, al
  3375 00001673 F9                      		stc
  3376 00001674 EB3A                    		jmp	short loc_16AE
  3377                                  ; ---------------------------------------------------------------------------
  3378                                  
  3379                                  loc_1674:				; CODE XREF: seg000:1663j
  3380 00001676 742C                    		jz	short loc_16A2
  3381 00001678 B003                    		mov	al, 3
  3382 0000167A 36F606[4503]18          		test	byte [ss:ATTRIB], 18h
  3383 00001680 7518                    		jnz	short loc_1698
  3384 00001682 08ED                    		or	ch, ch
  3385 00001684 7818                    		js	short loc_169C
  3386 00001686 51                      		push	cx
  3387 00001687 368E1E[B503]            		mov	ds, [ss:CURBUF+2]
  3388 0000168C 8A6F0B                  		mov	ch, [bx+0Bh]
  3389 0000168F F6C501                  		test	ch, 1
  3390 00001692 7503                    		jnz	short loc_1695
  3391 00001694 E82D02                  		call	MatchAttributes
  3392                                  
  3393                                  loc_1695:				; CODE XREF: seg000:1690j
  3394 00001697 59                      		pop	cx
  3395 00001698 7404                    		jz	short loc_169C
  3396                                  
  3397                                  loc_1698:				; CODE XREF: seg000:167Ej
  3398 0000169A B005                    		mov	al, 5
  3399 0000169C EBD1                    		jmp	short loc_166D
  3400                                  ; ---------------------------------------------------------------------------
  3401                                  
  3402                                  loc_169C:				; CODE XREF: seg000:1682j seg000:1696j
  3403 0000169E 30C0                    		xor	al, al
  3404 000016A0 B003                    		mov	al, 3
  3405 000016A2 EB0C                    		jmp	short loc_16AE
  3406                                  ; ---------------------------------------------------------------------------
  3407                                  
  3408                                  loc_16A2:				; CODE XREF: seg000:loc_1674j
  3409 000016A4 B001                    		mov	al, 1
  3410 000016A6 36F606[4503]10          		test	byte [ss:ATTRIB], 10h
  3411 000016AC 74C1                    		jz	short loc_166D
  3412 000016AE F8                      		clc
  3413 000016AF C3                      		retn
  3414                                  ; ---------------------------------------------------------------------------
  3415                                  
  3416                                  loc_16AE:				; CODE XREF: seg000:1672j seg000:16A0j
  3417 000016B0 50                      		push	ax
  3418 000016B1 16                      		push	ss
  3419 000016B2 1F                      		pop	ds
  3420 000016B3 9C                      		pushf
  3421 000016B4 803E[3903]2E            		cmp	byte [NAME1], 2Eh ; '.'
  3422 000016B9 7505                    		jnz	short loc_16BE
  3423 000016BB 9D                      		popf
  3424 000016BC B001                    		mov	al, 1
  3425 000016BE EB10                    		jmp	short loc_16CE
  3426                                  ; ---------------------------------------------------------------------------
  3427                                  
  3428                                  loc_16BE:				; CODE XREF: seg000:16B7j
  3429 000016C0 9D                      		popf
  3430 000016C1 06                      		push	es
  3431 000016C2 C43E[8503]              		les	di, [THISFCB]
  3432 000016C6 1E                      		push	ds
  3433 000016C7 57                      		push	di
  3434 000016C8 06                      		push	es
  3435 000016C9 89C8                    		mov	ax, cx
  3436 000016CB E8E313                  		call	NEWENTRY
  3437 000016CE 1F                      		pop	ds
  3438 000016CF 07                      		pop	es
  3439                                  
  3440                                  loc_16CE:				; CODE XREF: seg000:16BCj
  3441 000016D0 08C0                    		or	al, al
  3442 000016D2 58                      		pop	ax
  3443 000016D3 7404                    		jz	short loc_16D7
  3444 000016D5 B002                    		mov	al, 2
  3445 000016D7 F9                      		stc
  3446 000016D8 C3                      		retn
  3447                                  ; ---------------------------------------------------------------------------
  3448                                  
  3449                                  loc_16D7:				; CODE XREF: seg000:16D1j
  3450 000016D9 06                      		push	es
  3451 000016DA C43E[8503]              		les	di, [THISFCB]
  3452 000016DE 47                      		inc	di
  3453 000016DF 1E                      		push	ds
  3454 000016E0 56                      		push	si
  3455 000016E1 8E1E[B503]              		mov	ds, [CURBUF+2]
  3456 000016E5 89DE                    		mov	si, bx
  3457 000016E7 B90B00                  		mov	cx, 0Bh
  3458 000016EA F3A4                    		rep movsb
  3459 000016EC 5E                      		pop	si
  3460 000016ED 1F                      		pop	ds
  3461 000016EE 07                      		pop	es
  3462 000016EF 3C01                    		cmp	al, 1
  3463 000016F1 7704                    		ja	short loc_16F5
  3464 000016F3 08C0                    		or	al, al
  3465 000016F5 F8                      		clc
  3466 000016F6 C3                      		retn
  3467                                  ; ---------------------------------------------------------------------------
  3468                                  
  3469                                  loc_16F5:				; CODE XREF: seg000:16EFj
  3470 000016F7 F9                      		stc
  3471                                  
  3472                                  locret_16F6:				; CODE XREF: seg000:1743j
  3473 000016F8 C3                      		retn
  3474                                  
  3475                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3476                                  
  3477                                  
  3478                                  GETPATH:				; CODE XREF: seg000:0EB5p seg000:0FD3p ...
  3479                                  
  3480                                  ; FUNCTION CHUNK AT 174C SIZE 00000057 BYTES
  3481                                  
  3482 000016F9 31C0                    		xor	ax, ax
  3483 000016FB 36A3[7503]              		mov	[ss:DRIVESPEC], ax
  3484 000016FF 36C606[4503]16          		mov	byte [ss:ATTRIB], 16h
  3485 00001705 AC                      		lodsb
  3486 00001706 E8E818                  		call	PATHCHRCMP
  3487 00001709 7443                    		jz	short DEFAULTROOT
  3488 0000170B 88C4                    		mov	ah, al
  3489 0000170D AC                      		lodsb
  3490 0000170E 3C3A                    		cmp	al, ':'
  3491 00001710 7465                    		jz	short DRVSPEC
  3492 00001712 4E                      		dec	si
  3493 00001713 4E                      		dec	si
  3494 00001714 1E                      		push	ds
  3495 00001715 56                      		push	si
  3496 00001716 16                      		push	ss
  3497 00001717 07                      		pop	es
  3498 00001718 36803E[E600]00          		cmp	byte [ss:device_availability], 0
  3499 0000171E 7405                    		jz	short loc_1723
  3500 00001720 E8A400                  		call	GOTPRESTRING2
  3501 00001723 7348                    		jnb	short loc_176B
  3502                                  
  3503                                  loc_1723:				; CODE XREF: GETPATH+25j
  3504 00001725 E81800                  		call	DEFPATH
  3505                                  
  3506                                  loc_1726:				; CODE XREF: GETPATH+A4j
  3507 00001728 36A0[D500]              		mov	al, [ss:NoSetDir]
  3508 0000172C 50                      		push	ax
  3509 0000172D 36C606[D500]00          		mov	byte [ss:NoSetDir], 0
  3510 00001733 E8B1FE                  		call	GETCURRDIR
  3511 00001736 58                      		pop	ax
  3512 00001737 36A2[D500]              		mov	[ss:NoSetDir], al
  3513 0000173B 5E                      		pop	si
  3514 0000173C 1F                      		pop	ds
  3515 0000173D E9B400                  		jmp	FINDPATH
  3516                                  
  3517                                  ; ---------------------------------------------------------------------------
  3518                                  
  3519                                  DEFPATH:				; CODE XREF: GETPATH:loc_1723p
  3520                                  					; GETPATH+57p
  3521 00001740 30C0                    		xor	al, al
  3522                                  
  3523                                  DRVPATH:				; CODE XREF: GETPATH+94p
  3524 00001742 E89B04                  		call	GETTHISDRV
  3525 00001745 72B1                    		jb	short locret_16F6
  3526 00001747 16                      		push	ss
  3527 00001748 1F                      		pop	ds
  3528 00001749 E8DF0A                  		call	FATREAD
  3529 0000174C F8                      		clc
  3530 0000174D C3                      		retn
  3531                                  ; ---------------------------------------------------------------------------
  3532                                  ; START	OF FUNCTION CHUNK FOR GETPATH
  3533                                  
  3534                                  DEFAULTROOT:				; CODE XREF: GETPATH+10j
  3535 0000174E 1E                      		push	ds
  3536 0000174F 56                      		push	si
  3537 00001750 E8EDFF                  		call	DEFPATH
  3538 00001753 5E                      		pop	si
  3539 00001754 1F                      		pop	ds
  3540                                  
  3541                                  loc_1753:				; CODE XREF: GETPATH+9Fj
  3542 00001755 36FE06[7603]            		inc	byte [ss:ROOTSTART]
  3543 0000175A 803C00                  		cmp	byte [si], 0
  3544 0000175D 7440                    		jz	short loc_179D
  3545 0000175F 1E                      		push	ds
  3546 00001760 56                      		push	si
  3547 00001761 06                      		push	es
  3548 00001762 E84000                  		call	CHKDEV
  3549 00001765 07                      		pop	es
  3550 00001766 7305                    		jnb	short loc_176B
  3551 00001768 5E                      		pop	si
  3552 00001769 1F                      		pop	ds
  3553 0000176A E98200                  		jmp	ROOTPATH
  3554                                  ; ---------------------------------------------------------------------------
  3555                                  
  3556                                  loc_176B:				; CODE XREF: GETPATH+2Aj GETPATH+6Dj ...
  3557 0000176D 58                      		pop	ax
  3558 0000176E 58                      		pop	ax
  3559 0000176F 16                      		push	ss
  3560 00001770 07                      		pop	es
  3561 00001771 E88C17                  		call	BUILDFCB
  3562 00001774 FEC0                    		inc	al
  3563                                  
  3564                                  locret_1774:				; CODE XREF: GETPATH+99j
  3565 00001776 C3                      		retn
  3566                                  ; ---------------------------------------------------------------------------
  3567                                  
  3568                                  DRVSPEC:				; CODE XREF: GETPATH+17j
  3569 00001777 36FE06[7503]            		inc	byte [ss:DRIVESPEC]
  3570 0000177C 88E0                    		mov	al, ah
  3571 0000177E 0C20                    		or	al, 20h
  3572 00001780 2C60                    		sub	al, 60h	; '`'
  3573 00001782 1E                      		push	ds
  3574 00001783 56                      		push	si
  3575 00001784 50                      		push	ax
  3576 00001785 16                      		push	ss
  3577 00001786 07                      		pop	es
  3578 00001787 E83D00                  		call	GOTPRESTRING2
  3579 0000178A 58                      		pop	ax
  3580 0000178B 73E0                    		jnb	short loc_176B
  3581 0000178D E8B2FF                  		call	DRVPATH
  3582 00001790 5E                      		pop	si
  3583 00001791 1F                      		pop	ds
  3584 00001792 72E2                    		jb	short locret_1774
  3585 00001794 AC                      		lodsb
  3586 00001795 E85918                  		call	PATHCHRCMP
  3587 00001798 74BB                    		jz	short loc_1753
  3588 0000179A 4E                      		dec	si
  3589 0000179B 1E                      		push	ds
  3590 0000179C 56                      		push	si
  3591 0000179D EB89                    		jmp	short loc_1726
  3592                                  ; ---------------------------------------------------------------------------
  3593                                  
  3594                                  loc_179D:				; CODE XREF: GETPATH+64j
  3595 0000179F E863FE                  		call	SETROOTSRCH
  3596 000017A2 30C0                    		xor	al, al
  3597 000017A4 C3                      		retn
  3598                                  ; END OF FUNCTION CHUNK	FOR GETPATH
  3599                                  
  3600                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3601                                  
  3602                                  
  3603                                  CHKDEV:					; CODE XREF: GETPATH+69p
  3604 000017A5 16                      		push	ss
  3605 000017A6 07                      		pop	es
  3606 000017A7 BF0400                  		mov	di, 4
  3607 000017AA 31C9                    		xor	cx, cx
  3608 000017AC 368A0E[0300]            		mov	cl, [ss:DEVSTRLEN]
  3609                                  
  3610                                  loc_17AF:				; CODE XREF: CHKDEV+18j
  3611 000017B1 F3A6                    		repe cmpsb
  3612 000017B3 740C                    		jz	short loc_17BF
  3613 000017B5 4E                      		dec	si
  3614 000017B6 E8E317                  		call	GETLET
  3615 000017B9 263A45FF                		cmp	al, [es:di-1]
  3616 000017BD 74F2                    		jz	short loc_17AF
  3617                                  
  3618                                  loc_17BD:				; CODE XREF: CHKDEV+20j
  3619 000017BF F9                      		stc
  3620 000017C0 C3                      		retn
  3621                                  ; ---------------------------------------------------------------------------
  3622                                  
  3623                                  loc_17BF:				; CODE XREF: CHKDEV+Ej
  3624 000017C1 AC                      		lodsb
  3625 000017C2 E82C18                  		call	PATHCHRCMP
  3626 000017C5 75F8                    		jnz	short loc_17BD
  3627                                  
  3628                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3629                                  
  3630                                  
  3631                                  GOTPRESTRING2:				; CODE XREF: GETPATH+27p GETPATH+8Ep
  3632 000017C7 BF[3903]                		mov	di, NAME1
  3633 000017CA B90900                  		mov	cx, 9
  3634                                  
  3635                                  loc_17CB:				; CODE XREF: GOTPRESTRING2+17j
  3636 000017CD E8CC17                  		call	GETLET
  3637 000017D0 3C2E                    		cmp	al, '.'
  3638 000017D2 740E                    		jz	short loc_17E0
  3639 000017D4 E81A18                  		call	PATHCHRCMP
  3640 000017D7 7407                    		jz	short loc_17DE
  3641 000017D9 08C0                    		or	al, al
  3642 000017DB 7405                    		jz	short loc_17E0
  3643 000017DD AA                      		stosb
  3644 000017DE E2ED                    		loop	loc_17CB
  3645                                  
  3646                                  loc_17DE:				; CODE XREF: GOTPRESTRING2+10j
  3647 000017E0 F9                      		stc
  3648 000017E1 C3                      		retn
  3649                                  ; ---------------------------------------------------------------------------
  3650                                  
  3651                                  loc_17E0:				; CODE XREF: GOTPRESTRING2+Bj
  3652                                  					; GOTPRESTRING2+14j
  3653 000017E2 83C102                  		add	cx, 2
  3654 000017E5 B020                    		mov	al, 20h	; ' '
  3655 000017E7 F3AA                    		rep stosb
  3656 000017E9 16                      		push	ss
  3657 000017EA 1F                      		pop	ds
  3658 000017EB E879FB                  		call	DEVNAME
  3659 000017EE C3                      		retn
  3660                                  
  3661                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3662                                  
  3663                                  ROOTPATH:				; CODE XREF: GETCURRDIR+13p
  3664                                  					; GETPATH+71j
  3665 000017EF 1E                      		push	ds
  3666 000017F0 E812FE                  		call	SETROOTSRCH
  3667 000017F3 1F                      		pop	ds
  3668                                  
  3669                                  FINDPATH:				; CODE XREF: GETPATH+44j ROOTPATH+9Ej
  3670 000017F4 06                      		push	es
  3671 000017F5 56                      		push	si
  3672 000017F6 E8C916                  		call	NAMETRANS
  3673 000017F9 88C1                    		mov	cl, al
  3674 000017FB 80C980                  		or	cl, 80h
  3675 000017FE 5F                      		pop	di
  3676 000017FF 07                      		pop	es
  3677 00001800 39FE                    		cmp	si, di
  3678 00001802 7503                    		jnz	short check_device
  3679 00001804 E98A00                  		jmp	BADPATH
  3680                                  ; ---------------------------------------------------------------------------
  3681                                  
  3682                                  check_device:				; CODE XREF: ROOTPATH+13j
  3683 00001807 1E                      		push	ds
  3684 00001808 56                      		push	si
  3685 00001809 8A04                    		mov	al, [si]
  3686 0000180B 16                      		push	ss
  3687 0000180C 1F                      		pop	ds
  3688 0000180D 803E[E600]00            		cmp	byte [device_availability], 0
  3689 00001812 7417                    		jz	short FindFile
  3690 00001814 06                      		push	es
  3691 00001815 16                      		push	ss
  3692 00001816 07                      		pop	es
  3693 00001817 E84DFB                  		call	DEVNAME
  3694 0000181A 07                      		pop	es
  3695 0000181B 720E                    		jb	short FindFile
  3696 0000181D 08C0                    		or	al, al
  3697 0000181F 7574                    		jnz	short loc_1893
  3698 00001821 5E                      		pop	si
  3699 00001822 5E                      		pop	si
  3700 00001823 16                      		push	ss
  3701 00001824 07                      		pop	es
  3702 00001825 E8D816                  		call	BUILDFCB
  3703 00001828 FEC0                    		inc	al
  3704 0000182A C3                      		retn
  3705                                  ; ---------------------------------------------------------------------------
  3706                                  
  3707                                  FindFile:				; CODE XREF: ROOTPATH+23j ROOTPATH+2Cj
  3708 0000182B 57                      		push	di
  3709 0000182C 06                      		push	es
  3710 0000182D 51                      		push	cx
  3711 0000182E E89DFC                  		call	FINDENTRY
  3712 00001831 59                      		pop	cx
  3713 00001832 07                      		pop	es
  3714 00001833 5F                      		pop	di
  3715 00001834 7270                    		jb	short loc_18A4
  3716 00001836 C53E[B303]              		lds	di, [CURBUF]
  3717 0000183A F6470B10                		test	byte [bx+0Bh], 10h
  3718 0000183E 7455                    		jz	short loc_1893
  3719 00001840 36803E[D500]00          		cmp	byte [ss:NoSetDir], 0
  3720 00001846 7411                    		jz	short loc_1857
  3721 00001848 89FA                    		mov	dx, di
  3722 0000184A 8CD8                    		mov	ax, ds
  3723 0000184C 5F                      		pop	di
  3724 0000184D 1F                      		pop	ds
  3725 0000184E 803D00                  		cmp	byte [di], 0
  3726 00001851 7450                    		jz	short loc_18A1
  3727 00001853 1E                      		push	ds
  3728 00001854 57                      		push	di
  3729 00001855 89D7                    		mov	di, dx
  3730 00001857 8ED8                    		mov	ds, ax
  3731                                  
  3732                                  loc_1857:				; CODE XREF: ROOTPATH+57j
  3733 00001859 8B14                    		mov	dx, [si]
  3734 0000185B 29FB                    		sub	bx, di
  3735 0000185D 29FE                    		sub	si, di
  3736 0000185F 53                      		push	bx
  3737 00001860 50                      		push	ax
  3738 00001861 56                      		push	si
  3739 00001862 51                      		push	cx
  3740 00001863 FF7508                  		push	word [di+8]
  3741 00001866 89D3                    		mov	bx, dx
  3742 00001868 E8C2FD                  		call	SETDIRSRCH
  3743 0000186B 5A                      		pop	dx
  3744 0000186C 30C0                    		xor	al, al
  3745 0000186E E8100E                  		call	GETBUFFR
  3746 00001871 59                      		pop	cx
  3747 00001872 5E                      		pop	si
  3748 00001873 58                      		pop	ax
  3749 00001874 5B                      		pop	bx
  3750 00001875 8B3E[B303]              		mov	di, [CURBUF]
  3751 00001879 01FE                    		add	si, di
  3752 0000187B 01FB                    		add	bx, di
  3753 0000187D 5F                      		pop	di
  3754 0000187E 1F                      		pop	ds
  3755 0000187F 8A05                    		mov	al, [di]
  3756 00001881 08C0                    		or	al, al
  3757 00001883 741E                    		jz	short loc_18A1
  3758 00001885 47                      		inc	di
  3759 00001886 89FE                    		mov	si, di
  3760 00001888 E86617                  		call	PATHCHRCMP
  3761 0000188B 7503                    		jnz	short loc_188E
  3762 0000188D E964FF                  		jmp	FINDPATH
  3763                                  ; ---------------------------------------------------------------------------
  3764                                  
  3765                                  loc_188E:				; CODE XREF: ROOTPATH+9Cj
  3766 00001890 4E                      		dec	si
  3767                                  
  3768                                  BADPATH:				; CODE XREF: ROOTPATH+15j
  3769 00001891 30C9                    		xor	cl, cl
  3770 00001893 F9                      		stc
  3771 00001894 C3                      		retn
  3772                                  ; ---------------------------------------------------------------------------
  3773                                  
  3774                                  loc_1893:				; CODE XREF: ROOTPATH+30j ROOTPATH+4Fj
  3775 00001895 5F                      		pop	di
  3776 00001896 1F                      		pop	ds
  3777 00001897 8A05                    		mov	al, [di]
  3778 00001899 08C0                    		or	al, al
  3779 0000189B 7404                    		jz	short loc_189F
  3780 0000189D 89FE                    		mov	si, di
  3781 0000189F F9                      		stc
  3782 000018A0 C3                      		retn
  3783                                  ; ---------------------------------------------------------------------------
  3784                                  
  3785                                  loc_189F:				; CODE XREF: ROOTPATH+ACj
  3786 000018A1 FEC0                    		inc	al
  3787                                  
  3788                                  loc_18A1:				; CODE XREF: ROOTPATH+62j ROOTPATH+94j
  3789 000018A3 16                      		push	ss
  3790 000018A4 1F                      		pop	ds
  3791 000018A5 C3                      		retn
  3792                                  ; ---------------------------------------------------------------------------
  3793                                  
  3794                                  loc_18A4:				; CODE XREF: ROOTPATH+45j
  3795 000018A6 5E                      		pop	si
  3796 000018A7 1F                      		pop	ds
  3797 000018A8 8A04                    		mov	al, [si]
  3798 000018AA 89FE                    		mov	si, di
  3799 000018AC 08C0                    		or	al, al
  3800 000018AE F9                      		stc
  3801 000018AF C3                      		retn
  3802                                  
  3803                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3804                                  
  3805                                  
  3806                                  STARTSRCH:				; CODE XREF: seg000:1023p FINDENTRYp
  3807 000018B0 C42E[7003]              		les	bp, [THISDPB]
  3808 000018B4 31C0                    		xor	ax, ax
  3809 000018B6 A3[2101]                		mov	[LASTENT], ax
  3810 000018B9 A2[B703]                		mov	[VOLID], al
  3811 000018BC 48                      		dec	ax
  3812 000018BD A3[A903]                		mov	[ENTFREE], ax
  3813 000018C0 A3[AB03]                		mov	[ENTLAST], ax
  3814 000018C3 C3                      		retn
  3815                                  
  3816                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3817                                  
  3818                                  
  3819                                  MatchAttributes:			; CODE XREF: FINDENTRY+87p
  3820                                  					; seg000:1692p	...
  3821 000018C4 50                      		push	ax
  3822 000018C5 36A0[4503]              		mov	al, byte [ss:ATTRIB]
  3823 000018C9 F6D0                    		not	al
  3824 000018CB 20E8                    		and	al, ch
  3825 000018CD 2416                    		and	al, 16h
  3826 000018CF 58                      		pop	ax
  3827 000018D0 C3                      		retn
  3828                                  
  3829                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3830                                  
  3831                                  
  3832                                  SWAPBACK:				; CODE XREF: LOAD+E2p STORE+2Ep ...
  3833 000018D1 06                      		push	es
  3834 000018D2 57                      		push	di
  3835 000018D3 56                      		push	si
  3836 000018D4 53                      		push	bx
  3837 000018D5 BB0100                  		mov	bx, 1
  3838 000018D8 E8F124                  		call	get_sf_from_jfn
  3839 000018DB 83C703                  		add	di, 3
  3840 000018DE 8A1E[C103]              		mov	bl, byte [COUTDSAV]
  3841 000018E2 C536[C203]              		lds	si, [COUTSAV]
  3842 000018E6 26897519                		mov	[es:di+19h], si
  3843 000018EA 268C5D1B                		mov	[es:di+1Bh], ds
  3844 000018EE 26885D18                		mov	[es:di+18h], bl
  3845 000018F2 16                      		push	ss
  3846 000018F3 1F                      		pop	ds
  3847 000018F4 31DB                    		xor	bx, bx
  3848 000018F6 E8D324                  		call	get_sf_from_jfn
  3849 000018F9 83C703                  		add	di, 3
  3850 000018FC 8A1E[C003]              		mov	bl, byte [CINDSAV]
  3851 00001900 C536[BC03]              		lds	si, [CINSAV]
  3852 00001904 26897519                		mov	[es:di+19h], si
  3853 00001908 268C5D1B                		mov	[es:di+1Bh], ds
  3854 0000190C 26885D18                		mov	[es:di+18h], bl
  3855 00001910 16                      		push	ss
  3856 00001911 1F                      		pop	ds
  3857 00001912 C606[2601]00            		mov	byte [CONSWAP], 0
  3858 00001917 C606[2701]01            		mov	byte [IDLEINT], 1
  3859                                  
  3860                                  SWAPRET:				; CODE XREF: SWAPCON+7Dj
  3861 0000191C 5B                      		pop	bx
  3862 0000191D 5E                      		pop	si
  3863 0000191E 5F                      		pop	di
  3864 0000191F 07                      		pop	es
  3865 00001920 C3                      		retn
  3866                                  
  3867                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3868                                  
  3869                                  
  3870                                  SWAPCON:				; CODE XREF: LOAD:READCONp STORE+19p
  3871 00001921 06                      		push	es
  3872 00001922 57                      		push	di
  3873 00001923 56                      		push	si
  3874 00001924 53                      		push	bx
  3875 00001925 C606[2601]01            		mov	byte [CONSWAP], 1
  3876 0000192A C606[2701]00            		mov	byte [IDLEINT], 0
  3877 0000192F 31DB                    		xor	bx, bx
  3878 00001931 E89824                  		call	get_sf_from_jfn
  3879 00001934 83C703                  		add	di, 3
  3880 00001937 268A5D18                		mov	bl, [es:di+18h]
  3881 0000193B 881E[C003]              		mov	byte [CINDSAV], bl
  3882 0000193F 26C57519                		lds	si, [es:di+19h]
  3883 00001943 368936[BC03]            		mov	[ss:CINSAV], si
  3884 00001948 368C1E[BE03]            		mov	[ss:CINSAV+2], ds
  3885 0000194D 36C536[8503]            		lds	si, [ss:THISFCB]
  3886 00001952 8A5C18                  		mov	bl, [si+18h]
  3887 00001955 C57419                  		lds	si, [si+19h]
  3888 00001958 26885D18                		mov	[es:di+18h], bl
  3889 0000195C 26897519                		mov	[es:di+19h], si
  3890 00001960 268C5D1B                		mov	[es:di+1Bh], ds
  3891 00001964 16                      		push	ss
  3892 00001965 1F                      		pop	ds
  3893 00001966 BB0100                  		mov	bx, 1
  3894 00001969 E86024                  		call	get_sf_from_jfn
  3895 0000196C 83C703                  		add	di, 3
  3896 0000196F 268A5D18                		mov	bl, [es:di+18h]
  3897 00001973 881E[C103]              		mov	byte [COUTDSAV], bl
  3898 00001977 26C57519                		lds	si, [es:di+19h]
  3899 0000197B 368936[C203]            		mov	[ss:COUTSAV], si
  3900 00001980 368C1E[C403]            		mov	[ss:COUTSAV+2], ds
  3901 00001985 36C536[8503]            		lds	si, [ss:THISFCB]
  3902 0000198A 8A5C18                  		mov	bl, [si+18h]
  3903 0000198D C57419                  		lds	si, [si+19h]
  3904 00001990 26885D18                		mov	[es:di+18h], bl
  3905 00001994 26897519                		mov	[es:di+19h], si
  3906 00001998 268C5D1B                		mov	[es:di+1Bh], ds
  3907 0000199C 16                      		push	ss
  3908 0000199D 1F                      		pop	ds
  3909 0000199E E97BFF                  		jmp	SWAPRET
  3910                                  
  3911                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  3912                                  
  3913                                  LOAD:					; CODE XREF: IOIN+3p seg000:2831p ...
  3914 000019A1 E81A03                  		call	SETUP
  3915 000019A4 08DB                    		or	bl, bl
  3916 000019A6 7804                    		js	short loc_19AA
  3917 000019A8 E82F04                  		call	DISKREAD
  3918 000019AB C3                      		retn
  3919                                  
  3920                                  loc_19AA:				; CODE XREF: LOAD+5j
  3921 000019AC C43E[DF00]              		les	di, [DMAADD]
  3922 000019B0 F6C340                  		test	bl, 40h
  3923 000019B3 7407                    		jz	short loc_19BA
  3924 000019B5 F6C304                  		test	bl, 4
  3925 000019B8 7439                    		jz	short loc_19F1
  3926 000019BA 30C0                    		xor	al, al
  3927                                  
  3928                                  loc_19BA:				; CODE XREF: LOAD+12j
  3929 000019BC E9AA00                  		jmp	loc_1A67
  3930                                  
  3931                                  loc_19BD:				; CODE XREF: LOAD+55j
  3932 000019BF 06                      		push	es
  3933 000019C0 1F                      		pop	ds
  3934                                  
  3935                                  loc_19BF:				; CODE XREF: LOAD+47j
  3936 000019C1 89FB                    		mov	bx, di
  3937 000019C3 31D2                    		xor	dx, dx
  3938 000019C5 31C0                    		xor	ax, ax
  3939 000019C7 E805FA                  		call	SETREAD
  3940 000019CA 36C536[8503]            		lds	si, [ss:THISFCB]
  3941 000019CF E874F9                  		call	DEVIOCALL
  3942 000019D2 89FA                    		mov	dx, di
  3943 000019D4 B486                    		mov	ah, 86h	; ''
  3944 000019D6 368B3E[3001]            		mov	di, [ss:DEVCALL_REQSTAT]
  3945 000019DB F7C70080                		test	di, 8000h
  3946 000019DF 7409                    		jz	short loc_19E8
  3947 000019E1 E8D912                  		call	CHARHARD
  3948 000019E4 89D7                    		mov	di, dx
  3949 000019E6 3C01                    		cmp	al, 1
  3950 000019E8 74D7                    		jz	short loc_19BF
  3951                                  
  3952                                  loc_19E8:				; CODE XREF: LOAD+3Ej
  3953 000019EA 89D7                    		mov	di, dx
  3954 000019EC 36033E[3F01]            		add	di, [ss:CALLBPB]  ; SS:CALLSCNT
  3955 000019F1 EB76                    		jmp	short loc_1A67
  3956                                  
  3957                                  loc_19F1:				; CODE XREF: LOAD+17j
  3958 000019F3 F6C320                  		test	bl, 20h
  3959 000019F6 75C7                    		jnz	short loc_19BD
  3960 000019F8 F6C301                  		test	bl, 1
  3961 000019FB 7403                    		jz	short loc_19FE
  3962 000019FD E99F00                  		jmp	READCON
  3963                                  
  3964                                  loc_19FE:				; CODE XREF: LOAD+5Aj
  3965 00001A00 8CC0                    		mov	ax, es
  3966 00001A02 8ED8                    		mov	ds, ax
  3967 00001A04 89FB                    		mov	bx, di
  3968 00001A06 31D2                    		xor	dx, dx
  3969 00001A08 89D0                    		mov	ax, dx
  3970 00001A0A 51                      		push	cx
  3971 00001A0B B90100                  		mov	cx, 1
  3972 00001A0E E8BEF9                  		call	SETREAD
  3973 00001A11 59                      		pop	cx
  3974 00001A12 36C536[8503]            		lds	si, [ss:THISFCB]
  3975 00001A17 C57419                  		lds	si, [si+19h]
  3976                                  
  3977                                  DVRDLP:					; CODE XREF: LOAD+9Aj LOAD+C5j
  3978 00001A1A E81E11                  		call	DSKSTATCHK
  3979 00001A1D E829F9                  		call	DEVIOCALL2
  3980 00001A20 57                      		push	di
  3981 00001A21 B486                    		mov	ah, 86h	; ''
  3982 00001A23 368B3E[3001]            		mov	di, [ss:DEVCALL_REQSTAT]
  3983 00001A28 F7C70080                		test	di, 8000h
  3984 00001A2C 7413                    		jz	short loc_1A3F
  3985 00001A2E E88C12                  		call	CHARHARD
  3986 00001A31 5F                      		pop	di
  3987 00001A32 36C706[3F01]0100        		mov	word [ss:CALLBPB], 1	; SS:CALLSCNT
  3988 00001A39 3C01                    		cmp	al, 1
  3989 00001A3B 74DD                    		jz	short DVRDLP
  3990 00001A3D 30C0                    		xor	al, al
  3991 00001A3F EB12                    		jmp	short loc_1A51
  3992                                  
  3993                                  loc_1A3F:				; CODE XREF: LOAD+8Bj
  3994 00001A41 5F                      		pop	di
  3995 00001A42 36833E[3F01]01          		cmp	word [ss:CALLBPB], 1	; SS:CALLSCNT
  3996 00001A48 751F                    		jnz	short loc_1A67
  3997 00001A4A 1E                      		push	ds
  3998 00001A4B 368E1E[3D01]            		mov	ds, [ss:CALLXAD+2]
  3999 00001A50 8A05                    		mov	al, [di]
  4000 00001A52 1F                      		pop	ds
  4001                                  
  4002                                  loc_1A51:				; CODE XREF: LOAD+9Ej
  4003 00001A53 36FF06[3B01]            		inc	word [ss:CALLXAD]
  4004 00001A58 36C706[3001]0000        		mov	word [ss:DEVCALL_REQSTAT], 0
  4005 00001A5F 47                      		inc	di
  4006 00001A60 3C1A                    		cmp	al, 1Ah
  4007 00001A62 7404                    		jz	short loc_1A66
  4008 00001A64 3C0D                    		cmp	al, 0Dh
  4009 00001A66 E0B2                    		loopne	DVRDLP
  4010                                  
  4011                                  loc_1A66:				; CODE XREF: LOAD+C1j
  4012 00001A68 4F                      		dec	di
  4013                                  
  4014                                  loc_1A67:				; CODE XREF: LOAD:loc_19BAj LOAD+50j ...
  4015 00001A69 EB1F                    		jmp	short loc_1A88
  4016                                  ; ---------------------------------------------------------------------------
  4017                                  
  4018                                  TRANBUF:				; CODE XREF: LOAD+D5j LOAD+107j ...
  4019 00001A6B AC                      		lodsb
  4020 00001A6C AA                      		stosb
  4021 00001A6D 3C0D                    		cmp	al, 0Dh
  4022 00001A6F 7503                    		jnz	short loc_1A72
  4023 00001A71 C6040A                  		mov	byte [si], 0Ah
  4024                                  
  4025                                  loc_1A72:				; CODE XREF: LOAD+CEj
  4026 00001A74 3C0A                    		cmp	al, 0Ah
  4027 00001A76 E0F3                    		loopne	TRANBUF
  4028 00001A78 7507                    		jnz	short loc_1A7F
  4029 00001A7A 31F6                    		xor	si, si
  4030 00001A7C E87E1A                  		call	OUTT
  4031 00001A7F 0C01                    		or	al, 1
  4032                                  
  4033                                  loc_1A7F:				; CODE XREF: LOAD+D7j LOAD+135j
  4034 00001A81 16                      		push	ss
  4035 00001A82 1F                      		pop	ds
  4036 00001A83 E84BFE                  		call	SWAPBACK
  4037 00001A86 8936[DC00]              		mov	[CONTPOS], si
  4038                                  
  4039                                  loc_1A88:				; CODE XREF: LOAD:loc_1A67j
  4040 00001A8A 16                      		push	ss
  4041 00001A8B 1F                      		pop	ds
  4042 00001A8C 893E[8903]              		mov	[NEXTADD], di
  4043 00001A90 7509                    		jnz	short loc_1A99
  4044 00001A92 C43E[8503]              		les	di, [THISFCB]
  4045 00001A96 26806518BF              		and	byte [es:di+18h], 0BFh
  4046                                  
  4047                                  loc_1A99:				; CODE XREF: LOAD+EFj
  4048 00001A9B E83A04                  		call	SETFCB
  4049 00001A9E C3                      		retn
  4050                                  ; ---------------------------------------------------------------------------
  4051                                  
  4052                                  READCON:				; CODE XREF: LOAD+5Cj
  4053 00001A9F E87FFE                  		call	SWAPCON
  4054 00001AA2 8B36[DC00]              		mov	si, [CONTPOS]
  4055 00001AA6 09F6                    		or	si, si
  4056 00001AA8 75C1                    		jnz	short TRANBUF
  4057 00001AAA 803E[AA02]80            		cmp	byte [CONBUF], 80h	; ''
  4058 00001AAF 7406                    		jz	short GETBUF
  4059 00001AB1 C706[AA02]80FF          		mov	word [CONBUF], 0FF80h
  4060                                  
  4061                                  GETBUF:				; CODE XREF: LOAD+10Ej
  4062 00001AB7 51                      		push	cx
  4063 00001AB8 06                      		push	es
  4064 00001AB9 57                      		push	di
  4065 00001ABA BA[AA02]                		mov	dx, CONBUF   ; 2AAh
  4066 00001ABD E8201B                  		call	_$STD_CON_STRING_INPUT
  4067 00001AC0 5F                      		pop	di
  4068 00001AC1 07                      		pop	es
  4069 00001AC2 59                      		pop	cx
  4070 00001AC3 BE[AC02]                		mov	si, CONBUF+2 ; 2ACh
  4071 00001AC6 803C1A                  		cmp	byte [si], 1Ah
  4072 00001AC9 75A0                    		jnz	short TRANBUF
  4073 00001ACB B01A                    		mov	al, 1Ah
  4074 00001ACD AA                      		stosb
  4075 00001ACE 4F                      		dec	di
  4076 00001ACF B00A                    		mov	al, 0Ah
  4077 00001AD1 E8291A                  		call	OUTT
  4078 00001AD4 31F6                    		xor	si, si
  4079 00001AD6 EBA9                    		jmp	short loc_1A7F
  4080                                  
  4081                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4082                                  
  4083                                  
  4084                                  STORE:					; CODE XREF: IOFUNC+C0p seg000:2839p ...
  4085 00001AD8 E8E301                  		call	SETUP
  4086 00001ADB 08DB                    		or	bl, bl
  4087 00001ADD 7865                    		js	short WRTDEV
  4088 00001ADF E8F61C                  		call	DATE16
  4089 00001AE2 26894514                		mov	[es:di+14h], ax
  4090 00001AE6 26895516                		mov	[es:di+16h], dx
  4091 00001AEA E85804                  		call	DISKWRITE
  4092 00001AED C3                      		retn
  4093                                  ; ---------------------------------------------------------------------------
  4094                                  
  4095                                  WRITECON:				; CODE XREF: STORE+84j
  4096 00001AEE 1E                      		push	ds
  4097 00001AEF 16                      		push	ss
  4098 00001AF0 1F                      		pop	ds
  4099 00001AF1 E82DFE                  		call	SWAPCON
  4100 00001AF4 1F                      		pop	ds
  4101 00001AF5 89DE                    		mov	si, bx
  4102 00001AF7 51                      		push	cx
  4103                                  
  4104                                  loc_1AF6:				; CODE XREF: STORE+28j
  4105 00001AF8 AC                      		lodsb
  4106 00001AF9 3C1A                    		cmp	al, 1Ah
  4107 00001AFB 7405                    		jz	short loc_1B00
  4108 00001AFD E8FD19                  		call	OUTT
  4109 00001B00 E2F6                    		loop	loc_1AF6
  4110                                  
  4111                                  loc_1B00:				; CODE XREF: STORE+23j
  4112 00001B02 58                      		pop	ax
  4113 00001B03 29C8                    		sub	ax, cx
  4114 00001B05 1F                      		pop	ds
  4115 00001B06 E8C8FD                  		call	SWAPBACK
  4116 00001B09 EB29                    		jmp	short loc_1B32
  4117                                  ; ---------------------------------------------------------------------------
  4118                                  
  4119                                  DVWRTRAW:				; CODE XREF: STORE+56j	STORE+80j
  4120 00001B0B 31C0                    		xor	ax, ax
  4121 00001B0D E8F2F8                  		call	SETWRITE
  4122 00001B10 36C536[8503]            		lds	si, [ss:THISFCB]
  4123 00001B15 E82EF8                  		call	DEVIOCALL
  4124 00001B18 89FA                    		mov	dx, di
  4125 00001B1A B487                    		mov	ah, 87h	; ''
  4126 00001B1C 368B3E[3001]            		mov	di, [ss:DEVCALL_REQSTAT]
  4127 00001B21 F7C70080                		test	di, 8000h
  4128 00001B25 7409                    		jz	short loc_1B2E
  4129 00001B27 E89311                  		call	CHARHARD
  4130 00001B2A 89D3                    		mov	bx, dx
  4131 00001B2C 3C01                    		cmp	al, 1
  4132 00001B2E 74DB                    		jz	short DVWRTRAW
  4133                                  
  4134                                  loc_1B2E:				; CODE XREF: STORE+4Dj
  4135 00001B30 1F                      		pop	ds
  4136 00001B31 A1[3F01]                		mov	ax, [CALLBPB]  ; CALLSCNT
  4137                                  
  4138                                  loc_1B32:				; CODE XREF: STORE+31j	STORE+71j ...
  4139 00001B34 C43E[8503]              		les	di, [THISFCB]
  4140 00001B38 31D2                    		xor	dx, dx
  4141 00001B3A 26F7750E                		div	word [es:di+0Eh]
  4142 00001B3E 89C1                    		mov	cx, ax
  4143 00001B40 E8F103                  		call	ADDREC
  4144 00001B43 C3                      		retn
  4145                                  ; ---------------------------------------------------------------------------
  4146                                  
  4147                                  WRTDEV:					; CODE XREF: STORE+5j
  4148 00001B44 80CB40                  		or	bl, 40h
  4149 00001B47 31C0                    		xor	ax, ax
  4150 00001B49 E3E9                    		jcxz	loc_1B32
  4151 00001B4B 1E                      		push	ds
  4152 00001B4C 88D8                    		mov	al, bl
  4153 00001B4E C51E[DF00]              		lds	bx, [DMAADD]
  4154 00001B52 89DF                    		mov	di, bx
  4155 00001B54 31D2                    		xor	dx, dx
  4156 00001B56 A820                    		test	al, 20h
  4157 00001B58 75B1                    		jnz	short DVWRTRAW
  4158 00001B5A A802                    		test	al, 2
  4159 00001B5C 7590                    		jnz	short WRITECON
  4160 00001B5E A804                    		test	al, 4
  4161 00001B60 7567                    		jnz	short loc_1BC7
  4162 00001B62 89D0                    		mov	ax, dx
  4163 00001B64 803F1A                  		cmp	byte [bx], 1Ah
  4164 00001B67 745A                    		jz	short loc_1BC1
  4165 00001B69 51                      		push	cx
  4166 00001B6A B90100                  		mov	cx, 1
  4167 00001B6D E892F8                  		call	SETWRITE
  4168 00001B70 59                      		pop	cx
  4169 00001B71 36C536[8503]            		lds	si, [ss:THISFCB]
  4170 00001B76 C57419                  		lds	si, [si+19h]
  4171                                  
  4172                                  loc_1B77:				; CODE XREF: STORE+C2j	STORE+E9j
  4173 00001B79 E8BF0F                  		call	DSKSTATCHK
  4174 00001B7C E8CAF7                  		call	DEVIOCALL2
  4175 00001B7F 57                      		push	di
  4176 00001B80 B487                    		mov	ah, 87h	; ''
  4177 00001B82 368B3E[3001]            		mov	di, [ss:DEVCALL_REQSTAT]
  4178 00001B87 F7C70080                		test	di, 8000h
  4179 00001B8B 7411                    		jz	short loc_1B9C
  4180 00001B8D E82D11                  		call	CHARHARD
  4181 00001B90 5F                      		pop	di
  4182 00001B91 36C706[3F01]0100        		mov	word [ss:CALLBPB], 1  ; SS:CALLSCNT
  4183 00001B98 3C01                    		cmp	al, 1
  4184 00001B9A 74DD                    		jz	short loc_1B77
  4185 00001B9C EB09                    		jmp	short loc_1BA5
  4186                                  ; ---------------------------------------------------------------------------
  4187                                  
  4188                                  loc_1B9C:				; CODE XREF: STORE+B3j
  4189 00001B9E 5F                      		pop	di
  4190 00001B9F 36833E[3F01]00          		cmp	word [ss:CALLBPB], 0  ; SS:CALLSCNT
  4191 00001BA5 741C                    		jz	short loc_1BC1
  4192                                  
  4193                                  loc_1BA5:				; CODE XREF: STORE+C4j
  4194 00001BA7 42                      		inc	dx
  4195 00001BA8 36FF06[3B01]            		inc	word [ss:CALLXAD]
  4196 00001BAD 47                      		inc	di
  4197 00001BAE 1E                      		push	ds
  4198 00001BAF 368E1E[3D01]            		mov	ds, word [ss:CALLXAD+2]
  4199 00001BB4 803D1A                  		cmp	byte [di], 1Ah
  4200 00001BB7 1F                      		pop	ds
  4201 00001BB8 7409                    		jz	short loc_1BC1
  4202 00001BBA 36C706[3001]0000        		mov	word [ss:DEVCALL_REQSTAT], 0
  4203 00001BC1 E2B6                    		loop	loc_1B77
  4204                                  
  4205                                  loc_1BC1:				; CODE XREF: STORE+8Fj	STORE+CDj ...
  4206 00001BC3 89D0                    		mov	ax, dx
  4207 00001BC5 1F                      		pop	ds
  4208 00001BC6 E96BFF                  		jmp	loc_1B32
  4209                                  ; ---------------------------------------------------------------------------
  4210                                  
  4211                                  loc_1BC7:				; CODE XREF: STORE+88j
  4212 00001BC9 89CA                    		mov	dx, cx
  4213 00001BCB EBF6                    		jmp	short loc_1BC1
  4214                                  
  4215                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4216                                  
  4217                                  GET_IO_FCB:				; CODE XREF: seg000:0AB0p seg000:0AD1p ...
  4218 00001BCD 16                      		push	ss
  4219 00001BCE 1F                      		pop	ds
  4220 00001BCF 06                      		push	es
  4221 00001BD0 57                      		push	di
  4222 00001BD1 E8F821                  		call	get_sf_from_jfn
  4223 00001BD4 7207                    		jb	short loc_1BDB
  4224 00001BD6 89FE                    		mov	si, di
  4225 00001BD8 83C603                  		add	si, 3
  4226 00001BDB 06                      		push	es
  4227 00001BDC 1F                      		pop	ds
  4228                                  
  4229                                  loc_1BDB:				; CODE XREF: GET_IO_FCB+7j
  4230 00001BDD 5F                      		pop	di
  4231 00001BDE 07                      		pop	es
  4232                                  
  4233                                  locret_1BDD:				; CODE XREF: GETTHISDRV+5j
  4234 00001BDF C3                      		retn
  4235                                  
  4236                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4237                                  
  4238                                  
  4239                                  GETTHISDRV:				; CODE XREF: seg000:0937p seg000:0CB1p ...
  4240 00001BE0 363806[0001]            		cmp	[ss:NUMIO], al
  4241 00001BE5 72F8                    		jb	short locret_1BDD
  4242 00001BE7 FEC8                    		dec	al
  4243 00001BE9 7904                    		jns	short loc_1BED
  4244 00001BEB 36A0[2001]              		mov	al, [ss:CURDRV]
  4245                                  
  4246                                  loc_1BED:				; CODE XREF: GETTHISDRV+9j
  4247 00001BEF 36A2[6F03]              		mov	byte [ss:THISDRV],	al
  4248                                  
  4249                                  locret_1BF1:				; CODE XREF: DREAD+3j
  4250 00001BF3 C3                      		retn
  4251                                  
  4252                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4253                                  
  4254                                  DIRREAD:				; CODE XREF: GETENTRY+1Cp
  4255 00001BF4 8A0E[7403]              		mov	cl, byte [CLUSFAC]
  4256 00001BF8 F6F1                    		div	cl
  4257 00001BFA 8826[6B03]              		mov	byte [SECCLUSPOS], ah
  4258 00001BFE 88C1                    		mov	cl, al
  4259 00001C00 30ED                    		xor	ch, ch
  4260 00001C02 8B16[9503]              		mov	dx, word [DIRSEC]
  4261 00001C06 00E2                    		add	dl, ah
  4262 00001C08 80D600                  		adc	dh, 0
  4263 00001C0B 8B1E[9303]              		mov	bx, word [CLUSNUM]
  4264 00001C0F 891E[AD03]              		mov	word [NXTCLUSNUM], bx
  4265 00001C13 E318                    		jcxz	FIRSTCLUSTER
  4266                                  
  4267                                  loc_1C13:				; CODE XREF: DIRREAD+2Cj
  4268 00001C15 E81205                  		call	UNPACK
  4269 00001C18 87DF                    		xchg	bx, di
  4270 00001C1A 81FBF80F                		cmp	bx, 0FF8h
  4271 00001C1E 7302                    		jnb	short loc_1C20
  4272 00001C20 E2F3                    		loop	loc_1C13
  4273                                  
  4274                                  loc_1C20:				; CODE XREF: DIRREAD+2Aj
  4275 00001C22 891E[AD03]              		mov	[NXTCLUSNUM], bx
  4276 00001C26 89FA                    		mov	dx, di
  4277 00001C28 88E3                    		mov	bl, ah
  4278 00001C2A E88E08                  		call	FIGREC
  4279                                  
  4280                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4281                                  
  4282                                  
  4283                                  FIRSTCLUSTER:				; CODE XREF: NEXTENTRY+46p DIRREAD+1Fj
  4284 00001C2D 30C0                    		xor	al, al
  4285 00001C2F B40F                    		mov	ah, 0Fh
  4286 00001C31 E84D0A                  		call	GETBUFFR
  4287 00001C34 C3                      		retn
  4288                                  
  4289                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4290                                  
  4291                                  
  4292                                  FATSECRD:				; CODE XREF: GETBUFFRB+59p
  4293                                  
  4294                                  ; FUNCTION CHUNK AT 1C67 SIZE 00000002 BYTES
  4295                                  
  4296 00001C35 89CF                    		mov	di, cx
  4297 00001C37 268A4E08                		mov	cl, [es:bp+8]
  4298 00001C3B 268A460F                		mov	al, [es:bp+0Fh]
  4299 00001C3F 30E4                    		xor	ah, ah
  4300 00001C41 88E5                    		mov	ch, ah
  4301 00001C43 52                      		push	dx
  4302                                  
  4303                                  NXTFAT:					; CODE XREF: FATSECRD+1Cj
  4304 00001C44 51                      		push	cx
  4305 00001C45 50                      		push	ax
  4306 00001C46 89F9                    		mov	cx, di
  4307 00001C48 E82000                  		call	DSKREAD
  4308 00001C4B 58                      		pop	ax
  4309 00001C4C 59                      		pop	cx
  4310 00001C4D 741A                    		jz	short loc_1C67
  4311 00001C4F 01C2                    		add	dx, ax
  4312 00001C51 E2F1                    		loop	NXTFAT
  4313 00001C53 5A                      		pop	dx
  4314 00001C54 89F9                    		mov	cx, di
  4315                                  
  4316                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4317                                  
  4318                                  
  4319                                  DREAD:					; CODE XREF: DREAD+10j	DISKREAD+74p ...
  4320 00001C56 E81200                  		call	DSKREAD
  4321 00001C59 7498                    		jz	short locret_1BF1
  4322 00001C5B 36C606[6E03]00          		mov	byte [ss:READOP], 0
  4323 00001C61 E86F10                  		call	HARDERR
  4324 00001C64 3C01                    		cmp	al, 1
  4325 00001C66 74EE                    		jz	short DREAD
  4326 00001C68 C3                      		retn
  4327                                  
  4328                                  ; ---------------------------------------------------------------------------
  4329                                  ; START	OF FUNCTION CHUNK FOR FATSECRD
  4330                                  
  4331                                  loc_1C67:				; CODE XREF: FATSECRD+18j
  4332 00001C69 5A                      		pop	dx
  4333                                  
  4334                                  locret_1C68:				; CODE XREF: DWRITE+3j
  4335 00001C6A C3                      		retn
  4336                                  ; END OF FUNCTION CHUNK	FOR FATSECRD
  4337                                  
  4338                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4339                                  
  4340                                  DSKREAD:				; CODE XREF: seg000:085Ep FATSECRD+13p ...
  4341 00001C6B 51                      		push	cx
  4342 00001C6C 268A6616                		mov	ah, [es:bp+16h]
  4343 00001C70 268A4601                		mov	al, [es:bp+1]
  4344 00001C74 53                      		push	bx
  4345 00001C75 06                      		push	es
  4346 00001C76 E856F7                  		call	SETREAD
  4347 00001C79 EB22                    		jmp	short DODSKOP
  4348                                  
  4349                                  ; ---------------------------------------------------------------------------
  4350 00001C7B 90                      		db  90h
  4351                                  
  4352                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4353                                  
  4354                                  DWRITE:					; CODE XREF: DWRITE+10j DISKWRITE+139p ...
  4355 00001C7C E81000                  		call	DSKWRITE
  4356 00001C7F 74E9                    		jz	short locret_1C68
  4357 00001C81 36C606[6E03]01          		mov	byte [ss:READOP], 1
  4358 00001C87 E84910                  		call	HARDERR
  4359 00001C8A 3C01                    		cmp	al, 1
  4360 00001C8C 74EE                    		jz	short DWRITE
  4361 00001C8E C3                      		retn
  4362                                  
  4363                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4364                                  
  4365                                  DSKWRITE:				; CODE XREF: seg000:0898p DWRITEp
  4366 00001C8F 51                      		push	cx
  4367 00001C90 268A6616                		mov	ah, [es:bp+16h]
  4368 00001C94 268A4601                		mov	al, [es:bp+1]
  4369 00001C98 53                      		push	bx
  4370 00001C99 06                      		push	es
  4371 00001C9A E865F7                  		call	SETWRITE
  4372                                  
  4373                                  DODSKOP:				; CODE XREF: DSKREAD+Ej
  4374 00001C9D 8CD9                    		mov	cx, ds
  4375 00001C9F 1F                      		pop	ds
  4376 00001CA0 1E                      		push	ds
  4377 00001CA1 3EC57612                		lds	si, [ds:bp+12h]
  4378 00001CA5 E8A1F6                  		call	DEVIOCALL2
  4379 00001CA8 8ED9                    		mov	ds, cx
  4380 00001CAA 07                      		pop	es
  4381 00001CAB 5B                      		pop	bx
  4382 00001CAC 368B0E[3F01]            		mov	cx, [ss:CALLBPB]  ; SS:CALLSCNT
  4383 00001CB1 5F                      		pop	di
  4384 00001CB2 29F9                    		sub	cx, di
  4385 00001CB4 F7D9                    		neg	cx
  4386 00001CB6 36A1[3001]              		mov	ax, [ss:DEVCALL_REQSTAT]
  4387 00001CBA A90080                  		test	ax, 8000h
  4388 00001CBD C3                      		retn
  4389                                  
  4390                                  ; ---------------------------------------------------------------------------
  4391                                  
  4392                                  SETUP:					; CODE XREF: LOADp STOREp
  4393 00001CBE 50                      		push	ax
  4394 00001CBF 8A05                    		mov	al, [di]
  4395 00001CC1 FEC8                    		dec	al
  4396 00001CC3 36A2[6F03]              		mov	[ss:THISDRV], al
  4397 00001CC7 8A4518                  		mov	al, [di+18h]
  4398 00001CCA 8B750E                  		mov	si, [di+0Eh]
  4399 00001CCD 09F6                    		or	si, si
  4400 00001CCF 7506                    		jnz	short loc_1CD5
  4401 00001CD1 BE8000                  		mov	si, 80h	; ''
  4402 00001CD4 89750E                  		mov	[di+0Eh], si
  4403                                  
  4404                                  loc_1CD5:				; CODE XREF: seg000:1CCDj
  4405 00001CD7 368C1E[8703]            		mov	[ss:THISFCB+2], ds
  4406 00001CDC 16                      		push	ss
  4407 00001CDD 1F                      		pop	ds
  4408 00001CDE 893E[8503]              		mov	[THISFCB], di
  4409 00001CE2 08C0                    		or	al, al
  4410 00001CE4 7902                    		jns	short loc_1CE6
  4411 00001CE6 30C0                    		xor	al, al
  4412                                  
  4413                                  loc_1CE6:				; CODE XREF: seg000:1CE2j
  4414 00001CE8 E8C2F6                  		call	GETBP
  4415 00001CEB 58                      		pop	ax
  4416 00001CEC 7309                    		jnb	short loc_1CF5
  4417 00001CEE 31C9                    		xor	cx, cx
  4418 00001CF0 C606[6C03]04            		mov	byte [DSKERR], 4
  4419 00001CF5 5B                      		pop	bx
  4420 00001CF6 C3                      		retn
  4421                                  ; ---------------------------------------------------------------------------
  4422                                  
  4423                                  loc_1CF5:				; CODE XREF: seg000:1CEAj
  4424 00001CF7 83FE40                  		cmp	si, 40h	; '@'
  4425 00001CFA 7202                    		jb	short loc_1CFC
  4426 00001CFC 30F6                    		xor	dh, dh
  4427                                  
  4428                                  loc_1CFC:				; CODE XREF: seg000:1CF8j
  4429 00001CFE 890E[8F03]              		mov	[RECCNT], cx
  4430 00001D02 A3[8B03]                		mov	[RECPOS], ax
  4431 00001D05 8916[8D03]              		mov	[RECPOS+2], dx
  4432 00001D09 8B1E[DF00]              		mov	bx, [DMAADD]
  4433 00001D0D 891E[8903]              		mov	[NEXTADD], bx
  4434 00001D11 C606[6C03]00            		mov	byte [DSKERR], 0
  4435 00001D16 C606[6D03]00            		mov	byte [TRANS], 0
  4436 00001D1B 89D3                    		mov	bx, dx
  4437 00001D1D F7E6                    		mul	si
  4438 00001D1F A3[9F03]                		mov	[BYTPOS], ax
  4439 00001D22 52                      		push	dx
  4440 00001D23 89D8                    		mov	ax, bx
  4441 00001D25 F7E6                    		mul	si
  4442 00001D27 5B                      		pop	bx
  4443 00001D28 01D8                    		add	ax, bx
  4444 00001D2A 83D200                  		adc	dx, 0
  4445 00001D2D 755E                    		jnz	short loc_1D8B
  4446 00001D2F A3[A103]                		mov	word [BYTPOS+2], ax
  4447 00001D32 89C2                    		mov	dx, ax
  4448 00001D34 A1[9F03]                		mov	ax, [BYTPOS]
  4449 00001D37 268B5E02                		mov	bx, [es:bp+2]
  4450 00001D3B 39DA                    		cmp	dx, bx
  4451 00001D3D 734E                    		jnb	short loc_1D8B
  4452 00001D3F F7F3                    		div	bx
  4453 00001D41 A3[9903]                		mov	[SECPOS], ax
  4454 00001D44 8916[9D03]              		mov	[BYTSECPOS], dx
  4455 00001D48 89C2                    		mov	dx, ax
  4456 00001D4A 26224604                		and	al, [es:bp+4]
  4457 00001D4E A2[6B03]                		mov	[SECCLUSPOS], al
  4458 00001D51 89C8                    		mov	ax, cx
  4459 00001D53 268A4E05                		mov	cl, [es:bp+5]
  4460 00001D57 D3EA                    		shr	dx, cl
  4461 00001D59 8916[9303]              		mov	[CLUSNUM], dx
  4462 00001D5D F7E6                    		mul	si
  4463 00001D5F 89C1                    		mov	cx, ax
  4464 00001D61 0306[DF00]              		add	ax, [DMAADD]
  4465 00001D65 83D200                  		adc	dx, 0
  4466 00001D68 741A                    		jz	short loc_1D82
  4467 00001D6A A1[DF00]                		mov	ax, [DMAADD]
  4468 00001D6D F7D8                    		neg	ax
  4469 00001D6F 7501                    		jnz	short loc_1D70
  4470 00001D71 48                      		dec	ax
  4471                                  
  4472                                  loc_1D70:				; CODE XREF: seg000:1D6Dj
  4473 00001D72 31D2                    		xor	dx, dx
  4474 00001D74 F7F6                    		div	si
  4475 00001D76 A3[8F03]                		mov	[RECCNT], ax
  4476 00001D79 F7E6                    		mul	si
  4477 00001D7B C606[6C03]02            		mov	byte [DSKERR], 2
  4478 00001D80 89C1                    		mov	cx, ax
  4479 00001D82 E310                    		jcxz	loc_1D92
  4480                                  
  4481                                  loc_1D82:				; CODE XREF: seg000:1D66j
  4482 00001D84 C43E[8503]              		les	di, [THISFCB]
  4483 00001D88 268A5D18                		mov	bl, [es:di+18h]
  4484 00001D8C C3                      		retn
  4485                                  ; ---------------------------------------------------------------------------
  4486                                  
  4487                                  loc_1D8B:				; CODE XREF: seg000:1D2Bj seg000:1D3Bj
  4488 00001D8D C606[6C03]01            		mov	byte [DSKERR], 1
  4489 00001D92 31C9                    		xor	cx, cx
  4490                                  
  4491                                  loc_1D92:				; CODE XREF: seg000:1D80j
  4492 00001D94 C43E[8503]              		les	di, [THISFCB]
  4493 00001D98 5B                      		pop	bx
  4494                                  
  4495                                  locret_1D97:				; CODE XREF: BREAKDOWN+2Dj BREAKDOWN+32j
  4496 00001D99 C3                      		retn
  4497                                  
  4498                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4499                                  
  4500                                  BREAKDOWN:				; CODE XREF: DISKREAD+22p DISKWRITE+Bp
  4501 00001D9A A1[9D03]                		mov	ax, [BYTSECPOS]
  4502 00001D9D 89CB                    		mov	bx, cx
  4503 00001D9F 09C0                    		or	ax, ax
  4504 00001DA1 740E                    		jz	short loc_1DAF
  4505 00001DA3 262B4602                		sub	ax, [es:bp+2]
  4506 00001DA7 F7D8                    		neg	ax
  4507 00001DA9 29C3                    		sub	bx, ax
  4508 00001DAB 7304                    		jnb	short loc_1DAF
  4509 00001DAD 01D8                    		add	ax, bx
  4510 00001DAF 31DB                    		xor	bx, bx
  4511                                  
  4512                                  loc_1DAF:				; CODE XREF: BREAKDOWN+7j BREAKDOWN+11j
  4513 00001DB1 A3[A303]                		mov	[BYTCNT1], ax
  4514 00001DB4 89D8                    		mov	ax, bx
  4515 00001DB6 31D2                    		xor	dx, dx
  4516 00001DB8 26F77602                		div	word [es:bp+2]
  4517 00001DBC A3[A703]                		mov	[SECCNT], ax
  4518 00001DBF 8916[A503]              		mov	[BYTCNT2], dx
  4519 00001DC3 0B16[A303]              		or	dx, [BYTCNT1]
  4520 00001DC7 75D0                    		jnz	short locret_1D97
  4521 00001DC9 83F801                  		cmp	ax, 1
  4522 00001DCC 75CB                    		jnz	short locret_1D97
  4523 00001DCE 268B4602                		mov	ax, [es:bp+2]
  4524 00001DD2 A3[A503]                		mov	[BYTCNT2], ax
  4525 00001DD5 8916[A703]              		mov	[SECCNT], dx
  4526 00001DD9 C3                      		retn
  4527                                  
  4528                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4529                                  
  4530                                  DISKREAD:				; CODE XREF: LOAD+7p
  4531 00001DDA 268B4510                		mov	ax, [es:di+10h]
  4532 00001DDE 268B5D12                		mov	bx, [es:di+12h]
  4533 00001DE2 2B06[9F03]              		sub	ax, [BYTPOS]
  4534 00001DE6 1B1E[A103]              		sbb	bx, [BYTPOS+2]
  4535 00001DEA 721E                    		jb	short loc_1E08
  4536 00001DEC 750A                    		jnz	short loc_1DF6
  4537 00001DEE 09C0                    		or	ax, ax
  4538 00001DF0 7418                    		jz	short loc_1E08
  4539 00001DF2 39C8                    		cmp	ax, cx
  4540 00001DF4 7302                    		jnb	short loc_1DF6
  4541 00001DF6 89C1                    		mov	cx, ax
  4542                                  
  4543                                  loc_1DF6:				; CODE XREF: DISKREAD+12j DISKREAD+1Aj
  4544 00001DF8 C42E[7003]              		les	bp, [THISDPB]
  4545 00001DFC E89BFF                  		call	BREAKDOWN
  4546 00001DFF 8B0E[9303]              		mov	cx, word [CLUSNUM]
  4547 00001E03 E85305                  		call	FNDCLUS
  4548 00001E06 09C9                    		or	cx, cx
  4549 00001E08 7409                    		jz	short loc_1E11
  4550                                  
  4551                                  loc_1E08:				; CODE XREF: DISKREAD+10j DISKREAD+16j
  4552 00001E0A E9B101                  		jmp	loc_1FBC
  4553                                  ; ---------------------------------------------------------------------------
  4554                                  
  4555                                  loc_1E0B:				; CODE XREF: DISKREAD+50j
  4556 00001E0D E9B000                  		jmp	loc_1EBE
  4557                                  ; ---------------------------------------------------------------------------
  4558                                  
  4559                                  loc_1E0E:				; CODE XREF: DISKREAD+55j
  4560 00001E10 E9C500                  		jmp	SETFCB
  4561                                  ; ---------------------------------------------------------------------------
  4562                                  
  4563                                  loc_1E11:				; CODE XREF: DISKREAD+2Ej
  4564 00001E13 8916[9103]              		mov	[LASTPOS], dx
  4565 00001E17 891E[9303]              		mov	[CLUSNUM], bx
  4566 00001E1B 833E[A303]00            		cmp	word [BYTCNT1], 0
  4567 00001E20 7403                    		jz	short loc_1E23
  4568 00001E22 E89A05                  		call	BUFRD
  4569                                  
  4570                                  loc_1E23:				; CODE XREF: DISKREAD+46j
  4571 00001E25 833E[A703]00            		cmp	word [SECCNT], 0
  4572 00001E2A 74E1                    		jz	short loc_1E0B
  4573 00001E2C E80406                  		call	NEXTSEC
  4574 00001E2F 72DF                    		jb	short loc_1E0E
  4575 00001E31 C606[6D03]01            		mov	byte [TRANS], 1
  4576 00001E36 8A16[6B03]              		mov	dl, [SECCLUSPOS]
  4577 00001E3A 8B0E[A703]              		mov	cx, [SECCNT]
  4578 00001E3E 8B1E[9303]              		mov	bx, [CLUSNUM]
  4579                                  
  4580                                  loc_1E40:				; CODE XREF: DISKREAD+E4j
  4581 00001E42 E81E06                  		call	OPTIMIZE
  4582 00001E45 57                      		push	di
  4583 00001E46 50                      		push	ax
  4584 00001E47 53                      		push	bx
  4585 00001E48 8E1E[E100]              		mov	ds, [DMAADD+2]
  4586 00001E4C 52                      		push	dx
  4587 00001E4D 51                      		push	cx
  4588 00001E4E E805FE                  		call	DREAD
  4589 00001E51 5B                      		pop	bx
  4590 00001E52 5A                      		pop	dx
  4591 00001E53 01D3                    		add	bx, dx
  4592 00001E55 268A4600                		mov	al, [es:bp]
  4593 00001E59 E84F07                  		call	SETVISIT
  4594                                  
  4595                                  loc_1E5A:				; CODE XREF: DISKREAD+CFj
  4596 00001E5C C6450701                		mov	byte [di+7], 1
  4597 00001E60 3A4504                  		cmp	al, [di+4]
  4598 00001E63 7541                    		jnz	short loc_1EA4
  4599 00001E65 395508                  		cmp	[di+8],	dx
  4600 00001E68 723C                    		jb	short loc_1EA4
  4601 00001E6A 395D08                  		cmp	[di+8],	bx
  4602 00001E6D 7337                    		jnb	short loc_1EA4
  4603 00001E6F 807D0500                		cmp	byte [di+5], 0
  4604 00001E73 742E                    		jz	short loc_1EA1
  4605 00001E75 58                      		pop	ax
  4606 00001E76 50                      		push	ax
  4607 00001E77 57                      		push	di
  4608 00001E78 52                      		push	dx
  4609 00001E79 2B5508                  		sub	dx, [di+8]
  4610 00001E7C F7DA                    		neg	dx
  4611 00001E7E 89FE                    		mov	si, di
  4612 00001E80 89C7                    		mov	di, ax
  4613 00001E82 89D0                    		mov	ax, dx
  4614 00001E84 268B4E02                		mov	cx, [es:bp+2]
  4615 00001E88 F7E1                    		mul	cx
  4616 00001E8A 01C7                    		add	di, ax
  4617 00001E8C 83C610                  		add	si, 10h
  4618 00001E8F D1E9                    		shr	cx, 1
  4619 00001E91 06                      		push	es
  4620 00001E92 368E06[E100]            		mov	es, [ss:DMAADD+2]
  4621 00001E97 F3A5                    		rep movsw
  4622 00001E99 7301                    		jnb	short loc_1E9A
  4623 00001E9B A4                      		movsb
  4624                                  
  4625                                  loc_1E9A:				; CODE XREF: DISKREAD+BFj
  4626 00001E9C 07                      		pop	es
  4627 00001E9D 5A                      		pop	dx
  4628 00001E9E 5F                      		pop	di
  4629 00001E9F 268A4600                		mov	al, [es:bp]
  4630                                  
  4631                                  loc_1EA1:				; CODE XREF: DISKREAD+99j
  4632 00001EA3 E82E07                  		call	SCANPLACE
  4633                                  
  4634                                  loc_1EA4:				; CODE XREF: DISKREAD+89j DISKREAD+8Ej ...
  4635 00001EA6 E81B07                  		call	SKIPVISIT
  4636 00001EA9 75B1                    		jnz	short loc_1E5A
  4637 00001EAB 16                      		push	ss
  4638 00001EAC 1F                      		pop	ds
  4639 00001EAD 59                      		pop	cx
  4640 00001EAE 59                      		pop	cx
  4641 00001EAF 5B                      		pop	bx
  4642 00001EB0 E30E                    		jcxz	loc_1EBE
  4643 00001EB2 81FBF80F                		cmp	bx, 0FF8h
  4644 00001EB6 7320                    		jnb	short SETFCB
  4645 00001EB8 B200                    		mov	dl, 0
  4646 00001EBA FF06[9103]              		inc	word [LASTPOS]
  4647 00001EBE EB82                    		jmp	short loc_1E40
  4648                                  ; ---------------------------------------------------------------------------
  4649                                  
  4650                                  loc_1EBE:				; CODE XREF: DISKREAD:loc_1E0Bj
  4651                                  					; DISKREAD+D6j
  4652 00001EC0 A1[A503]                		mov	ax, word [BYTCNT2]
  4653 00001EC3 09C0                    		or	ax, ax
  4654 00001EC5 7411                    		jz	short SETFCB
  4655 00001EC7 A3[A303]                		mov	word [BYTCNT1], ax
  4656 00001ECA E86605                  		call	NEXTSEC
  4657 00001ECD 7209                    		jb	short SETFCB
  4658 00001ECF C706[9D03]0000          		mov	word [BYTSECPOS], 0
  4659 00001ED5 E8E704                  		call	BUFRD
  4660                                  
  4661                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4662                                  
  4663                                  SETFCB:					; CODE XREF: LOAD:loc_1A99p
  4664                                  					; DISKREAD:loc_1E0Ej ...
  4665 00001ED8 C436[8503]              		les	si, [THISFCB]
  4666 00001EDC A1[8903]                		mov	ax, word [NEXTADD]
  4667 00001EDF 89C7                    		mov	di, ax
  4668 00001EE1 2B06[DF00]              		sub	ax, word [DMAADD]
  4669 00001EE5 31D2                    		xor	dx, dx
  4670 00001EE7 268B4C0E                		mov	cx, [es:si+0Eh]
  4671 00001EEB F7F1                    		div	cx
  4672 00001EED 3B06[8F03]              		cmp	ax, word [RECCNT]
  4673 00001EF1 7422                    		jz	short loc_1F13
  4674 00001EF3 C606[6C03]01            		mov	byte [DSKERR], 1
  4675 00001EF8 09D2                    		or	dx, dx
  4676 00001EFA 7419                    		jz	short loc_1F13
  4677 00001EFC C606[6C03]03            		mov	byte [DSKERR], 3
  4678 00001F01 29D1                    		sub	cx, dx
  4679 00001F03 06                      		push	es
  4680 00001F04 8E06[E100]              		mov	es, word [DMAADD+2]
  4681 00001F08 93                      		xchg	ax, bx
  4682 00001F09 31C0                    		xor	ax, ax
  4683 00001F0B D1E9                    		shr	cx, 1
  4684 00001F0D 7301                    		jnb	short loc_1F0E
  4685 00001F0F AA                      		stosb
  4686                                  
  4687                                  loc_1F0E:				; CODE XREF: SETFCB+35j
  4688 00001F10 F3AB                    		rep stosw
  4689 00001F12 93                      		xchg	ax, bx
  4690 00001F13 07                      		pop	es
  4691 00001F14 40                      		inc	ax
  4692                                  
  4693                                  loc_1F13:				; CODE XREF: SETFCB+19j SETFCB+22j
  4694 00001F15 89C1                    		mov	cx, ax
  4695 00001F17 89F7                    		mov	di, si
  4696                                  
  4697                                  loc_1F17:				; CODE XREF: DISKWRITE+182j
  4698 00001F19 26F64518FF              		test	byte [es:di+18h], 0FFh
  4699 00001F1E 7814                    		js	short ADDREC
  4700 00001F20 A1[9303]                		mov	ax, word [CLUSNUM]
  4701 00001F23 2681651D00F0            		and	word [es:di+1Dh], 0F000h
  4702 00001F29 2609451D                		or	[es:di+1Dh], ax
  4703 00001F2D A1[9103]                		mov	ax, word [LASTPOS]
  4704 00001F30 2689451B                		mov	[es:di+1Bh], ax
  4705                                  
  4706                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4707                                  
  4708                                  ADDREC:					; CODE XREF: STORE+68p	SETFCB+46j ...
  4709 00001F34 A1[8B03]                		mov	ax, [RECPOS]
  4710 00001F37 8B16[8D03]              		mov	dx, [RECPOS+2]
  4711 00001F3B E307                    		jcxz	locret_1F42
  4712 00001F3D 49                      		dec	cx
  4713 00001F3E 01C8                    		add	ax, cx
  4714 00001F40 83D200                  		adc	dx, 0
  4715 00001F43 41                      		inc	cx
  4716                                  
  4717                                  locret_1F42:				; CODE XREF: ADDREC+7j
  4718 00001F44 C3                      		retn
  4719                                  
  4720                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4721                                  
  4722                                  DISKWRITE:				; CODE XREF: STORE+12p
  4723 00001F45 80E33F                  		and	bl, 3Fh
  4724 00001F48 26885D18                		mov	[es:di+18h], bl
  4725 00001F4C C42E[7003]              		les	bp, [THISDPB]
  4726 00001F50 E847FE                  		call	BREAKDOWN
  4727 00001F53 A1[9F03]                		mov	ax, [BYTPOS]
  4728 00001F56 8B16[A103]              		mov	dx, [BYTPOS+2]
  4729 00001F5A E378                    		jcxz	loc_1FD2
  4730 00001F5C 01C8                    		add	ax, cx
  4731 00001F5E 83D200                  		adc	dx, 0
  4732 00001F61 26F77602                		div	word [es:bp+2]
  4733 00001F65 89C3                    		mov	bx, ax
  4734 00001F67 09D2                    		or	dx, dx
  4735 00001F69 7501                    		jnz	short loc_1F6A
  4736 00001F6B 48                      		dec	ax
  4737                                  
  4738                                  loc_1F6A:				; CODE XREF: DISKWRITE+24j
  4739 00001F6C 268A4E05                		mov	cl, [es:bp+5]
  4740 00001F70 D3E8                    		shr	ax, cl
  4741 00001F72 50                      		push	ax
  4742 00001F73 52                      		push	dx
  4743 00001F74 06                      		push	es
  4744 00001F75 C43E[8503]              		les	di, [THISFCB]
  4745 00001F79 268B4510                		mov	ax, [es:di+10h]
  4746 00001F7D 268B5512                		mov	dx, [es:di+12h]
  4747 00001F81 07                      		pop	es
  4748 00001F82 26F77602                		div	word [es:bp+2]
  4749 00001F86 89C1                    		mov	cx, ax
  4750 00001F88 09D2                    		or	dx, dx
  4751 00001F8A 7401                    		jz	short loc_1F8B
  4752 00001F8C 40                      		inc	ax
  4753                                  
  4754                                  loc_1F8B:				; CODE XREF: DISKWRITE+45j
  4755 00001F8D A3[9B03]                		mov	[VALSEC], ax
  4756 00001F90 31C0                    		xor	ax, ax
  4757 00001F92 A3[AF03]                		mov	[GROWCNT], ax
  4758 00001F95 A3[B103]                		mov	[GROWCNT+2], ax
  4759 00001F98 58                      		pop	ax
  4760 00001F99 29CB                    		sub	bx, cx
  4761 00001F9B 7247                    		jb	short loc_1FE2
  4762 00001F9D 7438                    		jz	short loc_1FD5
  4763 00001F9F 89D1                    		mov	cx, dx
  4764 00001FA1 93                      		xchg	ax, bx
  4765 00001FA2 26F76602                		mul	word [es:bp+2]
  4766 00001FA6 29C8                    		sub	ax, cx
  4767 00001FA8 83DA00                  		sbb	dx, 0
  4768 00001FAB 01D8                    		add	ax, bx
  4769 00001FAD 83D200                  		adc	dx, 0
  4770 00001FB0 EB2B                    		jmp	short loc_1FDB
  4771                                  ; ---------------------------------------------------------------------------
  4772                                  
  4773                                  loc_1FB0:				; CODE XREF: DISKWRITE+B3j
  4774 00001FB2 89C1                    		mov	cx, ax
  4775 00001FB4 E8C603                  		call	SKPCLP
  4776 00001FB7 E318                    		jcxz	loc_1FCF
  4777 00001FB9 E83005                  		call	ALLOCATE
  4778 00001FBC 7313                    		jnb	short loc_1FCF
  4779                                  
  4780                                  loc_1FBC:				; CODE XREF: DISKREAD:loc_1E08j
  4781                                  					; DISKWRITE+BCj ...
  4782 00001FBE 31C9                    		xor	cx, cx
  4783 00001FC0 C606[6C03]01            		mov	byte [DSKERR], 1
  4784 00001FC5 A1[8B03]                		mov	ax, [RECPOS]
  4785 00001FC8 8B16[8D03]              		mov	dx, [RECPOS+2]
  4786 00001FCC C43E[8503]              		les	di, [THISFCB]
  4787 00001FD0 C3                      		retn
  4788                                  ; ---------------------------------------------------------------------------
  4789                                  
  4790                                  loc_1FCF:				; CODE XREF: DISKWRITE+72j
  4791                                  					; DISKWRITE+77j
  4792 00001FD1 EB45                    		jmp	short loc_2016
  4793                                  ; ---------------------------------------------------------------------------
  4794 00001FD3 90                      		db  90h
  4795                                  ; ---------------------------------------------------------------------------
  4796                                  
  4797                                  loc_1FD2:				; CODE XREF: DISKWRITE+15j
  4798 00001FD4 E9F300                  		jmp	loc_20C8
  4799                                  ; ---------------------------------------------------------------------------
  4800                                  
  4801                                  loc_1FD5:				; CODE XREF: DISKWRITE+58j
  4802 00001FD7 29D0                    		sub	ax, dx
  4803 00001FD9 7609                    		jbe	short loc_1FE2
  4804 00001FDB 31D2                    		xor	dx, dx
  4805                                  
  4806                                  loc_1FDB:				; CODE XREF: DISKWRITE+6Bj
  4807 00001FDD A3[AF03]                		mov	[GROWCNT], ax
  4808 00001FE0 8916[B103]              		mov	[GROWCNT+2], dx
  4809                                  
  4810                                  loc_1FE2:				; CODE XREF: DISKWRITE+56j
  4811                                  					; DISKWRITE+94j
  4812 00001FE4 58                      		pop	ax
  4813 00001FE5 8B0E[9303]              		mov	cx, [CLUSNUM]
  4814 00001FE9 E86D03                  		call	FNDCLUS
  4815 00001FEC 891E[9303]              		mov	[CLUSNUM], bx
  4816 00001FF0 8916[9103]              		mov	word [LASTPOS], dx
  4817 00001FF4 29D0                    		sub	ax, dx
  4818 00001FF6 7420                    		jz	short loc_2016
  4819 00001FF8 E3B8                    		jcxz	loc_1FB0
  4820 00001FFA 51                      		push	cx
  4821 00001FFB 89C1                    		mov	cx, ax
  4822 00001FFD E8EC04                  		call	ALLOCATE
  4823 00002000 58                      		pop	ax
  4824 00002001 72BB                    		jb	short loc_1FBC
  4825 00002003 89C1                    		mov	cx, ax
  4826 00002005 8B16[9103]              		mov	dx, [LASTPOS]
  4827 00002009 42                      		inc	dx
  4828 0000200A 49                      		dec	cx
  4829 0000200B 7403                    		jz	short loc_200E
  4830 0000200D E86D03                  		call	SKPCLP
  4831                                  
  4832                                  loc_200E:				; CODE XREF: DISKWRITE+C6j
  4833 00002010 891E[9303]              		mov	[CLUSNUM], bx
  4834 00002014 8916[9103]              		mov	[LASTPOS], dx
  4835                                  
  4836                                  loc_2016:				; CODE XREF: DISKWRITE:loc_1FCFj
  4837                                  					; DISKWRITE+B1j
  4838 00002018 833E[A303]00            		cmp	word [BYTCNT1], 0
  4839 0000201D 7407                    		jz	short loc_2024
  4840 0000201F 8B1E[9303]              		mov	bx, word [CLUSNUM]
  4841 00002023 E8CB03                  		call	BUFWRT
  4842                                  
  4843                                  loc_2024:				; CODE XREF: DISKWRITE+D8j
  4844 00002026 A1[A703]                		mov	ax, [SECCNT]
  4845 00002029 09C0                    		or	ax, ax
  4846 0000202B 7465                    		jz	short loc_2090
  4847 0000202D 0106[9903]              		add	word [SECPOS], ax
  4848 00002031 E8FF03                  		call	NEXTSEC
  4849 00002034 C606[6D03]01            		mov	byte [TRANS], 1
  4850 00002039 8A16[6B03]              		mov	dl, [SECCLUSPOS]
  4851 0000203D 8B1E[9303]              		mov	bx, [CLUSNUM]
  4852 00002041 8B0E[A703]              		mov	cx, [SECCNT]
  4853                                  
  4854                                  loc_2043:				; CODE XREF: DISKWRITE+148j
  4855 00002045 E81B04                  		call	OPTIMIZE
  4856 00002048 57                      		push	di
  4857 00002049 50                      		push	ax
  4858 0000204A 52                      		push	dx
  4859 0000204B 53                      		push	bx
  4860 0000204C 268A4600                		mov	al, [es:bp]
  4861 00002050 89CB                    		mov	bx, cx
  4862 00002052 01D3                    		add	bx, dx
  4863 00002054 E85405                  		call	SETVISIT
  4864                                  
  4865                                  loc_2055:				; CODE XREF: DISKWRITE+130j
  4866 00002057 C6450701                		mov	byte [di+7], 1
  4867 0000205B 3A4504                  		cmp	al, [di+4]
  4868 0000205E 7512                    		jnz	short loc_2070
  4869 00002060 395508                  		cmp	[di+8],	dx
  4870 00002063 720D                    		jb	short loc_2070
  4871 00002065 395D08                  		cmp	[di+8],	bx
  4872 00002068 7308                    		jnb	short loc_2070
  4873 0000206A C74504FF00              		mov	word [di+4], 0FFh
  4874 0000206F E86205                  		call	SCANPLACE
  4875                                  
  4876                                  loc_2070:				; CODE XREF: DISKWRITE+119j
  4877                                  					; DISKWRITE+11Ej ...
  4878 00002072 E84F05                  		call	SKIPVISIT
  4879 00002075 75E0                    		jnz	short loc_2055
  4880 00002077 5B                      		pop	bx
  4881 00002078 5A                      		pop	dx
  4882 00002079 368E1E[E100]            		mov	ds, [ss:DMAADD+2]
  4883 0000207E E8FBFB                  		call	DWRITE
  4884 00002081 59                      		pop	cx
  4885 00002082 5B                      		pop	bx
  4886 00002083 16                      		push	ss
  4887 00002084 1F                      		pop	ds
  4888 00002085 E30B                    		jcxz	loc_2090
  4889 00002087 B200                    		mov	dl, 0
  4890 00002089 FF06[9103]              		inc	word [LASTPOS]
  4891 0000208D EBB6                    		jmp	short loc_2043
  4892                                  
  4893                                  ; ---------------------------------------------------------------------------
  4894                                  
  4895                                  loc_208D:				; CODE XREF: DISKWRITE+1A5j
  4896 0000208F E92CFF                  		jmp	loc_1FBC
  4897                                  ; ---------------------------------------------------------------------------
  4898                                  
  4899                                  loc_2090:				; CODE XREF: DISKWRITE+E6j
  4900                                  					; DISKWRITE+140j
  4901 00002092 A1[A503]                		mov	ax, [BYTCNT2]
  4902 00002095 09C0                    		or	ax, ax
  4903 00002097 740F                    		jz	short loc_20A6
  4904 00002099 A3[A303]                		mov	[BYTCNT1], ax
  4905 0000209C E89403                  		call	NEXTSEC
  4906 0000209F C706[9D03]0000          		mov	word [BYTSECPOS], 0
  4907 000020A5 E84903                  		call	BUFWRT
  4908                                  
  4909                                  loc_20A6:				; CODE XREF: DISKWRITE+152j
  4910 000020A8 C43E[8503]              		les	di, [THISFCB]
  4911 000020AC A1[AF03]                		mov	ax, [GROWCNT]
  4912 000020AF 8B0E[B103]              		mov	cx, [GROWCNT+2]
  4913 000020B3 09C0                    		or	ax, ax
  4914 000020B5 7504                    		jnz	short loc_20B9
  4915 000020B7 09C9                    		or	cx, cx
  4916 000020B9 7408                    		jz	short loc_20C1
  4917                                  
  4918                                  loc_20B9:				; CODE XREF: DISKWRITE+170j
  4919 000020BB 26014510                		add	[es:di+10h], ax
  4920 000020BF 26114D12                		adc	[es:di+12h], cx
  4921                                  
  4922                                  loc_20C1:				; CODE XREF: DISKWRITE+174j
  4923 000020C3 8B0E[8F03]              		mov	cx, [RECCNT]
  4924 000020C7 E94FFE                  		jmp	loc_1F17
  4925                                  ; ---------------------------------------------------------------------------
  4926                                  
  4927                                  loc_20C8:				; CODE XREF: DISKWRITE:loc_1FD2j
  4928 000020CA 89C1                    		mov	cx, ax
  4929 000020CC 09D1                    		or	cx, dx
  4930 000020CE 743B                    		jz	short loc_2109
  4931 000020D0 83E801                  		sub	ax, 1
  4932 000020D3 83DA00                  		sbb	dx, 0
  4933 000020D6 26F77602                		div	word [es:bp+2]
  4934 000020DA 268A4E05                		mov	cl, [es:bp+5]
  4935 000020DE D3E8                    		shr	ax, cl
  4936 000020E0 89C1                    		mov	cx, ax
  4937 000020E2 E87402                  		call	FNDCLUS
  4938 000020E5 E31C                    		jcxz	loc_2101
  4939 000020E7 E80204                  		call	ALLOCATE
  4940 000020EA 72A3                    		jb	short loc_208D
  4941                                  
  4942                                  loc_20EA:				; CODE XREF: DISKWRITE+1C4j
  4943                                  					; DISKWRITE+1DEj ...
  4944 000020EC C43E[8503]              		les	di, [THISFCB]
  4945 000020F0 A1[9F03]                		mov	ax, word [BYTPOS]
  4946 000020F3 26894510                		mov	[es:di+10h], ax
  4947 000020F7 A1[A103]                		mov	ax, word [BYTPOS+2]
  4948 000020FA 26894512                		mov	[es:di+12h], ax
  4949 000020FE 31C9                    		xor	cx, cx
  4950 00002100 E931FE                  		jmp	ADDREC
  4951                                  ; ---------------------------------------------------------------------------
  4952                                  
  4953                                  loc_2101:				; CODE XREF: DISKWRITE+1A0j
  4954 00002103 BAFF0F                  		mov	dx, 0FFFh
  4955 00002106 E88304                  		call	RELBLKS
  4956 00002109 EBE1                    		jmp	short loc_20EA
  4957                                  ; ---------------------------------------------------------------------------
  4958                                  
  4959                                  loc_2109:				; CODE XREF: DISKWRITE+189j
  4960 0000210B 31DB                    		xor	bx, bx
  4961 0000210D 06                      		push	es
  4962 0000210E C43E[8503]              		les	di, [THISFCB]
  4963 00002112 26895D1B                		mov	[es:di+1Bh], bx
  4964 00002116 26875D19                		xchg	bx, [es:di+19h]
  4965 0000211A 2681651D00F0            		and	word [es:di+1Dh], 0F000h
  4966 00002120 07                      		pop	es
  4967 00002121 09DB                    		or	bx, bx
  4968 00002123 74C7                    		jz	short loc_20EA
  4969 00002125 E86204                  		call	RELEASE
  4970 00002128 EBC2                    		jmp	short loc_20EA
  4971                                  
  4972                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  4973                                  
  4974                                  UNPACK:					; CODE XREF: seg000:SCANFREEp
  4975                                  					; SETDIRSRCH+13p ...
  4976 0000212A 263B5E0D                		cmp	bx, [es:bp+0Dh]
  4977 0000212E 7715                    		ja	short loc_2143
  4978 00002130 E88100                  		call	MAPCLUSTER
  4979 00002133 8B3D                    		mov	di, [di]
  4980 00002135 7307                    		jnb	short loc_213C
  4981 00002137 51                      		push	cx
  4982 00002138 B104                    		mov	cl, 4
  4983 0000213A D3EF                    		shr	di, cl
  4984 0000213C 59                      		pop	cx
  4985 0000213D F9                      		stc
  4986                                  
  4987                                  loc_213C:				; CODE XREF: UNPACK+Bj
  4988 0000213E 81E7FF0F                		and	di, 0FFFh
  4989 00002142 16                      		push	ss
  4990 00002143 1F                      		pop	ds
  4991 00002144 C3                      		retn
  4992                                  ; ---------------------------------------------------------------------------
  4993                                  
  4994                                  loc_2143:				; CODE XREF: UNPACK+4j
  4995 00002145 50                      		push	ax
  4996 00002146 B480                    		mov	ah, 80h	; ''
  4997 00002148 BFFF0F                  		mov	di, 0FFFh
  4998 0000214B E8C60B                  		call	FATAL
  4999 0000214E 58                      		pop	ax
  5000                                  
  5001                                  locret_214D:				; CODE XREF: PACK+2Cj
  5002 0000214F C3                      		retn
  5003                                  
  5004                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5005                                  
  5006                                  PACK:					; CODE XREF: ALLOCATE+59p ALLOCATE+63p ...
  5007 00002150 E86100                  		call	MAPCLUSTER
  5008 00002153 8B35                    		mov	si, [di]
  5009 00002155 730B                    		jnb	short loc_2161
  5010 00002157 51                      		push	cx
  5011 00002158 B104                    		mov	cl, 4
  5012 0000215A D3E2                    		shl	dx, cl
  5013 0000215C 59                      		pop	cx
  5014 0000215D 83E60F                  		and	si, 0Fh
  5015 00002160 EB04                    		jmp	short loc_2165
  5016                                  ; ---------------------------------------------------------------------------
  5017                                  
  5018                                  loc_2161:				; CODE XREF: PACK+5j
  5019 00002162 81E600F0                		and	si, 0F000h
  5020                                  
  5021                                  loc_2165:				; CODE XREF: PACK+11j
  5022 00002166 09D6                    		or	si, dx
  5023 00002168 8935                    		mov	[di], si
  5024 0000216A 36C536[B303]            		lds	si, [ss:CURBUF]
  5025 0000216F C6440501                		mov	byte [si+5], 1
  5026 00002173 36803E[7703]00          		cmp	byte [ss:CLUSSPLIT], 0
  5027 00002179 16                      		push	ss
  5028 0000217A 1F                      		pop	ds
  5029 0000217B 74D2                    		jz	short locret_214D
  5030 0000217D 50                      		push	ax
  5031 0000217E 53                      		push	bx
  5032 0000217F 51                      		push	cx
  5033 00002180 A1[7903]                		mov	ax, word [CLUSSAVE]
  5034 00002183 8E1E[B503]              		mov	ds, word [CURBUF+2]
  5035 00002187 83C610                  		add	si, 10h
  5036 0000218A 8824                    		mov	[si], ah
  5037 0000218C 16                      		push	ss
  5038 0000218D 1F                      		pop	ds
  5039 0000218E 50                      		push	ax
  5040 0000218F 8B16[7B03]              		mov	dx, word [CLUSSEC]
  5041 00002193 BE0100                  		mov	si, 1
  5042 00002196 30C0                    		xor	al, al
  5043 00002198 E8E804                  		call	GETBUFFRB
  5044 0000219B C53E[B303]              		lds	di, [CURBUF]
  5045 0000219F C6450501                		mov	byte [di+5], 1
  5046 000021A3 83C710                  		add	di, 10h
  5047 000021A6 4F                      		dec	di
  5048 000021A7 26037E02                		add	di, [es:bp+2]
  5049 000021AB 58                      		pop	ax
  5050 000021AC 8805                    		mov	[di], al
  5051 000021AE 16                      		push	ss
  5052 000021AF 1F                      		pop	ds
  5053 000021B0 59                      		pop	cx
  5054 000021B1 5B                      		pop	bx
  5055 000021B2 58                      		pop	ax
  5056 000021B3 C3                      		retn
  5057                                  
  5058                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5059                                  
  5060                                  MAPCLUSTER:				; CODE XREF: UNPACK+6p	PACKp
  5061 000021B4 C606[7703]00            		mov	byte [CLUSSPLIT], 0
  5062 000021B9 50                      		push	ax
  5063 000021BA 53                      		push	bx
  5064 000021BB 51                      		push	cx
  5065 000021BC 52                      		push	dx
  5066 000021BD 89D8                    		mov	ax, bx
  5067 000021BF D1E8                    		shr	ax, 1
  5068 000021C1 01D8                    		add	ax, bx
  5069 000021C3 31D2                    		xor	dx, dx
  5070 000021C5 268B4E02                		mov	cx, [es:bp+2]
  5071 000021C9 F7F1                    		div	cx
  5072 000021CB 26034606                		add	ax, [es:bp+6]
  5073 000021CF 49                      		dec	cx
  5074 000021D0 50                      		push	ax
  5075 000021D1 52                      		push	dx
  5076 000021D2 51                      		push	cx
  5077 000021D3 89C2                    		mov	dx, ax
  5078 000021D5 30C0                    		xor	al, al
  5079 000021D7 BE0100                  		mov	si, 1
  5080 000021DA E8A604                  		call	GETBUFFRB
  5081 000021DD C536[B303]              		lds	si, [CURBUF]
  5082 000021E1 8D7C10                  		lea	di, [si+10h]
  5083 000021E4 59                      		pop	cx
  5084 000021E5 58                      		pop	ax
  5085 000021E6 5A                      		pop	dx
  5086 000021E7 01C7                    		add	di, ax
  5087 000021E9 39C8                    		cmp	ax, cx
  5088 000021EB 7529                    		jnz	short loc_2215
  5089 000021ED 8A05                    		mov	al, [di]
  5090 000021EF 16                      		push	ss
  5091 000021F0 1F                      		pop	ds
  5092 000021F1 FE06[7703]              		inc	byte [CLUSSPLIT]
  5093 000021F5 A2[7903]                		mov	byte [CLUSSAVE], al
  5094 000021F8 8916[7B03]              		mov	word [CLUSSEC], dx
  5095 000021FC 42                      		inc	dx
  5096 000021FD 30C0                    		xor	al, al
  5097 000021FF BE0100                  		mov	si, 1
  5098 00002202 E87E04                  		call	GETBUFFRB
  5099 00002205 C536[B303]              		lds	si, [CURBUF]
  5100 00002209 8D7C10                  		lea	di, [si+10h]
  5101 0000220C 8A05                    		mov	al, [di]
  5102 0000220E 16                      		push	ss
  5103 0000220F 1F                      		pop	ds
  5104 00002210 A2[7A03]                		mov	byte [CLUSSAVE+1], al
  5105 00002213 BF[7903]                		mov	di, CLUSSAVE ; 379h
  5106                                  
  5107                                  loc_2215:				; CODE XREF: MAPCLUSTER+37j
  5108 00002216 5A                      		pop	dx
  5109 00002217 59                      		pop	cx
  5110 00002218 5B                      		pop	bx
  5111 00002219 89D8                    		mov	ax, bx
  5112 0000221B D1E8                    		shr	ax, 1
  5113 0000221D 58                      		pop	ax
  5114 0000221E C3                      		retn
  5115                                  
  5116                                  ; ---------------------------------------------------------------------------
  5117                                  ; START	OF FUNCTION CHUNK FOR FATREAD
  5118                                  
  5119                                  loc_221E:				; CODE XREF: FATREAD+39j
  5120                                  					; FATREAD:loc_2341j
  5121 0000221F 81E7FF00                		and	di, 0FFh
  5122 00002223 B402                    		mov	ah, 2
  5123 00002225 A0[6F03]                		mov	al, byte [THISDRV]
  5124 00002228 E8ED0A                  		call	FATAL1
  5125                                  ; END OF FUNCTION CHUNK	FOR FATREAD
  5126                                  
  5127                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5128                                  
  5129                                  
  5130                                  FATREAD:				; CODE XREF: seg000:093Ep seg000:0CB9p ...
  5131                                  
  5132                                  ; FUNCTION CHUNK AT 221E SIZE 0000000C BYTES
  5133                                  
  5134 0000222B A0[6F03]                		mov	al, byte [THISDRV]
  5135 0000222E E87CF1                  		call	GETBP
  5136 00002231 B00F                    		mov	al, 0Fh
  5137 00002233 268A6601                		mov	ah, [es:bp+1]
  5138 00002237 A3[2D01]                		mov	[DEVCALL], ax
  5139 0000223A C606[2F01]01            		mov	byte [DEVCALL_REQFUNC], 1
  5140 0000223F C706[3001]0000          		mov	word [DEVCALL_REQSTAT], 0
  5141 00002245 268A4616                		mov	al, [es:bp+16h]
  5142 00002249 A2[3A01]                		mov	[CALLUNIT], al
  5143 0000224C 06                      		push	es
  5144 0000224D 1E                      		push	ds
  5145 0000224E BB[2D01]                		mov	bx, DEVCALL ; 12Dh
  5146 00002251 26C57612                		lds	si, [es:bp+12h]
  5147 00002255 07                      		pop	es
  5148 00002256 E8F0F0                  		call	DEVIOCALL2
  5149 00002259 16                      		push	ss
  5150 0000225A 1F                      		pop	ds
  5151 0000225B 07                      		pop	es
  5152 0000225C 8B3E[3001]              		mov	di, [DEVCALL_REQSTAT]
  5153 00002260 F7C70080                		test	di, 8000h
  5154 00002264 75B9                    		jnz	short loc_221E
  5155 00002266 30E4                    		xor	ah, ah
  5156 00002268 26866617                		xchg	ah, [es:bp+17h]
  5157 0000226C A0[6F03]                		mov	al, byte [THISDRV]
  5158 0000226F 0A26[3B01]              		or	ah, byte [CALLXAD]
  5159 00002273 7815                    		js	short loc_2289
  5160 00002275 7401                    		jz	short loc_2277
  5161                                  
  5162                                  locret_2276:				; CODE XREF: FATREAD+56j
  5163 00002277 C3                      		retn
  5164                                  ; ---------------------------------------------------------------------------
  5165                                  
  5166                                  loc_2277:				; CODE XREF: FATREAD+4Aj
  5167 00002278 FEC4                    		inc	ah
  5168 0000227A C53E[0301]              		lds	di, [BUFFHEAD]
  5169                                  
  5170                                  loc_227D:				; CODE XREF: FATREAD+5Dj
  5171 0000227E 3B4504                  		cmp	ax, [di+4]
  5172 00002281 74F4                    		jz	short locret_2276
  5173 00002283 C53D                    		lds	di, [di]
  5174 00002285 83FFFF                  		cmp	di, 0FFFFh
  5175 00002288 75F4                    		jnz	short loc_227D
  5176                                  
  5177                                  loc_2289:				; CODE XREF: FATREAD+48j
  5178 0000228A E81E03                  		call	SETVISIT
  5179                                  
  5180                                  loc_228C:				; CODE XREF: FATREAD+76j
  5181 0000228D C6450701                		mov	byte [di+7], 1
  5182 00002291 3A4504                  		cmp	al, [di+4]
  5183 00002294 7508                    		jnz	short loc_229D
  5184 00002296 C74504FF00              		mov	word [di+4], 0FFh
  5185 0000229B E83603                  		call	SCANPLACE
  5186                                  
  5187                                  loc_229D:				; CODE XREF: FATREAD+69j
  5188 0000229E E82303                  		call	SKIPVISIT
  5189 000022A1 75EA                    		jnz	short loc_228C
  5190 000022A3 26C57E12                		lds	di, [es:bp+12h]
  5191 000022A7 F745040020              		test	word [di+4], 2000h
  5192 000022AC 750E                    		jnz	short loc_22BB
  5193 000022AE 16                      		push	ss
  5194 000022AF 1F                      		pop	ds
  5195 000022B0 BB0200                  		mov	bx, 2
  5196 000022B3 E874FE                  		call	UNPACK
  5197 000022B6 C53E[B303]              		lds	di, [CURBUF]
  5198 000022BA EB0C                    		jmp	short loc_22C7
  5199                                  ; ---------------------------------------------------------------------------
  5200                                  
  5201                                  loc_22BB:				; CODE XREF: FATREAD+81j
  5202 000022BC 06                      		push	es
  5203 000022BD 55                      		push	bp
  5204 000022BE 36C53E[0301]            		lds	di, [ss:BUFFHEAD]
  5205 000022C3 E89804                  		call	BUFWRITE
  5206 000022C6 5D                      		pop	bp
  5207 000022C7 07                      		pop	es
  5208                                  
  5209                                  loc_22C7:				; CODE XREF: FATREAD+8Fj
  5210 000022C8 83C710                  		add	di, 10h
  5211 000022CB 368C1E[3D01]            		mov	[ss:CALLXAD+2], ds
  5212 000022D0 16                      		push	ss
  5213 000022D1 1F                      		pop	ds
  5214 000022D2 893E[3B01]              		mov	word [CALLXAD], di
  5215 000022D6 B016                    		mov	al, 16h
  5216 000022D8 268A6601                		mov	ah, [es:bp+1]
  5217 000022DC A3[2D01]                		mov	word [DEVCALL], ax
  5218 000022DF C606[2F01]02            		mov	byte [DEVCALL_REQFUNC], 2
  5219 000022E4 C706[3001]0000          		mov	word [DEVCALL_REQSTAT], 0
  5220 000022EA 268A4616                		mov	al, [es:bp+16h]
  5221 000022EE A2[3A01]                		mov	[CALLUNIT], al
  5222 000022F1 06                      		push	es
  5223 000022F2 1E                      		push	ds
  5224 000022F3 26FF7614                		push	word [es:bp+14h]
  5225 000022F7 26FF7612                		push	word [es:bp+12h]
  5226 000022FB BB[2D01]                		mov	bx, DEVCALL ; 12Dh
  5227 000022FE 5E                      		pop	si
  5228 000022FF 1F                      		pop	ds
  5229 00002300 07                      		pop	es
  5230 00002301 E845F0                  		call	DEVIOCALL2
  5231 00002304 07                      		pop	es
  5232 00002305 16                      		push	ss
  5233 00002306 1F                      		pop	ds
  5234 00002307 8B3E[3001]              		mov	di, [DEVCALL_REQSTAT]
  5235 0000230B F7C70080                		test	di, 8000h
  5236 0000230F 7531                    		jnz	short loc_2341
  5237 00002311 268A4616                		mov	al, [es:bp+16h]
  5238 00002315 C536[3F01]              		lds	si, [CALLBPB]
  5239 00002319 3A440A                  		cmp	al, [si+0Ah]
  5240 0000231C 7413                    		jz	short loc_2330
  5241 0000231E E874EA                  		call	_$SETDPB
  5242 00002321 36C53E[3B01]            		lds	di, [ss:CALLXAD]
  5243 00002326 268A4608                		mov	al, [es:bp+8]
  5244 0000232A 268A660F                		mov	ah, [es:bp+0Fh]
  5245 0000232E 8945FA                  		mov	[di-6],	ax
  5246                                  
  5247                                  loc_2330:				; CODE XREF: FATREAD+F1j
  5248 00002331 16                      		push	ss
  5249 00002332 1F                      		pop	ds
  5250 00002333 B8FFFF                  		mov	ax, 0FFFFh
  5251 00002336 2685461C                		test	[es:bp+1Ch], ax
  5252 0000233A 7501                    		jnz	short loc_233C
  5253 0000233C C3                      		retn
  5254                                  ; ---------------------------------------------------------------------------
  5255                                  
  5256                                  loc_233C:				; CODE XREF: FATREAD+10Fj
  5257 0000233D 2689461C                		mov	[es:bp+1Ch], ax
  5258 00002341 C3                      		retn
  5259                                  ; ---------------------------------------------------------------------------
  5260                                  
  5261                                  loc_2341:				; CODE XREF: FATREAD+E4j
  5262 00002342 E9DAFE                  		jmp	loc_221E
  5263                                  
  5264                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5265                                  
  5266                                  
  5267                                  GET_random_record:			; CODE XREF: seg000:_$FCB_RANDOM_READp
  5268                                  					; seg000:_$FCB_RANDOM_WRITEp
  5269 00002345 B90100                  		mov	cx, 1
  5270                                  
  5271                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5272                                  
  5273                                  GETRRPOS:				; CODE XREF: SETXADDR+31p
  5274                                  					; _$FCB_RANDOM_READ_BLOCKp ...
  5275 00002348 89D7                    		mov	di, dx
  5276 0000234A 803DFF                  		cmp	byte [di], 0FFh
  5277 0000234D 7503                    		jnz	short loc_2351
  5278 0000234F 83C707                  		add	di, 7
  5279                                  
  5280                                  loc_2351:				; CODE XREF: GETRRPOS+5j
  5281 00002352 8B4521                  		mov	ax, [di+21h]
  5282 00002355 8B5523                  		mov	dx, [di+23h]
  5283 00002358 C3                      		retn
  5284                                  
  5285                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5286                                  
  5287                                  FNDCLUS:				; CODE XREF: DISKREAD+29p
  5288                                  					; DISKWRITE+A4p ...
  5289                                  
  5290                                  ; FUNCTION CHUNK AT 238B SIZE 00000004 BYTES
  5291                                  
  5292 00002359 06                      		push	es
  5293 0000235A C43E[8503]              		les	di, [THISFCB]
  5294 0000235E 268B5D1D                		mov	bx, [es:di+1Dh]
  5295 00002362 81E3FF0F                		and	bx, 0FFFh
  5296 00002366 268B551B                		mov	dx, [es:di+1Bh]
  5297 0000236A 09DB                    		or	bx, bx
  5298 0000236C 741E                    		jz	short NOCLUS
  5299 0000236E 29D1                    		sub	cx, dx
  5300 00002370 7308                    		jnb	short loc_2379
  5301 00002372 01D1                    		add	cx, dx
  5302 00002374 31D2                    		xor	dx, dx
  5303 00002376 268B5D19                		mov	bx, [es:di+19h]
  5304                                  
  5305                                  loc_2379:				; CODE XREF: FNDCLUS+17j
  5306 0000237A 07                      		pop	es
  5307 0000237B E30E                    		jcxz	locret_238A
  5308                                  
  5309                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5310                                  
  5311                                  SKPCLP:					; CODE XREF: DISKWRITE+6Fp
  5312                                  					; DISKWRITE+C8p ...
  5313 0000237D E8AAFD                  		call	UNPACK
  5314 00002380 81FFF80F                		cmp	di, 0FF8h
  5315 00002384 7305                    		jnb	short locret_238A
  5316 00002386 87DF                    		xchg	bx, di
  5317 00002388 42                      		inc	dx
  5318 00002389 E2F2                    		loop	SKPCLP
  5319                                  
  5320                                  locret_238A:				; CODE XREF: FNDCLUS+22j SKPCLP+7j
  5321 0000238B C3                      		retn
  5322                                  
  5323                                  ; ---------------------------------------------------------------------------
  5324                                  ; START	OF FUNCTION CHUNK FOR FNDCLUS
  5325                                  
  5326                                  NOCLUS:					; CODE XREF: FNDCLUS+13j
  5327 0000238C 07                      		pop	es
  5328 0000238D 41                      		inc	cx
  5329 0000238E 4A                      		dec	dx
  5330 0000238F C3                      		retn
  5331                                  ; END OF FUNCTION CHUNK	FOR FNDCLUS
  5332                                  
  5333                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5334                                  
  5335                                  BUFSEC:					; CODE XREF: BUFRD+4p sub_23F12p
  5336 00002390 8B16[9303]              		mov	dx, word [CLUSNUM]
  5337 00002394 8A1E[6B03]              		mov	bl, byte [SECCLUSPOS]
  5338 00002398 E82001                  		call	FIGREC
  5339 0000239B E8E302                  		call	GETBUFFR
  5340 0000239E C606[6D03]01            		mov	byte [TRANS], 1
  5341 000023A3 8B36[8903]              		mov	si, word [NEXTADD]
  5342 000023A7 89F7                    		mov	di, si
  5343 000023A9 8B0E[A303]              		mov	cx, word [BYTCNT1]
  5344 000023AD 01CF                    		add	di, cx
  5345 000023AF 893E[8903]              		mov	word [NEXTADD], di
  5346 000023B3 C43E[B303]              		les	di, [CURBUF]
  5347 000023B7 83C710                  		add	di, 10h
  5348 000023BA 033E[9D03]              		add	di, word [BYTSECPOS]
  5349 000023BE C3                      		retn
  5350                                  
  5351                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5352                                  
  5353                                  BUFRD:					; CODE XREF: DISKREAD+48p DISKREAD+FBp
  5354 000023BF 06                      		push	es
  5355 000023C0 B80002                  		mov	ax, 200h
  5356 000023C3 E8CAFF                  		call	BUFSEC
  5357 000023C6 8CC3                    		mov	bx, es
  5358 000023C8 8E06[E100]              		mov	es, word [DMAADD+2]
  5359 000023CC 8EDB                    		mov	ds, bx
  5360 000023CE 87FE                    		xchg	di, si
  5361 000023D0 D1E9                    		shr	cx, 1
  5362 000023D2 7301                    		jnb	short loc_23D4
  5363 000023D4 A4                      		movsb
  5364                                  
  5365                                  loc_23D4:				; CODE XREF: BUFRD+13j
  5366 000023D5 F3A5                    		rep movsw
  5367 000023D7 07                      		pop	es
  5368 000023D8 36C53E[B303]            		lds	di, [ss:CURBUF]
  5369 000023DD 8D5D10                  		lea	bx, [di+10h]
  5370 000023E0 29DE                    		sub	si, bx
  5371 000023E2 E8FD01                  		call	PLACEBUF
  5372 000023E5 263B7602                		cmp	si, [es:bp+2]
  5373 000023E9 7203                    		jb	short loc_23ED
  5374 000023EB E84F02                  		call	PLACEHEAD
  5375                                  
  5376                                  loc_23ED:				; CODE XREF: BUFRD+2Aj
  5377 000023EE 16                      		push	ss
  5378 000023EF 1F                      		pop	ds
  5379 000023F0 C3                      		retn
  5380                                  
  5381                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5382                                  
  5383                                  BUFWRT:					; CODE XREF: DISKWRITE+DEp
  5384                                  					; DISKWRITE+160p
  5385 000023F1 A1[9903]                		mov	ax, word [SECPOS]
  5386 000023F4 40                      		inc	ax
  5387 000023F5 A3[9903]                		mov	word [SECPOS], ax
  5388 000023F8 3B06[9B03]              		cmp	ax, word [VALSEC]
  5389 000023FC B001                    		mov	al, 1
  5390 000023FE 7702                    		ja	short loc_2401
  5391 00002400 30C0                    		xor	al, al
  5392                                  
  5393                                  loc_2401:				; CODE XREF: BUFWRT+Dj
  5394 00002402 06                      		push	es
  5395 00002403 E88AFF                  		call	BUFSEC
  5396 00002406 8E1E[E100]              		mov	ds, word [DMAADD+2]
  5397 0000240A D1E9                    		shr	cx, 1
  5398 0000240C 7301                    		jnb	short loc_240E
  5399 0000240E A4                      		movsb
  5400                                  
  5401                                  loc_240E:				; CODE XREF: sub_23F1Bj
  5402 0000240F F3A5                    		rep movsw
  5403 00002411 07                      		pop	es
  5404 00002412 36C51E[B303]            		lds	bx, [ss:CURBUF]
  5405 00002417 C6470501                		mov	byte [bx+5], 1
  5406 0000241B 8D7710                  		lea	si, [bx+10h]
  5407 0000241E 29F7                    		sub	di, si
  5408 00002420 89FE                    		mov	si, di
  5409 00002422 89DF                    		mov	di, bx
  5410 00002424 E8BB01                  		call	PLACEBUF
  5411 00002427 263B7602                		cmp	si, [es:bp+2]
  5412 0000242B 7203                    		jb	short loc_242F
  5413 0000242D E80D02                  		call	PLACEHEAD
  5414                                  
  5415                                  loc_242F:				; CODE XREF: BUFWRT+3Aj
  5416 00002430 16                      		push	ss
  5417 00002431 1F                      		pop	ds
  5418 00002432 C3                      		retn
  5419                                  
  5420                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5421                                  
  5422                                  NEXTSEC:				; CODE XREF: DISKREAD+52p DISKREAD+F0p ...
  5423 00002433 F606[6D03]FF            		test	byte [TRANS], 0FFh
  5424 00002438 7425                    		jz	short loc_245E
  5425 0000243A A0[6B03]                		mov	al, [SECCLUSPOS]
  5426 0000243D FEC0                    		inc	al
  5427 0000243F 263A4604                		cmp	al, [es:bp+4]
  5428 00002443 7617                    		jbe	short loc_245B
  5429 00002445 8B1E[9303]              		mov	bx, [CLUSNUM]
  5430 00002449 81FBF80F                		cmp	bx, 0FF8h
  5431 0000244D 7312                    		jnb	short loc_2460
  5432 0000244F E8D8FC                  		call	UNPACK
  5433 00002452 893E[9303]              		mov	word [CLUSNUM], di
  5434 00002456 FF06[9103]              		inc	word [LASTPOS]
  5435 0000245A B000                    		mov	al, 0
  5436                                  
  5437                                  loc_245B:				; CODE XREF: NEXTSEC+10j
  5438 0000245C A2[6B03]                		mov	byte [SECCLUSPOS], al
  5439                                  
  5440                                  loc_245E:				; CODE XREF: NEXTSEC+5j
  5441 0000245F F8                      		clc
  5442 00002460 C3                      		retn
  5443                                  ; ---------------------------------------------------------------------------
  5444                                  
  5445                                  loc_2460:				; CODE XREF: NEXTSEC+1Aj
  5446 00002461 F9                      		stc
  5447 00002462 C3                      		retn
  5448                                  
  5449                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5450                                  
  5451                                  OPTIMIZE:				; CODE XREF: DISKREAD:loc_1E40p
  5452                                  					; DISKWRITE:loc_2043p
  5453 00002463 52                      		push	dx
  5454 00002464 53                      		push	bx
  5455 00002465 268A4604                		mov	al, [es:bp+4]
  5456 00002469 FEC0                    		inc	al
  5457 0000246B 88C4                    		mov	ah, al
  5458 0000246D 28D0                    		sub	al, dl
  5459 0000246F 89CA                    		mov	dx, cx
  5460 00002471 B90000                  		mov	cx, 0
  5461                                  
  5462                                  loc_2473:				; CODE XREF: OPTIMIZE+22j
  5463 00002474 E8B3FC                  		call	UNPACK
  5464 00002477 00C1                    		add	cl, al
  5465 00002479 80D500                  		adc	ch, 0
  5466 0000247C 39D1                    		cmp	cx, dx
  5467 0000247E 732D                    		jnb	short loc_24AC
  5468 00002480 88E0                    		mov	al, ah
  5469 00002482 43                      		inc	bx
  5470 00002483 39DF                    		cmp	di, bx
  5471 00002485 74ED                    		jz	short loc_2473
  5472 00002487 4B                      		dec	bx
  5473                                  
  5474                                  loc_2487:				; CODE XREF: OPTIMIZE+56j
  5475 00002488 891E[9303]              		mov	[CLUSNUM], bx
  5476 0000248C 29CA                    		sub	dx, cx
  5477 0000248E 52                      		push	dx
  5478 0000248F 89C8                    		mov	ax, cx
  5479 00002491 26F76602                		mul	word [es:bp+2]
  5480 00002495 8B36[8903]              		mov	si, [NEXTADD]
  5481 00002499 01F0                    		add	ax, si
  5482 0000249B A3[8903]                		mov	[NEXTADD], ax
  5483 0000249E 58                      		pop	ax
  5484 0000249F 5A                      		pop	dx
  5485 000024A0 29D3                    		sub	bx, dx
  5486 000024A2 011E[9103]              		add	[LASTPOS], bx
  5487 000024A6 5B                      		pop	bx
  5488 000024A7 E81100                  		call	FIGREC
  5489 000024AA 89F3                    		mov	bx, si
  5490 000024AC C3                      		retn
  5491                                  
  5492                                  loc_24AC:				; CODE XREF: OPTIMIZE+1Bj
  5493 000024AD 29D1                    		sub	cx, dx
  5494 000024AF 28CC                    		sub	ah, cl
  5495 000024B1 FECC                    		dec	ah
  5496 000024B3 8826[6B03]              		mov	[SECCLUSPOS], ah
  5497 000024B7 89D1                    		mov	cx, dx
  5498 000024B9 EBCD                    		jmp	short loc_2487
  5499                                  
  5500                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5501                                  
  5502                                  FIGREC:					; CODE XREF: BUILDDIR+47p
  5503                                  					; SETDIRSRCH+22p ...
  5504 000024BB 51                      		push	cx
  5505 000024BC 268A4E05                		mov	cl, [es:bp+5]
  5506 000024C0 4A                      		dec	dx
  5507 000024C1 4A                      		dec	dx
  5508 000024C2 D3E2                    		shl	dx, cl
  5509 000024C4 08DA                    		or	dl, bl
  5510 000024C6 2603560B                		add	dx, [es:bp+0Bh]
  5511 000024CA 59                      		pop	cx
  5512 000024CB C3                      		retn
  5513                                  
  5514                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5515                                  
  5516                                  GETREC:					; CODE XREF: seg000:_$GET_FCB_POSITIONp
  5517                                  					; seg000:_$FCB_SEQ_READp ...
  5518 000024CC 89D7                    		mov	di, dx
  5519 000024CE 803DFF                  		cmp	byte [di], 0FFh
  5520 000024D1 7503                    		jnz	short loc_24D5
  5521 000024D3 83C707                  		add	di, 7
  5522                                  
  5523                                  loc_24D5:				; CODE XREF: GETREC+5j
  5524 000024D6 B90100                  		mov	cx, 1
  5525 000024D9 8A4520                  		mov	al, [di+20h]
  5526 000024DC 8B550C                  		mov	dx, [di+0Ch]
  5527 000024DF D0E0                    		shl	al, 1
  5528 000024E1 D1EA                    		shr	dx, 1
  5529 000024E3 D0D8                    		rcr	al, 1
  5530 000024E5 88D4                    		mov	ah, dl
  5531 000024E7 88F2                    		mov	dl, dh
  5532 000024E9 B600                    		mov	dh, 0
  5533 000024EB C3                      		retn
  5534                                  
  5535                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5536                                  
  5537                                  ALLOCATE:				; CODE XREF: BUILDDIR+1Fp
  5538                                  					; DISKWRITE+74p ...
  5539 000024EC 53                      		push	bx
  5540 000024ED 31DB                    		xor	bx, bx
  5541 000024EF E838FC                  		call	UNPACK
  5542 000024F2 893E[7F03]              		mov	 [FATBYT], di
  5543 000024F6 5B                      		pop	bx
  5544 000024F7 52                      		push	dx
  5545 000024F8 51                      		push	cx
  5546 000024F9 53                      		push	bx
  5547 000024FA 89D8                    		mov	ax, bx
  5548                                  
  5549                                  loc_24FB:				; CODE XREF: ALLOCATE+5Ej
  5550 000024FC 89DA                    		mov	dx, bx
  5551                                  
  5552                                  loc_24FD:				; CODE XREF: ALLOCATE+4Aj ALLOCATE+53j
  5553 000024FE 43                      		inc	bx
  5554 000024FF 263B5E0D                		cmp	bx, [es:bp+0Dh]
  5555 00002503 7E2B                    		jle	short loc_252F
  5556 00002505 83F801                  		cmp	ax, 1
  5557 00002508 7F2B                    		jg	short loc_2534
  5558 0000250A 5B                      		pop	bx
  5559 0000250B BAFF0F                  		mov	dx, 0FFFh
  5560 0000250E E87B00                  		call	RELBLKS
  5561 00002511 58                      		pop	ax
  5562 00002512 29C8                    		sub	ax, cx
  5563 00002514 5A                      		pop	dx
  5564 00002515 E86200                  		call	RESTFATBYT
  5565 00002518 42                      		inc	dx
  5566 00002519 01D0                    		add	ax, dx
  5567 0000251B 268A5604                		mov	dl, [es:bp+4]
  5568 0000251F B600                    		mov	dh, 0
  5569 00002521 42                      		inc	dx
  5570 00002522 F7E2                    		mul	dx
  5571 00002524 89C1                    		mov	cx, ax
  5572 00002526 2B0E[8B03]              		sub	cx, [RECPOS]
  5573 0000252A 7702                    		ja	short loc_252D
  5574 0000252C 31C9                    		xor	cx, cx
  5575                                  
  5576                                  loc_252D:				; CODE XREF: ALLOCATE+3Ej
  5577 0000252E F9                      		stc
  5578                                  
  5579                                  locret_252E:				; CODE XREF: ALLOCATE+73j
  5580 0000252F C3                      		retn
  5581                                  ; ---------------------------------------------------------------------------
  5582                                  
  5583                                  loc_252F:				; CODE XREF: ALLOCATE+17j
  5584 00002530 E8F7FB                  		call	UNPACK
  5585 00002533 740C                    		jz	short loc_2540
  5586                                  
  5587                                  loc_2534:				; CODE XREF: ALLOCATE+1Cj
  5588 00002535 48                      		dec	ax
  5589 00002536 7EC6                    		jle	short loc_24FD
  5590 00002538 93                      		xchg	ax, bx
  5591 00002539 E8EEFB                  		call	UNPACK
  5592 0000253C 7403                    		jz	short loc_2540
  5593 0000253E 93                      		xchg	ax, bx
  5594 0000253F EBBD                    		jmp	short loc_24FD
  5595                                  ; ---------------------------------------------------------------------------
  5596                                  
  5597                                  loc_2540:				; CODE XREF: ALLOCATE+47j ALLOCATE+50j
  5598 00002541 87DA                    		xchg	bx, dx
  5599 00002543 89D0                    		mov	ax, dx
  5600 00002545 E808FC                  		call	PACK
  5601 00002548 89C3                    		mov	bx, ax
  5602 0000254A E2B0                    		loop	loc_24FB
  5603 0000254C BAFF0F                  		mov	dx, 0FFFh
  5604 0000254F E8FEFB                  		call	PACK
  5605 00002552 5B                      		pop	bx
  5606 00002553 59                      		pop	cx
  5607 00002554 5A                      		pop	dx
  5608 00002555 E8D2FB                  		call	UNPACK
  5609 00002558 E81F00                  		call	RESTFATBYT
  5610 0000255B 87DF                    		xchg	bx, di
  5611 0000255D 09FF                    		or	di, di
  5612 0000255F 75CE                    		jnz	short locret_252E
  5613 00002561 06                      		push	es
  5614 00002562 C43E[8503]              		les	di, [THISFCB]
  5615 00002566 81E3FF0F                		and	bx, 0FFFh
  5616 0000256A 26895D19                		mov	[es:di+19h], bx
  5617 0000256E 2681651D00F0            		and	word [es:di+1Dh], 0F000h
  5618 00002574 26095D1D                		or	[es:di+1Dh], bx
  5619 00002578 07                      		pop	es
  5620 00002579 C3                      		retn
  5621                                  
  5622                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5623                                  
  5624                                  RESTFATBYT:				; CODE XREF: ALLOCATE+29p ALLOCATE+6Cp
  5625 0000257A 53                      		push	bx
  5626 0000257B 52                      		push	dx
  5627 0000257C 57                      		push	di
  5628 0000257D 31DB                    		xor	bx, bx
  5629 0000257F 8B16[7F03]              		mov	dx, word [FATBYT]
  5630 00002583 E8CAFB                  		call	PACK
  5631 00002586 5F                      		pop	di
  5632 00002587 5A                      		pop	dx
  5633 00002588 5B                      		pop	bx
  5634                                  
  5635                                  locret_2588:				; CODE XREF: RELBLKS+3j
  5636 00002589 C3                      		retn
  5637                                  
  5638                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5639                                  
  5640                                  RELEASE:				; CODE XREF: seg000:105Bp
  5641                                  					; DISKWRITE+1E0p ...
  5642 0000258A 31D2                    		xor	dx, dx
  5643                                  
  5644                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5645                                  
  5646                                  
  5647                                  RELBLKS:				; CODE XREF: DISKWRITE+1C1p
  5648                                  					; ALLOCATE+22p
  5649 0000258C E89BFB                  		call	UNPACK
  5650 0000258F 74F8                    		jz	short locret_2588
  5651 00002591 89F8                    		mov	ax, di
  5652 00002593 E8BAFB                  		call	PACK
  5653 00002596 3DF80F                  		cmp	ax, 0FF8h
  5654 00002599 89C3                    		mov	bx, ax
  5655 0000259B 72ED                    		jb	short RELEASE
  5656                                  
  5657                                  locret_259C:				; CODE XREF: GETEOF+7j
  5658 0000259D C3                      		retn
  5659                                  
  5660                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5661                                  
  5662                                  GETEOF:					; CODE XREF: BUILDDIR+19p GETEOF+Bj
  5663 0000259E E889FB                  		call	UNPACK
  5664 000025A1 81FFF80F                		cmp	di, 0FF8h
  5665 000025A5 73F6                    		jnb	short locret_259C
  5666 000025A7 89FB                    		mov	bx, di
  5667 000025A9 EBF3                    		jmp	short GETEOF
  5668                                  
  5669                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5670                                  
  5671                                  SETVISIT:				; CODE XREF: seg000:0A88p DISKREAD+7Fp ...
  5672 000025AB 36C53E[0301]            		lds	di, [ss:BUFFHEAD]
  5673 000025B0 50                      		push	ax
  5674 000025B1 31C0                    		xor	ax, ax
  5675                                  
  5676                                  loc_25B2:				; CODE XREF: SETVISIT+10j
  5677 000025B3 884507                  		mov	[di+7],	al
  5678 000025B6 C53D                    		lds	di, [di]
  5679 000025B8 83FFFF                  		cmp	di, 0FFFFh
  5680 000025BB 75F6                    		jnz	short loc_25B2
  5681 000025BD 36C53E[0301]            		lds	di, [ss:BUFFHEAD]
  5682 000025C2 58                      		pop	ax
  5683                                  
  5684                                  locret_25C2:				; CODE XREF: SKIPVISIT+3j SKIPVISIT+9j
  5685 000025C3 C3                      		retn
  5686                                  
  5687                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5688                                  
  5689                                  SKIPVISIT:				; CODE XREF: seg000:loc_A9Dp
  5690                                  					; DISKREAD:loc_1EA4p ...
  5691 000025C4 83FFFF                  		cmp	di, 0FFFFh
  5692 000025C7 74FA                    		jz	short locret_25C2
  5693 000025C9 807D0701                		cmp	byte [di+7], 1
  5694 000025CD 75F4                    		jnz	short locret_25C2
  5695 000025CF C53D                    		lds	di, [di]
  5696 000025D1 EBF1                    		jmp	short SKIPVISIT
  5697                                  
  5698                                  ; ---------------------------------------------------------------------------
  5699 000025D3 C3                      		db 0C3h
  5700                                  
  5701                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5702                                  
  5703                                  SCANPLACE:				; CODE XREF: seg000:0A9Ap
  5704                                  					; DISKREAD:loc_1EA1p ...
  5705 000025D4 06                      		push	es
  5706 000025D5 C435                    		les	si, [di]
  5707 000025D7 E80800                  		call	PLACEBUF
  5708 000025DA 06                      		push	es
  5709 000025DB 1F                      		pop	ds
  5710 000025DC 89F7                    		mov	di, si
  5711 000025DE 07                      		pop	es
  5712 000025DF C3                      		retn
  5713                                  
  5714                                  ; ---------------------------------------------------------------------------
  5715 000025E0 EB                      		db 0EBh
  5716 000025E1 57                      		db  57h
  5717                                  
  5718                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5719                                  
  5720                                  PLACEBUF:				; CODE XREF: BUFRD+23p BUFWRT+33p ...
  5721 000025E2 E844E1                  		call	save_world
  5722 000025E5 C40D                    		les	cx, [di]
  5723 000025E7 83F9FF                  		cmp	cx, 0FFFFh
  5724 000025EA 744D                    		jz	short NRET
  5725 000025EC 8CC5                    		mov	bp, es
  5726 000025EE 1E                      		push	ds
  5727 000025EF 07                      		pop	es
  5728 000025F0 36C536[0301]            		lds	si, [ss:BUFFHEAD]
  5729 000025F5 E87A00                  		call	POINTCOMP
  5730 000025F8 750C                    		jnz	short loc_2605
  5731 000025FA 36890E[0301]            		mov	word [ss:BUFFHEAD], cx
  5732 000025FF 36892E[0501]            		mov	word [ss:BUFFHEAD+2], bp
  5733 00002604 EB14                    		jmp	short loc_2619
  5734                                  ; ---------------------------------------------------------------------------
  5735                                  
  5736                                  loc_2605:				; CODE XREF: PLACEBUF+16j PLACEBUF+2Fj
  5737 00002606 1E                      		push	ds
  5738 00002607 56                      		push	si
  5739 00002608 C534                    		lds	si, [si]
  5740 0000260A E86500                  		call	POINTCOMP
  5741 0000260D 7404                    		jz	short loc_2612
  5742 0000260F 58                      		pop	ax
  5743 00002610 58                      		pop	ax
  5744 00002611 EBF3                    		jmp	short loc_2605
  5745                                  ; ---------------------------------------------------------------------------
  5746                                  
  5747                                  loc_2612:				; CODE XREF: PLACEBUF+2Bj
  5748 00002613 5E                      		pop	si
  5749 00002614 1F                      		pop	ds
  5750 00002615 890C                    		mov	[si], cx
  5751 00002617 896C02                  		mov	[si+2],	bp
  5752                                  
  5753                                  loc_2619:				; CODE XREF: PLACEBUF+22j PLACEBUF+43j
  5754 0000261A 1E                      		push	ds
  5755 0000261B 56                      		push	si
  5756 0000261C C534                    		lds	si, [si]
  5757 0000261E 83FEFF                  		cmp	si, 0FFFFh
  5758 00002621 7404                    		jz	short loc_2626
  5759 00002623 58                      		pop	ax
  5760 00002624 58                      		pop	ax
  5761 00002625 EBF3                    		jmp	short loc_2619
  5762                                  ; ---------------------------------------------------------------------------
  5763                                  
  5764                                  loc_2626:				; CODE XREF: PLACEBUF+3Fj
  5765 00002627 5E                      		pop	si
  5766 00002628 1F                      		pop	ds
  5767 00002629 893C                    		mov	[si], di
  5768 0000262B 8C4402                  		mov	word [si+2], es
  5769 0000262E 26C705FFFF              		mov	word [es:di], 0FFFFh
  5770 00002633 26C74502FFFF            		mov	word [es:di+2], 0FFFFh
  5771                                  
  5772                                  NRET:					; CODE XREF: PLACEBUF+8j PLACEHEAD+33j
  5773 00002639 E8D9E0                  		call	restore_world
  5774                                  
  5775                                  locret_263B:				; CODE XREF: POINTCOMP+2j
  5776 0000263C C3                      		retn
  5777                                  
  5778                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5779                                  
  5780                                  PLACEHEAD:				; CODE XREF: BUFRD+2Cp BUFWRT+3Cp
  5781 0000263D E8E9E0                  		call	save_world
  5782 00002640 1E                      		push	ds
  5783 00002641 07                      		pop	es
  5784 00002642 36C536[0301]            		lds	si, [ss:BUFFHEAD]
  5785 00002647 36893E[0301]            		mov	word [ss:BUFFHEAD], di
  5786 0000264C 368C06[0501]            		mov	word [ss:BUFFHEAD+2], es
  5787 00002651 268935                  		mov	[es:di], si
  5788 00002654 268C5D02                		mov	word [es:di+2], ds
  5789                                  
  5790                                  loc_2657:				; CODE XREF: PLACEHEAD+26j
  5791 00002658 1E                      		push	ds
  5792 00002659 56                      		push	si
  5793 0000265A C534                    		lds	si, [si]
  5794 0000265C E81300                  		call	POINTCOMP
  5795 0000265F 7404                    		jz	short loc_2664
  5796 00002661 58                      		pop	ax
  5797 00002662 58                      		pop	ax
  5798 00002663 EBF3                    		jmp	short loc_2657
  5799                                  ; ---------------------------------------------------------------------------
  5800                                  
  5801                                  loc_2664:				; CODE XREF: PLACEHEAD+22j
  5802 00002665 5E                      		pop	si
  5803 00002666 1F                      		pop	ds
  5804 00002667 C704FFFF                		mov	word [si], 0FFFFh
  5805 0000266B C74402FFFF              		mov	word [si+2], 0FFFFh
  5806 00002670 EBC7                    		jmp	short NRET
  5807                                  
  5808                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5809                                  
  5810                                  POINTCOMP:				; CODE XREF: PLACEBUF+13p PLACEBUF+28p ...
  5811 00002672 39FE                    		cmp	si, di
  5812 00002674 75C6                    		jnz	short locret_263B
  5813 00002676 51                      		push	cx
  5814 00002677 52                      		push	dx
  5815 00002678 8CD9                    		mov	cx, ds
  5816 0000267A 8CC2                    		mov	dx, es
  5817 0000267C 39D1                    		cmp	cx, dx
  5818 0000267E 5A                      		pop	dx
  5819 0000267F 59                      		pop	cx
  5820 00002680 C3                      		retn
  5821                                  
  5822                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5823                                  
  5824                                  GETBUFFR:				; CODE XREF: seg000:0E64p seg000:0E94p ...
  5825 00002681 31F6                    		xor	si, si
  5826                                  
  5827                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5828                                  
  5829                                  GETBUFFRB:				; CODE XREF: PACK+49p MAPCLUSTER+26p ...
  5830 00002683 A3[7D03]                		mov	word [PREREAD], ax
  5831 00002686 268A4600                		mov	al, [es:bp]
  5832 0000268A C53E[2901]              		lds	di, [LASTBUFFER]
  5833 0000268E 83FFFF                  		cmp	di, 0FFFFh
  5834 00002691 740C                    		jz	short loc_269E
  5835 00002693 3B5508                  		cmp	dx, [di+8]
  5836 00002696 7507                    		jnz	short loc_269E
  5837 00002698 3A4504                  		cmp	al, [di+4]
  5838 0000269B 7502                    		jnz	short loc_269E
  5839 0000269D EB6F                    		jmp	short loc_270D
  5840                                  ; ---------------------------------------------------------------------------
  5841                                  
  5842                                  loc_269E:				; CODE XREF: GETBUFFRB+Ej GETBUFFRB+13j ...
  5843 0000269F 36C53E[0301]            		lds	di, [ss:BUFFHEAD]
  5844                                  
  5845                                  loc_26A3:				; CODE XREF: GETBUFFRB+32j
  5846 000026A4 3B5508                  		cmp	dx, [di+8]
  5847 000026A7 7507                    		jnz	short loc_26AF
  5848 000026A9 3A4504                  		cmp	al, [di+4]
  5849 000026AC 7502                    		jnz	short loc_26AF
  5850 000026AE EB49                    		jmp	short loc_26F8
  5851                                  ; ---------------------------------------------------------------------------
  5852                                  
  5853                                  loc_26AF:				; CODE XREF: GETBUFFRB+24j GETBUFFRB+29j
  5854 000026B0 C53D                    		lds	di, [di]
  5855 000026B2 83FFFF                  		cmp	di, 0FFFFh
  5856 000026B5 75ED                    		jnz	short loc_26A3
  5857 000026B7 36C53E[0301]            		lds	di, [ss:BUFFHEAD]
  5858 000026BC 56                      		push	si
  5859 000026BD 52                      		push	dx
  5860 000026BE 55                      		push	bp
  5861 000026BF 06                      		push	es
  5862 000026C0 E89B00                  		call	BUFWRITE
  5863 000026C3 07                      		pop	es
  5864 000026C4 5D                      		pop	bp
  5865 000026C5 5A                      		pop	dx
  5866 000026C6 5E                      		pop	si
  5867 000026C7 36F606[7D03]FF          		test	byte [ss:PREREAD], 0FFh
  5868 000026CD 7518                    		jnz	short loc_26E6
  5869 000026CF 8D5D10                  		lea	bx, [di+10h]
  5870 000026D2 B90100                  		mov	cx, 1
  5871 000026D5 56                      		push	si
  5872 000026D6 57                      		push	di
  5873 000026D7 52                      		push	dx
  5874 000026D8 09F6                    		or	si, si
  5875 000026DA 7405                    		jz	short loc_26E0
  5876 000026DC E856F5                  		call	FATSECRD
  5877 000026DF EB03                    		jmp	short loc_26E3
  5878                                  ; ---------------------------------------------------------------------------
  5879                                  
  5880                                  loc_26E0:				; CODE XREF: GETBUFFRB+57j
  5881 000026E1 E872F5                  		call	DREAD
  5882                                  
  5883                                  loc_26E3:				; CODE XREF: GETBUFFRB+5Cj
  5884 000026E4 5A                      		pop	dx
  5885 000026E5 5F                      		pop	di
  5886 000026E6 5E                      		pop	si
  5887                                  
  5888                                  loc_26E6:				; CODE XREF: GETBUFFRB+4Aj
  5889 000026E7 895508                  		mov	[di+8],	dx
  5890 000026EA 896D0C                  		mov	[di+0Ch], bp
  5891 000026ED 8C450E                  		mov	[di+0Eh], es
  5892 000026F0 30E4                    		xor	ah, ah
  5893 000026F2 268A4600                		mov	al, [es:bp]
  5894 000026F6 894504                  		mov	[di+4],	ax
  5895                                  
  5896                                  loc_26F8:				; CODE XREF: GETBUFFRB+2Bj
  5897 000026F9 B80100                  		mov	ax, 1
  5898 000026FC 09F6                    		or	si, si
  5899 000026FE 7408                    		jz	short loc_2707
  5900 00002700 268A4608                		mov	al, [es:bp+8]
  5901 00002704 268A660F                		mov	ah, [es:bp+0Fh]
  5902                                  
  5903                                  loc_2707:				; CODE XREF: GETBUFFRB+7Bj
  5904 00002708 89450A                  		mov	[di+0Ah], ax
  5905 0000270B E8D4FE                  		call	PLACEBUF
  5906                                  
  5907                                  loc_270D:				; CODE XREF: GETBUFFRB+1Aj
  5908 0000270E 368C1E[B503]            		mov	word [ss:CURBUF+2], ds
  5909 00002713 368C1E[2B01]            		mov	[ss:LASTBUFFER+2], ds
  5910 00002718 16                      		push	ss
  5911 00002719 1F                      		pop	ds
  5912 0000271A 893E[B303]              		mov	word [CURBUF], di
  5913 0000271E 893E[2901]              		mov	[LASTBUFFER], di
  5914 00002722 C3                      		retn
  5915                                  
  5916                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5917                                  
  5918                                  FLUSHBUF:				; CODE XREF: seg000:0A79p seg000:0E86p ...
  5919 00002723 C53E[0301]              		lds	di, [BUFFHEAD]
  5920 00002727 B4FF                    		mov	ah, 0FFh
  5921                                  
  5922                                  loc_2728:				; CODE XREF: FLUSHBUF+36j
  5923 00002729 386504                  		cmp	[di+4],	ah
  5924 0000272C 7426                    		jz	short loc_2753
  5925 0000272E 38C4                    		cmp	ah, al
  5926 00002730 7405                    		jz	short loc_2736
  5927 00002732 3A4504                  		cmp	al, [di+4]
  5928 00002735 751D                    		jnz	short loc_2753
  5929                                  
  5930                                  loc_2736:				; CODE XREF: FLUSHBUF+Dj
  5931 00002737 807D0500                		cmp	byte [di+5], 0
  5932 0000273B 7417                    		jz	short loc_2753
  5933 0000273D 50                      		push	ax
  5934 0000273E FF7504                  		push	word [di+4]
  5935 00002741 E81A00                  		call	BUFWRITE
  5936 00002744 58                      		pop	ax
  5937 00002745 30E4                    		xor	ah, ah
  5938 00002747 363A06[2501]            		cmp	al, [ss:WPERR]
  5939 0000274C 7502                    		jnz	short loc_274F
  5940 0000274E B0FF                    		mov	al, 0FFh
  5941                                  
  5942                                  loc_274F:				; CODE XREF: FLUSHBUF+29j
  5943 00002750 894504                  		mov	[di+4],	ax
  5944 00002753 58                      		pop	ax
  5945                                  
  5946                                  loc_2753:				; CODE XREF: FLUSHBUF+9j FLUSHBUF+12j	...
  5947 00002754 C53D                    		lds	di, [di]
  5948 00002756 83FFFF                  		cmp	di, 0FFFFh
  5949 00002759 75CE                    		jnz	short loc_2728
  5950 0000275B 16                      		push	ss
  5951 0000275C 1F                      		pop	ds
  5952                                  
  5953                                  locret_275C:				; CODE XREF: BUFWRITE+8j BUFWRITE+Cj ...
  5954 0000275D C3                      		retn
  5955                                  
  5956                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  5957                                  
  5958                                  BUFWRITE:				; CODE XREF: FATREAD+98p GETBUFFRB+3Dp ...
  5959 0000275E B8FF00                  		mov	ax, 0FFh
  5960 00002761 874504                  		xchg	ax, [di+4]
  5961 00002764 3CFF                    		cmp	al, 0FFh
  5962 00002766 74F5                    		jz	short locret_275C
  5963 00002768 08E4                    		or	ah, ah
  5964 0000276A 74F1                    		jz	short locret_275C
  5965 0000276C 363A06[2501]            		cmp	al, [ss:WPERR]
  5966 00002771 74EA                    		jz	short locret_275C
  5967 00002773 C46D0C                  		les	bp, [di+0Ch]
  5968 00002776 8D5D10                  		lea	bx, [di+10h]
  5969 00002779 8B5508                  		mov	dx, [di+8]
  5970 0000277C 8B4D0A                  		mov	cx, [di+0Ah]
  5971 0000277F 88E8                    		mov	al, ch
  5972 00002781 30ED                    		xor	ch, ch
  5973 00002783 88EC                    		mov	ah, ch
  5974 00002785 57                      		push	di
  5975                                  
  5976                                  loc_2785:				; CODE XREF: BUFWRITE+38j
  5977 00002786 51                      		push	cx
  5978 00002787 50                      		push	ax
  5979 00002788 B90100                  		mov	cx, 1
  5980 0000278B 53                      		push	bx
  5981 0000278C 52                      		push	dx
  5982 0000278D E8ECF4                  		call	DWRITE
  5983 00002790 5A                      		pop	dx
  5984 00002791 5B                      		pop	bx
  5985 00002792 58                      		pop	ax
  5986 00002793 59                      		pop	cx
  5987 00002794 01C2                    		add	dx, ax
  5988 00002796 E2EE                    		loop	loc_2785
  5989 00002798 5F                      		pop	di
  5990 00002799 C3                      		retn
  5991                                  
  5992                                  ; ---------------------------------------------------------------------------
  5993                                  
  5994                                  _$GET_DATE:				; DATA XREF: seg000:0792o
  5995 0000279A 16                      		push	ss
  5996 0000279B 1F                      		pop	ds
  5997 0000279C E85E10                  		call	READTIME
  5998 0000279F A1[1B01]                		mov	ax, [YEAR]
  5999 000027A2 8B1E[1901]              		mov	bx, [DAY]
  6000 000027A6 E890DF                  		call	get_user_stack
  6001 000027A9 895C06                  		mov	[si+6],	bx
  6002 000027AC 05BC07                  		add	ax, 1980	; 7BCh
  6003 000027AF 894404                  		mov	[si+4],	ax
  6004 000027B2 36A0[1F01]              		mov	al, [ss:WEEKDAY]
  6005 000027B6 C3                      		retn
  6006                                  ; ---------------------------------------------------------------------------
  6007                                  
  6008                                  _$SET_DATE:				; DATA XREF: seg000:0794o
  6009 000027B7 B0FF                    		mov	al, 0FFh
  6010 000027B9 81E9BC07                		sub	cx, 1980	; 7BCh
  6011 000027BD 7217                    		jb	short locret_27D5
  6012 000027BF 83F977                  		cmp	cx, 119		; 77h
  6013 000027C2 7712                    		ja	short locret_27D5
  6014 000027C4 08F6                    		or	dh, dh
  6015 000027C6 740E                    		jz	short locret_27D5
  6016 000027C8 08D2                    		or	dl, dl
  6017 000027CA 740A                    		jz	short locret_27D5
  6018 000027CC 80FE0C                  		cmp	dh, 0Ch
  6019 000027CF 7705                    		ja	short locret_27D5
  6020 000027D1 16                      		push	ss
  6021 000027D2 1F                      		pop	ds
  6022 000027D3 E8B210                  		call	DODATE
  6023                                  
  6024                                  locret_27D5:				; CODE XREF: seg000:27BCj seg000:27C1j ...
  6025 000027D6 C3                      		retn
  6026                                  ; ---------------------------------------------------------------------------
  6027                                  
  6028                                  _$GET_TIME:				; DATA XREF: seg000:0796o
  6029 000027D7 16                      		push	ss
  6030 000027D8 1F                      		pop	ds
  6031 000027D9 E82110                  		call	READTIME
  6032 000027DC E85ADF                  		call	get_user_stack
  6033 000027DF 895406                  		mov	[si+6],	dx
  6034 000027E2 894C04                  		mov	[si+4],	cx
  6035 000027E5 30C0                    		xor	al, al
  6036                                  
  6037                                  locret_27E6:				; CODE XREF: seg000:27ECj seg000:27F1j ...
  6038 000027E7 C3                      		retn
  6039                                  ; ---------------------------------------------------------------------------
  6040                                  
  6041                                  _$SET_TIME:				; DATA XREF: seg000:0798o
  6042 000027E8 B0FF                    		mov	al, 0FFh
  6043 000027EA 80FD18                  		cmp	ch, 24		; 18h
  6044 000027ED 73F8                    		jnb	short locret_27E6
  6045 000027EF 80F93C                  		cmp	cl, 60		; 3Ch
  6046 000027F2 73F3                    		jnb	short locret_27E6
  6047 000027F4 80FE3C                  		cmp	dh, 60		; 3Ch
  6048 000027F7 73EE                    		jnb	short locret_27E6
  6049 000027F9 80FA64                  		cmp	dl, 100		; 64h
  6050 000027FC 73E9                    		jnb	short locret_27E6
  6051 000027FE 51                      		push	cx
  6052 000027FF 52                      		push	dx
  6053 00002800 16                      		push	ss
  6054 00002801 1F                      		pop	ds
  6055 00002802 BB[2D03]                		mov	bx, TIMEBUF ; 32Dh
  6056 00002805 B90600                  		mov	cx, 6
  6057 00002808 31D2                    		xor	dx, dx
  6058 0000280A 89D0                    		mov	ax, dx
  6059 0000280C 53                      		push	bx
  6060 0000280D E8BFEB                  		call	SETREAD
  6061 00002810 1E                      		push	ds
  6062 00002811 C536[F800]              		lds	si, [BCLOCK]
  6063 00002815 E831EB                  		call	DEVIOCALL2
  6064 00002818 1F                      		pop	ds
  6065 00002819 5B                      		pop	bx
  6066 0000281A E8E5EB                  		call	SETWRITE
  6067 0000281D 8F06[3103]              		pop	word [TIMEBUF+4]
  6068 00002821 8F06[2F03]              		pop	word [TIMEBUF+2]
  6069 00002825 C536[F800]              		lds	si, [BCLOCK]
  6070 00002829 E81DEB                  		call	DEVIOCALL2
  6071 0000282C 30C0                    		xor	al, al
  6072 0000282E C3                      		retn
  6073                                  ; ---------------------------------------------------------------------------
  6074                                  
  6075                                  _$FCB_SEQ_READ:				; DATA XREF: seg000:0766o
  6076 0000282F E89AFC                  		call	GETREC
  6077 00002832 E86CF1                  		call	LOAD
  6078 00002835 EB06                    		jmp	short loc_283C
  6079                                  ; ---------------------------------------------------------------------------
  6080                                  
  6081                                  _$FCB_SEQ_WRITE:			; DATA XREF: seg000:0768o
  6082 00002837 E892FC                  		call	GETREC
  6083 0000283A E89BF2                  		call	STORE
  6084                                  
  6085                                  loc_283C:				; CODE XREF: seg000:2834j
  6086 0000283D E344                    		jcxz	loc_2882
  6087 0000283F 83C001                  		add	ax, 1
  6088 00002842 83D200                  		adc	dx, 0
  6089 00002845 EB3C                    		jmp	short loc_2882
  6090                                  ; ---------------------------------------------------------------------------
  6091                                  
  6092                                  _$FCB_RANDOM_READ:			; DATA XREF: seg000:0780o
  6093 00002847 E8FBFA                  		call	GET_random_record  ; GETRRPOS1
  6094 0000284A E854F1                  		call	LOAD
  6095 0000284D EB24                    		jmp	short loc_2872
  6096                                  ; ---------------------------------------------------------------------------
  6097                                  
  6098                                  _$FCB_RANDOM_WRITE:			; DATA XREF: seg000:0782o
  6099 0000284F E8F3FA                  		call	GET_random_record ; GETRRPOS1
  6100 00002852 E883F2                  		call	STORE
  6101 00002855 EB1C                    		jmp	short loc_2872
  6102                                  
  6103                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6104                                  
  6105                                  
  6106                                  _$FCB_RANDOM_READ_BLOCK:		; CODE XREF: _$READ:loc_3EAAp
  6107                                  					; DATA XREF: seg000:078Co
  6108 00002857 E8EEFA                  		call	GETRRPOS
  6109 0000285A E844F1                  		call	LOAD
  6110 0000285D EB06                    		jmp	short loc_2864
  6111                                  ; ---------------------------------------------------------------------------
  6112                                  
  6113                                  _$FCB_RANDOM_WRITE_BLOCK:		; CODE XREF: seg000:3ED0p
  6114                                  					; DATA XREF: seg000:078Eo
  6115 0000285F E8E6FA                  		call	GETRRPOS
  6116 00002862 E873F2                  		call	STORE
  6117                                  
  6118                                  loc_2864:				; CODE XREF: _$FCB_RANDOM_READ_BLOCK+6j
  6119 00002865 E8D1DE                  		call	get_user_stack
  6120 00002868 894C04                  		mov	[si+4],	cx
  6121                                  
  6122                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6123                                  
  6124                                  
  6125                                  FINNOSAV:				; CODE XREF: IOFUNC+C3p IOIN+7p
  6126 0000286B E306                    		jcxz	loc_2872
  6127 0000286D 83C001                  		add	ax, 1
  6128 00002870 83D200                  		adc	dx, 0
  6129                                  
  6130                                  loc_2872:				; CODE XREF: seg000:284Cj seg000:2854j ...
  6131 00002873 26894521                		mov	[es:di+21h], ax
  6132 00002877 26885523                		mov	[es:di+23h], dl
  6133 0000287B 08F6                    		or	dh, dh
  6134 0000287D 7404                    		jz	short loc_2882
  6135 0000287F 26887524                		mov	[es:di+24h], dh
  6136                                  
  6137                                  loc_2882:				; CODE XREF: seg000:loc_283Cj
  6138                                  					; seg000:2844j	...
  6139 00002883 89C1                    		mov	cx, ax
  6140 00002885 247F                    		and	al, 7Fh
  6141 00002887 26884520                		mov	[es:di+20h], al
  6142 0000288B 80E180                  		and	cl, 80h
  6143 0000288E D1E1                    		shl	cx, 1
  6144 00002890 D1D2                    		rcl	dx, 1
  6145 00002892 88E8                    		mov	al, ch
  6146 00002894 88D4                    		mov	ah, dl
  6147 00002896 2689450C                		mov	[es:di+0Ch], ax
  6148 0000289A 36A0[6C03]              		mov	al, [ss:DSKERR]
  6149                                  
  6150                                  locret_289D:				; CODE XREF: seg000:28A7j seg000:28CAj ...
  6151 0000289E C3                      		retn
  6152                                  
  6153                                  ; ---------------------------------------------------------------------------
  6154                                  
  6155                                  _$FCB_DELETE:				; DATA XREF: seg000:0764o
  6156 0000289F E88606                  		call	MOVNAME
  6157 000028A2 B0FF                    		mov	al, 0FFh
  6158 000028A4 36A2[6403]              		mov	[ss:FOUNDDEL], al
  6159 000028A8 72F4                    		jb	short locret_289D
  6160 000028AA 36A0[4503]              		mov	al, [ss:ATTRIB]
  6161 000028AE 241F                    		and	al, 1Fh
  6162 000028B0 3C1F                    		cmp	al, 1Fh
  6163 000028B2 7512                    		jnz	short loc_28C5
  6164 000028B4 B90B00                  		mov	cx, 11
  6165 000028B7 B03F                    		mov	al, 3Fh	; '?'
  6166 000028B9 BF[3903]                		mov	di, NAME1
  6167 000028BC F3AE                    		repe scasb
  6168 000028BE 7506                    		jnz	short loc_28C5
  6169 000028C0 36C606[6303]00          		mov	byte [ss:DELALL], 0
  6170                                  
  6171                                  loc_28C5:				; CODE XREF: seg000:28B1j seg000:28BDj
  6172 000028C6 E8FAEB                  		call	FINDNAME
  6173 000028C9 B0FF                    		mov	al, 0FFh
  6174 000028CB 72D1                    		jb	short locret_289D
  6175 000028CD 08E4                    		or	ah, ah
  6176 000028CF 78CD                    		js	short locret_289D
  6177                                  
  6178                                  loc_28D0:				; CODE XREF: seg000:2910j
  6179 000028D1 C42E[7003]              		les	bp, [THISDPB]
  6180 000028D5 8A26[6303]              		mov	ah, [DELALL]
  6181 000028D9 1E                      		push	ds
  6182 000028DA C53E[B303]              		lds	di, [CURBUF]
  6183 000028DE 36F606[4503]01          		test	byte [ss:ATTRIB], 1
  6184 000028E4 7509                    		jnz	short loc_28EE
  6185 000028E6 F6470B01                		test	byte [bx+0Bh], 1
  6186 000028EA 7403                    		jz	short loc_28EE
  6187 000028EC 1F                      		pop	ds
  6188 000028ED EB1C                    		jmp	short loc_290A
  6189                                  ; ---------------------------------------------------------------------------
  6190                                  
  6191                                  loc_28EE:				; CODE XREF: seg000:28E3j seg000:28E9j
  6192 000028EF 36C606[6403]00          		mov	byte [ss:FOUNDDEL], 0
  6193 000028F5 C6450501                		mov	byte [di+5], 1
  6194 000028F9 8827                    		mov	[bx], ah
  6195 000028FB 8B1C                    		mov	bx, [si]
  6196 000028FD 1F                      		pop	ds
  6197 000028FE 09DB                    		or	bx, bx
  6198 00002900 7409                    		jz	short loc_290A
  6199 00002902 263B5E0D                		cmp	bx, [es:bp+0Dh]
  6200 00002906 7703                    		ja	short loc_290A
  6201 00002908 E87FFC                  		call	RELEASE
  6202                                  
  6203                                  loc_290A:				; CODE XREF: seg000:28ECj seg000:28FFj ...
  6204 0000290B E85EEC                  		call	GETENTRY
  6205 0000290E E800EC                  		call	NEXTENT
  6206 00002911 73BE                    		jnb	short loc_28D0
  6207 00002913 E85A01                  		call	FLUSHRET1
  6208 00002916 A0[6403]                		mov	al, byte [FOUNDDEL]
  6209 00002919 C3                      		retn
  6210                                  ; ---------------------------------------------------------------------------
  6211                                  
  6212                                  loc_2919:				; CODE XREF: seg000:291Fj seg000:292Aj ...
  6213 0000291A E98900                  		jmp	ERRET
  6214                                  ; ---------------------------------------------------------------------------
  6215                                  
  6216                                  _$FCB_RENAME:				; DATA XREF: seg000:076Co
  6217 0000291D E80806                  		call	MOVNAME
  6218 00002920 72F8                    		jb	short loc_2919
  6219 00002922 83C605                  		add	si, 5
  6220 00002925 BF[4603]                		mov	di, NAME2 ; 346h
  6221 00002928 E85706                  		call	LODNAME
  6222 0000292B 72ED                    		jb	short loc_2919
  6223 0000292D E893EB                  		call	FINDNAME
  6224 00002930 72E8                    		jb	short loc_2919
  6225 00002932 08E4                    		or	ah, ah
  6226 00002934 78E4                    		js	short loc_2919
  6227 00002936 BE[3903]                		mov	si, NAME1 ; 339h
  6228 00002939 BF[5303]                		mov	di, NAME3 ; 353h
  6229 0000293C B90D00                  		mov	cx, 13
  6230 0000293F F3A4                    		rep movsb
  6231                                  
  6232                                  loc_2940:				; CODE XREF: seg000:299Dj
  6233 00002941 BF[3903]                		mov	di, NAME1 ; 339h
  6234 00002944 BE[4603]                		mov	si, NAME2 ; 346h
  6235 00002947 B90B00                  		mov	cx, 11
  6236                                  
  6237                                  loc_2949:				; CODE XREF: seg000:2958j
  6238 0000294A AC                      		lodsb
  6239 0000294B 3C3F                    		cmp	al, 3Fh	; '?'
  6240 0000294D 7508                    		jnz	short loc_2956
  6241 0000294F 1E                      		push	ds
  6242 00002950 8E1E[B503]              		mov	ds, word [CURBUF+2]
  6243 00002954 8A07                    		mov	al, [bx]
  6244 00002956 1F                      		pop	ds
  6245                                  
  6246                                  loc_2956:				; CODE XREF: seg000:294Cj
  6247 00002957 AA                      		stosb
  6248 00002958 43                      		inc	bx
  6249 00002959 E2EF                    		loop	loc_2949
  6250 0000295B 47                      		inc	di
  6251 0000295C C60516                  		mov	byte [di], 16h
  6252 0000295F E805EA                  		call	DEVNAME
  6253 00002962 733F                    		jnb	short loc_29A2
  6254 00002964 31C0                    		xor	ax, ax
  6255 00002966 FF36[2101]              		push	word [LASTENT]
  6256 0000296A E861EB                  		call	FINDENTRY
  6257 0000296D 58                      		pop	ax
  6258 0000296E 7333                    		jnb	short loc_29A2
  6259 00002970 C42E[7003]              		les	bp, [THISDPB]
  6260 00002974 E8F8EB                  		call	GETENT
  6261 00002977 89DF                    		mov	di, bx
  6262 00002979 8E06[B503]              		mov	es, word [CURBUF+2]
  6263 0000297D BE[3903]                		mov	si, NAME1  ; 339h
  6264 00002980 B90B00                  		mov	cx, 11
  6265 00002983 F3A4                    		rep movsb
  6266 00002985 8B3E[B303]              		mov	di, word [CURBUF]
  6267 00002989 26C6450501              		mov	byte [es:di+5], 1
  6268 0000298E 16                      		push	ss
  6269 0000298F 07                      		pop	es
  6270 00002990 BE[5303]                		mov	si, NAME3 ; 353h
  6271 00002993 BF[3903]                		mov	di, NAME1 ; 339h
  6272 00002996 B90D00                  		mov	cx, 13
  6273 00002999 F3A4                    		rep movsb
  6274 0000299B E873EB                  		call	NEXTENT
  6275 0000299E 73A1                    		jnb	short loc_2940
  6276 000029A0 E9CD00                  		jmp	FLUSHRET1
  6277                                  ; ---------------------------------------------------------------------------
  6278                                  
  6279                                  loc_29A2:				; CODE XREF: seg000:2961j seg000:296Dj
  6280 000029A3 E8CA00                  		call	FLUSHRET1
  6281                                  ; START	OF FUNCTION CHUNK FOR DOOPEN
  6282                                  
  6283                                  ERRET:				; CODE XREF: seg000:loc_2919j
  6284                                  					; DOOPENj
  6285 000029A6 B0FF                    		mov	al, 0FFh
  6286 000029A8 C3                      		retn
  6287                                  ; END OF FUNCTION CHUNK	FOR DOOPEN
  6288                                  ; ---------------------------------------------------------------------------
  6289                                  
  6290                                  _$FCB_OPEN:				; DATA XREF: seg000:075Co
  6291 000029A9 E805EB                  		call	GETFILE
  6292                                  
  6293                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6294                                  
  6295                                  DOOPEN:					; CODE XREF: NEWENTRY+87j $OPEN+A9p
  6296                                  
  6297                                  ; FUNCTION CHUNK AT 29A5 SIZE 00000003 BYTES
  6298                                  
  6299 000029AC 72F8                    		jb	short ERRET
  6300 000029AE 56                      		push	si
  6301 000029AF 50                      		push	ax
  6302 000029B0 30C0                    		xor	al, al
  6303 000029B2 08E4                    		or	ah, ah
  6304 000029B4 7808                    		js	short OPENDEV
  6305 000029B6 A0[6F03]                		mov	al, byte [THISDRV]
  6306 000029B9 8E1E[B503]              		mov	ds, word [CURBUF+2]
  6307 000029BD 40                      		inc	ax
  6308                                  
  6309                                  OPENDEV:			; CODE XREF: DOOPEN+8j
  6310 000029BE AA                      		stosb
  6311 000029BF 31C0                    		xor	ax, ax
  6312 000029C1 83C70B                  		add	di, 0Bh
  6313 000029C4 AB                      		stosw
  6314 000029C5 B080                    		mov	al, 80h	; ''
  6315 000029C7 AB                      		stosw
  6316 000029C8 AD                      		lodsw
  6317 000029C9 89C2                    		mov	dx, ax
  6318 000029CB A5                      		movsw
  6319 000029CC A5                      		movsw
  6320 000029CD 8B44F8                  		mov	ax, [si-8]
  6321 000029D0 AB                      		stosw
  6322 000029D1 8B44F6                  		mov	ax, [si-0Ah]
  6323 000029D4 AB                      		stosw
  6324 000029D5 58                      		pop	ax
  6325 000029D6 5E                      		pop	si
  6326 000029D7 88E0                    		mov	al, ah
  6327 000029D9 0C40                    		or	al, 40h
  6328 000029DB AA                      		stosb
  6329 000029DC 7827                    		js	short SAVDEVPT
  6330 000029DE 89D0                    		mov	ax, dx
  6331 000029E0 AB                      		stosw
  6332 000029E1 50                      		push	ax
  6333 000029E2 31C0                    		xor	ax, ax
  6334 000029E4 AB                      		stosw
  6335 000029E5 58                      		pop	ax
  6336 000029E6 AA                      		stosb
  6337 000029E7 88E0                    		mov	al, ah
  6338 000029E9 368A26[9703]            		mov	ah, [ss:DIRSTART]
  6339 000029EE 51                      		push	cx
  6340 000029EF B104                    		mov	cl, 4
  6341 000029F1 D2E4                    		shl	ah, cl
  6342 000029F3 08E0                    		or	al, ah
  6343 000029F5 AA                      		stosb
  6344 000029F6 36A1[9703]              		mov	ax, [ss:DIRSTART]
  6345 000029FA B104                    		mov	cl, 4
  6346 000029FC D3E0                    		shl	ax, cl
  6347 000029FE 59                      		pop	cx
  6348 000029FF 88E0                    		mov	al, ah
  6349 00002A01 AA                      		stosb
  6350                                  
  6351                                  OPEN_RET:				; CODE XREF: DOOPEN+61j
  6352 00002A02 31C0                    		xor	ax, ax
  6353 00002A04 C3                      		retn
  6354                                  
  6355                                  SAVDEVPT:				; CODE XREF: DOOPEN+30j
  6356 00002A05 C506[8103]              		lds	ax, [DEVPT]
  6357 00002A09 AB                      		stosw
  6358 00002A0A 268C1D                  		mov	word [es:di], ds
  6359 00002A0D EBF3                    		jmp	short OPEN_RET
  6360                                  
  6361                                  ; ---------------------------------------------------------------------------
  6362                                  
  6363                                  _$FCB_CLOSE:				; DATA XREF: seg000:075Eo
  6364 00002A0F 89D7                    		mov	di, dx
  6365 00002A11 803DFF                  		cmp	byte [di], 0FFh
  6366 00002A14 7503                    		jnz	short NORMFCB3
  6367 00002A16 83C707                  		add	di, 7
  6368                                  
  6369                                  NORMFCB3:				; CODE XREF: seg000:2A13j
  6370 00002A19 F64518C0                		test	byte [di+18h], 0C0h
  6371 00002A1D 755C                    		jnz	short loc_2A7A
  6372 00002A1F E80105                  		call	MOVNAMENOSET
  6373 00002A22 725A                    		jb	short BADCLOSE
  6374                                  
  6375                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6376                                  
  6377                                  FCB_CLOSE_INNER:			; CODE XREF: _$CLOSE+37p
  6378 00002A24 52                      		push	dx
  6379 00002A25 1E                      		push	ds
  6380 00002A26 89D6                    		mov	si, dx
  6381 00002A28 8B5C1E                  		mov	bx, [si+1Eh]
  6382 00002A2B B104                    		mov	cl, 4
  6383 00002A2D D3EB                    		shr	bx, cl
  6384 00002A2F 53                      		push	bx
  6385 00002A30 16                      		push	ss
  6386 00002A31 1F                      		pop	ds
  6387 00002A32 E8F6F7                  		call	FATREAD
  6388 00002A35 5B                      		pop	bx
  6389 00002A36 E8F4EB                  		call	SETDIRSRCH
  6390 00002A39 E892EA                  		call	FINDENTRY
  6391 00002A3C 07                      		pop	es
  6392 00002A3D 5F                      		pop	di
  6393 00002A3E 723E                    		jb	short BADCLOSE
  6394 00002A40 C51E[B303]              		lds	bx, [CURBUF]
  6395 00002A44 804CF120                		or	byte [si-0Fh], 20h
  6396 00002A48 268B4D19                		mov	cx, [es:di+19h]
  6397 00002A4C 890C                    		mov	[si], cx
  6398 00002A4E 268B5510                		mov	dx, [es:di+10h]
  6399 00002A52 895402                  		mov	[si+2],	dx
  6400 00002A55 268B5512                		mov	dx, [es:di+12h]
  6401 00002A59 895404                  		mov	[si+4],	dx
  6402 00002A5C 268B5514                		mov	dx, [es:di+14h]
  6403 00002A60 8954FE                  		mov	[si-2],	dx
  6404 00002A63 268B5516                		mov	dx, [es:di+16h]
  6405 00002A67 8954FC                  		mov	[si-4],	dx
  6406 00002A6A C6470501                		mov	byte [bx+5], 1
  6407 00002A6E 16                      		push	ss
  6408 00002A6F 1F                      		pop	ds
  6409                                  
  6410                                  FLUSHRET1:				; CODE XREF: seg000:2912p seg000:299Fj ...
  6411 00002A70 C42E[7003]              		les	bp, [THISDPB]
  6412 00002A74 268A4600                		mov	al, [es:bp]
  6413 00002A78 E8A8FC                  		call	FLUSHBUF
  6414                                  
  6415                                  loc_2A7A:				; CODE XREF: seg000:2A1Cj
  6416 00002A7B 30C0                    		xor	al, al
  6417 00002A7D C3                      		retn
  6418                                  ; ---------------------------------------------------------------------------
  6419                                  
  6420                                  BADCLOSE:				; CODE XREF: seg000:2A21j FCB_CLOSE_INNER+1Aj ...
  6421 00002A7E B0FF                    		mov	al, 0FFh
  6422 00002A80 C3                      		retn
  6423                                  
  6424                                  ; ---------------------------------------------------------------------------
  6425                                  
  6426                                  _$FCB_CREATE:				; DATA XREF: seg000:076Ao
  6427 00002A81 E8A404                  		call	MOVNAME
  6428 00002A84 7229                    		jb	short loc_2AAE
  6429 00002A86 BF[3903]                		mov	di, NAME1 ; 339h
  6430 00002A89 B90B00                  		mov	cx, 11
  6431 00002A8C B03F                    		mov	al, 3Fh	; '?'
  6432 00002A8E F2AE                    		repne scasb
  6433 00002A90 741D                    		jz	short loc_2AAE
  6434 00002A92 36C606[6203]FF          		mov	byte [ss:CREATING], 0FFh
  6435 00002A98 52                      		push	dx
  6436 00002A99 1E                      		push	ds
  6437 00002A9A E826EA                  		call	FINDNAME
  6438                                  ; START	OF FUNCTION CHUNK FOR NEWENTRY
  6439                                  
  6440                                  loc_2A9C:				; CODE XREF: NEWENTRY+6j
  6441 00002A9D C42E[7003]              		les	bp, [THISDPB]
  6442 00002AA1 7316                    		jnb	short loc_2AB8
  6443 00002AA3 E868E9                  		call	BUILDDIR
  6444 00002AA6 7205                    		jb	short loc_2AAC
  6445 00002AA8 E8C4EA                  		call	GETENT
  6446 00002AAB EB39                    		jmp	short loc_2AE5
  6447                                  ; ---------------------------------------------------------------------------
  6448                                  
  6449                                  loc_2AAC:				; CODE XREF: NEWENTRY-Bj
  6450                                  					; NEWENTRY:loc_2AB8j ...
  6451 00002AAD 1F                      		pop	ds
  6452 00002AAE 5A                      		pop	dx
  6453                                  
  6454                                  loc_2AAE:				; CODE XREF: seg000:2A83j seg000:2A8Fj
  6455 00002AAF EBCD                    		jmp	short BADCLOSE
  6456                                  ; END OF FUNCTION CHUNK	FOR NEWENTRY
  6457                                  
  6458                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6459                                  
  6460                                  NEWENTRY:				; CODE XREF: seg000:16C9p
  6461                                  
  6462                                  ; FUNCTION CHUNK AT 2A9C SIZE 00000014 BYTES
  6463                                  ; FUNCTION CHUNK AT 2AB8 SIZE 00000082 BYTES
  6464                                  
  6465 00002AB1 5A                      		pop	dx
  6466 00002AB2 07                      		pop	es
  6467 00002AB3 59                      		pop	cx
  6468 00002AB4 52                      		push	dx
  6469 00002AB5 51                      		push	cx
  6470 00002AB6 06                      		push	es
  6471 00002AB7 EBE4                    		jmp	short loc_2A9C
  6472                                  
  6473                                  ; ---------------------------------------------------------------------------
  6474                                  ; START	OF FUNCTION CHUNK FOR NEWENTRY
  6475                                  
  6476                                  loc_2AB8:				; CODE XREF: NEWENTRY-10j
  6477 00002AB9 75F2                    		jnz	short loc_2AAC
  6478 00002ABB 08E4                    		or	ah, ah
  6479 00002ABD 7876                    		js	short loc_2B34
  6480 00002ABF 1E                      		push	ds
  6481 00002AC0 C53E[B303]              		lds	di, [CURBUF]
  6482 00002AC4 8B0C                    		mov	cx, [si]
  6483 00002AC6 8B7508                  		mov	si, [di+8]
  6484 00002AC9 1F                      		pop	ds
  6485 00002ACA E31A                    		jcxz	loc_2AE5
  6486 00002ACC 263B4E0D                		cmp	cx, [es:bp+0Dh]
  6487 00002AD0 7714                    		ja	short loc_2AE5
  6488 00002AD2 29FB                    		sub	bx, di
  6489 00002AD4 53                      		push	bx
  6490 00002AD5 56                      		push	si
  6491 00002AD6 89CB                    		mov	bx, cx
  6492 00002AD8 E8AFFA                  		call	RELEASE
  6493 00002ADB 5A                      		pop	dx
  6494 00002ADC 30C0                    		xor	al, al
  6495 00002ADE E8A0FB                  		call	GETBUFFR
  6496 00002AE1 5B                      		pop	bx
  6497 00002AE2 031E[B303]              		add	bx, word [CURBUF]
  6498                                  
  6499                                  loc_2AE5:				; CODE XREF: NEWENTRY-6j NEWENTRY+19j	...
  6500 00002AE6 F606[4503]08            		test	byte [ATTRIB], 8
  6501 00002AEB 7407                    		jz	short loc_2AF3
  6502 00002AED 803E[B703]00            		cmp	byte [VOLID], 0
  6503 00002AF2 75B9                    		jnz	short loc_2AAC
  6504                                  
  6505                                  loc_2AF3:				; CODE XREF: NEWENTRY+3Aj
  6506 00002AF4 8E06[B503]              		mov	es, word [CURBUF+2]
  6507 00002AF8 89DF                    		mov	di, bx
  6508 00002AFA BE[3903]                		mov	si, NAME1 ; 339h
  6509 00002AFD B90500                  		mov	cx, 5
  6510 00002B00 A4                      		movsb
  6511 00002B01 F3A5                    		rep movsw
  6512 00002B03 A0[4503]                		mov	al, byte [ATTRIB]
  6513 00002B06 AA                      		stosb
  6514 00002B07 B105                    		mov	cl, 5
  6515 00002B09 31C0                    		xor	ax, ax
  6516 00002B0B F3AB                    		rep stosw
  6517 00002B0D E8C80C                  		call	DATE16
  6518 00002B10 92                      		xchg	ax, dx
  6519 00002B11 AB                      		stosw
  6520 00002B12 92                      		xchg	ax, dx
  6521 00002B13 AB                      		stosw
  6522 00002B14 31C0                    		xor	ax, ax
  6523 00002B16 57                      		push	di
  6524 00002B17 AB                      		stosw
  6525 00002B18 AB                      		stosw
  6526 00002B19 AB                      		stosw
  6527 00002B1A 8B36[B303]              		mov	si, word [CURBUF]
  6528 00002B1E 26C6440501              		mov	byte [es:si+5], 1
  6529 00002B23 C42E[7003]              		les	bp, [THISDPB]
  6530 00002B27 268A4600                		mov	al, [es:bp]
  6531 00002B2B 50                      		push	ax
  6532 00002B2C 53                      		push	bx
  6533 00002B2D E8F3FB                  		call	FLUSHBUF
  6534 00002B30 5B                      		pop	bx
  6535 00002B31 58                      		pop	ax
  6536 00002B32 5E                      		pop	si
  6537 00002B33 88C4                    		mov	ah, al
  6538                                  
  6539                                  loc_2B34:				; CODE XREF: NEWENTRY+Cj
  6540 00002B35 F8                      		clc
  6541 00002B36 07                      		pop	es
  6542 00002B37 5F                      		pop	di
  6543 00002B38 E971FE                  		jmp	DOOPEN
  6544                                  ; END OF FUNCTION CHUNK	FOR NEWENTRY
  6545                                  
  6546                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6547                                  
  6548                                  DSKSTATCHK:				; CODE XREF: STATCHK-24F4p
  6549                                  					; LOAD:DVRDLPp	...
  6550 00002B3B 36803E[2301]01          		cmp	byte [ss:INDOS], 1
  6551 00002B41 7401                    		jz	short loc_2B43
  6552 00002B43 C3                      		retn
  6553                                  ; ---------------------------------------------------------------------------
  6554                                  
  6555                                  loc_2B43:				; CODE XREF: DSKSTATCHK+6j
  6556 00002B44 51                      		push	cx
  6557 00002B45 06                      		push	es
  6558 00002B46 53                      		push	bx
  6559 00002B47 1E                      		push	ds
  6560 00002B48 56                      		push	si
  6561 00002B49 0E                      		push	cs
  6562 00002B4A 07                      		pop	es
  6563 00002B4B 0E                      		push	cs
  6564 00002B4C 1F                      		pop	ds
  6565 00002B4D 31C9                    		xor	cx, cx
  6566 00002B4F C606[5F01]05            		mov	byte [DSKSTCOM], 5
  6567 00002B54 C606[5D01]0E            		mov	byte [DSKSTCALL], 0Eh
  6568 00002B59 890E[6001]              		mov	[DSKSTST], cx
  6569 00002B5D BB[5D01]                		mov	bx, DSKSTCALL ; 15Dh
  6570 00002B60 C536[FC00]              		lds	si, [BCON]
  6571 00002B64 E8E2E7                  		call	DEVIOCALL2
  6572 00002B67 36F706[6001]0002        		test	word [ss:DSKSTST], 200h
  6573 00002B6E 752E                    		jnz	short loc_2B9D
  6574 00002B70 36A0[6A01]              		mov	al, [ss:DSKCHRET]
  6575 00002B74 3C03                    		cmp	al, 3
  6576 00002B76 7528                    		jnz	short loc_2B9F
  6577 00002B78 36C606[5F01]04          		mov	byte [ss:DSKSTCOM], 4
  6578 00002B7E 36C606[5D01]16          		mov	byte [ss:DSKSTCALL], 16h
  6579 00002B84 36880E[6A01]            		mov	[ss:DSKCHRET], cl
  6580 00002B89 36890E[6001]            		mov	[ss:DSKSTST], cx
  6581 00002B8E 41                      		inc	cx
  6582 00002B8F 36890E[6F01]            		mov	[ss:DSKSTCNT], cx
  6583 00002B94 E8B2E7                  		call	DEVIOCALL2
  6584 00002B97 5E                      		pop	si
  6585 00002B98 1F                      		pop	ds
  6586 00002B99 5B                      		pop	bx
  6587 00002B9A 07                      		pop	es
  6588 00002B9B 59                      		pop	cx
  6589 00002B9C EB72                    		jmp	short loc_2C0F
  6590                                  ; ---------------------------------------------------------------------------
  6591                                  
  6592                                  loc_2B9D:				; CODE XREF: DSKSTATCHK+33j
  6593 00002B9E 30C0                    		xor	al, al
  6594                                  
  6595                                  loc_2B9F:				; CODE XREF: DSKSTATCHK+3Bj
  6596 00002BA0 5E                      		pop	si
  6597 00002BA1 1F                      		pop	ds
  6598 00002BA2 5B                      		pop	bx
  6599 00002BA3 07                      		pop	es
  6600 00002BA4 59                      		pop	cx
  6601 00002BA5 C3                      		retn
  6602                                  
  6603                                  ; ---------------------------------------------------------------------------
  6604                                  ; START	OF FUNCTION CHUNK FOR STATCHK
  6605                                  
  6606                                  loc_2BA5:				; CODE XREF: STATCHK+15j
  6607 00002BA6 3C10                    		cmp	al, 10h
  6608 00002BA8 744C                    		jz	short loc_2BF5
  6609 00002BAA 3C0E                    		cmp	al, 0Eh
  6610 00002BAC 7448                    		jz	short loc_2BF5
  6611 00002BAE 3C03                    		cmp	al, 3
  6612 00002BB0 7444                    		jz	short loc_2BF5
  6613 00002BB2 C3                      		retn
  6614                                  ; END OF FUNCTION CHUNK	FOR STATCHK
  6615                                  
  6616                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6617                                  
  6618                                  SPOOLINT:				; CODE XREF: seg000:0ABCp
  6619                                  					; seg000:loc_ACCp ...
  6620 00002BB3 9C                      		pushf
  6621 00002BB4 36803E[2701]00          		cmp	byte [ss:IDLEINT], 0
  6622 00002BBA 740A                    		jz	short loc_2BC5
  6623 00002BBC 36803E[2401]00          		cmp	byte [ss:ERRORMODE], 0
  6624 00002BC2 7502                    		jnz	short loc_2BC5
  6625 00002BC4 CD28                    		int	28h		; DOS 2+ internal - KEYBOARD BUSY LOOP
  6626                                  
  6627                                  loc_2BC5:				; CODE XREF: SPOOLINT+7j SPOOLINT+Fj
  6628 00002BC6 9D                      		popf
  6629                                  
  6630                                  locret_2BC6:				; CODE XREF: STATCHK+Aj STATCHK+35j
  6631 00002BC7 C3                      		retn
  6632                                  
  6633                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6634                                  
  6635                                  STATCHK:				; CODE XREF: OUTT+1Dp
  6636                                  					; seg000:_$STD_AUX_INPUTp ...
  6637                                  
  6638                                  ; FUNCTION CHUNK AT 0621 SIZE 00000011 BYTES
  6639                                  ; FUNCTION CHUNK AT 0649 SIZE 000000A0 BYTES
  6640                                  ; FUNCTION CHUNK AT 07F3 SIZE 0000001D BYTES
  6641                                  ; FUNCTION CHUNK AT 2BA5 SIZE 0000000D BYTES
  6642                                  
  6643 00002BC8 E870FF                  		call	DSKSTATCHK
  6644 00002BCB 53                      		push	bx
  6645 00002BCC 31DB                    		xor	bx, bx
  6646 00002BCE E8FCEF                  		call	GET_IO_FCB
  6647 00002BD1 5B                      		pop	bx
  6648 00002BD2 72F3                    		jb	short locret_2BC6
  6649 00002BD4 B401                    		mov	ah, 1
  6650 00002BD6 E83DE6                  		call	IOFUNC
  6651 00002BD9 74D8                    		jz	short SPOOLINT
  6652 00002BDB 3C13                    		cmp	al, 13h
  6653 00002BDD 75C7                    		jnz	short loc_2BA5
  6654 00002BDF 30E4                    		xor	ah, ah
  6655 00002BE1 E832E6                  		call	IOFUNC
  6656 00002BE4 EB09                    		jmp	short loc_2BEE
  6657                                  ; ---------------------------------------------------------------------------
  6658                                  
  6659                                  loc_2BE5:				; CODE XREF: STATCHK+3Ej STATCHK+42j
  6660 00002BE6 36F616[DA00]            		not	byte [ss:PFLAG]
  6661                                  
  6662                                  locret_2BEA:				; CODE XREF: STATCHK+46j
  6663 00002BEB C3                      		retn
  6664                                  ; ---------------------------------------------------------------------------
  6665                                  
  6666                                  loc_2BEB:				; CODE XREF: STATCHK+2Cj
  6667 00002BEC E8C4FF                  		call	SPOOLINT
  6668                                  
  6669                                  loc_2BEE:				; CODE XREF: STATCHK+1Cj
  6670 00002BEF B401                    		mov	ah, 1
  6671 00002BF1 E822E6                  		call	IOFUNC
  6672 00002BF4 74F6                    		jz	short loc_2BEB
  6673                                  
  6674                                  loc_2BF5:				; CODE XREF: STATCHK-20j STATCHK-1Cj ...
  6675 00002BF6 53                      		push	bx
  6676 00002BF7 31DB                    		xor	bx, bx
  6677 00002BF9 E8D1EF                  		call	GET_IO_FCB
  6678 00002BFC 5B                      		pop	bx
  6679 00002BFD 72C8                    		jb	short locret_2BC6
  6680 00002BFF 30E4                    		xor	ah, ah
  6681 00002C01 E812E6                  		call	IOFUNC
  6682 00002C04 3C10                    		cmp	al, 10h
  6683 00002C06 74DE                    		jz	short loc_2BE5
  6684 00002C08 3C0E                    		cmp	al, 0Eh
  6685 00002C0A 74DA                    		jz	short loc_2BE5
  6686 00002C0C 3C03                    		cmp	al, 3
  6687 00002C0E 75DB                    		jnz	short locret_2BEA
  6688                                  
  6689                                  loc_2C0F:				; CODE XREF: DSKSTATCHK+61j
  6690 00002C10 B003                    		mov	al, 3
  6691 00002C12 E86409                  		call	BUFOUT
  6692 00002C15 E8660A                  		call	CRLF
  6693 00002C18 16                      		push	ss
  6694 00002C19 1F                      		pop	ds
  6695 00002C1A 803E[2601]00            		cmp	byte [CONSWAP], 0
  6696 00002C1F 7403                    		jz	short loc_2C23
  6697 00002C21 E8ADEC                  		call	SWAPBACK
  6698                                  
  6699                                  loc_2C23:				; CODE XREF: STATCHK+57j
  6700 00002C24 FA                      		cli
  6701 00002C25 8B26[6503]              		mov	sp, [user_SP]
  6702 00002C29 8E16[6703]              		mov	ss, [user_SS]
  6703 00002C2D E8E5DA                  		call	restore_world
  6704 00002C30 2EC606[2301]00          		mov	byte [cs:INDOS], 0
  6705 00002C36 2EC606[2401]00          		mov	byte [cs:ERRORMODE], 0
  6706 00002C3C 2E8926[CA03]            		mov	[cs:ConC_spsave], sp
  6707 00002C41 CD23                    		int	23h		; DOS -	CONTROL	"C" EXIT ADDRESS
  6708                                  					; Return: return via RETF 2 with CF set
  6709                                  					; DOS will abort program with errorlevel 0
  6710                                  					; else
  6711                                  					; interrupted DOS call continues
  6712 00002C43 2EA3[6703]              		mov	[cs:user_SS], ax
  6713 00002C47 9C                      		pushf
  6714 00002C48 58                      		pop	ax
  6715 00002C49 2E3B26[CA03]            		cmp	sp, [cs:ConC_spsave]
  6716 00002C4E 7507                    		jnz	short loc_2C56
  6717                                  
  6718                                  loc_2C4F:				; CODE XREF: STATCHK+AEj
  6719 00002C50 2EA1[6703]              		mov	ax, [cs:user_SS]
  6720                                  
  6721                                  loc_2C53:				; CODE XREF: STATCHK+A5j
  6722 00002C54 E9CBD9                  		jmp	COMMAND
  6723                                  ; ---------------------------------------------------------------------------
  6724                                  
  6725                                  loc_2C56:				; CODE XREF: STATCHK+86j
  6726 00002C57 2E832E[CA03]02          		sub	word [cs:ConC_spsave], 2
  6727 00002C5D 2E3B26[CA03]            		cmp	sp, [cs:ConC_spsave]
  6728 00002C62 740B                    		jz	short loc_2C6E
  6729                                  
  6730                                  loc_2C63:				; CODE XREF: STATCHK+B0j seg000:2C7Fj
  6731 00002C64 B8004C                  		mov	ax, 4C00h
  6732 00002C67 2EC606[D600]FF          		mov	byte [cs:DidCTRLC], 0FFh
  6733 00002C6D EBE5                    		jmp	short loc_2C53
  6734                                  ; ---------------------------------------------------------------------------
  6735                                  
  6736                                  loc_2C6E:				; CODE XREF: STATCHK+9Aj
  6737 00002C6F 50                      		push	ax
  6738 00002C70 9D                      		popf
  6739 00002C71 2E8F06[6703]            		pop	word [cs:user_SS]
  6740 00002C76 73D8                    		jnb	short loc_2C4F
  6741 00002C78 EBEA                    		jmp	short loc_2C63
  6742                                  
  6743                                  ; ---------------------------------------------------------------------------
  6744                                  
  6745                                  DIVOV:					; DATA XREF: seg000:41BFo
  6746 00002C7A BE[9001]                		mov	si, DIVMES 	; "\r\nDivide overflow\r\n"
  6747 00002C7D E80200                  		call	RealDivOv
  6748 00002C80 EBE2                    		jmp	short loc_2C63
  6749                                  
  6750                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6751                                  
  6752                                  RealDivOv:				; CODE XREF: seg000:2C7Cp
  6753 00002C82 0E                      		push	cs
  6754 00002C83 07                      		pop	es
  6755 00002C84 0E                      		push	cs
  6756 00002C85 1F                      		pop	ds
  6757 00002C86 C606[5F01]08            		mov	byte [DSKSTCOM], 8
  6758 00002C8B C606[5D01]16            		mov	byte [DSKSTCALL], 16h
  6759 00002C90 C706[6001]0000          		mov	word [DSKSTST], 0
  6760 00002C96 8A1E[A301]              		mov	bl, [DivMesLen]
  6761 00002C9A 30FF                    		xor	bh, bh
  6762 00002C9C 891E[6F01]              		mov	[DSKSTCNT], bx
  6763 00002CA0 BB[5D01]                		mov	bx, DSKSTCALL ; 15Dh
  6764 00002CA3 8936[6B01]              		mov	[DSKCHRET+1], si
  6765 00002CA7 C536[FC00]              		lds	si, [BCON]
  6766 00002CAB E89BE6                  		call	DEVIOCALL2
  6767 00002CAE 2EC706[6B01][3303]      		mov	word [cs:DSKCHRET+1], DEVIOBUF ; 333h
  6768 00002CB5 2EC706[6F01]0100        		mov	word [cs:DSKSTCNT], 1
  6769 00002CBC C3                      		retn
  6770                                  
  6771                                  ; ---------------------------------------------------------------------------
  6772                                  
  6773                                  CHARHARD:				; CODE XREF: IOFUNC+71p LOAD+40p ...
  6774 00002CBD 368C06[3703]            		mov	word [ss:EXITHOLD+2], es
  6775 00002CC2 36892E[3503]            		mov	word [ss:EXITHOLD], bp
  6776 00002CC7 56                      		push	si
  6777 00002CC8 81E7FF00                		and	di, 0FFh
  6778 00002CCC 8CDD                    		mov	bp, ds
  6779 00002CCE E85700                  		call	FATALC
  6780 00002CD1 5E                      		pop	si
  6781 00002CD2 C3                      		retn
  6782                                  
  6783                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6784                                  
  6785                                  HARDERR:				; CODE XREF: DREAD+Bp DWRITE+Bp
  6786 00002CD3 97                      		xchg	ax, di
  6787 00002CD4 81E7FF00                		and	di, 0FFh
  6788 00002CD8 83FF00                  		cmp	di, 0
  6789 00002CDB 750A                    		jnz	short loc_2CE6
  6790 00002CDD 50                      		push	ax
  6791 00002CDE 268A4600                		mov	al, [es:bp]
  6792 00002CE2 36A2[2501]              		mov	[ss:WPERR], al
  6793 00002CE6 58                      		pop	ax
  6794                                  
  6795                                  loc_2CE6:				; CODE XREF: HARDERR+8j
  6796 00002CE7 29C8                    		sub	ax, cx
  6797 00002CE9 01C2                    		add	dx, ax
  6798 00002CEB 52                      		push	dx
  6799 00002CEC 26F76602                		mul	word [es:bp+2]
  6800 00002CF0 5A                      		pop	dx
  6801 00002CF1 01C3                    		add	bx, ax
  6802 00002CF3 30E4                    		xor	ah, ah
  6803 00002CF5 263B5606                		cmp	dx, [es:bp+6]
  6804 00002CF9 7212                    		jb	short loc_2D0C
  6805 00002CFB FEC4                    		inc	ah
  6806 00002CFD 263B5610                		cmp	dx, [es:bp+10h]
  6807 00002D01 720A                    		jb	short loc_2D0C
  6808 00002D03 FEC4                    		inc	ah
  6809 00002D05 263B560B                		cmp	dx, [es:bp+0Bh]
  6810 00002D09 7202                    		jb	short loc_2D0C
  6811 00002D0B FEC4                    		inc	ah
  6812                                  
  6813                                  loc_2D0C:				; CODE XREF: HARDERR+26j HARDERR+2Ej ...
  6814 00002D0D D0E4                    		shl	ah, 1
  6815 00002D0F 360A26[6E03]            		or	ah, [ss:READOP]
  6816                                  
  6817                                  FATAL:					; CODE XREF: UNPACK+21p
  6818 00002D14 268A4600                		mov	al, [es:bp]
  6819                                  
  6820                                  FATAL1:					; CODE XREF: FATREAD-3p
  6821 00002D18 368C06[3703]            		mov	[ss:EXITHOLD+2], es
  6822 00002D1D 36892E[3503]            		mov	[ss:EXITHOLD], bp
  6823 00002D22 26C47612                		les	si, [es:bp+12h]
  6824 00002D26 8CC5                    		mov	bp, es
  6825                                  
  6826                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  6827                                  
  6828                                  FATALC:					; CODE XREF: seg000:2CCDp
  6829 00002D28 36803E[2401]00          		cmp	byte [ss:ERRORMODE], 0
  6830 00002D2E 754D                    		jnz	short loc_2D7C
  6831 00002D30 368926[6903]            		mov	[ss:CONTSTK], sp
  6832 00002D35 16                      		push	ss
  6833 00002D36 07                      		pop	es
  6834 00002D37 FA                      		cli
  6835 00002D38 36FE06[2401]            		inc	byte [ss:ERRORMODE]
  6836 00002D3D 36FE0E[2301]            		dec	byte [ss:INDOS]
  6837 00002D42 368E16[6703]            		mov	ss, [ss:user_SS]
  6838 00002D47 268B26[6503]            		mov	sp, [es:user_SP]
  6839 00002D4C CD24                    		int	24h		; DOS -	FATAL ERROR HANDLER ADDRESS
  6840                                  			; Automatically	called upon detection of unrecoverable I/O error.
  6841 00002D4E 268926[6503]            		mov	[es:user_SP], sp
  6842 00002D53 268C16[6703]            		mov	[es:user_SS], ss
  6843 00002D58 8CC4                    		mov	sp, es
  6844 00002D5A 8ED4                    		mov	ss, sp
  6845 00002D5C 368B26[6903]            		mov	sp, [ss:CONTSTK]
  6846 00002D61 36FE06[2301]            		inc	byte [ss:INDOS]
  6847 00002D66 36C606[2401]00          		mov	byte [ss:ERRORMODE], 0
  6848 00002D6C FB                      		sti
  6849                                  
  6850                                  loc_2D6C:				; CODE XREF: FATALC+57j
  6851 00002D6D 36C42E[3503]            		les	bp, [ss:EXITHOLD]
  6852 00002D72 3C02                    		cmp	al, 2
  6853 00002D74 740B                    		jz	short loc_2D80
  6854 00002D76 36C606[2501]FF          		mov	byte [ss:WPERR], 0FFh
  6855 00002D7C C3                      		retn
  6856                                  ; ---------------------------------------------------------------------------
  6857                                  
  6858                                  loc_2D7C:				; CODE XREF: FATALC+6j
  6859 00002D7D 30C0                    		xor	al, al
  6860 00002D7F EBEC                    		jmp	short loc_2D6C
  6861                                  ; ---------------------------------------------------------------------------
  6862                                  
  6863                                  loc_2D80:				; CODE XREF: FATALC+4Cj
  6864 00002D81 16                      		push	ss
  6865 00002D82 1F                      		pop	ds
  6866 00002D83 803E[2601]00            		cmp	byte [CONSWAP], 0
  6867 00002D88 7403                    		jz	short loc_2D8C
  6868 00002D8A E844EB                  		call	SWAPBACK
  6869                                  
  6870                                  loc_2D8C:				; CODE XREF: FATALC+60j
  6871 00002D8D C606[CE03]02            		mov	byte [exit_type], 2
  6872 00002D92 8E1E[8B01]              		mov	ds, [CurrentPDB]
  6873                                  
  6874                                  reset_environment:			; CODE XREF: seg000:098Aj
  6875 00002D96 1E                      		push	ds
  6876 00002D97 B022                    		mov	al, 22h	; '"'
  6877 00002D99 E8A1DF                  		call	_$GET_INTERRUPT_VECTOR
  6878 00002D9C 368C06[3703]            		mov	[ss:EXITHOLD+2], es
  6879 00002DA1 36891E[3503]            		mov	[ss:EXITHOLD], bx
  6880 00002DA6 368B1E[8B01]            		mov	bx, [ss:CurrentPDB]
  6881 00002DAB 8EDB                    		mov	ds, bx
  6882 00002DAD A11600                  		mov	ax, [16h]
  6883 00002DB0 59                      		pop	cx
  6884 00002DB1 39D8                    		cmp	ax, bx
  6885 00002DB3 7422                    		jz	short loc_2DD6
  6886 00002DB5 39CB                    		cmp	bx, cx
  6887 00002DB7 751E                    		jnz	short loc_2DD6
  6888 00002DB9 50                      		push	ax
  6889 00002DBA 36803E[CE03]03          		cmp	byte [ss:exit_type], 3
  6890 00002DC0 7410                    		jz	short loc_2DD1
  6891 00002DC2 E8B2E2                  		call	arena_free_process
  6892 00002DC5 B91400                  		mov	cx, 20
  6893                                  
  6894                                  loc_2DC7:				; CODE XREF: FATALC+A8j
  6895 00002DC8 89CB                    		mov	bx, cx
  6896 00002DCA 51                      		push	cx
  6897 00002DCB 4B                      		dec	bx
  6898 00002DCC E82310                  		call	_$CLOSE
  6899 00002DCF 59                      		pop	cx
  6900 00002DD0 E2F6                    		loop	loc_2DC7
  6901                                  
  6902                                  loc_2DD1:				; CODE XREF: FATALC+98j
  6903 00002DD2 368F06[8B01]            		pop	word [ss:CurrentPDB]
  6904                                  
  6905                                  loc_2DD6:				; CODE XREF: FATALC+8Bj FATALC+8Fj
  6906 00002DD7 0E                      		push	cs
  6907 00002DD8 1F                      		pop	ds
  6908 00002DD9 B0FF                    		mov	al, 0FFh
  6909 00002DDB E845F9                  		call	FLUSHBUF
  6910 00002DDE FA                      		cli
  6911 00002DDF C606[2301]00            		mov	byte [INDOS], 0
  6912 00002DE4 C606[2501]FF            		mov	byte [WPERR], 0FFh
  6913 00002DE9 8E1E[8B01]              		mov	ds, [CurrentPDB]
  6914 00002DED 8E163000                		mov	ss, [30h]
  6915 00002DF1 8B262E00                		mov	sp, [2Eh]
  6916 00002DF5 E81DD9                  		call	restore_world
  6917 00002DF8 58                      		pop	ax
  6918 00002DF9 58                      		pop	ax
  6919 00002DFA 58                      		pop	ax
  6920 00002DFB B802F2                  		mov	ax, 0F202h
  6921 00002DFE 50                      		push	ax
  6922 00002DFF 2EFF36[3703]            		push	word [cs:EXITHOLD+2]
  6923 00002E04 2EFF36[3503]            		push	word [cs:EXITHOLD]
  6924 00002E09 FB                      		sti
  6925 00002E0A CF                      		iret
  6926                                  
  6927                                  ; ---------------------------------------------------------------------------
  6928                                  
  6929                                  MAKEFCB:				; CODE XREF: seg000:_$PARSE_FILE_DESCRIPTORp
  6930 00002E0B 36C606[D700]00          		mov	byte [ss:SpaceFlag], 0
  6931 00002E11 30D2                    		xor	dl, dl
  6932 00002E13 A802                    		test	al, 2
  6933 00002E15 7504                    		jnz	short loc_2E1A
  6934 00002E17 26C60500                		mov	byte [es:di], 0
  6935                                  
  6936                                  loc_2E1A:				; CODE XREF: seg000:2E14j
  6937 00002E1B 47                      		inc	di
  6938 00002E1C B90800                  		mov	cx, 8
  6939 00002E1F A804                    		test	al, 4
  6940 00002E21 93                      		xchg	ax, bx
  6941 00002E22 B020                    		mov	al, 20h	; ' '
  6942 00002E24 7404                    		jz	short loc_2E29
  6943 00002E26 01CF                    		add	di, cx
  6944 00002E28 31C9                    		xor	cx, cx
  6945                                  
  6946                                  loc_2E29:				; CODE XREF: seg000:2E23j
  6947 00002E2A F3AA                    		rep stosb
  6948 00002E2C B103                    		mov	cl, 3
  6949 00002E2E F6C308                  		test	bl, 8
  6950 00002E31 7404                    		jz	short loc_2E36
  6951 00002E33 01CF                    		add	di, cx
  6952 00002E35 31C9                    		xor	cx, cx
  6953                                  
  6954                                  loc_2E36:				; CODE XREF: seg000:2E30j
  6955 00002E37 F3AA                    		rep stosb
  6956 00002E39 91                      		xchg	ax, cx
  6957 00002E3A AB                      		stosw
  6958 00002E3B AB                      		stosw
  6959 00002E3C 83EF10                  		sub	di, 10h
  6960 00002E3F F6C301                  		test	bl, 1
  6961 00002E42 7409                    		jz	short loc_2E4C
  6962 00002E44 E87300                  		call	SCANB
  6963 00002E47 E88001                  		call	DELIM
  6964 00002E4A 7504                    		jnz	short loc_2E4F
  6965 00002E4C 46                      		inc	si
  6966                                  
  6967                                  loc_2E4C:				; CODE XREF: seg000:2E41j
  6968 00002E4D E86A00                  		call	SCANB
  6969                                  
  6970                                  loc_2E4F:				; CODE XREF: seg000:2E49j
  6971 00002E50 E84901                  		call	GETLET
  6972 00002E53 7616                    		jbe	short loc_2E6A
  6973 00002E55 803C3A                  		cmp	byte [si], 3Ah ; ':'
  6974 00002E58 7511                    		jnz	short loc_2E6A
  6975 00002E5A 46                      		inc	si
  6976 00002E5B 2C40                    		sub	al, 40h	; '@'
  6977 00002E5D 7607                    		jbe	short loc_2E65
  6978 00002E5F 363A06[0001]            		cmp	al, [ss:NUMIO]
  6979 00002E64 7602                    		jbe	short loc_2E67
  6980                                  
  6981                                  loc_2E65:				; CODE XREF: seg000:2E5Cj
  6982 00002E66 B2FF                    		mov	dl, 0FFh
  6983                                  
  6984                                  loc_2E67:				; CODE XREF: seg000:2E63j
  6985 00002E68 AA                      		stosb
  6986 00002E69 46                      		inc	si
  6987 00002E6A 4F                      		dec	di
  6988                                  
  6989                                  loc_2E6A:				; CODE XREF: seg000:2E52j seg000:2E57j
  6990 00002E6B 4E                      		dec	si
  6991 00002E6C 47                      		inc	di
  6992                                  ; START	OF FUNCTION CHUNK FOR NAMETRANS
  6993                                  
  6994                                  NORMSCAN:				; CODE XREF: NAMETRANS+1Cj
  6995 00002E6D B90800                  		mov	cx, 8
  6996 00002E70 E81300                  		call	GETWORD
  6997 00002E73 803C2E                  		cmp	byte [si], 2Eh ; '.'
  6998 00002E76 7507                    		jnz	short loc_2E7E
  6999 00002E78 46                      		inc	si
  7000 00002E79 B90300                  		mov	cx, 3
  7001 00002E7C E80D00                  		call	MUST_GETWORD
  7002                                  
  7003                                  loc_2E7E:				; CODE XREF: NAMETRANS-4Cj
  7004 00002E7F 88D0                    		mov	al, dl
  7005 00002E81 C3                      		retn
  7006                                  ; END OF FUNCTION CHUNK	FOR NAMETRANS
  7007                                  ; ---------------------------------------------------------------------------
  7008                                  
  7009                                  loc_2E81:				; CODE XREF: seg000:2E88j
  7010 00002E82 01CF                    		add	di, cx
  7011 00002E84 4E                      		dec	si
  7012 00002E85 C3                      		retn
  7013                                  ; ---------------------------------------------------------------------------
  7014                                  
  7015                                  GETWORD:				; CODE XREF: NAMETRANS-52p
  7016 00002E86 E81301                  		call	GETLET
  7017 00002E89 76F7                    		jbe	short loc_2E81
  7018 00002E8B 4E                      		dec	si
  7019                                  
  7020                                  MUST_GETWORD:				; CODE XREF: NAMETRANS-46p
  7021                                  					; seg000:loc_2E9Ej ...
  7022 00002E8C E80D01                  		call	GETLET
  7023 00002E8F 7223                    		jb	short loc_2EB3
  7024 00002E91 750C                    		jnz	short loc_2E9E
  7025 00002E93 36F606[D700]FF          		test	byte [ss:SpaceFlag], 0FFh
  7026 00002E99 7419                    		jz	short loc_2EB3
  7027 00002E9B 3C20                    		cmp	al, 20h	; ' '
  7028 00002E9D 7515                    		jnz	short loc_2EB3
  7029                                  
  7030                                  loc_2E9E:				; CODE XREF: seg000:2E90j
  7031 00002E9F E3EB                    		jcxz	MUST_GETWORD
  7032 00002EA1 49                      		dec	cx
  7033 00002EA2 3C2A                    		cmp	al, 2Ah	; '*'
  7034 00002EA4 7504                    		jnz	short loc_2EA9
  7035 00002EA6 B03F                    		mov	al, 3Fh	; '?'
  7036 00002EA8 F3AA                    		rep stosb
  7037                                  
  7038                                  loc_2EA9:				; CODE XREF: seg000:2EA3j
  7039 00002EAA AA                      		stosb
  7040 00002EAB 3C3F                    		cmp	al, 3Fh	; '?'
  7041 00002EAD 75DD                    		jnz	short MUST_GETWORD
  7042 00002EAF 80CA01                  		or	dl, 1
  7043 00002EB2 EBD8                    		jmp	short MUST_GETWORD
  7044                                  ; ---------------------------------------------------------------------------
  7045                                  
  7046                                  loc_2EB3:				; CODE XREF: seg000:2E8Ej seg000:2E98j ...
  7047 00002EB4 B020                    		mov	al, 20h	; ' '
  7048 00002EB6 F3AA                    		rep stosb
  7049 00002EB8 4E                      		dec	si
  7050 00002EB9 C3                      		retn
  7051                                  
  7052                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7053                                  
  7054                                  SCANB:					; CODE XREF: seg000:2E43p
  7055                                  					; seg000:loc_2E4Cp ...
  7056 00002EBA AC                      		lodsb
  7057 00002EBB E82C01                  		call	SPCHK
  7058 00002EBE 74FA                    		jz	short SCANB
  7059 00002EC0 4E                      		dec	si
  7060 00002EC1 C3                      		retn
  7061                                  
  7062                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7063                                  
  7064                                  NAMETRANS:				; CODE XREF: ROOTPATH+7p
  7065                                  
  7066                                  ; FUNCTION CHUNK AT 2E6C SIZE 00000015 BYTES
  7067                                  
  7068 00002EC2 36C606[D700]01          		mov	byte [ss:SpaceFlag], 1
  7069 00002EC8 16                      		push	ss
  7070 00002EC9 07                      		pop	es
  7071 00002ECA BF[3903]                		mov	di, NAME1 ; 339h
  7072 00002ECD 57                      		push	di
  7073 00002ECE B020                    		mov	al, 20h	; ' '
  7074 00002ED0 B90B00                  		mov	cx, 11
  7075 00002ED3 F3AA                    		rep stosb
  7076 00002ED5 30C0                    		xor	al, al
  7077 00002ED7 88C2                    		mov	dl, al
  7078 00002ED9 AA                      		stosb
  7079 00002EDA 5F                      		pop	di
  7080 00002EDB 803C2E                  		cmp	byte [si], 2Eh ; '.'
  7081 00002EDE 758D                    		jnz	short NORMSCAN
  7082 00002EE0 A4                      		movsb
  7083 00002EE1 AC                      		lodsb
  7084 00002EE2 E80C01                  		call	PATHCHRCMP
  7085 00002EE5 7415                    		jz	short loc_2EFB
  7086 00002EE7 08C0                    		or	al, al
  7087 00002EE9 7411                    		jz	short loc_2EFB
  7088 00002EEB 3C2E                    		cmp	al, 2Eh	; '.'
  7089 00002EED 750C                    		jnz	short loc_2EFA
  7090 00002EEF AA                      		stosb
  7091 00002EF0 AC                      		lodsb
  7092 00002EF1 E8FD00                  		call	PATHCHRCMP
  7093 00002EF4 7406                    		jz	short loc_2EFB
  7094 00002EF6 08C0                    		or	al, al
  7095 00002EF8 7402                    		jz	short loc_2EFB
  7096 00002EFA 4E                      		dec	si
  7097                                  
  7098                                  loc_2EFA:				; CODE XREF: NAMETRANS+2Bj
  7099 00002EFB 4E                      		dec	si
  7100                                  
  7101                                  loc_2EFB:				; CODE XREF: NAMETRANS+23j
  7102                                  					; NAMETRANS+27j ...
  7103 00002EFC 4E                      		dec	si
  7104 00002EFD 30C0                    		xor	al, al
  7105 00002EFF C3                      		retn
  7106                                  
  7107                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7108                                  
  7109                                  BUILDFCB:				; CODE XREF: FINDNAME+7p GETPATH+78p ...
  7110 00002F00 B82020                  		mov	ax, 2020h
  7111 00002F03 BF[4103]                		mov	di, DEVFCB+8 ; 341h
  7112 00002F06 AB                      		stosw
  7113 00002F07 AA                      		stosb
  7114 00002F08 31C0                    		xor	ax, ax
  7115 00002F0A B90A00                  		mov	cx, 0Ah
  7116 00002F0D F3AB                    		rep stosw
  7117 00002F0F AA                      		stosb
  7118 00002F10 E8C508                  		call	DATE16
  7119 00002F13 BF[4F03]                		mov	di, DEVFCB+22 ; 34Fh
  7120 00002F16 92                      		xchg	ax, dx
  7121 00002F17 AB                      		stosw
  7122 00002F18 92                      		xchg	ax, dx
  7123 00002F19 AB                      		stosw
  7124 00002F1A 93                      		xchg	ax, bx
  7125 00002F1B BB[3903]                		mov	bx, DEVFCB  ; 339h
  7126 00002F1E 89FE                    		mov	si, di
  7127 00002F20 30C0                    		xor	al, al
  7128                                  
  7129                                  BUILDFCB_RETN:				; CODE XREF: MOVNAMENOSET+28j
  7130                                  					; LODNAME+4j ...
  7131 00002F22 C3                      		retn
  7132                                  
  7133                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7134                                  
  7135                                  
  7136                                  MOVNAMENOSET:				; CODE XREF: seg000:_$DIR_SEARCH_NEXTp
  7137                                  					; seg000:2A1Ep	...
  7138 00002F23 BF0100                  		mov	di, 1
  7139 00002F26 EB02                    		jmp	short MOVSTART
  7140                                  ; ---------------------------------------------------------------------------
  7141                                  
  7142                                  MOVNAME:				; CODE XREF: GETFILEp seg000:GETNAMEp	...
  7143 00002F28 31FF                    		xor	di, di
  7144                                  
  7145                                  MOVSTART:				; CODE XREF: MOVNAMENOSET+3j
  7146 00002F2A 36C706[6203]00E5        		mov	word [ss:CREATING], 0E500h
  7147 00002F31 89D6                    		mov	si, dx
  7148 00002F33 AC                      		lodsb
  7149 00002F34 36A2[6103]              		mov	byte [ss:EXTFCB], al
  7150 00002F38 30E4                    		xor	ah, ah
  7151 00002F3A 3CFF                    		cmp	al, 0FFh
  7152 00002F3C 750A                    		jnz	short HAVATTRB
  7153 00002F3E 83C207                  		add	dx, 7
  7154 00002F41 83C606                  		add	si, 6
  7155 00002F44 8A64FF                  		mov	ah, [si-1]
  7156 00002F47 AC                      		lodsb
  7157                                  
  7158                                  HAVATTRB:				; CODE XREF: MOVNAMENOSET+19j
  7159 00002F48 E895EC                  		call	GETTHISDRV
  7160 00002F4B 72D5                    		jb	short BUILDFCB_RETN
  7161 00002F4D 1E                      		push	ds
  7162 00002F4E 52                      		push	dx
  7163 00002F4F 56                      		push	si
  7164 00002F50 50                      		push	ax
  7165 00002F51 57                      		push	di
  7166 00002F52 16                      		push	ss
  7167 00002F53 07                      		pop	es
  7168 00002F54 BF[3903]                		mov	di, NAME1 ; 339h
  7169 00002F57 E82800                  		call	LODNAME
  7170 00002F5A 5F                      		pop	di
  7171 00002F5B 7217                    		jb	short DrvNoSet
  7172 00002F5D 09FF                    		or	di, di
  7173 00002F5F 7513                    		jnz	short DrvNoSet
  7174 00002F61 16                      		push	ss
  7175 00002F62 1F                      		pop	ds
  7176 00002F63 E801E4                  		call	DEVNAME
  7177 00002F66 730C                    		jnb	short DrvNoSet
  7178 00002F68 E8C0F2                  		call	FATREAD
  7179 00002F6B 36C606[4503]16          		mov	byte [ss:ATTRIB], 16h
  7180 00002F71 E873E6                  		call	GETCURRDIR
  7181                                  
  7182                                  DrvNoSet:				; CODE XREF: MOVNAMENOSET+38j
  7183                                  					; MOVNAMENOSET+3Cj ...
  7184 00002F74 58                      		pop	ax
  7185 00002F75 368826[4503]            		mov	byte [ss:ATTRIB], ah
  7186 00002F7A 5E                      		pop	si
  7187 00002F7B 5A                      		pop	dx
  7188 00002F7C 1F                      		pop	ds
  7189 00002F7D 16                      		push	ss
  7190 00002F7E 07                      		pop	es
  7191 00002F7F BF[3903]                		mov	di, NAME1 ; 339h
  7192                                  
  7193                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7194                                  
  7195                                  LODNAME:				; CODE XREF: seg000:2927p
  7196                                  					; MOVNAMENOSET+34p
  7197 00002F82 803C20                  		cmp	byte [si], 20h ; ' '
  7198 00002F85 F9                      		stc
  7199 00002F86 749A                    		jz	short BUILDFCB_RETN
  7200 00002F88 B90B00                  		mov	cx, 11
  7201                                  
  7202                                  MOVCHK:					; CODE XREF: LODNAME+16j
  7203 00002F8B E80E00                  		call	GETLET
  7204 00002F8E 720B                    		jb	short RET6
  7205 00002F90 7505                    		jnz	short STOLET
  7206 00002F92 3C20                    		cmp	al, 20h	; ' '
  7207 00002F94 F9                      		stc
  7208 00002F95 758B                    		jnz	short BUILDFCB_RETN
  7209                                  
  7210                                  STOLET:					; CODE XREF: LODNAME+Ej
  7211 00002F97 AA                      		stosb
  7212 00002F98 E2F1                    		loop	MOVCHK
  7213 00002F9A F8                      		clc
  7214                                  
  7215                                  RET6:					; CODE XREF: LODNAME+Cj seg000:2FB6j
  7216 00002F9B C3                      		retn
  7217                                  
  7218                                  ; ---------------------------------------------------------------------------
  7219                                  
  7220                                  GETLET:					; CODE XREF: CHKDEV+11p
  7221                                  					; GOTPRESTRING2:loc_17CBp ...
  7222 00002F9C AC                      		lodsb
  7223 00002F9D 3C61                    		cmp	al, 61h	; 'a'
  7224 00002F9F 7206                    		jb	short loc_2FA6
  7225 00002FA1 3C7A                    		cmp	al, 7Ah	; 'z'
  7226 00002FA3 7702                    		ja	short loc_2FA6
  7227 00002FA5 2C20                    		sub	al, 20h	; ' '
  7228                                  
  7229                                  loc_2FA6:				; CODE XREF: seg000:2F9Ej seg000:2FA2j
  7230 00002FA7 56                      		push	si
  7231 00002FA8 368B36[A401]            		mov	si, [ss:Current_Country]
  7232 00002FAD 83C612                  		add	si, 12h
  7233 00002FB0 0E                      		push	cs
  7234 00002FB1 2EFF14                  		call	word [cs:si]
  7235 00002FB4 5E                      		pop	si
  7236 00002FB5 3C2E                    		cmp	al, 2Eh	; '.'
  7237 00002FB7 74E2                    		jz	short RET6
  7238 00002FB9 3C22                    		cmp	al, 22h	; '"'
  7239 00002FBB 74DE                    		jz	short RET6
  7240 00002FBD E83100                  		call	PATHCHRCMP
  7241 00002FC0 74D9                    		jz	short RET6
  7242 00002FC2 3C5B                    		cmp	al, 5Bh	; '['
  7243 00002FC4 74D5                    		jz	short RET6
  7244 00002FC6 3C5D                    		cmp	al, 5Dh	; ']'
  7245 00002FC8 74D1                    		jz	short RET6
  7246                                  
  7247                                  DELIM:					; CODE XREF: seg000:2E46p
  7248 00002FCA 3C3A                    		cmp	al, 3Ah	; ':'
  7249 00002FCC 74CD                    		jz	short RET6
  7250 00002FCE 3C3C                    		cmp	al, 3Ch	; '<'
  7251 00002FD0 74C9                    		jz	short RET6
  7252 00002FD2 3C7C                    		cmp	al, 7Ch	; '|'
  7253 00002FD4 74C5                    		jz	short RET6
  7254 00002FD6 3C3E                    		cmp	al, 3Eh	; '>'
  7255 00002FD8 74C1                    		jz	short RET6
  7256 00002FDA 3C2B                    		cmp	al, 2Bh	; '+'
  7257 00002FDC 74BD                    		jz	short RET6
  7258 00002FDE 3C3D                    		cmp	al, 3Dh	; '='
  7259 00002FE0 74B9                    		jz	short RET6
  7260 00002FE2 3C3B                    		cmp	al, 3Bh	; ';'
  7261 00002FE4 74B5                    		jz	short RET6
  7262 00002FE6 3C2C                    		cmp	al, 2Ch	; ','
  7263 00002FE8 74B1                    		jz	short RET6
  7264                                  
  7265                                  SPCHK:				; CODE XREF: SCANB+1p
  7266 00002FEA 3C09                    		cmp	al, 9
  7267 00002FEC 74AD                    		jz	short RET6
  7268 00002FEE 3C20                    		cmp	al, 20h	; ' '
  7269                                  
  7270                                  GETLET_RETN:				; CODE XREF: PATHCHRCMP+2j
  7271 00002FF0 C3                      		retn
  7272                                  
  7273                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7274                                  
  7275                                  PATHCHRCMP:				; CODE XREF: seg000:0F2Fp DELELMES+Bp	...
  7276 00002FF1 3C2F                    		cmp	al, 2Fh	; '/'
  7277 00002FF3 74FB                    		jz	short GETLET_RETN
  7278 00002FF5 3C5C                    		cmp	al, 5Ch	; '\'
  7279 00002FF7 C3                      		retn
  7280                                  
  7281                                  ; ---------------------------------------------------------------------------
  7282                                  
  7283                                  _$WAIT:					; DATA XREF: seg000:07D8o
  7284 00002FF8 36A1[CC03]              		mov	ax, [ss:exit_code]
  7285 00002FFC 31D2                    		xor	dx, dx
  7286 00002FFE 368916[CC03]            		mov	[ss:exit_code], dx
  7287 00003003 E998D8                  		jmp	SYS_RET_OK
  7288                                  ; ---------------------------------------------------------------------------
  7289                                  
  7290 00003006 00000000                exec_blk	dd 0			; DATA XREF: seg000:304Cw seg000:308Ar ...
  7291 0000300A 00                      exec_func	db 0			; DATA XREF: seg000:3056w seg000:3082r ...
  7292 0000300B 0000                    exec_fh		dw 0			; DATA XREF: seg000:3067w seg000:30E1r ...
  7293 0000300D 0000                    exec_rel_fac	dw 0			; DATA XREF: seg000:313Bw
  7294                                  					; seg000:loc_31B2w ...
  7295 0000300F 0000                    exec_res_len_para dw 0			; DATA XREF: seg000:3123w seg000:31ABr ...
  7296 00003011 0000                    exec_init_IP	dW 0			; DATA XREF: seg000:3228w seg000:331Aw ...
  7297 00003013 0000                    exec_init_CS	dw 0			
  7298 00003015 0000                    exec_init_SP	dw 0			; DATA XREF: seg000:3221w seg000:3322w ...
  7299 00003017 0000                    exec_init_SS	dw 0	
  7300 00003019 0000                    exec_environ	dw 0			; DATA XREF: seg000:309Dw seg000:30D2w ...
  7301 0000301B 0000                    exec_size	dw 0			; DATA XREF: seg000:3190w seg000:31A7r ...
  7302 0000301D 0000                    exec_load_block	dw 0			; DATA XREF: seg000:loc_307Bw
  7303                                  					; seg000:319Aw	...
  7304 0000301F 00                      exec_load_high	db 0			; DATA XREF: seg000:305Aw seg000:3103w ...
  7305                                  
  7306                                  exec_internal_buffer EQU $
  7307                                  
  7308 00003020 0000                    exec_signature	dw 0			; DATA XREF: seg000:loc_3108r
  7309 00003022 0000                    exec_len_mod_512 dw 0
  7310 00003024 0000                    exec_pages	dw 0			; DATA XREF: seg000:exec_save_startr
  7311 00003026 0000                    exec_rle_count	dw 0			; DATA XREF: seg000:loc_3248r
  7312 00003028 0000                    exec_par_dir	dw 0			; DATA XREF: seg000:311Fr
  7313                                  					; seg000:loc_31B8r
  7314 0000302A 0000                    exec_min_BSS	dw 0			; DATA XREF: seg000:3173r seg000:317Dr
  7315 0000302C 0000                    exec_max_BSS	dw 0			; DATA XREF: seg000:30FCr seg000:3181r
  7316 0000302E 0000                    exec_SS		dw 0			; DATA XREF: seg000:3216r
  7317 00003030 0000                    exec_SP		dw 0			; DATA XREF: seg000:321Er
  7318 00003032 0000                    exec_chksum	dw 0
  7319 00003034 0000                    exec_IP		dw 0			; DATA XREF: seg000:3224r
  7320 00003036 0000                    exec_CS		dw 0
  7321 00003038 0000                    exec_rle_table	dw 0			; DATA XREF: seg000:3234r
  7322 0000303A 0000                    exec_iov	dw 0
  7323 0000303C 0000                    exec_dma	dw 0			; DATA XREF: seg000:3134w seg000:31B5w ...
  7324                                  
  7325                                  exec_internal_buffer_size EQU $-exec_internal_buffer
  7326                                  
  7327                                  ; ---------------------------------------------------------------------------
  7328                                  
  7329                                  _$EXEC:					; DATA XREF: seg000:07D4o
  7330 0000303E 3C03                    		cmp	al, 3
  7331 00003040 7607                    		jbe	short loc_3048
  7332                                  
  7333                                  loc_3041:				; CODE XREF: seg000:304Aj
  7334 00003042 B001                    		mov	al, 1
  7335                                  
  7336                                  loc_3043:				; CODE XREF: seg000:loc_3046j
  7337 00003044 E961D8                  		jmp	SYS_RET_ERR
  7338                                  ; ---------------------------------------------------------------------------
  7339                                  
  7340                                  loc_3046:				; CODE XREF: seg000:3065j seg000:3079j
  7341 00003047 EBFB                    		jmp	short loc_3043
  7342                                  ; ---------------------------------------------------------------------------
  7343                                  
  7344                                  loc_3048:				; CODE XREF: seg000:303Fj
  7345 00003049 3C02                    		cmp	al, 2
  7346 0000304B 74F5                    		jz	short loc_3041
  7347 0000304D 36891E[0630]            		mov	[ss:exec_blk], bx
  7348 00003052 368C06[0830]            		mov	[ss:exec_blk+2], es
  7349 00003057 36A2[0A30]              		mov	[ss:exec_func], al
  7350 0000305B 36C606[1F30]00          		mov	byte [ss:exec_load_high], 0
  7351 00003061 30C0                    		xor	al, al
  7352 00003063 E86909                  		call	_$OPEN
  7353 00003066 72DF                    		jb	short loc_3046
  7354 00003068 36A3[0B30]              		mov	[ss:exec_fh], ax
  7355 0000306C 89C3                    		mov	bx, ax
  7356 0000306E 30C0                    		xor	al, al
  7357 00003070 E8C60E                  		call	_$IOCTL
  7358 00003073 F6C280                  		test	dl, 80h
  7359 00003076 7404                    		jz	short loc_307B
  7360 00003078 B002                    		mov	al, 2
  7361 0000307A EBCB                    		jmp	short loc_3046
  7362                                  ; ---------------------------------------------------------------------------
  7363                                  
  7364                                  loc_307B:				; CODE XREF: seg000:3075j
  7365 0000307C 36C706[1D30]0000        		mov	word [ss:exec_load_block], 0
  7366 00003083 36F606[0A30]02          		test	byte [ss:exec_func], 2
  7367 00003089 7552                    		jnz	short loc_30DC
  7368 0000308B 36C536[0630]            		lds	si, [ss:exec_blk]
  7369 00003090 8B04                    		mov	ax, [si]
  7370 00003092 09C0                    		or	ax, ax
  7371 00003094 7510                    		jnz	short loc_30A5
  7372 00003096 368E1E[8B01]            		mov	ds, [ss:CurrentPDB]
  7373 0000309B A12C00                  		mov	ax, [2Ch]
  7374 0000309E 36A3[1930]              		mov	[ss:exec_environ], ax
  7375 000030A2 09C0                    		or	ax, ax
  7376 000030A4 7437                    		jz	short loc_30DC
  7377                                  
  7378                                  loc_30A5:				; CODE XREF: seg000:3093j
  7379 000030A6 FC                      		cld
  7380 000030A7 8EC0                    		mov	es, ax
  7381 000030A9 31FF                    		xor	di, di
  7382 000030AB B9FF7F                  		mov	cx, 7FFFh
  7383 000030AE 30C0                    		xor	al, al
  7384                                  
  7385                                  loc_30AF:				; CODE XREF: seg000:30B9j
  7386 000030B0 F2AE                    		repne scasb
  7387 000030B2 7405                    		jz	short loc_30B8
  7388 000030B4 B00A                    		mov	al, 0Ah
  7389 000030B6 E98E00                  		jmp	loc_3146
  7390                                  ; ---------------------------------------------------------------------------
  7391                                  
  7392                                  loc_30B8:				; CODE XREF: seg000:30B1j
  7393 000030B9 AE                      		scasb
  7394 000030BA 75F4                    		jnz	short loc_30AF
  7395 000030BC 57                      		push	di
  7396 000030BD 89FB                    		mov	bx, di
  7397 000030BF 83C30F                  		add	bx, 0Fh
  7398 000030C2 B104                    		mov	cl, 4
  7399 000030C4 D3EB                    		shr	bx, cl
  7400 000030C6 06                      		push	es
  7401 000030C7 E80BE0                  		call	_$ALLOC
  7402 000030CA 1F                      		pop	ds
  7403 000030CB 59                      		pop	cx
  7404 000030CC 7303                    		jnb	short loc_30D0
  7405 000030CE EB71                    		jmp	short loc_3140
  7406                                  ; ---------------------------------------------------------------------------
  7407 000030D0 90                      		db  90h
  7408                                  ; ---------------------------------------------------------------------------
  7409                                  
  7410                                  loc_30D0:				; CODE XREF: seg000:30CBj
  7411 000030D1 8EC0                    		mov	es, ax
  7412 000030D3 36A3[1930]              		mov	[ss:exec_environ], ax
  7413 000030D7 31F6                    		xor	si, si
  7414 000030D9 31FF                    		xor	di, di
  7415 000030DB F3A4                    		rep movsb
  7416                                  
  7417                                  loc_30DC:				; CODE XREF: seg000:3088j seg000:30A3j
  7418 000030DD 16                      		push	ss
  7419 000030DE 1F                      		pop	ds
  7420 000030DF B91E00                  		mov	cx, exec_internal_buffer_size	; 1Eh
  7421 000030E2 8B1E[0B30]              		mov	bx, [exec_fh]
  7422 000030E6 BA[2030]                		mov	dx, exec_signature	; 301Fh
  7423 000030E9 06                      		push	es
  7424 000030EA 1E                      		push	ds
  7425 000030EB E87203                  		call	exec_dealloc
  7426 000030EE E8A00D                  		call	_$READ
  7427 000030F1 E87503                  		call	exec_alloc
  7428 000030F4 1F                      		pop	ds
  7429 000030F5 07                      		pop	es
  7430 000030F6 724D                    		jb	short loc_3144
  7431 000030F8 83F81E                  		cmp	ax, exec_internal_buffer_size	; 1Eh
  7432 000030FB 7519                    		jnz	short loc_3115
  7433 000030FD 833E[2C30]00            		cmp	word [exec_max_BSS], 0
  7434 00003102 7505                    		jnz	short loc_3108
  7435 00003104 C606[1F30]FF            		mov	byte [exec_load_high], 0FFh
  7436                                  
  7437                                  loc_3108:				; CODE XREF: seg000:3101j
  7438 00003109 A1[2030]                		mov	ax, [exec_signature]
  7439 0000310C 3D4D5A                  		cmp	ax, 5A4Dh	; exe_valid_signature
  7440 0000310F 7408                    		jz	short exec_save_start
  7441 00003111 3D5A4D                  		cmp	ax, 4D5Ah	; exe_valid_old_signature
  7442 00003114 7403                    		jz	short exec_save_start
  7443                                  
  7444                                  loc_3115:				; CODE XREF: seg000:30FAj
  7445 00003116 E97D01                  		jmp	loc_3295
  7446                                  ; ---------------------------------------------------------------------------
  7447                                  
  7448                                  exec_save_start:				; CODE XREF: seg000:310Ej seg000:3113j
  7449 00003119 A1[2430]                		mov	ax, [exec_pages]
  7450 0000311C B105                    		mov	cl, 5
  7451 0000311E D3E0                    		shl	ax, cl
  7452 00003120 2B06[2830]              		sub	ax, [exec_par_dir]
  7453 00003124 A3[0F30]                		mov	[exec_res_len_para], ax
  7454 00003127 F606[0A30]02            		test	byte [exec_func], 2
  7455 0000312C 7429                    		jz	short exec_allocate
  7456 0000312E C43E[0630]              		les	di, [exec_blk]
  7457 00003132 268B05                  		mov	ax, [es:di]
  7458 00003135 A3[3C30]                		mov	[exec_dma], ax
  7459 00003138 268B4502                		mov	ax, [es:di+2]
  7460 0000313C A3[0D30]                		mov	[exec_rel_fac], ax
  7461 0000313F EB78                    		jmp	short loc_31B8
  7462                                  ; ---------------------------------------------------------------------------
  7463                                  
  7464                                  loc_3140:				; CODE XREF: seg000:30CDj seg000:3166j ...
  7465 00003141 B008                    		mov	al, 8
  7466 00003143 EB02                    		jmp	short loc_3146
  7467                                  ; ---------------------------------------------------------------------------
  7468                                  
  7469                                  loc_3144:				; CODE XREF: seg000:30F5j
  7470                                  					; seg000:loc_3245j
  7471 00003145 B00B                    		mov	al, 0Bh
  7472                                  
  7473                                  loc_3146:				; CODE XREF: seg000:30B5j seg000:3142j
  7474 00003147 50                      		push	ax
  7475 00003148 368B1E[0B30]            		mov	bx, [ss:exec_fh]
  7476 0000314D E81003                  		call	exec_dealloc
  7477 00003150 E89F0C                  		call	_$CLOSE
  7478 00003153 58                      		pop	ax
  7479 00003154 E951D7                  		jmp	SYS_RET_ERR
  7480                                  ; ---------------------------------------------------------------------------
  7481                                  
  7482                                  exec_allocate:				; CODE XREF: seg000:312Bj
  7483 00003157 50                      		push	ax
  7484 00003158 BBFFFF                  		mov	bx, 0FFFFh
  7485 0000315B 1E                      		push	ds
  7486 0000315C E876DF                  		call	_$ALLOC
  7487 0000315F 1F                      		pop	ds
  7488 00003160 58                      		pop	ax
  7489 00003161 83C010                  		add	ax, 10h
  7490 00003164 83FB11                  		cmp	bx, 11h
  7491 00003167 72D8                    		jb	short loc_3140
  7492 00003169 39D8                    		cmp	ax, bx
  7493 0000316B 77D4                    		ja	short loc_3140
  7494 0000316D 803E[1F30]00            		cmp	byte [exec_load_high], 0
  7495 00003172 7518                    		jnz	short loc_318B
  7496 00003174 0306[2A30]              		add	ax, [exec_min_BSS]
  7497 00003178 72C7                    		jb	short loc_3140
  7498 0000317A 39D8                    		cmp	ax, bx
  7499 0000317C 77C3                    		ja	short loc_3140
  7500 0000317E 2B06[2A30]              		sub	ax, [exec_min_BSS]
  7501 00003182 0306[2C30]              		add	ax, [exec_max_BSS]
  7502 00003186 7204                    		jb	short loc_318B
  7503 00003188 39D8                    		cmp	ax, bx
  7504 0000318A 7602                    		jbe	short loc_318D
  7505                                  
  7506                                  loc_318B:				; CODE XREF: seg000:3171j seg000:3185j
  7507 0000318C 89D8                    		mov	ax, bx
  7508                                  
  7509                                  loc_318D:				; CODE XREF: seg000:3189j
  7510 0000318E 1E                      		push	ds
  7511 0000318F 89C3                    		mov	bx, ax
  7512 00003191 891E[1B30]              		mov	[exec_size], bx
  7513 00003195 E83DDF                  		call	_$ALLOC
  7514 00003198 1F                      		pop	ds
  7515 00003199 72A6                    		jb	short loc_3140
  7516 0000319B A3[1D30]                		mov	[exec_load_block], ax
  7517 0000319E 83C010                  		add	ax, 10h
  7518 000031A1 803E[1F30]00            		cmp	byte [exec_load_high], 0
  7519 000031A6 740B                    		jz	short loc_31B2
  7520 000031A8 0306[1B30]              		add	ax, [exec_size]
  7521 000031AC 2B06[0F30]              		sub	ax, [exec_res_len_para]
  7522 000031B0 83E810                  		sub	ax, 10h
  7523                                  
  7524                                  loc_31B2:				; CODE XREF: seg000:31A5j
  7525 000031B3 A3[0D30]                		mov	[exec_rel_fac], ax
  7526 000031B6 A3[3C30]                		mov	[exec_dma], ax
  7527                                  
  7528                                  loc_31B8:				; CODE XREF: seg000:313Ej
  7529 000031B9 8B16[2830]              		mov	dx, [exec_par_dir]
  7530 000031BD 52                      		push	dx
  7531 000031BE B104                    		mov	cl, 4
  7532 000031C0 D3E2                    		shl	dx, cl
  7533 000031C2 58                      		pop	ax
  7534 000031C3 B10C                    		mov	cl, 0Ch
  7535 000031C5 D3E8                    		shr	ax, cl
  7536 000031C7 89C1                    		mov	cx, ax
  7537 000031C9 8B1E[0B30]              		mov	bx, [exec_fh]
  7538 000031CD 1E                      		push	ds
  7539 000031CE 30C0                    		xor	al, al
  7540 000031D0 E8140D                  		call	_$LSEEK
  7541 000031D3 1F                      		pop	ds
  7542                                  
  7543                                  loc_31D3:				; CODE XREF: seg000:3210j
  7544 000031D4 8B1E[0F30]              		mov	bx, [exec_res_len_para]
  7545 000031D8 81FB0010                		cmp	bx, 1000h
  7546 000031DC 7203                    		jb	short loc_31E0
  7547 000031DE BBE00F                  		mov	bx, 0FE0h
  7548                                  
  7549                                  loc_31E0:				; CODE XREF: seg000:31DBj
  7550 000031E1 291E[0F30]              		sub	[exec_res_len_para], bx
  7551 000031E5 53                      		push	bx
  7552 000031E6 B104                    		mov	cl, 4
  7553 000031E8 D3E3                    		shl	bx, cl
  7554 000031EA 89D9                    		mov	cx, bx
  7555 000031EC 8B1E[0B30]              		mov	bx, [exec_fh]
  7556 000031F0 1E                      		push	ds
  7557 000031F1 8E1E[3C30]              		mov	ds, [exec_dma]
  7558 000031F5 31D2                    		xor	dx, dx
  7559 000031F7 51                      		push	cx
  7560 000031F8 E86502                  		call	exec_dealloc
  7561 000031FB E8930C                  		call	_$READ
  7562 000031FE E86802                  		call	exec_alloc
  7563 00003201 59                      		pop	cx
  7564 00003202 1F                      		pop	ds
  7565 00003203 39C1                    		cmp	cx, ax
  7566 00003205 5B                      		pop	bx
  7567 00003206 750B                    		jnz	short loc_3212
  7568 00003208 011E[3C30]              		add	[exec_dma], bx
  7569 0000320C 833E[0F30]00            		cmp	word [exec_res_len_para], 0
  7570 00003211 75C1                    		jnz	short loc_31D3
  7571                                  
  7572                                  loc_3212:				; CODE XREF: seg000:3205j
  7573 00003213 8B0E[0D30]              		mov	cx, [exec_rel_fac]
  7574 00003217 A1[2E30]                		mov	ax, [exec_SS]
  7575 0000321A 01C8                    		add	ax, cx
  7576 0000321C A3[1730]                		mov	[exec_init_SS], ax
  7577 0000321F A1[3030]                		mov	ax, [exec_SP]
  7578 00003222 A3[1530]                		mov	[exec_init_SP], ax
  7579 00003225 C406[3430]              		les	ax, [exec_IP]
  7580 00003229 A3[1130]                		mov	[exec_init_IP], ax
  7581 0000322C 8CC0                    		mov	ax, es
  7582 0000322E 01C8                    		add	ax, cx
  7583 00003230 A3[1330]                		mov	[exec_init_CS], ax
  7584 00003233 31C9                    		xor	cx, cx
  7585 00003235 8B16[3830]              		mov	dx, [exec_rle_table]
  7586 00003239 8B1E[0B30]              		mov	bx, [exec_fh]
  7587 0000323D 1E                      		push	ds
  7588 0000323E 31C0                    		xor	ax, ax
  7589 00003240 E8A40C                  		call	_$LSEEK
  7590 00003243 1F                      		pop	ds
  7591 00003244 7303                    		jnb	short loc_3248
  7592                                  
  7593                                  loc_3245:				; CODE XREF: seg000:3264j
  7594 00003246 E9FCFE                  		jmp	loc_3144
  7595                                  ; ---------------------------------------------------------------------------
  7596                                  
  7597                                  loc_3248:				; CODE XREF: seg000:3243j
  7598 00003249 8B16[2630]              		mov	dx, [exec_rle_count]
  7599                                  
  7600                                  loc_324C:				; CODE XREF: seg000:3290j
  7601 0000324D 52                      		push	dx
  7602 0000324E BA[2030]                		mov	dx, exec_signature ; 301Fh
  7603 00003251 B91C00                  		mov	cx, ((exec_internal_buffer_size)/4)*4 ; 1Ch
  7604 00003254 368B1E[0B30]            		mov	bx, [ss:exec_fh]
  7605 00003259 1E                      		push	ds
  7606 0000325A E80302                  		call	exec_dealloc
  7607 0000325D E8310C                  		call	_$READ
  7608 00003260 E80602                  		call	exec_alloc
  7609 00003263 07                      		pop	es
  7610 00003264 5A                      		pop	dx
  7611 00003265 72DF                    		jb	short loc_3245
  7612 00003267 B90700                  		mov	cx, (exec_internal_buffer_size)/4 ; 7
  7613 0000326A BF[2030]                		mov	di, exec_signature ; 301Fh
  7614 0000326D 368B36[0D30]            		mov	si, [ss:exec_rel_fac]
  7615                                  
  7616                                  loc_3271:				; CODE XREF: seg000:328Cj
  7617 00003272 83FA00                  		cmp	dx, 0
  7618 00003275 7503                    		jnz	short loc_3279
  7619 00003277 E9B800                  		jmp	loc_3331
  7620                                  ; ---------------------------------------------------------------------------
  7621                                  
  7622                                  loc_3279:				; CODE XREF: seg000:3274j
  7623 0000327A 26C51D                  		lds	bx, [es:di]
  7624 0000327D 8CD8                    		mov	ax, ds
  7625 0000327F 01F0                    		add	ax, si
  7626 00003281 8ED8                    		mov	ds, ax
  7627 00003283 8B07                    		mov	ax, [bx]
  7628 00003285 01F0                    		add	ax, si
  7629 00003287 8907                    		mov	[bx], ax
  7630 00003289 83C704                  		add	di, 4
  7631 0000328C 4A                      		dec	dx
  7632 0000328D E2E3                    		loop	loc_3271
  7633 0000328F 06                      		push	es
  7634 00003290 1F                      		pop	ds
  7635 00003291 EBBA                    		jmp	short loc_324C
  7636                                  ; ---------------------------------------------------------------------------
  7637                                  
  7638                                  loc_3292:				; CODE XREF: seg000:32B1j seg000:3305j
  7639 00003293 E9ABFE                  		jmp	loc_3140
  7640                                  ; ---------------------------------------------------------------------------
  7641                                  
  7642                                  loc_3295:				; CODE XREF: seg000:loc_3115j
  7643 00003296 36F606[0A30]02          		test	byte [ss:exec_func], 2
  7644 0000329C 740C                    		jz	short loc_32A9
  7645 0000329E 36C536[0630]            		lds	si, [ss:exec_blk]
  7646 000032A3 AD                      		lodsw
  7647 000032A4 36A3[3C30]              		mov	[ss:exec_dma], ax
  7648 000032A8 EB30                    		jmp	short exec_64K
  7649                                  ; ---------------------------------------------------------------------------
  7650                                  
  7651                                  loc_32A9:				; CODE XREF: seg000:329Bj
  7652 000032AA BBFFFF                  		mov	bx, 0FFFFh
  7653 000032AD E825DE                  		call	_$ALLOC
  7654 000032B0 09DB                    		or	bx, bx
  7655 000032B2 74DF                    		jz	short loc_3292
  7656 000032B4 36891E[1B30]            		mov	[ss:exec_size], bx
  7657 000032B9 53                      		push	bx
  7658 000032BA E818DE                  		call	_$ALLOC
  7659 000032BD 5B                      		pop	bx
  7660 000032BE 36A3[1D30]              		mov	[ss:exec_load_block], ax
  7661 000032C2 83C010                  		add	ax, 10h
  7662 000032C5 36A3[3C30]              		mov	[ss:exec_dma], ax
  7663 000032C9 83EB10                  		sub	bx, 10h
  7664 000032CC 81FB0010                		cmp	bx, 1000h
  7665 000032D0 7308                    		jnb	short exec_64K
  7666 000032D2 89D8                    		mov	ax, bx
  7667 000032D4 B104                    		mov	cl, 4
  7668 000032D6 D3E0                    		shl	ax, cl
  7669 000032D8 EB03                    		jmp	short loc_32DC
  7670                                  ; ---------------------------------------------------------------------------
  7671                                  
  7672                                  exec_64K:				; CODE XREF: seg000:32A7j seg000:32CFj
  7673 000032DA B8FFFF                  		mov	ax, 0FFFFh
  7674                                  
  7675                                  loc_32DC:				; CODE XREF: seg000:32D7j
  7676 000032DD 50                      		push	ax
  7677 000032DE 368B1E[0B30]            		mov	bx, [ss:exec_fh]
  7678 000032E3 31C9                    		xor	cx, cx
  7679 000032E5 89CA                    		mov	dx, cx
  7680 000032E7 31C0                    		xor	ax, ax
  7681 000032E9 E8FB0B                  		call	_$LSEEK
  7682 000032EC 368B1E[0B30]            		mov	bx, [ss:exec_fh]
  7683 000032F1 59                      		pop	cx
  7684 000032F2 368E1E[3C30]            		mov	ds, [ss:exec_dma]
  7685 000032F7 31D2                    		xor	dx, dx
  7686 000032F9 51                      		push	cx
  7687 000032FA E86301                  		call	exec_dealloc
  7688 000032FD E8910B                  		call	_$READ
  7689 00003300 E86601                  		call	exec_alloc
  7690 00003303 5E                      		pop	si
  7691 00003304 39F0                    		cmp	ax, si
  7692 00003306 748B                    		jz	short loc_3292
  7693 00003308 36F606[0A30]02          		test	byte [ss:exec_func], 2
  7694 0000330E 7522                    		jnz	short loc_3331
  7695 00003310 36A1[3C30]              		mov	ax, [ss:exec_dma]
  7696 00003314 83E810                  		sub	ax, 10h
  7697 00003317 36A3[1330]              		mov	[ss:exec_init_CS], ax
  7698 0000331B 36C706[1130]0001        		mov	word [ss:exec_init_IP], 100h
  7699 00003322 4E                      		dec	si
  7700 00003323 368936[1530]            		mov	[ss:exec_init_SP], si
  7701 00003328 36A3[1730]              		mov	[ss:exec_init_SS], ax
  7702 0000332C 8ED8                    		mov	ds, ax
  7703 0000332E C7040000                		mov	word [si], 0
  7704                                  
  7705                                  loc_3331:				; CODE XREF: seg000:3276j seg000:330Dj
  7706 00003332 368B1E[0B30]            		mov	bx, [ss:exec_fh]
  7707 00003337 E82601                  		call	exec_dealloc
  7708 0000333A E8B50A                  		call	_$CLOSE
  7709 0000333D E82901                  		call	exec_alloc
  7710 00003340 36F606[0A30]02          		test	byte [ss:exec_func], 2
  7711 00003346 7403                    		jz	short loc_334A
  7712 00003348 E953D5                  		jmp	SYS_RET_OK
  7713                                  ; ---------------------------------------------------------------------------
  7714                                  
  7715                                  loc_334A:				; CODE XREF: seg000:3345j
  7716 0000334B 368B16[1D30]            		mov	dx, [ss:exec_load_block]
  7717 00003350 BE0100                  		mov	si, 1
  7718 00003353 36A1[1930]              		mov	ax, [ss:exec_environ]
  7719 00003357 09C0                    		or	ax, ax
  7720 00003359 7405                    		jz	short loc_335F
  7721 0000335B 48                      		dec	ax
  7722 0000335C 8ED8                    		mov	ds, ax
  7723 0000335E 8914                    		mov	[si], dx
  7724                                  
  7725                                  loc_335F:				; CODE XREF: seg000:3358j
  7726 00003360 36A1[1D30]              		mov	ax, [ss:exec_load_block]
  7727 00003364 48                      		dec	ax
  7728 00003365 8ED8                    		mov	ds, ax
  7729 00003367 8914                    		mov	[si], dx
  7730 00003369 52                      		push	dx
  7731 0000336A 36C606[8D01]FF          		mov	byte [ss:CreatePDB], 0FFh
  7732 00003370 E8C9D7                  		call	_$DUP_PDB
  7733 00003373 5A                      		pop	dx
  7734 00003374 36FF36[1930]            		push	word [ss:exec_environ]
  7735 00003379 268F062C00              		pop	word [es:2Ch]
  7736 0000337E 368B36[1B30]            		mov	si, [ss:exec_size]
  7737 00003383 01D6                    		add	si, dx
  7738 00003385 2689360200              		mov	word [es:2], si
  7739 0000338A 36C536[0630]            		lds	si, [ss:exec_blk]
  7740 0000338F 1E                      		push	ds
  7741 00003390 56                      		push	si
  7742 00003391 C57406                  		lds	si, [si+6]
  7743 00003394 B90C00                  		mov	cx, 0Ch
  7744 00003397 51                      		push	cx
  7745 00003398 BF5C00                  		mov	di, 5Ch	; '\'
  7746 0000339B 8A1C                    		mov	bl, [si]
  7747 0000339D F3A4                    		rep movsb
  7748 0000339F 31C0                    		xor	ax, ax
  7749 000033A1 AB                      		stosw
  7750 000033A2 AB                      		stosw
  7751 000033A3 59                      		pop	cx
  7752 000033A4 5E                      		pop	si
  7753 000033A5 1F                      		pop	ds
  7754 000033A6 1E                      		push	ds
  7755 000033A7 56                      		push	si
  7756 000033A8 C5740A                  		lds	si, [si+0Ah]
  7757 000033AB BF6C00                  		mov	di, 6Ch	; 'l'
  7758 000033AE 8A3C                    		mov	bh, [si]
  7759 000033B0 F3A4                    		rep movsb
  7760 000033B2 AB                      		stosw
  7761 000033B3 AB                      		stosw
  7762 000033B4 5E                      		pop	si
  7763 000033B5 1F                      		pop	ds
  7764 000033B6 C57402                  		lds	si, [si+2]
  7765 000033B9 B98000                  		mov	cx, 80h	; ''
  7766 000033BC 89CF                    		mov	di, cx
  7767 000033BE F3A4                    		rep movsb
  7768 000033C0 FEC9                    		dec	cl
  7769 000033C2 363A3E[0001]            		cmp	bh, [ss:NUMIO]
  7770 000033C7 7604                    		jbe	short loc_33CC
  7771 000033C9 88CF                    		mov	bh, cl
  7772 000033CB EB02                    		jmp	short loc_33CE
  7773                                  ; ---------------------------------------------------------------------------
  7774                                  
  7775                                  loc_33CC:				; CODE XREF: seg000:33C6j
  7776 000033CD 30FF                    		xor	bh, bh
  7777                                  
  7778                                  loc_33CE:				; CODE XREF: seg000:33CAj
  7779 000033CF 363A1E[0001]            		cmp	bl, [ss:NUMIO]
  7780 000033D4 7604                    		jbe	short loc_33D9
  7781 000033D6 88CB                    		mov	bl, cl
  7782 000033D8 EB02                    		jmp	short loc_33DB
  7783                                  ; ---------------------------------------------------------------------------
  7784                                  
  7785                                  loc_33D9:				; CODE XREF: seg000:33D3j
  7786 000033DA 30DB                    		xor	bl, bl
  7787                                  
  7788                                  loc_33DB:				; CODE XREF: seg000:33D7j
  7789 000033DC E85AD3                  		call	get_user_stack
  7790 000033DF FF7414                  		push	word [si+14h]
  7791 000033E2 FF7412                  		push	word [si+12h]
  7792 000033E5 FF7414                  		push	word [si+14h]
  7793 000033E8 FF7412                  		push	word [si+12h]
  7794 000033EB 268F060A00              		pop	word [es:0Ah]
  7795 000033F0 268F060C00              		pop	word [es:0Ch]
  7796 000033F5 31C0                    		xor	ax, ax
  7797 000033F7 8ED8                    		mov	ds, ax
  7798 000033F9 8F068800                		pop	word [addr_int_terminate] ; 88h
  7799 000033FD 8F068A00                		pop	word [addr_int_terminate+2] ; 8Ah
  7800 00003401 36C706[DF00]8000        		mov	word [ss:DMAADD], 80h
  7801 00003408 368E1E[8B01]            		mov	ds, [ss:CurrentPDB]
  7802 0000340D 368C1E[E100]            		mov	word [ss:DMAADD+2], ds
  7803 00003412 36F606[0A30]01          		test	byte [ss:exec_func], 1
  7804 00003418 7426                    		jz	short exec_go
  7805 0000341A 36C536[1530]            		lds	si, [ss:exec_init_SP]
  7806 0000341F 36C43E[0630]            		les	di, [ss:exec_blk]
  7807 00003424 268C5D10                		mov	word [es:di+10h], ds
  7808 00003428 4E                      		dec	si
  7809 00003429 4E                      		dec	si
  7810 0000342A 891C                    		mov	[si], bx
  7811 0000342C 2689750E                		mov	[es:di+0Eh], si
  7812 00003430 36C506[1130]            		lds	ax, [ss:exec_init_IP]
  7813 00003435 268C5D14                		mov	word [es:di+14h], ds
  7814 00003439 26894512                		mov	[es:di+12h], ax
  7815 0000343D E95ED4                  		jmp	SYS_RET_OK
  7816                                  ; ---------------------------------------------------------------------------
  7817                                  
  7818                                  exec_go:				; CODE XREF: seg000:3417j
  7819 00003440 36C536[1130]            		lds	si, [ss:exec_init_IP]
  7820 00003445 FA                      		cli
  7821 00003446 36C606[2301]00          		mov	byte [ss:INDOS], 0
  7822 0000344C 368E16[1730]            		mov	ss, word [ss:exec_init_SS]
  7823 00003451 2E8B26[1530]            		mov	sp, word [cs:exec_init_SP]
  7824 00003456 FB                      		sti
  7825 00003457 1E                      		push	ds
  7826 00003458 56                      		push	si
  7827 00003459 8EC2                    		mov	es, dx
  7828 0000345B 8EDA                    		mov	ds, dx
  7829 0000345D 89D8                    		mov	ax, bx
  7830 0000345F CB                      		retf
  7831                                  
  7832                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7833                                  
  7834                                  exec_dealloc:				; CODE XREF: seg000:30EAp seg000:314Cp ...
  7835 00003460 53                      		push	bx
  7836 00003461 BB0000                  		mov	bx, 0
  7837 00003464 E80D00                  		call	exec_do_change_owner
  7838 00003467 5B                      		pop	bx
  7839 00003468 C3                      		retn
  7840                                  
  7841                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7842                                  
  7843                                  exec_alloc:				; CODE XREF: seg000:30F0p seg000:31FDp ...
  7844 00003469 53                      		push	bx
  7845 0000346A 2E8B1E[8B01]            		mov	bx, [cs:CurrentPDB]
  7846 0000346F E80200                  		call	exec_do_change_owner
  7847 00003472 5B                      		pop	bx
  7848 00003473 C3                      		retn
  7849                                  
  7850                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7851                                  
  7852                                  exec_do_change_owner:			; CODE XREF: exec_dealloc+4p exec_alloc+6p
  7853 00003474 1E                      		push	ds
  7854 00003475 50                      		push	ax
  7855 00003476 2EA1[1930]              		mov	ax, [cs:exec_environ]
  7856 0000347A 09C0                    		or	ax, ax
  7857 0000347C 7407                    		jz	short loc_3484
  7858 0000347E 48                      		dec	ax
  7859 0000347F 8ED8                    		mov	ds, ax
  7860 00003481 891E0100                		mov	word [1], bx
  7861                                  
  7862                                  loc_3484:				; CODE XREF: exec_do_change_owner+8j
  7863 00003485 2EA1[1D30]              		mov	ax, [cs:exec_load_block]
  7864 00003489 09C0                    		or	ax, ax
  7865 0000348B 7407                    		jz	short loc_3493
  7866 0000348D 48                      		dec	ax
  7867 0000348E 8ED8                    		mov	ds, ax
  7868 00003490 891E0100                		mov	word [1], bx
  7869                                  
  7870                                  loc_3493:				; CODE XREF: exec_do_change_owner+17j
  7871 00003494 58                      		pop	ax
  7872 00003495 1F                      		pop	ds
  7873 00003496 C3                      		retn
  7874                                  
  7875                                  ; ---------------------------------------------------------------------------
  7876                                  
  7877                                  _$KEEP_PROCESS:				; DATA XREF: seg000:07A0o
  7878 00003497 50                      		push	ax
  7879 00003498 36C606[CE03]03          		mov	byte [ss:exit_type], 3
  7880 0000349E 368E06[8B01]            		mov	es, [ss:CurrentPDB]
  7881 000034A3 83FA06                  		cmp	dx, 6
  7882 000034A6 7303                    		jnb	short loc_34AA
  7883 000034A8 BA0600                  		mov	dx, 6
  7884                                  
  7885                                  loc_34AA:				; CODE XREF: seg000:34A5j
  7886 000034AB 89D3                    		mov	bx, dx
  7887 000034AD 53                      		push	bx
  7888 000034AE 06                      		push	es
  7889 000034AF E810DD                  		call	_$SETBLOCK
  7890 000034B2 1F                      		pop	ds
  7891 000034B3 5B                      		pop	bx
  7892 000034B4 7207                    		jb	short loc_34BC
  7893 000034B6 8CD8                    		mov	ax, ds
  7894 000034B8 01D8                    		add	ax, bx
  7895 000034BA A30200                  		mov	word [2], ax
  7896                                  
  7897                                  loc_34BC:				; CODE XREF: seg000:34B3j
  7898 000034BD 58                      		pop	ax
  7899 000034BE EB24                    		jmp	short exit_inner
  7900                                  ; ---------------------------------------------------------------------------
  7901                                  
  7902                                  Stay_resident:				; DATA XREF: seg000:41FBo
  7903 000034C0 B80031                  		mov	ax, 3100h
  7904 000034C3 83C20F                  		add	dx, 0Fh
  7905 000034C6 B104                    		mov	cl, 4
  7906 000034C8 D3EA                    		shr	dx, cl
  7907 000034CA E955D1                  		jmp	COMMAND
  7908                                  ; ---------------------------------------------------------------------------
  7909                                  
  7910                                  _$EXIT:					; DATA XREF: seg000:07D6o
  7911 000034CD 30E4                    		xor	ah, ah
  7912 000034CF 368626[D600]            		xchg	ah, [ss:DidCTRLC]
  7913 000034D4 08E4                    		or	ah, ah
  7914 000034D6 36C606[CE03]00          		mov	byte [ss:exit_type], 0
  7915 000034DC 7406                    		jz	short exit_inner
  7916 000034DE 36C606[CE03]01          		mov	byte [ss:exit_type], 1
  7917                                  
  7918                                  exit_inner:				; CODE XREF: seg000:34BDj seg000:34DBj
  7919 000034E4 E852D2                  		call	get_user_stack
  7920 000034E7 36FF36[8B01]            		push	word [ss:CurrentPDB]
  7921 000034EC 8F4414                  		pop	word [si+14h]
  7922 000034EF E97BD4                  		jmp	abort_inner
  7923                                  ; ---------------------------------------------------------------------------
  7924                                  
  7925                                  _$STD_CON_INPUT:				; DATA XREF: seg000:0740o
  7926 000034F2 E8D000                  		call	_$STD_CON_INPUT_NO_ECHO
  7927 000034F5 50                      		push	ax
  7928 000034F6 E80400                  		call	OUTT
  7929 000034F9 58                      		pop	ax
  7930                                  
  7931                                  locret_34F9:				; CODE XREF: OUTT+2Cj
  7932 000034FA C3                      		retn
  7933                                  ; ---------------------------------------------------------------------------
  7934                                  
  7935                                  _$STD_CON_OUTPUT:			; DATA XREF: seg000:0742o
  7936 000034FB 88D0                    		mov	al, dl
  7937                                  
  7938                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7939                                  
  7940                                  OUTT:					; CODE XREF: OUTMES+6p	LOAD+DBp ...
  7941                                  
  7942                                  ; FUNCTION CHUNK AT 3567 SIZE 00000008 BYTES
  7943                                  ; FUNCTION CHUNK AT 3571 SIZE 00000007 BYTES
  7944                                  ; FUNCTION CHUNK AT 35BD SIZE 00000007 BYTES
  7945                                  
  7946 000034FD 3C20                    		cmp	al, 20h	; ' '
  7947 000034FF 7243                    		jb	short CTRLOUT
  7948 00003501 3C7F                    		cmp	al, 7Fh	; c_DEL
  7949 00003503 7405                    		jz	short OUTCH
  7950 00003505 36FE06[D800]            		inc	byte [ss:CARPOS]
  7951                                  
  7952                                  OUTCH:				; CODE XREF: OUTT+6j OUTT+51j	...
  7953 0000350A 1E                      		push	ds
  7954 0000350B 56                      		push	si
  7955 0000350C 36FE06[DE00]            		inc	byte [ss:CHARCO]
  7956 00003511 368026[DE00]03          		and	byte [ss:CHARCO], 3
  7957 00003517 7505                    		jnz	short loc_351D
  7958 00003519 50                      		push	ax
  7959 0000351A E8ABF6                  		call	STATCHK
  7960 0000351D 58                      		pop	ax
  7961                                  
  7962                                  loc_351D:				; CODE XREF: OUTT+1Aj
  7963 0000351E E8C4D5                  		call	RAWOUT
  7964 00003521 5E                      		pop	si
  7965 00003522 1F                      		pop	ds
  7966 00003523 36F606[DA00]FF          		test	byte [ss:PFLAG], 0FFh
  7967 00003529 74CF                    		jz	short locret_34F9
  7968 0000352B 53                      		push	bx
  7969 0000352C 1E                      		push	ds
  7970 0000352D 56                      		push	si
  7971 0000352E BB0100                  		mov	bx, 1
  7972 00003531 E899E6                  		call	GET_IO_FCB
  7973 00003534 720C                    		jb	short loc_3541
  7974 00003536 F6441880                		test	byte [si+18h], 80h
  7975 0000353A 7406                    		jz	short loc_3541
  7976 0000353C BB0400                  		mov	bx, 4
  7977 0000353F EB7D                    		jmp	short loc_35BD
  7978                                  ; ---------------------------------------------------------------------------
  7979 00003541 C3                      		db 0C3h
  7980                                  ; ---------------------------------------------------------------------------
  7981                                  
  7982                                  loc_3541:				; CODE XREF: OUTT+37j OUTT+3Dj
  7983 00003542 EB7D                    		jmp	short loc_35C0
  7984                                  ; ---------------------------------------------------------------------------
  7985                                  
  7986                                  CTRLOUT:				; CODE XREF: OUTT+2j
  7987 00003544 3C0D                    		cmp	al, 0Dh
  7988 00003546 7420                    		jz	short ZERPOS
  7989 00003548 3C08                    		cmp	al, 8
  7990 0000354A 7426                    		jz	short BACKPOS
  7991 0000354C 3C09                    		cmp	al, 9
  7992 0000354E 75BA                    		jnz	short OUTCH
  7993 00003550 36A0[D800]              		mov	al, [ss:CARPOS]
  7994 00003554 0CF8                    		or	al, 0F8h
  7995 00003556 F6D8                    		neg	al
  7996                                  
  7997                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  7998                                  
  7999                                  TAB:					; CODE XREF: _$STD_CON_STRING_INPUT+BAp
  8000 00003558 51                      		push	cx
  8001 00003559 88C1                    		mov	cl, al
  8002 0000355B B500                    		mov	ch, 0
  8003 0000355D E307                    		jcxz	loc_3565
  8004                                  
  8005                                  loc_355E:				; CODE XREF: TAB+Cj
  8006 0000355F B020                    		mov	al, 20h	; ' '
  8007 00003561 E899FF                  		call	OUTT
  8008 00003564 E2F9                    		loop	loc_355E
  8009                                  
  8010                                  loc_3565:				; CODE XREF: TAB+5j
  8011 00003566 59                      		pop	cx
  8012 00003567 C3                      		retn
  8013                                  
  8014                                  ; ---------------------------------------------------------------------------
  8015                                  ; START	OF FUNCTION CHUNK FOR OUTT
  8016                                  
  8017                                  ZERPOS:				; CODE XREF: OUTT+49j
  8018 00003568 36C606[D800]00          		mov	byte [ss:CARPOS], 0
  8019 0000356E EB9A                    		jmp	short OUTCH
  8020                                  ; END OF FUNCTION CHUNK	FOR OUTT
  8021                                  ; ---------------------------------------------------------------------------
  8022                                  ; START	OF FUNCTION CHUNK FOR BUFOUT
  8023                                  
  8024                                  OUTJ:				; CODE XREF: BUFOUT+2j BUFOUT+6j
  8025 00003570 EB8B                    		jmp	short OUTT
  8026                                  ; END OF FUNCTION CHUNK	FOR BUFOUT
  8027                                  ; ---------------------------------------------------------------------------
  8028                                  ; START	OF FUNCTION CHUNK FOR OUTT
  8029                                  
  8030                                  BACKPOS:				; CODE XREF: OUTT+4Dj
  8031 00003572 36FE0E[D800]            		dec	byte [ss:CARPOS]
  8032 00003577 EB91                    		jmp	short OUTCH
  8033                                  ; END OF FUNCTION CHUNK	FOR OUTT
  8034                                  
  8035                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8036                                  
  8037                                  BUFOUT:					; CODE XREF: STATCHK+4Ap
  8038                                  					; _$STD_CON_STRING_INPUT+64p ...
  8039                                  
  8040                                  ; FUNCTION CHUNK AT 356F SIZE 00000002 BYTES
  8041                                  
  8042 00003579 3C20                    		cmp	al, 20h	; ' '
  8043 0000357B 73F3                    		jnb	short OUTJ
  8044 0000357D 3C09                    		cmp	al, 9
  8045 0000357F 74EF                    		jz	short OUTJ
  8046 00003581 50                      		push	ax
  8047 00003582 B05E                    		mov	al, 5Eh	; '^'
  8048 00003584 E876FF                  		call	OUTT
  8049 00003587 58                      		pop	ax
  8050 00003588 0C40                    		or	al, 40h
  8051 0000358A E870FF                  		call	OUTT
  8052                                  
  8053                                  locret_358C:				; CODE XREF: seg000:3596j
  8054 0000358D C3                      		retn
  8055                                  
  8056                                  ; ---------------------------------------------------------------------------
  8057                                  
  8058                                  _$STD_AUX_INPUT:				; DATA XREF: seg000:0744o
  8059 0000358E E837F6                  		call	STATCHK
  8060 00003591 BB0300                  		mov	bx, 3
  8061 00003594 E836E6                  		call	GET_IO_FCB
  8062 00003597 72F4                    		jb	short locret_358C
  8063 00003599 EB03                    		jmp	short loc_359D
  8064                                  ; ---------------------------------------------------------------------------
  8065                                  
  8066                                  loc_359A:				; CODE XREF: seg000:35A2j
  8067 0000359B E815F6                  		call	SPOOLINT
  8068                                  
  8069                                  loc_359D:				; CODE XREF: seg000:3598j
  8070 0000359E B401                    		mov	ah, 1
  8071 000035A0 E873DC                  		call	IOFUNC
  8072 000035A3 74F6                    		jz	short loc_359A
  8073 000035A5 30E4                    		xor	ah, ah
  8074 000035A7 E86CDC                  		call	IOFUNC
  8075 000035AA C3                      		retn
  8076                                  ; ---------------------------------------------------------------------------
  8077                                  
  8078                                  _$STD_AUX_OUTPUT:			; DATA XREF: seg000:0746o
  8079 000035AB 53                      		push	bx
  8080 000035AC BB0300                  		mov	bx, 3
  8081 000035AF EB04                    		jmp	short loc_35B4
  8082                                  ; ---------------------------------------------------------------------------
  8083                                  
  8084                                  _$STD_PRINTER_OUTPUT:			; DATA XREF: seg000:0748o
  8085 000035B1 53                      		push	bx
  8086 000035B2 BB0400                  		mov	bx, 4
  8087                                  
  8088                                  loc_35B4:				; CODE XREF: seg000:35AEj
  8089 000035B5 88D0                    		mov	al, dl
  8090 000035B7 50                      		push	ax
  8091 000035B8 E80DF6                  		call	STATCHK
  8092 000035BB 58                      		pop	ax
  8093 000035BC 1E                      		push	ds
  8094 000035BD 56                      		push	si
  8095                                  ; START	OF FUNCTION CHUNK FOR OUTT
  8096                                  
  8097                                  loc_35BD:				; CODE XREF: OUTT+42j
  8098 000035BE E84AD5                  		call	RAWOUT2
  8099                                  
  8100                                  loc_35C0:				; CODE XREF: OUTT:loc_3541j
  8101 000035C1 5E                      		pop	si
  8102 000035C2 1F                      		pop	ds
  8103 000035C3 5B                      		pop	bx
  8104 000035C4 C3                      		retn
  8105                                  ; END OF FUNCTION CHUNK	FOR OUTT
  8106                                  ; ---------------------------------------------------------------------------
  8107                                  
  8108                                  _$STD_CON_INPUT_NO_ECHO:		; CODE XREF: _$STD_CON_STRING_INPUT:OEMFunctionKeyp
  8109                                  					; seg000:_$STD_CON_INPUTp ...
  8110 000035C5 1E                      		push	ds
  8111 000035C6 56                      		push	si
  8112                                  
  8113                                  loc_35C6:				; CODE XREF: seg000:35C9j
  8114 000035C7 E8FEF5                  		call	STATCHK
  8115 000035CA 74FB                    		jz	short loc_35C6
  8116 000035CC 30E4                    		xor	ah, ah
  8117 000035CE E845DC                  		call	IOFUNC
  8118 000035D1 5E                      		pop	si
  8119 000035D2 1F                      		pop	ds
  8120                                  
  8121                                  locret_35D2:				; CODE XREF: seg000:35D8j
  8122                                  					; _$STD_CON_STRING_INPUT+Bj
  8123 000035D3 C3                      		retn
  8124                                  ; ---------------------------------------------------------------------------
  8125                                  
  8126                                  _$STD_CON_STRING_OUTPUT:		; DATA XREF: seg000:0750o
  8127 000035D4 89D6                    		mov	si, dx
  8128                                  
  8129                                  loc_35D5:				; CODE XREF: seg000:35DDj
  8130 000035D6 AC                      		lodsb
  8131 000035D7 3C24                    		cmp	al, 24h	; '$'
  8132 000035D9 74F8                    		jz	short locret_35D2
  8133 000035DB E81FFF                  		call	OUTT
  8134 000035DE EBF6                    		jmp	short loc_35D5
  8135                                  
  8136                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8137                                  
  8138                                  _$STD_CON_STRING_INPUT:			; CODE XREF: LOAD+11Cp
  8139                                  					; DATA XREF: seg000:0752o
  8140                                  
  8141                                  ; FUNCTION CHUNK AT 091D SIZE 00000014 BYTES
  8142                                  ; FUNCTION CHUNK AT 3687 SIZE 00000071 BYTES
  8143                                  ; FUNCTION CHUNK AT 370A SIZE 00000044 BYTES
  8144                                  ; FUNCTION CHUNK AT 377F SIZE 00000021 BYTES
  8145                                  
  8146 000035E0 8CD0                    		mov	ax, ss
  8147 000035E2 8EC0                    		mov	es, ax
  8148 000035E4 89D6                    		mov	si, dx
  8149 000035E6 30ED                    		xor	ch, ch
  8150 000035E8 AD                      		lodsw
  8151 000035E9 08C0                    		or	al, al
  8152 000035EB 74E6                    		jz	short locret_35D2
  8153 000035ED 88E3                    		mov	bl, ah
  8154 000035EF 88EF                    		mov	bh, ch
  8155 000035F1 38D8                    		cmp	al, bl
  8156 000035F3 7605                    		jbe	short loc_35F9
  8157 000035F5 80380D                  		cmp	byte [bx+si], 0Dh
  8158 000035F8 7402                    		jz	short loc_35FB
  8159                                  
  8160                                  loc_35F9:				; CODE XREF: _$STD_CON_STRING_INPUT+13j
  8161 000035FA 88EB                    		mov	bl, ch
  8162                                  
  8163                                  loc_35FB:				; CODE XREF: _$STD_CON_STRING_INPUT+18j
  8164 000035FC 88C2                    		mov	dl, al
  8165 000035FE 4A                      		dec	dx
  8166                                  
  8167                                  loc_35FE:				; CODE XREF: _$STD_CON_STRING_INPUT+BDj
  8168 000035FF 36A0[D800]              		mov	al, [ss:CARPOS]
  8169 00003603 36A2[D900]              		mov	[ss:STARTPOS], al
  8170 00003607 56                      		push	si
  8171 00003608 BF2A02                  		mov	di, 22Ah
  8172 0000360B 36882E[7803]            		mov	byte [ss:INSMODE], ch
  8173 00003610 88EF                    		mov	bh, ch
  8174 00003612 88EE                    		mov	dh, ch
  8175 00003614 E8AEFF                  		call	_$STD_CON_INPUT_NO_ECHO
  8176 00003617 3C0A                    		cmp	al, 0Ah
  8177 00003619 7503                    		jnz	short loc_361D
  8178                                  
  8179                                  GETCH:					; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8180                                  					; _$STD_CON_STRING_INPUT+40j ...
  8181 0000361B E8A7FF                  		call	_$STD_CON_INPUT_NO_ECHO
  8182                                  
  8183                                  loc_361D:				; CODE XREF: _$STD_CON_STRING_INPUT+39j
  8184 0000361E 3C06                    		cmp	al, 6
  8185 00003620 74F9                    		jz	short GETCH
  8186 00003622 363A06[F608]            		cmp	al, [ss:ESCCHAR]
  8187 00003627 7438                    		jz	short loc_3660
  8188 00003629 3C7F                    		cmp	al, 7Fh		; c_DEL
  8189 0000362B 742B                    		jz	short loc_3657
  8190 0000362D 3C08                    		cmp	al, 8		; c_BS
  8191 0000362F 7427                    		jz	short loc_3657
  8192 00003631 3C0D                    		cmp	al, 0Dh		; c_CR
  8193 00003633 742F                    		jz	short loc_3663
  8194 00003635 3C0A                    		cmp	al, 0Ah		; c_LF
  8195 00003637 744F                    		jz	short PHYCRLF
  8196 00003639 3C1B                    		cmp	al, 1Bh		; CANCEL
  8197 0000363B 7450                    		jz	short KILNEW
  8198                                  
  8199                                  loc_363C:				; CODE XREF: _$STD_CON_STRING_INPUT+12Fj
  8200                                  					; _$STD_CON_STRING_INPUT+1BEj
  8201 0000363D 38D6                    		cmp	dh, dl
  8202 0000363F 7319                    		jnb	short loc_3659
  8203 00003641 AA                      		stosb
  8204 00003642 FEC6                    		inc	dh
  8205 00003644 E832FF                  		call	BUFOUT
  8206 00003647 36803E[7803]00          		cmp	byte [ss:INSMODE], 0
  8207 0000364D 75CC                    		jnz	short GETCH
  8208 0000364F 38DF                    		cmp	bh, bl
  8209 00003651 73C8                    		jnb	short GETCH
  8210 00003653 46                      		inc	si
  8211 00003654 FEC7                    		inc	bh
  8212 00003656 EBC3                    		jmp	short GETCH
  8213                                  ; ---------------------------------------------------------------------------
  8214                                  
  8215                                  loc_3657:				; CODE XREF: _$STD_CON_STRING_INPUT+4Bj
  8216                                  					; _$STD_CON_STRING_INPUT+4Fj
  8217 00003658 EB46                    		jmp	short BACKSP
  8218                                  ; ---------------------------------------------------------------------------
  8219                                  
  8220                                  loc_3659:				; CODE XREF: _$STD_CON_STRING_INPUT+5Fj
  8221 0000365A B007                    		mov	al, 7
  8222 0000365C E89EFE                  		call	OUTT
  8223 0000365F EBBA                    		jmp	short GETCH
  8224                                  ; ---------------------------------------------------------------------------
  8225                                  
  8226                                  loc_3660:				; CODE XREF: _$STD_CON_STRING_INPUT+47j
  8227 00003661 E9BAD2                  		jmp	OEMFunctionKey
  8228                                  ; ---------------------------------------------------------------------------
  8229                                  
  8230                                  loc_3663:				; CODE XREF: _$STD_CON_STRING_INPUT+53j
  8231 00003664 AA                      		stosb
  8232 00003665 E895FE                  		call	OUTT
  8233 00003668 5F                      		pop	di
  8234 00003669 8875FF                  		mov	[di-1],	dh
  8235 0000366C FEC6                    		inc	dh
  8236                                  
  8237                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8238                                  
  8239                                  COPYNEW:				; CODE XREF: _$STD_CON_STRING_INPUT+1A9p
  8240 0000366E 8CC5                    		mov	bp, es
  8241 00003670 8CDB                    		mov	bx, ds
  8242 00003672 8EC3                    		mov	es, bx
  8243 00003674 8EDD                    		mov	ds, bp
  8244 00003676 BE[2A02]                		mov	si, INBUF ; 22Ah
  8245 00003679 88F1                    		mov	cl, dh
  8246 0000367B F3A4                    		rep movsb
  8247 0000367D C3                      		retn
  8248                                  
  8249                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8250                                  
  8251                                  CRLF:					; CODE XREF: STATCHK+4Dp
  8252                                  					; _$STD_CON_STRING_INPUT:PHYCRLFp ...
  8253 0000367E B00D                    		mov	al, 0Dh
  8254 00003680 E87AFE                  		call	OUTT
  8255 00003683 B00A                    		mov	al, 0Ah
  8256 00003685 E975FE                  		jmp	OUTT
  8257                                  
  8258                                  ; ---------------------------------------------------------------------------
  8259                                  ; START	OF FUNCTION CHUNK FOR _$STD_CON_STRING_INPUT
  8260                                  
  8261                                  PHYCRLF:				; CODE XREF: _$STD_CON_STRING_INPUT+57j
  8262 00003688 E8F3FF                  		call	CRLF
  8263 0000368B EB8E                    		jmp	short GETCH
  8264                                  ; ---------------------------------------------------------------------------
  8265                                  
  8266                                  KILNEW:					; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8267                                  					; _$STD_CON_STRING_INPUT+5Bj
  8268                                  					; DATA XREF: ...
  8269 0000368D B05C                    		mov	al, 5Ch	; '\'
  8270 0000368F E86BFE                  		call	OUTT
  8271 00003692 5E                      		pop	si
  8272                                  
  8273                                  PUTNEW:				; CODE XREF: _$STD_CON_STRING_INPUT+1B1j
  8274 00003693 E8E8FF                  		call	CRLF
  8275 00003696 36A0[D900]              		mov	al, [ss:STARTPOS]
  8276 0000369A E8BBFE                  		call	TAB
  8277 0000369D E95FFF                  		jmp	loc_35FE
  8278                                  ; ---------------------------------------------------------------------------
  8279                                  
  8280                                  BACKSP:					; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8281                                  					; _$STD_CON_STRING_INPUT:loc_3657j
  8282                                  					; DATA XREF: ...
  8283 000036A0 08F6                    		or	dh, dh
  8284 000036A2 7411                    		jz	short loc_36B4
  8285 000036A4 E85200                  		call	BACKUP
  8286 000036A7 268A05                  		mov	al, [es:di]
  8287 000036AA 3C20                    		cmp	al, 20h	; ' '
  8288 000036AC 7307                    		jnb	short loc_36B4
  8289 000036AE 3C09                    		cmp	al, 9
  8290 000036B0 7415                    		jz	short loc_36C6
  8291 000036B2 E84700                  		call	BACKMES
  8292                                  
  8293                                  loc_36B4:				; CODE XREF: _$STD_CON_STRING_INPUT+C2j
  8294                                  					; _$STD_CON_STRING_INPUT+CCj ...
  8295 000036B5 36803E[7803]00          		cmp	byte [ss:INSMODE], 0
  8296 000036BB 7507                    		jnz	short loc_36C3
  8297 000036BD 08FF                    		or	bh, bh
  8298 000036BF 7403                    		jz	short loc_36C3
  8299 000036C1 FECF                    		dec	bh
  8300 000036C3 4E                      		dec	si
  8301                                  
  8302                                  loc_36C3:				; CODE XREF: _$STD_CON_STRING_INPUT+DBj
  8303                                  					; _$STD_CON_STRING_INPUT+DFj
  8304 000036C4 E954FF                  		jmp	GETCH
  8305                                  ; ---------------------------------------------------------------------------
  8306                                  
  8307                                  loc_36C6:				; CODE XREF: _$STD_CON_STRING_INPUT+D0j
  8308 000036C7 57                      		push	di
  8309 000036C8 4F                      		dec	di
  8310 000036C9 FD                      		std
  8311 000036CA 88F1                    		mov	cl, dh
  8312 000036CC B020                    		mov	al, 20h	; ' '
  8313 000036CE 53                      		push	bx
  8314 000036CF B307                    		mov	bl, 7
  8315 000036D1 E30E                    		jcxz	loc_36E0
  8316                                  
  8317                                  loc_36D2:				; CODE XREF: _$STD_CON_STRING_INPUT:loc_36DEj
  8318 000036D3 AE                      		scasb
  8319 000036D4 7609                    		jbe	short loc_36DE
  8320 000036D6 26807D0109              		cmp	byte [es:di+1], 9
  8321 000036DB 7409                    		jz	short loc_36E5
  8322 000036DD FECB                    		dec	bl
  8323                                  
  8324                                  loc_36DE:				; CODE XREF: _$STD_CON_STRING_INPUT+F4j
  8325 000036DF E2F2                    		loop	loc_36D2
  8326                                  
  8327                                  loc_36E0:				; CODE XREF: _$STD_CON_STRING_INPUT+F1j
  8328 000036E1 362A1E[D900]            		sub	bl, [ss:STARTPOS]
  8329                                  
  8330                                  loc_36E5:				; CODE XREF: _$STD_CON_STRING_INPUT+FBj
  8331 000036E6 28F3                    		sub	bl, dh
  8332 000036E8 00D9                    		add	cl, bl
  8333 000036EA 80E107                  		and	cl, 7
  8334 000036ED FC                      		cld
  8335 000036EE 5B                      		pop	bx
  8336 000036EF 5F                      		pop	di
  8337 000036F0 74C3                    		jz	short loc_36B4
  8338                                  
  8339                                  loc_36F1:				; CODE XREF: _$STD_CON_STRING_INPUT+115j
  8340 000036F2 E80700                  		call	BACKMES
  8341 000036F5 E2FB                    		loop	loc_36F1
  8342 000036F7 EBBC                    		jmp	short loc_36B4
  8343                                  ; END OF FUNCTION CHUNK	FOR _$STD_CON_STRING_INPUT
  8344                                  
  8345                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8346                                  
  8347                                  BACKUP:					; CODE XREF: _$STD_CON_STRING_INPUT+C4p
  8348 000036F9 FECE                    		dec	dh
  8349 000036FB 4F                      		dec	di
  8350                                  
  8351                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8352                                  
  8353                                  BACKMES:				; CODE XREF: _$STD_CON_STRING_INPUT+D2p
  8354                                  					; _$STD_CON_STRING_INPUT:loc_36F1p
  8355 000036FC B008                    		mov	al, 8  ; c_BS
  8356 000036FE E8FCFD                  		call	OUTT
  8357 00003701 B020                    		mov	al, 20h	; ' '
  8358 00003703 E8F7FD                  		call	OUTT
  8359 00003706 B008                    		mov	al, 8  ; c_BS
  8360 00003708 E9F2FD                  		jmp	OUTT
  8361                                  
  8362                                  ; ---------------------------------------------------------------------------
  8363                                  ; START	OF FUNCTION CHUNK FOR _$STD_CON_STRING_INPUT
  8364                                  
  8365                                  TWOESC:					; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8366                                  					; DATA XREF: seg000:0905o
  8367 0000370B 36A0[F608]              		mov	al, [ss:ESCCHAR]
  8368 0000370F E92BFF                  		jmp	loc_363C
  8369                                  ; ---------------------------------------------------------------------------
  8370                                  
  8371                                  COPYLIN:				; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8372                                  					; DATA XREF: seg000:090Fo
  8373 00003712 88D9                    		mov	cl, bl
  8374 00003714 28F9                    		sub	cl, bh
  8375 00003716 EB07                    		jmp	short loc_371E
  8376                                  ; ---------------------------------------------------------------------------
  8377                                  
  8378                                  COPYSTR:				; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8379                                  					; DATA XREF: seg000:0913o
  8380 00003718 E83400                  		call	FINDOLD 
  8381 0000371B EB02                    		jmp	short loc_371E
  8382                                  ; ---------------------------------------------------------------------------
  8383                                  
  8384                                  COPYONE:				; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8385                                  					; DATA XREF: seg000:0917o ...
  8386 0000371D B101                    		mov	cl, 1
  8387                                  
  8388                                  loc_371E:				; CODE XREF: _$STD_CON_STRING_INPUT+136j
  8389                                  					; _$STD_CON_STRING_INPUT+13Bj ...
  8390 0000371F 36C606[7803]00          		mov	byte [ss:INSMODE], 0
  8391 00003725 38D6                    		cmp	dh, dl
  8392 00003727 740F                    		jz	short loc_3737
  8393 00003729 38DF                    		cmp	bh, bl
  8394 0000372B 740B                    		jz	short loc_3737
  8395 0000372D AC                      		lodsb
  8396 0000372E AA                      		stosb
  8397 0000372F E847FE                  		call	BUFOUT
  8398 00003732 FEC7                    		inc	bh
  8399 00003734 FEC6                    		inc	dh
  8400 00003736 E2E7                    		loop	loc_371E
  8401                                  
  8402                                  loc_3737:				; CODE XREF: _$STD_CON_STRING_INPUT+147j
  8403                                  					; _$STD_CON_STRING_INPUT+14Bj ...
  8404 00003738 E9E0FE                  		jmp	GETCH
  8405                                  ; ---------------------------------------------------------------------------
  8406                                  
  8407                                  SKIPONE:				; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8408                                  					; DATA XREF: seg000:0915o
  8409 0000373B 38DF                    		cmp	bh, bl
  8410 0000373D 74F9                    		jz	short loc_3737
  8411 0000373F FEC7                    		inc	bh
  8412 00003741 46                      		inc	si
  8413 00003742 E9D6FE                  		jmp	GETCH
  8414                                  ; ---------------------------------------------------------------------------
  8415                                  
  8416                                  SKIPSTR:				; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8417                                  					; DATA XREF: seg000:0911o
  8418 00003745 E80700                  		call	FINDOLD 
  8419 00003748 01CE                    		add	si, cx
  8420 0000374A 00CF                    		add	bh, cl
  8421 0000374C E9CCFE                  		jmp	GETCH
  8422                                  ; END OF FUNCTION CHUNK	FOR _$STD_CON_STRING_INPUT
  8423                                  
  8424                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8425                                  
  8426                                  FINDOLD:				; CODE XREF: _$STD_CON_STRING_INPUT:COPYSTRp
  8427                                  					; _$STD_CON_STRING_INPUT:SKIPSTRp
  8428 0000374F E873FE                  		call	_$STD_CON_INPUT_NO_ECHO
  8429 00003752 363A06[F608]            		cmp	al, [ss:ESCCHAR]
  8430 00003757 7506                    		jnz	short FINDSETUP
  8431 00003759 E869FE                  		call	_$STD_CON_INPUT_NO_ECHO
  8432 0000375C EB1E                    		jmp	short NOTFND
  8433                                  ; ---------------------------------------------------------------------------
  8434 0000375E 90                      		db  90h	
  8435                                  ; ---------------------------------------------------------------------------
  8436                                  
  8437                                  FINDSETUP:				; CODE XREF: FINDOLD +8j
  8438 0000375F 88D9                    		mov	cl, bl
  8439 00003761 28F9                    		sub	cl, bh
  8440 00003763 7417                    		jz	short NOTFND
  8441 00003765 49                      		dec	cx
  8442 00003766 7414                    		jz	short NOTFND
  8443 00003768 06                      		push	es
  8444 00003769 1E                      		push	ds
  8445 0000376A 07                      		pop	es
  8446 0000376B 57                      		push	di
  8447 0000376C 89F7                    		mov	di, si
  8448 0000376E 47                      		inc	di
  8449 0000376F F2AE                    		repne scasb
  8450 00003771 5F                      		pop	di
  8451 00003772 07                      		pop	es
  8452 00003773 7507                    		jnz	short NOTFND
  8453 00003775 F6D1                    		not	cl
  8454 00003777 00D9                    		add	cl, bl
  8455 00003779 28F9                    		sub	cl, bh
  8456                                  
  8457                                  locret_377A:				; CODE XREF: seg000:37A5j
  8458 0000377B C3                      		retn
  8459                                  ; ---------------------------------------------------------------------------
  8460                                  
  8461                                  NOTFND:					; CODE XREF: FINDOLD +Dj FINDOLD +14j	...
  8462 0000377C 5D                      		pop	bp
  8463 0000377D E99BFE                  		jmp	GETCH
  8464                                  
  8465                                  ; ---------------------------------------------------------------------------
  8466                                  ; START	OF FUNCTION CHUNK FOR _$STD_CON_STRING_INPUT
  8467                                  
  8468                                  REEDIT:					; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8469                                  					; DATA XREF: seg000:090Bo
  8470 00003780 B040                    		mov	al, 40h	; '@'
  8471 00003782 E878FD                  		call	OUTT
  8472 00003785 5F                      		pop	di
  8473 00003786 57                      		push	di
  8474 00003787 06                      		push	es
  8475 00003788 1E                      		push	ds
  8476 00003789 E8E2FE                  		call	COPYNEW
  8477 0000378C 1F                      		pop	ds
  8478 0000378D 07                      		pop	es
  8479 0000378E 5E                      		pop	si
  8480 0000378F 88F3                    		mov	bl, dh
  8481 00003791 E9FFFE                  		jmp	PUTNEW
  8482                                  ; ---------------------------------------------------------------------------
  8483                                  
  8484                                  ENTERINS:				; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8485                                  					; DATA XREF: seg000:0907o
  8486 00003794 36F616[7803]            		not	byte [ss:INSMODE]
  8487 00003799 E97FFE                  		jmp	GETCH
  8488                                  ; ---------------------------------------------------------------------------
  8489                                  
  8490                                  CTRLZ:					; CODE XREF: _$STD_CON_STRING_INPUT-2CB2j
  8491                                  					; DATA XREF: seg000:091Bo
  8492 0000379C B01A                    		mov	al, 1Ah
  8493 0000379E E99CFE                  		jmp	loc_363C
  8494                                  ; END OF FUNCTION CHUNK	FOR _$STD_CON_STRING_INPUT
  8495                                  ; ---------------------------------------------------------------------------
  8496                                  
  8497                                  _$STD_CON_INPUT_STATUS:			; DATA XREF: seg000:0754o
  8498 000037A1 E824F4                  		call	STATCHK
  8499 000037A4 B000                    		mov	al, 0
  8500 000037A6 74D3                    		jz	short locret_377A
  8501 000037A8 0CFF                    		or	al, 0FFh
  8502 000037AA C3                      		retn
  8503                                  ; ---------------------------------------------------------------------------
  8504                                  
  8505                                  _$STD_CON_INPUT_FLUSH:			; DATA XREF: seg000:0756o
  8506 000037AB 50                      		push	ax
  8507 000037AC 52                      		push	dx
  8508 000037AD 31DB                    		xor	bx, bx
  8509 000037AF E81BE4                  		call	GET_IO_FCB
  8510 000037B2 7205                    		jb	short BADJFNCON
  8511 000037B4 B404                    		mov	ah, 4
  8512 000037B6 E85DDA                  		call	IOFUNC
  8513                                  
  8514                                  BADJFNCON:				; CODE XREF: seg000:37B1j
  8515 000037B9 5A                      		pop	dx
  8516 000037BA 58                      		pop	ax
  8517 000037BB 88C4                    		mov	ah, al
  8518 000037BD 3C01                    		cmp	al, 1
  8519 000037BF 7413                    		jz	short REDISPJ
  8520 000037C1 3C06                    		cmp	al, 6
  8521 000037C3 740F                    		jz	short REDISPJ
  8522 000037C5 3C07                    		cmp	al, 7
  8523 000037C7 740B                    		jz	short REDISPJ
  8524 000037C9 3C08                    		cmp	al, 8
  8525 000037CB 7407                    		jz	short REDISPJ
  8526 000037CD 3C0A                    		cmp	al, 0Ah
  8527 000037CF 7403                    		jz	short REDISPJ
  8528 000037D1 B000                    		mov	al, 0
  8529 000037D3 C3                      		retn
  8530                                  ; ---------------------------------------------------------------------------
  8531                                  
  8532                                  REDISPJ:				; CODE XREF: seg000:37BEj seg000:37C2j ...
  8533 000037D4 FA                      		cli
  8534 000037D5 E9ADCE                  		jmp	REDISP
  8535                                  
  8536                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8537                                  
  8538                                  DATE16:					; CODE XREF: STORE+7p NEWENTRY+5Cp ...
  8539 000037D8 51                      		push	cx
  8540 000037D9 06                      		push	es
  8541 000037DA E82000                  		call	READTIME
  8542 000037DD 07                      		pop	es
  8543 000037DE D0E1                    		shl	cl, 1
  8544 000037E0 D0E1                    		shl	cl, 1
  8545 000037E2 D1E1                    		shl	cx, 1
  8546 000037E4 D1E1                    		shl	cx, 1
  8547 000037E6 D1E1                    		shl	cx, 1
  8548 000037E8 D0EE                    		shr	dh, 1
  8549 000037EA 08F1                    		or	cl, dh
  8550 000037EC 89CA                    		mov	dx, cx
  8551 000037EE A1[1A01]                		mov	ax, [MONTH]
  8552 000037F1 B104                    		mov	cl, 4
  8553 000037F3 D2E0                    		shl	al, cl
  8554 000037F5 D1E0                    		shl	ax, 1
  8555 000037F7 59                      		pop	cx
  8556 000037F8 0A06[1901]              		or	al, [DAY]
  8557 000037FC C3                      		retn
  8558                                  
  8559                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8560                                  
  8561                                  READTIME:				; CODE XREF: seg000:279Bp seg000:27D8p ...
  8562 000037FD 56                      		push	si
  8563 000037FE 53                      		push	bx
  8564 000037FF BB[2D03]                		mov	bx, TIMEBUF
  8565 00003802 B90600                  		mov	cx, 6
  8566 00003805 31D2                    		xor	dx, dx
  8567 00003807 89D0                    		mov	ax, dx
  8568 00003809 E8C3DB                  		call	SETREAD
  8569 0000380C 1E                      		push	ds
  8570 0000380D C536[F800]              		lds	si, [BCLOCK]
  8571 00003811 E835DB                  		call	DEVIOCALL2
  8572 00003814 1F                      		pop	ds
  8573 00003815 5B                      		pop	bx
  8574 00003816 5E                      		pop	si
  8575 00003817 A1[2D03]                		mov	ax, [TIMEBUF]
  8576 0000381A 8B0E[2F03]              		mov	cx, [TIMEBUF+2]
  8577 0000381E 8B16[3103]              		mov	dx, [TIMEBUF+4]
  8578 00003822 3B06[1D01]              		cmp	ax, [DAYCNT]
  8579 00003826 7442                    		jz	short locret_3869
  8580 00003828 3D36AB                  		cmp	ax, 0AB36h ; FOURYEARS*30 = 43830
  8581 0000382B 733D                    		jnb	short locret_3869
  8582 0000382D A3[1D01]                		mov	[DAYCNT], ax
  8583 00003830 56                      		push	si
  8584 00003831 51                      		push	cx
  8585 00003832 52                      		push	dx
  8586 00003833 31D2                    		xor	dx, dx
  8587 00003835 B9B505                  		mov	cx, 5B5h ; FOURYEARS = 1461 days
  8588 00003838 F7F1                    		div	cx
  8589 0000383A D1E0                    		shl	ax, 1
  8590 0000383C D1E0                    		shl	ax, 1
  8591 0000383E D1E0                    		shl	ax, 1
  8592 00003840 89C1                    		mov	cx, ax
  8593 00003842 BE[7301]                		mov	si, YRTAB ; 173h
  8594 00003845 E82300                  		call	DSLIDE
  8595 00003848 D1E9                    		shr	cx, 1
  8596 0000384A 7304                    		jnb	short loc_384F
  8597 0000384C 81C2C800                		add	dx, 0C8h ; 200
  8598                                  
  8599                                  loc_384F:				; CODE XREF: READTIME+4Dj
  8600 00003850 E82400                  		call	SETYEAR
  8601 00003853 B101                    		mov	cl, 1
  8602 00003855 BE[7B01]                		mov	si, MONTAB ; 17Bh
  8603 00003858 E81000                  		call	DSLIDE
  8604 0000385B 880E[1A01]              		mov	[MONTH], cl
  8605 0000385F 42                      		inc	dx
  8606 00003860 8816[1901]              		mov	[DAY],	dl
  8607 00003864 E89000                  		call	WKDAY
  8608 00003867 5A                      		pop	dx
  8609 00003868 59                      		pop	cx
  8610 00003869 5E                      		pop	si
  8611                                  
  8612                                  locret_3869:				; CODE XREF: READTIME+29j READTIME+2Ej
  8613 0000386A C3                      		retn
  8614                                  
  8615                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8616                                  
  8617                                  DSLIDE:					; CODE XREF: READTIME+48p READTIME+5Bp
  8618 0000386B B400                    		mov	ah, 0
  8619                                  
  8620                                  loc_386C:				; CODE XREF: DSLIDE+Aj
  8621 0000386D AC                      		lodsb
  8622 0000386E 39C2                    		cmp	dx, ax
  8623 00003870 7215                    		jb	short locret_3886
  8624 00003872 29C2                    		sub	dx, ax
  8625 00003874 41                      		inc	cx
  8626 00003875 EBF6                    		jmp	short loc_386C
  8627                                  
  8628                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8629                                  
  8630                                  SETYEAR:				; CODE XREF: READTIME:loc_384Fp
  8631                                  					; DODATE+Fp
  8632 00003877 880E[1B01]              		mov	byte [YEAR], cl
  8633                                  
  8634                                  CHKYR:				; CODE XREF: DODATEp
  8635 0000387B F6C103                  		test	cl, 3
  8636 0000387E B01C                    		mov	al, 28	; 1Ch
  8637 00003880 7502                    		jnz	short loc_3883
  8638 00003882 FEC0                    		inc	al
  8639                                  
  8640                                  loc_3883:				; CODE XREF: SETYEAR+9j
  8641 00003884 A2[7C01]                		mov	[MONTAB_february], al
  8642                                  
  8643                                  locret_3886:				; CODE XREF: DSLIDE+5j
  8644 00003887 C3                      		retn
  8645                                  
  8646                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8647                                  
  8648                                  DODATE:					; CODE XREF: seg000:27D2p
  8649 00003888 E8F0FF                  		call	CHKYR
  8650 0000388B 88F0                    		mov	al, dh
  8651 0000388D BB[7A01]                		mov	bx, MONTAB-1 ; 17Ah
  8652 00003890 D7                      		xlat
  8653 00003891 38D0                    		cmp	al, dl
  8654 00003893 B0FF                    		mov	al, 0FFh
  8655 00003895 7272                    		jb	short RET25
  8656 00003897 E8DDFF                  		call	SETYEAR
  8657 0000389A 8916[1901]              		mov	[DAY], dx
  8658 0000389E D1E9                    		shr	cx, 1
  8659 000038A0 D1E9                    		shr	cx, 1
  8660 000038A2 B8B505                  		mov	ax, 5B5h ; FOURYEARS, 1461 days
  8661 000038A5 89D3                    		mov	bx, dx
  8662 000038A7 F7E1                    		mul	cx
  8663 000038A9 8A0E[1B01]              		mov	cl, byte [YEAR]
  8664 000038AD 80E103                  		and	cl, 3
  8665 000038B0 BE[7301]                		mov	si, YRTAB ; 173h		mov	dx, ax
  8666 000038B3 D1E1                    		shl	cx, 1
  8667 000038B5 E85200                  		call	DSUM
  8668 000038B8 88F9                    		mov	cl, bh
  8669 000038BA BE[7B01]                		mov	si, MONTAB ; 17Bh
  8670 000038BD 49                      		dec	cx
  8671 000038BE E84900                  		call	DSUM
  8672 000038C1 88D9                    		mov	cl, bl
  8673 000038C3 49                      		dec	cx
  8674 000038C4 01CA                    		add	dx, cx
  8675 000038C6 92                      		xchg	ax, dx
  8676 000038C7 A3[1D01]                		mov	[DAYCNT], ax
  8677 000038CA 56                      		push	si
  8678 000038CB 53                      		push	bx
  8679 000038CC 50                      		push	ax
  8680 000038CD BB[2D03]                		mov	bx, TIMEBUF ; 32Dh
  8681 000038D0 B90600                  		mov	cx, 6
  8682 000038D3 31D2                    		xor	dx, dx
  8683 000038D5 89D0                    		mov	ax, dx
  8684 000038D7 53                      		push	bx
  8685 000038D8 E8F4DA                  		call	SETREAD
  8686 000038DB 1E                      		push	ds
  8687 000038DC C536[F800]              		lds	si, [BCLOCK]
  8688 000038E0 E866DA                  		call	DEVIOCALL2
  8689 000038E3 1F                      		pop	ds
  8690 000038E4 5B                      		pop	bx
  8691 000038E5 E81ADB                  		call	SETWRITE
  8692 000038E8 8F06[2D03]              		pop	word [TIMEBUF]
  8693 000038EC 1E                      		push	ds
  8694 000038ED C536[F800]              		lds	si, [BCLOCK]
  8695 000038F1 E855DA                  		call	DEVIOCALL2
  8696 000038F4 1F                      		pop	ds
  8697 000038F5 5B                      		pop	bx
  8698 000038F6 5E                      		pop	si
  8699                                  
  8700                                  WKDAY:					; CODE XREF: READTIME+67p
  8701 000038F7 A1[1D01]                		mov	ax, [DAYCNT]
  8702 000038FA 31D2                    		xor	dx, dx
  8703 000038FC B90700                  		mov	cx, 7
  8704 000038FF 40                      		inc	ax
  8705 00003900 40                      		inc	ax
  8706 00003901 F7F1                    		div	cx
  8707 00003903 8816[1F01]              		mov	[WEEKDAY], dl
  8708 00003907 30C0                    		xor	al, al
  8709                                  
  8710                                  RET25:					; CODE XREF: DODATE+Dj DSUM+2j
  8711 00003909 C3                      		retn
  8712                                  
  8713                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8714                                  
  8715                                  DSUM:					; CODE XREF: DODATE+2Fp DODATE+38p
  8716 0000390A B400                    		mov	ah, 0
  8717 0000390C E3FB                    		jcxz	RET25
  8718                                  
  8719                                  DSUM1:					; CODE XREF: DSUM+7j
  8720 0000390E AC                      		lodsb
  8721 0000390F 01C2                    		add	dx, ax
  8722 00003911 E2FB                    		loop	DSUM1
  8723 00003913 C3                      		retn
  8724                                  
  8725                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8726                                  
  8727                                  validate_path:				; CODE XREF: seg000:$MKDIRp
  8728                                  					; seg000:$CHDIRp ...
  8729 00003914 50                      		push	ax
  8730 00003915 51                      		push	cx
  8731 00003916 56                      		push	si
  8732 00003917 89D6                    		mov	si, dx
  8733 00003919 B9FF00                  		mov	cx, 0FFh
  8734 0000391C 8B04                    		mov	ax, [si]
  8735 0000391E 08C0                    		or	al, al
  8736 00003920 7429                    		jz	short loc_394C
  8737 00003922 80FC3A                  		cmp	ah, 3Ah	; ':'
  8738 00003925 7506                    		jnz	short loc_392E
  8739 00003927 807C0200                		cmp	byte [si+2], 0
  8740 0000392B 741E                    		jz	short loc_394C
  8741                                  
  8742                                  loc_392E:				; CODE XREF: validate_path+11j
  8743                                  					; validate_path+29j ...
  8744 0000392D AC                      		lodsb
  8745                                  
  8746                                  loc_392F:				; CODE XREF: validate_path+35j
  8747 0000392E 08C0                    		or	al, al
  8748 00003930 7436                    		jz	short loc_3969
  8749 00003932 3C3F                    		cmp	al, 3Fh	; '?'
  8750 00003934 741A                    		jz	short loc_3951
  8751 00003936 3C2A                    		cmp	al, 2Ah	; '*'
  8752 00003938 7416                    		jz	short loc_3951
  8753 0000393A E8B4F6                  		call	PATHCHRCMP
  8754 0000393D 75EE                    		jnz	short loc_392E
  8755 0000393F E30A                    		jcxz	loc_394C
  8756 00003941 AC                      		lodsb
  8757 00003942 08C0                    		or	al, al
  8758 00003944 740E                    		jz	short loc_3955
  8759 00003946 E8A8F6                  		call	PATHCHRCMP
  8760 00003949 75E3                    		jnz	short loc_392F
  8761                                  
  8762                                  loc_394C:				; CODE XREF: validate_path+Cj
  8763                                  					; validate_path+17j ...
  8764 0000394B 41                      		inc	cx
  8765 0000394C 09C9                    		or	cx, cx
  8766 0000394E EB1C                    		jmp	short loc_396D
  8767                                  ; ---------------------------------------------------------------------------
  8768                                  
  8769                                  loc_3951:				; CODE XREF: validate_path+20j
  8770                                  					; validate_path+24j
  8771 00003950 31C9                    		xor	cx, cx
  8772 00003952 EBD9                    		jmp	short loc_392E
  8773                                  ; ---------------------------------------------------------------------------
  8774                                  
  8775                                  loc_3955:				; CODE XREF: validate_path+30j
  8776 00003954 29D6                    		sub	si, dx
  8777 00003956 83FE02                  		cmp	si, 2
  8778 00003959 740D                    		jz	short loc_3969
  8779 0000395B 83FE04                  		cmp	si, 4
  8780 0000395E 75EB                    		jnz	short loc_394C
  8781 00003960 89D6                    		mov	si, dx
  8782 00003962 807C013A                		cmp	byte [si+1], 3Ah ; ':'
  8783 00003966 75E3                    		jnz	short loc_394C
  8784                                  
  8785                                  loc_3969:				; CODE XREF: validate_path+1Cj
  8786                                  					; validate_path+45j
  8787 00003968 09C9                    		or	cx, cx
  8788 0000396A 7501                    		jnz	short loc_396E
  8789                                  
  8790                                  loc_396D:				; CODE XREF: validate_path+3Aj
  8791 0000396C F9                      		stc
  8792                                  
  8793                                  loc_396E:				; CODE XREF: validate_path+56j
  8794 0000396D 5E                      		pop	si
  8795 0000396E 59                      		pop	cx
  8796 0000396F 58                      		pop	ax
  8797                                  
  8798                                  locret_3971:				; CODE XREF: access_path+Aj
  8799 00003970 C3                      		retn
  8800                                  
  8801                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8802                                  
  8803                                  access_path:				; CODE XREF: $OPEN+44p	seg000:$UNLINKp ...
  8804 00003971 E8A0FF                  		call	validate_path
  8805 00003974 720D                    		jb	short loc_3984
  8806 00003976 89D6                    		mov	si, dx
  8807 00003978 E87EDD                  		call	GETPATH
  8808 0000397B 73F3                    		jnb	short locret_3971
  8809 0000397D B002                    		mov	al, 2
  8810 0000397F 08C9                    		or	cl, cl
  8811 00003981 7502                    		jnz	short loc_3986
  8812                                  
  8813                                  loc_3984:				; CODE XREF: access_path+3j
  8814 00003983 B003                    		mov	al, 3
  8815                                  
  8816                                  loc_3986:				; CODE XREF: access_path+10j
  8817 00003985 F9                      		stc
  8818 00003986 C3                      		retn
  8819                                  
  8820                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8821                                  
  8822                                  Find_free_jfn:				; CODE XREF: $OPEN+1Dp	seg000:3B26p
  8823 00003987 50                      		push	ax
  8824 00003988 51                      		push	cx
  8825 00003989 B0FF                    		mov	al, 0FFh
  8826 0000398B 368E06[8B01]            		mov	es, [ss:CurrentPDB]
  8827 00003990 BF1800                  		mov	di, 18h
  8828 00003993 B91400                  		mov	cx, 14h
  8829 00003996 F2AE                    		repne scasb
  8830 00003998 F9                      		stc
  8831 00003999 7502                    		jnz	short loc_399E
  8832 0000399B 4F                      		dec	di
  8833 0000399C F8                      		clc
  8834                                  
  8835                                  loc_399E:				; CODE XREF: Find_free_jfn+12j
  8836 0000399D 59                      		pop	cx
  8837 0000399E 58                      		pop	ax
  8838 0000399F C3                      		retn
  8839                                  
  8840                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8841                                  
  8842                                  Find_free_sfn:				; CODE XREF: $OPEN+2Ep
  8843 000039A0 53                      		push	bx
  8844 000039A1 51                      		push	cx
  8845 000039A2 36C41E[F400]            		les	bx, [ss:SFT_ADDR]
  8846 000039A7 31F6                    		xor	si, si
  8847                                  
  8848                                  loc_39AA:				; CODE XREF: Find_free_sfn+24j
  8849 000039A9 83FBFF                  		cmp	bx, 0FFFFh
  8850 000039AC 7418                    		jz	short loc_39C7
  8851 000039AE BF0600                  		mov	di, 6
  8852 000039B1 268B4F04                		mov	cx, [es:bx+4]
  8853                                  
  8854                                  VALSEC6:				; CODE XREF: Find_free_sfn+1Fj
  8855 000039B5 26803900                		cmp	byte [es:bx+di], 0
  8856 000039B9 740E                    		jz	short loc_39CA
  8857 000039BB 83C728                  		add	di, 28h
  8858 000039BE 46                      		inc	si
  8859 000039BF E2F4                    		loop	VALSEC6
  8860 000039C1 26C41F                  		les	bx, [es:bx]
  8861 000039C4 EBE3                    		jmp	short loc_39AA
  8862                                  ; ---------------------------------------------------------------------------
  8863                                  
  8864                                  loc_39C7:				; CODE XREF: Find_free_sfn+Cj
  8865 000039C6 F9                      		stc
  8866 000039C7 EB03                    		jmp	short loc_39CD
  8867                                  ; ---------------------------------------------------------------------------
  8868                                  
  8869                                  loc_39CA:				; CODE XREF: Find_free_sfn+19j
  8870 000039C9 01DF                    		add	di, bx
  8871 000039CB F8                      		clc
  8872                                  
  8873                                  loc_39CD:				; CODE XREF: Find_free_sfn+27j
  8874 000039CC 59                      		pop	cx
  8875 000039CD 5B                      		pop	bx
  8876 000039CE C3                      		retn
  8877                                  
  8878                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  8879                                  
  8880                                  _$OPEN:					; CODE XREF: seg000:3062p
  8881                                  					; DATA XREF: seg000:07B8o
  8882 000039CF 36C606[C405]00          		mov	byte [ss:Cr_read_only], 0
  8883                                  
  8884                                  loc_39D6:				; CODE XREF: seg000:3B21j
  8885 000039D5 3C02                    		cmp	al, 2
  8886 000039D7 7605                    		jbe	short loc_39DF
  8887 000039D9 B00C                    		mov	al, 0Ch
  8888                                  
  8889                                  loc_39DC:				; CODE XREF: _$OPEN:loc_39F4j
  8890 000039DB E9CACE                  		jmp	SYS_RET_ERR
  8891                                  ; ---------------------------------------------------------------------------
  8892                                  
  8893                                  loc_39DF:				; CODE XREF: _$OPEN+8j
  8894 000039DE 368C1E[B605]            		mov	[ss:open_name+2], ds
  8895 000039E3 16                      		push	ss
  8896 000039E4 1F                      		pop	ds
  8897 000039E5 8916[B405]              		mov	[open_name], dx
  8898 000039E9 A2[B805]                		mov	byte [open_access], al
  8899 000039EC E898FF                  		call	Find_free_jfn
  8900 000039EF 7304                    		jnb	short loc_39F6
  8901                                  
  8902                                  loc_39F2:				; CODE XREF: _$OPEN+31j
  8903 000039F1 B004                    		mov	al, 4
  8904                                  
  8905                                  loc_39F4:				; CODE XREF: _$OPEN:BYTPOS+2Aj
  8906 000039F3 EBE6                    		jmp	short loc_39DC
  8907                                  ; ---------------------------------------------------------------------------
  8908                                  
  8909                                  loc_39F6:				; CODE XREF: _$OPEN+20j
  8910 000039F5 8C06[BB05]              		mov	[open_jfn_b], es
  8911 000039F9 893E[B905]              		mov	[open_jfn], di
  8912 000039FD E8A0FF                  		call	Find_free_sfn
  8913 00003A00 72EF                    		jb	short loc_39F2
  8914 00003A02 8936[BD05]              		mov	[open_sfn], si
  8915 00003A06 893E[BF05]              		mov	[open_sfoff], di
  8916 00003A0A 8C06[C105]              		mov	[open_sfn_b], es
  8917 00003A0E 1E                      		push	ds
  8918 00003A0F C516[B405]              		lds	dx, [open_name]
  8919 00003A13 E85BFF                  		call	access_path
  8920 00003A16 1F                      		pop	ds
  8921 00003A17 7302                    		jnb	short open_check_access
  8922                                  
  8923                                  oca_retn:				; CODE XREF: _$OPEN+63j
  8924 00003A19 EBD8                    		jmp	short loc_39F4
  8925                                  ; ---------------------------------------------------------------------------
  8926                                  
  8927                                  open_check_access:				; CODE XREF: _$OPEN+48j
  8928 00003A1B 8E06[B503]              		mov	es, [CURBUF+2]
  8929 00003A1F 8826[C305]              		mov	byte [open_devid], ah
  8930 00003A23 F6C480                  		test	ah, 80h
  8931 00003A26 7524                    		jnz	short loc_3A4D
  8932 00003A28 268A470B                		mov	al, [es:bx+0Bh]
  8933 00003A2C A810                    		test	al, 10h
  8934 00003A2E 7404                    		jz	short open_try_volid
  8935                                  
  8936                                  open_bad_access:			; CODE XREF: _$OPEN+67j _$OPEN+79j
  8937 00003A30 B005                    		mov	al, 5
  8938 00003A32 EBE5                    		jmp	short oca_retn
  8939                                  ; ---------------------------------------------------------------------------
  8940                                  
  8941                                  open_try_volid:				; CODE XREF: _$OPEN+5Fj
  8942 00003A34 A808                    		test	al, 8
  8943 00003A36 75F8                    		jnz	short open_bad_access
  8944 00003A38 A801                    		test	al, 1
  8945 00003A3A 7412                    		jz	short loc_3A4F
  8946 00003A3C 803E[C405]00            		cmp	byte [Cr_read_only], 0
  8947 00003A41 750B                    		jnz	short loc_3A4F
  8948 00003A43 803E[B805]00            		cmp	byte [open_access], 0
  8949 00003A48 75E6                    		jnz	short open_bad_access
  8950 00003A4A EB02                    		jmp	short loc_3A4F
  8951                                  ; ---------------------------------------------------------------------------
  8952                                  
  8953                                  loc_3A4D:				; CODE XREF: _$OPEN+57j
  8954 00003A4C 16                      		push	ss
  8955 00003A4D 07                      		pop	es
  8956                                  
  8957                                  loc_3A4F:				; CODE XREF: _$OPEN+6Bj _$OPEN+72j ...
  8958 00003A4E B90B00                  		mov	cx, 11
  8959 00003A51 56                      		push	si
  8960 00003A52 89DE                    		mov	si, bx
  8961 00003A54 8B3E[BF05]              		mov	di, [open_sfoff]
  8962 00003A58 1E                      		push	ds
  8963 00003A59 06                      		push	es
  8964 00003A5A 8E06[C105]              		mov	es, [open_sfn_b]
  8965 00003A5E 1F                      		pop	ds
  8966 00003A5F 8A670B                  		mov	ah, [bx+0Bh]
  8967 00003A62 26886502                		mov	[es:di+2], ah
  8968 00003A66 83C704                  		add	di, 4
  8969 00003A69 F3A4                    		rep movsb
  8970 00003A6B 1F                      		pop	ds
  8971 00003A6C 5E                      		pop	si
  8972 00003A6D C43E[BF05]              		les	di, [open_sfoff]
  8973 00003A71 83C703                  		add	di, 3
  8974 00003A74 8A26[C305]              		mov	ah, [open_devid]
  8975 00003A78 E831EF                  		call	DOOPEN
  8976 00003A7B 16                      		push	ss
  8977 00003A7C 1F                      		pop	ds
  8978 00003A7D C43E[BF05]              		les	di, [open_sfoff]
  8979 00003A81 26FE05                  		inc	byte [es:di]
  8980 00003A84 A0[B805]                		mov	al, [open_access]
  8981 00003A87 26884501                		mov	[es:di+1], al
  8982 00003A8B 31C0                    		xor	ax, ax
  8983 00003A8D 26894524                		mov	[es:di+24h], ax
  8984 00003A91 26894526                		mov	[es:di+26h], ax
  8985 00003A95 40                      		inc	ax
  8986 00003A96 26894511                		mov	[es:di+11h], ax
  8987 00003A9A C43E[B905]              		les	di, [open_jfn]
  8988 00003A9E A1[BD05]                		mov	ax, [open_sfn]
  8989 00003AA1 268805                  		mov	[es:di], al
  8990 00003AA4 83EF18                  		sub	di, 18h
  8991 00003AA7 89F8                    		mov	ax, di
  8992                                  
  8993                                  loc_3AAA:				; CODE XREF: seg000:loc_3AE2j
  8994 00003AA9 E9F2CD                  		jmp	SYS_RET_OK
  8995                                  
  8996                                  ; ---------------------------------------------------------------------------
  8997                                  
  8998                                  _$UNLINK:				; DATA XREF: seg000:07C0o
  8999 00003AAC E8C2FE                  		call	access_path
  9000 00003AAF 7303                    		jnb	short loc_3AB5
  9001                                  
  9002                                  loc_3AB2:				; CODE XREF: seg000:loc_3AC4j
  9003 00003AB1 E9F4CD                  		jmp	SYS_RET_ERR
  9004                                  ; ---------------------------------------------------------------------------
  9005                                  
  9006                                  loc_3AB5:				; CODE XREF: seg000:3AB0j
  9007 00003AB4 740B                    		jz	short loc_3AC2
  9008 00003AB6 36C53E[B303]            		lds	di, [ss:CURBUF]
  9009 00003ABB F6470B01                		test	byte [bx+0Bh], 1
  9010 00003ABF 7404                    		jz	short loc_3AC6
  9011                                  
  9012                                  loc_3AC2:				; CODE XREF: seg000:loc_3AB5j
  9013 00003AC1 B005                    		mov	al, 5
  9014                                  
  9015                                  loc_3AC4:				; CODE XREF: seg000:loc_3AEBj
  9016 00003AC3 EBEC                    		jmp	short loc_3AB2
  9017                                  ; ---------------------------------------------------------------------------
  9018                                  
  9019                                  loc_3AC6:				; CODE XREF: seg000:3AC0j
  9020 00003AC5 C607E5                  		mov	byte [bx], 0E5h ; 'å'
  9021 00003AC8 C6450501                		mov	byte [di+5], 1
  9022 00003ACC AD                      		lodsw
  9023 00003ACD 89C3                    		mov	bx, ax
  9024 00003ACF 81E3FF0F                		and	bx, 0FFFh
  9025 00003AD3 16                      		push	ss
  9026 00003AD4 1F                      		pop	ds
  9027 00003AD5 7403                    		jz	short loc_3ADB
  9028 00003AD7 E8B0EA                  		call	RELEASE
  9029                                  
  9030                                  loc_3ADB:				; CODE XREF: seg000:3AD6j
  9031 00003ADA 268A4600                		mov	al, [es:bp]
  9032 00003ADE E842EC                  		call	FLUSHBUF
  9033                                  
  9034                                  loc_3AE2:				; CODE XREF: seg000:loc_3B41j
  9035 00003AE1 EBC6                    		jmp	short loc_3AAA
  9036                                  ; ---------------------------------------------------------------------------
  9037                                  
  9038                                  _$CREAT:				; DATA XREF: seg000:07B6o
  9039 00003AE3 E82EFE                  		call	validate_path
  9040 00003AE6 7304                    		jnb	short loc_3AED
  9041 00003AE8 B003                    		mov	al, 3
  9042                                  
  9043                                  loc_3AEB:				; CODE XREF: seg000:loc_3B1Dj
  9044 00003AEA EBD7                    		jmp	short loc_3AC4
  9045                                  ; ---------------------------------------------------------------------------
  9046                                  
  9047                                  loc_3AED:				; CODE XREF: seg000:3AE7j
  9048 00003AEC 52                      		push	dx
  9049 00003AED 1E                      		push	ds
  9050 00003AEE 16                      		push	ss
  9051 00003AEF 1F                      		pop	ds
  9052 00003AF0 C706[6203]FFE5          		mov	word [CREATING], 0E5FFh
  9053 00003AF6 8C16[8703]              		mov	word [THISFCB+2], ss
  9054 00003AFA C706[8503][4804]        		mov	word [THISFCB], AUXSTACK-40 ; 448h
  9055 00003B00 89D6                    		mov	si, dx
  9056 00003B02 88C8                    		mov	al, cl
  9057 00003B04 80E101                  		and	cl, 1
  9058 00003B07 880E[C405]              		mov	byte [Cr_read_only], cl
  9059 00003B0B 1F                      		pop	ds
  9060 00003B0C 1E                      		push	ds
  9061 00003B0D E847DB                  		call	MAKENODE
  9062 00003B10 1F                      		pop	ds
  9063 00003B11 5A                      		pop	dx
  9064 00003B12 08C0                    		or	al, al
  9065 00003B14 7408                    		jz	short loc_3B1F
  9066 00003B16 3C03                    		cmp	al, 3
  9067 00003B18 7404                    		jz	short loc_3B1F
  9068 00003B1A B005                    		mov	al, 5
  9069                                  
  9070                                  loc_3B1D:				; CODE XREF: seg000:loc_3B45j
  9071 00003B1C EBCC                    		jmp	short loc_3AEB
  9072                                  ; ---------------------------------------------------------------------------
  9073                                  
  9074                                  loc_3B1F:				; CODE XREF: seg000:3B15j seg000:3B19j
  9075 00003B1E B002                    		mov	al, 2
  9076 00003B20 E9B2FE                  		jmp	loc_39D6
  9077                                  ; ---------------------------------------------------------------------------
  9078                                  
  9079                                  _$DUP:					; DATA XREF: seg000:07C8o
  9080 00003B23 16                      		push	ss
  9081 00003B24 1F                      		pop	ds
  9082 00003B25 E85FFE                  		call	Find_free_jfn
  9083 00003B28 7218                    		jb	short loc_3B43
  9084                                  
  9085                                  loc_3B2B:				; CODE XREF: seg000:3B5Bj
  9086 00003B2A 06                      		push	es
  9087 00003B2B 57                      		push	di
  9088 00003B2C E89D02                  		call	get_sf_from_jfn
  9089 00003B2F 5E                      		pop	si
  9090 00003B30 1F                      		pop	ds
  9091 00003B31 7213                    		jb	short loc_3B47
  9092 00003B33 26FE05                  		inc	byte [es:di]
  9093 00003B36 8A4718                  		mov	al, [bx+18h]
  9094 00003B39 8804                    		mov	[si], al
  9095 00003B3B 83EE18                  		sub	si, 18h
  9096 00003B3E 89F0                    		mov	ax, si
  9097                                  
  9098                                  loc_3B41:				; CODE XREF: seg000:loc_3BA0j
  9099 00003B40 EB9F                    		jmp	short loc_3AE2
  9100                                  ; ---------------------------------------------------------------------------
  9101                                  
  9102                                  loc_3B43:				; CODE XREF: seg000:3B29j
  9103 00003B42 B004                    		mov	al, 4
  9104                                  
  9105                                  loc_3B45:				; CODE XREF: seg000:loc_3B49j
  9106 00003B44 EBD6                    		jmp	short loc_3B1D
  9107                                  ; ---------------------------------------------------------------------------
  9108                                  
  9109                                  loc_3B47:				; CODE XREF: seg000:3B32j
  9110 00003B46 B006                    		mov	al, 6
  9111                                  
  9112                                  loc_3B49:				; CODE XREF: seg000:loc_3B5Fj
  9113 00003B48 EBFA                    		jmp	short loc_3B45
  9114                                  ; ---------------------------------------------------------------------------
  9115                                  
  9116                                  _$DUP2:					; DATA XREF: seg000:07CAo
  9117 00003B4A 87D9                    		xchg	bx, cx
  9118 00003B4C 53                      		push	bx
  9119 00003B4D 51                      		push	cx
  9120 00003B4E E8A102                  		call	_$CLOSE
  9121 00003B51 16                      		push	ss
  9122 00003B52 1F                      		pop	ds
  9123 00003B53 59                      		pop	cx
  9124 00003B54 5B                      		pop	bx
  9125 00003B55 E88802                  		call	get_jfn_pointer
  9126 00003B58 87D9                    		xchg	bx, cx
  9127 00003B5A 73CE                    		jnb	short loc_3B2B
  9128 00003B5C B006                    		mov	al, 6
  9129                                  
  9130                                  loc_3B5F:				; CODE XREF: seg000:loc_3B67j
  9131 00003B5E EBE8                    		jmp	short loc_3B49
  9132                                  ; ---------------------------------------------------------------------------
  9133                                  
  9134                                  _$CHMOD:				; DATA XREF: seg000:07C4o
  9135 00003B60 3C01                    		cmp	al, 1
  9136 00003B62 7604                    		jbe	short loc_3B69
  9137 00003B64 B001                    		mov	al, 1
  9138                                  
  9139                                  loc_3B67:				; CODE XREF: seg000:loc_3B75j
  9140 00003B66 EBF6                    		jmp	short loc_3B5F
  9141                                  ; ---------------------------------------------------------------------------
  9142                                  
  9143                                  loc_3B69:				; CODE XREF: seg000:3B63j
  9144 00003B68 720D                    		jb	short loc_3B79
  9145 00003B6A 89CB                    		mov	bx, cx
  9146 00003B6C 83E3D8                  		and	bx, 0FFD8h
  9147 00003B6F 7406                    		jz	short loc_3B79
  9148 00003B71 B005                    		mov	al, 5
  9149                                  
  9150                                  loc_3B75:				; CODE XREF: seg000:loc_3B77j
  9151 00003B73 EBF1                    		jmp	short loc_3B67
  9152                                  ; ---------------------------------------------------------------------------
  9153                                  
  9154                                  loc_3B77:				; CODE XREF: seg000:3B80j
  9155                                  					; seg000:loc_3BBFj
  9156 00003B75 EBFC                    		jmp	short loc_3B75
  9157                                  ; ---------------------------------------------------------------------------
  9158                                  
  9159                                  loc_3B79:				; CODE XREF: seg000:loc_3B69j
  9160                                  					; seg000:3B71j
  9161 00003B77 51                      		push	cx
  9162 00003B78 50                      		push	ax
  9163 00003B79 E8F5FD                  		call	access_path
  9164 00003B7C 5A                      		pop	dx
  9165 00003B7D 59                      		pop	cx
  9166 00003B7E 72F5                    		jb	short loc_3B77
  9167 00003B80 36C43E[B303]            		les	di, [ss:CURBUF]
  9168 00003B85 16                      		push	ss
  9169 00003B86 1F                      		pop	ds
  9170 00003B87 08D2                    		or	dl, dl
  9171 00003B89 7415                    		jz	short loc_3BA2
  9172 00003B8B 2680670BD8              		and	byte [es:bx+0Bh], 0D8h
  9173 00003B90 26084F0B                		or	[es:bx+0Bh], cl
  9174 00003B94 26C6450501              		mov	byte [es:di+5], 1
  9175 00003B99 B0FF                    		mov	al, 0FFh
  9176 00003B9B E885EB                  		call	FLUSHBUF
  9177                                  
  9178                                  loc_3BA0:				; CODE XREF: seg000:loc_3BAEj
  9179 00003B9E EBA0                    		jmp	short loc_3B41
  9180                                  ; ---------------------------------------------------------------------------
  9181                                  
  9182                                  loc_3BA2:				; CODE XREF: seg000:3B8Bj
  9183 00003BA0 31C9                    		xor	cx, cx
  9184 00003BA2 268A4F0B                		mov	cl, [es:bx+0Bh]
  9185 00003BA6 E890CB                  		call	get_user_stack
  9186 00003BA9 894C04                  		mov	[si+4],	cx
  9187                                  
  9188                                  loc_3BAE:				; CODE XREF: seg000:3BF9j
  9189 00003BAC EBF0                    		jmp	short loc_3BA0
  9190                                  ; ---------------------------------------------------------------------------
  9191                                  
  9192                                  _$CURRENT_DIR:				; DATA XREF: seg000:07CCo
  9193 00003BAE 1E                      		push	ds
  9194 00003BAF 53                      		push	bx
  9195 00003BB0 56                      		push	si
  9196 00003BB1 E85BD1                  		call	_$GET_DPB
  9197 00003BB4 3CFF                    		cmp	al, 0FFh
  9198 00003BB6 7507                    		jnz	short current_copy
  9199 00003BB8 58                      		pop	ax
  9200 00003BB9 58                      		pop	ax
  9201 00003BBA 58                      		pop	ax
  9202 00003BBB B00F                    		mov	al, 0Fh
  9203                                  
  9204                                  loc_3BBF:				; CODE XREF: seg000:loc_3C14j
  9205 00003BBD EBB6                    		jmp	short loc_3B77
  9206                                  ; ---------------------------------------------------------------------------
  9207                                  
  9208                                  current_copy:				; CODE XREF: seg000:3BB8j
  9209 00003BBF 5F                      		pop	di
  9210 00003BC0 8F4402                  		pop	word [si+2]
  9211 00003BC3 5B                      		pop	bx
  9212 00003BC4 895C0E                  		mov	[si+0Eh], bx
  9213 00003BC7 26837E1CFF              		cmp	word [es:bp+1Ch], 0FFFFh
  9214 00003BCC 750D                    		jnz	short loc_3BDD
  9215 00003BCE 53                      		push	bx
  9216 00003BCF 57                      		push	di
  9217 00003BD0 36C606[4503]16          		mov	byte [ss:ATTRIB], 16h
  9218 00003BD6 E80EDA                  		call	GETCURRDIR
  9219 00003BD9 5F                      		pop	di
  9220 00003BDA 5B                      		pop	bx
  9221                                  
  9222                                  loc_3BDD:				; CODE XREF: seg000:3BCEj
  9223 00003BDB 89EE                    		mov	si, bp
  9224 00003BDD 06                      		push	es
  9225 00003BDE 1F                      		pop	ds
  9226 00003BDF 8EC3                    		mov	es, bx
  9227 00003BE1 837C1C00                		cmp	word [si+1Ch], 0
  9228 00003BE5 7504                    		jnz	short loc_3BED
  9229 00003BE7 C6441E00                		mov	byte [si+1Eh], 0
  9230                                  
  9231                                  loc_3BED:				; CODE XREF: seg000:3BE7j
  9232 00003BEB 83C61E                  		add	si, 1Eh
  9233 00003BEE B94000                  		mov	cx, 40h	; '@'
  9234                                  
  9235                                  loc_3BF3:				; CODE XREF: seg000:3BF7j
  9236 00003BF1 AC                      		lodsb
  9237 00003BF2 AA                      		stosb
  9238 00003BF3 08C0                    		or	al, al
  9239 00003BF5 E0FA                    		loopne	loc_3BF3
  9240 00003BF7 EBB3                    		jmp	short loc_3BAE
  9241                                  ; ---------------------------------------------------------------------------
  9242                                  
  9243                                  _$RENAME:				; DATA XREF: seg000:07EAo
  9244 00003BF9 368916[C505]            		mov	[ss:rename_source], dx
  9245 00003BFE 368C1E[C705]            		mov	[ss:rename_source+2], ds
  9246 00003C03 36893E[C905]            		mov	[ss:rename_dest], di
  9247 00003C08 368C06[CB05]            		mov	[ss:rename_dest+2], es
  9248 00003C0D E861FD                  		call	access_path
  9249 00003C10 7302                    		jnb	short loc_3C16
  9250                                  
  9251                                  loc_3C14:				; CODE XREF: seg000:loc_3C44j
  9252 00003C12 EBA9                    		jmp	short loc_3BBF
  9253                                  ; ---------------------------------------------------------------------------
  9254                                  
  9255                                  loc_3C16:				; CODE XREF: seg000:3C12j
  9256 00003C14 742A                    		jz	short loc_3C42
  9257 00003C16 368E1E[B503]            		mov	ds, [ss:CURBUF+2]
  9258 00003C1B FF7718                  		push	word [bx+18h]
  9259 00003C1E FF771A                  		push	word [bx+1Ah]
  9260 00003C21 FF771E                  		push	word [bx+1Eh]
  9261 00003C24 FF771C                  		push	word [bx+1Ch]
  9262 00003C27 FF7716                  		push	word [bx+16h]
  9263 00003C2A FF770B                  		push	word [bx+0Bh]
  9264 00003C2D 36FF36[6F03]            		push	word [ss:THISDRV]
  9265 00003C32 36C536[C905]            		lds	si, [ss:rename_dest]
  9266 00003C37 E8BFDA                  		call	GETPATH
  9267 00003C3A 58                      		pop	ax
  9268 00003C3B 7207                    		jb	short loc_3C46
  9269                                  
  9270                                  loc_3C3F:				; CODE XREF: seg000:3C71j
  9271 00003C3D 83C40C                  		add	sp, 0Ch
  9272                                  
  9273                                  loc_3C42:				; CODE XREF: seg000:loc_3C16j
  9274 00003C40 B005                    		mov	al, 5
  9275                                  
  9276                                  loc_3C44:				; CODE XREF: seg000:loc_3C52j
  9277 00003C42 EBCE                    		jmp	short loc_3C14
  9278                                  ; ---------------------------------------------------------------------------
  9279                                  
  9280                                  loc_3C46:				; CODE XREF: seg000:3C3Dj
  9281 00003C44 363A06[6F03]            		cmp	al, byte [ss:THISDRV]
  9282 00003C49 7407                    		jz	short rename_create
  9283 00003C4B 83C40C                  		add	sp, 0Ch
  9284 00003C4E B011                    		mov	al, 11h
  9285                                  
  9286                                  loc_3C52:				; CODE XREF: seg000:loc_3CB6j
  9287 00003C50 EBF0                    		jmp	short loc_3C44
  9288                                  ; ---------------------------------------------------------------------------
  9289                                  
  9290                                  rename_create:				; CODE XREF: seg000:3C4Bj
  9291 00003C52 36C536[C905]            		lds	si, [ss:rename_dest]
  9292 00003C57 58                      		pop	ax
  9293 00003C58 50                      		push	ax
  9294 00003C59 36C706[6203]FFE5        		mov	word [ss:CREATING], 0E5FFh
  9295 00003C60 368C16[8703]            		mov	[ss:THISFCB+2], ss
  9296 00003C65 36C706[8503][4804]      		mov	word [ss:THISFCB], AUXSTACK - 40
  9297 00003C6C E8E8D9                  		call	MAKENODE
  9298 00003C6F 72CC                    		jb	short loc_3C3F
  9299 00003C71 36C536[B303]            		lds	si, [ss:CURBUF]
  9300 00003C76 58                      		pop	ax
  9301 00003C77 88470B                  		mov	[bx+0Bh], al
  9302 00003C7A 8F4716                  		pop	word [bx+16h]
  9303 00003C7D 8F471C                  		pop	word [bx+1Ch]
  9304 00003C80 8F471E                  		pop	word [bx+1Eh]
  9305 00003C83 8F471A                  		pop	word [bx+1Ah]
  9306 00003C86 8F4718                  		pop	word [bx+18h]
  9307 00003C89 C6440501                		mov	byte [si+5], 1
  9308 00003C8D 36C536[C505]            		lds	si, [ss:rename_source]
  9309 00003C92 E864DA                  		call	GETPATH
  9310 00003C95 36C536[B303]            		lds	si, [ss:CURBUF]
  9311 00003C9A C607E5                  		mov	byte [bx], 0E5h ; 'å'
  9312 00003C9D C6440501                		mov	byte [si+5], 1
  9313 00003CA1 16                      		push	ss
  9314 00003CA2 1F                      		pop	ds
  9315 00003CA3 B0FF                    		mov	al, 0FFh
  9316 00003CA5 E87BEA                  		call	FLUSHBUF
  9317 00003CA8 E9F3CB                  		jmp	SYS_RET_OK
  9318                                  ; ---------------------------------------------------------------------------
  9319                                  
  9320                                  _$FIND_FIRST:				; DATA XREF: seg000:07DAo
  9321 00003CAB E866FC                  		call	validate_path
  9322 00003CAE 7306                    		jnb	short loc_3CB8
  9323 00003CB0 7404                    		jz	short loc_3CB8
  9324 00003CB2 B002                    		mov	al, 2
  9325                                  
  9326                                  loc_3CB6:				; CODE XREF: seg000:3CD4j
  9327 00003CB4 EB9A                    		jmp	short loc_3C52
  9328                                  ; ---------------------------------------------------------------------------
  9329                                  
  9330                                  loc_3CB8:				; CODE XREF: seg000:3CB0j seg000:3CB2j
  9331 00003CB6 89D6                    		mov	si, dx
  9332 00003CB8 51                      		push	cx
  9333 00003CB9 36FE06[D500]            		inc	byte [ss:NoSetDir]
  9334 00003CBE 36C706[6203]00E5        		mov	word [ss:CREATING], 0E500h
  9335 00003CC5 E831DA                  		call	GETPATH
  9336 00003CC8 59                      		pop	cx
  9337 00003CC9 36880E[4503]            		mov	byte [ss:ATTRIB], cl
  9338                                  
  9339                                  loc_3CD0:				; CODE XREF: seg000:3DA0j
  9340 00003CCE 7304                    		jnb	short loc_3CD6
  9341 00003CD0 B012                    		mov	al, 12h
  9342 00003CD2 EBE0                    		jmp	short loc_3CB6
  9343                                  ; ---------------------------------------------------------------------------
  9344                                  
  9345                                  loc_3CD6:				; CODE XREF: seg000:loc_3CD0j
  9346 00003CD4 368E1E[B503]            		mov	ds, [ss:CURBUF+2]
  9347 00003CD9 8A6F0B                  		mov	ch, [bx+0Bh]
  9348 00003CDC E8E5DB                  		call	MatchAttributes
  9349 00003CDF 740D                    		jz	short found_it
  9350 00003CE1 36FF36[2101]            		push	word [ss:LASTENT]
  9351 00003CE6 368B1E[9703]            		mov	bx, [ss:DIRSTART]
  9352 00003CEB E9A000                  		jmp	loc_3D90
  9353                                  ; ---------------------------------------------------------------------------
  9354                                  
  9355                                  found_it:				; CODE XREF: seg000:3CE1j
  9356 00003CEE 36C43E[DF00]            		les	di, [ss:DMAADD]
  9357 00003CF3 36A0[4503]              		mov	al, byte [ss:ATTRIB]
  9358 00003CF7 AA                      		stosb
  9359 00003CF8 36A0[6F03]              		mov	al, byte [ss:THISDRV]
  9360 00003CFC AA                      		stosb
  9361 00003CFD B90B00                  		mov	cx, 11
  9362 00003D00 53                      		push	bx
  9363 00003D01 BE[3903]                		mov	si, NAME1
  9364 00003D04 1E                      		push	ds
  9365 00003D05 16                      		push	ss
  9366 00003D06 1F                      		pop	ds
  9367 00003D07 F3A4                    		rep movsb
  9368 00003D09 1F                      		pop	ds
  9369 00003D0A 36A1[2101]              		mov	ax, [ss:LASTENT]
  9370 00003D0E AB                      		stosw
  9371 00003D0F 36A1[7003]              		mov	ax, [ss:THISDPB]
  9372 00003D13 AB                      		stosw
  9373 00003D14 36A1[7203]              		mov	ax, [ss:THISDPB+2]
  9374 00003D18 AB                      		stosw
  9375 00003D19 36A1[9703]              		mov	ax, [ss:DIRSTART]
  9376 00003D1D AB                      		stosw
  9377 00003D1E 8A470B                  		mov	al, [bx+0Bh]
  9378 00003D21 AA                      		stosb
  9379 00003D22 8B4716                  		mov	ax, [bx+16h]
  9380 00003D25 AB                      		stosw
  9381 00003D26 8B4718                  		mov	ax, [bx+18h]
  9382 00003D29 AB                      		stosw
  9383 00003D2A 8B471C                  		mov	ax, [bx+1Ch]
  9384 00003D2D AB                      		stosw
  9385 00003D2E 8B471E                  		mov	ax, [bx+1Eh]
  9386 00003D31 AB                      		stosw
  9387 00003D32 5E                      		pop	si
  9388 00003D33 B90800                  		mov	cx, 8
  9389                                  
  9390                                  loc_3D38:				; CODE XREF: seg000:3D3Cj
  9391 00003D36 AC                      		lodsb
  9392 00003D37 AA                      		stosb
  9393 00003D38 3C20                    		cmp	al, 20h	; ' '
  9394 00003D3A E0FA                    		loopne	loc_3D38
  9395 00003D3C 7501                    		jnz	short loc_3D41
  9396 00003D3E 4F                      		dec	di
  9397                                  
  9398                                  loc_3D41:				; CODE XREF: seg000:3D3Ej
  9399 00003D3F 01CE                    		add	si, cx
  9400 00003D41 803C20                  		cmp	byte [si], 20h ; ' '
  9401 00003D44 740F                    		jz	short loc_3D57
  9402 00003D46 B02E                    		mov	al, 2Eh	; '.'
  9403 00003D48 AA                      		stosb
  9404 00003D49 B90300                  		mov	cx, 3
  9405                                  
  9406                                  loc_3D4E:				; CODE XREF: seg000:3D52j
  9407 00003D4C AC                      		lodsb
  9408 00003D4D AA                      		stosb
  9409 00003D4E 3C20                    		cmp	al, 20h	; ' '
  9410 00003D50 E0FA                    		loopne	loc_3D4E
  9411 00003D52 7501                    		jnz	short loc_3D57
  9412 00003D54 4F                      		dec	di
  9413                                  
  9414                                  loc_3D57:				; CODE XREF: seg000:3D46j seg000:3D54j
  9415 00003D55 30C0                    		xor	al, al
  9416 00003D57 AA                      		stosb
  9417 00003D58 E943CB                  		jmp	SYS_RET_OK
  9418                                  ; ---------------------------------------------------------------------------
  9419                                  
  9420                                  _$FIND_NEXT:				; DATA XREF: seg000:07DCo
  9421 00003D5B 36C536[DF00]            		lds	si, [ss:DMAADD]
  9422 00003D60 89F2                    		mov	dx, si
  9423 00003D62 42                      		inc	dx
  9424 00003D63 56                      		push	si
  9425 00003D64 E8BCF1                  		call	MOVNAMENOSET
  9426 00003D67 5E                      		pop	si
  9427 00003D68 7305                    		jnb	short loc_3D71
  9428                                  
  9429                                  loc_3D6C:				; CODE XREF: seg000:3D79j
  9430 00003D6A B012                    		mov	al, 12h
  9431 00003D6C E939CB                  		jmp	SYS_RET_ERR
  9432                                  ; ---------------------------------------------------------------------------
  9433                                  
  9434                                  loc_3D71:				; CODE XREF: seg000:3D6Aj
  9435 00003D6F 8B440D                  		mov	ax, [si+0Dh]
  9436 00003D72 C46C0F                  		les	bp, [si+0Fh]
  9437 00003D75 09C0                    		or	ax, ax
  9438 00003D77 78F1                    		js	short loc_3D6C
  9439 00003D79 8B5C13                  		mov	bx, [si+13h]
  9440 00003D7C 8A14                    		mov	dl, [si]
  9441 00003D7E 368816[4503]            		mov	byte [ss:ATTRIB], dl
  9442 00003D83 50                      		push	ax
  9443 00003D84 36892E[7003]            		mov	[ss:THISDPB], bp
  9444 00003D89 368C06[7203]            		mov	[ss:THISDPB+2], es
  9445                                  
  9446                                  loc_3D90:				; CODE XREF: seg000:3CEDj
  9447 00003D8E E89CD8                  		call	SETDIRSRCH
  9448 00003D91 58                      		pop	ax
  9449 00003D92 C706[AB03]FFFF          		mov	word [ENTLAST], -1
  9450 00003D98 E8D4D7                  		call	GETENT
  9451 00003D9B E873D7                  		call	NEXTENT
  9452 00003D9E E92DFF                  		jmp	loc_3CD0
  9453                                  
  9454                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9455                                  
  9456                                  get_sf_from_sfn:			; CODE XREF: get_sf_from_jfn+Fp
  9457                                  					; _$CLOSE+19p
  9458 00003DA1 50                      		push	ax
  9459 00003DA2 C43E[F400]              		les	di, [SFT_ADDR]
  9460                                  
  9461                                  loc_3DA8:				; CODE XREF: get_sf_from_sfn+13j
  9462 00003DA6 83FFFF                  		cmp	di, 0FFFFh
  9463 00003DA9 741E                    		jz	short loc_3DCB
  9464 00003DAB 262B4504                		sub	ax, [es:di+4]
  9465 00003DAF 7C05                    		jl	short loc_3DB8
  9466 00003DB1 26C43D                  		les	di, [es:di]
  9467 00003DB4 EBF0                    		jmp	short loc_3DA8
  9468                                  ; ---------------------------------------------------------------------------
  9469                                  
  9470                                  loc_3DB8:				; CODE XREF: get_sf_from_sfn+Ej
  9471 00003DB6 26034504                		add	ax, [es:di+4]
  9472 00003DBA 53                      		push	bx
  9473 00003DBB BB2800                  		mov	bx, 28h
  9474 00003DBE F6E3                    		mul	bl
  9475 00003DC0 5B                      		pop	bx
  9476 00003DC1 83C006                  		add	ax, 6
  9477 00003DC4 01C7                    		add	di, ax
  9478 00003DC6 F8                      		clc
  9479 00003DC7 EB01                    		jmp	short loc_3DCC
  9480                                  ; ---------------------------------------------------------------------------
  9481                                  
  9482                                  loc_3DCB:				; CODE XREF: get_sf_from_sfn+8j
  9483                                  					; get_sf_from_jfn+4j ...
  9484 00003DC9 F9                      		stc
  9485                                  
  9486                                  loc_3DCC:				; CODE XREF: get_sf_from_sfn+26j
  9487                                  					; get_sf_from_jfn+12j
  9488 00003DCA 58                      		pop	ax
  9489 00003DCB C3                      		retn
  9490                                  
  9491                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9492                                  
  9493                                  get_sf_from_jfn:			; CODE XREF: _$CREATE_PROCESS_DATA_BLOCK+37p
  9494                                  					; SWAPBACK+7p ...
  9495 00003DCC 50                      		push	ax
  9496 00003DCD E81000                  		call	get_jfn_pointer
  9497 00003DD0 72F7                    		jb	short loc_3DCB
  9498 00003DD2 268A05                  		mov	al, [es:di]
  9499 00003DD5 3CFF                    		cmp	al, 0FFh
  9500 00003DD7 74F0                    		jz	short loc_3DCB
  9501 00003DD9 30E4                    		xor	ah, ah
  9502 00003DDB E8C3FF                  		call	get_sf_from_sfn
  9503 00003DDE EBEA                    		jmp	short loc_3DCC
  9504                                  
  9505                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9506                                  
  9507                                  get_jfn_pointer:			; CODE XREF: _$CREATE_PROCESS_DATA_BLOCK+30p
  9508                                  					; seg000:3B56p	...
  9509 00003DE0 83FB14                  		cmp	bx, 20 ; FILPERPROC
  9510 00003DE3 730B                    		jnb	short loc_3DF2
  9511 00003DE5 8E06[8B01]              		mov	es, [CurrentPDB]
  9512 00003DE9 89DF                    		mov	di, bx
  9513 00003DEB 83C718                  		add	di, 18h
  9514 00003DEE F8                      		clc
  9515 00003DEF C3                      		retn
  9516                                  ; ---------------------------------------------------------------------------
  9517                                  
  9518                                  loc_3DF2:				; CODE XREF: get_jfn_pointer+3j
  9519 00003DF0 F9                      		stc
  9520 00003DF1 C3                      		retn
  9521                                  
  9522                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9523                                  
  9524                                  _$CLOSE:				; CODE XREF: FATALC+A4p seg000:314Fp ...
  9525                                  
  9526                                  ; FUNCTION CHUNK AT 089D SIZE 0000001B BYTES
  9527                                  
  9528 00003DF2 16                      		push	ss
  9529 00003DF3 1F                      		pop	ds
  9530 00003DF4 E8E9FF                  		call	get_jfn_pointer
  9531 00003DF7 7305                    		jnb	short loc_3E00
  9532                                  
  9533                                  loc_3DFB:				; CODE XREF: _$CLOSE+11j _$CLOSE+1Cj
  9534 00003DF9 B006                    		mov	al, 6
  9535                                  
  9536                                  loc_3DFD:				; CODE XREF: _$CLOSE:loc_3E34j
  9537 00003DFB E9AACA                  		jmp	SYS_RET_ERR
  9538                                  ; ---------------------------------------------------------------------------
  9539                                  
  9540                                  loc_3E00:				; CODE XREF: _$CLOSE+5j
  9541 00003DFE 268A05                  		mov	al, [es:di]
  9542 00003E01 3CFF                    		cmp	al, 0FFh
  9543 00003E03 74F4                    		jz	short loc_3DFB
  9544 00003E05 26C605FF                		mov	byte [es:di], 0FFh
  9545 00003E09 30E4                    		xor	ah, ah
  9546 00003E0B E893FF                  		call	get_sf_from_sfn
  9547 00003E0E 72E9                    		jb	short loc_3DFB
  9548 00003E10 06                      		push	es
  9549 00003E11 1F                      		pop	ds
  9550 00003E12 FE0D                    		dec	byte [di]
  9551 00003E14 8D5503                  		lea	dx, [di+3]
  9552 00003E17 F6451BC0                		test	byte [di+1Bh], 0C0h
  9553 00003E1B 7517                    		jnz	short loc_3E36
  9554 00003E1D FF7502                  		push	word [di+2]
  9555 00003E20 E800F1                  		call	MOVNAMENOSET
  9556 00003E23 5B                      		pop	bx
  9557 00003E24 36881E[4503]            		mov	byte [ss:ATTRIB], bl
  9558 00003E29 E8F8EB                  		call	FCB_CLOSE_INNER
  9559 00003E2C 3CFF                    		cmp	al, 0FFh
  9560 00003E2E 7504                    		jnz	short loc_3E36
  9561 00003E30 B002                    		mov	al, 2
  9562                                  
  9563                                  loc_3E34:				; CODE XREF: _$READ:loc_3EA8j
  9564 00003E32 EBC7                    		jmp	short loc_3DFD
  9565                                  ; ---------------------------------------------------------------------------
  9566                                  
  9567                                  loc_3E36:				; CODE XREF: _$CLOSE+29j _$CLOSE+3Cj
  9568 00003E34 E967CA                  		jmp	SYS_RET_OK
  9569                                  
  9570                                  ; ---------------------------------------------------------------------------
  9571                                  
  9572                                  PushDMA:				; CODE XREF: _$READp seg000:_$WRITEp
  9573 00003E37 368C06[CF05]            		mov	[ss:PushES], es
  9574 00003E3C 36891E[D105]            		mov	[ss:PushBX], bx
  9575 00003E41 368F06[CD05]            		pop	word [ss:PushSave]
  9576 00003E46 36C41E[DF00]            		les	bx, [ss:DMAADD]
  9577 00003E4B 06                      		push	es
  9578 00003E4C 53                      		push	bx
  9579 00003E4D 36FF36[CD05]            		push	word [ss:PushSave]
  9580 00003E52 E82A00                  		call	ptr_normalize
  9581 00003E55 368916[DF00]            		mov	[ss:DMAADD], dx
  9582 00003E5A 368C1E[E100]            		mov	[ss:DMAADD+2], ds
  9583 00003E5F 368E06[CF05]            		mov	es, [ss:PushES]
  9584 00003E64 368B1E[D105]            		mov	bx, [ss:PushBX]
  9585 00003E69 C3                      		retn
  9586                                  ; ---------------------------------------------------------------------------
  9587                                  
  9588                                  PopDMA:					; CODE XREF: _$READ:loc_3EA5p _$READ+27p
  9589 00003E6A 368F06[CD05]            		pop	word [ss:PushSave]
  9590 00003E6F 368F06[DF00]            		pop	word [ss:DMAADD]
  9591 00003E74 368F06[E100]            		pop	word [ss:DMAADD+2]
  9592 00003E79 36FF36[CD05]            		push	word [ss:PushSave]
  9593 00003E7E C3                      		retn
  9594                                  
  9595                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9596                                  
  9597                                  ptr_normalize:				; CODE XREF: seg000:3E54p
  9598 00003E7F 51                      		push	cx
  9599 00003E80 52                      		push	dx
  9600 00003E81 B104                    		mov	cl, 4
  9601 00003E83 D3EA                    		shr	dx, cl
  9602 00003E85 8CD9                    		mov	cx, ds
  9603 00003E87 01D1                    		add	cx, dx
  9604 00003E89 8ED9                    		mov	ds, cx
  9605 00003E8B 5A                      		pop	dx
  9606 00003E8C 83E20F                  		and	dx, 0Fh
  9607 00003E8F 59                      		pop	cx
  9608 00003E90 C3                      		retn
  9609                                  
  9610                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9611                                  
  9612                                  _$READ:					; CODE XREF: seg000:30EDp seg000:31FAp ...
  9613 00003E91 E8A3FF                  		call	PushDMA
  9614 00003E94 E83B00                  		call	IO_setup
  9615 00003E97 7209                    		jb	short loc_3EA5
  9616 00003E99 26807D0101              		cmp	byte [es:di+1], 1
  9617 00003E9E 7507                    		jnz	short loc_3EAA
  9618                                  
  9619                                  loc_3EA3:				; CODE XREF: seg000:3ECEj
  9620 00003EA0 B005                    		mov	al, 5
  9621                                  
  9622                                  loc_3EA5:				; CODE XREF: _$READ+6j seg000:3EC7j
  9623 00003EA2 E8C5FF                  		call	PopDMA
  9624                                  
  9625                                  loc_3EA8:				; CODE XREF: _$LSEEK:loc_3EF0j
  9626 00003EA5 EB8B                    		jmp	short loc_3E34
  9627                                  ; ---------------------------------------------------------------------------
  9628                                  
  9629                                  loc_3EAA:				; CODE XREF: _$READ+Dj
  9630 00003EA7 E8ADE9                  		call	_$FCB_RANDOM_READ_BLOCK
  9631                                  
  9632                                  loc_3EAD:				; CODE XREF: seg000:3ED3j
  9633 00003EAA E88CC8                  		call	get_user_stack
  9634 00003EAD 8B4404                  		mov	ax, [si+4]
  9635 00003EB0 368B0E[D305]            		mov	cx, [ss:xenix_count]
  9636 00003EB5 894C04                  		mov	[si+4],	cx
  9637 00003EB8 E8AFFF                  		call	PopDMA
  9638                                  
  9639                                  loc_3EBE:				; CODE XREF: _$LSEEK:loc_3F2Bj
  9640 00003EBB E9E0C9                  		jmp	SYS_RET_OK
  9641                                  
  9642                                  ; ---------------------------------------------------------------------------
  9643                                  
  9644                                  _$WRITE:				; DATA XREF: seg000:07BEo
  9645 00003EBE E876FF                  		call	PushDMA
  9646 00003EC1 E80E00                  		call	IO_setup
  9647 00003EC4 72DC                    		jb	short loc_3EA5
  9648 00003EC6 26807D0100              		cmp	byte [es:di+1], 0
  9649 00003ECB 74D3                    		jz	short loc_3EA3
  9650 00003ECD E88FE9                  		call	_$FCB_RANDOM_WRITE_BLOCK
  9651 00003ED0 EBD8                    		jmp	short loc_3EAD
  9652                                  
  9653                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9654                                  
  9655                                  IO_setup:				; CODE XREF: _$READ+3p seg000:3EC4p
  9656 00003ED2 16                      		push	ss
  9657 00003ED3 1F                      		pop	ds
  9658 00003ED4 890E[D305]              		mov	[xenix_count],cx
  9659 00003ED8 E8F1FE                  		call	get_sf_from_jfn
  9660 00003EDB B006                    		mov	al, 6
  9661 00003EDD 8B0E[D305]              		mov	cx, [xenix_count]
  9662 00003EE1 8D5503                  		lea	dx, [di+3]
  9663 00003EE4 06                      		push	es
  9664 00003EE5 1F                      		pop	ds
  9665 00003EE6 C3                      		retn
  9666                                  
  9667                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9668                                  
  9669                                  _$LSEEK:				; CODE XREF: seg000:31CFp seg000:323Fp ...
  9670 00003EE7 3C03                    		cmp	al, 3
  9671 00003EE9 7204                    		jb	short loc_3EF2
  9672 00003EEB B001                    		mov	al, 1
  9673                                  
  9674                                  loc_3EF0:				; CODE XREF: _$LSEEK:loc_3F3Aj
  9675 00003EED EBB6                    		jmp	short loc_3EA8
  9676                                  ; ---------------------------------------------------------------------------
  9677                                  
  9678                                  loc_3EF2:				; CODE XREF: _$LSEEK+2j
  9679 00003EEF 16                      		push	ss
  9680 00003EF0 1F                      		pop	ds
  9681 00003EF1 E8D8FE                  		call	get_sf_from_jfn
  9682 00003EF4 06                      		push	es
  9683 00003EF5 1F                      		pop	ds
  9684 00003EF6 723D                    		jb	short loc_3F38
  9685 00003EF8 F6451B80                		test	byte [di+1Bh], 80h
  9686 00003EFC 7406                    		jz	short loc_3F07
  9687 00003EFE 31C0                    		xor	ax, ax
  9688 00003F00 31D2                    		xor	dx, dx
  9689 00003F02 EB16                    		jmp	short loc_3F1D
  9690                                  ; ---------------------------------------------------------------------------
  9691                                  
  9692                                  loc_3F07:				; CODE XREF: _$LSEEK+15j
  9693 00003F04 FEC8                    		dec	al
  9694 00003F06 7C0F                    		jl	short loc_3F1A
  9695 00003F08 FEC8                    		dec	al
  9696 00003F0A 7C1E                    		jl	short loc_3F2D
  9697 00003F0C 92                      		xchg	ax, dx
  9698 00003F0D 87D1                    		xchg	dx, cx
  9699 00003F0F 034513                  		add	ax, [di+13h]
  9700 00003F12 135515                  		adc	dx, [di+15h]
  9701 00003F15 EB03                    		jmp	short loc_3F1D
  9702                                  ; ---------------------------------------------------------------------------
  9703                                  
  9704                                  loc_3F1A:				; CODE XREF: _$LSEEK+1Fj
  9705 00003F17 92                      		xchg	ax, dx
  9706 00003F18 87D1                    		xchg	dx, cx
  9707                                  
  9708                                  loc_3F1D:				; CODE XREF: _$LSEEK+1Bj _$LSEEK+2Ej ...
  9709 00003F1A 894524                  		mov	[di+24h], ax
  9710 00003F1D 895526                  		mov	[di+26h], dx
  9711 00003F20 E816C8                  		call	get_user_stack
  9712 00003F23 895406                  		mov	[si+6],	dx
  9713 00003F26 8904                    		mov	[si], ax
  9714                                  
  9715                                  loc_3F2B:				; CODE XREF: _$IOCTL:loc_3F6Bj
  9716 00003F28 EB91                    		jmp	short loc_3EBE
  9717                                  ; ---------------------------------------------------------------------------
  9718                                  
  9719                                  loc_3F2D:				; CODE XREF: _$LSEEK+23j
  9720 00003F2A 92                      		xchg	ax, dx
  9721 00003F2B 87D1                    		xchg	dx, cx
  9722 00003F2D 034524                  		add	ax, [di+24h]
  9723 00003F30 135526                  		adc	dx, [di+26h]
  9724 00003F33 EBE5                    		jmp	short loc_3F1D
  9725                                  ; ---------------------------------------------------------------------------
  9726                                  
  9727                                  loc_3F38:				; CODE XREF: _$LSEEK+Fj
  9728 00003F35 B006                    		mov	al, 6
  9729                                  
  9730                                  loc_3F3A:				; CODE XREF: _$IOCTL:loc_3F4Dj
  9731 00003F37 EBB4                    		jmp	short loc_3EF0
  9732                                  
  9733                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
  9734                                  
  9735                                  _$IOCTL:				; CODE XREF: seg000:306Fp
  9736                                  					; DATA XREF: seg000:07C6o
  9737 00003F39 8CDE                    		mov	si, ds
  9738 00003F3B 16                      		push	ss
  9739 00003F3C 1F                      		pop	ds
  9740 00003F3D 3C03                    		cmp	al, 3
  9741 00003F3F 7750                    		ja	short loc_3F94
  9742 00003F41 52                      		push	dx
  9743 00003F42 E887FE                  		call	get_sf_from_jfn
  9744 00003F45 5A                      		pop	dx
  9745 00003F46 7304                    		jnb	short loc_3F4F
  9746 00003F48 B006                    		mov	al, 6
  9747                                  
  9748                                  loc_3F4D:				; CODE XREF: _$IOCTL:loc_3F61j
  9749 00003F4A EBEB                    		jmp	short loc_3F3A
  9750                                  ; ---------------------------------------------------------------------------
  9751                                  
  9752                                  loc_3F4F:				; CODE XREF: _$IOCTL+Dj
  9753 00003F4C 3C02                    		cmp	al, 2
  9754 00003F4E 7332                    		jnb	short loc_3F85
  9755 00003F50 3C00                    		cmp	al, 0
  9756 00003F52 268A451B                		mov	al, [es:di+1Bh]
  9757 00003F56 7412                    		jz	short loc_3F6D
  9758 00003F58 08F6                    		or	dh, dh
  9759 00003F5A 7404                    		jz	short loc_3F63
  9760 00003F5C B00D                    		mov	al, 0Dh
  9761                                  
  9762                                  loc_3F61:				; CODE XREF: _$IOCTL:loc_3FBEj
  9763 00003F5E EBEA                    		jmp	short loc_3F4D
  9764                                  ; ---------------------------------------------------------------------------
  9765                                  
  9766                                  loc_3F63:				; CODE XREF: _$IOCTL+21j
  9767 00003F60 A880                    		test	al, 80h
  9768 00003F62 7455                    		jz	short loc_3FBC
  9769 00003F64 2688551B                		mov	[es:di+1Bh], dl
  9770                                  
  9771                                  loc_3F6B:				; CODE XREF: _$IOCTL:loc_3F83j
  9772 00003F68 EBBE                    		jmp	short loc_3F2B
  9773                                  ; ---------------------------------------------------------------------------
  9774                                  
  9775                                  loc_3F6D:				; CODE XREF: _$IOCTL+1Dj
  9776 00003F6A 30E4                    		xor	ah, ah
  9777 00003F6C A880                    		test	al, 80h
  9778 00003F6E 7408                    		jz	short loc_3F7B
  9779 00003F70 26C47D1C                		les	di, [es:di+1Ch]
  9780 00003F74 268A6505                		mov	ah, [es:di+5]
  9781                                  
  9782                                  loc_3F7B:				; CODE XREF: _$IOCTL+35j
  9783 00003F78 E8BEC7                  		call	get_user_stack
  9784 00003F7B 89C2                    		mov	dx, ax
  9785 00003F7D 895406                  		mov	[si+6],	dx
  9786                                  
  9787                                  loc_3F83:				; CODE XREF: _$IOCTL:loc_3FBAj
  9788 00003F80 EBE6                    		jmp	short loc_3F6B
  9789                                  ; ---------------------------------------------------------------------------
  9790                                  
  9791                                  loc_3F85:				; CODE XREF: _$IOCTL+15j
  9792 00003F82 26F6451B80              		test	byte [es:di+1Bh], 80h
  9793 00003F87 7430                    		jz	short loc_3FBC
  9794 00003F89 26C47D1C                		les	di, [es:di+1Ch]
  9795 00003F8D 30DB                    		xor	bl, bl
  9796 00003F8F EB4D                    		jmp	short loc_3FE1
  9797                                  ; ---------------------------------------------------------------------------
  9798                                  
  9799                                  loc_3F94:				; CODE XREF: _$IOCTL+6j
  9800 00003F91 FEC8                    		dec	al
  9801 00003F93 FEC8                    		dec	al
  9802 00003F95 3C03                    		cmp	al, 3
  9803 00003F97 7628                    		jbe	short loc_3FC4
  9804 00003F99 B401                    		mov	ah, 1
  9805 00003F9B 2C04                    		sub	al, 4
  9806 00003F9D 7406                    		jz	short loc_3FA8
  9807 00003F9F B403                    		mov	ah, 3
  9808 00003FA1 FEC8                    		dec	al
  9809 00003FA3 7514                    		jnz	short loc_3FBC
  9810                                  
  9811                                  loc_3FA8:				; CODE XREF: _$IOCTL+64j
  9812 00003FA5 50                      		push	ax
  9813 00003FA6 E824DC                  		call	GET_IO_FCB
  9814 00003FA9 58                      		pop	ax
  9815 00003FAA 7211                    		jb	short loc_3FC0
  9816 00003FAC E867D2                  		call	IOFUNC
  9817 00003FAF 88C4                    		mov	ah, al
  9818 00003FB1 B0FF                    		mov	al, 0FFh
  9819 00003FB3 7502                    		jnz	short loc_3FBA
  9820 00003FB5 FEC0                    		inc	al
  9821                                  
  9822                                  loc_3FBA:				; CODE XREF: _$IOCTL+7Aj
  9823                                  					; $IOCTL:loc_4026j
  9824 00003FB7 EBC7                    		jmp	short loc_3F83
  9825                                  ; ---------------------------------------------------------------------------
  9826                                  
  9827                                  loc_3FBC:				; CODE XREF: _$IOCTL+29j _$IOCTL+4Ej ...
  9828 00003FB9 B001                    		mov	al, 1
  9829                                  
  9830                                  loc_3FBE:				; CODE XREF: _$IOCTL:loc_3FC2j
  9831 00003FBB EBA1                    		jmp	short loc_3F61
  9832                                  ; ---------------------------------------------------------------------------
  9833                                  
  9834                                  loc_3FC0:				; CODE XREF: $IOCTL+71j $IOCTL+A3j
  9835 00003FBD B005                    		mov	al, 5
  9836                                  
  9837                                  loc_3FC2:				; CODE XREF: seg000:loc_402Ej
  9838 00003FBF EBFA                    		jmp	short loc_3FBE
  9839                                  ; ---------------------------------------------------------------------------
  9840                                  
  9841                                  loc_3FC4:				; CODE XREF: _$IOCTL+5Ej
  9842 00003FC1 51                      		push	cx
  9843 00003FC2 52                      		push	dx
  9844 00003FC3 50                      		push	ax
  9845 00003FC4 56                      		push	si
  9846 00003FC5 88D8                    		mov	al, bl
  9847 00003FC7 E816DC                  		call	GETTHISDRV
  9848 00003FCA 720C                    		jb	short loc_3FDB
  9849 00003FCC E85CE2                  		call	FATREAD
  9850 00003FCF 268A5E01                		mov	bl, [es:bp+1]
  9851 00003FD3 26C47E12                		les	di, [es:bp+12h]
  9852 00003FD7 F8                      		clc
  9853                                  
  9854                                  loc_3FDB:				; CODE XREF: _$IOCTL+91j
  9855 00003FD8 5E                      		pop	si
  9856 00003FD9 58                      		pop	ax
  9857 00003FDA 5A                      		pop	dx
  9858 00003FDB 59                      		pop	cx
  9859 00003FDC 72DF                    		jb	short loc_3FC0
  9860                                  
  9861                                  loc_3FE1:				; CODE XREF: _$IOCTL+56j
  9862 00003FDE 26F745040040            		test	word [es:di+4], 4000h
  9863 00003FE4 74D3                    		jz	short loc_3FBC
  9864 00003FE6 FEC8                    		dec	al
  9865 00003FE8 FEC8                    		dec	al
  9866 00003FEA 7407                    		jz	short loc_3FF6
  9867 00003FEC C606[4901]0C            		mov	byte [IOCALL_REQFUNC], 0Ch
  9868 00003FF1 EB05                    		jmp	short loc_3FFB
  9869                                  ; ---------------------------------------------------------------------------
  9870                                  
  9871                                  loc_3FF6:				; CODE XREF: _$IOCTL+B1j
  9872 00003FF3 C606[4901]03            		mov	byte [IOCALL_REQFUNC], 3
  9873                                  
  9874                                  loc_3FFB:				; CODE XREF: _$IOCTL+B8j
  9875 00003FF8 B016                    		mov	al, 16h
  9876 00003FFA 88DC                    		mov	ah, bl
  9877 00003FFC A3[4701]                		mov	[IOCALL], ax
  9878 00003FFF 31C0                    		xor	ax, ax
  9879 00004001 A3[4A01]                		mov	[IOCALL_REQSTAT], ax
  9880 00004004 A2[5401]                		mov	[IOMED], al
  9881 00004007 890E[5901]              		mov	[IOSCNT], cx
  9882 0000400B 8916[5501]              		mov	[IOXAD], dx
  9883 0000400F 8936[5701]              		mov	[IOXAD+2], si
  9884 00004013 06                      		push	es
  9885 00004014 1F                      		pop	ds
  9886 00004015 89FE                    		mov	si, di
  9887 00004017 16                      		push	ss
  9888 00004018 07                      		pop	es
  9889 00004019 BB[4701]                		mov	bx, IOCALL ; 147h
  9890 0000401C E82AD3                  		call	DEVIOCALL2
  9891 0000401F 36A1[5901]              		mov	ax, [ss:IOSCNT]
  9892                                  
  9893                                  loc_4026:				; CODE XREF: seg000:loc_4050j
  9894 00004023 EB92                    		jmp	short loc_3FBA
  9895                                  
  9896                                  ; ---------------------------------------------------------------------------
  9897                                  
  9898                                  _$FILE_TIMES:				; DATA XREF: seg000:07ECo
  9899 00004025 3C02                    		cmp	al, 2
  9900 00004027 7204                    		jb	short loc_4030
  9901 00004029 B001                    		mov	al, 1
  9902                                  
  9903                                  loc_402E:				; CODE XREF: seg000:4039j
  9904 0000402B EB92                    		jmp	short loc_3FC2
  9905                                  ; ---------------------------------------------------------------------------
  9906                                  
  9907                                  loc_4030:				; CODE XREF: seg000:402Aj
  9908 0000402D 16                      		push	ss
  9909 0000402E 1F                      		pop	ds
  9910 0000402F E89AFD                  		call	get_sf_from_jfn
  9911 00004032 7304                    		jnb	short loc_403B
  9912 00004034 B006                    		mov	al, 6
  9913 00004036 EBF3                    		jmp	short loc_402E
  9914                                  ; ---------------------------------------------------------------------------
  9915                                  
  9916                                  loc_403B:				; CODE XREF: seg000:4035j
  9917 00004038 08C0                    		or	al, al
  9918 0000403A 7513                    		jnz	short loc_4052
  9919 0000403C 268B4D19                		mov	cx, [es:di+19h]
  9920 00004040 268B5517                		mov	dx, [es:di+17h]
  9921 00004044 E8F2C6                  		call	get_user_stack
  9922 00004047 894C04                  		mov	[si+4],	cx
  9923 0000404A 895406                  		mov	[si+6],	dx
  9924                                  
  9925                                  loc_4050:				; CODE XREF: seg000:405Fj
  9926 0000404D EBD4                    		jmp	short loc_4026
  9927                                  ; ---------------------------------------------------------------------------
  9928                                  
  9929                                  loc_4052:				; CODE XREF: seg000:403Dj
  9930 0000404F 26894D19                		mov	[es:di+19h], cx
  9931 00004053 26895517                		mov	[es:di+17h], dx
  9932 00004057 2680651BBF              		and	byte [es:di+1Bh], 0BFh
  9933 0000405C EBEF                    		jmp	short loc_4050
  9934                                  ; ---------------------------------------------------------------------------
  9935                                  
  9936                                  DOSINIT:
  9937                                  SYSBUF:					; CODE XREF: seg000:0j
  9938                                  					; DATA XREF: seg000:414Eo ...
  9939 0000405E FA                      		cli
  9940 0000405F FC                      		cld
  9941 00004060 2E8916[E300]            		mov	[cs:ENDMEM], dx
  9942 00004065 2E8926[3A03]            		mov	[cs:INITSP], sp
  9943 0000406A 2E8C16[3C03]            		mov	[cs:INITSS], ss
  9944 0000406F BC[1443]                		mov	sp, INITSTACK
  9945 00004072 8CC8                    		mov	ax, cs
  9946 00004074 8ED0                    		mov	ss, ax
  9947 00004076 368C1E[0901]            		mov	[ss:DEVHEAD+2], ds
  9948 0000407B 368936[0701]            		mov	[ss:DEVHEAD], si
  9949 00004080 E8E801                  		call	CHARINIT
  9950 00004083 56                      		push	si
  9951 00004084 83C60A                  		add	si, 10
  9952 00004087 0E                      		push	cs
  9953 00004088 07                      		pop	es
  9954 00004089 BF0D00                  		mov	di, 0Dh
  9955 0000408C B003                    		mov	al, 3
  9956 0000408E AA                      		stosb
  9957 0000408F FEC8                    		dec	al
  9958 00004091 AA                      		stosb
  9959 00004092 30C0                    		xor	al, al
  9960 00004094 AA                      		stosb
  9961 00004095 AA                      		stosb
  9962 00004096 B90400                  		mov	cx, 4
  9963 00004099 F3A5                    		rep movsw
  9964 0000409B B103                    		mov	cl, 3
  9965 0000409D B020                    		mov	al, 20h	; ' '
  9966 0000409F F3AA                    		rep stosb
  9967 000040A1 83C70C                  		add	di, 12
  9968 000040A4 B0C3                    		mov	al, 0C3h
  9969 000040A6 AA                      		stosb
  9970 000040A7 5E                      		pop	si
  9971 000040A8 89F0                    		mov	ax, si
  9972 000040AA AB                      		stosw
  9973 000040AB 8CD8                    		mov	ax, ds
  9974 000040AD AB                      		stosw
  9975 000040AE 804C0403                		or	byte [si+4], 3
  9976 000040B2 368936[FC00]            		mov	[ss:BCON], si
  9977 000040B7 368C1E[FE00]            		mov	[ss:BCON+2], ds
  9978                                  
  9979                                  CHAR_INIT_LOOP:				; CODE XREF: seg000:40C8j
  9980 000040BC C534                    		lds	si, [si]
  9981 000040BE E8AA01                  		call	CHARINIT
  9982 000040C1 F6440408                		test	byte [si+4], 8
  9983 000040C5 74F5                    		jz	short CHAR_INIT_LOOP
  9984 000040C7 368936[F800]            		mov	[ss:BCLOCK], si
  9985 000040CC 368C1E[FA00]            		mov	[ss:BCLOCK+2], ds
  9986 000040D1 BD[1643]                		mov	bp, MEMSTRT
  9987                                  
  9988                                  PERDRV:					; CODE XREF: seg000:40E6j seg000:4144j
  9989 000040D4 C534                    		lds	si, [si]
  9990 000040D6 83FEFF                  		cmp	si, -1
  9991 000040D9 7468                    		jz	short CONTINIT
  9992 000040DB E88D01                  		call	CHARINIT
  9993 000040DE F744040080              		test	word [si+4], 8000h
  9994 000040E3 75EF                    		jnz	short PERDRV
  9995 000040E5 368A0E[3A01]            		mov	cl, [ss:CALLUNIT]
  9996 000040EA 30ED                    		xor	ch, ch
  9997 000040EC 884C0A                  		mov	[si+0Ah], cl
  9998 000040EF 368A16[0001]            		mov	dl, [ss:NUMIO]
  9999 000040F4 30F6                    		xor	dh, dh
 10000 000040F6 36000E[0001]            		add	[ss:NUMIO], cl
 10001 000040FB 1E                      		push	ds
 10002 000040FC 56                      		push	si
 10003 000040FD 36C51E[3F01]            		lds	bx, [ss:CALLBPB]
 10004                                  
 10005                                  PERUNIT:				; CODE XREF: seg000:4140j
 10006 00004102 8B37                    		mov	si, [bx]
 10007 00004104 43                      		inc	bx
 10008 00004105 43                      		inc	bx
 10009 00004106 26885600                		mov	[es:bp], dl
 10010 0000410A 26887601                		mov	[es:bp+1], dh
 10011 0000410E 53                      		push	bx
 10012 0000410F 51                      		push	cx
 10013 00004110 52                      		push	dx
 10014 00004111 E881CC                  		call	_$SETDPB
 10015 00004114 268B4602                		mov	ax, [es:bp+2]
 10016 00004118 363B06[0101]            		cmp	ax, [ss:MAXSEC]
 10017 0000411D 7604                    		jbe	short NOTMAX
 10018 0000411F 36A3[0101]              		mov	[ss:MAXSEC], ax
 10019                                  
 10020                                  NOTMAX:					; CODE XREF: seg000:4120j
 10021 00004123 5A                      		pop	dx
 10022 00004124 59                      		pop	cx
 10023 00004125 5B                      		pop	bx
 10024 00004126 8CD8                    		mov	ax, ds
 10025 00004128 5E                      		pop	si
 10026 00004129 1F                      		pop	ds
 10027 0000412A 26897612                		mov	[es:bp+12h], si
 10028 0000412E 268C5E14                		mov	[es:bp+14h], ds
 10029 00004132 1E                      		push	ds
 10030 00004133 56                      		push	si
 10031 00004134 FEC6                    		inc	dh
 10032 00004136 FEC2                    		inc	dl
 10033 00004138 8ED8                    		mov	ds, ax
 10034 0000413A 83C55E                  		add	bp, 94	; 5Eh ; DPBSIZ
 10035 0000413D E2C3                    		loop	PERUNIT
 10036 0000413F 5E                      		pop	si
 10037 00004140 1F                      		pop	ds
 10038 00004141 EB91                    		jmp	short PERDRV
 10039                                  ; ---------------------------------------------------------------------------
 10040                                  
 10041                                  CONTINIT:				; CODE XREF: seg000:40DCj
 10042 00004143 0E                      		push	cs
 10043 00004144 1F                      		pop	ds
 10044 00004145 89EF                    		mov	di, bp
 10045 00004147 8B2E[0101]              		mov	bp, [MAXSEC]
 10046 0000414B B8[5E40]                		mov	ax, SYSBUF
 10047 0000414E A3[3E03]                		mov	[BUFFSTRT], ax
 10048 00004151 01E8                    		add	ax, bp
 10049 00004153 83C010                  		add	ax, 10h
 10050 00004156 A3[F000]                		mov	[DPBHEAD], ax
 10051 00004159 89C2                    		mov	dx, ax
 10052 0000415B 81EA[5E40]              		sub	dx, SYSBUF
 10053 0000415F 89D5                    		mov	bp, dx
 10054 00004161 01FD                    		add	bp, di
 10055 00004163 81EDB802                		sub	bp, ADJFAC
 10056 00004167 55                      		push	bp
 10057 00004168 BF[1643]                		mov	di, MEMSTRT
 10058 0000416B 83C718                  		add	di, 18h
 10059 0000416E 8A0E[0001]              		mov	cl, [NUMIO]
 10060 00004172 30ED                    		xor	ch, ch
 10061                                  
 10062                                  TRUEDPBAD:				; CODE XREF: seg000:417Ej
 10063 00004174 83C05E                  		add	ax, 94	; 5Eh	; DPBSIZ'
 10064 00004177 AB                      		stosw
 10065 00004178 83C75C                  		add	di, 92	; 5Ch	; DPBSIZ-2
 10066 0000417B E2F7                    		loop	TRUEDPBAD
 10067 0000417D 83EF5E                  		sub	di, 94	; 5Eh	; DPBSIZ
 10068 00004180 B8FFFF                  		mov	ax, -1
 10069 00004183 AB                      		stosw
 10070 00004184 83C50F                  		add	bp, 15
 10071 00004187 B104                    		mov	cl, 4
 10072 00004189 D3ED                    		shr	bp, cl
 10073 0000418B 8CCA                    		mov	dx, cs
 10074 0000418D 01EA                    		add	dx, bp
 10075 0000418F BB0F00                  		mov	bx, 0Fh ; ??
 10076 00004192 8B0E[E300]              		mov	cx, [ENDMEM]
 10077 00004196 8CCD                    		mov	bp, cs
 10078 00004198 890E[E300]              		mov	[ENDMEM], cx
 10079 0000419C 8EC5                    		mov	es, bp
 10080 0000419E 268C06[6D01]            		mov	[es:DSKCHRET+3], es
 10081 000041A3 31C0                    		xor	ax, ax
 10082 000041A5 8ED8                    		mov	ds, ax
 10083 000041A7 8EC0                    		mov	es, ax
 10084 000041A9 BF8200                  		mov	di, 82h	; INTBASE+2
 10085 000041AC 89E8                    		mov	ax, bp
 10086 000041AE C606C000EA              		mov	byte [ENTRYPOINT], 0EAh
 10087 000041B3 C706C100[3306]          		mov	word [ENTRYPOINT+1], CALL_ENTRY
 10088 000041B9 A3C300                  		mov	[ENTRYPOINT+3], ax
 10089 000041BC C7060000[7A2C]          		mov	word [0], DIVOV
 10090 000041C2 A30200                  		mov	[2], ax
 10091 000041C5 B91100                  		mov	cx, 17
 10092 000041C8 F3AB                    		rep stosw
 10093 000041CA C7068000[1E06]          		mov	word [addr_int_abort], QUIT
 10094 000041D0 C7068400[2206]          		mov	word [addr_int_command], COMMAND
 10095 000041D6 C70688000001            		mov	word [addr_int_terminate], 100h
 10096 000041DC 89168A00                		mov	word [addr_int_terminate+2], dx
 10097 000041E0 C7068C00[3206]          		mov	word [addr_int_ctrl_c], _IRET
 10098 000041E6 C7069000[3206]          		mov	word [addr_int_fatal_abort], _IRET
 10099 000041EC C7069400[3E08]          		mov	word [addr_int_disk_read], ABSDRD
 10100 000041F2 C7069800[7808]          		mov	word [addr_int_disk_write], ABSDWRT
 10101 000041F8 C7069C00[C034]          		mov	word [addr_int_keep_process], Stay_resident
 10102 000041FE C706A000[3206]          		mov	word [addr_int_spooler], _IRET
 10103 00004204 B90C00                  		mov	cx, 12
 10104 00004207 31C0                    		xor	ax, ax
 10105 00004209 BFA800                  		mov	di, 0A8h ; 2Ah*4
 10106 0000420C F3AB                    		rep stosw
 10107 0000420E 0E                      		push	cs
 10108 0000420F 1F                      		pop	ds
 10109 00004210 0E                      		push	cs
 10110 00004211 07                      		pop	es
 10111 00004212 B8[2A02]                		mov	ax, INITBLOCK
 10112 00004215 83C00F                  		add	ax, 0Fh
 10113 00004218 B104                    		mov	cl, 4
 10114 0000421A D3E8                    		shr	ax, cl
 10115 0000421C 8CDF                    		mov	di, ds
 10116 0000421E 01C7                    		add	di, ax
 10117 00004220 47                      		inc	di
 10118 00004221 893E[8B01]              		mov	[CurrentPDB], di
 10119 00004225 55                      		push	bp
 10120 00004226 52                      		push	dx
 10121 00004227 A1[E300]                		mov	ax, [ENDMEM]
 10122 0000422A 89FA                    		mov	dx, di
 10123 0000422C E87AC9                  		call	SETMEM
 10124 0000422F 0E                      		push	cs
 10125 00004230 1F                      		pop	ds
 10126 00004231 BF1800                  		mov	di, 18h
 10127 00004234 31C0                    		xor	ax, ax
 10128 00004236 AB                      		stosw
 10129 00004237 AA                      		stosb
 10130 00004238 B0FF                    		mov	al, 0FFh
 10131 0000423A B91100                  		mov	cx, 17	; FILPERPROC - 3
 10132 0000423D F3AA                    		rep stosb
 10133 0000423F 0E                      		push	cs
 10134 00004240 07                      		pop	es
 10135 00004241 8C1E[F600]              		mov	[SFT_ADDR+2], ds
 10136 00004245 BE[D605]                		mov	si, HEADER ; "\r\nMicrosoft MS-DOS version 2.11\r\nCopyri"...
 10137 00004248 E8DAC8                  		call	OUTMES
 10138 0000424B 0E                      		push	cs
 10139 0000424C 1F                      		pop	ds
 10140 0000424D 0E                      		push	cs
 10141 0000424E 07                      		pop	es
 10142 0000424F 5A                      		pop	dx
 10143 00004250 5D                      		pop	bp
 10144 00004251 59                      		pop	cx
 10145 00004252 BE[1643]                		mov	si, MEMSTRT
 10146 00004255 8B3E[F000]              		mov	di, [DPBHEAD]
 10147 00004259 29F9                    		sub	cx, di
 10148 0000425B 39F7                    		cmp	di, si
 10149 0000425D 7607                    		jbe	short MOVJMP
 10150 0000425F 49                      		dec	cx
 10151 00004260 01CF                    		add	di, cx
 10152 00004262 01CE                    		add	si, cx
 10153 00004264 41                      		inc	cx
 10154 00004265 FD                      		std
 10155                                  
 10156                                  MOVJMP:					; CODE XREF: seg000:4260j
 10157 00004266 8EC5                    		mov	es, bp
 10158 00004268 E9D5C0                  		jmp	MOVDPB
 10159                                  
 10160                                  ; --------------- S U B	R O U T	I N E ---------------------------------------
 10161                                  
 10162                                  CHARINIT:				; CODE XREF: seg000:4083p seg000:40C1p ...
 10163 0000426B 36C606[2D01]1A          		mov	byte [ss:DEVCALL], 1Ah
 10164 00004271 36C606[2E01]00          		mov	byte [ss:DEVCALL_REQUNIT], 0
 10165 00004277 36C606[2F01]00          		mov	byte [ss:DEVCALL_REQFUNC], 0
 10166 0000427D 36C706[3001]0000        		mov	word [ss:DEVCALL_REQSTAT], 0
 10167 00004284 06                      		push	es
 10168 00004285 53                      		push	bx
 10169 00004286 50                      		push	ax
 10170 00004287 BB[2D01]                		mov	bx, DEVCALL
 10171 0000428A 0E                      		push	cs
 10172 0000428B 07                      		pop	es
 10173 0000428C E8BAD0                  		call	DEVIOCALL2
 10174 0000428F 58                      		pop	ax
 10175 00004290 5B                      		pop	bx
 10176 00004291 07                      		pop	es
 10177 00004292 C3                      		retn
 10178                                  
 10179                                  ; ---------------------------------------------------------------------------
 10180                                  
 10181 00004293 90                      align 2
 10182 00004294 0000<rept>              		times	64 dw 0
 10183                                  
 10184 00004314 0000                    INITSTACK	dw	0		; DATA XREF: seg000:4072o
 10185                                  MEMSTRT		equ	$		; DATA XREF: seg000:40D4o seg000:416Bo ...
 10186                                  ADJFAC		equ	MEMSTRT-SYSBUF
